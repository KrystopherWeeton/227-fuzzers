; ModuleID = '../../v8/src/objects/literal-objects.cc'
source_filename = "../../v8/src/objects/literal-objects.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.969"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.978", i32, i8, i8, i32, i32, %"class.std::__1::vector.984", %"class.std::__1::vector.984", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.991", i64, %"class.std::__1::unordered_map.992", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1048", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1086", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1120", %"class.std::__1::vector.1124", %"class.std::__1::vector.1124", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1053", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1057", %"class.std::__1::unique_ptr.1063", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1069", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1053" = type { %"struct.std::__1::__atomic_base.1054" }
%"struct.std::__1::__atomic_base.1054" = type { %"struct.std::__1::__cxx_atomic_impl.1055" }
%"struct.std::__1::__cxx_atomic_impl.1055" = type { %"struct.std::__1::__cxx_atomic_base_impl.1056" }
%"struct.std::__1::__cxx_atomic_base_impl.1056" = type { i32 }
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.std::__1::unique_ptr.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1069" = type { %"class.std::__1::__vector_base.1070" }
%"class.std::__1::__vector_base.1070" = type { %"struct.std::__1::pair.1071"*, %"struct.std::__1::pair.1071"*, %"class.std::__1::__compressed_pair.1072" }
%"struct.std::__1::pair.1071" = type opaque
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"struct.std::__1::pair.1071"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %union.anon.1145, i32, [4 x i8] }>
%union.anon.1145 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon.956, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon.956 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.964" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"class.std::__1::__compressed_pair.959" }
%"struct.std::__1::pair.958" = type opaque
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"struct.std::__1::pair.958"** }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.969" = type { %"class.std::__1::__vector_base.970" }
%"class.std::__1::__vector_base.970" = type { %"class.v8::internal::Handle.971"*, %"class.v8::internal::Handle.971"*, %"class.std::__1::__compressed_pair.972" }
%"class.v8::internal::Handle.971" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.v8::internal::Handle.971"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.977", [128 x i8] }
%"class.v8::internal::Vector.977" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.984" = type { %"class.std::__1::__vector_base.985" }
%"class.std::__1::__vector_base.985" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.987" }
%"struct.std::__1::__compressed_pair_elem.987" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.991" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.992" = type { %"class.std::__1::__hash_table.993" }
%"class.std::__1::__hash_table.993" = type <{ %"class.std::__1::unique_ptr.994", %"class.std::__1::__compressed_pair.1004", %"class.std::__1::__compressed_pair.1009", %"class.std::__1::__compressed_pair.1012", [4 x i8] }>
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996", %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"struct.std::__1::__hash_node_base.997"** }
%"struct.std::__1::__hash_node_base.997" = type { %"struct.std::__1::__hash_node_base.997"* }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.std::__1::__bucket_list_deallocator.999" }
%"class.std::__1::__bucket_list_deallocator.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"struct.std::__1::__hash_node_base.997" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1016", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1045", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1046", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1016" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1041, %union.anon.1043, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1041 = type { i64 }
%union.anon.1043 = type { i64 }
%"class.std::__1::weak_ptr.1045" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1046" = type { %"class.v8::PersistentBase.1047" }
%"class.v8::PersistentBase.1047" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1017", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1017" = type { %"class.std::__1::__hash_table.1018" }
%"class.std::__1::__hash_table.1018" = type <{ %"class.std::__1::unique_ptr.1019", %"class.std::__1::__compressed_pair.1029", %"class.std::__1::__compressed_pair.1034", %"class.std::__1::__compressed_pair.1037", [4 x i8] }>
%"class.std::__1::unique_ptr.1019" = type { %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021", %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"struct.std::__1::__hash_node_base.1022"** }
%"struct.std::__1::__hash_node_base.1022" = type { %"struct.std::__1::__hash_node_base.1022"* }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.std::__1::__bucket_list_deallocator.1024" }
%"class.std::__1::__bucket_list_deallocator.1024" = type { %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"struct.std::__1::__hash_node_base.1022" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1077", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1094" }
%"class.std::__1::unordered_map.1094" = type { %"class.std::__1::__hash_table.1095" }
%"class.std::__1::__hash_table.1095" = type <{ %"class.std::__1::unique_ptr.1096", %"class.std::__1::__compressed_pair.1106", %"class.std::__1::__compressed_pair.1111", %"class.std::__1::__compressed_pair.1114", [4 x i8] }>
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098", %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"struct.std::__1::__hash_node_base.1099"** }
%"struct.std::__1::__hash_node_base.1099" = type { %"struct.std::__1::__hash_node_base.1099"* }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.std::__1::__bucket_list_deallocator.1101" }
%"class.std::__1::__bucket_list_deallocator.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"struct.std::__1::__hash_node_base.1099" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1120" = type { %"struct.std::__1::__atomic_base.1121" }
%"struct.std::__1::__atomic_base.1121" = type { %"struct.std::__1::__cxx_atomic_impl.1122" }
%"struct.std::__1::__cxx_atomic_impl.1122" = type { %"struct.std::__1::__cxx_atomic_base_impl.1123" }
%"struct.std::__1::__cxx_atomic_base_impl.1123" = type { %"class.std::__1::vector.1124"* }
%"class.std::__1::vector.1124" = type { %"class.std::__1::__vector_base.1125" }
%"class.std::__1::__vector_base.1125" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1126" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef" = type { %"class.v8::internal::AccessorPair" }
%"class.v8::internal::AccessorPair" = type { %"class.v8::internal::TorqueGeneratedAccessorPair" }
%"class.v8::internal::TorqueGeneratedAccessorPair" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::FactoryBase.1051" = type { i8 }
%"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef" = type { %"class.v8::internal::NumberDictionary" }
%"class.v8::internal::NumberDictionary" = type { %"class.v8::internal::Dictionary" }
%"class.v8::internal::Dictionary" = type { %"class.v8::internal::HashTable" }
%"class.v8::internal::HashTable" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::HashTableBase" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::ClassLiteral" = type { %"class.v8::internal::Expression", i32, %"class.v8::internal::ClassScope"*, %"class.v8::internal::Expression"*, %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::ZoneList.1136"*, %"class.v8::internal::ZoneList.1136"*, %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"* }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstNode" = type { i32, i32 }
%"class.v8::internal::ClassScope" = type opaque
%"class.v8::internal::ZoneList.1136" = type { %"class.v8::internal::ClassLiteralProperty"**, i32, i32 }
%"class.v8::internal::ClassLiteralProperty" = type { %"class.v8::internal::LiteralProperty", i8, i8, i8, %"class.v8::internal::Variable"* }
%"class.v8::internal::LiteralProperty" = type { %"class.v8::internal::PointerWithPayload", %"class.v8::internal::Expression"* }
%"class.v8::internal::PointerWithPayload" = type { i64 }
%"class.v8::internal::FunctionLiteral" = type { %"class.v8::internal::Expression", i32, i32, i32, i32, i32, i32, %"class.v8::internal::AstConsString"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ZoneList", %"class.v8::internal::AstConsString"*, %"class.v8::internal::Handle.957", %"class.v8::internal::ProducedPreparseData"* }
%"class.v8::internal::DeclarationScope" = type opaque
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::Statement"**, i32, i32 }
%"class.v8::internal::Statement" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstConsString" = type { %"class.v8::internal::Handle.957", %"struct.v8::internal::AstConsString::Segment" }
%"struct.v8::internal::AstConsString::Segment" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::AstConsString::Segment"* }
%"class.v8::internal::Handle.957" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ProducedPreparseData" = type { i32 (...)** }
%"class.v8::internal::Variable" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, i32, i32, i16, [6 x i8] }>
%"class.v8::internal::Scope" = type opaque
%"class.v8::internal::ObjectDescriptor" = type { i32, i32, i32, i32, i32, i32, %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.971", %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1138", %"class.v8::internal::Handle.1139" }
%"class.v8::internal::Handle.1137" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1134" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1138" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1139" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Literal" = type { %"class.v8::internal::Expression", %union.anon.1140 }
%union.anon.1140 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Descriptor" = type <{ %"class.v8::internal::Handle.1132", %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::PropertyDetails", [4 x i8] }>
%"class.v8::internal::Handle.1132" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::MaybeObjectHandle" = type { i32, %"class.v8::internal::MaybeHandle" }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef" = type { %"class.v8::internal::DescriptorArray" }
%"class.v8::internal::DescriptorArray" = type { %"class.v8::internal::TorqueGeneratedDescriptorArray" }
%"class.v8::internal::TorqueGeneratedDescriptorArray" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::LocalHandleScope" = type { %"class.v8::internal::LocalHeap"*, i64*, i64* }
%"class.v8::internal::ObjectDescriptor.1144" = type { i32, i32, i32, i32, i32, i32, %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.971", %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1138", %"class.v8::internal::Handle.1139" }
%"class.v8::internal::ArrayBoilerplateDescription" = type { %"class.v8::internal::TorqueGeneratedArrayBoilerplateDescription" }
%"class.v8::internal::TorqueGeneratedArrayBoilerplateDescription" = type { %"class.v8::internal::Struct" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.v8::internal::Brief" = type { i64 }
%"class.v8::internal::RegExpBoilerplateDescription" = type { %"class.v8::internal::TorqueGeneratedRegExpBoilerplateDescription" }
%"class.v8::internal::TorqueGeneratedRegExpBoilerplateDescription" = type { %"class.v8::internal::Struct" }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8::internal::Handle<v8::internal::SwissNameDictionary>::ObjectRef" = type { %"class.v8::internal::SwissNameDictionary" }
%"class.v8::internal::SwissNameDictionary" = type { %"class.v8::internal::HeapObject" }

$_ZN2v88internal16ClassBoilerplate23AddToPropertiesTemplateINS0_7IsolateENS0_14NameDictionaryEEEvPT_NS0_6HandleIT0_EENS7_INS0_4NameEEEiNS1_9ValueKindENS0_3SmiE = comdat any

$_ZN2v88internal16ClassBoilerplate23AddToPropertiesTemplateINS0_12LocalIsolateENS0_14NameDictionaryEEEvPT_NS0_6HandleIT0_EENS7_INS0_4NameEEEiNS1_9ValueKindENS0_3SmiE = comdat any

$_ZN2v88internal16ClassBoilerplate23AddToPropertiesTemplateINS0_7IsolateENS0_19SwissNameDictionaryEEEvPT_NS0_6HandleIT0_EENS7_INS0_4NameEEEiNS1_9ValueKindENS0_3SmiE = comdat any

$_ZN2v88internal16ClassBoilerplate21AddToElementsTemplateINS0_7IsolateEEEvPT_NS0_6HandleINS0_16NumberDictionaryEEEjiNS1_9ValueKindENS0_3SmiE = comdat any

$_ZN2v88internal16ClassBoilerplate21AddToElementsTemplateINS0_12LocalIsolateEEEvPT_NS0_6HandleINS0_16NumberDictionaryEEEjiNS1_9ValueKindENS0_3SmiE = comdat any

$_ZN2v88internal16ClassBoilerplate21BuildClassBoilerplateINS0_7IsolateEEENS0_6HandleIS1_EEPT_PNS0_12ClassLiteralE = comdat any

$_ZN2v88internal16ObjectDescriptorINS0_7IsolateEE15CreateTemplatesEPS2_ = comdat any

$_ZN2v88internal16ObjectDescriptorINS0_7IsolateEE11AddConstantEPS2_NS0_6HandleINS0_4NameEEENS5_INS0_6ObjectEEENS0_18PropertyAttributesE = comdat any

$_ZN2v88internal16ObjectDescriptorINS0_7IsolateEE16AddNamedPropertyEPS2_NS0_6HandleINS0_4NameEEENS0_16ClassBoilerplate9ValueKindEi = comdat any

$_ZN2v88internal16ClassBoilerplate21BuildClassBoilerplateINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_PNS0_12ClassLiteralE = comdat any

$_ZN2v88internal16ObjectDescriptorINS0_12LocalIsolateEE15CreateTemplatesEPS2_ = comdat any

$_ZN2v88internal16ObjectDescriptorINS0_12LocalIsolateEE11AddConstantEPS2_NS0_6HandleINS0_4NameEEENS5_INS0_6ObjectEEENS0_18PropertyAttributesE = comdat any

$_ZN2v88internal16ObjectDescriptorINS0_12LocalIsolateEE16AddNamedPropertyEPS2_NS0_6HandleINS0_4NameEEENS0_16ClassBoilerplate9ValueKindEi = comdat any

$_ZN2v88internal16LocalHandleScope14CloseAndEscapeINS0_16ClassBoilerplateEEENS0_6HandleIT_EES6_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE = comdat any

$_ZN2v88internal19SwissNameDictionary3AddINS0_7IsolateEEENS0_6HandleIS1_EEPT_S5_NS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal19SwissNameDictionary11AddInternalENS0_4NameENS0_6ObjectENS0_15PropertyDetailsE = comdat any

$_ZN2v88internal15DescriptorArray6AppendEPNS0_10DescriptorE = comdat any

$_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE = comdat any

$_ZN2v88internal12BinarySearchILNS0_10SearchModeE1ENS0_15DescriptorArrayEEEiPT0_NS0_4NameEiPi = comdat any

@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c", \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.3 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"*dict == *dictionary\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal16ClassBoilerplate23AddToPropertiesTemplateINS0_7IsolateENS0_14NameDictionaryEEEvPT_NS0_6HandleIT0_EENS7_INS0_4NameEEEiNS1_9ValueKindENS0_3SmiE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i32, i64) local_unnamed_addr #0 comdat align 2 {
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_123AddToDictionaryTemplateINS0_7IsolateENS0_14NameDictionaryENS0_6HandleINS0_4NameEEEEEvPT_NS5_IT0_EET1_iNS0_16ClassBoilerplate9ValueKindENS0_3SmiE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i32 %3, i32 %4, i64 %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_123AddToDictionaryTemplateINS0_7IsolateENS0_14NameDictionaryENS0_6HandleINS0_4NameEEEEEvPT_NS5_IT0_EET1_iNS0_16ClassBoilerplate9ValueKindENS0_3SmiE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i32, i64) unnamed_addr #0 {
  %7 = alloca %"class.v8::internal::InternalIndex", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::AccessorPair", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %11 = bitcast %"class.v8::internal::InternalIndex"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = load i64, i64* %1, align 8
  %13 = load i64, i64* %2, align 8
  %14 = add i64 %13, 3
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = lshr i32 %16, 2
  %18 = add i64 %12, 15
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = ashr i32 %20, 1
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %23 = load i64, i64* %22, align 8
  %24 = add nsw i32 %21, -1
  %25 = and i32 %24, %17
  %26 = zext i32 %25 to i64
  %27 = mul i64 %26, 51539607552
  %28 = add i64 %27, 85899345920
  %29 = ashr exact i64 %28, 32
  %30 = add i64 %12, 7
  %31 = add i64 %29, %30
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = trunc i64 %23 to i32
  %35 = icmp eq i32 %33, %34
  br i1 %35, label %55, label %36

36:                                               ; preds = %6
  %37 = trunc i64 %13 to i32
  %38 = icmp eq i32 %33, %37
  br i1 %38, label %103, label %42

39:                                               ; preds = %42
  %40 = add i32 %43, 1
  %41 = icmp eq i32 %53, %37
  br i1 %41, label %101, label %42

42:                                               ; preds = %36, %39
  %43 = phi i32 [ %40, %39 ], [ 1, %36 ]
  %44 = phi i32 [ %46, %39 ], [ %25, %36 ]
  %45 = add i32 %44, %43
  %46 = and i32 %45, %24
  %47 = zext i32 %46 to i64
  %48 = mul i64 %47, 51539607552
  %49 = add i64 %48, 85899345920
  %50 = ashr exact i64 %49, 32
  %51 = add i64 %50, %30
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = icmp eq i32 %53, %34
  br i1 %54, label %55, label %39

55:                                               ; preds = %42, %6
  %56 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %7, i64 0, i32 0
  store i64 -1, i64* %56, align 8
  %57 = icmp ne i32 %4, 0
  %58 = zext i1 %57 to i32
  %59 = shl i32 %3, 8
  %60 = add i32 %59, 1536
  %61 = or i32 %60, %58
  %62 = or i32 %61, 16
  %63 = icmp eq i32 %4, 0
  br i1 %63, label %64, label %83

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %66 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %65, align 8
  %67 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %66, i64 %5) #12
  br label %92

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = icmp eq i64* %72, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %70
  %77 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %78

78:                                               ; preds = %76, %70
  %79 = phi i64* [ %77, %76 ], [ %72, %70 ]
  %80 = ptrtoint i64* %79 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  store i64* %82, i64** %71, align 8
  store i64 %5, i64* %79, align 8
  br label %92

83:                                               ; preds = %55
  %84 = icmp ne i32 %4, 1
  %85 = zext i1 %84 to i32
  %86 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %87 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase"* %86) #12
  %88 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #12
  %89 = load i64, i64* %87, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %8, i64 0, i32 0
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %91, i32 %85, i64 %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #12
  br label %92

92:                                               ; preds = %78, %68, %83
  %93 = phi i64* [ %87, %83 ], [ %69, %68 ], [ %79, %78 ]
  %94 = call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE31AddNoUpdateNextEnumerationIndexINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %93, i32 %62, %"class.v8::internal::InternalIndex"* nonnull %7) #12
  %95 = load i64, i64* %94, align 8
  %96 = load i64, i64* %1, align 8
  %97 = trunc i64 %95 to i32
  %98 = trunc i64 %96 to i32
  %99 = icmp eq i32 %97, %98
  br i1 %99, label %391, label %100, !prof !2

100:                                              ; preds = %92
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

101:                                              ; preds = %39
  %102 = zext i32 %46 to i64
  br label %103

103:                                              ; preds = %101, %36
  %104 = phi i64 [ %27, %36 ], [ %48, %101 ]
  %105 = phi i64 [ %26, %36 ], [ %102, %101 ]
  %106 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %7, i64 0, i32 0
  store i64 %105, i64* %106, align 8
  %107 = add i64 %104, 120259084288
  %108 = ashr exact i64 %107, 32
  %109 = add i64 %30, %108
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, -512
  %113 = add nsw i32 %3, 6
  %114 = and i64 %12, -4294967296
  %115 = add i64 %104, 103079215104
  %116 = ashr exact i64 %115, 32
  %117 = add i64 %30, %116
  %118 = inttoptr i64 %117 to i32*
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %114, %120
  %122 = icmp eq i32 %4, 0
  br i1 %122, label %123, label %302

123:                                              ; preds = %103
  %124 = and i64 %120, 1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %260, label %126

126:                                              ; preds = %123
  %127 = add i64 %121, -1
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = zext i32 %129 to i64
  %131 = or i64 %114, %130
  %132 = add i64 %131, 7
  %133 = inttoptr i64 %132 to i16*
  %134 = load atomic i16, i16* %133 monotonic, align 2
  %135 = icmp eq i16 %134, 87
  br i1 %135, label %136, label %263

136:                                              ; preds = %126
  %137 = add i64 %121, 3
  %138 = inttoptr i64 %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  %142 = ashr i32 %139, 1
  %143 = select i1 %141, i32 %142, i32 -1
  %144 = add i64 %121, 7
  %145 = inttoptr i64 %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = ashr i32 %146, 1
  %150 = select i1 %148, i32 %149, i32 -1
  %151 = icmp slt i32 %143, %3
  %152 = icmp slt i32 %150, %3
  %153 = and i1 %151, %152
  br i1 %153, label %154, label %190

154:                                              ; preds = %136
  %155 = or i32 %112, 32
  store atomic volatile i32 %155, i32* %110 monotonic, align 4
  %156 = load i64, i64* %1, align 8
  %157 = load i64, i64* %106, align 8
  %158 = mul i64 %157, 51539607552
  %159 = add i64 %158, 103079215104
  %160 = ashr exact i64 %159, 32
  %161 = add i64 %156, 7
  %162 = add i64 %161, %160
  %163 = inttoptr i64 %162 to i32*
  %164 = trunc i64 %5 to i32
  store atomic volatile i32 %164, i32* %163 monotonic, align 4
  %165 = and i64 %5, 1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %391, label %167

167:                                              ; preds = %154
  %168 = and i64 %156, -262144
  %169 = or i64 %168, 8
  %170 = inttoptr i64 %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = and i64 %171, 262144
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %178, label %174

174:                                              ; preds = %167
  %175 = or i64 %168, 16
  %176 = inttoptr i64 %175 to %"class.v8::internal::Heap"**
  %177 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %176, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %177, i64 %156, i64 %162, i64 %5) #12
  br label %178

178:                                              ; preds = %174, %167
  %179 = and i64 %5, -262144
  %180 = or i64 %179, 8
  %181 = inttoptr i64 %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = and i64 %182, 24
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %391, label %185

185:                                              ; preds = %178
  %186 = load i64, i64* %170, align 8
  %187 = and i64 %186, 24
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %391

189:                                              ; preds = %185
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %156, i64 %162, i64 %5) #12
  br label %391

190:                                              ; preds = %136
  %191 = icmp eq i32 %143, -1
  %192 = xor i1 %151, true
  %193 = or i1 %191, %192
  br i1 %193, label %223, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %196 = load i64, i64* %195, align 8
  %197 = trunc i64 %196 to i32
  store atomic volatile i32 %197, i32* %138 monotonic, align 4
  %198 = and i64 %196, 1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %391, label %200

200:                                              ; preds = %194
  %201 = and i64 %121, -262144
  %202 = or i64 %201, 8
  %203 = inttoptr i64 %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = and i64 %204, 262144
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %211, label %207

207:                                              ; preds = %200
  %208 = or i64 %201, 16
  %209 = inttoptr i64 %208 to %"class.v8::internal::Heap"**
  %210 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %209, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %210, i64 %121, i64 %137, i64 %196) #12
  br label %211

211:                                              ; preds = %207, %200
  %212 = and i64 %196, -262144
  %213 = or i64 %212, 8
  %214 = inttoptr i64 %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = and i64 %215, 24
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %391, label %218

218:                                              ; preds = %211
  %219 = load i64, i64* %203, align 8
  %220 = and i64 %219, 24
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %222, label %391

222:                                              ; preds = %218
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %121, i64 %137, i64 %196) #12
  br label %391

223:                                              ; preds = %190
  %224 = icmp ne i32 %150, -1
  %225 = and i1 %224, %152
  br i1 %225, label %226, label %255

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %228 = load i64, i64* %227, align 8
  %229 = trunc i64 %228 to i32
  store atomic volatile i32 %229, i32* %145 monotonic, align 4
  %230 = and i64 %228, 1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %391, label %232

232:                                              ; preds = %226
  %233 = and i64 %121, -262144
  %234 = or i64 %233, 8
  %235 = inttoptr i64 %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = and i64 %236, 262144
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %243, label %239

239:                                              ; preds = %232
  %240 = or i64 %233, 16
  %241 = inttoptr i64 %240 to %"class.v8::internal::Heap"**
  %242 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %241, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %242, i64 %121, i64 %144, i64 %228) #12
  br label %243

243:                                              ; preds = %239, %232
  %244 = and i64 %228, -262144
  %245 = or i64 %244, 8
  %246 = inttoptr i64 %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = and i64 %247, 24
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %391, label %250

250:                                              ; preds = %243
  %251 = load i64, i64* %235, align 8
  %252 = and i64 %251, 24
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %254, label %391

254:                                              ; preds = %250
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %121, i64 %144, i64 %228) #12
  br label %391

255:                                              ; preds = %223
  %256 = load atomic i32, i32* %110 monotonic, align 4
  %257 = and i32 %256, 510
  %258 = shl i32 %113, 9
  %259 = or i32 %257, %258
  store atomic volatile i32 %259, i32* %110 monotonic, align 4
  br label %391

260:                                              ; preds = %123
  %261 = ashr i32 %119, 1
  %262 = icmp slt i32 %261, %3
  br i1 %262, label %263, label %299

263:                                              ; preds = %126, %260
  %264 = or i32 %112, 32
  store atomic volatile i32 %264, i32* %110 monotonic, align 4
  %265 = load i64, i64* %1, align 8
  %266 = load i64, i64* %106, align 8
  %267 = mul i64 %266, 51539607552
  %268 = add i64 %267, 103079215104
  %269 = ashr exact i64 %268, 32
  %270 = add i64 %265, 7
  %271 = add i64 %270, %269
  %272 = inttoptr i64 %271 to i32*
  %273 = trunc i64 %5 to i32
  store atomic volatile i32 %273, i32* %272 monotonic, align 4
  %274 = and i64 %5, 1
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %391, label %276

276:                                              ; preds = %263
  %277 = and i64 %265, -262144
  %278 = or i64 %277, 8
  %279 = inttoptr i64 %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = and i64 %280, 262144
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %287, label %283

283:                                              ; preds = %276
  %284 = or i64 %277, 16
  %285 = inttoptr i64 %284 to %"class.v8::internal::Heap"**
  %286 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %285, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %286, i64 %265, i64 %271, i64 %5) #12
  br label %287

287:                                              ; preds = %283, %276
  %288 = and i64 %5, -262144
  %289 = or i64 %288, 8
  %290 = inttoptr i64 %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = and i64 %291, 24
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %391, label %294

294:                                              ; preds = %287
  %295 = load i64, i64* %279, align 8
  %296 = and i64 %295, 24
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %391

298:                                              ; preds = %294
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %265, i64 %271, i64 %5) #12
  br label %391

299:                                              ; preds = %260
  %300 = shl i32 %113, 9
  %301 = or i32 %300, 32
  store atomic volatile i32 %301, i32* %110 monotonic, align 4
  br label %391

302:                                              ; preds = %103
  %303 = icmp ne i32 %4, 1
  %304 = zext i1 %303 to i32
  %305 = and i64 %120, 1
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %334, label %307

307:                                              ; preds = %302
  %308 = add i64 %121, -1
  %309 = inttoptr i64 %308 to i32*
  %310 = load atomic i32, i32* %309 monotonic, align 4
  %311 = zext i32 %310 to i64
  %312 = or i64 %114, %311
  %313 = add i64 %312, 7
  %314 = inttoptr i64 %313 to i16*
  %315 = load atomic i16, i16* %314 monotonic, align 2
  %316 = icmp eq i16 %315, 87
  br i1 %316, label %317, label %337

317:                                              ; preds = %307
  %318 = bitcast %"class.v8::internal::AccessorPair"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %318) #12
  %319 = getelementptr inbounds %"class.v8::internal::AccessorPair", %"class.v8::internal::AccessorPair"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %121, i64* %319, align 8
  %320 = select i1 %303, i64 7, i64 3
  %321 = add i64 %121, %320
  %322 = inttoptr i64 %321 to i32*
  %323 = load i32, i32* %322, align 4
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = ashr i32 %323, 1
  %327 = select i1 %325, i32 %326, i32 -1
  %328 = icmp slt i32 %327, %3
  br i1 %328, label %329, label %330

329:                                              ; preds = %317
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %9, i32 %304, i64 %5)
  br label %333

330:                                              ; preds = %317
  %331 = shl i32 %113, 9
  %332 = or i32 %331, 34
  store atomic volatile i32 %332, i32* %110 monotonic, align 4
  br label %333

333:                                              ; preds = %330, %329
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %318) #12
  br label %391

334:                                              ; preds = %302
  %335 = ashr i32 %119, 1
  %336 = icmp slt i32 %335, %3
  br i1 %336, label %337, label %388

337:                                              ; preds = %307, %334
  %338 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %339 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase"* %338) #12
  %340 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %340) #12
  %341 = load i64, i64* %339, align 8
  %342 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %341, i64* %342, align 8
  %343 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %10, i64 0, i32 0
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %343, i32 %304, i64 %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %340) #12
  %344 = or i32 %112, 34
  %345 = load i64, i64* %1, align 8
  %346 = load i64, i64* %106, align 8
  %347 = mul i64 %346, 51539607552
  %348 = add i64 %347, 120259084288
  %349 = ashr exact i64 %348, 32
  %350 = add i64 %345, 7
  %351 = add i64 %350, %349
  %352 = inttoptr i64 %351 to i32*
  store atomic volatile i32 %344, i32* %352 monotonic, align 4
  %353 = load i64, i64* %1, align 8
  %354 = load i64, i64* %106, align 8
  %355 = load i64, i64* %339, align 8
  %356 = mul i64 %354, 51539607552
  %357 = add i64 %356, 103079215104
  %358 = ashr exact i64 %357, 32
  %359 = add i64 %353, 7
  %360 = add i64 %359, %358
  %361 = inttoptr i64 %360 to i32*
  %362 = trunc i64 %355 to i32
  store atomic volatile i32 %362, i32* %361 monotonic, align 4
  %363 = and i64 %355, 1
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %391, label %365

365:                                              ; preds = %337
  %366 = and i64 %353, -262144
  %367 = or i64 %366, 8
  %368 = inttoptr i64 %367 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = and i64 %369, 262144
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %376, label %372

372:                                              ; preds = %365
  %373 = or i64 %366, 16
  %374 = inttoptr i64 %373 to %"class.v8::internal::Heap"**
  %375 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %374, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %375, i64 %353, i64 %360, i64 %355) #12
  br label %376

376:                                              ; preds = %372, %365
  %377 = and i64 %355, -262144
  %378 = or i64 %377, 8
  %379 = inttoptr i64 %378 to i64*
  %380 = load i64, i64* %379, align 8
  %381 = and i64 %380, 24
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %391, label %383

383:                                              ; preds = %376
  %384 = load i64, i64* %368, align 8
  %385 = and i64 %384, 24
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %387, label %391

387:                                              ; preds = %383
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %353, i64 %360, i64 %355) #12
  br label %391

388:                                              ; preds = %334
  %389 = shl i32 %113, 9
  %390 = or i32 %389, 32
  store atomic volatile i32 %390, i32* %110 monotonic, align 4
  br label %391

391:                                              ; preds = %299, %388, %333, %254, %250, %243, %226, %222, %218, %211, %194, %189, %185, %178, %154, %255, %263, %287, %294, %298, %337, %376, %383, %387, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal16ClassBoilerplate23AddToPropertiesTemplateINS0_12LocalIsolateENS0_14NameDictionaryEEEvPT_NS0_6HandleIT0_EENS7_INS0_4NameEEEiNS1_9ValueKindENS0_3SmiE(%"class.v8::internal::LocalIsolate"*, i64*, i64*, i32, i32, i64) local_unnamed_addr #0 comdat align 2 {
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_123AddToDictionaryTemplateINS0_12LocalIsolateENS0_14NameDictionaryENS0_6HandleINS0_4NameEEEEEvPT_NS5_IT0_EET1_iNS0_16ClassBoilerplate9ValueKindENS0_3SmiE(%"class.v8::internal::LocalIsolate"* %0, i64* %1, i64* %2, i32 %3, i32 %4, i64 %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_123AddToDictionaryTemplateINS0_12LocalIsolateENS0_14NameDictionaryENS0_6HandleINS0_4NameEEEEEvPT_NS5_IT0_EET1_iNS0_16ClassBoilerplate9ValueKindENS0_3SmiE(%"class.v8::internal::LocalIsolate"*, i64*, i64*, i32, i32, i64) unnamed_addr #0 {
  %7 = alloca %"class.v8::internal::InternalIndex", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::AccessorPair", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %11 = bitcast %"class.v8::internal::InternalIndex"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = load i64, i64* %1, align 8
  %13 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = load i64, i64* %2, align 8
  %16 = add i64 %15, 3
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = lshr i32 %18, 2
  %20 = add i64 %12, 15
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = ashr i32 %22, 1
  %24 = getelementptr inbounds i64, i64* %14, i64 4
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i32 %23, -1
  %27 = and i32 %26, %19
  %28 = zext i32 %27 to i64
  %29 = mul i64 %28, 51539607552
  %30 = add i64 %29, 85899345920
  %31 = ashr exact i64 %30, 32
  %32 = add i64 %12, 7
  %33 = add i64 %31, %32
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = trunc i64 %25 to i32
  %37 = icmp eq i32 %35, %36
  br i1 %37, label %57, label %38

38:                                               ; preds = %6
  %39 = trunc i64 %15 to i32
  %40 = icmp eq i32 %35, %39
  br i1 %40, label %108, label %44

41:                                               ; preds = %44
  %42 = add i32 %45, 1
  %43 = icmp eq i32 %55, %39
  br i1 %43, label %106, label %44

44:                                               ; preds = %38, %41
  %45 = phi i32 [ %42, %41 ], [ 1, %38 ]
  %46 = phi i32 [ %48, %41 ], [ %27, %38 ]
  %47 = add i32 %46, %45
  %48 = and i32 %47, %26
  %49 = zext i32 %48 to i64
  %50 = mul i64 %49, 51539607552
  %51 = add i64 %50, 85899345920
  %52 = ashr exact i64 %51, 32
  %53 = add i64 %52, %32
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = icmp eq i32 %55, %36
  br i1 %56, label %57, label %41

57:                                               ; preds = %44, %6
  %58 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %7, i64 0, i32 0
  store i64 -1, i64* %58, align 8
  %59 = icmp ne i32 %4, 0
  %60 = zext i1 %59 to i32
  %61 = shl i32 %3, 8
  %62 = add i32 %61, 1536
  %63 = or i32 %62, %60
  %64 = or i32 %63, 16
  %65 = icmp eq i32 %4, 0
  br i1 %65, label %66, label %88

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 8, !range !3
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1
  %72 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %71, i64 %5) #12
  br label %97

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %75 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %75, i64 0, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %75, i64 0, i32 0, i32 1
  %79 = load i64*, i64** %78, align 8
  %80 = icmp eq i64* %77, %79
  br i1 %80, label %81, label %84

81:                                               ; preds = %73
  %82 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %75) #12
  %83 = load i64*, i64** %76, align 8
  br label %84

84:                                               ; preds = %81, %73
  %85 = phi i64* [ %83, %81 ], [ %77, %73 ]
  %86 = phi i64* [ %82, %81 ], [ %77, %73 ]
  %87 = getelementptr inbounds i64, i64* %85, i64 1
  store i64* %87, i64** %76, align 8
  store i64 %5, i64* %86, align 8
  br label %97

88:                                               ; preds = %57
  %89 = icmp ne i32 %4, 1
  %90 = zext i1 %89 to i32
  %91 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1051"*
  %92 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase.1051"* %91) #12
  %93 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #12
  %94 = load i64, i64* %92, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %8, i64 0, i32 0
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %96, i32 %90, i64 %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #12
  br label %97

97:                                               ; preds = %84, %70, %88
  %98 = phi i64* [ %92, %88 ], [ %72, %70 ], [ %86, %84 ]
  %99 = call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE31AddNoUpdateNextEnumerationIndexINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::LocalIsolate"* %0, i64* %1, i64* %2, i64* %98, i32 %64, %"class.v8::internal::InternalIndex"* nonnull %7) #12
  %100 = load i64, i64* %99, align 8
  %101 = load i64, i64* %1, align 8
  %102 = trunc i64 %100 to i32
  %103 = trunc i64 %101 to i32
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %396, label %105, !prof !2

105:                                              ; preds = %97
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

106:                                              ; preds = %41
  %107 = zext i32 %48 to i64
  br label %108

108:                                              ; preds = %106, %38
  %109 = phi i64 [ %29, %38 ], [ %50, %106 ]
  %110 = phi i64 [ %28, %38 ], [ %107, %106 ]
  %111 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %7, i64 0, i32 0
  store i64 %110, i64* %111, align 8
  %112 = add i64 %109, 120259084288
  %113 = ashr exact i64 %112, 32
  %114 = add i64 %32, %113
  %115 = inttoptr i64 %114 to i32*
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, -512
  %118 = add nsw i32 %3, 6
  %119 = and i64 %12, -4294967296
  %120 = add i64 %109, 103079215104
  %121 = ashr exact i64 %120, 32
  %122 = add i64 %32, %121
  %123 = inttoptr i64 %122 to i32*
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = zext i32 %124 to i64
  %126 = or i64 %119, %125
  %127 = icmp eq i32 %4, 0
  br i1 %127, label %128, label %307

128:                                              ; preds = %108
  %129 = and i64 %125, 1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %265, label %131

131:                                              ; preds = %128
  %132 = add i64 %126, -1
  %133 = inttoptr i64 %132 to i32*
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = zext i32 %134 to i64
  %136 = or i64 %119, %135
  %137 = add i64 %136, 7
  %138 = inttoptr i64 %137 to i16*
  %139 = load atomic i16, i16* %138 monotonic, align 2
  %140 = icmp eq i16 %139, 87
  br i1 %140, label %141, label %268

141:                                              ; preds = %131
  %142 = add i64 %126, 3
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  %147 = ashr i32 %144, 1
  %148 = select i1 %146, i32 %147, i32 -1
  %149 = add i64 %126, 7
  %150 = inttoptr i64 %149 to i32*
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = ashr i32 %151, 1
  %155 = select i1 %153, i32 %154, i32 -1
  %156 = icmp slt i32 %148, %3
  %157 = icmp slt i32 %155, %3
  %158 = and i1 %156, %157
  br i1 %158, label %159, label %195

159:                                              ; preds = %141
  %160 = or i32 %117, 32
  store atomic volatile i32 %160, i32* %115 monotonic, align 4
  %161 = load i64, i64* %1, align 8
  %162 = load i64, i64* %111, align 8
  %163 = mul i64 %162, 51539607552
  %164 = add i64 %163, 103079215104
  %165 = ashr exact i64 %164, 32
  %166 = add i64 %161, 7
  %167 = add i64 %166, %165
  %168 = inttoptr i64 %167 to i32*
  %169 = trunc i64 %5 to i32
  store atomic volatile i32 %169, i32* %168 monotonic, align 4
  %170 = and i64 %5, 1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %396, label %172

172:                                              ; preds = %159
  %173 = and i64 %161, -262144
  %174 = or i64 %173, 8
  %175 = inttoptr i64 %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = and i64 %176, 262144
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %183, label %179

179:                                              ; preds = %172
  %180 = or i64 %173, 16
  %181 = inttoptr i64 %180 to %"class.v8::internal::Heap"**
  %182 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %181, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %182, i64 %161, i64 %167, i64 %5) #12
  br label %183

183:                                              ; preds = %179, %172
  %184 = and i64 %5, -262144
  %185 = or i64 %184, 8
  %186 = inttoptr i64 %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = and i64 %187, 24
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %396, label %190

190:                                              ; preds = %183
  %191 = load i64, i64* %175, align 8
  %192 = and i64 %191, 24
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %396

194:                                              ; preds = %190
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %161, i64 %167, i64 %5) #12
  br label %396

195:                                              ; preds = %141
  %196 = icmp eq i32 %148, -1
  %197 = xor i1 %156, true
  %198 = or i1 %196, %197
  br i1 %198, label %228, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds i64, i64* %14, i64 6
  %201 = load i64, i64* %200, align 8
  %202 = trunc i64 %201 to i32
  store atomic volatile i32 %202, i32* %143 monotonic, align 4
  %203 = and i64 %201, 1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %396, label %205

205:                                              ; preds = %199
  %206 = and i64 %126, -262144
  %207 = or i64 %206, 8
  %208 = inttoptr i64 %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = and i64 %209, 262144
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %216, label %212

212:                                              ; preds = %205
  %213 = or i64 %206, 16
  %214 = inttoptr i64 %213 to %"class.v8::internal::Heap"**
  %215 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %214, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %215, i64 %126, i64 %142, i64 %201) #12
  br label %216

216:                                              ; preds = %212, %205
  %217 = and i64 %201, -262144
  %218 = or i64 %217, 8
  %219 = inttoptr i64 %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = and i64 %220, 24
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %396, label %223

223:                                              ; preds = %216
  %224 = load i64, i64* %208, align 8
  %225 = and i64 %224, 24
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %396

227:                                              ; preds = %223
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %126, i64 %142, i64 %201) #12
  br label %396

228:                                              ; preds = %195
  %229 = icmp ne i32 %155, -1
  %230 = and i1 %229, %157
  br i1 %230, label %231, label %260

231:                                              ; preds = %228
  %232 = getelementptr inbounds i64, i64* %14, i64 6
  %233 = load i64, i64* %232, align 8
  %234 = trunc i64 %233 to i32
  store atomic volatile i32 %234, i32* %150 monotonic, align 4
  %235 = and i64 %233, 1
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %396, label %237

237:                                              ; preds = %231
  %238 = and i64 %126, -262144
  %239 = or i64 %238, 8
  %240 = inttoptr i64 %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = and i64 %241, 262144
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %248, label %244

244:                                              ; preds = %237
  %245 = or i64 %238, 16
  %246 = inttoptr i64 %245 to %"class.v8::internal::Heap"**
  %247 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %246, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %247, i64 %126, i64 %149, i64 %233) #12
  br label %248

248:                                              ; preds = %244, %237
  %249 = and i64 %233, -262144
  %250 = or i64 %249, 8
  %251 = inttoptr i64 %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = and i64 %252, 24
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %396, label %255

255:                                              ; preds = %248
  %256 = load i64, i64* %240, align 8
  %257 = and i64 %256, 24
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %396

259:                                              ; preds = %255
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %126, i64 %149, i64 %233) #12
  br label %396

260:                                              ; preds = %228
  %261 = load atomic i32, i32* %115 monotonic, align 4
  %262 = and i32 %261, 510
  %263 = shl i32 %118, 9
  %264 = or i32 %262, %263
  store atomic volatile i32 %264, i32* %115 monotonic, align 4
  br label %396

265:                                              ; preds = %128
  %266 = ashr i32 %124, 1
  %267 = icmp slt i32 %266, %3
  br i1 %267, label %268, label %304

268:                                              ; preds = %131, %265
  %269 = or i32 %117, 32
  store atomic volatile i32 %269, i32* %115 monotonic, align 4
  %270 = load i64, i64* %1, align 8
  %271 = load i64, i64* %111, align 8
  %272 = mul i64 %271, 51539607552
  %273 = add i64 %272, 103079215104
  %274 = ashr exact i64 %273, 32
  %275 = add i64 %270, 7
  %276 = add i64 %275, %274
  %277 = inttoptr i64 %276 to i32*
  %278 = trunc i64 %5 to i32
  store atomic volatile i32 %278, i32* %277 monotonic, align 4
  %279 = and i64 %5, 1
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %396, label %281

281:                                              ; preds = %268
  %282 = and i64 %270, -262144
  %283 = or i64 %282, 8
  %284 = inttoptr i64 %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = and i64 %285, 262144
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %292, label %288

288:                                              ; preds = %281
  %289 = or i64 %282, 16
  %290 = inttoptr i64 %289 to %"class.v8::internal::Heap"**
  %291 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %290, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %291, i64 %270, i64 %276, i64 %5) #12
  br label %292

292:                                              ; preds = %288, %281
  %293 = and i64 %5, -262144
  %294 = or i64 %293, 8
  %295 = inttoptr i64 %294 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = and i64 %296, 24
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %396, label %299

299:                                              ; preds = %292
  %300 = load i64, i64* %284, align 8
  %301 = and i64 %300, 24
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %396

303:                                              ; preds = %299
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %270, i64 %276, i64 %5) #12
  br label %396

304:                                              ; preds = %265
  %305 = shl i32 %118, 9
  %306 = or i32 %305, 32
  store atomic volatile i32 %306, i32* %115 monotonic, align 4
  br label %396

307:                                              ; preds = %108
  %308 = icmp ne i32 %4, 1
  %309 = zext i1 %308 to i32
  %310 = and i64 %125, 1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %339, label %312

312:                                              ; preds = %307
  %313 = add i64 %126, -1
  %314 = inttoptr i64 %313 to i32*
  %315 = load atomic i32, i32* %314 monotonic, align 4
  %316 = zext i32 %315 to i64
  %317 = or i64 %119, %316
  %318 = add i64 %317, 7
  %319 = inttoptr i64 %318 to i16*
  %320 = load atomic i16, i16* %319 monotonic, align 2
  %321 = icmp eq i16 %320, 87
  br i1 %321, label %322, label %342

322:                                              ; preds = %312
  %323 = bitcast %"class.v8::internal::AccessorPair"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %323) #12
  %324 = getelementptr inbounds %"class.v8::internal::AccessorPair", %"class.v8::internal::AccessorPair"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %126, i64* %324, align 8
  %325 = select i1 %308, i64 7, i64 3
  %326 = add i64 %126, %325
  %327 = inttoptr i64 %326 to i32*
  %328 = load i32, i32* %327, align 4
  %329 = and i32 %328, 1
  %330 = icmp eq i32 %329, 0
  %331 = ashr i32 %328, 1
  %332 = select i1 %330, i32 %331, i32 -1
  %333 = icmp slt i32 %332, %3
  br i1 %333, label %334, label %335

334:                                              ; preds = %322
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %9, i32 %309, i64 %5)
  br label %338

335:                                              ; preds = %322
  %336 = shl i32 %118, 9
  %337 = or i32 %336, 34
  store atomic volatile i32 %337, i32* %115 monotonic, align 4
  br label %338

338:                                              ; preds = %335, %334
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %323) #12
  br label %396

339:                                              ; preds = %307
  %340 = ashr i32 %124, 1
  %341 = icmp slt i32 %340, %3
  br i1 %341, label %342, label %393

342:                                              ; preds = %312, %339
  %343 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1051"*
  %344 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase.1051"* %343) #12
  %345 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %345) #12
  %346 = load i64, i64* %344, align 8
  %347 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %346, i64* %347, align 8
  %348 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %10, i64 0, i32 0
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %348, i32 %309, i64 %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %345) #12
  %349 = or i32 %117, 34
  %350 = load i64, i64* %1, align 8
  %351 = load i64, i64* %111, align 8
  %352 = mul i64 %351, 51539607552
  %353 = add i64 %352, 120259084288
  %354 = ashr exact i64 %353, 32
  %355 = add i64 %350, 7
  %356 = add i64 %355, %354
  %357 = inttoptr i64 %356 to i32*
  store atomic volatile i32 %349, i32* %357 monotonic, align 4
  %358 = load i64, i64* %1, align 8
  %359 = load i64, i64* %111, align 8
  %360 = load i64, i64* %344, align 8
  %361 = mul i64 %359, 51539607552
  %362 = add i64 %361, 103079215104
  %363 = ashr exact i64 %362, 32
  %364 = add i64 %358, 7
  %365 = add i64 %364, %363
  %366 = inttoptr i64 %365 to i32*
  %367 = trunc i64 %360 to i32
  store atomic volatile i32 %367, i32* %366 monotonic, align 4
  %368 = and i64 %360, 1
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %396, label %370

370:                                              ; preds = %342
  %371 = and i64 %358, -262144
  %372 = or i64 %371, 8
  %373 = inttoptr i64 %372 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = and i64 %374, 262144
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %381, label %377

377:                                              ; preds = %370
  %378 = or i64 %371, 16
  %379 = inttoptr i64 %378 to %"class.v8::internal::Heap"**
  %380 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %379, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %380, i64 %358, i64 %365, i64 %360) #12
  br label %381

381:                                              ; preds = %377, %370
  %382 = and i64 %360, -262144
  %383 = or i64 %382, 8
  %384 = inttoptr i64 %383 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = and i64 %385, 24
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %396, label %388

388:                                              ; preds = %381
  %389 = load i64, i64* %373, align 8
  %390 = and i64 %389, 24
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %392, label %396

392:                                              ; preds = %388
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %358, i64 %365, i64 %360) #12
  br label %396

393:                                              ; preds = %339
  %394 = shl i32 %118, 9
  %395 = or i32 %394, 32
  store atomic volatile i32 %395, i32* %115 monotonic, align 4
  br label %396

396:                                              ; preds = %304, %393, %338, %259, %255, %248, %231, %227, %223, %216, %199, %194, %190, %183, %159, %260, %268, %292, %299, %303, %342, %381, %388, %392, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal16ClassBoilerplate23AddToPropertiesTemplateINS0_7IsolateENS0_19SwissNameDictionaryEEEvPT_NS0_6HandleIT0_EENS7_INS0_4NameEEEiNS1_9ValueKindENS0_3SmiE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i32, i64) local_unnamed_addr #2 comdat align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::AccessorPair", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %10 = load i64, i64* %1, align 8
  %11 = load i64, i64* %2, align 8
  %12 = add i64 %11, 3
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = lshr i32 %14, 2
  %16 = add i64 %10, 7
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = shl i32 %18, 3
  %20 = sext i32 %19 to i64
  %21 = add i64 %10, 15
  %22 = add i64 %21, %20
  %23 = inttoptr i64 %22 to i8*
  %24 = icmp eq i32 %18, 0
  %25 = zext i1 %24 to i32
  %26 = or i32 %18, %25
  %27 = lshr i32 %14, 9
  %28 = add nsw i32 %26, -1
  %29 = trunc i32 %15 to i8
  %30 = and i8 %29, 127
  %31 = insertelement <16 x i8> undef, i8 %30, i32 0
  %32 = shufflevector <16 x i8> %31, <16 x i8> undef, <16 x i32> zeroinitializer
  %33 = trunc i64 %11 to i32
  br label %34

34:                                               ; preds = %66, %6
  %35 = phi i32 [ 0, %6 ], [ %67, %66 ]
  %36 = phi i32 [ %27, %6 ], [ %68, %66 ]
  %37 = and i32 %36, %28
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %23, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %32, %41
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %62, label %45

45:                                               ; preds = %34
  %46 = zext i16 %43 to i32
  br label %47

47:                                               ; preds = %58, %45
  %48 = phi i32 [ %60, %58 ], [ %46, %45 ]
  %49 = tail call i32 @llvm.cttz.i32(i32 %48, i1 true) #12, !range !4
  %50 = add i32 %49, %37
  %51 = and i32 %50, %28
  %52 = shl i32 %51, 3
  %53 = sext i32 %52 to i64
  %54 = add i64 %21, %53
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = icmp eq i32 %56, %33
  br i1 %57, label %69, label %58

58:                                               ; preds = %47
  %59 = add i32 %48, -1
  %60 = and i32 %59, %48
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %47

62:                                               ; preds = %58, %34
  %63 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = add i32 %35, 16
  %68 = add i32 %37, %67
  br label %34

69:                                               ; preds = %47
  %70 = sext i32 %51 to i64
  %71 = icmp eq i32 %51, -1
  br i1 %71, label %72, label %114

72:                                               ; preds = %62, %69
  %73 = icmp ne i32 %4, 0
  %74 = zext i1 %73 to i32
  %75 = or i32 %74, 16
  %76 = icmp eq i32 %4, 0
  br i1 %76, label %77, label %96

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %79 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %78, align 8
  %80 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  %82 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %79, i64 %5) #12
  br label %105

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %87 = load i64*, i64** %86, align 8
  %88 = icmp eq i64* %85, %87
  br i1 %88, label %89, label %91

89:                                               ; preds = %83
  %90 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %91

91:                                               ; preds = %89, %83
  %92 = phi i64* [ %90, %89 ], [ %85, %83 ]
  %93 = ptrtoint i64* %92 to i64
  %94 = add i64 %93, 8
  %95 = inttoptr i64 %94 to i64*
  store i64* %95, i64** %84, align 8
  store i64 %5, i64* %92, align 8
  br label %105

96:                                               ; preds = %72
  %97 = icmp ne i32 %4, 1
  %98 = zext i1 %97 to i32
  %99 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %100 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase"* %99) #12
  %101 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #12
  %102 = load i64, i64* %100, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %7, i64 0, i32 0
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %104, i32 %98, i64 %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #12
  br label %105

105:                                              ; preds = %96, %91, %81
  %106 = phi i64* [ %100, %96 ], [ %82, %81 ], [ %92, %91 ]
  %107 = call i64* @_ZN2v88internal19SwissNameDictionary3AddINS0_7IsolateEEENS0_6HandleIS1_EEPT_S5_NS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %106, i32 %75, %"class.v8::internal::InternalIndex"* null) #12
  %108 = load i64, i64* %107, align 8
  %109 = load i64, i64* %1, align 8
  %110 = trunc i64 %108 to i32
  %111 = trunc i64 %109 to i32
  %112 = icmp eq i32 %110, %111
  br i1 %112, label %403, label %113, !prof !2

113:                                              ; preds = %105
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

114:                                              ; preds = %69
  %115 = and i64 %10, -4294967296
  %116 = or i32 %52, 4
  %117 = sext i32 %116 to i64
  %118 = add nsw i64 %117, 15
  %119 = add i64 %118, %10
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %115, %122
  %124 = icmp eq i32 %4, 0
  br i1 %124, label %125, label %306

125:                                              ; preds = %114
  %126 = and i64 %122, 1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %258, label %128

128:                                              ; preds = %125
  %129 = add i64 %123, -1
  %130 = inttoptr i64 %129 to i32*
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = zext i32 %131 to i64
  %133 = or i64 %115, %132
  %134 = add i64 %133, 7
  %135 = inttoptr i64 %134 to i16*
  %136 = load atomic i16, i16* %135 monotonic, align 2
  %137 = icmp eq i16 %136, 87
  br i1 %137, label %138, label %261

138:                                              ; preds = %128
  %139 = add i64 %123, 3
  %140 = inttoptr i64 %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  %144 = ashr i32 %141, 1
  %145 = select i1 %143, i32 %144, i32 -1
  %146 = add i64 %123, 7
  %147 = inttoptr i64 %146 to i32*
  %148 = load i32, i32* %147, align 4
  %149 = and i32 %148, 1
  %150 = icmp eq i32 %149, 0
  %151 = ashr i32 %148, 1
  %152 = select i1 %150, i32 %151, i32 -1
  %153 = icmp slt i32 %145, %3
  %154 = icmp slt i32 %152, %3
  %155 = and i1 %153, %154
  br i1 %155, label %156, label %193

156:                                              ; preds = %138
  %157 = mul i32 %18, 9
  %158 = add i32 %157, 32
  %159 = sext i32 %158 to i64
  %160 = add i64 %10, -1
  %161 = add i64 %160, %159
  %162 = inttoptr i64 %161 to i8*
  %163 = getelementptr inbounds i8, i8* %162, i64 %70
  store i8 16, i8* %163, align 1
  %164 = load i64, i64* %1, align 8
  %165 = add i64 %164, %118
  %166 = inttoptr i64 %165 to i32*
  %167 = trunc i64 %5 to i32
  store atomic volatile i32 %167, i32* %166 monotonic, align 4
  %168 = and i64 %5, 1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %403, label %170

170:                                              ; preds = %156
  %171 = and i64 %164, -262144
  %172 = or i64 %171, 8
  %173 = inttoptr i64 %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = and i64 %174, 262144
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %181, label %177

177:                                              ; preds = %170
  %178 = or i64 %171, 16
  %179 = inttoptr i64 %178 to %"class.v8::internal::Heap"**
  %180 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %179, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %180, i64 %164, i64 %165, i64 %5) #12
  br label %181

181:                                              ; preds = %177, %170
  %182 = and i64 %5, -262144
  %183 = or i64 %182, 8
  %184 = inttoptr i64 %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = and i64 %185, 24
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %403, label %188

188:                                              ; preds = %181
  %189 = load i64, i64* %173, align 8
  %190 = and i64 %189, 24
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %403

192:                                              ; preds = %188
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %164, i64 %165, i64 %5) #12
  br label %403

193:                                              ; preds = %138
  %194 = icmp eq i32 %145, -1
  %195 = xor i1 %153, true
  %196 = or i1 %194, %195
  br i1 %196, label %226, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %199 = load i64, i64* %198, align 8
  %200 = trunc i64 %199 to i32
  store atomic volatile i32 %200, i32* %140 monotonic, align 4
  %201 = and i64 %199, 1
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %403, label %203

203:                                              ; preds = %197
  %204 = and i64 %123, -262144
  %205 = or i64 %204, 8
  %206 = inttoptr i64 %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = and i64 %207, 262144
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %214, label %210

210:                                              ; preds = %203
  %211 = or i64 %204, 16
  %212 = inttoptr i64 %211 to %"class.v8::internal::Heap"**
  %213 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %212, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %213, i64 %123, i64 %139, i64 %199) #12
  br label %214

214:                                              ; preds = %210, %203
  %215 = and i64 %199, -262144
  %216 = or i64 %215, 8
  %217 = inttoptr i64 %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = and i64 %218, 24
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %403, label %221

221:                                              ; preds = %214
  %222 = load i64, i64* %206, align 8
  %223 = and i64 %222, 24
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %403

225:                                              ; preds = %221
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %123, i64 %139, i64 %199) #12
  br label %403

226:                                              ; preds = %193
  %227 = icmp ne i32 %152, -1
  %228 = and i1 %227, %154
  br i1 %228, label %229, label %403

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %231 = load i64, i64* %230, align 8
  %232 = trunc i64 %231 to i32
  store atomic volatile i32 %232, i32* %147 monotonic, align 4
  %233 = and i64 %231, 1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %403, label %235

235:                                              ; preds = %229
  %236 = and i64 %123, -262144
  %237 = or i64 %236, 8
  %238 = inttoptr i64 %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = and i64 %239, 262144
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %246, label %242

242:                                              ; preds = %235
  %243 = or i64 %236, 16
  %244 = inttoptr i64 %243 to %"class.v8::internal::Heap"**
  %245 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %244, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %245, i64 %123, i64 %146, i64 %231) #12
  br label %246

246:                                              ; preds = %242, %235
  %247 = and i64 %231, -262144
  %248 = or i64 %247, 8
  %249 = inttoptr i64 %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = and i64 %250, 24
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %403, label %253

253:                                              ; preds = %246
  %254 = load i64, i64* %238, align 8
  %255 = and i64 %254, 24
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %403

257:                                              ; preds = %253
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %123, i64 %146, i64 %231) #12
  br label %403

258:                                              ; preds = %125
  %259 = ashr i32 %121, 1
  %260 = icmp slt i32 %259, %3
  br i1 %260, label %261, label %298

261:                                              ; preds = %258, %128
  %262 = mul i32 %18, 9
  %263 = add i32 %262, 32
  %264 = sext i32 %263 to i64
  %265 = add i64 %10, -1
  %266 = add i64 %265, %264
  %267 = inttoptr i64 %266 to i8*
  %268 = getelementptr inbounds i8, i8* %267, i64 %70
  store i8 16, i8* %268, align 1
  %269 = load i64, i64* %1, align 8
  %270 = add i64 %269, %118
  %271 = inttoptr i64 %270 to i32*
  %272 = trunc i64 %5 to i32
  store atomic volatile i32 %272, i32* %271 monotonic, align 4
  %273 = and i64 %5, 1
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %403, label %275

275:                                              ; preds = %261
  %276 = and i64 %269, -262144
  %277 = or i64 %276, 8
  %278 = inttoptr i64 %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = and i64 %279, 262144
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %286, label %282

282:                                              ; preds = %275
  %283 = or i64 %276, 16
  %284 = inttoptr i64 %283 to %"class.v8::internal::Heap"**
  %285 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %284, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %285, i64 %269, i64 %270, i64 %5) #12
  br label %286

286:                                              ; preds = %282, %275
  %287 = and i64 %5, -262144
  %288 = or i64 %287, 8
  %289 = inttoptr i64 %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = and i64 %290, 24
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %403, label %293

293:                                              ; preds = %286
  %294 = load i64, i64* %278, align 8
  %295 = and i64 %294, 24
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %297, label %403

297:                                              ; preds = %293
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %269, i64 %270, i64 %5) #12
  br label %403

298:                                              ; preds = %258
  %299 = mul i32 %18, 9
  %300 = add i32 %299, 32
  %301 = sext i32 %300 to i64
  %302 = add i64 %10, -1
  %303 = add i64 %302, %301
  %304 = inttoptr i64 %303 to i8*
  %305 = getelementptr inbounds i8, i8* %304, i64 %70
  store i8 16, i8* %305, align 1
  br label %403

306:                                              ; preds = %114
  %307 = icmp ne i32 %4, 1
  %308 = zext i1 %307 to i32
  %309 = and i64 %122, 1
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %344, label %311

311:                                              ; preds = %306
  %312 = add i64 %123, -1
  %313 = inttoptr i64 %312 to i32*
  %314 = load atomic i32, i32* %313 monotonic, align 4
  %315 = zext i32 %314 to i64
  %316 = or i64 %115, %315
  %317 = add i64 %316, 7
  %318 = inttoptr i64 %317 to i16*
  %319 = load atomic i16, i16* %318 monotonic, align 2
  %320 = icmp eq i16 %319, 87
  br i1 %320, label %321, label %347

321:                                              ; preds = %311
  %322 = bitcast %"class.v8::internal::AccessorPair"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %322) #12
  %323 = getelementptr inbounds %"class.v8::internal::AccessorPair", %"class.v8::internal::AccessorPair"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %123, i64* %323, align 8
  %324 = select i1 %307, i64 7, i64 3
  %325 = add i64 %123, %324
  %326 = inttoptr i64 %325 to i32*
  %327 = load i32, i32* %326, align 4
  %328 = and i32 %327, 1
  %329 = icmp eq i32 %328, 0
  %330 = ashr i32 %327, 1
  %331 = select i1 %329, i32 %330, i32 -1
  %332 = icmp slt i32 %331, %3
  br i1 %332, label %333, label %334

333:                                              ; preds = %321
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %8, i32 %308, i64 %5) #12
  br label %343

334:                                              ; preds = %321
  %335 = load i32, i32* %17, align 4
  %336 = mul i32 %335, 9
  %337 = add i32 %336, 32
  %338 = sext i32 %337 to i64
  %339 = add i64 %10, -1
  %340 = add i64 %339, %338
  %341 = inttoptr i64 %340 to i8*
  %342 = getelementptr inbounds i8, i8* %341, i64 %70
  store i8 17, i8* %342, align 1
  br label %343

343:                                              ; preds = %334, %333
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %322) #12
  br label %403

344:                                              ; preds = %306
  %345 = ashr i32 %121, 1
  %346 = icmp slt i32 %345, %3
  br i1 %346, label %347, label %395

347:                                              ; preds = %344, %311
  %348 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %349 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase"* %348) #12
  %350 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %350) #12
  %351 = load i64, i64* %349, align 8
  %352 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %351, i64* %352, align 8
  %353 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9, i64 0, i32 0
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %353, i32 %308, i64 %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %350) #12
  %354 = load i64, i64* %1, align 8
  %355 = add i64 %354, 7
  %356 = inttoptr i64 %355 to i32*
  %357 = load i32, i32* %356, align 4
  %358 = mul i32 %357, 9
  %359 = add i32 %358, 32
  %360 = sext i32 %359 to i64
  %361 = add i64 %354, -1
  %362 = add i64 %361, %360
  %363 = inttoptr i64 %362 to i8*
  %364 = getelementptr inbounds i8, i8* %363, i64 %70
  store i8 17, i8* %364, align 1
  %365 = load i64, i64* %1, align 8
  %366 = load i64, i64* %349, align 8
  %367 = add i64 %365, %118
  %368 = inttoptr i64 %367 to i32*
  %369 = trunc i64 %366 to i32
  store atomic volatile i32 %369, i32* %368 monotonic, align 4
  %370 = and i64 %366, 1
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %403, label %372

372:                                              ; preds = %347
  %373 = and i64 %365, -262144
  %374 = or i64 %373, 8
  %375 = inttoptr i64 %374 to i64*
  %376 = load i64, i64* %375, align 8
  %377 = and i64 %376, 262144
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %383, label %379

379:                                              ; preds = %372
  %380 = or i64 %373, 16
  %381 = inttoptr i64 %380 to %"class.v8::internal::Heap"**
  %382 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %381, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %382, i64 %365, i64 %367, i64 %366) #12
  br label %383

383:                                              ; preds = %379, %372
  %384 = and i64 %366, -262144
  %385 = or i64 %384, 8
  %386 = inttoptr i64 %385 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = and i64 %387, 24
  %389 = icmp eq i64 %388, 0
  br i1 %389, label %403, label %390

390:                                              ; preds = %383
  %391 = load i64, i64* %375, align 8
  %392 = and i64 %391, 24
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %394, label %403

394:                                              ; preds = %390
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %365, i64 %367, i64 %366) #12
  br label %403

395:                                              ; preds = %344
  %396 = mul i32 %18, 9
  %397 = add i32 %396, 32
  %398 = sext i32 %397 to i64
  %399 = add i64 %10, -1
  %400 = add i64 %399, %398
  %401 = inttoptr i64 %400 to i8*
  %402 = getelementptr inbounds i8, i8* %401, i64 %70
  store i8 16, i8* %402, align 1
  br label %403

403:                                              ; preds = %105, %156, %181, %188, %192, %197, %214, %221, %225, %226, %229, %246, %253, %257, %261, %286, %293, %297, %298, %343, %347, %383, %390, %394, %395
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal16ClassBoilerplate21AddToElementsTemplateINS0_7IsolateEEEvPT_NS0_6HandleINS0_16NumberDictionaryEEEjiNS1_9ValueKindENS0_3SmiE(%"class.v8::internal::Isolate"*, i64*, i32, i32, i32, i64) local_unnamed_addr #0 comdat align 2 {
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_123AddToDictionaryTemplateINS0_7IsolateENS0_16NumberDictionaryEjEEvPT_NS0_6HandleIT0_EET1_iNS0_16ClassBoilerplate9ValueKindENS0_3SmiE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %2, i32 %3, i32 %4, i64 %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_123AddToDictionaryTemplateINS0_7IsolateENS0_16NumberDictionaryEjEEvPT_NS0_6HandleIT0_EET1_iNS0_16ClassBoilerplate9ValueKindENS0_3SmiE(%"class.v8::internal::Isolate"*, i64*, i32, i32, i32, i64) unnamed_addr #0 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::InternalIndex", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::AccessorPair", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %12 = bitcast %"class.v8::internal::InternalIndex"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = load i64, i64* %1, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 134
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 1
  %21 = zext i32 %2 to i64
  %22 = xor i64 %20, %21
  %23 = xor i64 %22, -1
  %24 = shl i64 %22, 18
  %25 = add i64 %24, %23
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 21
  %29 = lshr i64 %28, 11
  %30 = xor i64 %29, %28
  %31 = mul i64 %30, 65
  %32 = lshr i64 %31, 22
  %33 = xor i64 %32, %31
  %34 = trunc i64 %33 to i32
  %35 = add i64 %13, 15
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = ashr i32 %37, 1
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i32 %38, -1
  %44 = and i32 %43, 1073741823
  %45 = and i32 %44, %34
  %46 = zext i32 %45 to i64
  %47 = mul i64 %46, 51539607552
  %48 = add i64 %47, 68719476736
  %49 = ashr exact i64 %48, 32
  %50 = add i64 %13, 7
  %51 = add i64 %49, %50
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = trunc i64 %40 to i32
  %55 = icmp eq i32 %53, %54
  br i1 %55, label %92, label %56

56:                                               ; preds = %6
  %57 = trunc i64 %42 to i32
  br label %58

58:                                               ; preds = %80, %56
  %59 = phi i32 [ %53, %56 ], [ %90, %80 ]
  %60 = phi i64 [ %46, %56 ], [ %84, %80 ]
  %61 = phi i32 [ %45, %56 ], [ %83, %80 ]
  %62 = phi i32 [ 1, %56 ], [ %81, %80 ]
  %63 = zext i32 %59 to i64
  %64 = or i64 %15, %63
  %65 = icmp eq i32 %59, %57
  br i1 %65, label %80, label %66

66:                                               ; preds = %58
  %67 = and i64 %63, 1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = ashr i32 %59, 1
  %71 = sitofp i32 %70 to double
  br label %76

72:                                               ; preds = %66
  %73 = add i64 %64, 3
  %74 = inttoptr i64 %73 to double*
  %75 = load double, double* %74, align 1
  br label %76

76:                                               ; preds = %72, %69
  %77 = phi double [ %71, %69 ], [ %75, %72 ]
  %78 = fptoui double %77 to i32
  %79 = icmp eq i32 %78, %2
  br i1 %79, label %142, label %80

80:                                               ; preds = %76, %58
  %81 = add i32 %62, 1
  %82 = add i32 %62, %61
  %83 = and i32 %82, %43
  %84 = zext i32 %83 to i64
  %85 = mul i64 %84, 51539607552
  %86 = add i64 %85, 68719476736
  %87 = ashr exact i64 %86, 32
  %88 = add i64 %87, %50
  %89 = inttoptr i64 %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = icmp eq i32 %90, %54
  br i1 %91, label %92, label %58

92:                                               ; preds = %80, %6
  %93 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %8, i64 0, i32 0
  store i64 -1, i64* %93, align 8
  %94 = icmp ne i32 %4, 0
  %95 = zext i1 %94 to i32
  %96 = or i32 %95, 16
  %97 = icmp eq i32 %4, 0
  br i1 %97, label %98, label %117

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %100 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %99, align 8
  %101 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %98
  %103 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %100, i64 %5) #12
  br label %126

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %106 = load i64*, i64** %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %108 = load i64*, i64** %107, align 8
  %109 = icmp eq i64* %106, %108
  br i1 %109, label %110, label %112

110:                                              ; preds = %104
  %111 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %112

112:                                              ; preds = %110, %104
  %113 = phi i64* [ %111, %110 ], [ %106, %104 ]
  %114 = ptrtoint i64* %113 to i64
  %115 = add i64 %114, 8
  %116 = inttoptr i64 %115 to i64*
  store i64* %116, i64** %105, align 8
  store i64 %5, i64* %113, align 8
  br label %126

117:                                              ; preds = %92
  %118 = icmp ne i32 %4, 1
  %119 = zext i1 %118 to i32
  %120 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %121 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase"* %120) #12
  %122 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #12
  %123 = load i64, i64* %121, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9, i64 0, i32 0
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %125, i32 %119, i64 %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #12
  br label %126

126:                                              ; preds = %112, %102, %117
  %127 = phi i64* [ %121, %117 ], [ %103, %102 ], [ %113, %112 ]
  %128 = call i64* @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_jNS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %2, i64* %127, i32 %96, %"class.v8::internal::InternalIndex"* nonnull %8) #12
  %129 = load i64, i64* %128, align 8
  %130 = load i64, i64* %1, align 8
  %131 = trunc i64 %129 to i32
  %132 = trunc i64 %130 to i32
  %133 = icmp eq i32 %131, %132
  br i1 %133, label %135, label %134, !prof !2

134:                                              ; preds = %126
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

135:                                              ; preds = %126
  %136 = bitcast %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #12
  %137 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %130, i64* %137, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %7, i64 0, i32 0
  call void @_ZN2v88internal16NumberDictionary18UpdateMaxNumberKeyEjNS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::NumberDictionary"* nonnull %138, i32 %2, i64* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #12
  %139 = load i64, i64* %1, align 8
  %140 = add i64 %139, 19
  %141 = inttoptr i64 %140 to i32*
  store atomic volatile i32 2, i32* %141 monotonic, align 4
  br label %414

142:                                              ; preds = %76
  %143 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %8, i64 0, i32 0
  store i64 %60, i64* %143, align 8
  %144 = mul i64 %60, 51539607552
  %145 = add i64 %144, 103079215104
  %146 = ashr exact i64 %145, 32
  %147 = add i64 %50, %146
  %148 = inttoptr i64 %147 to i32*
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, -512
  %151 = and i64 %13, -4294967296
  %152 = add i64 %144, 85899345920
  %153 = ashr exact i64 %152, 32
  %154 = add i64 %50, %153
  %155 = inttoptr i64 %154 to i32*
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = zext i32 %156 to i64
  %158 = or i64 %151, %157
  %159 = icmp eq i32 %4, 0
  br i1 %159, label %160, label %331

160:                                              ; preds = %142
  %161 = and i64 %157, 1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %292, label %163

163:                                              ; preds = %160
  %164 = add i64 %158, -1
  %165 = inttoptr i64 %164 to i32*
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %151, %167
  %169 = add i64 %168, 7
  %170 = inttoptr i64 %169 to i16*
  %171 = load atomic i16, i16* %170 monotonic, align 2
  %172 = icmp eq i16 %171, 87
  br i1 %172, label %173, label %295

173:                                              ; preds = %163
  %174 = add i64 %158, 3
  %175 = inttoptr i64 %174 to i32*
  %176 = load i32, i32* %175, align 4
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  %179 = ashr i32 %176, 1
  %180 = select i1 %178, i32 %179, i32 -1
  %181 = add i64 %158, 7
  %182 = inttoptr i64 %181 to i32*
  %183 = load i32, i32* %182, align 4
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = ashr i32 %183, 1
  %187 = select i1 %185, i32 %186, i32 -1
  %188 = icmp slt i32 %180, %3
  %189 = icmp slt i32 %187, %3
  %190 = and i1 %188, %189
  br i1 %190, label %191, label %227

191:                                              ; preds = %173
  %192 = or i32 %150, 32
  store atomic volatile i32 %192, i32* %148 monotonic, align 4
  %193 = load i64, i64* %1, align 8
  %194 = load i64, i64* %143, align 8
  %195 = mul i64 %194, 51539607552
  %196 = add i64 %195, 85899345920
  %197 = ashr exact i64 %196, 32
  %198 = add i64 %193, 7
  %199 = add i64 %198, %197
  %200 = inttoptr i64 %199 to i32*
  %201 = trunc i64 %5 to i32
  store atomic volatile i32 %201, i32* %200 monotonic, align 4
  %202 = and i64 %5, 1
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %414, label %204

204:                                              ; preds = %191
  %205 = and i64 %193, -262144
  %206 = or i64 %205, 8
  %207 = inttoptr i64 %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = and i64 %208, 262144
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %215, label %211

211:                                              ; preds = %204
  %212 = or i64 %205, 16
  %213 = inttoptr i64 %212 to %"class.v8::internal::Heap"**
  %214 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %213, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %214, i64 %193, i64 %199, i64 %5) #12
  br label %215

215:                                              ; preds = %211, %204
  %216 = and i64 %5, -262144
  %217 = or i64 %216, 8
  %218 = inttoptr i64 %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = and i64 %219, 24
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %414, label %222

222:                                              ; preds = %215
  %223 = load i64, i64* %207, align 8
  %224 = and i64 %223, 24
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %414

226:                                              ; preds = %222
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %193, i64 %199, i64 %5) #12
  br label %414

227:                                              ; preds = %173
  %228 = icmp eq i32 %180, -1
  %229 = xor i1 %188, true
  %230 = or i1 %228, %229
  br i1 %230, label %260, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %233 = load i64, i64* %232, align 8
  %234 = trunc i64 %233 to i32
  store atomic volatile i32 %234, i32* %175 monotonic, align 4
  %235 = and i64 %233, 1
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %414, label %237

237:                                              ; preds = %231
  %238 = and i64 %158, -262144
  %239 = or i64 %238, 8
  %240 = inttoptr i64 %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = and i64 %241, 262144
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %248, label %244

244:                                              ; preds = %237
  %245 = or i64 %238, 16
  %246 = inttoptr i64 %245 to %"class.v8::internal::Heap"**
  %247 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %246, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %247, i64 %158, i64 %174, i64 %233) #12
  br label %248

248:                                              ; preds = %244, %237
  %249 = and i64 %233, -262144
  %250 = or i64 %249, 8
  %251 = inttoptr i64 %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = and i64 %252, 24
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %414, label %255

255:                                              ; preds = %248
  %256 = load i64, i64* %240, align 8
  %257 = and i64 %256, 24
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %414

259:                                              ; preds = %255
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %158, i64 %174, i64 %233) #12
  br label %414

260:                                              ; preds = %227
  %261 = icmp ne i32 %187, -1
  %262 = and i1 %261, %189
  br i1 %262, label %263, label %414

263:                                              ; preds = %260
  %264 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %265 = load i64, i64* %264, align 8
  %266 = trunc i64 %265 to i32
  store atomic volatile i32 %266, i32* %182 monotonic, align 4
  %267 = and i64 %265, 1
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %414, label %269

269:                                              ; preds = %263
  %270 = and i64 %158, -262144
  %271 = or i64 %270, 8
  %272 = inttoptr i64 %271 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = and i64 %273, 262144
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %280, label %276

276:                                              ; preds = %269
  %277 = or i64 %270, 16
  %278 = inttoptr i64 %277 to %"class.v8::internal::Heap"**
  %279 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %278, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %279, i64 %158, i64 %181, i64 %265) #12
  br label %280

280:                                              ; preds = %276, %269
  %281 = and i64 %265, -262144
  %282 = or i64 %281, 8
  %283 = inttoptr i64 %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = and i64 %284, 24
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %414, label %287

287:                                              ; preds = %280
  %288 = load i64, i64* %272, align 8
  %289 = and i64 %288, 24
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %291, label %414

291:                                              ; preds = %287
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %158, i64 %181, i64 %265) #12
  br label %414

292:                                              ; preds = %160
  %293 = ashr i32 %156, 1
  %294 = icmp slt i32 %293, %3
  br i1 %294, label %295, label %414

295:                                              ; preds = %163, %292
  %296 = or i32 %150, 32
  store atomic volatile i32 %296, i32* %148 monotonic, align 4
  %297 = load i64, i64* %1, align 8
  %298 = load i64, i64* %143, align 8
  %299 = mul i64 %298, 51539607552
  %300 = add i64 %299, 85899345920
  %301 = ashr exact i64 %300, 32
  %302 = add i64 %297, 7
  %303 = add i64 %302, %301
  %304 = inttoptr i64 %303 to i32*
  %305 = trunc i64 %5 to i32
  store atomic volatile i32 %305, i32* %304 monotonic, align 4
  %306 = and i64 %5, 1
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %414, label %308

308:                                              ; preds = %295
  %309 = and i64 %297, -262144
  %310 = or i64 %309, 8
  %311 = inttoptr i64 %310 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = and i64 %312, 262144
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %319, label %315

315:                                              ; preds = %308
  %316 = or i64 %309, 16
  %317 = inttoptr i64 %316 to %"class.v8::internal::Heap"**
  %318 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %317, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %318, i64 %297, i64 %303, i64 %5) #12
  br label %319

319:                                              ; preds = %315, %308
  %320 = and i64 %5, -262144
  %321 = or i64 %320, 8
  %322 = inttoptr i64 %321 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = and i64 %323, 24
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %414, label %326

326:                                              ; preds = %319
  %327 = load i64, i64* %311, align 8
  %328 = and i64 %327, 24
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %330, label %414

330:                                              ; preds = %326
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %297, i64 %303, i64 %5) #12
  br label %414

331:                                              ; preds = %142
  %332 = icmp ne i32 %4, 1
  %333 = zext i1 %332 to i32
  %334 = and i64 %157, 1
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %360, label %336

336:                                              ; preds = %331
  %337 = add i64 %158, -1
  %338 = inttoptr i64 %337 to i32*
  %339 = load atomic i32, i32* %338 monotonic, align 4
  %340 = zext i32 %339 to i64
  %341 = or i64 %151, %340
  %342 = add i64 %341, 7
  %343 = inttoptr i64 %342 to i16*
  %344 = load atomic i16, i16* %343 monotonic, align 2
  %345 = icmp eq i16 %344, 87
  br i1 %345, label %346, label %363

346:                                              ; preds = %336
  %347 = bitcast %"class.v8::internal::AccessorPair"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %347) #12
  %348 = getelementptr inbounds %"class.v8::internal::AccessorPair", %"class.v8::internal::AccessorPair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %158, i64* %348, align 8
  %349 = select i1 %332, i64 7, i64 3
  %350 = add i64 %158, %349
  %351 = inttoptr i64 %350 to i32*
  %352 = load i32, i32* %351, align 4
  %353 = and i32 %352, 1
  %354 = icmp eq i32 %353, 0
  %355 = ashr i32 %352, 1
  %356 = select i1 %354, i32 %355, i32 -1
  %357 = icmp slt i32 %356, %3
  br i1 %357, label %358, label %359

358:                                              ; preds = %346
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %10, i32 %333, i64 %5)
  br label %359

359:                                              ; preds = %346, %358
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %347) #12
  br label %414

360:                                              ; preds = %331
  %361 = ashr i32 %156, 1
  %362 = icmp slt i32 %361, %3
  br i1 %362, label %363, label %414

363:                                              ; preds = %336, %360
  %364 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %365 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase"* %364) #12
  %366 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %366) #12
  %367 = load i64, i64* %365, align 8
  %368 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %367, i64* %368, align 8
  %369 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %11, i64 0, i32 0
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %369, i32 %333, i64 %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %366) #12
  %370 = or i32 %150, 34
  %371 = load i64, i64* %1, align 8
  %372 = load i64, i64* %143, align 8
  %373 = mul i64 %372, 51539607552
  %374 = add i64 %373, 103079215104
  %375 = ashr exact i64 %374, 32
  %376 = add i64 %371, 7
  %377 = add i64 %376, %375
  %378 = inttoptr i64 %377 to i32*
  store atomic volatile i32 %370, i32* %378 monotonic, align 4
  %379 = load i64, i64* %1, align 8
  %380 = load i64, i64* %143, align 8
  %381 = load i64, i64* %365, align 8
  %382 = mul i64 %380, 51539607552
  %383 = add i64 %382, 85899345920
  %384 = ashr exact i64 %383, 32
  %385 = add i64 %379, 7
  %386 = add i64 %385, %384
  %387 = inttoptr i64 %386 to i32*
  %388 = trunc i64 %381 to i32
  store atomic volatile i32 %388, i32* %387 monotonic, align 4
  %389 = and i64 %381, 1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %414, label %391

391:                                              ; preds = %363
  %392 = and i64 %379, -262144
  %393 = or i64 %392, 8
  %394 = inttoptr i64 %393 to i64*
  %395 = load i64, i64* %394, align 8
  %396 = and i64 %395, 262144
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %402, label %398

398:                                              ; preds = %391
  %399 = or i64 %392, 16
  %400 = inttoptr i64 %399 to %"class.v8::internal::Heap"**
  %401 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %400, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %401, i64 %379, i64 %386, i64 %381) #12
  br label %402

402:                                              ; preds = %398, %391
  %403 = and i64 %381, -262144
  %404 = or i64 %403, 8
  %405 = inttoptr i64 %404 to i64*
  %406 = load i64, i64* %405, align 8
  %407 = and i64 %406, 24
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %414, label %409

409:                                              ; preds = %402
  %410 = load i64, i64* %394, align 8
  %411 = and i64 %410, 24
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %414

413:                                              ; preds = %409
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %379, i64 %386, i64 %381) #12
  br label %414

414:                                              ; preds = %292, %360, %359, %291, %287, %280, %263, %259, %255, %248, %231, %226, %222, %215, %191, %260, %295, %319, %326, %330, %363, %402, %409, %413, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal16ClassBoilerplate21AddToElementsTemplateINS0_12LocalIsolateEEEvPT_NS0_6HandleINS0_16NumberDictionaryEEEjiNS1_9ValueKindENS0_3SmiE(%"class.v8::internal::LocalIsolate"*, i64*, i32, i32, i32, i64) local_unnamed_addr #0 comdat align 2 {
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_123AddToDictionaryTemplateINS0_12LocalIsolateENS0_16NumberDictionaryEjEEvPT_NS0_6HandleIT0_EET1_iNS0_16ClassBoilerplate9ValueKindENS0_3SmiE(%"class.v8::internal::LocalIsolate"* %0, i64* %1, i32 %2, i32 %3, i32 %4, i64 %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_123AddToDictionaryTemplateINS0_12LocalIsolateENS0_16NumberDictionaryEjEEvPT_NS0_6HandleIT0_EET1_iNS0_16ClassBoilerplate9ValueKindENS0_3SmiE(%"class.v8::internal::LocalIsolate"*, i64*, i32, i32, i32, i64) unnamed_addr #0 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::InternalIndex", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::AccessorPair", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %12 = bitcast %"class.v8::internal::InternalIndex"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = load i64, i64* %1, align 8
  %14 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 2
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i64, i64* %15, i64 134
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = zext i32 %2 to i64
  %26 = xor i64 %24, %25
  %27 = xor i64 %26, -1
  %28 = shl i64 %26, 18
  %29 = add i64 %28, %27
  %30 = lshr i64 %29, 31
  %31 = xor i64 %30, %29
  %32 = mul i64 %31, 21
  %33 = lshr i64 %32, 11
  %34 = xor i64 %33, %32
  %35 = mul i64 %34, 65
  %36 = lshr i64 %35, 22
  %37 = xor i64 %36, %35
  %38 = trunc i64 %37 to i32
  %39 = add i64 %13, 15
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = ashr i32 %41, 1
  %43 = getelementptr inbounds i64, i64* %15, i64 4
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds i64, i64* %15, i64 5
  %46 = load i64, i64* %45, align 8
  %47 = add nsw i32 %42, -1
  %48 = and i32 %47, 1073741823
  %49 = and i32 %48, %38
  %50 = zext i32 %49 to i64
  %51 = mul i64 %50, 51539607552
  %52 = add i64 %51, 68719476736
  %53 = ashr exact i64 %52, 32
  %54 = add i64 %13, 7
  %55 = add i64 %53, %54
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = trunc i64 %44 to i32
  %59 = icmp eq i32 %57, %58
  br i1 %59, label %96, label %60

60:                                               ; preds = %6
  %61 = trunc i64 %46 to i32
  br label %62

62:                                               ; preds = %84, %60
  %63 = phi i32 [ %57, %60 ], [ %94, %84 ]
  %64 = phi i64 [ %50, %60 ], [ %88, %84 ]
  %65 = phi i32 [ %49, %60 ], [ %87, %84 ]
  %66 = phi i32 [ 1, %60 ], [ %85, %84 ]
  %67 = zext i32 %63 to i64
  %68 = or i64 %19, %67
  %69 = icmp eq i32 %63, %61
  br i1 %69, label %84, label %70

70:                                               ; preds = %62
  %71 = and i64 %67, 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %70
  %74 = ashr i32 %63, 1
  %75 = sitofp i32 %74 to double
  br label %80

76:                                               ; preds = %70
  %77 = add i64 %68, 3
  %78 = inttoptr i64 %77 to double*
  %79 = load double, double* %78, align 1
  br label %80

80:                                               ; preds = %76, %73
  %81 = phi double [ %75, %73 ], [ %79, %76 ]
  %82 = fptoui double %81 to i32
  %83 = icmp eq i32 %82, %2
  br i1 %83, label %149, label %84

84:                                               ; preds = %80, %62
  %85 = add i32 %66, 1
  %86 = add i32 %66, %65
  %87 = and i32 %86, %47
  %88 = zext i32 %87 to i64
  %89 = mul i64 %88, 51539607552
  %90 = add i64 %89, 68719476736
  %91 = ashr exact i64 %90, 32
  %92 = add i64 %91, %54
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = icmp eq i32 %94, %58
  br i1 %95, label %96, label %62

96:                                               ; preds = %84, %6
  %97 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %8, i64 0, i32 0
  store i64 -1, i64* %97, align 8
  %98 = icmp ne i32 %4, 0
  %99 = zext i1 %98 to i32
  %100 = or i32 %99, 16
  %101 = icmp eq i32 %4, 0
  br i1 %101, label %102, label %124

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1, i32 1
  %104 = load i8, i8* %103, align 8, !range !3
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1
  %108 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %107, i64 %5) #12
  br label %133

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %111 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %111, i64 0, i32 0, i32 0
  %113 = load i64*, i64** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %111, i64 0, i32 0, i32 1
  %115 = load i64*, i64** %114, align 8
  %116 = icmp eq i64* %113, %115
  br i1 %116, label %117, label %120

117:                                              ; preds = %109
  %118 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %111) #12
  %119 = load i64*, i64** %112, align 8
  br label %120

120:                                              ; preds = %117, %109
  %121 = phi i64* [ %119, %117 ], [ %113, %109 ]
  %122 = phi i64* [ %118, %117 ], [ %113, %109 ]
  %123 = getelementptr inbounds i64, i64* %121, i64 1
  store i64* %123, i64** %112, align 8
  store i64 %5, i64* %122, align 8
  br label %133

124:                                              ; preds = %96
  %125 = icmp ne i32 %4, 1
  %126 = zext i1 %125 to i32
  %127 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1051"*
  %128 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase.1051"* %127) #12
  %129 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #12
  %130 = load i64, i64* %128, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9, i64 0, i32 0
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %132, i32 %126, i64 %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #12
  br label %133

133:                                              ; preds = %120, %106, %124
  %134 = phi i64* [ %128, %124 ], [ %108, %106 ], [ %122, %120 ]
  %135 = call i64* @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3AddINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_jNS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::LocalIsolate"* %0, i64* %1, i32 %2, i64* %134, i32 %100, %"class.v8::internal::InternalIndex"* nonnull %8) #12
  %136 = load i64, i64* %135, align 8
  %137 = load i64, i64* %1, align 8
  %138 = trunc i64 %136 to i32
  %139 = trunc i64 %137 to i32
  %140 = icmp eq i32 %138, %139
  br i1 %140, label %142, label %141, !prof !2

141:                                              ; preds = %133
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

142:                                              ; preds = %133
  %143 = bitcast %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #12
  %144 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %137, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %7, i64 0, i32 0
  call void @_ZN2v88internal16NumberDictionary18UpdateMaxNumberKeyEjNS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::NumberDictionary"* nonnull %145, i32 %2, i64* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #12
  %146 = load i64, i64* %1, align 8
  %147 = add i64 %146, 19
  %148 = inttoptr i64 %147 to i32*
  store atomic volatile i32 2, i32* %148 monotonic, align 4
  br label %421

149:                                              ; preds = %80
  %150 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %8, i64 0, i32 0
  store i64 %64, i64* %150, align 8
  %151 = mul i64 %64, 51539607552
  %152 = add i64 %151, 103079215104
  %153 = ashr exact i64 %152, 32
  %154 = add i64 %54, %153
  %155 = inttoptr i64 %154 to i32*
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, -512
  %158 = and i64 %13, -4294967296
  %159 = add i64 %151, 85899345920
  %160 = ashr exact i64 %159, 32
  %161 = add i64 %54, %160
  %162 = inttoptr i64 %161 to i32*
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = zext i32 %163 to i64
  %165 = or i64 %158, %164
  %166 = icmp eq i32 %4, 0
  br i1 %166, label %167, label %338

167:                                              ; preds = %149
  %168 = and i64 %164, 1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %299, label %170

170:                                              ; preds = %167
  %171 = add i64 %165, -1
  %172 = inttoptr i64 %171 to i32*
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %158, %174
  %176 = add i64 %175, 7
  %177 = inttoptr i64 %176 to i16*
  %178 = load atomic i16, i16* %177 monotonic, align 2
  %179 = icmp eq i16 %178, 87
  br i1 %179, label %180, label %302

180:                                              ; preds = %170
  %181 = add i64 %165, 3
  %182 = inttoptr i64 %181 to i32*
  %183 = load i32, i32* %182, align 4
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = ashr i32 %183, 1
  %187 = select i1 %185, i32 %186, i32 -1
  %188 = add i64 %165, 7
  %189 = inttoptr i64 %188 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = ashr i32 %190, 1
  %194 = select i1 %192, i32 %193, i32 -1
  %195 = icmp slt i32 %187, %3
  %196 = icmp slt i32 %194, %3
  %197 = and i1 %195, %196
  br i1 %197, label %198, label %234

198:                                              ; preds = %180
  %199 = or i32 %157, 32
  store atomic volatile i32 %199, i32* %155 monotonic, align 4
  %200 = load i64, i64* %1, align 8
  %201 = load i64, i64* %150, align 8
  %202 = mul i64 %201, 51539607552
  %203 = add i64 %202, 85899345920
  %204 = ashr exact i64 %203, 32
  %205 = add i64 %200, 7
  %206 = add i64 %205, %204
  %207 = inttoptr i64 %206 to i32*
  %208 = trunc i64 %5 to i32
  store atomic volatile i32 %208, i32* %207 monotonic, align 4
  %209 = and i64 %5, 1
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %421, label %211

211:                                              ; preds = %198
  %212 = and i64 %200, -262144
  %213 = or i64 %212, 8
  %214 = inttoptr i64 %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = and i64 %215, 262144
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %222, label %218

218:                                              ; preds = %211
  %219 = or i64 %212, 16
  %220 = inttoptr i64 %219 to %"class.v8::internal::Heap"**
  %221 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %220, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %221, i64 %200, i64 %206, i64 %5) #12
  br label %222

222:                                              ; preds = %218, %211
  %223 = and i64 %5, -262144
  %224 = or i64 %223, 8
  %225 = inttoptr i64 %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = and i64 %226, 24
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %421, label %229

229:                                              ; preds = %222
  %230 = load i64, i64* %214, align 8
  %231 = and i64 %230, 24
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %421

233:                                              ; preds = %229
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %200, i64 %206, i64 %5) #12
  br label %421

234:                                              ; preds = %180
  %235 = icmp eq i32 %187, -1
  %236 = xor i1 %195, true
  %237 = or i1 %235, %236
  br i1 %237, label %267, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds i64, i64* %15, i64 6
  %240 = load i64, i64* %239, align 8
  %241 = trunc i64 %240 to i32
  store atomic volatile i32 %241, i32* %182 monotonic, align 4
  %242 = and i64 %240, 1
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %421, label %244

244:                                              ; preds = %238
  %245 = and i64 %165, -262144
  %246 = or i64 %245, 8
  %247 = inttoptr i64 %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = and i64 %248, 262144
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %255, label %251

251:                                              ; preds = %244
  %252 = or i64 %245, 16
  %253 = inttoptr i64 %252 to %"class.v8::internal::Heap"**
  %254 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %253, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %254, i64 %165, i64 %181, i64 %240) #12
  br label %255

255:                                              ; preds = %251, %244
  %256 = and i64 %240, -262144
  %257 = or i64 %256, 8
  %258 = inttoptr i64 %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = and i64 %259, 24
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %421, label %262

262:                                              ; preds = %255
  %263 = load i64, i64* %247, align 8
  %264 = and i64 %263, 24
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %266, label %421

266:                                              ; preds = %262
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %165, i64 %181, i64 %240) #12
  br label %421

267:                                              ; preds = %234
  %268 = icmp ne i32 %194, -1
  %269 = and i1 %268, %196
  br i1 %269, label %270, label %421

270:                                              ; preds = %267
  %271 = getelementptr inbounds i64, i64* %15, i64 6
  %272 = load i64, i64* %271, align 8
  %273 = trunc i64 %272 to i32
  store atomic volatile i32 %273, i32* %189 monotonic, align 4
  %274 = and i64 %272, 1
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %421, label %276

276:                                              ; preds = %270
  %277 = and i64 %165, -262144
  %278 = or i64 %277, 8
  %279 = inttoptr i64 %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = and i64 %280, 262144
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %287, label %283

283:                                              ; preds = %276
  %284 = or i64 %277, 16
  %285 = inttoptr i64 %284 to %"class.v8::internal::Heap"**
  %286 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %285, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %286, i64 %165, i64 %188, i64 %272) #12
  br label %287

287:                                              ; preds = %283, %276
  %288 = and i64 %272, -262144
  %289 = or i64 %288, 8
  %290 = inttoptr i64 %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = and i64 %291, 24
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %421, label %294

294:                                              ; preds = %287
  %295 = load i64, i64* %279, align 8
  %296 = and i64 %295, 24
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %421

298:                                              ; preds = %294
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %165, i64 %188, i64 %272) #12
  br label %421

299:                                              ; preds = %167
  %300 = ashr i32 %163, 1
  %301 = icmp slt i32 %300, %3
  br i1 %301, label %302, label %421

302:                                              ; preds = %170, %299
  %303 = or i32 %157, 32
  store atomic volatile i32 %303, i32* %155 monotonic, align 4
  %304 = load i64, i64* %1, align 8
  %305 = load i64, i64* %150, align 8
  %306 = mul i64 %305, 51539607552
  %307 = add i64 %306, 85899345920
  %308 = ashr exact i64 %307, 32
  %309 = add i64 %304, 7
  %310 = add i64 %309, %308
  %311 = inttoptr i64 %310 to i32*
  %312 = trunc i64 %5 to i32
  store atomic volatile i32 %312, i32* %311 monotonic, align 4
  %313 = and i64 %5, 1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %421, label %315

315:                                              ; preds = %302
  %316 = and i64 %304, -262144
  %317 = or i64 %316, 8
  %318 = inttoptr i64 %317 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = and i64 %319, 262144
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %326, label %322

322:                                              ; preds = %315
  %323 = or i64 %316, 16
  %324 = inttoptr i64 %323 to %"class.v8::internal::Heap"**
  %325 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %324, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %325, i64 %304, i64 %310, i64 %5) #12
  br label %326

326:                                              ; preds = %322, %315
  %327 = and i64 %5, -262144
  %328 = or i64 %327, 8
  %329 = inttoptr i64 %328 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = and i64 %330, 24
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %421, label %333

333:                                              ; preds = %326
  %334 = load i64, i64* %318, align 8
  %335 = and i64 %334, 24
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %421

337:                                              ; preds = %333
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %304, i64 %310, i64 %5) #12
  br label %421

338:                                              ; preds = %149
  %339 = icmp ne i32 %4, 1
  %340 = zext i1 %339 to i32
  %341 = and i64 %164, 1
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %367, label %343

343:                                              ; preds = %338
  %344 = add i64 %165, -1
  %345 = inttoptr i64 %344 to i32*
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = zext i32 %346 to i64
  %348 = or i64 %158, %347
  %349 = add i64 %348, 7
  %350 = inttoptr i64 %349 to i16*
  %351 = load atomic i16, i16* %350 monotonic, align 2
  %352 = icmp eq i16 %351, 87
  br i1 %352, label %353, label %370

353:                                              ; preds = %343
  %354 = bitcast %"class.v8::internal::AccessorPair"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %354) #12
  %355 = getelementptr inbounds %"class.v8::internal::AccessorPair", %"class.v8::internal::AccessorPair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %165, i64* %355, align 8
  %356 = select i1 %339, i64 7, i64 3
  %357 = add i64 %165, %356
  %358 = inttoptr i64 %357 to i32*
  %359 = load i32, i32* %358, align 4
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = ashr i32 %359, 1
  %363 = select i1 %361, i32 %362, i32 -1
  %364 = icmp slt i32 %363, %3
  br i1 %364, label %365, label %366

365:                                              ; preds = %353
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %10, i32 %340, i64 %5)
  br label %366

366:                                              ; preds = %353, %365
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %354) #12
  br label %421

367:                                              ; preds = %338
  %368 = ashr i32 %163, 1
  %369 = icmp slt i32 %368, %3
  br i1 %369, label %370, label %421

370:                                              ; preds = %343, %367
  %371 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1051"*
  %372 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase.1051"* %371) #12
  %373 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %373) #12
  %374 = load i64, i64* %372, align 8
  %375 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %374, i64* %375, align 8
  %376 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %11, i64 0, i32 0
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %376, i32 %340, i64 %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %373) #12
  %377 = or i32 %157, 34
  %378 = load i64, i64* %1, align 8
  %379 = load i64, i64* %150, align 8
  %380 = mul i64 %379, 51539607552
  %381 = add i64 %380, 103079215104
  %382 = ashr exact i64 %381, 32
  %383 = add i64 %378, 7
  %384 = add i64 %383, %382
  %385 = inttoptr i64 %384 to i32*
  store atomic volatile i32 %377, i32* %385 monotonic, align 4
  %386 = load i64, i64* %1, align 8
  %387 = load i64, i64* %150, align 8
  %388 = load i64, i64* %372, align 8
  %389 = mul i64 %387, 51539607552
  %390 = add i64 %389, 85899345920
  %391 = ashr exact i64 %390, 32
  %392 = add i64 %386, 7
  %393 = add i64 %392, %391
  %394 = inttoptr i64 %393 to i32*
  %395 = trunc i64 %388 to i32
  store atomic volatile i32 %395, i32* %394 monotonic, align 4
  %396 = and i64 %388, 1
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %421, label %398

398:                                              ; preds = %370
  %399 = and i64 %386, -262144
  %400 = or i64 %399, 8
  %401 = inttoptr i64 %400 to i64*
  %402 = load i64, i64* %401, align 8
  %403 = and i64 %402, 262144
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %409, label %405

405:                                              ; preds = %398
  %406 = or i64 %399, 16
  %407 = inttoptr i64 %406 to %"class.v8::internal::Heap"**
  %408 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %407, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %408, i64 %386, i64 %393, i64 %388) #12
  br label %409

409:                                              ; preds = %405, %398
  %410 = and i64 %388, -262144
  %411 = or i64 %410, 8
  %412 = inttoptr i64 %411 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = and i64 %413, 24
  %415 = icmp eq i64 %414, 0
  br i1 %415, label %421, label %416

416:                                              ; preds = %409
  %417 = load i64, i64* %401, align 8
  %418 = and i64 %417, 24
  %419 = icmp eq i64 %418, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %416
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %386, i64 %393, i64 %388) #12
  br label %421

421:                                              ; preds = %299, %367, %366, %298, %294, %287, %270, %266, %262, %255, %238, %233, %229, %222, %198, %267, %302, %326, %333, %337, %370, %409, %416, %420, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal16ClassBoilerplate21BuildClassBoilerplateINS0_7IsolateEEENS0_6HandleIS1_EEPT_PNS0_12ClassLiteralE(%"class.v8::internal::Isolate"*, %"class.v8::internal::ClassLiteral"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::ObjectDescriptor", align 8
  %4 = alloca %"class.v8::internal::ObjectDescriptor", align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31
  %7 = bitcast %"struct.v8::internal::HandleScopeData"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  %14 = bitcast %"class.v8::internal::ObjectDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %3, i64 0, i32 0
  store i32 6, i32* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %3, i64 0, i32 1
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %3, i64 0, i32 2
  store i32 1, i32* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %3, i64 0, i32 3
  %19 = bitcast i32* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 52, i1 false) #12
  %20 = bitcast %"class.v8::internal::ObjectDescriptor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %4, i64 0, i32 0
  store i32 1, i32* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %4, i64 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %4, i64 0, i32 2
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %4, i64 0, i32 3
  %25 = bitcast i32* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 52, i1 false) #12
  %26 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 5
  %27 = load %"class.v8::internal::ZoneList.1136"*, %"class.v8::internal::ZoneList.1136"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::ZoneList.1136", %"class.v8::internal::ZoneList.1136"* %27, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %69, label %31

31:                                               ; preds = %110, %2
  call void @_ZN2v88internal16ObjectDescriptorINS0_7IsolateEE15CreateTemplatesEPS2_(%"class.v8::internal::ObjectDescriptor"* nonnull %3, %"class.v8::internal::Isolate"* %0)
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 595
  call void @_ZN2v88internal16ObjectDescriptorINS0_7IsolateEE11AddConstantEPS2_NS0_6HandleINS0_4NameEEENS5_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::ObjectDescriptor"* nonnull %3, %"class.v8::internal::Isolate"* %0, i64* %32, i64* %33, i32 3)
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 408
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 596
  call void @_ZN2v88internal16ObjectDescriptorINS0_7IsolateEE11AddConstantEPS2_NS0_6HandleINS0_4NameEEENS5_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::ObjectDescriptor"* nonnull %3, %"class.v8::internal::Isolate"* %0, i64* %34, i64* %35, i32 7)
  %36 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %37 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewClassPositionsEii(%"class.v8::internal::FactoryBase"* %36, i32 %38, i32 %40) #12
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 479
  call void @_ZN2v88internal16ObjectDescriptorINS0_7IsolateEE11AddConstantEPS2_NS0_6HandleINS0_4NameEEENS5_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::ObjectDescriptor"* nonnull %3, %"class.v8::internal::Isolate"* %0, i64* %42, i64* %41, i32 2)
  call void @_ZN2v88internal16ObjectDescriptorINS0_7IsolateEE15CreateTemplatesEPS2_(%"class.v8::internal::ObjectDescriptor"* nonnull %4, %"class.v8::internal::Isolate"* %0)
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %44 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %43, align 8
  %45 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %31
  %47 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %44, i64 2) #12
  br label %60

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = load i64*, i64** %9, align 8
  %52 = icmp eq i64* %50, %51
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %55

55:                                               ; preds = %53, %48
  %56 = phi i64* [ %54, %53 ], [ %50, %48 ]
  %57 = ptrtoint i64* %56 to i64
  %58 = add i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  store i64* %59, i64** %49, align 8
  store i64 2, i64* %56, align 8
  br label %60

60:                                               ; preds = %46, %55
  %61 = phi i64* [ %47, %46 ], [ %56, %55 ]
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 297
  call void @_ZN2v88internal16ObjectDescriptorINS0_7IsolateEE11AddConstantEPS2_NS0_6HandleINS0_4NameEEENS5_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::ObjectDescriptor"* nonnull %4, %"class.v8::internal::Isolate"* %0, i64* %62, i64* %61, i32 2)
  %63 = load %"class.v8::internal::ZoneList.1136"*, %"class.v8::internal::ZoneList.1136"** %26, align 8
  %64 = getelementptr inbounds %"class.v8::internal::ZoneList.1136", %"class.v8::internal::ZoneList.1136"* %63, i64 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %117

67:                                               ; preds = %60
  %68 = bitcast i32* %5 to i8*
  br label %123

69:                                               ; preds = %2, %110
  %70 = phi i64 [ %111, %110 ], [ 0, %2 ]
  %71 = phi %"class.v8::internal::ZoneList.1136"* [ %112, %110 ], [ %27, %2 ]
  %72 = getelementptr inbounds %"class.v8::internal::ZoneList.1136", %"class.v8::internal::ZoneList.1136"* %71, i64 0, i32 0
  %73 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %73, i64 %70
  %75 = load %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %75, i64 0, i32 2
  %77 = load i8, i8* %76, align 1, !range !3
  %78 = icmp eq i8 %77, 0
  %79 = select i1 %78, %"class.v8::internal::ObjectDescriptor"* %4, %"class.v8::internal::ObjectDescriptor"* %3
  %80 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %75, i64 0, i32 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = and i64 %81, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %92, label %84

84:                                               ; preds = %69
  %85 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %75, i64 0, i32 1
  %86 = load i8, i8* %85, align 8
  %87 = icmp eq i8 %86, 3
  br i1 %87, label %110, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %79, i64 0, i32 4
  %90 = load i32, i32* %89, align 8
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %89, align 8
  br label %110

92:                                               ; preds = %69
  %93 = and i64 %81, -2
  %94 = inttoptr i64 %93 to %"class.v8::internal::Expression"*
  %95 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %94, i64 0, i32 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 63
  %98 = icmp eq i32 %97, 41
  %99 = inttoptr i64 %93 to %"class.v8::internal::Literal"*
  %100 = select i1 %98, %"class.v8::internal::Literal"* %99, %"class.v8::internal::Literal"* null
  %101 = tail call zeroext i1 @_ZNK2v88internal7Literal14IsPropertyNameEv(%"class.v8::internal::Literal"* %100) #12
  br i1 %101, label %102, label %106

102:                                              ; preds = %92
  %103 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %79, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %103, align 4
  br label %110

106:                                              ; preds = %92
  %107 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %79, i64 0, i32 3
  %108 = load i32, i32* %107, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %107, align 4
  br label %110

110:                                              ; preds = %84, %102, %106, %88
  %111 = add nuw nsw i64 %70, 1
  %112 = load %"class.v8::internal::ZoneList.1136"*, %"class.v8::internal::ZoneList.1136"** %26, align 8
  %113 = getelementptr inbounds %"class.v8::internal::ZoneList.1136", %"class.v8::internal::ZoneList.1136"* %112, i64 0, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %114 to i64
  %116 = icmp slt i64 %111, %115
  br i1 %116, label %69, label %31

117:                                              ; preds = %191, %60
  %118 = phi i32 [ 3, %60 ], [ %194, %191 ]
  %119 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 0, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = trunc i32 %120 to i8
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %213, label %201

123:                                              ; preds = %67, %191
  %124 = phi i64 [ 0, %67 ], [ %195, %191 ]
  %125 = phi %"class.v8::internal::ZoneList.1136"* [ %63, %67 ], [ %196, %191 ]
  %126 = phi i32 [ 3, %67 ], [ %194, %191 ]
  %127 = phi i32 [ undef, %67 ], [ %192, %191 ]
  %128 = getelementptr inbounds %"class.v8::internal::ZoneList.1136", %"class.v8::internal::ZoneList.1136"* %125, i64 0, i32 0
  %129 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %128, align 8
  %130 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %129, i64 %124
  %131 = load %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %131, i64 0, i32 1
  %133 = load i8, i8* %132, align 8
  switch i8 %133, label %142 [
    i8 0, label %134
    i8 1, label %135
    i8 2, label %136
    i8 3, label %137
  ]

134:                                              ; preds = %123
  br label %142

135:                                              ; preds = %123
  br label %142

136:                                              ; preds = %123
  br label %142

137:                                              ; preds = %123
  %138 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %131, i64 0, i32 0, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = trunc i64 %139 to i32
  %141 = and i32 %140, 1
  br label %191

142:                                              ; preds = %123, %136, %135, %134
  %143 = phi i32 [ %127, %123 ], [ 2, %136 ], [ 1, %135 ], [ 0, %134 ]
  %144 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %131, i64 0, i32 2
  %145 = load i8, i8* %144, align 1, !range !3
  %146 = icmp eq i8 %145, 0
  %147 = select i1 %146, %"class.v8::internal::ObjectDescriptor"* %4, %"class.v8::internal::ObjectDescriptor"* %3
  %148 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %131, i64 0, i32 0, i32 0, i32 0
  %149 = load i64, i64* %148, align 8
  %150 = and i64 %149, 1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %169, label %152

152:                                              ; preds = %142
  %153 = add nuw nsw i32 %126, 8
  %154 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %147, i64 0, i32 2
  store i32 %153, i32* %154, align 8
  %155 = shl i32 %126, 2
  %156 = or i32 %143, %155
  %157 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %147, i64 0, i32 9, i32 0, i32 0
  %158 = load i64*, i64** %157, align 8
  %159 = load i64, i64* %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %147, i64 0, i32 5
  %161 = load i32, i32* %160, align 4
  %162 = add nsw i32 %161, 1
  store i32 %162, i32* %160, align 4
  %163 = shl i32 %156, 1
  %164 = shl i32 %161, 2
  %165 = sext i32 %164 to i64
  %166 = add i64 %159, 7
  %167 = add i64 %166, %165
  %168 = inttoptr i64 %167 to i32*
  store atomic volatile i32 %163, i32* %168 monotonic, align 4
  br label %191

169:                                              ; preds = %142
  %170 = and i64 %149, -2
  %171 = inttoptr i64 %170 to %"class.v8::internal::Expression"*
  %172 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %171, i64 0, i32 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = and i32 %173, 63
  %175 = icmp eq i32 %174, 41
  %176 = inttoptr i64 %170 to %"class.v8::internal::Literal"*
  %177 = select i1 %175, %"class.v8::internal::Literal"* %176, %"class.v8::internal::Literal"* null
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #12
  %178 = call zeroext i1 @_ZNK2v88internal7Literal12AsArrayIndexEPj(%"class.v8::internal::Literal"* %177, i32* nonnull %5) #12
  br i1 %178, label %179, label %185

179:                                              ; preds = %169
  %180 = load i32, i32* %5, align 4
  %181 = shl nuw i32 %126, 1
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %147, i64 0, i32 8, i32 0, i32 0
  %184 = load i64*, i64** %183, align 8
  call fastcc void @_ZN2v88internal12_GLOBAL__N_123AddToDictionaryTemplateINS0_7IsolateENS0_16NumberDictionaryEjEEvPT_NS0_6HandleIT0_EET1_iNS0_16ClassBoilerplate9ValueKindENS0_3SmiE(%"class.v8::internal::Isolate"* %0, i64* %184, i32 %180, i32 %126, i32 %143, i64 %182) #12
  br label %190

185:                                              ; preds = %169
  %186 = getelementptr inbounds %"class.v8::internal::Literal", %"class.v8::internal::Literal"* %177, i64 0, i32 1, i32 0
  %187 = bitcast %"class.v8::internal::AstRawString"** %186 to i64***
  %188 = load i64**, i64*** %187, align 8
  %189 = load i64*, i64** %188, align 8
  call void @_ZN2v88internal16ObjectDescriptorINS0_7IsolateEE16AddNamedPropertyEPS2_NS0_6HandleINS0_4NameEEENS0_16ClassBoilerplate9ValueKindEi(%"class.v8::internal::ObjectDescriptor"* nonnull %147, %"class.v8::internal::Isolate"* %0, i64* %189, i32 %143, i32 %126)
  br label %190

190:                                              ; preds = %185, %179
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #12
  br label %191

191:                                              ; preds = %152, %190, %137
  %192 = phi i32 [ %127, %137 ], [ %143, %190 ], [ %143, %152 ]
  %193 = phi i32 [ %141, %137 ], [ 1, %190 ], [ 2, %152 ]
  %194 = add nuw nsw i32 %193, %126
  %195 = add nuw nsw i64 %124, 1
  %196 = load %"class.v8::internal::ZoneList.1136"*, %"class.v8::internal::ZoneList.1136"** %26, align 8
  %197 = getelementptr inbounds %"class.v8::internal::ZoneList.1136", %"class.v8::internal::ZoneList.1136"* %196, i64 0, i32 2
  %198 = load i32, i32* %197, align 4
  %199 = sext i32 %198 to i64
  %200 = icmp slt i64 %195, %199
  br i1 %200, label %123, label %117

201:                                              ; preds = %117
  %202 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %3, i64 0, i32 4
  %203 = load i32, i32* %202, align 8
  %204 = icmp sgt i32 %203, 0
  br i1 %204, label %213, label %205

205:                                              ; preds = %201
  %206 = load i32, i32* %16, align 4
  %207 = load i32, i32* %15, align 8
  %208 = add nsw i32 %207, %206
  %209 = icmp sgt i32 %208, 1020
  br i1 %209, label %213, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 378
  %212 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 594
  call void @_ZN2v88internal16ObjectDescriptorINS0_7IsolateEE11AddConstantEPS2_NS0_6HandleINS0_4NameEEENS5_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::ObjectDescriptor"* nonnull %3, %"class.v8::internal::Isolate"* %0, i64* %211, i64* %212, i32 3)
  br label %213

213:                                              ; preds = %201, %210, %205, %117
  %214 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %3, i64 0, i32 4
  %215 = load i32, i32* %214, align 8
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %222, label %217

217:                                              ; preds = %213
  %218 = load i32, i32* %16, align 4
  %219 = load i32, i32* %15, align 8
  %220 = add nsw i32 %219, %218
  %221 = icmp sgt i32 %220, 1020
  br i1 %221, label %222, label %230

222:                                              ; preds = %217, %213
  %223 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %3, i64 0, i32 7, i32 0, i32 0
  %224 = load i64*, i64** %223, align 8
  %225 = load i64, i64* %224, align 8
  %226 = load i32, i32* %17, align 8
  %227 = shl i32 %226, 1
  %228 = add i64 %225, 19
  %229 = inttoptr i64 %228 to i32*
  store atomic volatile i32 %227, i32* %229 monotonic, align 4
  br label %230

230:                                              ; preds = %217, %222
  %231 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %4, i64 0, i32 4
  %232 = load i32, i32* %231, align 8
  %233 = icmp sgt i32 %232, 0
  br i1 %233, label %239, label %234

234:                                              ; preds = %230
  %235 = load i32, i32* %22, align 4
  %236 = load i32, i32* %21, align 8
  %237 = add nsw i32 %236, %235
  %238 = icmp sgt i32 %237, 1020
  br i1 %238, label %239, label %247

239:                                              ; preds = %234, %230
  %240 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %4, i64 0, i32 7, i32 0, i32 0
  %241 = load i64*, i64** %240, align 8
  %242 = load i64, i64* %241, align 8
  %243 = load i32, i32* %23, align 8
  %244 = shl i32 %243, 1
  %245 = add i64 %242, 19
  %246 = inttoptr i64 %245 to i32*
  store atomic volatile i32 %244, i32* %246 monotonic, align 4
  br label %247

247:                                              ; preds = %234, %239
  %248 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %36, i32 7, i8 zeroext 1) #12
  %249 = load i64, i64* %248, align 8
  %250 = shl nuw i32 %118, 1
  %251 = add i64 %249, 7
  %252 = inttoptr i64 %251 to i32*
  store atomic volatile i32 %250, i32* %252 monotonic, align 4
  %253 = load i64, i64* %248, align 8
  %254 = load i32, i32* %214, align 8
  %255 = icmp sgt i32 %254, 0
  br i1 %255, label %261, label %256

256:                                              ; preds = %247
  %257 = load i32, i32* %16, align 4
  %258 = load i32, i32* %15, align 8
  %259 = add nsw i32 %258, %257
  %260 = icmp sgt i32 %259, 1020
  br i1 %260, label %261, label %263

261:                                              ; preds = %256, %247
  %262 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %3, i64 0, i32 7, i32 0, i32 0
  br label %265

263:                                              ; preds = %256
  %264 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %3, i64 0, i32 6, i32 0, i32 0
  br label %265

265:                                              ; preds = %261, %263
  %266 = phi i64** [ %262, %261 ], [ %264, %263 ]
  %267 = load i64*, i64** %266, align 8
  %268 = load i64, i64* %267, align 8
  %269 = add i64 %253, 11
  %270 = inttoptr i64 %269 to i32*
  %271 = trunc i64 %268 to i32
  store atomic volatile i32 %271, i32* %270 monotonic, align 4
  %272 = and i64 %268, 1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %297, label %274

274:                                              ; preds = %265
  %275 = and i64 %253, -262144
  %276 = or i64 %275, 8
  %277 = inttoptr i64 %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = and i64 %278, 262144
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %285, label %281

281:                                              ; preds = %274
  %282 = or i64 %275, 16
  %283 = inttoptr i64 %282 to %"class.v8::internal::Heap"**
  %284 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %283, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %284, i64 %253, i64 %269, i64 %268) #12
  br label %285

285:                                              ; preds = %281, %274
  %286 = and i64 %268, -262144
  %287 = or i64 %286, 8
  %288 = inttoptr i64 %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = and i64 %289, 24
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %297, label %292

292:                                              ; preds = %285
  %293 = load i64, i64* %277, align 8
  %294 = and i64 %293, 24
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %292
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %253, i64 %269, i64 %268) #12
  br label %297

297:                                              ; preds = %265, %285, %292, %296
  %298 = load i64, i64* %248, align 8
  %299 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %3, i64 0, i32 8, i32 0, i32 0
  %300 = load i64*, i64** %299, align 8
  %301 = load i64, i64* %300, align 8
  %302 = add i64 %298, 15
  %303 = inttoptr i64 %302 to i32*
  %304 = trunc i64 %301 to i32
  store atomic volatile i32 %304, i32* %303 monotonic, align 4
  %305 = and i64 %301, 1
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %330, label %307

307:                                              ; preds = %297
  %308 = and i64 %298, -262144
  %309 = or i64 %308, 8
  %310 = inttoptr i64 %309 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = and i64 %311, 262144
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %318, label %314

314:                                              ; preds = %307
  %315 = or i64 %308, 16
  %316 = inttoptr i64 %315 to %"class.v8::internal::Heap"**
  %317 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %316, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %317, i64 %298, i64 %302, i64 %301) #12
  br label %318

318:                                              ; preds = %314, %307
  %319 = and i64 %301, -262144
  %320 = or i64 %319, 8
  %321 = inttoptr i64 %320 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = and i64 %322, 24
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %330, label %325

325:                                              ; preds = %318
  %326 = load i64, i64* %310, align 8
  %327 = and i64 %326, 24
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %325
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %298, i64 %302, i64 %301) #12
  br label %330

330:                                              ; preds = %297, %318, %325, %329
  %331 = load i64, i64* %248, align 8
  %332 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %3, i64 0, i32 9, i32 0, i32 0
  %333 = load i64*, i64** %332, align 8
  %334 = load i64, i64* %333, align 8
  %335 = add i64 %331, 19
  %336 = inttoptr i64 %335 to i32*
  %337 = trunc i64 %334 to i32
  store atomic volatile i32 %337, i32* %336 monotonic, align 4
  %338 = and i64 %334, 1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %351, label %340

340:                                              ; preds = %330
  %341 = and i64 %331, -262144
  %342 = or i64 %341, 8
  %343 = inttoptr i64 %342 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = and i64 %344, 262144
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %351, label %347

347:                                              ; preds = %340
  %348 = or i64 %341, 16
  %349 = inttoptr i64 %348 to %"class.v8::internal::Heap"**
  %350 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %349, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %350, i64 %331, i64 %335, i64 %334) #12
  br label %351

351:                                              ; preds = %347, %340, %330
  %352 = and i64 %334, -262144
  %353 = or i64 %352, 8
  %354 = inttoptr i64 %353 to i64*
  %355 = load i64, i64* %354, align 8
  %356 = and i64 %355, 24
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %366, label %358

358:                                              ; preds = %351
  %359 = and i64 %331, -262144
  %360 = or i64 %359, 8
  %361 = inttoptr i64 %360 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = and i64 %362, 24
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %365, label %366

365:                                              ; preds = %358
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %331, i64 %335, i64 %334) #12
  br label %366

366:                                              ; preds = %351, %358, %365
  %367 = load i64, i64* %248, align 8
  %368 = load i32, i32* %231, align 8
  %369 = icmp sgt i32 %368, 0
  br i1 %369, label %375, label %370

370:                                              ; preds = %366
  %371 = load i32, i32* %22, align 4
  %372 = load i32, i32* %21, align 8
  %373 = add nsw i32 %372, %371
  %374 = icmp sgt i32 %373, 1020
  br i1 %374, label %375, label %377

375:                                              ; preds = %370, %366
  %376 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %4, i64 0, i32 7, i32 0, i32 0
  br label %379

377:                                              ; preds = %370
  %378 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %4, i64 0, i32 6, i32 0, i32 0
  br label %379

379:                                              ; preds = %375, %377
  %380 = phi i64** [ %376, %375 ], [ %378, %377 ]
  %381 = load i64*, i64** %380, align 8
  %382 = load i64, i64* %381, align 8
  %383 = add i64 %367, 23
  %384 = inttoptr i64 %383 to i32*
  %385 = trunc i64 %382 to i32
  store atomic volatile i32 %385, i32* %384 monotonic, align 4
  %386 = and i64 %382, 1
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %411, label %388

388:                                              ; preds = %379
  %389 = and i64 %367, -262144
  %390 = or i64 %389, 8
  %391 = inttoptr i64 %390 to i64*
  %392 = load i64, i64* %391, align 8
  %393 = and i64 %392, 262144
  %394 = icmp eq i64 %393, 0
  br i1 %394, label %399, label %395

395:                                              ; preds = %388
  %396 = or i64 %389, 16
  %397 = inttoptr i64 %396 to %"class.v8::internal::Heap"**
  %398 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %397, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %398, i64 %367, i64 %383, i64 %382) #12
  br label %399

399:                                              ; preds = %395, %388
  %400 = and i64 %382, -262144
  %401 = or i64 %400, 8
  %402 = inttoptr i64 %401 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = and i64 %403, 24
  %405 = icmp eq i64 %404, 0
  br i1 %405, label %411, label %406

406:                                              ; preds = %399
  %407 = load i64, i64* %391, align 8
  %408 = and i64 %407, 24
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %410, label %411

410:                                              ; preds = %406
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %367, i64 %383, i64 %382) #12
  br label %411

411:                                              ; preds = %379, %399, %406, %410
  %412 = load i64, i64* %248, align 8
  %413 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %4, i64 0, i32 8, i32 0, i32 0
  %414 = load i64*, i64** %413, align 8
  %415 = load i64, i64* %414, align 8
  %416 = add i64 %412, 27
  %417 = inttoptr i64 %416 to i32*
  %418 = trunc i64 %415 to i32
  store atomic volatile i32 %418, i32* %417 monotonic, align 4
  %419 = and i64 %415, 1
  %420 = icmp eq i64 %419, 0
  br i1 %420, label %444, label %421

421:                                              ; preds = %411
  %422 = and i64 %412, -262144
  %423 = or i64 %422, 8
  %424 = inttoptr i64 %423 to i64*
  %425 = load i64, i64* %424, align 8
  %426 = and i64 %425, 262144
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %432, label %428

428:                                              ; preds = %421
  %429 = or i64 %422, 16
  %430 = inttoptr i64 %429 to %"class.v8::internal::Heap"**
  %431 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %430, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %431, i64 %412, i64 %416, i64 %415) #12
  br label %432

432:                                              ; preds = %428, %421
  %433 = and i64 %415, -262144
  %434 = or i64 %433, 8
  %435 = inttoptr i64 %434 to i64*
  %436 = load i64, i64* %435, align 8
  %437 = and i64 %436, 24
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %444, label %439

439:                                              ; preds = %432
  %440 = load i64, i64* %424, align 8
  %441 = and i64 %440, 24
  %442 = icmp eq i64 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %439
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %412, i64 %416, i64 %415) #12
  br label %444

444:                                              ; preds = %411, %432, %439, %443
  %445 = load i64, i64* %248, align 8
  %446 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %4, i64 0, i32 9, i32 0, i32 0
  %447 = load i64*, i64** %446, align 8
  %448 = load i64, i64* %447, align 8
  %449 = add i64 %445, 31
  %450 = inttoptr i64 %449 to i32*
  %451 = trunc i64 %448 to i32
  store atomic volatile i32 %451, i32* %450 monotonic, align 4
  %452 = and i64 %448, 1
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %465, label %454

454:                                              ; preds = %444
  %455 = and i64 %445, -262144
  %456 = or i64 %455, 8
  %457 = inttoptr i64 %456 to i64*
  %458 = load i64, i64* %457, align 8
  %459 = and i64 %458, 262144
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %465, label %461

461:                                              ; preds = %454
  %462 = or i64 %455, 16
  %463 = inttoptr i64 %462 to %"class.v8::internal::Heap"**
  %464 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %463, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %464, i64 %445, i64 %449, i64 %448) #12
  br label %465

465:                                              ; preds = %461, %454, %444
  %466 = and i64 %448, -262144
  %467 = or i64 %466, 8
  %468 = inttoptr i64 %467 to i64*
  %469 = load i64, i64* %468, align 8
  %470 = and i64 %469, 24
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %480, label %472

472:                                              ; preds = %465
  %473 = and i64 %445, -262144
  %474 = or i64 %473, 8
  %475 = inttoptr i64 %474 to i64*
  %476 = load i64, i64* %475, align 8
  %477 = and i64 %476, 24
  %478 = icmp eq i64 %477, 0
  br i1 %478, label %479, label %480

479:                                              ; preds = %472
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %445, i64 %449, i64 %448) #12
  br label %480

480:                                              ; preds = %465, %472, %479
  %481 = load i64, i64* %248, align 8
  %482 = inttoptr i64 %8 to i64*
  %483 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %6, i64 0, i32 0
  %484 = load i64*, i64** %483, align 8
  store i64 %8, i64* %7, align 8
  %485 = load i32, i32* %11, align 8
  %486 = add nsw i32 %485, -1
  store i32 %486, i32* %11, align 8
  %487 = load i64*, i64** %9, align 8
  %488 = icmp eq i64* %487, %10
  br i1 %488, label %491, label %489

489:                                              ; preds = %480
  store i64* %10, i64** %9, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  %490 = load i64*, i64** %483, align 8
  br label %491

491:                                              ; preds = %489, %480
  %492 = phi i64* [ %490, %489 ], [ %482, %480 ]
  %493 = phi i64* [ %10, %489 ], [ %484, %480 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %492, i64* %493) #12
  %494 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %43, align 8
  %495 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %494, null
  br i1 %495, label %498, label %496

496:                                              ; preds = %491
  %497 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %494, i64 %481) #12
  br label %510

498:                                              ; preds = %491
  %499 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %500 = load i64*, i64** %499, align 8
  %501 = load i64*, i64** %9, align 8
  %502 = icmp eq i64* %500, %501
  br i1 %502, label %503, label %505

503:                                              ; preds = %498
  %504 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %505

505:                                              ; preds = %503, %498
  %506 = phi i64* [ %504, %503 ], [ %500, %498 ]
  %507 = ptrtoint i64* %506 to i64
  %508 = add i64 %507, 8
  %509 = inttoptr i64 %508 to i64*
  store i64* %509, i64** %499, align 8
  store i64 %481, i64* %506, align 8
  br label %510

510:                                              ; preds = %496, %505
  %511 = phi i64* [ %497, %496 ], [ %506, %505 ]
  %512 = load i64*, i64** %483, align 8
  %513 = load i32, i32* %11, align 8
  %514 = add nsw i32 %513, 1
  store i32 %514, i32* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14) #12
  %515 = icmp eq %"class.v8::internal::Isolate"* %0, null
  br i1 %515, label %517, label %516

516:                                              ; preds = %510
  store i32 %513, i32* %11, align 8
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %512, i64* %512) #12
  br label %517

517:                                              ; preds = %510, %516
  ret i64* %511
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK2v88internal7Literal14IsPropertyNameEv(%"class.v8::internal::Literal"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16ObjectDescriptorINS0_7IsolateEE15CreateTemplatesEPS2_(%"class.v8::internal::ObjectDescriptor"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 30
  %4 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %3, i64** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 115
  %6 = ptrtoint i64* %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 7
  %8 = bitcast %"class.v8::internal::Handle.971"* %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = or i32 %10, %12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %39, label %24

19:                                               ; preds = %2
  %20 = icmp sgt i32 %12, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  br label %30

24:                                               ; preds = %15, %19
  %25 = phi i32 [ %12, %19 ], [ 0, %15 ]
  %26 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, %10
  %29 = icmp sgt i32 %28, 1020
  br i1 %29, label %30, label %37

30:                                               ; preds = %21, %24
  %31 = phi i32 [ %12, %21 ], [ %25, %24 ]
  %32 = phi i32 [ %23, %21 ], [ %27, %24 ]
  %33 = add nsw i32 %31, %10
  %34 = add nsw i32 %33, %32
  %35 = tail call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %1, i32 %34, i8 zeroext 1, i32 0) #12
  %36 = ptrtoint i64* %35 to i64
  store i64 %36, i64* %8, align 8
  br label %39

37:                                               ; preds = %24
  %38 = tail call i64* @_ZN2v88internal15DescriptorArray8AllocateINS0_7IsolateEEENS0_6HandleIS1_EEPT_iiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %1, i32 0, i32 %28, i8 zeroext 1) #12
  store i64* %38, i64** %4, align 8
  br label %39

39:                                               ; preds = %15, %30, %37
  %40 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = or i32 %41, %43
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 111
  %48 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %47, i64** %48, align 8
  br label %59

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 4
  %51 = add nsw i32 %43, %41
  %52 = tail call i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %1, i32 %51, i8 zeroext 1, i32 0) #12
  %53 = load i32, i32* %50, align 8
  %54 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %52, i64** %54, align 8
  %55 = icmp eq i32 %53, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %49
  %57 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %58 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %57, i32 %53, i8 zeroext 1) #12
  br label %61

59:                                               ; preds = %46, %49
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 29
  br label %61

61:                                               ; preds = %59, %56
  %62 = phi i64* [ %58, %56 ], [ %60, %59 ]
  %63 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* %62, i64** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %65 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %64, align 8
  %66 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %61
  %68 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %65, i64 0) #12
  %69 = ptrtoint i64* %68 to i64
  br label %83

70:                                               ; preds = %61
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = icmp eq i64* %72, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %70
  %77 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #12
  br label %78

78:                                               ; preds = %76, %70
  %79 = phi i64* [ %77, %76 ], [ %72, %70 ]
  %80 = ptrtoint i64* %79 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  store i64* %82, i64** %71, align 8
  store i64 0, i64* %79, align 8
  br label %83

83:                                               ; preds = %67, %78
  %84 = phi i64 [ %69, %67 ], [ %80, %78 ]
  %85 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 10
  %86 = bitcast %"class.v8::internal::Handle.1139"* %85 to i64*
  store i64 %84, i64* %86, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16ObjectDescriptorINS0_7IsolateEE11AddConstantEPS2_NS0_6HandleINS0_4NameEEENS5_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::ObjectDescriptor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::Descriptor", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %8 = load i64, i64* %3, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 86
  br label %22

22:                                               ; preds = %5, %11
  %23 = phi i1 [ false, %5 ], [ %21, %11 ]
  %24 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = add nsw i32 %31, %29
  %33 = icmp sgt i32 %32, 1020
  br i1 %33, label %34, label %49

34:                                               ; preds = %22, %27
  %35 = zext i1 %23 to i32
  %36 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %36, align 8
  %39 = shl i32 %4, 3
  %40 = or i32 %39, %35
  %41 = shl i32 %37, 8
  %42 = or i32 %40, %41
  %43 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 7, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = tail call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE31AddNoUpdateNextEnumerationIndexINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %1, i64* %44, i64* %2, i64* %3, i32 %42, %"class.v8::internal::InternalIndex"* null) #12
  %46 = ptrtoint i64* %45 to i64
  %47 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 7
  %48 = bitcast %"class.v8::internal::Handle.971"* %47 to i64*
  store i64 %46, i64* %48, align 8
  br label %60

49:                                               ; preds = %27
  %50 = bitcast %"class.v8::internal::Descriptor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #12
  br i1 %23, label %51, label %52

51:                                               ; preds = %49
  call void @_ZN2v88internal10Descriptor16AccessorConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %6, i64* %2, i64* %3, i32 %4) #12
  br label %53

52:                                               ; preds = %49
  call void @_ZN2v88internal10Descriptor12DataConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %6, i64* %2, i64* %3, i32 %4) #12
  br label %53

53:                                               ; preds = %52, %51
  %54 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  %55 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 6, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %7, i64 0, i32 0
  call void @_ZN2v88internal15DescriptorArray6AppendEPNS0_10DescriptorE(%"class.v8::internal::DescriptorArray"* nonnull %59, %"class.v8::internal::Descriptor"* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #12
  br label %60

60:                                               ; preds = %53, %34
  ret void
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewClassPositionsEii(%"class.v8::internal::FactoryBase"*, i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal7Literal12AsArrayIndexEPj(%"class.v8::internal::Literal"*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16ObjectDescriptorINS0_7IsolateEE16AddNamedPropertyEPS2_NS0_6HandleINS0_4NameEEENS0_16ClassBoilerplate9ValueKindEi(%"class.v8::internal::ObjectDescriptor"*, %"class.v8::internal::Isolate"*, i64*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Descriptor", align 8
  %8 = alloca %"class.v8::internal::Descriptor", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Descriptor", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %12 = alloca %"class.v8::internal::Descriptor", align 8
  %13 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %14 = alloca %"class.v8::internal::AccessorPair", align 8
  %15 = alloca %"class.v8::internal::Descriptor", align 8
  %16 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %17 = sext i32 %4 to i64
  %18 = shl nsw i64 %17, 1
  %19 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, %24
  %28 = icmp sgt i32 %27, 1020
  br i1 %28, label %29, label %34

29:                                               ; preds = %5, %22
  %30 = add nsw i32 %4, 7
  %31 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 2
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 7, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_123AddToDictionaryTemplateINS0_7IsolateENS0_14NameDictionaryENS0_6HandleINS0_4NameEEEEEvPT_NS5_IT0_EET1_iNS0_16ClassBoilerplate9ValueKindENS0_3SmiE(%"class.v8::internal::Isolate"* %1, i64* %33, i64* %2, i32 %4, i32 %3, i64 %18)
  br label %205

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 10, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  store i64 %18, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor", %"class.v8::internal::ObjectDescriptor"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = load i64*, i64** %35, align 8
  %40 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  %41 = load i64, i64* %38, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %6, i64 0, i32 0
  %44 = load i64, i64* %2, align 8
  %45 = add i64 %41, 5
  %46 = inttoptr i64 %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = sext i16 %47 to i32
  %49 = icmp eq i16 %47, 0
  br i1 %49, label %74, label %50

50:                                               ; preds = %34
  %51 = icmp slt i16 %47, 9
  br i1 %51, label %52, label %72

52:                                               ; preds = %50
  %53 = icmp sgt i16 %47, 0
  br i1 %53, label %54, label %74

54:                                               ; preds = %52
  %55 = trunc i64 %44 to i32
  %56 = zext i32 %48 to i64
  %57 = add i64 %41, -1
  br label %58

58:                                               ; preds = %67, %54
  %59 = phi i64 [ 0, %54 ], [ %68, %67 ]
  %60 = mul i64 %59, 51539607552
  %61 = add i64 %60, 68719476736
  %62 = ashr exact i64 %61, 32
  %63 = add i64 %57, %62
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = icmp eq i32 %65, %55
  br i1 %66, label %70, label %67

67:                                               ; preds = %58
  %68 = add nuw nsw i64 %59, 1
  %69 = icmp eq i64 %68, %56
  br i1 %69, label %74, label %58

70:                                               ; preds = %58
  %71 = trunc i64 %59 to i32
  br label %75

72:                                               ; preds = %50
  %73 = call i32 @_ZN2v88internal12BinarySearchILNS0_10SearchModeE1ENS0_15DescriptorArrayEEEiPT0_NS0_4NameEiPi(%"class.v8::internal::DescriptorArray"* nonnull %43, i64 %44, i32 %48, i32* null) #12
  br label %75

74:                                               ; preds = %67, %52, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  br label %79

75:                                               ; preds = %72, %70
  %76 = phi i32 [ %73, %72 ], [ %71, %70 ]
  %77 = sext i32 %76 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  %78 = icmp eq i32 %76, -1
  br i1 %78, label %79, label %101

79:                                               ; preds = %75, %74
  %80 = bitcast %"class.v8::internal::Descriptor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %80) #12
  call void @_ZN2v88internal10DescriptorC1Ev(%"class.v8::internal::Descriptor"* nonnull %7) #12
  %81 = icmp eq i32 %3, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = bitcast %"class.v8::internal::Descriptor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #12
  call void @_ZN2v88internal10Descriptor12DataConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %8, i64* %2, i64* %39, i32 2) #12
  br label %95

84:                                               ; preds = %79
  %85 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %86 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase"* %85) #12
  %87 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #12
  %88 = load i64, i64* %86, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9, i64 0, i32 0
  %91 = icmp ne i32 %3, 1
  %92 = zext i1 %91 to i32
  %93 = load i64, i64* %39, align 8
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %90, i32 %92, i64 %93) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #12
  %94 = bitcast %"class.v8::internal::Descriptor"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #12
  call void @_ZN2v88internal10Descriptor16AccessorConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %10, i64* %2, i64* %86, i32 2) #12
  br label %95

95:                                               ; preds = %84, %82
  %96 = phi i8* [ %94, %84 ], [ %83, %82 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* nonnull align 8 %96, i64 28, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %96) #12
  %97 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #12
  %98 = load i64, i64* %38, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %11, i64 0, i32 0
  call void @_ZN2v88internal15DescriptorArray6AppendEPNS0_10DescriptorE(%"class.v8::internal::DescriptorArray"* nonnull %100, %"class.v8::internal::Descriptor"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %80) #12
  br label %205

101:                                              ; preds = %75
  %102 = load i64, i64* %38, align 8
  %103 = mul i64 %77, 51539607552
  %104 = add i64 %103, 68719476736
  %105 = ashr exact i64 %104, 32
  %106 = or i64 %105, 3
  %107 = add i64 %102, %106
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = lshr i32 %109, 10
  %111 = and i32 %110, 1023
  %112 = icmp eq i32 %3, 0
  br i1 %112, label %113, label %144

113:                                              ; preds = %101
  %114 = bitcast %"class.v8::internal::Descriptor"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #12
  call void @_ZN2v88internal10Descriptor12DataConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %12, i64* %2, i64* %39, i32 2) #12
  %115 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %12, i64 0, i32 2, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = and i32 %116, -523777
  %118 = shl nuw nsw i32 %111, 9
  %119 = or i32 %117, %118
  store i32 %119, i32* %115, align 8
  %120 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #12
  %121 = load i64, i64* %38, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %13, i64 0, i32 0
  %124 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %12, i64 0, i32 0, i32 0, i32 0
  %125 = load i64*, i64** %124, align 8
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %12, i64 0, i32 1, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %12, i64 0, i32 1, i32 1, i32 0
  %130 = load i64*, i64** %129, align 8
  %131 = icmp eq i32 %128, 0
  %132 = icmp eq i64* %130, null
  br i1 %131, label %133, label %138

133:                                              ; preds = %113
  br i1 %132, label %134, label %135, !prof !5

134:                                              ; preds = %133
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

135:                                              ; preds = %133
  %136 = load i64, i64* %130, align 8
  %137 = or i64 %136, 2
  br label %142

138:                                              ; preds = %113
  br i1 %132, label %139, label %140, !prof !5

139:                                              ; preds = %138
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

140:                                              ; preds = %138
  %141 = load i64, i64* %130, align 8
  br label %142

142:                                              ; preds = %140, %135
  %143 = phi i64 [ %137, %135 ], [ %141, %140 ]
  call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* nonnull %123, i64 %77, i64 %126, i64 %143, i32 %119) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #12
  br label %205

144:                                              ; preds = %101
  %145 = and i64 %102, -4294967296
  %146 = add nsw i64 %105, 7
  %147 = add i64 %146, %102
  %148 = inttoptr i64 %147 to i32*
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = zext i32 %149 to i64
  %151 = or i64 %145, %150
  %152 = bitcast %"class.v8::internal::AccessorPair"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #12
  %153 = getelementptr inbounds %"class.v8::internal::AccessorPair", %"class.v8::internal::AccessorPair"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %153, align 8
  %154 = and i64 %150, 1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %167, label %156

156:                                              ; preds = %144
  %157 = add i64 %151, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = zext i32 %159 to i64
  %161 = or i64 %145, %160
  %162 = add i64 %161, 7
  %163 = inttoptr i64 %162 to i16*
  %164 = load atomic i16, i16* %163 monotonic, align 2
  %165 = icmp eq i16 %164, 87
  br i1 %165, label %166, label %167

166:                                              ; preds = %156
  store i64 %151, i64* %153, align 8
  br label %201

167:                                              ; preds = %156, %144
  %168 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %169 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase"* %168) #12
  %170 = bitcast %"class.v8::internal::Descriptor"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %170) #12
  call void @_ZN2v88internal10Descriptor16AccessorConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %15, i64* %2, i64* %169, i32 2) #12
  %171 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %15, i64 0, i32 2, i32 0
  %172 = load i32, i32* %171, align 8
  %173 = and i32 %172, -523777
  %174 = shl nuw nsw i32 %111, 9
  %175 = or i32 %173, %174
  store i32 %175, i32* %171, align 8
  %176 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #12
  %177 = load i64, i64* %38, align 8
  %178 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %177, i64* %178, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %16, i64 0, i32 0
  %180 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %15, i64 0, i32 0, i32 0, i32 0
  %181 = load i64*, i64** %180, align 8
  %182 = load i64, i64* %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %15, i64 0, i32 1, i32 0
  %184 = load i32, i32* %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %15, i64 0, i32 1, i32 1, i32 0
  %186 = load i64*, i64** %185, align 8
  %187 = icmp eq i32 %184, 0
  %188 = icmp eq i64* %186, null
  br i1 %187, label %189, label %194

189:                                              ; preds = %167
  br i1 %188, label %190, label %191, !prof !5

190:                                              ; preds = %189
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

191:                                              ; preds = %189
  %192 = load i64, i64* %186, align 8
  %193 = or i64 %192, 2
  br label %198

194:                                              ; preds = %167
  br i1 %188, label %195, label %196, !prof !5

195:                                              ; preds = %194
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

196:                                              ; preds = %194
  %197 = load i64, i64* %186, align 8
  br label %198

198:                                              ; preds = %196, %191
  %199 = phi i64 [ %193, %191 ], [ %197, %196 ]
  call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* nonnull %179, i64 %77, i64 %182, i64 %199, i32 %175) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #12
  %200 = load i64, i64* %169, align 8
  store i64 %200, i64* %153, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %170) #12
  br label %201

201:                                              ; preds = %198, %166
  %202 = icmp ne i32 %3, 1
  %203 = zext i1 %202 to i32
  %204 = load i64, i64* %39, align 8
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %14, i32 %203, i64 %204) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #12
  br label %205

205:                                              ; preds = %201, %142, %95, %29
  ret void
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal16ClassBoilerplate21BuildClassBoilerplateINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_PNS0_12ClassLiteralE(%"class.v8::internal::LocalIsolate"*, %"class.v8::internal::ClassLiteral"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::LocalHandleScope", align 8
  %4 = alloca %"class.v8::internal::ObjectDescriptor.1144", align 8
  %5 = alloca %"class.v8::internal::ObjectDescriptor.1144", align 8
  %6 = alloca i32, align 4
  %7 = bitcast %"class.v8::internal::LocalHandleScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 8, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @_ZN2v88internal16LocalHandleScope19OpenMainThreadScopeEPNS0_9LocalHeapE(%"class.v8::internal::LocalHandleScope"* nonnull %3, %"class.v8::internal::LocalHeap"* %8) #12
  br label %29

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %15 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::LocalHandleScope", %"class.v8::internal::LocalHandleScope"* %3, i64 0, i32 0
  store %"class.v8::internal::LocalHeap"* %8, %"class.v8::internal::LocalHeap"** %16, align 8
  %17 = bitcast %"class.v8::internal::LocalHandles"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::LocalHandleScope", %"class.v8::internal::LocalHandleScope"* %3, i64 0, i32 2
  %20 = bitcast i64** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %15, i64 0, i32 0, i32 1
  %22 = bitcast i64** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::LocalHandleScope", %"class.v8::internal::LocalHandleScope"* %3, i64 0, i32 1
  %25 = bitcast i64** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %15, i64 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 8
  br label %29

29:                                               ; preds = %12, %13
  %30 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0
  %31 = bitcast %"class.v8::internal::ObjectDescriptor.1144"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %4, i64 0, i32 0
  store i32 6, i32* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %4, i64 0, i32 1
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %4, i64 0, i32 2
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %4, i64 0, i32 3
  %36 = bitcast i32* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 52, i1 false) #12
  %37 = bitcast %"class.v8::internal::ObjectDescriptor.1144"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %37) #12
  %38 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %5, i64 0, i32 0
  store i32 1, i32* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %5, i64 0, i32 1
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %5, i64 0, i32 2
  store i32 1, i32* %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %5, i64 0, i32 3
  %42 = bitcast i32* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 52, i1 false) #12
  %43 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 5
  %44 = load %"class.v8::internal::ZoneList.1136"*, %"class.v8::internal::ZoneList.1136"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ZoneList.1136", %"class.v8::internal::ZoneList.1136"* %44, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %97, label %48

48:                                               ; preds = %138, %29
  call void @_ZN2v88internal16ObjectDescriptorINS0_12LocalIsolateEE15CreateTemplatesEPS2_(%"class.v8::internal::ObjectDescriptor.1144"* nonnull %4, %"class.v8::internal::LocalIsolate"* %0)
  %49 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 363
  %52 = getelementptr inbounds %"class.v8::internal::LocalFactory", %"class.v8::internal::LocalFactory"* %30, i64 18
  %53 = bitcast %"class.v8::internal::LocalFactory"* %52 to %"class.v8::internal::Isolate"**
  %54 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 0, i32 7, i32 0, i64 595
  call void @_ZN2v88internal16ObjectDescriptorINS0_12LocalIsolateEE11AddConstantEPS2_NS0_6HandleINS0_4NameEEENS5_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::ObjectDescriptor.1144"* nonnull %4, %"class.v8::internal::LocalIsolate"* %0, i64* %51, i64* %55, i32 3)
  %56 = load i64*, i64** %49, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 408
  %58 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %53, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %58, i64 0, i32 0, i32 7, i32 0, i64 596
  call void @_ZN2v88internal16ObjectDescriptorINS0_12LocalIsolateEE11AddConstantEPS2_NS0_6HandleINS0_4NameEEENS5_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::ObjectDescriptor.1144"* nonnull %4, %"class.v8::internal::LocalIsolate"* %0, i64* %57, i64* %59, i32 7)
  %60 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1051"*
  %61 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE17NewClassPositionsEii(%"class.v8::internal::FactoryBase.1051"* %60, i32 %62, i32 %64) #12
  %66 = load i64*, i64** %49, align 8
  %67 = getelementptr inbounds i64, i64* %66, i64 479
  call void @_ZN2v88internal16ObjectDescriptorINS0_12LocalIsolateEE11AddConstantEPS2_NS0_6HandleINS0_4NameEEENS5_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::ObjectDescriptor.1144"* nonnull %4, %"class.v8::internal::LocalIsolate"* %0, i64* %67, i64* %65, i32 2)
  call void @_ZN2v88internal16ObjectDescriptorINS0_12LocalIsolateEE15CreateTemplatesEPS2_(%"class.v8::internal::ObjectDescriptor.1144"* nonnull %5, %"class.v8::internal::LocalIsolate"* %0)
  %68 = load i8, i8* %9, align 8, !range !3
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %48
  %71 = call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %8, i64 2) #12
  br label %87

72:                                               ; preds = %48
  %73 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %74 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %74, i64 0, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %74, i64 0, i32 0, i32 1
  %78 = load i64*, i64** %77, align 8
  %79 = icmp eq i64* %76, %78
  br i1 %79, label %80, label %83

80:                                               ; preds = %72
  %81 = call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %74) #12
  %82 = load i64*, i64** %75, align 8
  br label %83

83:                                               ; preds = %80, %72
  %84 = phi i64* [ %82, %80 ], [ %76, %72 ]
  %85 = phi i64* [ %81, %80 ], [ %76, %72 ]
  %86 = getelementptr inbounds i64, i64* %84, i64 1
  store i64* %86, i64** %75, align 8
  store i64 2, i64* %85, align 8
  br label %87

87:                                               ; preds = %70, %83
  %88 = phi i64* [ %71, %70 ], [ %85, %83 ]
  %89 = load i64*, i64** %49, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 297
  call void @_ZN2v88internal16ObjectDescriptorINS0_12LocalIsolateEE11AddConstantEPS2_NS0_6HandleINS0_4NameEEENS5_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::ObjectDescriptor.1144"* nonnull %5, %"class.v8::internal::LocalIsolate"* %0, i64* %90, i64* %88, i32 2)
  %91 = load %"class.v8::internal::ZoneList.1136"*, %"class.v8::internal::ZoneList.1136"** %43, align 8
  %92 = getelementptr inbounds %"class.v8::internal::ZoneList.1136", %"class.v8::internal::ZoneList.1136"* %91, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %95, label %145

95:                                               ; preds = %87
  %96 = bitcast i32* %6 to i8*
  br label %151

97:                                               ; preds = %29, %138
  %98 = phi i64 [ %139, %138 ], [ 0, %29 ]
  %99 = phi %"class.v8::internal::ZoneList.1136"* [ %140, %138 ], [ %44, %29 ]
  %100 = getelementptr inbounds %"class.v8::internal::ZoneList.1136", %"class.v8::internal::ZoneList.1136"* %99, i64 0, i32 0
  %101 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %101, i64 %98
  %103 = load %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %102, align 8
  %104 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %103, i64 0, i32 2
  %105 = load i8, i8* %104, align 1, !range !3
  %106 = icmp eq i8 %105, 0
  %107 = select i1 %106, %"class.v8::internal::ObjectDescriptor.1144"* %5, %"class.v8::internal::ObjectDescriptor.1144"* %4
  %108 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %103, i64 0, i32 0, i32 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = and i64 %109, 1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %120, label %112

112:                                              ; preds = %97
  %113 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %103, i64 0, i32 1
  %114 = load i8, i8* %113, align 8
  %115 = icmp eq i8 %114, 3
  br i1 %115, label %138, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %107, i64 0, i32 4
  %118 = load i32, i32* %117, align 8
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %117, align 8
  br label %138

120:                                              ; preds = %97
  %121 = and i64 %109, -2
  %122 = inttoptr i64 %121 to %"class.v8::internal::Expression"*
  %123 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %122, i64 0, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = and i32 %124, 63
  %126 = icmp eq i32 %125, 41
  %127 = inttoptr i64 %121 to %"class.v8::internal::Literal"*
  %128 = select i1 %126, %"class.v8::internal::Literal"* %127, %"class.v8::internal::Literal"* null
  %129 = call zeroext i1 @_ZNK2v88internal7Literal14IsPropertyNameEv(%"class.v8::internal::Literal"* %128) #12
  br i1 %129, label %130, label %134

130:                                              ; preds = %120
  %131 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %107, i64 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %131, align 4
  br label %138

134:                                              ; preds = %120
  %135 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %107, i64 0, i32 3
  %136 = load i32, i32* %135, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %135, align 4
  br label %138

138:                                              ; preds = %112, %130, %134, %116
  %139 = add nuw nsw i64 %98, 1
  %140 = load %"class.v8::internal::ZoneList.1136"*, %"class.v8::internal::ZoneList.1136"** %43, align 8
  %141 = getelementptr inbounds %"class.v8::internal::ZoneList.1136", %"class.v8::internal::ZoneList.1136"* %140, i64 0, i32 2
  %142 = load i32, i32* %141, align 4
  %143 = sext i32 %142 to i64
  %144 = icmp slt i64 %139, %143
  br i1 %144, label %97, label %48

145:                                              ; preds = %219, %87
  %146 = phi i32 [ 3, %87 ], [ %222, %219 ]
  %147 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 0, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = trunc i32 %148 to i8
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %243, label %229

151:                                              ; preds = %95, %219
  %152 = phi i64 [ 0, %95 ], [ %223, %219 ]
  %153 = phi %"class.v8::internal::ZoneList.1136"* [ %91, %95 ], [ %224, %219 ]
  %154 = phi i32 [ 3, %95 ], [ %222, %219 ]
  %155 = phi i32 [ undef, %95 ], [ %220, %219 ]
  %156 = getelementptr inbounds %"class.v8::internal::ZoneList.1136", %"class.v8::internal::ZoneList.1136"* %153, i64 0, i32 0
  %157 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %156, align 8
  %158 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %157, i64 %152
  %159 = load %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %159, i64 0, i32 1
  %161 = load i8, i8* %160, align 8
  switch i8 %161, label %170 [
    i8 0, label %162
    i8 1, label %163
    i8 2, label %164
    i8 3, label %165
  ]

162:                                              ; preds = %151
  br label %170

163:                                              ; preds = %151
  br label %170

164:                                              ; preds = %151
  br label %170

165:                                              ; preds = %151
  %166 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %159, i64 0, i32 0, i32 0, i32 0
  %167 = load i64, i64* %166, align 8
  %168 = trunc i64 %167 to i32
  %169 = and i32 %168, 1
  br label %219

170:                                              ; preds = %151, %164, %163, %162
  %171 = phi i32 [ %155, %151 ], [ 2, %164 ], [ 1, %163 ], [ 0, %162 ]
  %172 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %159, i64 0, i32 2
  %173 = load i8, i8* %172, align 1, !range !3
  %174 = icmp eq i8 %173, 0
  %175 = select i1 %174, %"class.v8::internal::ObjectDescriptor.1144"* %5, %"class.v8::internal::ObjectDescriptor.1144"* %4
  %176 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %159, i64 0, i32 0, i32 0, i32 0
  %177 = load i64, i64* %176, align 8
  %178 = and i64 %177, 1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %197, label %180

180:                                              ; preds = %170
  %181 = add nuw nsw i32 %154, 8
  %182 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %175, i64 0, i32 2
  store i32 %181, i32* %182, align 8
  %183 = shl i32 %154, 2
  %184 = or i32 %171, %183
  %185 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %175, i64 0, i32 9, i32 0, i32 0
  %186 = load i64*, i64** %185, align 8
  %187 = load i64, i64* %186, align 8
  %188 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %175, i64 0, i32 5
  %189 = load i32, i32* %188, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %188, align 4
  %191 = shl i32 %184, 1
  %192 = shl i32 %189, 2
  %193 = sext i32 %192 to i64
  %194 = add i64 %187, 7
  %195 = add i64 %194, %193
  %196 = inttoptr i64 %195 to i32*
  store atomic volatile i32 %191, i32* %196 monotonic, align 4
  br label %219

197:                                              ; preds = %170
  %198 = and i64 %177, -2
  %199 = inttoptr i64 %198 to %"class.v8::internal::Expression"*
  %200 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %199, i64 0, i32 0, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = and i32 %201, 63
  %203 = icmp eq i32 %202, 41
  %204 = inttoptr i64 %198 to %"class.v8::internal::Literal"*
  %205 = select i1 %203, %"class.v8::internal::Literal"* %204, %"class.v8::internal::Literal"* null
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #12
  %206 = call zeroext i1 @_ZNK2v88internal7Literal12AsArrayIndexEPj(%"class.v8::internal::Literal"* %205, i32* nonnull %6) #12
  br i1 %206, label %207, label %213

207:                                              ; preds = %197
  %208 = load i32, i32* %6, align 4
  %209 = shl nuw i32 %154, 1
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %175, i64 0, i32 8, i32 0, i32 0
  %212 = load i64*, i64** %211, align 8
  call fastcc void @_ZN2v88internal12_GLOBAL__N_123AddToDictionaryTemplateINS0_12LocalIsolateENS0_16NumberDictionaryEjEEvPT_NS0_6HandleIT0_EET1_iNS0_16ClassBoilerplate9ValueKindENS0_3SmiE(%"class.v8::internal::LocalIsolate"* %0, i64* %212, i32 %208, i32 %154, i32 %171, i64 %210) #12
  br label %218

213:                                              ; preds = %197
  %214 = getelementptr inbounds %"class.v8::internal::Literal", %"class.v8::internal::Literal"* %205, i64 0, i32 1, i32 0
  %215 = bitcast %"class.v8::internal::AstRawString"** %214 to i64***
  %216 = load i64**, i64*** %215, align 8
  %217 = load i64*, i64** %216, align 8
  call void @_ZN2v88internal16ObjectDescriptorINS0_12LocalIsolateEE16AddNamedPropertyEPS2_NS0_6HandleINS0_4NameEEENS0_16ClassBoilerplate9ValueKindEi(%"class.v8::internal::ObjectDescriptor.1144"* nonnull %175, %"class.v8::internal::LocalIsolate"* %0, i64* %217, i32 %171, i32 %154)
  br label %218

218:                                              ; preds = %213, %207
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #12
  br label %219

219:                                              ; preds = %180, %218, %165
  %220 = phi i32 [ %155, %165 ], [ %171, %218 ], [ %171, %180 ]
  %221 = phi i32 [ %169, %165 ], [ 1, %218 ], [ 2, %180 ]
  %222 = add nuw nsw i32 %221, %154
  %223 = add nuw nsw i64 %152, 1
  %224 = load %"class.v8::internal::ZoneList.1136"*, %"class.v8::internal::ZoneList.1136"** %43, align 8
  %225 = getelementptr inbounds %"class.v8::internal::ZoneList.1136", %"class.v8::internal::ZoneList.1136"* %224, i64 0, i32 2
  %226 = load i32, i32* %225, align 4
  %227 = sext i32 %226 to i64
  %228 = icmp slt i64 %223, %227
  br i1 %228, label %151, label %145

229:                                              ; preds = %145
  %230 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %4, i64 0, i32 4
  %231 = load i32, i32* %230, align 8
  %232 = icmp sgt i32 %231, 0
  br i1 %232, label %243, label %233

233:                                              ; preds = %229
  %234 = load i32, i32* %33, align 4
  %235 = load i32, i32* %32, align 8
  %236 = add nsw i32 %235, %234
  %237 = icmp sgt i32 %236, 1020
  br i1 %237, label %243, label %238

238:                                              ; preds = %233
  %239 = load i64*, i64** %49, align 8
  %240 = getelementptr inbounds i64, i64* %239, i64 378
  %241 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %53, align 8
  %242 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %241, i64 0, i32 0, i32 7, i32 0, i64 594
  call void @_ZN2v88internal16ObjectDescriptorINS0_12LocalIsolateEE11AddConstantEPS2_NS0_6HandleINS0_4NameEEENS5_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::ObjectDescriptor.1144"* nonnull %4, %"class.v8::internal::LocalIsolate"* %0, i64* %240, i64* %242, i32 3)
  br label %243

243:                                              ; preds = %229, %238, %233, %145
  %244 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %4, i64 0, i32 4
  %245 = load i32, i32* %244, align 8
  %246 = icmp sgt i32 %245, 0
  br i1 %246, label %252, label %247

247:                                              ; preds = %243
  %248 = load i32, i32* %33, align 4
  %249 = load i32, i32* %32, align 8
  %250 = add nsw i32 %249, %248
  %251 = icmp sgt i32 %250, 1020
  br i1 %251, label %252, label %260

252:                                              ; preds = %247, %243
  %253 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %4, i64 0, i32 7, i32 0, i32 0
  %254 = load i64*, i64** %253, align 8
  %255 = load i64, i64* %254, align 8
  %256 = load i32, i32* %34, align 8
  %257 = shl i32 %256, 1
  %258 = add i64 %255, 19
  %259 = inttoptr i64 %258 to i32*
  store atomic volatile i32 %257, i32* %259 monotonic, align 4
  br label %260

260:                                              ; preds = %247, %252
  %261 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %5, i64 0, i32 4
  %262 = load i32, i32* %261, align 8
  %263 = icmp sgt i32 %262, 0
  br i1 %263, label %269, label %264

264:                                              ; preds = %260
  %265 = load i32, i32* %39, align 4
  %266 = load i32, i32* %38, align 8
  %267 = add nsw i32 %266, %265
  %268 = icmp sgt i32 %267, 1020
  br i1 %268, label %269, label %277

269:                                              ; preds = %264, %260
  %270 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %5, i64 0, i32 7, i32 0, i32 0
  %271 = load i64*, i64** %270, align 8
  %272 = load i64, i64* %271, align 8
  %273 = load i32, i32* %40, align 8
  %274 = shl i32 %273, 1
  %275 = add i64 %272, 19
  %276 = inttoptr i64 %275 to i32*
  store atomic volatile i32 %274, i32* %276 monotonic, align 4
  br label %277

277:                                              ; preds = %264, %269
  %278 = call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1051"* %60, i32 7, i8 zeroext 1) #12
  %279 = load i64, i64* %278, align 8
  %280 = shl nuw i32 %146, 1
  %281 = add i64 %279, 7
  %282 = inttoptr i64 %281 to i32*
  store atomic volatile i32 %280, i32* %282 monotonic, align 4
  %283 = load i64, i64* %278, align 8
  %284 = load i32, i32* %244, align 8
  %285 = icmp sgt i32 %284, 0
  br i1 %285, label %291, label %286

286:                                              ; preds = %277
  %287 = load i32, i32* %33, align 4
  %288 = load i32, i32* %32, align 8
  %289 = add nsw i32 %288, %287
  %290 = icmp sgt i32 %289, 1020
  br i1 %290, label %291, label %293

291:                                              ; preds = %286, %277
  %292 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %4, i64 0, i32 7, i32 0, i32 0
  br label %295

293:                                              ; preds = %286
  %294 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %4, i64 0, i32 6, i32 0, i32 0
  br label %295

295:                                              ; preds = %291, %293
  %296 = phi i64** [ %292, %291 ], [ %294, %293 ]
  %297 = load i64*, i64** %296, align 8
  %298 = load i64, i64* %297, align 8
  %299 = add i64 %283, 11
  %300 = inttoptr i64 %299 to i32*
  %301 = trunc i64 %298 to i32
  store atomic volatile i32 %301, i32* %300 monotonic, align 4
  %302 = and i64 %298, 1
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %327, label %304

304:                                              ; preds = %295
  %305 = and i64 %283, -262144
  %306 = or i64 %305, 8
  %307 = inttoptr i64 %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = and i64 %308, 262144
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %315, label %311

311:                                              ; preds = %304
  %312 = or i64 %305, 16
  %313 = inttoptr i64 %312 to %"class.v8::internal::Heap"**
  %314 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %313, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %314, i64 %283, i64 %299, i64 %298) #12
  br label %315

315:                                              ; preds = %311, %304
  %316 = and i64 %298, -262144
  %317 = or i64 %316, 8
  %318 = inttoptr i64 %317 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = and i64 %319, 24
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %327, label %322

322:                                              ; preds = %315
  %323 = load i64, i64* %307, align 8
  %324 = and i64 %323, 24
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %322
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %283, i64 %299, i64 %298) #12
  br label %327

327:                                              ; preds = %295, %315, %322, %326
  %328 = load i64, i64* %278, align 8
  %329 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %4, i64 0, i32 8, i32 0, i32 0
  %330 = load i64*, i64** %329, align 8
  %331 = load i64, i64* %330, align 8
  %332 = add i64 %328, 15
  %333 = inttoptr i64 %332 to i32*
  %334 = trunc i64 %331 to i32
  store atomic volatile i32 %334, i32* %333 monotonic, align 4
  %335 = and i64 %331, 1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %360, label %337

337:                                              ; preds = %327
  %338 = and i64 %328, -262144
  %339 = or i64 %338, 8
  %340 = inttoptr i64 %339 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = and i64 %341, 262144
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %348, label %344

344:                                              ; preds = %337
  %345 = or i64 %338, 16
  %346 = inttoptr i64 %345 to %"class.v8::internal::Heap"**
  %347 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %346, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %347, i64 %328, i64 %332, i64 %331) #12
  br label %348

348:                                              ; preds = %344, %337
  %349 = and i64 %331, -262144
  %350 = or i64 %349, 8
  %351 = inttoptr i64 %350 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = and i64 %352, 24
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %360, label %355

355:                                              ; preds = %348
  %356 = load i64, i64* %340, align 8
  %357 = and i64 %356, 24
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %360

359:                                              ; preds = %355
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %328, i64 %332, i64 %331) #12
  br label %360

360:                                              ; preds = %327, %348, %355, %359
  %361 = load i64, i64* %278, align 8
  %362 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %4, i64 0, i32 9, i32 0, i32 0
  %363 = load i64*, i64** %362, align 8
  %364 = load i64, i64* %363, align 8
  %365 = add i64 %361, 19
  %366 = inttoptr i64 %365 to i32*
  %367 = trunc i64 %364 to i32
  store atomic volatile i32 %367, i32* %366 monotonic, align 4
  %368 = and i64 %364, 1
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %381, label %370

370:                                              ; preds = %360
  %371 = and i64 %361, -262144
  %372 = or i64 %371, 8
  %373 = inttoptr i64 %372 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = and i64 %374, 262144
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %381, label %377

377:                                              ; preds = %370
  %378 = or i64 %371, 16
  %379 = inttoptr i64 %378 to %"class.v8::internal::Heap"**
  %380 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %379, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %380, i64 %361, i64 %365, i64 %364) #12
  br label %381

381:                                              ; preds = %377, %370, %360
  %382 = and i64 %364, -262144
  %383 = or i64 %382, 8
  %384 = inttoptr i64 %383 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = and i64 %385, 24
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %396, label %388

388:                                              ; preds = %381
  %389 = and i64 %361, -262144
  %390 = or i64 %389, 8
  %391 = inttoptr i64 %390 to i64*
  %392 = load i64, i64* %391, align 8
  %393 = and i64 %392, 24
  %394 = icmp eq i64 %393, 0
  br i1 %394, label %395, label %396

395:                                              ; preds = %388
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %361, i64 %365, i64 %364) #12
  br label %396

396:                                              ; preds = %381, %388, %395
  %397 = load i64, i64* %278, align 8
  %398 = load i32, i32* %261, align 8
  %399 = icmp sgt i32 %398, 0
  br i1 %399, label %405, label %400

400:                                              ; preds = %396
  %401 = load i32, i32* %39, align 4
  %402 = load i32, i32* %38, align 8
  %403 = add nsw i32 %402, %401
  %404 = icmp sgt i32 %403, 1020
  br i1 %404, label %405, label %407

405:                                              ; preds = %400, %396
  %406 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %5, i64 0, i32 7, i32 0, i32 0
  br label %409

407:                                              ; preds = %400
  %408 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %5, i64 0, i32 6, i32 0, i32 0
  br label %409

409:                                              ; preds = %405, %407
  %410 = phi i64** [ %406, %405 ], [ %408, %407 ]
  %411 = load i64*, i64** %410, align 8
  %412 = load i64, i64* %411, align 8
  %413 = add i64 %397, 23
  %414 = inttoptr i64 %413 to i32*
  %415 = trunc i64 %412 to i32
  store atomic volatile i32 %415, i32* %414 monotonic, align 4
  %416 = and i64 %412, 1
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %441, label %418

418:                                              ; preds = %409
  %419 = and i64 %397, -262144
  %420 = or i64 %419, 8
  %421 = inttoptr i64 %420 to i64*
  %422 = load i64, i64* %421, align 8
  %423 = and i64 %422, 262144
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %429, label %425

425:                                              ; preds = %418
  %426 = or i64 %419, 16
  %427 = inttoptr i64 %426 to %"class.v8::internal::Heap"**
  %428 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %427, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %428, i64 %397, i64 %413, i64 %412) #12
  br label %429

429:                                              ; preds = %425, %418
  %430 = and i64 %412, -262144
  %431 = or i64 %430, 8
  %432 = inttoptr i64 %431 to i64*
  %433 = load i64, i64* %432, align 8
  %434 = and i64 %433, 24
  %435 = icmp eq i64 %434, 0
  br i1 %435, label %441, label %436

436:                                              ; preds = %429
  %437 = load i64, i64* %421, align 8
  %438 = and i64 %437, 24
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %440, label %441

440:                                              ; preds = %436
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %397, i64 %413, i64 %412) #12
  br label %441

441:                                              ; preds = %409, %429, %436, %440
  %442 = load i64, i64* %278, align 8
  %443 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %5, i64 0, i32 8, i32 0, i32 0
  %444 = load i64*, i64** %443, align 8
  %445 = load i64, i64* %444, align 8
  %446 = add i64 %442, 27
  %447 = inttoptr i64 %446 to i32*
  %448 = trunc i64 %445 to i32
  store atomic volatile i32 %448, i32* %447 monotonic, align 4
  %449 = and i64 %445, 1
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %474, label %451

451:                                              ; preds = %441
  %452 = and i64 %442, -262144
  %453 = or i64 %452, 8
  %454 = inttoptr i64 %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = and i64 %455, 262144
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %462, label %458

458:                                              ; preds = %451
  %459 = or i64 %452, 16
  %460 = inttoptr i64 %459 to %"class.v8::internal::Heap"**
  %461 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %460, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %461, i64 %442, i64 %446, i64 %445) #12
  br label %462

462:                                              ; preds = %458, %451
  %463 = and i64 %445, -262144
  %464 = or i64 %463, 8
  %465 = inttoptr i64 %464 to i64*
  %466 = load i64, i64* %465, align 8
  %467 = and i64 %466, 24
  %468 = icmp eq i64 %467, 0
  br i1 %468, label %474, label %469

469:                                              ; preds = %462
  %470 = load i64, i64* %454, align 8
  %471 = and i64 %470, 24
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %473, label %474

473:                                              ; preds = %469
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %442, i64 %446, i64 %445) #12
  br label %474

474:                                              ; preds = %441, %462, %469, %473
  %475 = load i64, i64* %278, align 8
  %476 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %5, i64 0, i32 9, i32 0, i32 0
  %477 = load i64*, i64** %476, align 8
  %478 = load i64, i64* %477, align 8
  %479 = add i64 %475, 31
  %480 = inttoptr i64 %479 to i32*
  %481 = trunc i64 %478 to i32
  store atomic volatile i32 %481, i32* %480 monotonic, align 4
  %482 = and i64 %478, 1
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %495, label %484

484:                                              ; preds = %474
  %485 = and i64 %475, -262144
  %486 = or i64 %485, 8
  %487 = inttoptr i64 %486 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = and i64 %488, 262144
  %490 = icmp eq i64 %489, 0
  br i1 %490, label %495, label %491

491:                                              ; preds = %484
  %492 = or i64 %485, 16
  %493 = inttoptr i64 %492 to %"class.v8::internal::Heap"**
  %494 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %493, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %494, i64 %475, i64 %479, i64 %478) #12
  br label %495

495:                                              ; preds = %491, %484, %474
  %496 = and i64 %478, -262144
  %497 = or i64 %496, 8
  %498 = inttoptr i64 %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = and i64 %499, 24
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %510, label %502

502:                                              ; preds = %495
  %503 = and i64 %475, -262144
  %504 = or i64 %503, 8
  %505 = inttoptr i64 %504 to i64*
  %506 = load i64, i64* %505, align 8
  %507 = and i64 %506, 24
  %508 = icmp eq i64 %507, 0
  br i1 %508, label %509, label %510

509:                                              ; preds = %502
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %475, i64 %479, i64 %478) #12
  br label %510

510:                                              ; preds = %495, %502, %509
  %511 = call i64* @_ZN2v88internal16LocalHandleScope14CloseAndEscapeINS0_16ClassBoilerplateEEENS0_6HandleIT_EES6_(%"class.v8::internal::LocalHandleScope"* nonnull %3, i64* %278)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %31) #12
  %512 = getelementptr inbounds %"class.v8::internal::LocalHandleScope", %"class.v8::internal::LocalHandleScope"* %3, i64 0, i32 0
  %513 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %512, align 8
  %514 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %513, i64 0, i32 1
  %515 = load i8, i8* %514, align 8, !range !3
  %516 = icmp eq i8 %515, 0
  %517 = getelementptr inbounds %"class.v8::internal::LocalHandleScope", %"class.v8::internal::LocalHandleScope"* %3, i64 0, i32 2
  %518 = load i64*, i64** %517, align 8
  %519 = getelementptr inbounds %"class.v8::internal::LocalHandleScope", %"class.v8::internal::LocalHandleScope"* %3, i64 0, i32 1
  %520 = load i64*, i64** %519, align 8
  br i1 %516, label %522, label %521

521:                                              ; preds = %510
  call void @_ZN2v88internal16LocalHandleScope20CloseMainThreadScopeEPNS0_9LocalHeapEPmS4_(%"class.v8::internal::LocalHeap"* %513, i64* %518, i64* %520) #12
  br label %538

522:                                              ; preds = %510
  %523 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %513, i64 0, i32 7, i32 0, i32 0, i32 0
  %524 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %523, align 8
  %525 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %524, i64 0, i32 0, i32 1
  %526 = load i64*, i64** %525, align 8
  %527 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %524, i64 0, i32 0, i32 0
  store i64* %518, i64** %527, align 8
  store i64* %520, i64** %525, align 8
  %528 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %524, i64 0, i32 0, i32 2
  %529 = load i32, i32* %528, align 8
  %530 = add nsw i32 %529, -1
  store i32 %530, i32* %528, align 8
  %531 = icmp eq i64* %526, %520
  br i1 %531, label %535, label %532

532:                                              ; preds = %522
  call void @_ZN2v88internal12LocalHandles18RemoveUnusedBlocksEv(%"class.v8::internal::LocalHandles"* %524) #12
  %533 = load i64*, i64** %525, align 8
  %534 = load i64*, i64** %527, align 8
  br label %535

535:                                              ; preds = %532, %522
  %536 = phi i64* [ %534, %532 ], [ %518, %522 ]
  %537 = phi i64* [ %533, %532 ], [ %520, %522 ]
  call void @_ZN2v88internal12LocalHandles8ZapRangeEPmS2_(i64* %536, i64* %537) #12
  br label %538

538:                                              ; preds = %521, %535
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret i64* %511
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16ObjectDescriptorINS0_12LocalIsolateEE15CreateTemplatesEPS2_(%"class.v8::internal::ObjectDescriptor.1144"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 30
  %6 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %5, i64** %6, align 8
  %7 = load i64*, i64** %3, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 115
  %9 = ptrtoint i64* %8 to i64
  %10 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 7
  %11 = bitcast %"class.v8::internal::Handle.971"* %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = or i32 %13, %15
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %42, label %27

22:                                               ; preds = %2
  %23 = icmp sgt i32 %15, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  br label %33

27:                                               ; preds = %18, %22
  %28 = phi i32 [ %15, %22 ], [ 0, %18 ]
  %29 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = add nsw i32 %30, %13
  %32 = icmp sgt i32 %31, 1020
  br i1 %32, label %33, label %40

33:                                               ; preds = %24, %27
  %34 = phi i32 [ %15, %24 ], [ %28, %27 ]
  %35 = phi i32 [ %26, %24 ], [ %30, %27 ]
  %36 = add nsw i32 %34, %13
  %37 = add nsw i32 %36, %35
  %38 = tail call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"* %1, i32 %37, i8 zeroext 1, i32 0) #12
  %39 = ptrtoint i64* %38 to i64
  store i64 %39, i64* %11, align 8
  br label %42

40:                                               ; preds = %27
  %41 = tail call i64* @_ZN2v88internal15DescriptorArray8AllocateINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_iiNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"* %1, i32 0, i32 %31, i8 zeroext 1) #12
  store i64* %41, i64** %6, align 8
  br label %42

42:                                               ; preds = %18, %33, %40
  %43 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 4
  %46 = load i32, i32* %45, align 8
  %47 = or i32 %44, %46
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %42
  %50 = load i64*, i64** %3, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 111
  %52 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %51, i64** %52, align 8
  br label %63

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 4
  %55 = add nsw i32 %46, %44
  %56 = tail call i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"* %1, i32 %55, i8 zeroext 1, i32 0) #12
  %57 = load i32, i32* %54, align 8
  %58 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %56, i64** %58, align 8
  %59 = icmp eq i32 %57, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %53
  %61 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1051"*
  %62 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1051"* %61, i32 %57, i8 zeroext 1) #12
  br label %66

63:                                               ; preds = %49, %53
  %64 = load i64*, i64** %3, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 29
  br label %66

66:                                               ; preds = %63, %60
  %67 = phi i64* [ %62, %60 ], [ %65, %63 ]
  %68 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* %67, i64** %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 8, !range !3
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %74 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %73, i64 0) #12
  br label %90

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %77 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %77, i64 0, i32 0, i32 0
  %79 = load i64*, i64** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %77, i64 0, i32 0, i32 1
  %81 = load i64*, i64** %80, align 8
  %82 = icmp eq i64* %79, %81
  br i1 %82, label %83, label %86

83:                                               ; preds = %75
  %84 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %77) #12
  %85 = load i64*, i64** %78, align 8
  br label %86

86:                                               ; preds = %83, %75
  %87 = phi i64* [ %85, %83 ], [ %79, %75 ]
  %88 = phi i64* [ %84, %83 ], [ %79, %75 ]
  %89 = getelementptr inbounds i64, i64* %87, i64 1
  store i64* %89, i64** %78, align 8
  store i64 0, i64* %88, align 8
  br label %90

90:                                               ; preds = %72, %86
  %91 = phi i64* [ %74, %72 ], [ %88, %86 ]
  %92 = ptrtoint i64* %91 to i64
  %93 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 10
  %94 = bitcast %"class.v8::internal::Handle.1139"* %93 to i64*
  store i64 %92, i64* %94, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16ObjectDescriptorINS0_12LocalIsolateEE11AddConstantEPS2_NS0_6HandleINS0_4NameEEENS5_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::ObjectDescriptor.1144"*, %"class.v8::internal::LocalIsolate"*, i64*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::Descriptor", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %8 = load i64, i64* %3, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 86
  br label %22

22:                                               ; preds = %5, %11
  %23 = phi i1 [ false, %5 ], [ %21, %11 ]
  %24 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = add nsw i32 %31, %29
  %33 = icmp sgt i32 %32, 1020
  br i1 %33, label %34, label %49

34:                                               ; preds = %22, %27
  %35 = zext i1 %23 to i32
  %36 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %36, align 8
  %39 = shl i32 %4, 3
  %40 = or i32 %39, %35
  %41 = shl i32 %37, 8
  %42 = or i32 %40, %41
  %43 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 7, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = tail call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE31AddNoUpdateNextEnumerationIndexINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::LocalIsolate"* %1, i64* %44, i64* %2, i64* %3, i32 %42, %"class.v8::internal::InternalIndex"* null) #12
  %46 = ptrtoint i64* %45 to i64
  %47 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 7
  %48 = bitcast %"class.v8::internal::Handle.971"* %47 to i64*
  store i64 %46, i64* %48, align 8
  br label %60

49:                                               ; preds = %27
  %50 = bitcast %"class.v8::internal::Descriptor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #12
  br i1 %23, label %51, label %52

51:                                               ; preds = %49
  call void @_ZN2v88internal10Descriptor16AccessorConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %6, i64* %2, i64* %3, i32 %4) #12
  br label %53

52:                                               ; preds = %49
  call void @_ZN2v88internal10Descriptor12DataConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %6, i64* %2, i64* %3, i32 %4) #12
  br label %53

53:                                               ; preds = %52, %51
  %54 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  %55 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 6, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %7, i64 0, i32 0
  call void @_ZN2v88internal15DescriptorArray6AppendEPNS0_10DescriptorE(%"class.v8::internal::DescriptorArray"* nonnull %59, %"class.v8::internal::Descriptor"* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #12
  br label %60

60:                                               ; preds = %53, %34
  ret void
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE17NewClassPositionsEii(%"class.v8::internal::FactoryBase.1051"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16ObjectDescriptorINS0_12LocalIsolateEE16AddNamedPropertyEPS2_NS0_6HandleINS0_4NameEEENS0_16ClassBoilerplate9ValueKindEi(%"class.v8::internal::ObjectDescriptor.1144"*, %"class.v8::internal::LocalIsolate"*, i64*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Descriptor", align 8
  %8 = alloca %"class.v8::internal::Descriptor", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Descriptor", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %12 = alloca %"class.v8::internal::Descriptor", align 8
  %13 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %14 = alloca %"class.v8::internal::AccessorPair", align 8
  %15 = alloca %"class.v8::internal::Descriptor", align 8
  %16 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %17 = sext i32 %4 to i64
  %18 = shl nsw i64 %17, 1
  %19 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, %24
  %28 = icmp sgt i32 %27, 1020
  br i1 %28, label %29, label %34

29:                                               ; preds = %5, %22
  %30 = add nsw i32 %4, 7
  %31 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 2
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 7, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_123AddToDictionaryTemplateINS0_12LocalIsolateENS0_14NameDictionaryENS0_6HandleINS0_4NameEEEEEvPT_NS5_IT0_EET1_iNS0_16ClassBoilerplate9ValueKindENS0_3SmiE(%"class.v8::internal::LocalIsolate"* %1, i64* %33, i64* %2, i32 %4, i32 %3, i64 %18)
  br label %205

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 10, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  store i64 %18, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::ObjectDescriptor.1144", %"class.v8::internal::ObjectDescriptor.1144"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = load i64*, i64** %35, align 8
  %40 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  %41 = load i64, i64* %38, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %6, i64 0, i32 0
  %44 = load i64, i64* %2, align 8
  %45 = add i64 %41, 5
  %46 = inttoptr i64 %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = sext i16 %47 to i32
  %49 = icmp eq i16 %47, 0
  br i1 %49, label %74, label %50

50:                                               ; preds = %34
  %51 = icmp slt i16 %47, 9
  br i1 %51, label %52, label %72

52:                                               ; preds = %50
  %53 = icmp sgt i16 %47, 0
  br i1 %53, label %54, label %74

54:                                               ; preds = %52
  %55 = trunc i64 %44 to i32
  %56 = zext i32 %48 to i64
  %57 = add i64 %41, -1
  br label %58

58:                                               ; preds = %67, %54
  %59 = phi i64 [ 0, %54 ], [ %68, %67 ]
  %60 = mul i64 %59, 51539607552
  %61 = add i64 %60, 68719476736
  %62 = ashr exact i64 %61, 32
  %63 = add i64 %57, %62
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = icmp eq i32 %65, %55
  br i1 %66, label %70, label %67

67:                                               ; preds = %58
  %68 = add nuw nsw i64 %59, 1
  %69 = icmp eq i64 %68, %56
  br i1 %69, label %74, label %58

70:                                               ; preds = %58
  %71 = trunc i64 %59 to i32
  br label %75

72:                                               ; preds = %50
  %73 = call i32 @_ZN2v88internal12BinarySearchILNS0_10SearchModeE1ENS0_15DescriptorArrayEEEiPT0_NS0_4NameEiPi(%"class.v8::internal::DescriptorArray"* nonnull %43, i64 %44, i32 %48, i32* null) #12
  br label %75

74:                                               ; preds = %67, %52, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  br label %79

75:                                               ; preds = %72, %70
  %76 = phi i32 [ %73, %72 ], [ %71, %70 ]
  %77 = sext i32 %76 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  %78 = icmp eq i32 %76, -1
  br i1 %78, label %79, label %101

79:                                               ; preds = %75, %74
  %80 = bitcast %"class.v8::internal::Descriptor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %80) #12
  call void @_ZN2v88internal10DescriptorC1Ev(%"class.v8::internal::Descriptor"* nonnull %7) #12
  %81 = icmp eq i32 %3, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = bitcast %"class.v8::internal::Descriptor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #12
  call void @_ZN2v88internal10Descriptor12DataConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %8, i64* %2, i64* %39, i32 2) #12
  br label %95

84:                                               ; preds = %79
  %85 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1051"*
  %86 = call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase.1051"* %85) #12
  %87 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #12
  %88 = load i64, i64* %86, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %9, i64 0, i32 0
  %91 = icmp ne i32 %3, 1
  %92 = zext i1 %91 to i32
  %93 = load i64, i64* %39, align 8
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %90, i32 %92, i64 %93) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #12
  %94 = bitcast %"class.v8::internal::Descriptor"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #12
  call void @_ZN2v88internal10Descriptor16AccessorConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %10, i64* %2, i64* %86, i32 2) #12
  br label %95

95:                                               ; preds = %84, %82
  %96 = phi i8* [ %94, %84 ], [ %83, %82 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* nonnull align 8 %96, i64 28, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %96) #12
  %97 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #12
  %98 = load i64, i64* %38, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %11, i64 0, i32 0
  call void @_ZN2v88internal15DescriptorArray6AppendEPNS0_10DescriptorE(%"class.v8::internal::DescriptorArray"* nonnull %100, %"class.v8::internal::Descriptor"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %80) #12
  br label %205

101:                                              ; preds = %75
  %102 = load i64, i64* %38, align 8
  %103 = mul i64 %77, 51539607552
  %104 = add i64 %103, 68719476736
  %105 = ashr exact i64 %104, 32
  %106 = or i64 %105, 3
  %107 = add i64 %102, %106
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = lshr i32 %109, 10
  %111 = and i32 %110, 1023
  %112 = icmp eq i32 %3, 0
  br i1 %112, label %113, label %144

113:                                              ; preds = %101
  %114 = bitcast %"class.v8::internal::Descriptor"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #12
  call void @_ZN2v88internal10Descriptor12DataConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %12, i64* %2, i64* %39, i32 2) #12
  %115 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %12, i64 0, i32 2, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = and i32 %116, -523777
  %118 = shl nuw nsw i32 %111, 9
  %119 = or i32 %117, %118
  store i32 %119, i32* %115, align 8
  %120 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #12
  %121 = load i64, i64* %38, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %13, i64 0, i32 0
  %124 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %12, i64 0, i32 0, i32 0, i32 0
  %125 = load i64*, i64** %124, align 8
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %12, i64 0, i32 1, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %12, i64 0, i32 1, i32 1, i32 0
  %130 = load i64*, i64** %129, align 8
  %131 = icmp eq i32 %128, 0
  %132 = icmp eq i64* %130, null
  br i1 %131, label %133, label %138

133:                                              ; preds = %113
  br i1 %132, label %134, label %135, !prof !5

134:                                              ; preds = %133
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

135:                                              ; preds = %133
  %136 = load i64, i64* %130, align 8
  %137 = or i64 %136, 2
  br label %142

138:                                              ; preds = %113
  br i1 %132, label %139, label %140, !prof !5

139:                                              ; preds = %138
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

140:                                              ; preds = %138
  %141 = load i64, i64* %130, align 8
  br label %142

142:                                              ; preds = %140, %135
  %143 = phi i64 [ %137, %135 ], [ %141, %140 ]
  call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* nonnull %123, i64 %77, i64 %126, i64 %143, i32 %119) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #12
  br label %205

144:                                              ; preds = %101
  %145 = and i64 %102, -4294967296
  %146 = add nsw i64 %105, 7
  %147 = add i64 %146, %102
  %148 = inttoptr i64 %147 to i32*
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = zext i32 %149 to i64
  %151 = or i64 %145, %150
  %152 = bitcast %"class.v8::internal::AccessorPair"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #12
  %153 = getelementptr inbounds %"class.v8::internal::AccessorPair", %"class.v8::internal::AccessorPair"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %153, align 8
  %154 = and i64 %150, 1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %167, label %156

156:                                              ; preds = %144
  %157 = add i64 %151, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = zext i32 %159 to i64
  %161 = or i64 %145, %160
  %162 = add i64 %161, 7
  %163 = inttoptr i64 %162 to i16*
  %164 = load atomic i16, i16* %163 monotonic, align 2
  %165 = icmp eq i16 %164, 87
  br i1 %165, label %166, label %167

166:                                              ; preds = %156
  store i64 %151, i64* %153, align 8
  br label %201

167:                                              ; preds = %156, %144
  %168 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1051"*
  %169 = call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase.1051"* %168) #12
  %170 = bitcast %"class.v8::internal::Descriptor"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %170) #12
  call void @_ZN2v88internal10Descriptor16AccessorConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %15, i64* %2, i64* %169, i32 2) #12
  %171 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %15, i64 0, i32 2, i32 0
  %172 = load i32, i32* %171, align 8
  %173 = and i32 %172, -523777
  %174 = shl nuw nsw i32 %111, 9
  %175 = or i32 %173, %174
  store i32 %175, i32* %171, align 8
  %176 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #12
  %177 = load i64, i64* %38, align 8
  %178 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %177, i64* %178, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %16, i64 0, i32 0
  %180 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %15, i64 0, i32 0, i32 0, i32 0
  %181 = load i64*, i64** %180, align 8
  %182 = load i64, i64* %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %15, i64 0, i32 1, i32 0
  %184 = load i32, i32* %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %15, i64 0, i32 1, i32 1, i32 0
  %186 = load i64*, i64** %185, align 8
  %187 = icmp eq i32 %184, 0
  %188 = icmp eq i64* %186, null
  br i1 %187, label %189, label %194

189:                                              ; preds = %167
  br i1 %188, label %190, label %191, !prof !5

190:                                              ; preds = %189
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

191:                                              ; preds = %189
  %192 = load i64, i64* %186, align 8
  %193 = or i64 %192, 2
  br label %198

194:                                              ; preds = %167
  br i1 %188, label %195, label %196, !prof !5

195:                                              ; preds = %194
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

196:                                              ; preds = %194
  %197 = load i64, i64* %186, align 8
  br label %198

198:                                              ; preds = %196, %191
  %199 = phi i64 [ %193, %191 ], [ %197, %196 ]
  call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* nonnull %179, i64 %77, i64 %182, i64 %199, i32 %175) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #12
  %200 = load i64, i64* %169, align 8
  store i64 %200, i64* %153, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %170) #12
  br label %201

201:                                              ; preds = %198, %166
  %202 = icmp ne i32 %3, 1
  %203 = zext i1 %202 to i32
  %204 = load i64, i64* %39, align 8
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %14, i32 %203, i64 %204) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #12
  br label %205

205:                                              ; preds = %201, %142, %95, %29
  ret void
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1051"*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal16LocalHandleScope14CloseAndEscapeINS0_16ClassBoilerplateEEENS0_6HandleIT_EES6_(%"class.v8::internal::LocalHandleScope"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::LocalHandleScope", %"class.v8::internal::LocalHandleScope"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %4, i64 0, i32 7, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %5, align 8
  %7 = load i64, i64* %1, align 8
  %8 = getelementptr inbounds %"class.v8::internal::LocalHandleScope", %"class.v8::internal::LocalHandleScope"* %0, i64 0, i32 2
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::LocalHandleScope", %"class.v8::internal::LocalHandleScope"* %0, i64 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %6, i64 0, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %6, i64 0, i32 0, i32 0
  store i64* %9, i64** %14, align 8
  store i64* %11, i64** %12, align 8
  %15 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %6, i64 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, -1
  store i32 %17, i32* %15, align 8
  %18 = icmp eq i64* %13, %11
  br i1 %18, label %22, label %19

19:                                               ; preds = %2
  tail call void @_ZN2v88internal12LocalHandles18RemoveUnusedBlocksEv(%"class.v8::internal::LocalHandles"* %6) #12
  %20 = load i64*, i64** %12, align 8
  %21 = load i64*, i64** %14, align 8
  br label %22

22:                                               ; preds = %2, %19
  %23 = phi i64* [ %21, %19 ], [ %9, %2 ]
  %24 = phi i64* [ %20, %19 ], [ %11, %2 ]
  tail call void @_ZN2v88internal12LocalHandles8ZapRangeEPmS2_(i64* %23, i64* %24) #12
  %25 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %3, align 8
  %26 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %25, i64 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %22
  %30 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %25, i64 %7) #12
  br label %46

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %25, i64 0, i32 7, i32 0, i32 0, i32 0
  %33 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %33, i64 0, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %33, i64 0, i32 0, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %35, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %31
  %40 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %33) #12
  %41 = load i64*, i64** %34, align 8
  br label %42

42:                                               ; preds = %39, %31
  %43 = phi i64* [ %41, %39 ], [ %35, %31 ]
  %44 = phi i64* [ %40, %39 ], [ %35, %31 ]
  %45 = getelementptr inbounds i64, i64* %43, i64 1
  store i64* %45, i64** %34, align 8
  store i64 %7, i64* %44, align 8
  br label %46

46:                                               ; preds = %29, %42
  %47 = phi i64* [ %30, %29 ], [ %44, %42 ]
  %48 = bitcast %"class.v8::internal::LocalHandles"* %6 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast i64** %8 to i64*
  store i64 %49, i64* %50, align 8
  %51 = bitcast i64** %12 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast i64** %10 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %15, align 8
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %15, align 8
  ret i64* %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal27ArrayBoilerplateDescription17BriefPrintDetailsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::ArrayBoilerplateDescription"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::Brief", align 8
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #12
  %5 = getelementptr inbounds %"class.v8::internal::ArrayBoilerplateDescription", %"class.v8::internal::ArrayBoilerplateDescription"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = lshr i32 %9, 1
  %11 = trunc i32 %10 to i8
  %12 = tail call i8* @_ZN2v88internal20ElementsKindToStringENS0_12ElementsKindE(i8 zeroext %11) #12
  %13 = tail call i64 @strlen(i8* %12) #12
  %14 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, i8* %12, i64 %13) #12
  %15 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 2) #12
  %16 = bitcast %"struct.v8::internal::Brief"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = load i64, i64* %5, align 8
  %18 = and i64 %17, -4294967296
  %19 = add i64 %17, 7
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.v8::internal::Brief"* dereferenceable(8)) local_unnamed_addr #3

declare i8* @_ZN2v88internal20ElementsKindToStringENS0_12ElementsKindE(i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal28RegExpBoilerplateDescription17BriefPrintDetailsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::RegExpBoilerplateDescription"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::Brief", align 8
  %4 = alloca %"struct.v8::internal::Brief", align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #12
  %6 = bitcast %"struct.v8::internal::Brief"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.v8::internal::RegExpBoilerplateDescription", %"class.v8::internal::RegExpBoilerplateDescription"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, 3
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %3, i64 0, i32 0
  store i64 %14, i64* %15, align 8
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %5, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %3) #12
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 2) #12
  %18 = bitcast %"struct.v8::internal::Brief"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = load i64, i64* %7, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, 7
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %4, i64 0, i32 0
  store i64 %25, i64* %26, align 8
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %4) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 2) #12
  %29 = load i64, i64* %7, align 8
  %30 = add i64 %29, 11
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = ashr i32 %32, 1
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %28, i32 %33) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #3

declare void @_ZN2v88internal16LocalHandleScope19OpenMainThreadScopeEPNS0_9LocalHeapE(%"class.v8::internal::LocalHandleScope"*, %"class.v8::internal::LocalHeap"*) local_unnamed_addr #3

declare void @_ZN2v88internal16LocalHandleScope20CloseMainThreadScopeEPNS0_9LocalHeapEPmS4_(%"class.v8::internal::LocalHeap"*, i64*, i64*) local_unnamed_addr #3

declare void @_ZN2v88internal12LocalHandles18RemoveUnusedBlocksEv(%"class.v8::internal::LocalHandles"*) local_unnamed_addr #3

declare void @_ZN2v88internal12LocalHandles8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #14
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #12
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"*, i32, i64) local_unnamed_addr #8 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds %"class.v8::internal::AccessorPair", %"class.v8::internal::AccessorPair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  br i1 %4, label %7, label %45

7:                                                ; preds = %3
  %8 = add i64 %6, 3
  %9 = inttoptr i64 %8 to i32*
  %10 = trunc i64 %2 to i32
  store atomic volatile i32 %10, i32* %9 monotonic, align 4
  %11 = load i64, i64* %5, align 8
  %12 = add i64 %11, 3
  %13 = and i64 %2, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %83, label %15

15:                                               ; preds = %7
  %16 = and i64 %11, -262144
  %17 = or i64 %16, 8
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 262144
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %15
  %23 = or i64 %16, 16
  %24 = inttoptr i64 %23 to %"class.v8::internal::Heap"**
  %25 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %24, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %25, i64 %11, i64 %12, i64 %2) #12
  %26 = load i64, i64* %5, align 8
  %27 = add i64 %26, 3
  br label %28

28:                                               ; preds = %22, %15
  %29 = phi i64 [ %27, %22 ], [ %12, %15 ]
  %30 = phi i64 [ %26, %22 ], [ %11, %15 ]
  %31 = and i64 %2, -262144
  %32 = or i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 24
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %83, label %37

37:                                               ; preds = %28
  %38 = and i64 %30, -262144
  %39 = or i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %83

44:                                               ; preds = %37
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %30, i64 %29, i64 %2) #12
  br label %83

45:                                               ; preds = %3
  %46 = add i64 %6, 7
  %47 = inttoptr i64 %46 to i32*
  %48 = trunc i64 %2 to i32
  store atomic volatile i32 %48, i32* %47 monotonic, align 4
  %49 = load i64, i64* %5, align 8
  %50 = add i64 %49, 7
  %51 = and i64 %2, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %83, label %53

53:                                               ; preds = %45
  %54 = and i64 %49, -262144
  %55 = or i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 262144
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %53
  %61 = or i64 %54, 16
  %62 = inttoptr i64 %61 to %"class.v8::internal::Heap"**
  %63 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %62, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %63, i64 %49, i64 %50, i64 %2) #12
  %64 = load i64, i64* %5, align 8
  %65 = add i64 %64, 7
  br label %66

66:                                               ; preds = %60, %53
  %67 = phi i64 [ %65, %60 ], [ %50, %53 ]
  %68 = phi i64 [ %64, %60 ], [ %49, %53 ]
  %69 = and i64 %2, -262144
  %70 = or i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 24
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %66
  %76 = and i64 %68, -262144
  %77 = or i64 %76, 8
  %78 = inttoptr i64 %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = and i64 %79, 24
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %75
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %68, i64 %67, i64 %2) #12
  br label %83

83:                                               ; preds = %82, %75, %66, %45, %44, %37, %28, %7
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #9

declare i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE31AddNoUpdateNextEnumerationIndexINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase.1051"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE31AddNoUpdateNextEnumerationIndexINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::LocalIsolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal19SwissNameDictionary3AddINS0_7IsolateEEENS0_6HandleIS1_EEPT_S5_NS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::SwissNameDictionary>::ObjectRef", align 8
  %8 = load i64, i64* %1, align 8
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = icmp slt i32 %11, 257
  br i1 %18, label %22, label %19

19:                                               ; preds = %6
  %20 = icmp slt i32 %11, 65537
  %21 = add i64 %17, 7
  br i1 %20, label %30, label %37

22:                                               ; preds = %6
  %23 = add i64 %17, 7
  %24 = inttoptr i64 %23 to i8*
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %24, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  br label %42

30:                                               ; preds = %19
  %31 = inttoptr i64 %21 to i16*
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = getelementptr inbounds i16, i16* %31, i64 1
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  br label %42

37:                                               ; preds = %19
  %38 = inttoptr i64 %21 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds i32, i32* %38, i64 1
  %41 = load i32, i32* %40, align 4
  br label %42

42:                                               ; preds = %37, %30, %22
  %43 = phi i32 [ %26, %22 ], [ %33, %30 ], [ %39, %37 ]
  %44 = phi i32 [ %29, %22 ], [ %36, %30 ], [ %41, %37 ]
  %45 = add nsw i32 %44, %43
  %46 = sdiv i32 %11, 8
  %47 = sub nsw i32 %11, %46
  %48 = icmp slt i32 %45, %47
  br i1 %48, label %60, label %49

49:                                               ; preds = %42
  %50 = icmp eq i32 %11, 0
  %51 = shl nsw i32 %11, 1
  %52 = select i1 %50, i32 4, i32 %51
  %53 = tail call i64* @_ZN2v88internal19SwissNameDictionary6RehashINS0_7IsolateEEENS0_6HandleIS1_EEPT_S5_i(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %52) #12
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i32*
  %57 = and i64 %54, -4294967296
  %58 = add i64 %54, 11
  %59 = inttoptr i64 %58 to i32*
  br label %60

60:                                               ; preds = %42, %49
  %61 = phi i32* [ %14, %42 ], [ %59, %49 ]
  %62 = phi i64 [ %12, %42 ], [ %57, %49 ]
  %63 = phi i32* [ %10, %42 ], [ %56, %49 ]
  %64 = phi i64 [ %8, %42 ], [ %54, %49 ]
  %65 = phi i64* [ %1, %42 ], [ %53, %49 ]
  %66 = load i32, i32* %63, align 4
  %67 = load i32, i32* %61, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %62, %68
  %70 = icmp slt i32 %66, 257
  br i1 %70, label %74, label %71

71:                                               ; preds = %60
  %72 = icmp slt i32 %66, 65537
  %73 = add i64 %69, 7
  br i1 %72, label %82, label %89

74:                                               ; preds = %60
  %75 = add i64 %69, 7
  %76 = inttoptr i64 %75 to i8*
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = getelementptr inbounds i8, i8* %76, i64 1
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  br label %94

82:                                               ; preds = %71
  %83 = inttoptr i64 %73 to i16*
  %84 = load i16, i16* %83, align 2
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds i16, i16* %83, i64 1
  %87 = load i16, i16* %86, align 2
  %88 = zext i16 %87 to i32
  br label %94

89:                                               ; preds = %71
  %90 = inttoptr i64 %73 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds i32, i32* %90, i64 1
  %93 = load i32, i32* %92, align 4
  br label %94

94:                                               ; preds = %74, %82, %89
  %95 = phi i32 [ %78, %74 ], [ %85, %82 ], [ %91, %89 ]
  %96 = phi i32 [ %81, %74 ], [ %88, %82 ], [ %93, %89 ]
  %97 = bitcast %"class.v8::internal::Handle<v8::internal::SwissNameDictionary>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #12
  %98 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SwissNameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SwissNameDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %64, i64* %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SwissNameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SwissNameDictionary>::ObjectRef"* %7, i64 0, i32 0
  %100 = load i64, i64* %2, align 8
  %101 = load i64, i64* %3, align 8
  %102 = call i32 @_ZN2v88internal19SwissNameDictionary11AddInternalENS0_4NameENS0_6ObjectENS0_15PropertyDetailsE(%"class.v8::internal::SwissNameDictionary"* nonnull %99, i64 %100, i64 %101, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #12
  %103 = load i64, i64* %65, align 8
  %104 = add nsw i32 %95, 1
  %105 = add i64 %103, 7
  %106 = inttoptr i64 %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = and i64 %103, -4294967296
  %109 = add i64 %103, 11
  %110 = inttoptr i64 %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %108, %112
  %114 = icmp slt i32 %107, 257
  br i1 %114, label %115, label %119

115:                                              ; preds = %94
  %116 = add i64 %113, 7
  %117 = inttoptr i64 %116 to i8*
  %118 = trunc i32 %104 to i8
  store i8 %118, i8* %117, align 1
  br label %127

119:                                              ; preds = %94
  %120 = icmp slt i32 %107, 65537
  %121 = add i64 %113, 7
  br i1 %120, label %122, label %125

122:                                              ; preds = %119
  %123 = inttoptr i64 %121 to i16*
  %124 = trunc i32 %104 to i16
  store i16 %124, i16* %123, align 2
  br label %127

125:                                              ; preds = %119
  %126 = inttoptr i64 %121 to i32*
  store i32 %104, i32* %126, align 4
  br label %127

127:                                              ; preds = %115, %122, %125
  %128 = load i64, i64* %65, align 8
  %129 = add i32 %95, 2
  %130 = add i32 %129, %96
  %131 = add i64 %128, 7
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = and i64 %128, -4294967296
  %135 = add i64 %128, 11
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = zext i32 %137 to i64
  %139 = or i64 %134, %138
  %140 = icmp slt i32 %133, 257
  br i1 %140, label %141, label %147

141:                                              ; preds = %127
  %142 = add i64 %139, 7
  %143 = inttoptr i64 %142 to i8*
  %144 = trunc i32 %102 to i8
  %145 = sext i32 %130 to i64
  %146 = getelementptr inbounds i8, i8* %143, i64 %145
  store i8 %144, i8* %146, align 1
  br label %159

147:                                              ; preds = %127
  %148 = icmp slt i32 %133, 65537
  %149 = add i64 %139, 7
  br i1 %148, label %150, label %155

150:                                              ; preds = %147
  %151 = inttoptr i64 %149 to i16*
  %152 = trunc i32 %102 to i16
  %153 = sext i32 %130 to i64
  %154 = getelementptr inbounds i16, i16* %151, i64 %153
  store i16 %152, i16* %154, align 2
  br label %159

155:                                              ; preds = %147
  %156 = inttoptr i64 %149 to i32*
  %157 = sext i32 %130 to i64
  %158 = getelementptr inbounds i32, i32* %156, i64 %157
  store i32 %102, i32* %158, align 4
  br label %159

159:                                              ; preds = %141, %150, %155
  %160 = icmp eq %"class.v8::internal::InternalIndex"* %5, null
  br i1 %160, label %164, label %161

161:                                              ; preds = %159
  %162 = sext i32 %102 to i64
  %163 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %5, i64 0, i32 0
  store i64 %162, i64* %163, align 8
  br label %164

164:                                              ; preds = %159, %161
  ret i64* %65
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal19SwissNameDictionary11AddInternalENS0_4NameENS0_6ObjectENS0_15PropertyDetailsE(%"class.v8::internal::SwissNameDictionary"*, i64, i64, i32) local_unnamed_addr #11 comdat align 2 {
  %5 = add i64 %1, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 2
  %9 = getelementptr inbounds %"class.v8::internal::SwissNameDictionary", %"class.v8::internal::SwissNameDictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = zext i1 %14 to i32
  %16 = or i32 %13, %15
  %17 = lshr i32 %7, 9
  %18 = add nsw i32 %16, -1
  %19 = and i32 %18, %17
  %20 = shl i32 %13, 3
  %21 = sext i32 %20 to i64
  %22 = add i64 %10, 15
  %23 = add i64 %22, %21
  %24 = inttoptr i64 %23 to i8*
  %25 = zext i32 %19 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1
  %29 = icmp eq <16 x i8> %28, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %30 = bitcast <16 x i1> %29 to i16
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %32, label %45

32:                                               ; preds = %4, %32
  %33 = phi i32 [ %37, %32 ], [ %19, %4 ]
  %34 = phi i32 [ %35, %32 ], [ 0, %4 ]
  %35 = add i32 %34, 16
  %36 = add i32 %35, %33
  %37 = and i32 %36, %18
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %24, i64 %38
  %40 = bitcast i8* %39 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = icmp eq <16 x i8> %41, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %43 = bitcast <16 x i1> %42 to i16
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %32, label %45

45:                                               ; preds = %32, %4
  %46 = phi i32 [ %19, %4 ], [ %37, %32 ]
  %47 = phi i16 [ %30, %4 ], [ %43, %32 ]
  %48 = zext i16 %47 to i32
  %49 = tail call i32 @llvm.cttz.i32(i32 %48, i1 true) #12, !range !4
  %50 = add i32 %49, %46
  %51 = and i32 %50, %18
  %52 = trunc i32 %8 to i8
  %53 = and i8 %52, 127
  %54 = sext i32 %51 to i64
  %55 = getelementptr inbounds i8, i8* %24, i64 %54
  store i8 %53, i8* %55, align 1
  %56 = add nsw i32 %13, -1
  %57 = add i32 %51, -16
  %58 = and i32 %57, %56
  %59 = and i32 %56, 15
  %60 = add nuw nsw i32 %59, 1
  %61 = add i32 %60, %58
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %24, i64 %62
  store i8 %53, i8* %63, align 1
  %64 = shl i32 %51, 3
  %65 = load i64, i64* %9, align 8
  %66 = sext i32 %64 to i64
  %67 = add nsw i64 %66, 15
  %68 = add i64 %67, %65
  %69 = inttoptr i64 %68 to i32*
  %70 = trunc i64 %1 to i32
  store atomic volatile i32 %70, i32* %69 monotonic, align 4
  %71 = load i64, i64* %9, align 8
  %72 = add i64 %67, %71
  %73 = and i64 %1, 1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %106, label %75

75:                                               ; preds = %45
  %76 = and i64 %71, -262144
  %77 = or i64 %76, 8
  %78 = inttoptr i64 %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = and i64 %79, 262144
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %88, label %82

82:                                               ; preds = %75
  %83 = or i64 %76, 16
  %84 = inttoptr i64 %83 to %"class.v8::internal::Heap"**
  %85 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %84, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %85, i64 %71, i64 %72, i64 %1) #12
  %86 = load i64, i64* %9, align 8
  %87 = add i64 %86, %67
  br label %88

88:                                               ; preds = %82, %75
  %89 = phi i64 [ %72, %75 ], [ %87, %82 ]
  %90 = phi i64 [ %71, %75 ], [ %86, %82 ]
  %91 = and i64 %1, -262144
  %92 = or i64 %91, 8
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = and i64 %94, 24
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %106, label %97

97:                                               ; preds = %88
  %98 = and i64 %90, -262144
  %99 = or i64 %98, 8
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = and i64 %101, 24
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %97
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %90, i64 %89, i64 %1) #12
  %105 = load i64, i64* %9, align 8
  br label %106

106:                                              ; preds = %45, %88, %97, %104
  %107 = phi i64 [ %71, %45 ], [ %90, %88 ], [ %90, %97 ], [ %105, %104 ]
  %108 = or i32 %64, 4
  %109 = sext i32 %108 to i64
  %110 = add nsw i64 %109, 15
  %111 = add i64 %107, %110
  %112 = inttoptr i64 %111 to i32*
  %113 = trunc i64 %2 to i32
  store atomic volatile i32 %113, i32* %112 monotonic, align 4
  %114 = load i64, i64* %9, align 8
  %115 = add i64 %114, %110
  %116 = and i64 %2, 1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %149, label %118

118:                                              ; preds = %106
  %119 = and i64 %114, -262144
  %120 = or i64 %119, 8
  %121 = inttoptr i64 %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, 262144
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %131, label %125

125:                                              ; preds = %118
  %126 = or i64 %119, 16
  %127 = inttoptr i64 %126 to %"class.v8::internal::Heap"**
  %128 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %127, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %128, i64 %114, i64 %115, i64 %2) #12
  %129 = load i64, i64* %9, align 8
  %130 = add i64 %129, %110
  br label %131

131:                                              ; preds = %125, %118
  %132 = phi i64 [ %115, %118 ], [ %130, %125 ]
  %133 = phi i64 [ %114, %118 ], [ %129, %125 ]
  %134 = and i64 %2, -262144
  %135 = or i64 %134, 8
  %136 = inttoptr i64 %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, 24
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %149, label %140

140:                                              ; preds = %131
  %141 = and i64 %133, -262144
  %142 = or i64 %141, 8
  %143 = inttoptr i64 %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, 24
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %140
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %133, i64 %132, i64 %2) #12
  %148 = load i64, i64* %9, align 8
  br label %149

149:                                              ; preds = %106, %131, %140, %147
  %150 = phi i64 [ %114, %106 ], [ %133, %131 ], [ %133, %140 ], [ %148, %147 ]
  %151 = trunc i32 %3 to i8
  %152 = add i64 %150, 7
  %153 = inttoptr i64 %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = mul i32 %154, 9
  %156 = add i32 %155, 32
  %157 = sext i32 %156 to i64
  %158 = add i64 %150, -1
  %159 = add i64 %158, %157
  %160 = inttoptr i64 %159 to i8*
  %161 = getelementptr inbounds i8, i8* %160, i64 %54
  store i8 %151, i8* %161, align 1
  ret i32 %51
}

declare i64* @_ZN2v88internal19SwissNameDictionary6RehashINS0_7IsolateEEENS0_6HandleIS1_EEPT_S5_i(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_jNS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #3

declare void @_ZN2v88internal16NumberDictionary18UpdateMaxNumberKeyEjNS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::NumberDictionary"*, i32, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3AddINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_jNS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::LocalIsolate"*, i64*, i32, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal15DescriptorArray8AllocateINS0_7IsolateEEENS0_6HandleIS1_EEPT_iiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i32, i32, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #3

declare void @_ZN2v88internal10Descriptor16AccessorConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* sret, i64*, i64*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal10Descriptor12DataConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* sret, i64*, i64*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15DescriptorArray6AppendEPNS0_10DescriptorE(%"class.v8::internal::DescriptorArray"*, %"class.v8::internal::Descriptor"*) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 5
  %6 = inttoptr i64 %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = sext i16 %7 to i32
  %9 = add i16 %7, 1
  store atomic volatile i16 %9, i16* %6 monotonic, align 2
  %10 = sext i16 %7 to i64
  %11 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %1, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %1, i64 0, i32 1, i32 1, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i32 %15, 0
  %19 = icmp eq i64* %17, null
  br i1 %18, label %20, label %25

20:                                               ; preds = %2
  br i1 %19, label %21, label %22, !prof !5

21:                                               ; preds = %20
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

22:                                               ; preds = %20
  %23 = load i64, i64* %17, align 8
  %24 = or i64 %23, 2
  br label %29

25:                                               ; preds = %2
  br i1 %19, label %26, label %27, !prof !5

26:                                               ; preds = %25
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

27:                                               ; preds = %25
  %28 = load i64, i64* %17, align 8
  br label %29

29:                                               ; preds = %22, %27
  %30 = phi i64 [ %24, %22 ], [ %28, %27 ]
  %31 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %1, i64 0, i32 2, i32 0
  %32 = load i32, i32* %31, align 8
  tail call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* %0, i64 %10, i64 %13, i64 %30, i32 %32) #12
  %33 = load i64*, i64** %11, align 8
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 3
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = lshr i32 %37, 2
  %39 = icmp sgt i16 %7, 0
  br i1 %39, label %40, label %86

40:                                               ; preds = %29, %71
  %41 = phi i64 [ %43, %71 ], [ %10, %29 ]
  %42 = phi i32 [ %44, %71 ], [ %8, %29 ]
  %43 = add nsw i64 %41, -1
  %44 = add nsw i32 %42, -1
  %45 = load i64, i64* %3, align 8
  %46 = and i64 %45, -4294967296
  %47 = mul i64 %43, 51539607552
  %48 = add i64 %47, 68719476736
  %49 = ashr exact i64 %48, 32
  %50 = or i64 %49, 3
  %51 = add i64 %45, %50
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = lshr i32 %53, 10
  %55 = and i32 %54, 1023
  %56 = zext i32 %55 to i64
  %57 = mul nuw nsw i64 %56, 51539607552
  %58 = add nuw nsw i64 %57, 68719476736
  %59 = lshr exact i64 %58, 32
  %60 = add i64 %45, -1
  %61 = add i64 %60, %59
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %46, %64
  %66 = add i64 %65, 3
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = lshr i32 %68, 2
  %70 = icmp ugt i32 %69, %38
  br i1 %70, label %71, label %84

71:                                               ; preds = %40
  %72 = load atomic i32, i32* %52 monotonic, align 4
  %73 = and i32 %72, 1047552
  %74 = mul i64 %41, 51539607552
  %75 = add nsw i64 %74, 68719476736
  %76 = ashr exact i64 %75, 32
  %77 = or i64 %76, 3
  %78 = add i64 %45, %77
  %79 = inttoptr i64 %78 to i32*
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, -1047554
  %82 = or i32 %81, %73
  store atomic volatile i32 %82, i32* %79 monotonic, align 4
  %83 = icmp sgt i64 %43, 0
  br i1 %83, label %40, label %86

84:                                               ; preds = %40
  %85 = trunc i64 %41 to i32
  br label %86

86:                                               ; preds = %71, %84, %29
  %87 = phi i32 [ %8, %29 ], [ %85, %84 ], [ %44, %71 ]
  %88 = sext i32 %87 to i64
  %89 = load i64, i64* %3, align 8
  %90 = mul i64 %88, 51539607552
  %91 = add i64 %90, 68719476736
  %92 = ashr exact i64 %91, 32
  %93 = or i64 %92, 3
  %94 = add i64 %89, %93
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, -1047554
  %98 = shl nsw i32 %8, 10
  %99 = or i32 %97, %98
  store atomic volatile i32 %99, i32* %95 monotonic, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"*, i64, i64, i64, i32) local_unnamed_addr #8 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = mul i64 %1, 51539607552
  %9 = add i64 %8, 68719476736
  %10 = ashr exact i64 %9, 32
  %11 = add nsw i64 %10, -1
  %12 = add i64 %7, %11
  %13 = inttoptr i64 %12 to i32*
  %14 = trunc i64 %2 to i32
  store atomic volatile i32 %14, i32* %13 monotonic, align 4
  %15 = load i64, i64* %6, align 8
  %16 = add i64 %15, %11
  %17 = and i64 %2, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %32, label %19

19:                                               ; preds = %5
  %20 = and i64 %15, -262144
  %21 = or i64 %20, 8
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 262144
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %19
  %27 = or i64 %20, 16
  %28 = inttoptr i64 %27 to %"class.v8::internal::Heap"**
  %29 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %28, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %29, i64 %15, i64 %16, i64 %2) #12
  %30 = load i64, i64* %6, align 8
  %31 = add i64 %30, %11
  br label %32

32:                                               ; preds = %26, %19, %5
  %33 = phi i64 [ %16, %5 ], [ %16, %19 ], [ %31, %26 ]
  %34 = phi i64 [ %15, %5 ], [ %15, %19 ], [ %30, %26 ]
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %32
  %42 = and i64 %34, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %34, i64 %33, i64 %2) #12
  %49 = load i64, i64* %6, align 8
  br label %50

50:                                               ; preds = %32, %41, %48
  %51 = phi i64 [ %34, %32 ], [ %34, %41 ], [ %49, %48 ]
  %52 = shl i32 %4, 1
  %53 = or i64 %10, 3
  %54 = add i64 %51, %53
  %55 = inttoptr i64 %54 to i32*
  store atomic volatile i32 %52, i32* %55 monotonic, align 4
  %56 = load i64, i64* %6, align 8
  %57 = ashr exact i64 %8, 32
  %58 = add nsw i64 %57, 23
  %59 = add i64 %56, %58
  %60 = inttoptr i64 %59 to i32*
  %61 = trunc i64 %3 to i32
  store atomic volatile i32 %61, i32* %60 monotonic, align 4
  %62 = load i64, i64* %6, align 8
  %63 = add i64 %62, %58
  %64 = and i64 %3, 1
  %65 = icmp ne i64 %64, 0
  %66 = icmp ne i32 %61, 3
  %67 = and i1 %66, %65
  br i1 %67, label %68, label %99

68:                                               ; preds = %50
  %69 = and i64 %62, -262144
  %70 = or i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 262144
  %74 = icmp eq i64 %73, 0
  %75 = and i64 %3, -3
  br i1 %74, label %82, label %76

76:                                               ; preds = %68
  %77 = or i64 %69, 16
  %78 = inttoptr i64 %77 to %"class.v8::internal::Heap"**
  %79 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %78, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %79, i64 %62, i64 %63, i64 %75) #12
  %80 = load i64, i64* %6, align 8
  %81 = add i64 %80, %58
  br label %82

82:                                               ; preds = %76, %68
  %83 = phi i64 [ %81, %76 ], [ %63, %68 ]
  %84 = phi i64 [ %80, %76 ], [ %62, %68 ]
  %85 = and i64 %3, -262144
  %86 = or i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = and i64 %88, 24
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %99, label %91

91:                                               ; preds = %82
  %92 = and i64 %84, -262144
  %93 = or i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 24
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %91
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %84, i64 %83, i64 %75) #12
  br label %99

99:                                               ; preds = %50, %82, %91, %98
  ret void
}

declare void @_ZN2v88internal10DescriptorC1Ev(%"class.v8::internal::Descriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12BinarySearchILNS0_10SearchModeE1ENS0_15DescriptorArrayEEEiPT0_NS0_4NameEiPi(%"class.v8::internal::DescriptorArray"*, i64, i32, i32*) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 5
  %8 = inttoptr i64 %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = sext i16 %9 to i32
  %11 = add nsw i32 %10, -1
  %12 = add i64 %1, 3
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = lshr i32 %14, 2
  %16 = icmp eq i32 %11, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %4
  %18 = and i64 %6, -4294967296
  %19 = add i64 %6, -1
  br label %28

20:                                               ; preds = %28, %4
  %21 = phi i32 [ 0, %4 ], [ %59, %28 ]
  %22 = icmp slt i32 %21, %10
  br i1 %22, label %23, label %96

23:                                               ; preds = %20
  %24 = and i64 %6, -4294967296
  %25 = add i64 %6, -1
  %26 = trunc i64 %1 to i32
  %27 = sext i32 %21 to i64
  br label %65

28:                                               ; preds = %17, %28
  %29 = phi i32 [ 0, %17 ], [ %60, %28 ]
  %30 = phi i32 [ %11, %17 ], [ %59, %28 ]
  %31 = sub nsw i32 %30, %29
  %32 = sdiv i32 %31, 2
  %33 = add nsw i32 %32, %29
  %34 = sext i32 %33 to i64
  %35 = mul i64 %34, 51539607552
  %36 = add i64 %35, 68719476736
  %37 = ashr exact i64 %36, 32
  %38 = or i64 %37, 3
  %39 = add i64 %38, %6
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = lshr i32 %41, 10
  %43 = and i32 %42, 1023
  %44 = zext i32 %43 to i64
  %45 = mul nuw nsw i64 %44, 51539607552
  %46 = add nuw nsw i64 %45, 68719476736
  %47 = lshr exact i64 %46, 32
  %48 = add i64 %19, %47
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %18, %51
  %53 = add i64 %52, 3
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = lshr i32 %55, 2
  %57 = icmp ult i32 %56, %15
  %58 = add nsw i32 %33, 1
  %59 = select i1 %57, i32 %30, i32 %33
  %60 = select i1 %57, i32 %58, i32 %29
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %20, label %28

62:                                               ; preds = %90
  %63 = trunc i64 %92 to i32
  %64 = icmp eq i32 %63, %10
  br i1 %64, label %96, label %65

65:                                               ; preds = %62, %23
  %66 = phi i64 [ %27, %23 ], [ %92, %62 ]
  %67 = mul i64 %66, 51539607552
  %68 = add i64 %67, 68719476736
  %69 = ashr exact i64 %68, 32
  %70 = or i64 %69, 3
  %71 = add i64 %70, %6
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = lshr i32 %73, 10
  %75 = and i32 %74, 1023
  %76 = zext i32 %75 to i64
  %77 = mul nuw nsw i64 %76, 51539607552
  %78 = add nuw nsw i64 %77, 68719476736
  %79 = lshr exact i64 %78, 32
  %80 = add i64 %25, %79
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %24, %83
  %85 = add i64 %84, 3
  %86 = inttoptr i64 %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = lshr i32 %87, 2
  %89 = icmp eq i32 %88, %15
  br i1 %89, label %90, label %96

90:                                               ; preds = %65
  %91 = icmp eq i32 %82, %26
  %92 = add nsw i64 %66, 1
  br i1 %91, label %93, label %62

93:                                               ; preds = %90
  %94 = icmp slt i32 %75, %2
  %95 = select i1 %94, i32 %75, i32 -1
  br label %96

96:                                               ; preds = %65, %62, %20, %93
  %97 = phi i32 [ %95, %93 ], [ -1, %20 ], [ -1, %62 ], [ -1, %65 ]
  ret i32 %97
}

declare i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"*, i32, i8 zeroext, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal15DescriptorArray8AllocateINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_iiNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"*, i32, i32, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"*, i32, i8 zeroext, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{i32 0, i32 33}
!5 = !{!"branch_weights", i32 1, i32 2000}
