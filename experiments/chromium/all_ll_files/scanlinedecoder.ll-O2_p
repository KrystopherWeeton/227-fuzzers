; ModuleID = '../../third_party/pdfium/core/fxcodec/scanlinedecoder.cpp'
source_filename = "../../third_party/pdfium/core/fxcodec/scanlinedecoder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.fxcodec::ScanlineDecoder" = type { i32 (...)**, i32, i32, i32, i32, i32, i32, i32, i32, i8* }
%class.PauseIndicatorIface = type { i32 (...)** }

@_ZTVN7fxcodec15ScanlineDecoderE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcodec::ScanlineDecoder"*)* @_ZN7fxcodec15ScanlineDecoderD2Ev to i8*), i8* bitcast (void (%"class.fxcodec::ScanlineDecoder"*)* @_ZN7fxcodec15ScanlineDecoderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7fxcodec15ScanlineDecoderD1Ev = hidden unnamed_addr alias void (%"class.fxcodec::ScanlineDecoder"*), void (%"class.fxcodec::ScanlineDecoder"*)* @_ZN7fxcodec15ScanlineDecoderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7fxcodec15ScanlineDecoderC2Ev(%"class.fxcodec::ScanlineDecoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7fxcodec15ScanlineDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 28, i1 false)
  store i32 -1, i32* %4, align 4
  %6 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 9
  store i8* null, i8** %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7fxcodec15ScanlineDecoderC2Eiiiiiij(%"class.fxcodec::ScanlineDecoder"* nocapture, i32, i32, i32, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7fxcodec15ScanlineDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 1
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 2
  store i32 %2, i32* %11, align 4
  %12 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 3
  store i32 %3, i32* %12, align 8
  %13 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 4
  store i32 %4, i32* %13, align 4
  %14 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 5
  store i32 %5, i32* %14, align 8
  %15 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 6
  store i32 %6, i32* %15, align 4
  %16 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 7
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 8
  store i32 -1, i32* %17, align 4
  %18 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 9
  store i8* null, i8** %18, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7fxcodec15ScanlineDecoderD2Ev(%"class.fxcodec::ScanlineDecoder"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7fxcodec15ScanlineDecoderD0Ev(%"class.fxcodec::ScanlineDecoder"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN7fxcodec15ScanlineDecoder11GetScanlineEi(%"class.fxcodec::ScanlineDecoder"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %1, 1
  %6 = icmp eq i32 %4, %5
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 9
  %9 = load i8*, i8** %8, align 8
  br label %42

10:                                               ; preds = %2
  %11 = icmp slt i32 %4, 0
  %12 = icmp sgt i32 %4, %1
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = bitcast %"class.fxcodec::ScanlineDecoder"* %0 to i1 (%"class.fxcodec::ScanlineDecoder"*)***
  %16 = load i1 (%"class.fxcodec::ScanlineDecoder"*)**, i1 (%"class.fxcodec::ScanlineDecoder"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.fxcodec::ScanlineDecoder"*)*, i1 (%"class.fxcodec::ScanlineDecoder"*)** %16, i64 3
  %18 = load i1 (%"class.fxcodec::ScanlineDecoder"*)*, i1 (%"class.fxcodec::ScanlineDecoder"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.fxcodec::ScanlineDecoder"* %0) #7
  br i1 %19, label %20, label %42

20:                                               ; preds = %14
  store i32 0, i32* %3, align 4
  br label %21

21:                                               ; preds = %10, %20
  %22 = phi i32 [ %4, %10 ], [ 0, %20 ]
  %23 = icmp slt i32 %22, %1
  %24 = bitcast %"class.fxcodec::ScanlineDecoder"* %0 to i8* (%"class.fxcodec::ScanlineDecoder"*)***
  %25 = load i8* (%"class.fxcodec::ScanlineDecoder"*)**, i8* (%"class.fxcodec::ScanlineDecoder"*)*** %24, align 8
  %26 = getelementptr inbounds i8* (%"class.fxcodec::ScanlineDecoder"*)*, i8* (%"class.fxcodec::ScanlineDecoder"*)** %25, i64 4
  %27 = load i8* (%"class.fxcodec::ScanlineDecoder"*)*, i8* (%"class.fxcodec::ScanlineDecoder"*)** %26, align 8
  %28 = tail call i8* %27(%"class.fxcodec::ScanlineDecoder"* %0) #7
  br i1 %23, label %29, label %37

29:                                               ; preds = %21, %29
  %30 = load i32, i32* %3, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %3, align 4
  %32 = icmp slt i32 %31, %1
  %33 = load i8* (%"class.fxcodec::ScanlineDecoder"*)**, i8* (%"class.fxcodec::ScanlineDecoder"*)*** %24, align 8
  %34 = getelementptr inbounds i8* (%"class.fxcodec::ScanlineDecoder"*)*, i8* (%"class.fxcodec::ScanlineDecoder"*)** %33, i64 4
  %35 = load i8* (%"class.fxcodec::ScanlineDecoder"*)*, i8* (%"class.fxcodec::ScanlineDecoder"*)** %34, align 8
  %36 = tail call i8* %35(%"class.fxcodec::ScanlineDecoder"* %0) #7
  br i1 %32, label %29, label %37

37:                                               ; preds = %29, %21
  %38 = phi i8* [ %28, %21 ], [ %36, %29 ]
  %39 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 9
  store i8* %38, i8** %39, align 8
  %40 = load i32, i32* %3, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %3, align 4
  br label %42

42:                                               ; preds = %14, %37, %7
  %43 = phi i8* [ %9, %7 ], [ %38, %37 ], [ null, %14 ]
  ret i8* %43
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN7fxcodec15ScanlineDecoder12ReadNextLineEv(%"class.fxcodec::ScanlineDecoder"*) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.fxcodec::ScanlineDecoder"* %0 to i8* (%"class.fxcodec::ScanlineDecoder"*)***
  %3 = load i8* (%"class.fxcodec::ScanlineDecoder"*)**, i8* (%"class.fxcodec::ScanlineDecoder"*)*** %2, align 8
  %4 = getelementptr inbounds i8* (%"class.fxcodec::ScanlineDecoder"*)*, i8* (%"class.fxcodec::ScanlineDecoder"*)** %3, i64 4
  %5 = load i8* (%"class.fxcodec::ScanlineDecoder"*)*, i8* (%"class.fxcodec::ScanlineDecoder"*)** %4, align 8
  %6 = tail call i8* %5(%"class.fxcodec::ScanlineDecoder"* %0) #7
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec15ScanlineDecoder14SkipToScanlineEiP19PauseIndicatorIface(%"class.fxcodec::ScanlineDecoder"*, i32, %class.PauseIndicatorIface*) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, %1
  %7 = add nsw i32 %1, 1
  %8 = icmp eq i32 %5, %7
  %9 = or i1 %6, %8
  br i1 %9, label %45, label %10

10:                                               ; preds = %3
  %11 = icmp slt i32 %5, 0
  %12 = icmp sgt i32 %5, %1
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = bitcast %"class.fxcodec::ScanlineDecoder"* %0 to i1 (%"class.fxcodec::ScanlineDecoder"*)***
  %16 = load i1 (%"class.fxcodec::ScanlineDecoder"*)**, i1 (%"class.fxcodec::ScanlineDecoder"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.fxcodec::ScanlineDecoder"*)*, i1 (%"class.fxcodec::ScanlineDecoder"*)** %16, i64 3
  %18 = load i1 (%"class.fxcodec::ScanlineDecoder"*)*, i1 (%"class.fxcodec::ScanlineDecoder"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.fxcodec::ScanlineDecoder"* %0) #7
  store i32 0, i32* %4, align 4
  br label %20

20:                                               ; preds = %10, %14
  %21 = phi i32 [ %5, %10 ], [ 0, %14 ]
  %22 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %0, i64 0, i32 9
  store i8* null, i8** %22, align 8
  %23 = icmp slt i32 %21, %1
  br i1 %23, label %24, label %45

24:                                               ; preds = %20
  %25 = bitcast %"class.fxcodec::ScanlineDecoder"* %0 to i8* (%"class.fxcodec::ScanlineDecoder"*)***
  %26 = icmp eq %class.PauseIndicatorIface* %2, null
  %27 = bitcast %class.PauseIndicatorIface* %2 to i1 (%class.PauseIndicatorIface*)***
  br label %28

28:                                               ; preds = %24, %42
  %29 = load i8* (%"class.fxcodec::ScanlineDecoder"*)**, i8* (%"class.fxcodec::ScanlineDecoder"*)*** %25, align 8
  %30 = getelementptr inbounds i8* (%"class.fxcodec::ScanlineDecoder"*)*, i8* (%"class.fxcodec::ScanlineDecoder"*)** %29, i64 4
  %31 = load i8* (%"class.fxcodec::ScanlineDecoder"*)*, i8* (%"class.fxcodec::ScanlineDecoder"*)** %30, align 8
  %32 = tail call i8* %31(%"class.fxcodec::ScanlineDecoder"* %0) #7
  store i8* %32, i8** %22, align 8
  %33 = load i32, i32* %4, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %4, align 4
  br i1 %26, label %42, label %35

35:                                               ; preds = %28
  %36 = load i1 (%class.PauseIndicatorIface*)**, i1 (%class.PauseIndicatorIface*)*** %27, align 8
  %37 = getelementptr inbounds i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %36, i64 2
  %38 = load i1 (%class.PauseIndicatorIface*)*, i1 (%class.PauseIndicatorIface*)** %37, align 8
  %39 = tail call zeroext i1 %38(%class.PauseIndicatorIface* nonnull %2) #7
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = load i32, i32* %4, align 4
  br label %42

42:                                               ; preds = %40, %28
  %43 = phi i32 [ %41, %40 ], [ %34, %28 ]
  %44 = icmp slt i32 %43, %1
  br i1 %44, label %28, label %45

45:                                               ; preds = %35, %42, %20, %3
  %46 = phi i1 [ false, %3 ], [ false, %20 ], [ true, %35 ], [ false, %42 ]
  ret i1 %46
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
