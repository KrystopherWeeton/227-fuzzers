; ModuleID = '../../net/cert/cert_verifier.cc'
source_filename = "../../net/cert/cert_verifier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::CertVerifier::Config" = type { i8, i8, i8, i8, %class.scoped_refptr, %"class.std::__1::vector.25", %"class.std::__1::vector.25" }
%class.scoped_refptr = type { %"class.net::CRLSet"* }
%"class.net::CRLSet" = type { %"class.base::RefCountedThreadSafe", i32, i64, %"class.std::__1::unordered_map", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::unordered_map", %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.12", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %class.scoped_refptr.27*, %class.scoped_refptr.27*, %"class.std::__1::__compressed_pair.40" }
%class.scoped_refptr.27 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.28", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.29", %"class.std::__1::vector.33" }
%"class.base::RefCountedThreadSafe.28" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.std::__1::unique_ptr.29"*, %"class.std::__1::unique_ptr.29"*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::unique_ptr.29"* }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.scoped_refptr.27* }
%"class.net::CertVerifier::RequestParams" = type { %class.scoped_refptr.27, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.sha256_state_st = type { [8 x i32], i32, i32, [64 x i8], i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::CertVerifier" = type { i32 (...)** }
%"class.net::CertNetFetcher" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.50", [4 x i8] }>
%"class.base::RefCountedThreadSafe.50" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::CertVerifyProc" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.52", [4 x i8] }>
%"class.base::RefCountedThreadSafe.52" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::MultiThreadedCertVerifier" = type { %"class.net::CertVerifier", %"struct.net::CertVerifier::Config", %class.scoped_refptr.51, %"class.base::LinkedList", %"class.std::__1::vector.56" }
%class.scoped_refptr.51 = type { %"class.net::CertVerifyProc"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"class.std::__1::unique_ptr.58"*, %"class.std::__1::unique_ptr.58"*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::unique_ptr.58" = type opaque
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.std::__1::unique_ptr.58"* }
%"class.net::CoalescingCertVerifier" = type { %"class.net::CertVerifier", %"class.std::__1::map.84", %"class.std::__1::vector.93", %"class.std::__1::unique_ptr.45", i32, i64, i64 }
%"class.std::__1::map.84" = type { %"class.std::__1::__tree.85" }
%"class.std::__1::__tree.85" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"class.std::__1::unique_ptr.95"*, %"class.std::__1::unique_ptr.95"*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::unique_ptr.95" = type opaque
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::unique_ptr.95"* }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.net::CertVerifier"* }
%"class.net::CachingCertVerifier" = type { %"class.net::CertVerifier", %"class.net::CertDatabase::Observer", %"class.std::__1::unique_ptr.45", i32, [4 x i8], %"class.net::ExpiringCache", i64, i64 }
%"class.net::CertDatabase::Observer" = type { i32 (...)** }
%"class.net::ExpiringCache" = type <{ i64, %"class.std::__1::map", %"struct.net::CachingCertVerifier::CacheExpirationFunctor", %"class.net::NoopEvictionHandler", [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.net::CachingCertVerifier::CacheExpirationFunctor" = type { i8 }
%"class.net::NoopEvictionHandler" = type { i8 }

$_ZNSt3__16vectorI13scoped_refptrIN3net15X509CertificateEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

@_ZN3net12CertVerifier6ConfigC1Ev = hidden unnamed_addr alias void (%"struct.net::CertVerifier::Config"*), void (%"struct.net::CertVerifier::Config"*)* @_ZN3net12CertVerifier6ConfigC2Ev
@_ZN3net12CertVerifier6ConfigC1ERKS1_ = hidden unnamed_addr alias void (%"struct.net::CertVerifier::Config"*, %"struct.net::CertVerifier::Config"*), void (%"struct.net::CertVerifier::Config"*, %"struct.net::CertVerifier::Config"*)* @_ZN3net12CertVerifier6ConfigC2ERKS1_
@_ZN3net12CertVerifier6ConfigC1EOS1_ = hidden unnamed_addr alias void (%"struct.net::CertVerifier::Config"*, %"struct.net::CertVerifier::Config"*), void (%"struct.net::CertVerifier::Config"*, %"struct.net::CertVerifier::Config"*)* @_ZN3net12CertVerifier6ConfigC2EOS1_
@_ZN3net12CertVerifier6ConfigD1Ev = hidden unnamed_addr alias void (%"struct.net::CertVerifier::Config"*), void (%"struct.net::CertVerifier::Config"*)* @_ZN3net12CertVerifier6ConfigD2Ev
@_ZN3net12CertVerifier13RequestParamsC1Ev = hidden unnamed_addr alias void (%"class.net::CertVerifier::RequestParams"*), void (%"class.net::CertVerifier::RequestParams"*)* @_ZN3net12CertVerifier13RequestParamsC2Ev
@_ZN3net12CertVerifier13RequestParamsC1E13scoped_refptrINS_15X509CertificateEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEiSD_SD_ = hidden unnamed_addr alias void (%"class.net::CertVerifier::RequestParams"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*), void (%"class.net::CertVerifier::RequestParams"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN3net12CertVerifier13RequestParamsC2E13scoped_refptrINS_15X509CertificateEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEiSD_SD_
@_ZN3net12CertVerifier13RequestParamsC1ERKS1_ = hidden unnamed_addr alias void (%"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifier::RequestParams"*), void (%"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifier::RequestParams"*)* @_ZN3net12CertVerifier13RequestParamsC2ERKS1_
@_ZN3net12CertVerifier13RequestParamsD1Ev = hidden unnamed_addr alias void (%"class.net::CertVerifier::RequestParams"*), void (%"class.net::CertVerifier::RequestParams"*)* @_ZN3net12CertVerifier13RequestParamsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12CertVerifier6ConfigC2Ev(%"struct.net::CertVerifier::Config"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 4, i32 0
  %3 = bitcast %"struct.net::CertVerifier::Config"* %0 to i32*
  store i32 0, i32* %3, align 8
  %4 = bitcast %"class.net::CRLSet"** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12CertVerifier6ConfigC2ERKS1_(%"struct.net::CertVerifier::Config"*, %"struct.net::CertVerifier::Config"* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::CertVerifier::Config"* %1 to i32*
  %4 = bitcast %"struct.net::CertVerifier::Config"* %0 to i32*
  %5 = load i32, i32* %3, align 8
  store i32 %5, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 4, i32 0
  %7 = load %"class.net::CRLSet"*, %"class.net::CRLSet"** %6, align 8
  %8 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 4, i32 0
  store %"class.net::CRLSet"* %7, %"class.net::CRLSet"** %8, align 8
  %9 = icmp eq %"class.net::CRLSet"* %7, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::CRLSet", %"class.net::CRLSet"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %2, %10
  %14 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5
  %15 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 5
  %16 = bitcast %"class.std::__1::vector.25"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #11
  %17 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 5, i32 0, i32 1
  %18 = bitcast %class.scoped_refptr.27** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.25"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %93, label %25

25:                                               ; preds = %13
  %26 = icmp ugt i64 %23, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector.25"* %14 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #12
  unreachable

29:                                               ; preds = %25
  %30 = tail call i8* @_Znwm(i64 %22) #13
  %31 = bitcast i8* %30 to %class.scoped_refptr.27*
  %32 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5, i32 0, i32 1
  %33 = bitcast %class.scoped_refptr.27** %32 to i8**
  store i8* %30, i8** %33, align 8
  %34 = bitcast %"class.std::__1::vector.25"* %14 to i8**
  store i8* %30, i8** %34, align 8
  %35 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %31, i64 %23
  %36 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store %class.scoped_refptr.27* %35, %class.scoped_refptr.27** %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %15, i64 0, i32 0, i32 0
  %38 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %37, align 8
  %39 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %17, align 8
  %40 = bitcast %class.scoped_refptr.27** %32 to i64*
  %41 = ptrtoint i8* %30 to i64
  %42 = icmp eq %class.scoped_refptr.27* %38, %39
  br i1 %42, label %91, label %43

43:                                               ; preds = %29
  %44 = ptrtoint %class.scoped_refptr.27* %38 to i64
  %45 = getelementptr %class.scoped_refptr.27, %class.scoped_refptr.27* %39, i64 -1, i32 0
  %46 = ptrtoint %"class.net::X509Certificate"** %45 to i64
  %47 = sub i64 %46, %44
  %48 = lshr i64 %47, 3
  %49 = add nuw nsw i64 %48, 1
  %50 = and i64 %49, 3
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %43, %63
  %53 = phi %class.scoped_refptr.27* [ %65, %63 ], [ %31, %43 ]
  %54 = phi %class.scoped_refptr.27* [ %64, %63 ], [ %38, %43 ]
  %55 = phi i64 [ %66, %63 ], [ %50, %43 ]
  %56 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %54, i64 0, i32 0
  %57 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %56, align 8
  %58 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %53, i64 0, i32 0
  store %"class.net::X509Certificate"* %57, %"class.net::X509Certificate"** %58, align 8
  %59 = icmp eq %"class.net::X509Certificate"* %57, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 1 monotonic
  br label %63

63:                                               ; preds = %60, %52
  %64 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %54, i64 1
  %65 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %53, i64 1
  %66 = add i64 %55, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %52, !llvm.loop !2

68:                                               ; preds = %63, %43
  %69 = phi %class.scoped_refptr.27* [ undef, %43 ], [ %65, %63 ]
  %70 = phi %class.scoped_refptr.27* [ %31, %43 ], [ %65, %63 ]
  %71 = phi %class.scoped_refptr.27* [ %38, %43 ], [ %64, %63 ]
  %72 = icmp ult i64 %47, 24
  br i1 %72, label %88, label %73

73:                                               ; preds = %68, %216
  %74 = phi %class.scoped_refptr.27* [ %218, %216 ], [ %70, %68 ]
  %75 = phi %class.scoped_refptr.27* [ %217, %216 ], [ %71, %68 ]
  %76 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %75, i64 0, i32 0
  %77 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %76, align 8
  %78 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %74, i64 0, i32 0
  store %"class.net::X509Certificate"* %77, %"class.net::X509Certificate"** %78, align 8
  %79 = icmp eq %"class.net::X509Certificate"* %77, null
  br i1 %79, label %83, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 1 monotonic
  br label %83

83:                                               ; preds = %80, %73
  %84 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %75, i64 1, i32 0
  %85 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %84, align 8
  %86 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %74, i64 1, i32 0
  store %"class.net::X509Certificate"* %85, %"class.net::X509Certificate"** %86, align 8
  %87 = icmp eq %"class.net::X509Certificate"* %85, null
  br i1 %87, label %200, label %197

88:                                               ; preds = %216, %68
  %89 = phi %class.scoped_refptr.27* [ %69, %68 ], [ %218, %216 ]
  %90 = ptrtoint %class.scoped_refptr.27* %89 to i64
  br label %91

91:                                               ; preds = %88, %29
  %92 = phi i64 [ %41, %29 ], [ %90, %88 ]
  store i64 %92, i64* %40, align 8
  br label %93

93:                                               ; preds = %13, %91
  %94 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6
  %95 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 6
  %96 = bitcast %"class.std::__1::vector.25"* %94 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 24, i1 false) #11
  %97 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 6, i32 0, i32 1
  %98 = bitcast %class.scoped_refptr.27** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::vector.25"* %95 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %99, %101
  %103 = ashr exact i64 %102, 3
  %104 = icmp eq i64 %102, 0
  br i1 %104, label %173, label %105

105:                                              ; preds = %93
  %106 = icmp ugt i64 %103, 2305843009213693951
  br i1 %106, label %107, label %109

107:                                              ; preds = %105
  %108 = bitcast %"class.std::__1::vector.25"* %94 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %108) #12
  unreachable

109:                                              ; preds = %105
  %110 = tail call i8* @_Znwm(i64 %102) #13
  %111 = bitcast i8* %110 to %class.scoped_refptr.27*
  %112 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6, i32 0, i32 1
  %113 = bitcast %class.scoped_refptr.27** %112 to i8**
  store i8* %110, i8** %113, align 8
  %114 = bitcast %"class.std::__1::vector.25"* %94 to i8**
  store i8* %110, i8** %114, align 8
  %115 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %111, i64 %103
  %116 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %class.scoped_refptr.27* %115, %class.scoped_refptr.27** %116, align 8
  %117 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %95, i64 0, i32 0, i32 0
  %118 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %117, align 8
  %119 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %97, align 8
  %120 = bitcast %class.scoped_refptr.27** %112 to i64*
  %121 = ptrtoint i8* %110 to i64
  %122 = icmp eq %class.scoped_refptr.27* %118, %119
  br i1 %122, label %171, label %123

123:                                              ; preds = %109
  %124 = ptrtoint %class.scoped_refptr.27* %118 to i64
  %125 = getelementptr %class.scoped_refptr.27, %class.scoped_refptr.27* %119, i64 -1, i32 0
  %126 = ptrtoint %"class.net::X509Certificate"** %125 to i64
  %127 = sub i64 %126, %124
  %128 = lshr i64 %127, 3
  %129 = add nuw nsw i64 %128, 1
  %130 = and i64 %129, 3
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %148, label %132

132:                                              ; preds = %123, %143
  %133 = phi %class.scoped_refptr.27* [ %145, %143 ], [ %111, %123 ]
  %134 = phi %class.scoped_refptr.27* [ %144, %143 ], [ %118, %123 ]
  %135 = phi i64 [ %146, %143 ], [ %130, %123 ]
  %136 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %134, i64 0, i32 0
  %137 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %136, align 8
  %138 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %133, i64 0, i32 0
  store %"class.net::X509Certificate"* %137, %"class.net::X509Certificate"** %138, align 8
  %139 = icmp eq %"class.net::X509Certificate"* %137, null
  br i1 %139, label %143, label %140

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = atomicrmw add i32* %141, i32 1 monotonic
  br label %143

143:                                              ; preds = %140, %132
  %144 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %134, i64 1
  %145 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %133, i64 1
  %146 = add i64 %135, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %132, !llvm.loop !4

148:                                              ; preds = %143, %123
  %149 = phi %class.scoped_refptr.27* [ undef, %123 ], [ %145, %143 ]
  %150 = phi %class.scoped_refptr.27* [ %111, %123 ], [ %145, %143 ]
  %151 = phi %class.scoped_refptr.27* [ %118, %123 ], [ %144, %143 ]
  %152 = icmp ult i64 %127, 24
  br i1 %152, label %168, label %153

153:                                              ; preds = %148, %193
  %154 = phi %class.scoped_refptr.27* [ %195, %193 ], [ %150, %148 ]
  %155 = phi %class.scoped_refptr.27* [ %194, %193 ], [ %151, %148 ]
  %156 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %155, i64 0, i32 0
  %157 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %156, align 8
  %158 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %154, i64 0, i32 0
  store %"class.net::X509Certificate"* %157, %"class.net::X509Certificate"** %158, align 8
  %159 = icmp eq %"class.net::X509Certificate"* %157, null
  br i1 %159, label %163, label %160

160:                                              ; preds = %153
  %161 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = atomicrmw add i32* %161, i32 1 monotonic
  br label %163

163:                                              ; preds = %160, %153
  %164 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %155, i64 1, i32 0
  %165 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %164, align 8
  %166 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %154, i64 1, i32 0
  store %"class.net::X509Certificate"* %165, %"class.net::X509Certificate"** %166, align 8
  %167 = icmp eq %"class.net::X509Certificate"* %165, null
  br i1 %167, label %177, label %174

168:                                              ; preds = %193, %148
  %169 = phi %class.scoped_refptr.27* [ %149, %148 ], [ %195, %193 ]
  %170 = ptrtoint %class.scoped_refptr.27* %169 to i64
  br label %171

171:                                              ; preds = %168, %109
  %172 = phi i64 [ %121, %109 ], [ %170, %168 ]
  store i64 %172, i64* %120, align 8
  br label %173

173:                                              ; preds = %93, %171
  ret void

174:                                              ; preds = %163
  %175 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %165, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = atomicrmw add i32* %175, i32 1 monotonic
  br label %177

177:                                              ; preds = %174, %163
  %178 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %155, i64 2, i32 0
  %179 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %178, align 8
  %180 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %154, i64 2, i32 0
  store %"class.net::X509Certificate"* %179, %"class.net::X509Certificate"** %180, align 8
  %181 = icmp eq %"class.net::X509Certificate"* %179, null
  br i1 %181, label %185, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = atomicrmw add i32* %183, i32 1 monotonic
  br label %185

185:                                              ; preds = %182, %177
  %186 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %155, i64 3, i32 0
  %187 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %186, align 8
  %188 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %154, i64 3, i32 0
  store %"class.net::X509Certificate"* %187, %"class.net::X509Certificate"** %188, align 8
  %189 = icmp eq %"class.net::X509Certificate"* %187, null
  br i1 %189, label %193, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = atomicrmw add i32* %191, i32 1 monotonic
  br label %193

193:                                              ; preds = %190, %185
  %194 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %155, i64 4
  %195 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %154, i64 4
  %196 = icmp eq %class.scoped_refptr.27* %194, %119
  br i1 %196, label %168, label %153

197:                                              ; preds = %83
  %198 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = atomicrmw add i32* %198, i32 1 monotonic
  br label %200

200:                                              ; preds = %197, %83
  %201 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %75, i64 2, i32 0
  %202 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %201, align 8
  %203 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %74, i64 2, i32 0
  store %"class.net::X509Certificate"* %202, %"class.net::X509Certificate"** %203, align 8
  %204 = icmp eq %"class.net::X509Certificate"* %202, null
  br i1 %204, label %208, label %205

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %202, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = atomicrmw add i32* %206, i32 1 monotonic
  br label %208

208:                                              ; preds = %205, %200
  %209 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %75, i64 3, i32 0
  %210 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %209, align 8
  %211 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %74, i64 3, i32 0
  store %"class.net::X509Certificate"* %210, %"class.net::X509Certificate"** %211, align 8
  %212 = icmp eq %"class.net::X509Certificate"* %210, null
  br i1 %212, label %216, label %213

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = atomicrmw add i32* %214, i32 1 monotonic
  br label %216

216:                                              ; preds = %213, %208
  %217 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %75, i64 4
  %218 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %74, i64 4
  %219 = icmp eq %class.scoped_refptr.27* %217, %39
  br i1 %219, label %88, label %73
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12CertVerifier6ConfigC2EOS1_(%"struct.net::CertVerifier::Config"* nocapture, %"struct.net::CertVerifier::Config"* nocapture dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::CertVerifier::Config"* %1 to i32*
  %4 = bitcast %"struct.net::CertVerifier::Config"* %0 to i32*
  %5 = load i32, i32* %3, align 8
  store i32 %5, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 4
  %8 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 0, i32 0
  %9 = bitcast %class.scoped_refptr* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.scoped_refptr* %6 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.net::CRLSet"* null, %"class.net::CRLSet"** %8, align 8
  %12 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 5
  %14 = bitcast %"class.std::__1::vector.25"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #11
  %15 = bitcast %"class.std::__1::vector.25"* %13 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.25"* %12 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 5, i32 0, i32 1
  %19 = bitcast %class.scoped_refptr.27** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5, i32 0, i32 1
  %22 = bitcast %class.scoped_refptr.27** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %class.scoped_refptr.27** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %class.scoped_refptr.27** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.std::__1::vector.25"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #11
  %29 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6
  %30 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 6
  %31 = bitcast %"class.std::__1::vector.25"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #11
  %32 = bitcast %"class.std::__1::vector.25"* %30 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector.25"* %29 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 6, i32 0, i32 1
  %36 = bitcast %class.scoped_refptr.27** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6, i32 0, i32 1
  %39 = bitcast %class.scoped_refptr.27** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %class.scoped_refptr.27** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %class.scoped_refptr.27** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = bitcast %"class.std::__1::vector.25"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12CertVerifier6ConfigD2Ev(%"struct.net::CertVerifier::Config"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %2, i64 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %3, align 8
  %5 = icmp eq %class.scoped_refptr.27* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.27* %4 to i8*
  %8 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6, i32 0, i32 1
  %9 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %8, align 8
  %10 = icmp eq %class.scoped_refptr.27* %9, %4
  br i1 %10, label %28, label %11

11:                                               ; preds = %6, %23
  %12 = phi %class.scoped_refptr.27* [ %13, %23 ], [ %9, %6 ]
  %13 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %12, i64 -1
  %14 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %13, i64 0, i32 0
  %15 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %14, align 8
  %16 = icmp eq %"class.net::X509Certificate"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %15) #11
  %22 = bitcast %"class.net::X509Certificate"* %15 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  br label %23

23:                                               ; preds = %21, %17, %11
  %24 = icmp eq %class.scoped_refptr.27* %13, %4
  br i1 %24, label %25, label %11

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.25"* %2 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %6
  %29 = phi i8* [ %27, %25 ], [ %7, %6 ]
  store %class.scoped_refptr.27* %4, %class.scoped_refptr.27** %8, align 8
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5
  %32 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %31, i64 0, i32 0, i32 0
  %33 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %32, align 8
  %34 = icmp eq %class.scoped_refptr.27* %33, null
  br i1 %34, label %59, label %35

35:                                               ; preds = %30
  %36 = bitcast %class.scoped_refptr.27* %33 to i8*
  %37 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5, i32 0, i32 1
  %38 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %37, align 8
  %39 = icmp eq %class.scoped_refptr.27* %38, %33
  br i1 %39, label %57, label %40

40:                                               ; preds = %35, %52
  %41 = phi %class.scoped_refptr.27* [ %42, %52 ], [ %38, %35 ]
  %42 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %41, i64 -1
  %43 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %42, i64 0, i32 0
  %44 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %43, align 8
  %45 = icmp eq %"class.net::X509Certificate"* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw sub i32* %47, i32 1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %44) #11
  %51 = bitcast %"class.net::X509Certificate"* %44 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %50, %46, %40
  %53 = icmp eq %class.scoped_refptr.27* %42, %33
  br i1 %53, label %54, label %40

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector.25"* %31 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %35
  %58 = phi i8* [ %56, %54 ], [ %36, %35 ]
  store %class.scoped_refptr.27* %33, %class.scoped_refptr.27** %37, align 8
  tail call void @_ZdlPv(i8* %58) #13
  br label %59

59:                                               ; preds = %30, %57
  %60 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 4, i32 0
  %61 = load %"class.net::CRLSet"*, %"class.net::CRLSet"** %60, align 8
  %62 = icmp eq %"class.net::CRLSet"* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.net::CRLSet", %"class.net::CRLSet"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw sub i32* %64, i32 1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  tail call void @_ZN3net6CRLSetD1Ev(%"class.net::CRLSet"* nonnull %61) #11
  %68 = bitcast %"class.net::CRLSet"* %61 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %59, %63, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"struct.net::CertVerifier::Config"* @_ZN3net12CertVerifier6ConfigaSERKS1_(%"struct.net::CertVerifier::Config"* returned, %"struct.net::CertVerifier::Config"* readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::CertVerifier::Config"* %1 to i32*
  %4 = bitcast %"struct.net::CertVerifier::Config"* %0 to i32*
  %5 = load i32, i32* %3, align 8
  store i32 %5, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 4, i32 0
  %8 = load %"class.net::CRLSet"*, %"class.net::CRLSet"** %7, align 8
  %9 = icmp eq %"class.net::CRLSet"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::CRLSet", %"class.net::CRLSet"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %2, %10
  %14 = ptrtoint %"class.net::CRLSet"* %8 to i64
  %15 = bitcast %class.scoped_refptr* %6 to i64*
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %6, i64 0, i32 0
  %17 = load %"class.net::CRLSet"*, %"class.net::CRLSet"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.net::CRLSet"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.net::CRLSet", %"class.net::CRLSet"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  tail call void @_ZN3net6CRLSetD1Ev(%"class.net::CRLSet"* nonnull %17) #11
  %24 = bitcast %"class.net::CRLSet"* %17 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %13, %19, %23
  %26 = icmp eq %"struct.net::CertVerifier::Config"* %0, %1
  br i1 %26, label %38, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5
  %29 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 5, i32 0, i32 0
  %30 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %29, align 8
  %31 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 5, i32 0, i32 1
  %32 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %31, align 8
  tail call void @_ZNSt3__16vectorI13scoped_refptrIN3net15X509CertificateEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.25"* %28, %class.scoped_refptr.27* %30, %class.scoped_refptr.27* %32) #11
  %33 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6
  %34 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 6, i32 0, i32 0
  %35 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %34, align 8
  %36 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 6, i32 0, i32 1
  %37 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %36, align 8
  tail call void @_ZNSt3__16vectorI13scoped_refptrIN3net15X509CertificateEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.25"* %33, %class.scoped_refptr.27* %35, %class.scoped_refptr.27* %37) #11
  br label %38

38:                                               ; preds = %25, %27
  ret %"struct.net::CertVerifier::Config"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"struct.net::CertVerifier::Config"* @_ZN3net12CertVerifier6ConfigaSEOS1_(%"struct.net::CertVerifier::Config"* returned, %"struct.net::CertVerifier::Config"* nocapture dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::CertVerifier::Config"* %1 to i32*
  %4 = bitcast %"struct.net::CertVerifier::Config"* %0 to i32*
  %5 = load i32, i32* %3, align 8
  store i32 %5, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 4
  %8 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 0, i32 0
  %9 = bitcast %class.scoped_refptr* %7 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.net::CRLSet"* null, %"class.net::CRLSet"** %8, align 8
  %11 = bitcast %class.scoped_refptr* %6 to i64*
  %12 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %6, i64 0, i32 0
  %13 = load %"class.net::CRLSet"*, %"class.net::CRLSet"** %12, align 8
  store i64 %10, i64* %11, align 8
  %14 = icmp eq %"class.net::CRLSet"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.net::CRLSet", %"class.net::CRLSet"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  tail call void @_ZN3net6CRLSetD1Ev(%"class.net::CRLSet"* nonnull %13) #11
  %20 = bitcast %"class.net::CRLSet"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %2, %15, %19
  %22 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5
  %23 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 5
  %24 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %22, i64 0, i32 0, i32 0
  %25 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %24, align 8
  %26 = icmp eq %class.scoped_refptr.27* %25, null
  br i1 %26, label %52, label %27

27:                                               ; preds = %21
  %28 = bitcast %class.scoped_refptr.27* %25 to i8*
  %29 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5, i32 0, i32 1
  %30 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %29, align 8
  %31 = icmp eq %class.scoped_refptr.27* %30, %25
  br i1 %31, label %49, label %32

32:                                               ; preds = %27, %44
  %33 = phi %class.scoped_refptr.27* [ %34, %44 ], [ %30, %27 ]
  %34 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %33, i64 -1
  %35 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %34, i64 0, i32 0
  %36 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %35, align 8
  %37 = icmp eq %"class.net::X509Certificate"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %36) #11
  %43 = bitcast %"class.net::X509Certificate"* %36 to i8*
  tail call void @_ZdlPv(i8* %43) #13
  br label %44

44:                                               ; preds = %42, %38, %32
  %45 = icmp eq %class.scoped_refptr.27* %34, %25
  br i1 %45, label %46, label %32

46:                                               ; preds = %44
  %47 = bitcast %"class.std::__1::vector.25"* %22 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %27
  %50 = phi i8* [ %48, %46 ], [ %28, %27 ]
  store %class.scoped_refptr.27* %25, %class.scoped_refptr.27** %29, align 8
  tail call void @_ZdlPv(i8* %50) #13
  %51 = bitcast %"class.std::__1::vector.25"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #11
  br label %52

52:                                               ; preds = %21, %49
  %53 = bitcast %"class.std::__1::vector.25"* %23 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector.25"* %22 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 5, i32 0, i32 1
  %57 = bitcast %class.scoped_refptr.27** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5, i32 0, i32 1
  %60 = bitcast %class.scoped_refptr.27** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %class.scoped_refptr.27** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %class.scoped_refptr.27** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = bitcast %"class.std::__1::vector.25"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #11
  %67 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6
  %68 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 6
  %69 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %67, i64 0, i32 0, i32 0
  %70 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %69, align 8
  %71 = icmp eq %class.scoped_refptr.27* %70, null
  br i1 %71, label %97, label %72

72:                                               ; preds = %52
  %73 = bitcast %class.scoped_refptr.27* %70 to i8*
  %74 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6, i32 0, i32 1
  %75 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %74, align 8
  %76 = icmp eq %class.scoped_refptr.27* %75, %70
  br i1 %76, label %94, label %77

77:                                               ; preds = %72, %89
  %78 = phi %class.scoped_refptr.27* [ %79, %89 ], [ %75, %72 ]
  %79 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %78, i64 -1
  %80 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %79, i64 0, i32 0
  %81 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %80, align 8
  %82 = icmp eq %"class.net::X509Certificate"* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw sub i32* %84, i32 1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %81) #11
  %88 = bitcast %"class.net::X509Certificate"* %81 to i8*
  tail call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %87, %83, %77
  %90 = icmp eq %class.scoped_refptr.27* %79, %70
  br i1 %90, label %91, label %77

91:                                               ; preds = %89
  %92 = bitcast %"class.std::__1::vector.25"* %67 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %91, %72
  %95 = phi i8* [ %93, %91 ], [ %73, %72 ]
  store %class.scoped_refptr.27* %70, %class.scoped_refptr.27** %74, align 8
  tail call void @_ZdlPv(i8* %95) #13
  %96 = bitcast %"class.std::__1::vector.25"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 24, i1 false) #11
  br label %97

97:                                               ; preds = %52, %94
  %98 = bitcast %"class.std::__1::vector.25"* %68 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::vector.25"* %67 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 6, i32 0, i32 1
  %102 = bitcast %class.scoped_refptr.27** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6, i32 0, i32 1
  %105 = bitcast %class.scoped_refptr.27** %104 to i64*
  store i64 %103, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %107 = bitcast %class.scoped_refptr.27** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %110 = bitcast %class.scoped_refptr.27** %109 to i64*
  store i64 %108, i64* %110, align 8
  %111 = bitcast %"class.std::__1::vector.25"* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 24, i1 false) #11
  ret %"struct.net::CertVerifier::Config"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12CertVerifier13RequestParamsC2Ev(%"class.net::CertVerifier::RequestParams"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 3
  %3 = bitcast %"class.net::CertVerifier::RequestParams"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false)
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12CertVerifier13RequestParamsC2E13scoped_refptrINS_15X509CertificateEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEiSD_SD_(%"class.net::CertVerifier::RequestParams"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.sha256_state_st, align 4
  %9 = ptrtoint %"class.net::X509Certificate"* %1 to i64
  store i32 %3, i32* %7, align 4
  %10 = bitcast %"class.net::CertVerifier::RequestParams"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %6
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #11
  br label %24

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %21, i64 %23) #11
  br label %24

24:                                               ; preds = %16, %19
  %25 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 2
  store i32 %3, i32* %25, align 8
  %26 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 3
  %27 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %33 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false) #11
  br label %39

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %26, i8* %36, i64 %38) #11
  br label %39

39:                                               ; preds = %31, %34
  %40 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 4
  %41 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %47 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false) #11
  br label %53

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %40, i8* %50, i64 %52) #11
  br label %53

53:                                               ; preds = %45, %48
  %54 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 5
  %55 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  %56 = bitcast %struct.sha256_state_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %56) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %56, i8 -86, i64 112, i1 false)
  %57 = call i32 @SHA256_Init(%struct.sha256_state_st* nonnull %8) #11
  %58 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 0, i32 0
  %59 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %58, align 8
  %60 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %59, i64 0, i32 6, i32 0, i32 0, i32 0
  %61 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %60, align 8
  %62 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %61) #11
  %63 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %58, align 8
  %64 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %63, i64 0, i32 6, i32 0, i32 0, i32 0
  %65 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %64, align 8
  %66 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %65) #11
  %67 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %8, i8* %62, i64 %66) #11
  %68 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %58, align 8
  %69 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %68, i64 0, i32 7, i32 0, i32 0
  %70 = load %"class.std::__1::unique_ptr.29"*, %"class.std::__1::unique_ptr.29"** %69, align 8
  %71 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %68, i64 0, i32 7, i32 0, i32 1
  %72 = load %"class.std::__1::unique_ptr.29"*, %"class.std::__1::unique_ptr.29"** %71, align 8
  %73 = icmp eq %"class.std::__1::unique_ptr.29"* %70, %72
  br i1 %73, label %74, label %119

74:                                               ; preds = %119, %53
  %75 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  br label %84

82:                                               ; preds = %74
  %83 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  br label %84

84:                                               ; preds = %79, %82
  %85 = phi i8* [ %81, %79 ], [ %83, %82 ]
  %86 = load i8, i8* %13, align 1
  %87 = icmp slt i8 %86, 0
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = zext i8 %86 to i64
  %91 = select i1 %87, i64 %89, i64 %90
  %92 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %8, i8* %85, i64 %91) #11
  %93 = bitcast i32* %7 to i8*
  %94 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %8, i8* nonnull %93, i64 4) #11
  %95 = load i8, i8* %28, align 1
  %96 = icmp slt i8 %95, 0
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %102 = zext i8 %95 to i64
  %103 = select i1 %96, i8* %98, i8* %101
  %104 = select i1 %96, i64 %100, i64 %102
  %105 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %8, i8* %103, i64 %104) #11
  %106 = load i8, i8* %42, align 1
  %107 = icmp slt i8 %106, 0
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %113 = zext i8 %106 to i64
  %114 = select i1 %107, i8* %109, i8* %112
  %115 = select i1 %107, i64 %111, i64 %113
  %116 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %8, i8* %114, i64 %115) #11
  %117 = call i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"* %54, i64 33) #11
  %118 = call i32 @SHA256_Final(i8* %117, %struct.sha256_state_st* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %56) #11
  ret void

119:                                              ; preds = %53, %119
  %120 = phi %"class.std::__1::unique_ptr.29"* [ %127, %119 ], [ %70, %53 ]
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.29"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %121, align 8
  %123 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %122) #11
  %124 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %121, align 8
  %125 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %124) #11
  %126 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %8, i8* %123, i64 %125) #11
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.29"* %120, i64 1
  %128 = icmp eq %"class.std::__1::unique_ptr.29"* %127, %72
  br i1 %128, label %74, label %119
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @SHA256_Init(%struct.sha256_state_st*) local_unnamed_addr #2

declare i32 @SHA256_Update(%struct.sha256_state_st*, i8*, i64) local_unnamed_addr #2

declare i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @SHA256_Final(i8*, %struct.sha256_state_st*) local_unnamed_addr #2

declare i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12CertVerifier13RequestParamsC2ERKS1_(%"class.net::CertVerifier::RequestParams"*, %"class.net::CertVerifier::RequestParams"* nocapture readonly dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %3, align 8
  %5 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 0, i32 0
  store %"class.net::X509Certificate"* %4, %"class.net::X509Certificate"** %5, align 8
  %6 = icmp eq %"class.net::X509Certificate"* %4, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #11
  br label %25

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %22, i64 %24) #11
  br label %25

25:                                               ; preds = %17, %20
  %26 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 2
  %27 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 3
  %30 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 3
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %25
  %36 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #11
  br label %43

38:                                               ; preds = %25
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %29, i8* %40, i64 %42) #11
  br label %43

43:                                               ; preds = %35, %38
  %44 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 4
  %45 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 4
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %43
  %51 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %52 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 24, i1 false) #11
  br label %58

53:                                               ; preds = %43
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %44, i8* %55, i64 %57) #11
  br label %58

58:                                               ; preds = %50, %53
  %59 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 5
  %60 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 5
  %61 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %58
  %66 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  %67 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false) #11
  br label %73

68:                                               ; preds = %58
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %59, i8* %70, i64 %72) #11
  br label %73

73:                                               ; preds = %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12CertVerifier13RequestParamsD2Ev(%"class.net::CertVerifier::RequestParams"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 4
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 3
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %28, %34
  %38 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 0, i32 0
  %39 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %38, align 8
  %40 = icmp eq %"class.net::X509Certificate"* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %39) #11
  %46 = bitcast %"class.net::X509Certificate"* %39 to i8*
  tail call void @_ZdlPv(i8* %46) #13
  br label %47

47:                                               ; preds = %37, %41, %45
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net12CertVerifier13RequestParamseqERKS1_(%"class.net::CertVerifier::RequestParams"* nocapture readonly, %"class.net::CertVerifier::RequestParams"* nocapture readonly dereferenceable(112)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 5
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = icmp eq i64 %12, %20
  br i1 %21, label %22, label %54

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %26 = select i1 %8, i8* %24, i8* %25
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %30 = select i1 %16, i8* %28, i8* %29
  %31 = icmp eq i64 %12, 0
  br i1 %8, label %38, label %32

32:                                               ; preds = %22
  br i1 %31, label %54, label %33

33:                                               ; preds = %32
  %34 = ptrtoint i8* %24 to i64
  %35 = trunc i64 %34 to i8
  %36 = load i8, i8* %30, align 1
  %37 = icmp eq i8 %36, %35
  br i1 %37, label %42, label %54

38:                                               ; preds = %22
  br i1 %31, label %54, label %39

39:                                               ; preds = %38
  %40 = tail call i32 @bcmp(i8* %26, i8* %30, i64 %12) #11
  %41 = icmp eq i32 %40, 0
  br label %54

42:                                               ; preds = %33, %49
  %43 = phi i64 [ %46, %49 ], [ %11, %33 ]
  %44 = phi i8* [ %47, %49 ], [ %25, %33 ]
  %45 = phi i8* [ %50, %49 ], [ %30, %33 ]
  %46 = add i64 %43, -1
  %47 = getelementptr inbounds i8, i8* %44, i64 1
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds i8, i8* %45, i64 1
  %51 = load i8, i8* %47, align 1
  %52 = load i8, i8* %50, align 1
  %53 = icmp eq i8 %51, %52
  br i1 %53, label %42, label %54

54:                                               ; preds = %42, %49, %33, %2, %32, %38, %39
  %55 = phi i1 [ false, %2 ], [ %41, %39 ], [ true, %38 ], [ true, %32 ], [ false, %33 ], [ false, %49 ], [ true, %42 ]
  ret i1 %55
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net12CertVerifier13RequestParamsltERKS1_(%"class.net::CertVerifier::RequestParams"* nocapture readonly, %"class.net::CertVerifier::RequestParams"* nocapture readonly dereferenceable(112)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 5
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.net::CertVerifier::RequestParams", %"class.net::CertVerifier::RequestParams"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = icmp ult i64 %12, %20
  %22 = select i1 %21, i64 %12, i64 %20
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %28 = select i1 %16, i8* %26, i8* %27
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %32 = select i1 %8, i8* %30, i8* %31
  %33 = tail call i32 @memcmp(i8* %28, i8* %32, i64 %22) #11
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %24, %2
  %36 = icmp ult i64 %20, %12
  %37 = zext i1 %21 to i32
  %38 = select i1 %36, i32 -1, i32 %37
  br label %39

39:                                               ; preds = %24, %35
  %40 = phi i32 [ %38, %35 ], [ %33, %24 ]
  %41 = icmp slt i32 %40, 0
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::CertVerifier"* @_ZN3net12CertVerifier27CreateDefaultWithoutCachingE13scoped_refptrINS_14CertNetFetcherEE(%"class.net::CertNetFetcher"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.net::CertVerifyProc"* @_ZN3net14CertVerifyProc23CreateBuiltinVerifyProcE13scoped_refptrINS_14CertNetFetcherEE(%"class.net::CertNetFetcher"* %0) #11
  %3 = tail call i8* @_Znwm(i64 120) #13
  %4 = bitcast i8* %3 to %"class.net::MultiThreadedCertVerifier"*
  tail call void @_ZN3net25MultiThreadedCertVerifierC1E13scoped_refptrINS_14CertVerifyProcEE(%"class.net::MultiThreadedCertVerifier"* nonnull %4, %"class.net::CertVerifyProc"* %2) #11
  %5 = bitcast i8* %3 to %"class.net::CertVerifier"*
  ret %"class.net::CertVerifier"* %5
}

declare %"class.net::CertVerifyProc"* @_ZN3net14CertVerifyProc23CreateBuiltinVerifyProcE13scoped_refptrINS_14CertNetFetcherEE(%"class.net::CertNetFetcher"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::CertVerifier"* @_ZN3net12CertVerifier13CreateDefaultE13scoped_refptrINS_14CertNetFetcherEE(%"class.net::CertNetFetcher"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.net::CertVerifyProc"* @_ZN3net14CertVerifyProc23CreateBuiltinVerifyProcE13scoped_refptrINS_14CertNetFetcherEE(%"class.net::CertNetFetcher"* %0) #11
  %3 = tail call i8* @_Znwm(i64 120) #13
  %4 = bitcast i8* %3 to %"class.net::MultiThreadedCertVerifier"*
  tail call void @_ZN3net25MultiThreadedCertVerifierC1E13scoped_refptrINS_14CertVerifyProcEE(%"class.net::MultiThreadedCertVerifier"* nonnull %4, %"class.net::CertVerifyProc"* %2) #11
  %5 = bitcast i8* %3 to %"class.net::CertVerifier"*
  %6 = tail call i8* @_Znwm(i64 88) #13
  %7 = bitcast i8* %6 to %"class.net::CoalescingCertVerifier"*
  tail call void @_ZN3net22CoalescingCertVerifierC1ENSt3__110unique_ptrINS_12CertVerifierENS1_14default_deleteIS3_EEEE(%"class.net::CoalescingCertVerifier"* nonnull %7, %"class.net::CertVerifier"* nonnull %5) #11
  %8 = tail call i8* @_Znwm(i64 88) #13
  %9 = bitcast i8* %8 to %"class.net::CachingCertVerifier"*
  %10 = bitcast i8* %6 to %"class.net::CertVerifier"*
  tail call void @_ZN3net19CachingCertVerifierC1ENSt3__110unique_ptrINS_12CertVerifierENS1_14default_deleteIS3_EEEE(%"class.net::CachingCertVerifier"* nonnull %9, %"class.net::CertVerifier"* nonnull %10) #11
  %11 = bitcast i8* %8 to %"class.net::CertVerifier"*
  ret %"class.net::CertVerifier"* %11
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3neteqERKNS_12CertVerifier6ConfigES3_(%"struct.net::CertVerifier::Config"* dereferenceable(64), %"struct.net::CertVerifier::Config"* dereferenceable(64)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 3
  %11 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 5
  %12 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 6
  %13 = load i8, i8* %3, align 1, !range !5
  %14 = load i8, i8* %8, align 1, !range !5
  %15 = icmp eq i8 %13, %14
  br i1 %15, label %16, label %100

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !5
  %20 = load i8, i8* %17, align 1, !range !5
  %21 = icmp eq i8 %19, %20
  br i1 %21, label %22, label %100

22:                                               ; preds = %16
  %23 = load i8, i8* %4, align 1, !range !5
  %24 = load i8, i8* %9, align 1, !range !5
  %25 = icmp eq i8 %23, %24
  br i1 %25, label %26, label %100

26:                                               ; preds = %22
  %27 = load i8, i8* %5, align 1, !range !5
  %28 = load i8, i8* %10, align 1, !range !5
  %29 = icmp eq i8 %27, %28
  br i1 %29, label %30, label %100

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 4, i32 0
  %32 = load %"class.net::CRLSet"*, %"class.net::CRLSet"** %31, align 8
  %33 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 4, i32 0
  %34 = load %"class.net::CRLSet"*, %"class.net::CRLSet"** %33, align 8
  %35 = icmp eq %"class.net::CRLSet"* %32, %34
  br i1 %35, label %36, label %100

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5, i32 0, i32 1
  %38 = bitcast %class.scoped_refptr.27** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.25"* %6 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 5, i32 0, i32 1
  %44 = bitcast %class.scoped_refptr.27** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.25"* %11 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = icmp eq i64 %42, %48
  %50 = inttoptr i64 %41 to %class.scoped_refptr.27*
  %51 = inttoptr i64 %39 to %class.scoped_refptr.27*
  br i1 %49, label %52, label %100

52:                                               ; preds = %36
  %53 = icmp eq %class.scoped_refptr.27* %50, %51
  br i1 %53, label %68, label %54

54:                                               ; preds = %52
  %55 = inttoptr i64 %47 to %class.scoped_refptr.27*
  br label %56

56:                                               ; preds = %64, %54
  %57 = phi %class.scoped_refptr.27* [ %66, %64 ], [ %55, %54 ]
  %58 = phi %class.scoped_refptr.27* [ %65, %64 ], [ %50, %54 ]
  %59 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %58, i64 0, i32 0
  %60 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %59, align 8
  %61 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %57, i64 0, i32 0
  %62 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %61, align 8
  %63 = icmp eq %"class.net::X509Certificate"* %60, %62
  br i1 %63, label %64, label %100

64:                                               ; preds = %56
  %65 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %58, i64 1
  %66 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %57, i64 1
  %67 = icmp eq %class.scoped_refptr.27* %65, %51
  br i1 %67, label %68, label %56

68:                                               ; preds = %64, %52
  %69 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6, i32 0, i32 1
  %70 = bitcast %class.scoped_refptr.27** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::vector.25"* %7 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %71, %73
  %75 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 6, i32 0, i32 1
  %76 = bitcast %class.scoped_refptr.27** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.std::__1::vector.25"* %12 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %77, %79
  %81 = icmp eq i64 %74, %80
  %82 = inttoptr i64 %73 to %class.scoped_refptr.27*
  %83 = inttoptr i64 %71 to %class.scoped_refptr.27*
  br i1 %81, label %84, label %100

84:                                               ; preds = %68
  %85 = icmp eq %class.scoped_refptr.27* %82, %83
  br i1 %85, label %100, label %86

86:                                               ; preds = %84
  %87 = inttoptr i64 %79 to %class.scoped_refptr.27*
  br label %88

88:                                               ; preds = %96, %86
  %89 = phi %class.scoped_refptr.27* [ %98, %96 ], [ %87, %86 ]
  %90 = phi %class.scoped_refptr.27* [ %97, %96 ], [ %82, %86 ]
  %91 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %90, i64 0, i32 0
  %92 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %91, align 8
  %93 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %89, i64 0, i32 0
  %94 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %93, align 8
  %95 = icmp eq %"class.net::X509Certificate"* %92, %94
  br i1 %95, label %96, label %100

96:                                               ; preds = %88
  %97 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %90, i64 1
  %98 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %89, i64 1
  %99 = icmp eq %class.scoped_refptr.27* %97, %83
  br i1 %99, label %100, label %88

100:                                              ; preds = %56, %88, %96, %2, %16, %22, %26, %30, %36, %68, %84
  %101 = phi i1 [ false, %68 ], [ true, %84 ], [ false, %30 ], [ false, %36 ], [ false, %26 ], [ false, %22 ], [ false, %16 ], [ false, %2 ], [ false, %88 ], [ true, %96 ], [ false, %56 ]
  ret i1 %101
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3netneERKNS_12CertVerifier6ConfigES3_(%"struct.net::CertVerifier::Config"* nocapture readonly dereferenceable(64), %"struct.net::CertVerifier::Config"* nocapture readonly dereferenceable(64)) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 3
  %11 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 5
  %12 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 6
  %13 = load i8, i8* %3, align 1, !range !5
  %14 = load i8, i8* %8, align 1, !range !5
  %15 = icmp eq i8 %13, %14
  br i1 %15, label %16, label %100

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !5
  %20 = load i8, i8* %17, align 1, !range !5
  %21 = icmp eq i8 %19, %20
  br i1 %21, label %22, label %100

22:                                               ; preds = %16
  %23 = load i8, i8* %4, align 1, !range !5
  %24 = load i8, i8* %9, align 1, !range !5
  %25 = icmp eq i8 %23, %24
  br i1 %25, label %26, label %100

26:                                               ; preds = %22
  %27 = load i8, i8* %5, align 1, !range !5
  %28 = load i8, i8* %10, align 1, !range !5
  %29 = icmp eq i8 %27, %28
  br i1 %29, label %30, label %100

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 4, i32 0
  %32 = load %"class.net::CRLSet"*, %"class.net::CRLSet"** %31, align 8
  %33 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 4, i32 0
  %34 = load %"class.net::CRLSet"*, %"class.net::CRLSet"** %33, align 8
  %35 = icmp eq %"class.net::CRLSet"* %32, %34
  br i1 %35, label %36, label %100

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 5, i32 0, i32 1
  %38 = bitcast %class.scoped_refptr.27** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.25"* %6 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 5, i32 0, i32 1
  %44 = bitcast %class.scoped_refptr.27** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.25"* %11 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = icmp eq i64 %42, %48
  %50 = inttoptr i64 %41 to %class.scoped_refptr.27*
  %51 = inttoptr i64 %39 to %class.scoped_refptr.27*
  br i1 %49, label %52, label %100

52:                                               ; preds = %36
  %53 = icmp eq %class.scoped_refptr.27* %50, %51
  br i1 %53, label %68, label %54

54:                                               ; preds = %52
  %55 = inttoptr i64 %47 to %class.scoped_refptr.27*
  br label %56

56:                                               ; preds = %64, %54
  %57 = phi %class.scoped_refptr.27* [ %66, %64 ], [ %55, %54 ]
  %58 = phi %class.scoped_refptr.27* [ %65, %64 ], [ %50, %54 ]
  %59 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %58, i64 0, i32 0
  %60 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %59, align 8
  %61 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %57, i64 0, i32 0
  %62 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %61, align 8
  %63 = icmp eq %"class.net::X509Certificate"* %60, %62
  br i1 %63, label %64, label %100

64:                                               ; preds = %56
  %65 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %58, i64 1
  %66 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %57, i64 1
  %67 = icmp eq %class.scoped_refptr.27* %65, %51
  br i1 %67, label %68, label %56

68:                                               ; preds = %64, %52
  %69 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %0, i64 0, i32 6, i32 0, i32 1
  %70 = bitcast %class.scoped_refptr.27** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::vector.25"* %7 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %71, %73
  %75 = getelementptr inbounds %"struct.net::CertVerifier::Config", %"struct.net::CertVerifier::Config"* %1, i64 0, i32 6, i32 0, i32 1
  %76 = bitcast %class.scoped_refptr.27** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.std::__1::vector.25"* %12 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %77, %79
  %81 = icmp eq i64 %74, %80
  %82 = inttoptr i64 %73 to %class.scoped_refptr.27*
  %83 = inttoptr i64 %71 to %class.scoped_refptr.27*
  br i1 %81, label %84, label %100

84:                                               ; preds = %68
  %85 = icmp eq %class.scoped_refptr.27* %82, %83
  br i1 %85, label %100, label %86

86:                                               ; preds = %84
  %87 = inttoptr i64 %79 to %class.scoped_refptr.27*
  br label %88

88:                                               ; preds = %96, %86
  %89 = phi %class.scoped_refptr.27* [ %98, %96 ], [ %87, %86 ]
  %90 = phi %class.scoped_refptr.27* [ %97, %96 ], [ %82, %86 ]
  %91 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %90, i64 0, i32 0
  %92 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %91, align 8
  %93 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %89, i64 0, i32 0
  %94 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %93, align 8
  %95 = icmp eq %"class.net::X509Certificate"* %92, %94
  br i1 %95, label %96, label %100

96:                                               ; preds = %88
  %97 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %90, i64 1
  %98 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %89, i64 1
  %99 = icmp eq %class.scoped_refptr.27* %97, %83
  br i1 %99, label %100, label %88

100:                                              ; preds = %56, %88, %96, %2, %16, %22, %26, %30, %36, %68, %84
  %101 = phi i1 [ true, %68 ], [ false, %84 ], [ true, %30 ], [ true, %36 ], [ true, %26 ], [ true, %22 ], [ true, %16 ], [ true, %2 ], [ false, %96 ], [ true, %88 ], [ true, %56 ]
  ret i1 %101
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3net6CRLSetD1Ev(%"class.net::CRLSet"*) unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13scoped_refptrIN3net15X509CertificateEENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.25"*, %class.scoped_refptr.27*, %class.scoped_refptr.27*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %class.scoped_refptr.27* %1 to i64
  %5 = ptrtoint %class.scoped_refptr.27* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %class.scoped_refptr.27** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.25"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %class.scoped_refptr.27*
  br i1 %15, label %126, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %class.scoped_refptr.27** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %1, i64 %22
  %25 = select i1 %23, %class.scoped_refptr.27* %24, %class.scoped_refptr.27* %2
  %26 = icmp eq %class.scoped_refptr.27* %25, %1
  br i1 %26, label %52, label %27

27:                                               ; preds = %17, %48
  %28 = phi %class.scoped_refptr.27* [ %50, %48 ], [ %16, %17 ]
  %29 = phi %class.scoped_refptr.27* [ %49, %48 ], [ %1, %17 ]
  %30 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %29, i64 0, i32 0
  %31 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %30, align 8
  %32 = icmp eq %"class.net::X509Certificate"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  br label %36

36:                                               ; preds = %33, %27
  %37 = ptrtoint %"class.net::X509Certificate"* %31 to i64
  %38 = bitcast %class.scoped_refptr.27* %28 to i64*
  %39 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %28, i64 0, i32 0
  %40 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %39, align 8
  store i64 %37, i64* %38, align 8
  %41 = icmp eq %"class.net::X509Certificate"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %40) #11
  %47 = bitcast %"class.net::X509Certificate"* %40 to i8*
  tail call void @_ZdlPv(i8* %47) #13
  br label %48

48:                                               ; preds = %46, %42, %36
  %49 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %29, i64 1
  %50 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %28, i64 1
  %51 = icmp eq %class.scoped_refptr.27* %49, %25
  br i1 %51, label %52, label %27

52:                                               ; preds = %48, %17
  %53 = phi %class.scoped_refptr.27* [ %16, %17 ], [ %50, %48 ]
  br i1 %23, label %54, label %108

54:                                               ; preds = %52
  %55 = load i64, i64* %19, align 8
  %56 = icmp eq %class.scoped_refptr.27* %25, %2
  br i1 %56, label %106, label %57

57:                                               ; preds = %54
  %58 = inttoptr i64 %55 to %class.scoped_refptr.27*
  %59 = xor i64 %22, -1
  %60 = getelementptr %class.scoped_refptr.27, %class.scoped_refptr.27* %2, i64 %59, i32 0
  %61 = ptrtoint %"class.net::X509Certificate"** %60 to i64
  %62 = sub i64 %61, %4
  %63 = lshr i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %83, label %67

67:                                               ; preds = %57, %78
  %68 = phi %class.scoped_refptr.27* [ %80, %78 ], [ %58, %57 ]
  %69 = phi %class.scoped_refptr.27* [ %79, %78 ], [ %24, %57 ]
  %70 = phi i64 [ %81, %78 ], [ %65, %57 ]
  %71 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %69, i64 0, i32 0
  %72 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %71, align 8
  %73 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %68, i64 0, i32 0
  store %"class.net::X509Certificate"* %72, %"class.net::X509Certificate"** %73, align 8
  %74 = icmp eq %"class.net::X509Certificate"* %72, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 1 monotonic
  br label %78

78:                                               ; preds = %75, %67
  %79 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %69, i64 1
  %80 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %68, i64 1
  %81 = add i64 %70, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %67, !llvm.loop !6

83:                                               ; preds = %78, %57
  %84 = phi %class.scoped_refptr.27* [ undef, %57 ], [ %80, %78 ]
  %85 = phi %class.scoped_refptr.27* [ %58, %57 ], [ %80, %78 ]
  %86 = phi %class.scoped_refptr.27* [ %24, %57 ], [ %79, %78 ]
  %87 = icmp ult i64 %62, 24
  br i1 %87, label %103, label %88

88:                                               ; preds = %83, %272
  %89 = phi %class.scoped_refptr.27* [ %274, %272 ], [ %85, %83 ]
  %90 = phi %class.scoped_refptr.27* [ %273, %272 ], [ %86, %83 ]
  %91 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %90, i64 0, i32 0
  %92 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %91, align 8
  %93 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %89, i64 0, i32 0
  store %"class.net::X509Certificate"* %92, %"class.net::X509Certificate"** %93, align 8
  %94 = icmp eq %"class.net::X509Certificate"* %92, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 1 monotonic
  br label %98

98:                                               ; preds = %95, %88
  %99 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %90, i64 1, i32 0
  %100 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %99, align 8
  %101 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %89, i64 1, i32 0
  store %"class.net::X509Certificate"* %100, %"class.net::X509Certificate"** %101, align 8
  %102 = icmp eq %"class.net::X509Certificate"* %100, null
  br i1 %102, label %256, label %253

103:                                              ; preds = %272, %83
  %104 = phi %class.scoped_refptr.27* [ %84, %83 ], [ %274, %272 ]
  %105 = ptrtoint %class.scoped_refptr.27* %104 to i64
  br label %106

106:                                              ; preds = %54, %103
  %107 = phi i64 [ %55, %54 ], [ %105, %103 ]
  store i64 %107, i64* %19, align 8
  br label %229

108:                                              ; preds = %52
  %109 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %18, align 8
  %110 = icmp eq %class.scoped_refptr.27* %109, %53
  br i1 %110, label %125, label %111

111:                                              ; preds = %108, %123
  %112 = phi %class.scoped_refptr.27* [ %113, %123 ], [ %109, %108 ]
  %113 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %112, i64 -1
  %114 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %113, i64 0, i32 0
  %115 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %114, align 8
  %116 = icmp eq %"class.net::X509Certificate"* %115, null
  br i1 %116, label %123, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw sub i32* %118, i32 1 acq_rel
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %115) #11
  %122 = bitcast %"class.net::X509Certificate"* %115 to i8*
  tail call void @_ZdlPv(i8* %122) #13
  br label %123

123:                                              ; preds = %121, %117, %111
  %124 = icmp eq %class.scoped_refptr.27* %113, %53
  br i1 %124, label %125, label %111

125:                                              ; preds = %123, %108
  store %class.scoped_refptr.27* %53, %class.scoped_refptr.27** %18, align 8
  br label %229

126:                                              ; preds = %3
  %127 = icmp eq i64 %12, 0
  br i1 %127, label %153, label %128

128:                                              ; preds = %126
  %129 = inttoptr i64 %12 to i8*
  %130 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 1
  %131 = load %class.scoped_refptr.27*, %class.scoped_refptr.27** %130, align 8
  %132 = icmp eq %class.scoped_refptr.27* %131, %16
  br i1 %132, label %150, label %133

133:                                              ; preds = %128, %145
  %134 = phi %class.scoped_refptr.27* [ %135, %145 ], [ %131, %128 ]
  %135 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %134, i64 -1
  %136 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %135, i64 0, i32 0
  %137 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %136, align 8
  %138 = icmp eq %"class.net::X509Certificate"* %137, null
  br i1 %138, label %145, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw sub i32* %140, i32 1 acq_rel
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %145

143:                                              ; preds = %139
  tail call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %137) #11
  %144 = bitcast %"class.net::X509Certificate"* %137 to i8*
  tail call void @_ZdlPv(i8* %144) #13
  br label %145

145:                                              ; preds = %143, %139, %133
  %146 = icmp eq %class.scoped_refptr.27* %135, %16
  br i1 %146, label %147, label %133

147:                                              ; preds = %145
  %148 = bitcast %"class.std::__1::vector.25"* %0 to i8**
  %149 = load i8*, i8** %148, align 8
  br label %150

150:                                              ; preds = %147, %128
  %151 = phi i8* [ %149, %147 ], [ %129, %128 ]
  store %class.scoped_refptr.27* %16, %class.scoped_refptr.27** %130, align 8
  tail call void @_ZdlPv(i8* %151) #13
  %152 = bitcast %"class.std::__1::vector.25"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 24, i1 false) #11
  br label %153

153:                                              ; preds = %126, %150
  %154 = phi i64 [ %10, %126 ], [ 0, %150 ]
  %155 = icmp ugt i64 %7, 2305843009213693951
  br i1 %155, label %156, label %158

156:                                              ; preds = %153
  %157 = bitcast %"class.std::__1::vector.25"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %157) #12
  unreachable

158:                                              ; preds = %153
  %159 = ashr exact i64 %154, 3
  %160 = icmp ult i64 %159, 1152921504606846975
  br i1 %160, label %161, label %168

161:                                              ; preds = %158
  %162 = ashr exact i64 %154, 2
  %163 = icmp ult i64 %162, %7
  br i1 %163, label %168, label %164

164:                                              ; preds = %161
  %165 = icmp ugt i64 %162, 2305843009213693951
  br i1 %165, label %166, label %168

166:                                              ; preds = %164
  %167 = bitcast %"class.std::__1::vector.25"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %167) #12
  unreachable

168:                                              ; preds = %161, %158, %164
  %169 = phi i64 [ %162, %164 ], [ 2305843009213693951, %158 ], [ %7, %161 ]
  %170 = shl i64 %169, 3
  %171 = tail call i8* @_Znwm(i64 %170) #13
  %172 = bitcast i8* %171 to %class.scoped_refptr.27*
  %173 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 1
  %174 = bitcast %class.scoped_refptr.27** %173 to i8**
  store i8* %171, i8** %174, align 8
  %175 = bitcast %"class.std::__1::vector.25"* %0 to i8**
  store i8* %171, i8** %175, align 8
  %176 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %172, i64 %169
  store %class.scoped_refptr.27* %176, %class.scoped_refptr.27** %8, align 8
  %177 = bitcast %class.scoped_refptr.27** %173 to i64*
  %178 = ptrtoint i8* %171 to i64
  %179 = icmp eq %class.scoped_refptr.27* %1, %2
  br i1 %179, label %227, label %180

180:                                              ; preds = %168
  %181 = getelementptr %class.scoped_refptr.27, %class.scoped_refptr.27* %2, i64 -1, i32 0
  %182 = ptrtoint %"class.net::X509Certificate"** %181 to i64
  %183 = sub i64 %182, %4
  %184 = lshr i64 %183, 3
  %185 = add nuw nsw i64 %184, 1
  %186 = and i64 %185, 3
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %204, label %188

188:                                              ; preds = %180, %199
  %189 = phi %class.scoped_refptr.27* [ %201, %199 ], [ %172, %180 ]
  %190 = phi %class.scoped_refptr.27* [ %200, %199 ], [ %1, %180 ]
  %191 = phi i64 [ %202, %199 ], [ %186, %180 ]
  %192 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %190, i64 0, i32 0
  %193 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %192, align 8
  %194 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %189, i64 0, i32 0
  store %"class.net::X509Certificate"* %193, %"class.net::X509Certificate"** %194, align 8
  %195 = icmp eq %"class.net::X509Certificate"* %193, null
  br i1 %195, label %199, label %196

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = atomicrmw add i32* %197, i32 1 monotonic
  br label %199

199:                                              ; preds = %196, %188
  %200 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %190, i64 1
  %201 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %189, i64 1
  %202 = add i64 %191, -1
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %188, !llvm.loop !7

204:                                              ; preds = %199, %180
  %205 = phi %class.scoped_refptr.27* [ undef, %180 ], [ %201, %199 ]
  %206 = phi %class.scoped_refptr.27* [ %172, %180 ], [ %201, %199 ]
  %207 = phi %class.scoped_refptr.27* [ %1, %180 ], [ %200, %199 ]
  %208 = icmp ult i64 %183, 24
  br i1 %208, label %224, label %209

209:                                              ; preds = %204, %249
  %210 = phi %class.scoped_refptr.27* [ %251, %249 ], [ %206, %204 ]
  %211 = phi %class.scoped_refptr.27* [ %250, %249 ], [ %207, %204 ]
  %212 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %211, i64 0, i32 0
  %213 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %212, align 8
  %214 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %210, i64 0, i32 0
  store %"class.net::X509Certificate"* %213, %"class.net::X509Certificate"** %214, align 8
  %215 = icmp eq %"class.net::X509Certificate"* %213, null
  br i1 %215, label %219, label %216

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %213, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = atomicrmw add i32* %217, i32 1 monotonic
  br label %219

219:                                              ; preds = %216, %209
  %220 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %211, i64 1, i32 0
  %221 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %220, align 8
  %222 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %210, i64 1, i32 0
  store %"class.net::X509Certificate"* %221, %"class.net::X509Certificate"** %222, align 8
  %223 = icmp eq %"class.net::X509Certificate"* %221, null
  br i1 %223, label %233, label %230

224:                                              ; preds = %249, %204
  %225 = phi %class.scoped_refptr.27* [ %205, %204 ], [ %251, %249 ]
  %226 = ptrtoint %class.scoped_refptr.27* %225 to i64
  br label %227

227:                                              ; preds = %168, %224
  %228 = phi i64 [ %178, %168 ], [ %226, %224 ]
  store i64 %228, i64* %177, align 8
  br label %229

229:                                              ; preds = %106, %125, %227
  ret void

230:                                              ; preds = %219
  %231 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %221, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = atomicrmw add i32* %231, i32 1 monotonic
  br label %233

233:                                              ; preds = %230, %219
  %234 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %211, i64 2, i32 0
  %235 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %234, align 8
  %236 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %210, i64 2, i32 0
  store %"class.net::X509Certificate"* %235, %"class.net::X509Certificate"** %236, align 8
  %237 = icmp eq %"class.net::X509Certificate"* %235, null
  br i1 %237, label %241, label %238

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = atomicrmw add i32* %239, i32 1 monotonic
  br label %241

241:                                              ; preds = %238, %233
  %242 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %211, i64 3, i32 0
  %243 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %242, align 8
  %244 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %210, i64 3, i32 0
  store %"class.net::X509Certificate"* %243, %"class.net::X509Certificate"** %244, align 8
  %245 = icmp eq %"class.net::X509Certificate"* %243, null
  br i1 %245, label %249, label %246

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %243, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = atomicrmw add i32* %247, i32 1 monotonic
  br label %249

249:                                              ; preds = %246, %241
  %250 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %211, i64 4
  %251 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %210, i64 4
  %252 = icmp eq %class.scoped_refptr.27* %250, %2
  br i1 %252, label %224, label %209

253:                                              ; preds = %98
  %254 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = atomicrmw add i32* %254, i32 1 monotonic
  br label %256

256:                                              ; preds = %253, %98
  %257 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %90, i64 2, i32 0
  %258 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %257, align 8
  %259 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %89, i64 2, i32 0
  store %"class.net::X509Certificate"* %258, %"class.net::X509Certificate"** %259, align 8
  %260 = icmp eq %"class.net::X509Certificate"* %258, null
  br i1 %260, label %264, label %261

261:                                              ; preds = %256
  %262 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %258, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = atomicrmw add i32* %262, i32 1 monotonic
  br label %264

264:                                              ; preds = %261, %256
  %265 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %90, i64 3, i32 0
  %266 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %265, align 8
  %267 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %89, i64 3, i32 0
  store %"class.net::X509Certificate"* %266, %"class.net::X509Certificate"** %267, align 8
  %268 = icmp eq %"class.net::X509Certificate"* %266, null
  br i1 %268, label %272, label %269

269:                                              ; preds = %264
  %270 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %266, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = atomicrmw add i32* %270, i32 1 monotonic
  br label %272

272:                                              ; preds = %269, %264
  %273 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %90, i64 4
  %274 = getelementptr inbounds %class.scoped_refptr.27, %class.scoped_refptr.27* %89, i64 4
  %275 = icmp eq %class.scoped_refptr.27* %273, %2
  br i1 %275, label %103, label %88
}

; Function Attrs: nounwind
declare void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"*) unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3net25MultiThreadedCertVerifierC1E13scoped_refptrINS_14CertVerifyProcEE(%"class.net::MultiThreadedCertVerifier"*, %"class.net::CertVerifyProc"*) unnamed_addr #2

declare void @_ZN3net22CoalescingCertVerifierC1ENSt3__110unique_ptrINS_12CertVerifierENS1_14default_deleteIS3_EEEE(%"class.net::CoalescingCertVerifier"*, %"class.net::CertVerifier"*) unnamed_addr #2

declare void @_ZN3net19CachingCertVerifierC1ENSt3__110unique_ptrINS_12CertVerifierENS1_14default_deleteIS3_EEEE(%"class.net::CachingCertVerifier"*, %"class.net::CertVerifier"*) unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{i8 0, i8 2}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
