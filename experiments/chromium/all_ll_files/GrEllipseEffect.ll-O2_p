; ModuleID = '../../third_party/skia/src/gpu/effects/generated/GrEllipseEffect.cpp'
source_filename = "../../third_party/skia/src/gpu/effects/generated/GrEllipseEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrEllipseEffect = type { %class.GrFragmentProcessor.base, i32, %struct.SkPoint, %struct.SkPoint }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.3 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.3 = type { %"class.std::__1::unique_ptr.4"*, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.SkPoint = type { float, float }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.1 }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTArray.1 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrGLSLFragmentProcessor* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.16*, i32, i32 }
%class.SkTArray.16 = type { i32*, i64 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrGLSLEllipseEffect = type { %class.GrGLSLFragmentProcessor, %struct.SkPoint, %struct.SkPoint, %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.26, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.28, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.37], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.107", %"class.std::__1::vector", i32, %class.SkSTArray.118 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.39, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.39 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.40, i32, [4 x i8] }>
%class.SkSTArray.40 = type { %class.SkAlignedSTStorage.41, %class.SkTArray.16 }
%class.SkAlignedSTStorage.41 = type { [132 x i8] }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.42, i32, [4 x i8] }
%union.anon.42 = type { %struct.anon.43 }
%struct.anon.43 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.91, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.45, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.45 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.46, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.85" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.46 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.50 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.47, [4 x i8] }>
%union.anon.47 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.48, i8* }
%class.sk_sp.48 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.49, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.49 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.50 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.51, void (i8*)*, i8* }
%class.SkNVRefCnt.51 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.46, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.82, %class.sk_sp.84, %class.sk_sp.84 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.58, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.52" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.58 = type { %class.SkTHashTable.59 }
%class.SkTHashTable.59 = type { i32, i32, %class.SkAutoTArray.60 }
%class.SkAutoTArray.60 = type { %"class.std::__1::unique_ptr.61" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.67, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.67 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.68" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.73, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.73 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.74 }
%class.SkTHashTable.74 = type { i32, i32, %class.SkAutoTArray.75 }
%class.SkAutoTArray.75 = type { %"class.std::__1::unique_ptr.76" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.82 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.83, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.83 = type { %class.GrShaderCaps* }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.84 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.90 }
%union.anon.90 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.91 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.92, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.92 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.93"*, [24 x i8] }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %class.GrFragmentProcessor* }
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.99, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.99 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.103 }
%class.SkTArray.103 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.std::__1::unique_ptr"* }
%class.SkSTArray.118 = type { %class.SkAlignedSTStorage.119, %class.SkTArray.120 }
%class.SkAlignedSTStorage.119 = type { [160 x i8] }
%class.SkTArray.120 = type { %class.GrShaderVar*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.26 = type { %class.SkAlignedSTStorage.27, %class.SkTArray }
%class.SkAlignedSTStorage.27 = type { [120 x i8] }
%class.SkSTArray.28 = type { %class.SkAlignedSTStorage.29, %class.SkTArray.30 }
%class.SkAlignedSTStorage.29 = type { [16 x i8] }
%class.SkTArray.30 = type { %"class.std::__1::unique_ptr.31"*, i64 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.37 = type { %class.SkAlignedSTStorage.38, %class.SkTArray }
%class.SkAlignedSTStorage.38 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.26, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.28, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.37], i32, i8, [3 x i8], i32, [12 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN15GrEllipseEffectD0Ev = comdat any

$_ZNK15GrEllipseEffect4nameEv = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZN19GrGLSLEllipseEffectD0Ev = comdat any

$_ZN19GrGLSLEllipseEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE = comdat any

$_ZN19GrGLSLEllipseEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV19GrGLSLEllipseEffect = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@.str = private unnamed_addr constant [9 x i8] c"edgeType\00", align 1
@_ZTV15GrEllipseEffect = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrEllipseEffect*)* @_ZN15GrEllipseEffectD0Ev to i8*), i8* bitcast (i8* (%class.GrEllipseEffect*)* @_ZNK15GrEllipseEffect4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrEllipseEffect*)* @_ZNK15GrEllipseEffect5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrEllipseEffect*)* @_ZNK15GrEllipseEffect17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrEllipseEffect*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK15GrEllipseEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrEllipseEffect*, %class.GrFragmentProcessor*)* @_ZNK15GrEllipseEffect9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [14 x i8] c"EllipseEffect\00", align 1
@.str.2 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.3 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@_ZTV19GrGLSLEllipseEffect = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLEllipseEffect*)* @_ZN19GrGLSLEllipseEffectD0Ev to i8*), i8* bitcast (void (%class.GrGLSLEllipseEffect*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN19GrGLSLEllipseEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLSLEllipseEffect*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN19GrGLSLEllipseEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [8 x i8] c"ellipse\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"scale\00", align 1
@.str.6 = private unnamed_addr constant [887 x i8] c"float2 prevCenter;\0Afloat2 prevRadii = float2(%f, %f);\0Afloat2 d = sk_FragCoord.xy - %s.xy;\0Aconst bool medPrecision = !sk_Caps.floatIs32Bits;\0A@if (medPrecision) {\0A    d *= %s.y;\0A}\0Afloat2 Z = d * %s.zw;\0Afloat implicit = dot(Z, d) - 1.0;\0Afloat grad_dot = 4.0 * dot(Z, Z);\0A@if (medPrecision) {\0A    grad_dot = max(grad_dot, 6.1036000261083245e-05);\0A} else {\0A    grad_dot = max(grad_dot, 1.1754999560161448e-38);\0A}\0Afloat approx_dist = implicit * inversesqrt(grad_dot);\0A@if (medPrecision) {\0A    approx_dist *= %s.x;\0A}\0Ahalf alpha;\0A@switch (%d) {\0A    case 0:\0A        alpha = approx_dist > 0.0 ? 0.0 : 1.0;\0A        break;\0A    case 1:\0A        alpha = clamp(0.5 - half(approx_dist), 0.0, 1.0);\0A        break;\0A    case 2:\0A        alpha = approx_dist > 0.0 ? 1.0 : 0.0;\0A        break;\0A    case 3:\0A        alpha = clamp(0.5 + half(approx_dist), 0.0, 1.0);\0A        break;\0A    default:\0A        discard;\0A}\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"float2(0)\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"\0Areturn %s * alpha;\0A\00", align 1

@_ZN15GrEllipseEffectC1ERKS_ = hidden unnamed_addr alias void (%class.GrEllipseEffect*, %class.GrEllipseEffect*), void (%class.GrEllipseEffect*, %class.GrEllipseEffect*)* @_ZN15GrEllipseEffectC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK15GrEllipseEffect17onMakeProgramImplEv(%class.GrEllipseEffect* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 64) #12
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %class.SkString**
  store %class.SkString* null, %class.SkString** %7, align 8
  store i64 1, i64* %5, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 32
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %2, i64 24
  %11 = bitcast i8* %10 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %11, align 8
  store i64 1, i64* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV19GrGLSLEllipseEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 40
  %13 = getelementptr inbounds i8, i8* %2, i64 56
  %14 = bitcast i8* %13 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #11
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %2, i64 60
  %16 = bitcast i8* %15 to i32*
  store i32 -1, i32* %16, align 4
  %17 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15GrEllipseEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrEllipseEffect* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %7 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %7, i64 2
  %9 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %8, align 8
  tail call void %9(%class.GrProcessorKeyBuilder* %2, i32 2, i32 %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #11
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK15GrEllipseEffect9onIsEqualERK19GrFragmentProcessor(%class.GrEllipseEffect* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 5
  %6 = bitcast [4 x i8]* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %4, %7
  br i1 %8, label %9, label %38

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1
  %11 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 2, i32 0
  %12 = load float, float* %11, align 4
  %13 = bitcast %class.GrFragmentProcessor* %10 to float*
  %14 = load float, float* %13, align 4
  %15 = fcmp une float %12, %14
  br i1 %15, label %38, label %16

16:                                               ; preds = %9
  %17 = bitcast %class.GrFragmentProcessor* %10 to %struct.SkPoint*
  %18 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 2, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %17, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = fcmp une float %19, %21
  br i1 %22, label %38, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 0, i32 1
  %25 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 3, i32 0
  %26 = load float, float* %25, align 4
  %27 = bitcast i32* %24 to float*
  %28 = load float, float* %27, align 4
  %29 = fcmp une float %26, %28
  br i1 %29, label %37, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 3, i32 1
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds i32, i32* %24, i64 1
  %34 = bitcast i32* %33 to float*
  %35 = load float, float* %34, align 4
  %36 = fcmp une float %32, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %23, %30
  br label %38

38:                                               ; preds = %9, %37, %30, %16, %2
  %39 = phi i1 [ false, %2 ], [ false, %16 ], [ false, %37 ], [ true, %30 ], [ false, %9 ]
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrEllipseEffectC2ERKS_(%class.GrEllipseEffect*, %class.GrEllipseEffect* dereferenceable(80)) unnamed_addr #2 align 2 {
  %3 = bitcast %class.GrEllipseEffect* %0 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrEllipseEffect* %1 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 0, i32 0, i32 1
  store i32 52, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 0, i32 1, i32 1
  %12 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %14 = bitcast %class.SkTArray.3* %11 to i8**
  store i8* %12, i8** %14, align 8
  store i64 8589934592, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %15, align 8
  %16 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 0, i32 3
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV15GrEllipseEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %19 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 1
  %20 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 2
  %23 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %1, i64 0, i32 2
  %24 = bitcast %struct.SkPoint* %23 to i64*
  %25 = bitcast %struct.SkPoint* %22 to i64*
  %26 = load i64, i64* %24, align 8
  store i64 %26, i64* %25, align 8
  %27 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 3
  %28 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %1, i64 0, i32 3
  %29 = bitcast %struct.SkPoint* %28 to i64*
  %30 = bitcast %struct.SkPoint* %27 to i64*
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK15GrEllipseEffect5cloneEv(%class.GrEllipseEffect*) unnamed_addr #2 align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 80) #11
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrEllipseEffect* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 52, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV15GrEllipseEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 60
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %26, align 4
  %29 = getelementptr inbounds i8, i8* %2, i64 64
  %30 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 2
  %31 = bitcast %struct.SkPoint* %30 to i64*
  %32 = bitcast i8* %29 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds i8, i8* %2, i64 72
  %35 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 3
  %36 = bitcast %struct.SkPoint* %35 to i64*
  %37 = bitcast i8* %34 to i64*
  %38 = load i64, i64* %36, align 8
  store i64 %38, i64* %37, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #11
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.4"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #11
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #11
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrEllipseEffectD0Ev(%class.GrEllipseEffect*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.3, %class.SkTArray.3* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrFragmentProcessor* %18 to void (%class.GrFragmentProcessor*)***
  %22 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrFragmentProcessor* nonnull %18) #11
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.3* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #11
  br label %34

34:                                               ; preds = %10, %31
  %35 = bitcast %class.GrEllipseEffect* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %35) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK15GrEllipseEffect4nameEv(%class.GrEllipseEffect*) unnamed_addr #2 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #2 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLEllipseEffectD0Ev(%class.GrGLSLEllipseEffect*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %2) #11
  %3 = bitcast %class.GrGLSLEllipseEffect* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLEllipseEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%class.GrGLSLEllipseEffect*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %class.SkString, align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 0
  %7 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %6, align 8
  %8 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %9 = bitcast %class.GrFragmentProcessor** %8 to %class.GrEllipseEffect**
  %10 = load %class.GrEllipseEffect*, %class.GrEllipseEffect** %9, align 8
  %11 = getelementptr inbounds %class.GrEllipseEffect, %class.GrEllipseEffect* %10, i64 0, i32 1
  %12 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 2
  %13 = bitcast %struct.SkPoint* %12 to <2 x float>*
  store <2 x float> <float -1.000000e+00, float -1.000000e+00>, <2 x float>* %13, align 8
  %14 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 1
  %15 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %16 = bitcast %class.GrEllipseEffect* %10 to %class.GrFragmentProcessor*
  %17 = bitcast %class.GrGLSLUniformHandler* %15 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %18 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %17, align 8
  %19 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %18, i64 13
  %20 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %19, align 8
  %21 = tail call i32 %20(%class.GrGLSLUniformHandler* %15, %class.GrFragmentProcessor* %16, i32 16, i32 24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #11
  %22 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 3, i32 0
  store i32 %21, i32* %22, align 8
  %23 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 2
  %24 = load %class.GrShaderCaps*, %class.GrShaderCaps** %23, align 8
  %25 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %24, i64 0, i32 2
  %26 = bitcast i56* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 131072
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %39

30:                                               ; preds = %2
  %31 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %32 = bitcast %class.GrGLSLUniformHandler* %31 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %33 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %32, align 8
  %34 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %33, i64 13
  %35 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %34, align 8
  %36 = tail call i32 %35(%class.GrGLSLUniformHandler* %31, %class.GrFragmentProcessor* %16, i32 16, i32 22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #11
  %37 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 4, i32 0
  store i32 %36, i32* %37, align 4
  %38 = load i32, i32* %22, align 8
  br label %39

39:                                               ; preds = %2, %30
  %40 = phi i32 [ %21, %2 ], [ %38, %30 ]
  %41 = bitcast %class.GrGLSLFPFragmentBuilder* %7 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr i8, i8* %42, i64 -24
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %class.GrGLSLFPFragmentBuilder* %7 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 %45
  %48 = bitcast i8* %47 to %class.GrGLSLShaderBuilder*
  %49 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 2, i32 0
  %50 = load float, float* %49, align 8
  %51 = fpext float %50 to double
  %52 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 2, i32 1
  %53 = load float, float* %52, align 4
  %54 = fpext float %53 to double
  %55 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %56 = bitcast %class.GrGLSLUniformHandler* %55 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %57 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %56, align 8
  %58 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %57, i64 3
  %59 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %58, align 8
  %60 = tail call i8* %59(%class.GrGLSLUniformHandler* %55, i32 %40) #11
  %61 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 4, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %71, label %64

64:                                               ; preds = %39
  %65 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %66 = bitcast %class.GrGLSLUniformHandler* %65 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %67 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %66, align 8
  %68 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %67, i64 3
  %69 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %68, align 8
  %70 = tail call i8* %69(%class.GrGLSLUniformHandler* %65, i32 %62) #11
  br label %71

71:                                               ; preds = %39, %64
  %72 = phi i8* [ %70, %64 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), %39 ]
  %73 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %74 = load i32, i32* %22, align 8
  %75 = bitcast %class.GrGLSLUniformHandler* %73 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %76 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %75, align 8
  %77 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %76, i64 3
  %78 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %77, align 8
  %79 = tail call i8* %78(%class.GrGLSLUniformHandler* %73, i32 %74) #11
  %80 = load i32, i32* %61, align 4
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %89, label %82

82:                                               ; preds = %71
  %83 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %84 = bitcast %class.GrGLSLUniformHandler* %83 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %85 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %84, align 8
  %86 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %85, i64 3
  %87 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %86, align 8
  %88 = tail call i8* %87(%class.GrGLSLUniformHandler* %83, i32 %80) #11
  br label %89

89:                                               ; preds = %71, %82
  %90 = phi i8* [ %88, %82 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), %71 ]
  %91 = load i32, i32* %11, align 4
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %48, i8* getelementptr inbounds ([887 x i8], [887 x i8]* @.str.6, i64 0, i64 0), double %51, double %54, i8* %60, i8* %72, i8* %79, i8* %90, i32 %91)
  %92 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  %93 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %93, align 8
  %94 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 0
  %95 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  store i8 0, i8* %96, align 1
  %97 = bitcast %"class.SkSL::String"* %5 to i8*
  store i8 0, i8* %97, align 8
  %98 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %98, i8* nonnull align 8 %97, i64 24, i1 false) #11, !noalias !2
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %4, %class.GrGLSLFragmentProcessor* %94, i32 0, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %3) #11
  %99 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1, !noalias !2
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %89
  %104 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8, !noalias !2
  call void @_ZdlPv(i8* %105) #12
  br label %106

106:                                              ; preds = %89, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98)
  %107 = load i8*, i8** %41, align 8
  %108 = getelementptr i8, i8* %107, i64 -24
  %109 = bitcast i8* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %93, align 8
  %112 = getelementptr inbounds i8, i8* %46, i64 %110
  %113 = bitcast i8* %112 to %class.GrGLSLShaderBuilder*
  %114 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %111, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %113, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i8* %114)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLEllipseEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLEllipseEffect*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %5 = bitcast %class.GrFragmentProcessor* %4 to <4 x i32>*
  %6 = load <4 x i32>, <4 x i32>* %5, align 8
  %7 = bitcast <4 x i32> %6 to <4 x float>
  %8 = extractelement <4 x float> %7, i32 2
  %9 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 2, i32 0
  %10 = load float, float* %9, align 4
  %11 = fcmp une float %10, %8
  br i1 %11, label %30, label %12

12:                                               ; preds = %3
  %13 = bitcast <4 x i32> %6 to <4 x float>
  %14 = extractelement <4 x float> %13, i32 3
  %15 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 2, i32 1
  %16 = load float, float* %15, align 4
  %17 = fcmp une float %16, %14
  br i1 %17, label %30, label %18

18:                                               ; preds = %12
  %19 = bitcast <4 x i32> %6 to <4 x float>
  %20 = extractelement <4 x float> %19, i32 0
  %21 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 1, i32 0
  %22 = load float, float* %21, align 4
  %23 = fcmp une float %22, %20
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = bitcast <4 x i32> %6 to <4 x float>
  %26 = extractelement <4 x float> %25, i32 1
  %27 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 1, i32 1
  %28 = load float, float* %27, align 4
  %29 = fcmp une float %28, %26
  br i1 %29, label %30, label %78

30:                                               ; preds = %18, %3, %24, %12
  %31 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 4, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, -1
  %34 = bitcast <4 x i32> %6 to <4 x float>
  br i1 %33, label %58, label %35

35:                                               ; preds = %30
  %36 = extractelement <4 x float> %34, i32 3
  %37 = fcmp ogt float %8, %36
  br i1 %37, label %38, label %48

38:                                               ; preds = %35
  %39 = fmul float %8, %8
  %40 = fmul float %36, %36
  %41 = fdiv float %39, %40
  %42 = fdiv float 1.000000e+00, %8
  %43 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float)***
  %44 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float)*** %43, align 8
  %45 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %44, i64 8
  %46 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %45, align 8
  tail call void %46(%class.GrGLSLProgramDataManager* %1, i32 %32, float %8, float %42) #11
  %47 = insertelement <2 x float> <float undef, float 1.000000e+00>, float %41, i32 0
  br label %62

48:                                               ; preds = %35
  %49 = fmul float %36, %36
  %50 = fmul float %8, %8
  %51 = fdiv float %49, %50
  %52 = fdiv float 1.000000e+00, %36
  %53 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float)***
  %54 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float)*** %53, align 8
  %55 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %54, i64 8
  %56 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %55, align 8
  tail call void %56(%class.GrGLSLProgramDataManager* %1, i32 %32, float %36, float %52) #11
  %57 = insertelement <2 x float> <float 1.000000e+00, float undef>, float %51, i32 1
  br label %62

58:                                               ; preds = %30
  %59 = shufflevector <4 x float> %34, <4 x float> %7, <2 x i32> <i32 3, i32 6>
  %60 = fmul <2 x float> %59, %59
  %61 = fdiv <2 x float> <float 1.000000e+00, float 1.000000e+00>, %60
  br label %62

62:                                               ; preds = %38, %48, %58
  %63 = phi <2 x float> [ %47, %38 ], [ %57, %48 ], [ %61, %58 ]
  %64 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 3, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = bitcast <4 x i32> %6 to <4 x float>
  %67 = extractelement <4 x float> %66, i32 0
  %68 = bitcast <4 x i32> %6 to <4 x float>
  %69 = extractelement <4 x float> %68, i32 1
  %70 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)***
  %71 = load void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*** %70, align 8
  %72 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)** %71, i64 16
  %73 = load void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)** %72, align 8
  %74 = extractelement <2 x float> %63, i32 0
  %75 = extractelement <2 x float> %63, i32 1
  tail call void %73(%class.GrGLSLProgramDataManager* %1, i32 %65, float %67, float %69, float %75, float %74) #11
  %76 = getelementptr inbounds %class.GrGLSLEllipseEffect, %class.GrGLSLEllipseEffect* %0, i64 0, i32 1
  %77 = bitcast %struct.SkPoint* %76 to <4 x i32>*
  store <4 x i32> %6, <4 x i32>* %77, align 8
  br label %78

78:                                               ; preds = %62, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #11
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.1* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #11
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #11
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #11
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #2 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #11
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #11

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #11

declare void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* sret, %class.GrGLSLFragmentProcessor*, i32, i8*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56), %"class.SkSL::String"*) local_unnamed_addr #4

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!4 = distinct !{!4, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
