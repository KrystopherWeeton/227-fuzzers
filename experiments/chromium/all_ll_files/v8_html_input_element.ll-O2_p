; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_html_input_element.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_html_input_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::MemorySpan" = type { %"class.v8::CFunction"*, i64 }
%"class.v8::CFunction" = type { i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::CFunctionInfo" = type { %"class.v8::CTypeInfo", i32, %"class.v8::CTypeInfo"* }
%"class.v8::CTypeInfo" = type { i8, i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.blink::QualifiedName" = type { %class.scoped_refptr.330 }
%class.scoped_refptr.330 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.331", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.331" = type { %"class.base::RefCounted.332" }
%"class.base::RefCounted.332" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.184" }
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i32 }
%"class.blink::CEReactionsScope" = type <{ %"class.blink::CEReactionsScope"*, i8, [7 x i8] }>
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.182" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.189" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.189" = type { %"class.v8::TracedReference.190" }
%"class.v8::TracedReference.190" = type { %"class.v8::BasicTracedReference.191" }
%"class.v8::BasicTracedReference.191" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.210", %"class.WTF::HashMap.210", %"class.WTF::HashMap.215", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.267", %"class.blink::Persistent.278", i8, i8, i8, %"class.WTF::Vector.280", %"class.std::__1::unique_ptr.291", %"class.blink::Persistent.297", %"class.blink::Persistent.301", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.192", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.204", i32, i32 }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.210" = type { %"class.WTF::HashTable.211" }
%"class.WTF::HashTable.211" = type <{ %"struct.WTF::KeyValuePair.214"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.214" = type opaque
%"class.WTF::HashMap.215" = type { %"class.WTF::HashTable.216" }
%"class.WTF::HashTable.216" = type <{ %"struct.WTF::KeyValuePair.219"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.219" = type opaque
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.228", %class.scoped_refptr.183 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.223", i8* }
%"class.WTF::HashMap.223" = type { %"class.WTF::HashTable.224" }
%"class.WTF::HashTable.224" = type <{ %"struct.WTF::KeyValuePair.227"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.227" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.228" = type { %"class.v8::PersistentValueMapBase.229" }
%"class.v8::PersistentValueMapBase.229" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.230", i8* }
%"class.WTF::HashMap.230" = type { %"class.WTF::HashTable.231" }
%"class.WTF::HashTable.231" = type <{ %"struct.WTF::KeyValuePair.234"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.234" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.235", %"class.WTF::String", %"class.std::__1::unique_ptr.237" }
%"class.WTF::RefCounted.235" = type { %"class.base::RefCounted.236" }
%"class.base::RefCounted.236" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.251", %"class.WTF::Vector.257", i8, i32 }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.WTF::Vector.243"* }
%"class.WTF::Vector.243" = type { %"class.WTF::VectorBuffer.244" }
%"class.WTF::VectorBuffer.244" = type { %"class.WTF::VectorBufferBase.245" }
%"class.WTF::VectorBufferBase.245" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.257" = type { %"class.WTF::VectorBuffer.258" }
%"class.WTF::VectorBuffer.258" = type { %"class.WTF::VectorBufferBase.245", [32 x i8] }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent", %"class.WTF::HashMap.270" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.270" = type { %"class.WTF::HashTable.271" }
%"class.WTF::HashTable.271" = type <{ %"struct.WTF::KeyValuePair.274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.274" = type opaque
%"class.blink::Persistent.278" = type { %"class.blink::PersistentBase.279" }
%"class.blink::PersistentBase.279" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent.316", %class.scoped_refptr.319, %"class.blink::Member.320", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent.316" = type { %"class.v8::Persistent.317" }
%"class.v8::Persistent.317" = type { %"class.v8::PersistentBase.318" }
%"class.v8::PersistentBase.318" = type { %"class.v8::Context"* }
%class.scoped_refptr.319 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.278" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.280" = type { %"class.WTF::VectorBuffer.281" }
%"class.WTF::VectorBuffer.281" = type { %"class.WTF::VectorBufferBase.282" }
%"class.WTF::VectorBufferBase.282" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.283 }
%class.scoped_refptr.283 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.284" }
%"struct.std::__1::atomic.284" = type { %"struct.std::__1::__atomic_base.285" }
%"struct.std::__1::__atomic_base.285" = type { %"struct.std::__1::__atomic_base.286" }
%"struct.std::__1::__atomic_base.286" = type { %"struct.std::__1::__cxx_atomic_impl.287" }
%"struct.std::__1::__cxx_atomic_impl.287" = type { %"struct.std::__1::__cxx_atomic_base_impl.288" }
%"struct.std::__1::__cxx_atomic_base_impl.288" = type { i32 }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.297" = type { %"class.blink::PersistentBase.298" }
%"class.blink::PersistentBase.298" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.301" = type { %"class.blink::PersistentBase.302" }
%"class.blink::PersistentBase.302" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.307" }
%"class.WTF::Vector.307" = type { %"class.WTF::VectorBuffer.308" }
%"class.WTF::VectorBuffer.308" = type { %"class.WTF::VectorBufferBase.309" }
%"class.WTF::VectorBufferBase.309" = type { %"struct.std::__1::pair.310"*, i32, i32 }
%"struct.std::__1::pair.310" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.311" }
%"class.blink::MemberBase.311" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.337", %"class.blink::Member.339", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.337" = type { %"class.WTF::SingleThreadedBitField.338" }
%"class.WTF::SingleThreadedBitField.338" = type { i32 }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.341 }
%class.scoped_refptr.341 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.342", %"class.WTF::AtomicString", %"class.WTF::Vector.344" }
%"class.WTF::RefCounted.342" = type { %"class.base::RefCounted.343" }
%"class.base::RefCounted.343" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.344" = type { %"class.WTF::VectorBuffer.345" }
%"class.WTF::VectorBuffer.345" = type { %"class.WTF::VectorBufferBase.346", [32 x i8] }
%"class.WTF::VectorBufferBase.346" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.339", %"class.WTF::Vector.779" }
%"class.WTF::Vector.779" = type { %"class.WTF::VectorBuffer.780" }
%"class.WTF::VectorBuffer.780" = type { %"class.WTF::VectorBufferBase.781", [64 x i8] }
%"class.WTF::VectorBufferBase.781" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::HTMLFormControlElementWithState" = type { %"class.blink::HTMLFormControlElement.base", i8, [2 x i8] }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.333" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.322", %"class.blink::Member.322" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.322", %"class.blink::Member.324", %"class.blink::Member.322", %"class.blink::Member.322", %"class.blink::Member.326" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.388", %"class.blink::Member.390", %"class.blink::Member.324", %"class.blink::Member.392", %"class.blink::Member.392", %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::Member.420", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.422", %"class.blink::HeapVector.424" }
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.280", %"class.WTF::Vector.280", i8, i32, %"class.blink::Member.440", %"class.blink::Member.442", %"class.blink::Member.444", %"class.blink::Member.446", %"class.blink::Member.448", %"class.blink::Member.450", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.458", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.464", %"class.blink::Member.466", %"class.blink::Member.430", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.469", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.409", %"class.blink::Member.407", %"class.blink::Member.485", %"class.blink::Member.407", %"class.blink::Member.407", %"class.blink::Member.407", %"class.blink::UserActionElementSet", %"class.blink::Member.494", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.501", i16, i8, %"class.blink::Member.508", %"class.blink::Member.510", %"class.blink::Member.512", %"class.blink::Member.514", %"class.blink::TextLinkColors", %"class.blink::Member.516", i8, [7 x i8], %"class.blink::HeapHashMap.518", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.407", %"class.WTF::Vector.525", %"class.blink::Member.530", %"class.blink::Member.532", i8, %"class.blink::Member.407", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.534", %"class.blink::HeapVector.536", %"class.std::__1::unique_ptr.544", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.550", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.563", %"class.WTF::Vector.565", i8, i8, %"class.std::__1::unique_ptr.570", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.409", %"class.blink::HeapVector.576", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.584", i8, i32, %"class.blink::Member.586", %"class.blink::Member.588", %"class.blink::Member.590", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.592", %"class.WTF::HashMap.594", %"class.blink::Member.599", %"class.blink::Member.601", %"class.blink::Member.603", %"class.blink::Member.605", %"class.blink::Member.390", %"class.blink::Member.390", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.607", i8, i32, %"class.blink::Member.614", %"class.blink::Member.616", i32, %"class.blink::Member.618", %"class.blink::Member.620", %"class.blink::Member.622", %"class.std::__1::unique_ptr.624", i64, %"class.std::__1::unique_ptr.630", i32, i32, %"class.blink::Member.636", %"class.blink::Member.638", %"class.blink::Member.640", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.642", %"class.WTF::Vector.644", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.649", %"class.blink::Member.656", %"class.std::__1::unique_ptr.658", %"class.blink::Member.664", i8, i8, %"class.WTF::String", %"class.blink::Member.666", i8, [7 x i8], %"class.blink::HeapHashMap.668", %"class.blink::HeapObserverSet", %"class.blink::Member.682", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.684", i32, i8, i8, %"class.blink::WeakMember.686", %"class.blink::Member.687" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.433" }
%"class.blink::HeapHashMap.433" = type { %"class.WTF::HashMap.436" }
%"class.WTF::HashMap.436" = type { %"class.WTF::HashTable.437" }
%"class.WTF::HashTable.437" = type <{ %"struct.WTF::KeyValuePair.439"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.439" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.700", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.748", i32, i8, [3 x i8], %"class.blink::HeapVector.750", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.758", %"class.blink::Member.760", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.769", %"class.blink::Member.775", %"class.blink::Member.777", i8, [7 x i8] }>
%"class.blink::Supplementable.700" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.701" }
%"class.blink::HeapHashMap.701" = type { %"class.WTF::HashMap.704" }
%"class.WTF::HashMap.704" = type { %"class.WTF::HashTable.705" }
%"class.WTF::HashTable.705" = type <{ %"struct.WTF::KeyValuePair.707"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.707" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.716" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.708" }
%"class.blink::HeapObserverSet.708" = type { i32, [4 x i8], %"class.blink::HeapHashSet.709" }
%"class.blink::HeapHashSet.709" = type { %"class.WTF::HashSet.712" }
%"class.WTF::HashSet.712" = type { %"class.WTF::HashTable.713" }
%"class.WTF::HashTable.713" = type <{ %"class.blink::WeakMember.715"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.715" = type opaque
%"class.blink::Supplementable.716" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.717" }
%"class.blink::HeapHashMap.717" = type { %"class.WTF::HashMap.720" }
%"class.WTF::HashMap.720" = type { %"class.WTF::HashTable.721" }
%"class.WTF::HashTable.721" = type <{ %"struct.WTF::KeyValuePair.723"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.723" = type { i8*, %"class.blink::Member.724" }
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.726" }
%"class.blink::Member.726" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.728, %"class.std::__1::unique_ptr.732", %"class.std::__1::unique_ptr.732", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.738", %"class.blink::Member.442", i32, [4 x i8], %"class.WTF::HashSet.744", i32, i32 }
%class.scoped_refptr.728 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.729", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.731 }
%"class.WTF::RefCounted.729" = type { %"class.base::RefCounted.730" }
%"class.base::RefCounted.730" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.731 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.744" = type { %"class.WTF::HashTable.745" }
%"class.WTF::HashTable.745" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.750" = type { %"class.WTF::Vector.753" }
%"class.WTF::Vector.753" = type { %"class.WTF::VectorBuffer.754" }
%"class.WTF::VectorBuffer.754" = type { %"class.WTF::VectorBufferBase.755" }
%"class.WTF::VectorBufferBase.755" = type { %"class.blink::Member.756"*, i32, i32 }
%"class.blink::Member.756" = type opaque
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.762", i32, i32 }
%"class.blink::HeapHashMap.762" = type { %"class.WTF::HashMap.765" }
%"class.WTF::HashMap.765" = type { %"class.WTF::HashTable.766" }
%"class.WTF::HashTable.766" = type <{ %"struct.WTF::KeyValuePair.768"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.768" = type opaque
%"class.std::__1::unique_ptr.769" = type { %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.777" = type { %"class.blink::MemberBase.778" }
%"class.blink::MemberBase.778" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.452" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.blink::KURL"* }
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.468 }
%class.scoped_refptr.468 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.469" = type { %"class.WTF::VectorBuffer.470" }
%"class.WTF::VectorBuffer.470" = type { %"class.WTF::VectorBufferBase.471" }
%"class.WTF::VectorBufferBase.471" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.472 }
%class.scoped_refptr.472 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.487" }
%"class.blink::HeapHashMap.487" = type { %"class.WTF::HashMap.490" }
%"class.WTF::HashMap.490" = type { %"class.WTF::HashTable.491" }
%"class.WTF::HashTable.491" = type <{ %"struct.WTF::KeyValuePair.493"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.493" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ %"class.blink::WeakMember.500"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.500" = type opaque
%"class.blink::HeapHashSet.501" = type { %"class.WTF::HashSet.504" }
%"class.WTF::HashSet.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"class.blink::WeakMember.507"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.507" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.518" = type { %"class.WTF::HashMap.521" }
%"class.WTF::HashMap.521" = type { %"class.WTF::HashTable.522" }
%"class.WTF::HashTable.522" = type <{ %"struct.WTF::KeyValuePair.524"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.524" = type opaque
%"class.WTF::Vector.525" = type { %"class.WTF::VectorBuffer.526" }
%"class.WTF::VectorBuffer.526" = type { %"class.WTF::VectorBufferBase.527" }
%"class.WTF::VectorBufferBase.527" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.536" = type { %"class.WTF::Vector.539" }
%"class.WTF::Vector.539" = type { %"class.WTF::VectorBuffer.540" }
%"class.WTF::VectorBuffer.540" = type { %"class.WTF::VectorBufferBase.541" }
%"class.WTF::VectorBufferBase.541" = type { %"class.blink::Member.542"*, i32, i32 }
%"class.blink::Member.542" = type opaque
%"class.std::__1::unique_ptr.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.550" = type { %"class.WTF::HashSet.553" }
%"class.WTF::HashSet.553" = type { %"class.WTF::HashTable.554" }
%"class.WTF::HashTable.554" = type <{ %"class.blink::WeakMember.556"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.556" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.557", i32, [4 x i8] }>
%"class.WTF::Vector.557" = type { %"class.WTF::VectorBuffer.558" }
%"class.WTF::VectorBuffer.558" = type { %"class.WTF::VectorBufferBase.559" }
%"class.WTF::VectorBufferBase.559" = type { %"struct.std::__1::pair.560"*, i32, i32 }
%"struct.std::__1::pair.560" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.565" = type { %"class.WTF::VectorBuffer.566" }
%"class.WTF::VectorBuffer.566" = type { %"class.WTF::VectorBufferBase.567" }
%"class.WTF::VectorBufferBase.567" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.409" = type { %"class.WTF::Vector.412" }
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::Member.407"*, i32, i32 }
%"class.blink::HeapVector.576" = type { %"class.WTF::Vector.579" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::Member.582"*, i32, i32 }
%"class.blink::Member.582" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.390" }
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.592" = type { %"class.blink::MemberBase.593" }
%"class.blink::MemberBase.593" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.594" = type { %"class.WTF::HashTable.595" }
%"class.WTF::HashTable.595" = type <{ %"struct.WTF::KeyValuePair.598"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.598" = type opaque
%"class.blink::Member.599" = type { %"class.blink::MemberBase.600" }
%"class.blink::MemberBase.600" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.484", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.475, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.475 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.476" }>
%"class.base::RefCountedThreadSafe.476" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.477 }
%class.scoped_refptr.477 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.478", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.478" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.479" }
%"struct.std::__1::atomic.479" = type { %"struct.std::__1::__atomic_base.480" }
%"struct.std::__1::__atomic_base.480" = type { %"struct.std::__1::__atomic_base.481" }
%"struct.std::__1::__atomic_base.481" = type { %"struct.std::__1::__cxx_atomic_impl.482" }
%"struct.std::__1::__cxx_atomic_impl.482" = type { %"struct.std::__1::__cxx_atomic_base_impl.483" }
%"struct.std::__1::__cxx_atomic_base_impl.483" = type { i8 }
%"class.blink::WeakMember.484" = type { %"class.blink::MemberBase.391" }
%"class.blink::HeapHashSet.607" = type { %"class.WTF::HashSet.610" }
%"class.WTF::HashSet.610" = type { %"class.WTF::HashTable.611" }
%"class.WTF::HashTable.611" = type <{ %"class.blink::Member.613"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.613" = type opaque
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.644" = type { %"class.WTF::VectorBuffer.645" }
%"class.WTF::VectorBuffer.645" = type { %"class.WTF::VectorBufferBase.646" }
%"class.WTF::VectorBufferBase.646" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.649" = type { %"class.WTF::HashMap.652" }
%"class.WTF::HashMap.652" = type { %"class.WTF::HashTable.653" }
%"class.WTF::HashTable.653" = type <{ %"struct.WTF::KeyValuePair.655"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.655" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.658" = type { %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.664" = type { %"class.blink::MemberBase.665" }
%"class.blink::MemberBase.665" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.668" = type { %"class.WTF::HashMap.671" }
%"class.WTF::HashMap.671" = type { %"class.WTF::HashTable.672" }
%"class.WTF::HashTable.672" = type <{ %"struct.WTF::KeyValuePair.674"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.674" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.675" }
%"class.blink::HeapHashSet.675" = type { %"class.WTF::HashSet.678" }
%"class.WTF::HashSet.678" = type { %"class.WTF::HashTable.679" }
%"class.WTF::HashTable.679" = type <{ %"class.blink::WeakMember.681"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.681" = type opaque
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.390", %"class.blink::HeapHashSet.691", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.698", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.691" = type { %"class.WTF::HashSet.694" }
%"class.WTF::HashSet.694" = type { %"class.WTF::HashTable.695" }
%"class.WTF::HashTable.695" = type <{ %"class.blink::Member.697"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.697" = type opaque
%"class.blink::HeapTaskRunnerTimer.698" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.699", { i64, i64 } }
%"class.blink::WeakMember.699" = type { %"class.blink::MemberBase.685" }
%"class.blink::WeakMember.686" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::Node"* }
%"class.blink::Member.687" = type { %"class.blink::MemberBase.688" }
%"class.blink::MemberBase.688" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.396" }
%"class.blink::HeapHashMap.396" = type { %"class.WTF::HashMap.399" }
%"class.WTF::HashMap.399" = type { %"class.WTF::HashTable.400" }
%"class.WTF::HashTable.400" = type <{ %"struct.WTF::KeyValuePair.402"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.402" = type { %"class.WTF::AtomicString", %"class.blink::Member.403" }
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.407", i32, %"class.blink::HeapVector.409" }
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.356" }
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::HeapHashMap.358"* }
%"class.blink::HeapHashMap.358" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.424" = type { %"class.WTF::Vector.427" }
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"class.blink::Member.430"*, i32, i32 }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::ElementData"* }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.349", %"class.blink::Member.351", %"class.blink::Member.376", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.353", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector.359", %"class.blink::HeapVector.368", i32, i8, i8, i8, i8 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::HeapHashMap.355"* }
%"class.blink::HeapHashMap.355" = type opaque
%"class.blink::HeapVector.359" = type { %"class.WTF::Vector.362" }
%"class.WTF::Vector.362" = type { %"class.WTF::VectorBuffer.363" }
%"class.WTF::VectorBuffer.363" = type { %"class.WTF::VectorBufferBase.364" }
%"class.WTF::VectorBufferBase.364" = type { %"class.blink::Member.365"*, i32, i32 }
%"class.blink::Member.365" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::ListedElement"* }
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.349", %"class.blink::Member.351", %"class.blink::Member.376", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::HeapVector.368" = type { %"class.WTF::Vector.371" }
%"class.WTF::Vector.371" = type { %"class.WTF::VectorBuffer.372" }
%"class.WTF::VectorBuffer.372" = type { %"class.WTF::VectorBufferBase.373" }
%"class.WTF::VectorBufferBase.373" = type { %"class.blink::Member.374"*, i32, i32 }
%"class.blink::Member.374" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.365" }
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.183 }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.785", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.785" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.786" }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { i8* }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.380", %"class.blink::Member.382", %"class.blink::Member.384", %"class.blink::Member.386", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.378", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type opaque
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type opaque
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.v8::Boolean" = type { i8 }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::FileList" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector.800" }
%"class.blink::HeapVector.800" = type { %"class.WTF::Vector.803" }
%"class.WTF::Vector.803" = type { %"class.WTF::VectorBuffer.804" }
%"class.WTF::VectorBuffer.804" = type { %"class.WTF::VectorBufferBase.805" }
%"class.WTF::VectorBufferBase.805" = type { %"class.blink::Member.806"*, i32, i32 }
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::File"* }
%"class.blink::File" = type { %"class.blink::Blob", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.absl::optional.810", %"class.absl::optional.815", %"class.WTF::String" }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.808 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.808 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.809" }
%"class.base::RefCountedThreadSafe.809" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.absl::optional.810" = type { %"class.absl::optional_internal::optional_data.811" }
%"class.absl::optional_internal::optional_data.811" = type { %"class.absl::optional_internal::optional_data_base.812" }
%"class.absl::optional_internal::optional_data_base.812" = type { %"class.absl::optional_internal::optional_data_dtor_base.813" }
%"class.absl::optional_internal::optional_data_dtor_base.813" = type { i8, %union.anon.814 }
%union.anon.814 = type { i64 }
%"class.absl::optional.815" = type { %"class.absl::optional_internal::optional_data.816" }
%"class.absl::optional_internal::optional_data.816" = type { %"class.absl::optional_internal::optional_data_base.817" }
%"class.absl::optional_internal::optional_data_base.817" = type { %"class.absl::optional_internal::optional_data_dtor_base.818" }
%"class.absl::optional_internal::optional_data_dtor_base.818" = type { i8, %union.anon.819 }
%union.anon.819 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.820" }
%"class.base::time_internal::TimeBase.820" = type { i64 }
%"class.v8::Integer" = type { i8 }
%"class.v8::Uint32" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.189", %class.scoped_refptr.472 }
%"class.v8::Number" = type { i8 }
%"class.blink::LabelsNodeList" = type { %"class.blink::LiveNodeList" }
%"class.blink::LiveNodeList" = type { %"class.blink::NodeList", %"class.blink::LiveNodeListBase.base", %"class.blink::CollectionItemsCache" }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::LiveNodeListBase.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.388", i16 }>
%"class.blink::CollectionItemsCache" = type { %"class.blink::CollectionIndexCache", i8, %"class.blink::HeapVector.409" }
%"class.blink::CollectionIndexCache" = type { i32 (...)**, %"class.blink::Member.407", i32, i32 }
%"class.blink::scheduler::CooperativeSchedulingManager" = type <{ i32 (...)**, i32, i8, [3 x i8], %"class.base::TimeTicks", %"class.base::TickClock"*, i8, [7 x i8] }>
%"class.blink::HeapVector.838" = type { %"class.WTF::Vector.841" }
%"class.WTF::Vector.841" = type { %"class.WTF::VectorBuffer.842" }
%"class.WTF::VectorBuffer.842" = type { %"class.WTF::VectorBufferBase.843" }
%"class.WTF::VectorBufferBase.843" = type { %"class.blink::Member.844"*, i32, i32 }
%"class.blink::Member.844" = type { %"class.blink::MemberBase.845" }
%"class.blink::MemberBase.845" = type { %"class.blink::Entry"* }
%"class.blink::Entry" = type { %"class.blink::EntryBase" }
%"class.blink::EntryBase" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.846", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.846" = type { %"class.blink::MemberBase.847" }
%"class.blink::MemberBase.847" = type { %"class.blink::DOMFileSystemBase"* }
%"class.blink::DOMFileSystemBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.442", %"class.WTF::String", i32, [4 x i8], %"class.blink::KURL", i8, [7 x i8] }>
%"class.blink::HeapVector.849" = type { %"class.WTF::Vector.852" }
%"class.WTF::Vector.852" = type { %"class.WTF::VectorBuffer.853" }
%"class.WTF::VectorBuffer.853" = type { %"class.WTF::VectorBufferBase.854" }
%"class.WTF::VectorBufferBase.854" = type { %"class.blink::Member.855"*, i32, i32 }
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::ScriptWrappable"* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.795 }
%union.anon.795 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::Array" = type { i8 }

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE2EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9IDLObjectEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_18IDLIntegerTypeBaseIjLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_ = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

@_ZN5blink18V8HTMLInputElement32install_interface_template_func_E = external local_unnamed_addr global void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, align 8
@_ZN5blink18V8HTMLInputElement33install_unconditional_props_func_E = external local_unnamed_addr global void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*)*, align 8
@_ZN5blink18V8HTMLInputElement39install_context_independent_props_func_E = external local_unnamed_addr global void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*)*, align 8
@_ZN5blink18V8HTMLInputElement18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@.ref.tmp = private constant %"class.v8::MemorySpan" zeroinitializer, align 8
@_ZZN5blink18V8HTMLInputElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable = internal constant [47 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element26AcceptAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element26AcceptAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element23AltAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element23AltAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element32AutocompleteAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element32AutocompleteAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element34DefaultCheckedAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element34DefaultCheckedAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element27CheckedAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element27CheckedAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element27DirNameAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element27DirNameAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element28DisabledAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element28DisabledAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element24FormAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element25FilesAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element25FilesAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element30FormActionAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element30FormActionAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element31FormEnctypeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element31FormEnctypeAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element30FormMethodAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element30FormMethodAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element34FormNoValidateAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element34FormNoValidateAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element30FormTargetAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element30FormTargetAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element26HeightAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element26HeightAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element33IndeterminateAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element33IndeterminateAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element24ListAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element23MaxAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element23MaxAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element29MaxLengthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element29MaxLengthAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element23MinAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element23MinAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element29MinLengthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element29MinLengthAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element28MultipleAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element28MultipleAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element24NameAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element24NameAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element27PatternAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element27PatternAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element31PlaceholderAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element31PlaceholderAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element28ReadOnlyAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element28ReadOnlyAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element28RequiredAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element28RequiredAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element24SizeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element24SizeAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element23SrcAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element23SrcAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element24StepAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element24StepAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element24TypeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element24TypeAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element32DefaultValueAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element32DefaultValueAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element25ValueAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element25ValueAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element31ValueAsDateAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element31ValueAsDateAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element33ValueAsNumberAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element33ValueAsNumberAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element25WidthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element25WidthAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element32WillValidateAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element28ValidityAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element37ValidationMessageAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element26LabelsAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element34SelectionStartAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element34SelectionStartAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element32SelectionEndAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element32SelectionEndAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.42, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element38SelectionDirectionAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element38SelectionDirectionAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element25AlignAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element25AlignAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element26UseMapAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element26UseMapAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element35WebkitdirectoryAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element35WebkitdirectoryAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element31IncrementalAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element31IncrementalAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str = private unnamed_addr constant [7 x i8] c"accept\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"alt\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"autocomplete\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"defaultChecked\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"checked\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"dirName\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"form\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"files\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"formAction\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"formEnctype\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"formMethod\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"formNoValidate\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"formTarget\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"indeterminate\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"maxLength\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"minLength\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"multiple\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"pattern\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"placeholder\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"readOnly\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"required\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"src\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"defaultValue\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"valueAsDate\00", align 1
@.str.34 = private unnamed_addr constant [14 x i8] c"valueAsNumber\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.36 = private unnamed_addr constant [13 x i8] c"willValidate\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"validity\00", align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"validationMessage\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"labels\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"selectionStart\00", align 1
@.str.41 = private unnamed_addr constant [13 x i8] c"selectionEnd\00", align 1
@.str.42 = private unnamed_addr constant [19 x i8] c"selectionDirection\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"align\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"useMap\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"webkitdirectory\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"incremental\00", align 1
@_ZZN5blink18V8HTMLInputElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kOperationTable = internal constant [8 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element30CheckValidityOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element31ReportValidityOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element23SelectOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.50, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element34SetCustomValidityOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element29SetRangeTextOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element34SetSelectionRangeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element25StepDownOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element23StepUpOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }], align 16
@.str.47 = private unnamed_addr constant [14 x i8] c"checkValidity\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c"reportValidity\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.50 = private unnamed_addr constant [18 x i8] c"setCustomValidity\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c"setRangeText\00", align 1
@.str.52 = private unnamed_addr constant [18 x i8] c"setSelectionRange\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"stepDown\00", align 1
@.str.54 = private unnamed_addr constant [7 x i8] c"stepUp\00", align 1
@_ZZN5blink18V8HTMLInputElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element27CaptureAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element27CaptureAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str.55 = private unnamed_addr constant [8 x i8] c"capture\00", align 1
@_ZZN5blink18V8HTMLInputElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable_0 = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_121v8_html_input_element33WebkitEntriesAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }], align 16
@.str.56 = private unnamed_addr constant [14 x i8] c"webkitEntries\00", align 1
@.str.57 = private unnamed_addr constant [17 x i8] c"HTMLInputElement\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink10html_names11kAcceptAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names8kAltAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16CEReactionsScope13top_of_stack_E = external local_unnamed_addr global %"class.blink::CEReactionsScope"*, align 8
@_ZN5blink10html_names12kCheckedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names12kDirnameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kDisabledAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.58 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.59 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.60 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink8FileList18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink10html_names19kFormnovalidateAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kFormtargetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kMaxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kMinAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kMultipleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names12kPatternAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kPlaceholderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kReadonlyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kRequiredAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kSrcAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kStepAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kValueAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.61 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@_ZN5blink10html_names10kAlignAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kUsemapAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names20kWebkitdirectoryAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kIncrementalAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.62 = private unnamed_addr constant [28 x i8] c"Overload resolution failed.\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"preserve\00", align 1
@_ZN5blink15V8SelectionMode13string_table_E.const = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0)], align 16
@_ZN5blink15V8SelectionMode13string_table_E = external constant [4 x i8*], align 16
@.str.66 = private unnamed_addr constant [14 x i8] c"SelectionMode\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase25is_media_capture_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink10html_names12kCaptureAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase23is_file_system_enabled_E = external local_unnamed_addr global i8, align 1
@.str.67 = private unnamed_addr constant [65 x i8] c"../../third_party/blink/renderer/bindings/core/v8/to_v8_traits.h\00", align 1
@.str.68 = private unnamed_addr constant [17 x i8] c"script_wrappable\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18V8HTMLInputElement4Impl4InitEv() local_unnamed_addr #0 align 2 {
  store void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink18V8HTMLInputElement4Impl24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEE, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)** @_ZN5blink18V8HTMLInputElement32install_interface_template_func_E, align 8
  store void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*)* @_ZN5blink18V8HTMLInputElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*)** @_ZN5blink18V8HTMLInputElement33install_unconditional_props_func_E, align 8
  store void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*)* @_ZN5blink18V8HTMLInputElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*)** @_ZN5blink18V8HTMLInputElement39install_context_independent_props_func_E, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8HTMLInputElement4Impl24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #1 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"class.base::span.182", align 8
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span", align 8
  %8 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %9 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %8) #9
  %10 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %8) #9
  %11 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink18V8HTMLInputElement18wrapper_type_info_E, i64 0, i32 4), align 8
  %12 = tail call %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"* %11, %"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1) #9
  %13 = bitcast %"class.v8::Template"* %12 to %"class.v8::FunctionTemplate"*
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink18V8HTMLInputElement18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %9, %"class.v8::ObjectTemplate"* %10, %"class.v8::FunctionTemplate"* %8, %"class.v8::FunctionTemplate"* %13) #9
  tail call void @_ZN2v816FunctionTemplate14SetCallHandlerEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS2_EENS_14SideEffectTypeERKNS_10MemorySpanIKNS_9CFunctionEEE(%"class.v8::FunctionTemplate"* %8, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink12_GLOBAL__N_121v8_html_input_element19ConstructorCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* null, i32 0, %"class.v8::MemorySpan"* nonnull dereferenceable(16) @.ref.tmp) #9
  tail call void @_ZN2v816FunctionTemplate9SetLengthEi(%"class.v8::FunctionTemplate"* %8, i32 0) #9
  %14 = bitcast %"class.v8::ObjectTemplate"* %9 to %"class.v8::Template"*
  %15 = bitcast %"class.v8::ObjectTemplate"* %10 to %"class.v8::Template"*
  %16 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16)
  %17 = bitcast %"class.base::span.182"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  %18 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #9
  %19 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 47, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([47 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink18V8HTMLInputElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %20, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %14, %"class.v8::Template"* %15, %"class.v8::Template"* %2, %"class.v8::Signature"* %18, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #9
  %21 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %5, i64 0, i32 0, i32 0
  store i64 8, i64* %21, align 8
  %22 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %5, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([8 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink18V8HTMLInputElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %22, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %14, %"class.v8::Template"* %15, %"class.v8::Template"* %2, %"class.v8::Signature"* %18, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  %23 = bitcast %"class.base::span"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23)
  %24 = bitcast %"class.base::span"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24)
  %25 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase25is_media_capture_enabled_E, align 1, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %3
  %28 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #9
  %29 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 1, i64* %29, align 8
  %30 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink18V8HTMLInputElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %30, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %14, %"class.v8::Template"* %15, %"class.v8::Template"* %2, %"class.v8::Signature"* %28, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #9
  br label %31

31:                                               ; preds = %27, %3
  %32 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase23is_file_system_enabled_E, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #9
  %36 = getelementptr inbounds %"class.base::span", %"class.base::span"* %7, i64 0, i32 0, i32 0
  store i64 1, i64* %36, align 8
  %37 = getelementptr inbounds %"class.base::span", %"class.base::span"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink18V8HTMLInputElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable_0 to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %37, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %14, %"class.v8::Template"* %15, %"class.v8::Template"* %2, %"class.v8::Signature"* %35, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %7) #9
  br label %38

38:                                               ; preds = %31, %34
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8HTMLInputElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) #1 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span.182", align 8
  %8 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %9 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #9
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 47, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([47 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink18V8HTMLInputElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %11, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #9
  %12 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %7, i64 0, i32 0, i32 0
  store i64 8, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([8 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink18V8HTMLInputElement4Impl30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8HTMLInputElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) #1 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span", align 8
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase25is_media_capture_enabled_E, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %12 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %11) #9
  %13 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 1, i64* %13, align 8
  %14 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink18V8HTMLInputElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %14, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %12, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #9
  br label %15

15:                                               ; preds = %5, %10
  %16 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase23is_file_system_enabled_E, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %20 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %19) #9
  %21 = getelementptr inbounds %"class.base::span", %"class.base::span"* %7, i64 0, i32 0, i32 0
  store i64 1, i64* %21, align 8
  %22 = getelementptr inbounds %"class.base::span", %"class.base::span"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink18V8HTMLInputElement4Impl35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_E15kAttributeTable_0 to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %22, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %20, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %7) #9
  br label %23

23:                                               ; preds = %15, %18
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #3

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #3

declare %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #3

declare void @_ZN2v816FunctionTemplate14SetCallHandlerEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS2_EENS_14SideEffectTypeERKNS_10MemorySpanIKNS_9CFunctionEEE(%"class.v8::FunctionTemplate"*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::Value"*, i32, %"class.v8::MemorySpan"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element19ConstructorCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = getelementptr inbounds i64, i64* %5, i64 5
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %90

13:                                               ; preds = %1
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %90

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, -2
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %30, label %90

30:                                               ; preds = %24
  %31 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 56, i1 false)
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 5, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 3
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %38 = bitcast i8** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #9
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %41 = bitcast %"class.WTF::StringImpl"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #9
  %42 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #9
  %43 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages27ConstructorCalledAsFunctionEv() #9
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %44, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %30
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #9
  br label %60

60:                                               ; preds = %30, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = icmp eq i64* %62, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %60
  %65 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %66 = bitcast %"class.v8::Isolate"* %65 to %"class.v8::internal::Isolate"*
  %67 = load i64, i64* %62, align 8
  %68 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %66, i64 %67) #9
  %69 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %65) #9
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = bitcast i64* %68 to %"class.v8::Value"*
  %72 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %65, %"class.v8::Value"* %71) #9
  br label %73

73:                                               ; preds = %70, %64, %60
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %89

89:                                               ; preds = %73, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #9
  br label %108

90:                                               ; preds = %24, %13, %1
  %91 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %92 = add i64 %91, 8
  %93 = inttoptr i64 %92 to %"class.blink::V8PerIsolateData"**
  %94 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %94, i64 0, i32 8
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %107

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %100 = load i64*, i64** %99, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 -1
  %102 = getelementptr inbounds i64, i64* %5, i64 3
  %103 = icmp eq i64* %101, null
  %104 = getelementptr inbounds i64, i64* %5, i64 2
  %105 = select i1 %103, i64* %104, i64* %101, !prof !3
  %106 = load i64, i64* %105, align 8
  store i64 %106, i64* %102, align 8
  br label %108

107:                                              ; preds = %90
  tail call void @_ZN5blink17V8HTMLConstructor15HtmlConstructorERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_15WrapperTypeInfoENS_15HTMLElementTypeE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"struct.blink::WrapperTypeInfo"* nonnull dereferenceable(48) @_ZN5blink18V8HTMLInputElement18wrapper_type_info_E, i32 29) #9
  br label %108

108:                                              ; preds = %107, %98, %89
  ret void
}

declare void @_ZN2v816FunctionTemplate9SetLengthEi(%"class.v8::FunctionTemplate"*, i32) local_unnamed_addr #3

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element26AcceptAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kAcceptAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.339"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #9
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element26AcceptAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kAcceptAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element23AltAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kAltAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.339"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #9
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element23AltAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kAltAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element32AutocompleteAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLFormControlElementWithState"*
  %25 = tail call %"class.WTF::StringImpl"* @_ZNK5blink31HTMLFormControlElementWithState23IDLExposedAutofillValueEv(%"class.blink::HTMLFormControlElementWithState"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %22
  %31 = load i64, i64* %28, align 8
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to %"class.blink::V8PerIsolateData"**
  %34 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %34, i64 0, i32 5, i32 0, i32 0, i32 0
  %36 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %35, align 8
  %37 = getelementptr inbounds i64, i64* %27, i64 3
  %38 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %36, i64 0, i32 3, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, %25
  br i1 %40, label %41, label %48

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %36, i64 0, i32 1, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = inttoptr i64 %43 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %37, align 8
  br label %55

48:                                               ; preds = %30
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %36, i64* %37, %"class.WTF::StringImpl"* nonnull %25) #9
  br label %55

49:                                               ; preds = %22
  %50 = getelementptr inbounds i64, i64* %27, i64 3
  %51 = load i64, i64* %28, align 8
  %52 = add i64 %51, 200
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %50, align 8
  br label %68

55:                                               ; preds = %41, %45, %48
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #9
  br label %68

68:                                               ; preds = %49, %64, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element32AutocompleteAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %26 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %25, i64* %26, align 8
  store i8 0, i8* %23, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 -1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i64 %30, -4294967296
  %35 = zext i32 %33 to i64
  %36 = or i64 %34, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %44 [
    i16 1057, label %40
    i16 1056, label %40
    i16 1040, label %40
  ]

40:                                               ; preds = %1, %1, %1
  %41 = add i64 %30, 19
  %42 = inttoptr i64 %41 to i8**
  %43 = load i8*, i8** %42, align 1
  br label %47

44:                                               ; preds = %1
  %45 = bitcast i64* %29 to %"class.v8::Object"*
  %46 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %45, i32 1) #9
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i8* [ %43, %40 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %47
  %53 = load i64*, i64** %6, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 160
  %57 = inttoptr i64 %56 to %"class.v8::Value"*
  br label %61

58:                                               ; preds = %47
  %59 = bitcast i64** %27 to %"class.v8::Value"**
  %60 = load %"class.v8::Value"*, %"class.v8::Value"** %59, align 8
  br label %61

61:                                               ; preds = %52, %58
  %62 = phi %"class.v8::Value"* [ %57, %52 ], [ %60, %58 ]
  %63 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %63) #9
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %62, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %64 = load i32, i32* %19, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %114

66:                                               ; preds = %61
  %67 = bitcast i8* %48 to %"class.blink::HTMLFormControlElementWithState"*
  %68 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9
  %69 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %70 = load %"class.v8::String"*, %"class.v8::String"** %69, align 8
  %71 = icmp eq %"class.v8::String"* %70, null
  br i1 %71, label %74, label %72, !prof !3

72:                                               ; preds = %66
  %73 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %70, i32 0) #9
  br label %95

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #9
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %83
  call void @llvm.trap() #9
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %72, %74, %78, %93
  %96 = phi %"class.WTF::StringImpl"* [ %73, %72 ], [ null, %74 ], [ %76, %78 ], [ %76, %93 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %96, %"class.WTF::StringImpl"** %97, align 8
  call void @_ZN5blink31HTMLFormControlElementWithState26setIDLExposedAutofillValueERKN3WTF6StringE(%"class.blink::HTMLFormControlElementWithState"* %67, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %95, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #9
  br label %114

114:                                              ; preds = %61, %113
  %115 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  store i8* null, i8** %115, align 8
  %117 = icmp eq i8* %116, null
  br i1 %117, label %119, label %118

118:                                              ; preds = %114
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %116) #9
  br label %119

119:                                              ; preds = %118, %114
  %120 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #9
  br label %136

136:                                              ; preds = %119, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %63) #9
  %137 = load i8, i8* %23, align 8, !range !2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %140, label %139

139:                                              ; preds = %136
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %140

140:                                              ; preds = %136, %139
  %141 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %142 = load i64, i64* %141, align 8
  store i64 %142, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %143 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = icmp eq i64* %144, null
  br i1 %145, label %155, label %146

146:                                              ; preds = %140
  %147 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %148 = bitcast %"class.v8::Isolate"* %147 to %"class.v8::internal::Isolate"*
  %149 = load i64, i64* %144, align 8
  %150 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %148, i64 %149) #9
  %151 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %147) #9
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = bitcast i64* %150 to %"class.v8::Value"*
  %154 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %147, %"class.v8::Value"* %153) #9
  br label %155

155:                                              ; preds = %152, %146, %140
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #9
  br label %171

171:                                              ; preds = %155, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element34DefaultCheckedAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kCheckedAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 3
  %33 = getelementptr inbounds i64, i64* %31, i64 1
  br label %94

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %42 = bitcast %"class.blink::Member.339"* %41 to %"class.blink::Attribute"**
  %43 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  br label %51

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %48 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::Attribute"*
  %49 = lshr i32 %36, 1
  %50 = and i32 %49, 268435455
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi %"class.blink::Attribute"* [ %48, %46 ], [ %43, %39 ]
  %53 = phi i32 [ %50, %46 ], [ %45, %39 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %82, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %78, %57
  %63 = phi %"class.blink::Attribute"* [ %52, %57 ], [ %79, %78 ]
  %64 = phi i32 [ 0, %57 ], [ %80, %78 ]
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %59
  br i1 %67, label %87, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, %76
  br i1 %77, label %87, label %78

78:                                               ; preds = %73, %68
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 1
  %80 = add i32 %64, 1
  %81 = icmp eq %"class.blink::Attribute"* %79, %55
  br i1 %81, label %82, label %62

82:                                               ; preds = %78, %51
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 3
  %86 = getelementptr inbounds i64, i64* %84, i64 1
  br label %94

87:                                               ; preds = %62, %73
  %88 = icmp eq i32 %64, -1
  %89 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 3
  %92 = getelementptr inbounds i64, i64* %90, i64 1
  %93 = select i1 %88, i64 192, i64 184
  br label %94

94:                                               ; preds = %87, %82, %29
  %95 = phi i64* [ %33, %29 ], [ %86, %82 ], [ %92, %87 ]
  %96 = phi i64* [ %32, %29 ], [ %85, %82 ], [ %91, %87 ]
  %97 = phi i64 [ 192, %29 ], [ 192, %82 ], [ %93, %87 ]
  %98 = load i64, i64* %95, align 8
  %99 = add i64 %98, %97
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %96, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element34DefaultCheckedAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kCheckedAttrE, align 8
  tail call void @_ZN5blink8bindings48PerformAttributeSetCEReactionsReflectTypeBooleanERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element27CheckedAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLInputElement"*
  %25 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = getelementptr inbounds i64, i64* %27, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = select i1 %25, i64 184, i64 192
  %32 = add i64 %30, %31
  %33 = inttoptr i64 %32 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element27CheckedAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLInputElement"*
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i64* %27 to %"class.v8::Isolate"**
  %29 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %22
  %34 = ptrtoint %"class.v8::Isolate"* %29 to i64
  %35 = add i64 %34, 160
  %36 = inttoptr i64 %35 to %"class.v8::Value"*
  br label %40

37:                                               ; preds = %22
  %38 = bitcast i64** %2 to %"class.v8::Value"**
  %39 = load %"class.v8::Value"*, %"class.v8::Value"** %38, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi %"class.v8::Value"* [ %36, %33 ], [ %39, %37 ]
  %42 = tail call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %41) #9
  br i1 %42, label %43, label %46, !prof !4

43:                                               ; preds = %40
  %44 = bitcast %"class.v8::Value"* %41 to %"class.v8::Boolean"*
  %45 = tail call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %44) #9
  br label %48

46:                                               ; preds = %40
  %47 = tail call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %41, %"class.v8::Isolate"* %29) #9
  br label %48

48:                                               ; preds = %43, %46
  %49 = phi i1 [ %45, %43 ], [ %47, %46 ]
  tail call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %24, i1 zeroext %49, i32 0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element27DirNameAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kDirnameAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.339"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #9
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element27DirNameAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kDirnameAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element28DisabledAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kDisabledAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 3
  %33 = getelementptr inbounds i64, i64* %31, i64 1
  br label %94

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %42 = bitcast %"class.blink::Member.339"* %41 to %"class.blink::Attribute"**
  %43 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  br label %51

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %48 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::Attribute"*
  %49 = lshr i32 %36, 1
  %50 = and i32 %49, 268435455
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi %"class.blink::Attribute"* [ %48, %46 ], [ %43, %39 ]
  %53 = phi i32 [ %50, %46 ], [ %45, %39 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %82, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %78, %57
  %63 = phi %"class.blink::Attribute"* [ %52, %57 ], [ %79, %78 ]
  %64 = phi i32 [ 0, %57 ], [ %80, %78 ]
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %59
  br i1 %67, label %87, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, %76
  br i1 %77, label %87, label %78

78:                                               ; preds = %73, %68
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 1
  %80 = add i32 %64, 1
  %81 = icmp eq %"class.blink::Attribute"* %79, %55
  br i1 %81, label %82, label %62

82:                                               ; preds = %78, %51
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 3
  %86 = getelementptr inbounds i64, i64* %84, i64 1
  br label %94

87:                                               ; preds = %62, %73
  %88 = icmp eq i32 %64, -1
  %89 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 3
  %92 = getelementptr inbounds i64, i64* %90, i64 1
  %93 = select i1 %88, i64 192, i64 184
  br label %94

94:                                               ; preds = %87, %82, %29
  %95 = phi i64* [ %33, %29 ], [ %86, %82 ], [ %92, %87 ]
  %96 = phi i64* [ %32, %29 ], [ %85, %82 ], [ %91, %87 ]
  %97 = phi i64 [ 192, %29 ], [ 192, %82 ], [ %93, %87 ]
  %98 = load i64, i64* %95, align 8
  %99 = add i64 %98, %97
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %96, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element28DisabledAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kDisabledAttrE, align 8
  tail call void @_ZN5blink8bindings48PerformAttributeSetCEReactionsReflectTypeBooleanERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element24FormAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLFormControlElement"*
  %25 = tail call %"class.blink::HTMLFormElement"* @_ZNK5blink22HTMLFormControlElement9formOwnerEv(%"class.blink::HTMLFormControlElement"* %24) #9
  %26 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::HTMLFormElement"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !3

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #9
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #9
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #9
  %49 = bitcast %"class.blink::HTMLFormElement"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #9
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element25FilesAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLInputElement"*
  %25 = tail call %"class.blink::FileList"* @_ZNK5blink16HTMLInputElement5filesEv(%"class.blink::HTMLInputElement"* %24) #9
  %26 = getelementptr inbounds %"class.blink::FileList", %"class.blink::FileList"* %25, i64 0, i32 0
  %27 = icmp eq %"class.blink::FileList"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !3

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #9
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #9
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #9
  %49 = bitcast %"class.blink::FileList"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #9
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element25FilesAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !3

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %132

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to %"class.blink::HTMLInputElement"**
  %60 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %59, align 1
  br label %73

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = bitcast i8* %63 to %"class.blink::HTMLInputElement"*
  %66 = icmp sgt i32 %64, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = load i64*, i64** %4, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 160
  %72 = inttoptr i64 %71 to %"class.v8::Value"*
  br label %77

73:                                               ; preds = %57, %61
  %74 = phi %"class.blink::HTMLInputElement"* [ %60, %57 ], [ %65, %61 ]
  %75 = bitcast i64** %44 to %"class.v8::Value"**
  %76 = load %"class.v8::Value"*, %"class.v8::Value"** %75, align 8
  br label %77

77:                                               ; preds = %67, %73
  %78 = phi %"class.blink::HTMLInputElement"* [ %65, %67 ], [ %74, %73 ]
  %79 = phi %"class.v8::Value"* [ %72, %67 ], [ %76, %73 ]
  %80 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink8FileList18wrapper_type_info_E, align 8
  %81 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %82 = add i64 %81, 8
  %83 = inttoptr i64 %82 to %"class.blink::V8PerIsolateData"**
  %84 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %83, align 8
  %85 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %84, %"struct.blink::WrapperTypeInfo"* %80, %"class.v8::Value"* %79) #9
  %86 = bitcast %"class.v8::Value"* %79 to i64*
  %87 = load i64, i64* %86, align 8
  br i1 %85, label %88, label %108

88:                                               ; preds = %77
  %89 = add i64 %87, -1
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = and i64 %87, -4294967296
  %93 = zext i32 %91 to i64
  %94 = or i64 %92, %93
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i16*
  %97 = load i16, i16* %96, align 2
  switch i16 %97, label %102 [
    i16 1057, label %98
    i16 1056, label %98
    i16 1040, label %98
  ]

98:                                               ; preds = %88, %88, %88
  %99 = add i64 %87, 19
  %100 = inttoptr i64 %99 to i8**
  %101 = load i8*, i8** %100, align 1
  br label %105

102:                                              ; preds = %88
  %103 = bitcast %"class.v8::Value"* %79 to %"class.v8::Object"*
  %104 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %103, i32 1) #9
  br label %105

105:                                              ; preds = %102, %98
  %106 = phi i8* [ %101, %98 ], [ %104, %102 ]
  %107 = bitcast i8* %106 to %"class.blink::FileList"*
  br label %130

108:                                              ; preds = %77
  %109 = and i64 %87, 3
  %110 = icmp eq i64 %109, 1
  br i1 %110, label %111, label %127

111:                                              ; preds = %108
  %112 = add i64 %87, -1
  %113 = inttoptr i64 %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = and i64 %87, -4294967296
  %116 = zext i32 %114 to i64
  %117 = or i64 %115, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i16*
  %120 = load i16, i16* %119, align 2
  %121 = icmp eq i16 %120, 67
  br i1 %121, label %122, label %127

122:                                              ; preds = %111
  %123 = add i64 %87, 23
  %124 = inttoptr i64 %123 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = ashr i32 %125, 1
  switch i32 %126, label %127 [
    i32 5, label %130
    i32 3, label %130
  ]

127:                                              ; preds = %108, %111, %122
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoERNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %80, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %128 = load i32, i32* %17, align 8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %122, %122, %105, %127
  %131 = phi %"class.blink::FileList"* [ null, %127 ], [ null, %122 ], [ null, %122 ], [ %107, %105 ]
  call void @_ZN5blink16HTMLInputElement8setFilesEPNS_8FileListE(%"class.blink::HTMLInputElement"* %78, %"class.blink::FileList"* %131) #9
  br label %132

132:                                              ; preds = %127, %130, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %133 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %134 = load i64*, i64** %133, align 8
  %135 = icmp eq i64* %134, null
  br i1 %135, label %145, label %136

136:                                              ; preds = %132
  %137 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %138 = bitcast %"class.v8::Isolate"* %137 to %"class.v8::internal::Isolate"*
  %139 = load i64, i64* %134, align 8
  %140 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %138, i64 %139) #9
  %141 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %137) #9
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = bitcast i64* %140 to %"class.v8::Value"*
  %144 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %137, %"class.v8::Value"* %143) #9
  br label %145

145:                                              ; preds = %142, %136, %132
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #9
  br label %161

161:                                              ; preds = %145, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element30FormActionAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLFormControlElement"*
  %25 = tail call %"class.WTF::StringImpl"* @_ZNK5blink22HTMLFormControlElement10formActionEv(%"class.blink::HTMLFormControlElement"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %22
  %31 = load i64, i64* %28, align 8
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to %"class.blink::V8PerIsolateData"**
  %34 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %34, i64 0, i32 5, i32 0, i32 0, i32 0
  %36 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %35, align 8
  %37 = getelementptr inbounds i64, i64* %27, i64 3
  %38 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %36, i64 0, i32 3, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, %25
  br i1 %40, label %41, label %48

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %36, i64 0, i32 1, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = inttoptr i64 %43 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %37, align 8
  br label %55

48:                                               ; preds = %30
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %36, i64* %37, %"class.WTF::StringImpl"* nonnull %25) #9
  br label %55

49:                                               ; preds = %22
  %50 = getelementptr inbounds i64, i64* %27, i64 3
  %51 = load i64, i64* %28, align 8
  %52 = add i64 %51, 200
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %50, align 8
  br label %68

55:                                               ; preds = %41, %45, %48
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #9
  br label %68

68:                                               ; preds = %49, %64, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element30FormActionAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %26 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %25, i64* %26, align 8
  store i8 0, i8* %23, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 -1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i64 %30, -4294967296
  %35 = zext i32 %33 to i64
  %36 = or i64 %34, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %44 [
    i16 1057, label %40
    i16 1056, label %40
    i16 1040, label %40
  ]

40:                                               ; preds = %1, %1, %1
  %41 = add i64 %30, 19
  %42 = inttoptr i64 %41 to i8**
  %43 = load i8*, i8** %42, align 1
  br label %47

44:                                               ; preds = %1
  %45 = bitcast i64* %29 to %"class.v8::Object"*
  %46 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %45, i32 1) #9
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i8* [ %43, %40 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %47
  %53 = load i64*, i64** %6, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 160
  %57 = inttoptr i64 %56 to %"class.v8::Value"*
  br label %61

58:                                               ; preds = %47
  %59 = bitcast i64** %27 to %"class.v8::Value"**
  %60 = load %"class.v8::Value"*, %"class.v8::Value"** %59, align 8
  br label %61

61:                                               ; preds = %52, %58
  %62 = phi %"class.v8::Value"* [ %57, %52 ], [ %60, %58 ]
  %63 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %63) #9
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %62, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %64 = load i32, i32* %19, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %120

66:                                               ; preds = %61
  %67 = bitcast i8* %48 to %"class.blink::HTMLFormControlElement"*
  %68 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9
  %69 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %70 = load %"class.v8::String"*, %"class.v8::String"** %69, align 8
  %71 = icmp eq %"class.v8::String"* %70, null
  br i1 %71, label %74, label %72, !prof !3

72:                                               ; preds = %66
  %73 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %70, i32 0) #9
  br label %101

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %101, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 acquire, align 4
  %81 = and i32 %80, 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %99, label %83

83:                                               ; preds = %78
  %84 = load atomic i32, i32* %79 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %101

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #9
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  call void @llvm.trap() #9
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %101

99:                                               ; preds = %78
  %100 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %76) #9
  br label %101

101:                                              ; preds = %72, %74, %83, %97, %99
  %102 = phi %"class.WTF::StringImpl"* [ %73, %72 ], [ %100, %99 ], [ %76, %83 ], [ %76, %97 ], [ null, %74 ]
  %103 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %103, align 8
  call void @_ZN5blink22HTMLFormControlElement13setFormActionERKN3WTF12AtomicStringE(%"class.blink::HTMLFormControlElement"* %67, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #9
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #9
  br label %119

119:                                              ; preds = %101, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #9
  br label %120

120:                                              ; preds = %61, %119
  %121 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  store i8* null, i8** %121, align 8
  %123 = icmp eq i8* %122, null
  br i1 %123, label %125, label %124

124:                                              ; preds = %120
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %122) #9
  br label %125

125:                                              ; preds = %124, %120
  %126 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #9
  br label %142

142:                                              ; preds = %125, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %63) #9
  %143 = load i8, i8* %23, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %142
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %146

146:                                              ; preds = %142, %145
  %147 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %149 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %150 = load i64*, i64** %149, align 8
  %151 = icmp eq i64* %150, null
  br i1 %151, label %161, label %152

152:                                              ; preds = %146
  %153 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %154 = bitcast %"class.v8::Isolate"* %153 to %"class.v8::internal::Isolate"*
  %155 = load i64, i64* %150, align 8
  %156 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %154, i64 %155) #9
  %157 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %153) #9
  br i1 %157, label %161, label %158

158:                                              ; preds = %152
  %159 = bitcast i64* %156 to %"class.v8::Value"*
  %160 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %153, %"class.v8::Value"* %159) #9
  br label %161

161:                                              ; preds = %158, %152, %146
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #9
  br label %177

177:                                              ; preds = %161, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element31FormEnctypeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLFormControlElement"*
  %25 = tail call %"class.WTF::StringImpl"* @_ZNK5blink22HTMLFormControlElement11formEnctypeEv(%"class.blink::HTMLFormControlElement"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %22
  %31 = load i64, i64* %28, align 8
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to %"class.blink::V8PerIsolateData"**
  %34 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %34, i64 0, i32 5, i32 0, i32 0, i32 0
  %36 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %35, align 8
  %37 = getelementptr inbounds i64, i64* %27, i64 3
  %38 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %36, i64 0, i32 3, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, %25
  br i1 %40, label %41, label %48

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %36, i64 0, i32 1, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = inttoptr i64 %43 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %37, align 8
  br label %55

48:                                               ; preds = %30
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %36, i64* %37, %"class.WTF::StringImpl"* nonnull %25) #9
  br label %55

49:                                               ; preds = %22
  %50 = getelementptr inbounds i64, i64* %27, i64 3
  %51 = load i64, i64* %28, align 8
  %52 = add i64 %51, 200
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %50, align 8
  br label %68

55:                                               ; preds = %41, %45, %48
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #9
  br label %68

68:                                               ; preds = %49, %64, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element31FormEnctypeAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %26 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %25, i64* %26, align 8
  store i8 0, i8* %23, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 -1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i64 %30, -4294967296
  %35 = zext i32 %33 to i64
  %36 = or i64 %34, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %44 [
    i16 1057, label %40
    i16 1056, label %40
    i16 1040, label %40
  ]

40:                                               ; preds = %1, %1, %1
  %41 = add i64 %30, 19
  %42 = inttoptr i64 %41 to i8**
  %43 = load i8*, i8** %42, align 1
  br label %47

44:                                               ; preds = %1
  %45 = bitcast i64* %29 to %"class.v8::Object"*
  %46 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %45, i32 1) #9
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i8* [ %43, %40 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %47
  %53 = load i64*, i64** %6, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 160
  %57 = inttoptr i64 %56 to %"class.v8::Value"*
  br label %61

58:                                               ; preds = %47
  %59 = bitcast i64** %27 to %"class.v8::Value"**
  %60 = load %"class.v8::Value"*, %"class.v8::Value"** %59, align 8
  br label %61

61:                                               ; preds = %52, %58
  %62 = phi %"class.v8::Value"* [ %57, %52 ], [ %60, %58 ]
  %63 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %63) #9
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %62, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %64 = load i32, i32* %19, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %120

66:                                               ; preds = %61
  %67 = bitcast i8* %48 to %"class.blink::HTMLFormControlElement"*
  %68 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9
  %69 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %70 = load %"class.v8::String"*, %"class.v8::String"** %69, align 8
  %71 = icmp eq %"class.v8::String"* %70, null
  br i1 %71, label %74, label %72, !prof !3

72:                                               ; preds = %66
  %73 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %70, i32 0) #9
  br label %101

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %101, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 acquire, align 4
  %81 = and i32 %80, 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %99, label %83

83:                                               ; preds = %78
  %84 = load atomic i32, i32* %79 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %101

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #9
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  call void @llvm.trap() #9
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %101

99:                                               ; preds = %78
  %100 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %76) #9
  br label %101

101:                                              ; preds = %72, %74, %83, %97, %99
  %102 = phi %"class.WTF::StringImpl"* [ %73, %72 ], [ %100, %99 ], [ %76, %83 ], [ %76, %97 ], [ null, %74 ]
  %103 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %103, align 8
  call void @_ZN5blink22HTMLFormControlElement14setFormEnctypeERKN3WTF12AtomicStringE(%"class.blink::HTMLFormControlElement"* %67, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #9
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #9
  br label %119

119:                                              ; preds = %101, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #9
  br label %120

120:                                              ; preds = %61, %119
  %121 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  store i8* null, i8** %121, align 8
  %123 = icmp eq i8* %122, null
  br i1 %123, label %125, label %124

124:                                              ; preds = %120
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %122) #9
  br label %125

125:                                              ; preds = %124, %120
  %126 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #9
  br label %142

142:                                              ; preds = %125, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %63) #9
  %143 = load i8, i8* %23, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %142
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %146

146:                                              ; preds = %142, %145
  %147 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %149 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %150 = load i64*, i64** %149, align 8
  %151 = icmp eq i64* %150, null
  br i1 %151, label %161, label %152

152:                                              ; preds = %146
  %153 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %154 = bitcast %"class.v8::Isolate"* %153 to %"class.v8::internal::Isolate"*
  %155 = load i64, i64* %150, align 8
  %156 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %154, i64 %155) #9
  %157 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %153) #9
  br i1 %157, label %161, label %158

158:                                              ; preds = %152
  %159 = bitcast i64* %156 to %"class.v8::Value"*
  %160 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %153, %"class.v8::Value"* %159) #9
  br label %161

161:                                              ; preds = %158, %152, %146
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #9
  br label %177

177:                                              ; preds = %161, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element30FormMethodAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLFormControlElement"*
  %25 = tail call %"class.WTF::StringImpl"* @_ZNK5blink22HTMLFormControlElement10formMethodEv(%"class.blink::HTMLFormControlElement"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %22
  %31 = load i64, i64* %28, align 8
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to %"class.blink::V8PerIsolateData"**
  %34 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %34, i64 0, i32 5, i32 0, i32 0, i32 0
  %36 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %35, align 8
  %37 = getelementptr inbounds i64, i64* %27, i64 3
  %38 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %36, i64 0, i32 3, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, %25
  br i1 %40, label %41, label %48

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %36, i64 0, i32 1, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = inttoptr i64 %43 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %37, align 8
  br label %55

48:                                               ; preds = %30
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %36, i64* %37, %"class.WTF::StringImpl"* nonnull %25) #9
  br label %55

49:                                               ; preds = %22
  %50 = getelementptr inbounds i64, i64* %27, i64 3
  %51 = load i64, i64* %28, align 8
  %52 = add i64 %51, 200
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %50, align 8
  br label %68

55:                                               ; preds = %41, %45, %48
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #9
  br label %68

68:                                               ; preds = %49, %64, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element30FormMethodAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %26 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %25, i64* %26, align 8
  store i8 0, i8* %23, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 -1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i64 %30, -4294967296
  %35 = zext i32 %33 to i64
  %36 = or i64 %34, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %44 [
    i16 1057, label %40
    i16 1056, label %40
    i16 1040, label %40
  ]

40:                                               ; preds = %1, %1, %1
  %41 = add i64 %30, 19
  %42 = inttoptr i64 %41 to i8**
  %43 = load i8*, i8** %42, align 1
  br label %47

44:                                               ; preds = %1
  %45 = bitcast i64* %29 to %"class.v8::Object"*
  %46 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %45, i32 1) #9
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i8* [ %43, %40 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %47
  %53 = load i64*, i64** %6, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 160
  %57 = inttoptr i64 %56 to %"class.v8::Value"*
  br label %61

58:                                               ; preds = %47
  %59 = bitcast i64** %27 to %"class.v8::Value"**
  %60 = load %"class.v8::Value"*, %"class.v8::Value"** %59, align 8
  br label %61

61:                                               ; preds = %52, %58
  %62 = phi %"class.v8::Value"* [ %57, %52 ], [ %60, %58 ]
  %63 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %63) #9
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %62, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %64 = load i32, i32* %19, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %120

66:                                               ; preds = %61
  %67 = bitcast i8* %48 to %"class.blink::HTMLFormControlElement"*
  %68 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9
  %69 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %70 = load %"class.v8::String"*, %"class.v8::String"** %69, align 8
  %71 = icmp eq %"class.v8::String"* %70, null
  br i1 %71, label %74, label %72, !prof !3

72:                                               ; preds = %66
  %73 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %70, i32 0) #9
  br label %101

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %101, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 acquire, align 4
  %81 = and i32 %80, 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %99, label %83

83:                                               ; preds = %78
  %84 = load atomic i32, i32* %79 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %101

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #9
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  call void @llvm.trap() #9
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %101

99:                                               ; preds = %78
  %100 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %76) #9
  br label %101

101:                                              ; preds = %72, %74, %83, %97, %99
  %102 = phi %"class.WTF::StringImpl"* [ %73, %72 ], [ %100, %99 ], [ %76, %83 ], [ %76, %97 ], [ null, %74 ]
  %103 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %103, align 8
  call void @_ZN5blink22HTMLFormControlElement13setFormMethodERKN3WTF12AtomicStringE(%"class.blink::HTMLFormControlElement"* %67, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #9
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #9
  br label %119

119:                                              ; preds = %101, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #9
  br label %120

120:                                              ; preds = %61, %119
  %121 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  store i8* null, i8** %121, align 8
  %123 = icmp eq i8* %122, null
  br i1 %123, label %125, label %124

124:                                              ; preds = %120
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %122) #9
  br label %125

125:                                              ; preds = %124, %120
  %126 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #9
  br label %142

142:                                              ; preds = %125, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %63) #9
  %143 = load i8, i8* %23, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %142
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %146

146:                                              ; preds = %142, %145
  %147 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %149 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %150 = load i64*, i64** %149, align 8
  %151 = icmp eq i64* %150, null
  br i1 %151, label %161, label %152

152:                                              ; preds = %146
  %153 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %154 = bitcast %"class.v8::Isolate"* %153 to %"class.v8::internal::Isolate"*
  %155 = load i64, i64* %150, align 8
  %156 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %154, i64 %155) #9
  %157 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %153) #9
  br i1 %157, label %161, label %158

158:                                              ; preds = %152
  %159 = bitcast i64* %156 to %"class.v8::Value"*
  %160 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %153, %"class.v8::Value"* %159) #9
  br label %161

161:                                              ; preds = %158, %152, %146
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #9
  br label %177

177:                                              ; preds = %161, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element34FormNoValidateAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kFormnovalidateAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 3
  %33 = getelementptr inbounds i64, i64* %31, i64 1
  br label %94

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %42 = bitcast %"class.blink::Member.339"* %41 to %"class.blink::Attribute"**
  %43 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  br label %51

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %48 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::Attribute"*
  %49 = lshr i32 %36, 1
  %50 = and i32 %49, 268435455
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi %"class.blink::Attribute"* [ %48, %46 ], [ %43, %39 ]
  %53 = phi i32 [ %50, %46 ], [ %45, %39 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %82, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %78, %57
  %63 = phi %"class.blink::Attribute"* [ %52, %57 ], [ %79, %78 ]
  %64 = phi i32 [ 0, %57 ], [ %80, %78 ]
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %59
  br i1 %67, label %87, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, %76
  br i1 %77, label %87, label %78

78:                                               ; preds = %73, %68
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 1
  %80 = add i32 %64, 1
  %81 = icmp eq %"class.blink::Attribute"* %79, %55
  br i1 %81, label %82, label %62

82:                                               ; preds = %78, %51
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 3
  %86 = getelementptr inbounds i64, i64* %84, i64 1
  br label %94

87:                                               ; preds = %62, %73
  %88 = icmp eq i32 %64, -1
  %89 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 3
  %92 = getelementptr inbounds i64, i64* %90, i64 1
  %93 = select i1 %88, i64 192, i64 184
  br label %94

94:                                               ; preds = %87, %82, %29
  %95 = phi i64* [ %33, %29 ], [ %86, %82 ], [ %92, %87 ]
  %96 = phi i64* [ %32, %29 ], [ %85, %82 ], [ %91, %87 ]
  %97 = phi i64 [ 192, %29 ], [ 192, %82 ], [ %93, %87 ]
  %98 = load i64, i64* %95, align 8
  %99 = add i64 %98, %97
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %96, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element34FormNoValidateAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kFormnovalidateAttrE, align 8
  tail call void @_ZN5blink8bindings48PerformAttributeSetCEReactionsReflectTypeBooleanERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element30FormTargetAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kFormtargetAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.339"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #9
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element30FormTargetAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kFormtargetAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element26HeightAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLInputElement"*
  %25 = tail call i32 @_ZNK5blink16HTMLInputElement6heightEv(%"class.blink::HTMLInputElement"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = icmp sgt i32 %25, -1
  br i1 %29, label %30, label %47, !prof !4

30:                                               ; preds = %22
  %31 = icmp ult i32 %25, 1073741824
  br i1 %31, label %32, label %35, !prof !4

32:                                               ; preds = %30
  %33 = sext i32 %25 to i64
  %34 = shl nsw i64 %33, 1
  br label %59

35:                                               ; preds = %30
  %36 = getelementptr inbounds i64, i64* %27, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %38, i32 %25) #9
  %40 = icmp eq %"class.v8::Integer"* %39, null
  br i1 %40, label %41, label %44, !prof !3

41:                                               ; preds = %35
  %42 = getelementptr inbounds i64, i64* %27, i64 2
  %43 = load i64, i64* %42, align 8
  br label %59

44:                                               ; preds = %35
  %45 = bitcast %"class.v8::Integer"* %39 to i64*
  %46 = load i64, i64* %45, align 8
  br label %59

47:                                               ; preds = %22
  %48 = getelementptr inbounds i64, i64* %27, i64 1
  %49 = bitcast i64* %48 to %"class.v8::Isolate"**
  %50 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, align 8
  %51 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %50, i32 %25) #9
  %52 = icmp eq %"class.v8::Integer"* %51, null
  br i1 %52, label %53, label %56, !prof !3

53:                                               ; preds = %47
  %54 = getelementptr inbounds i64, i64* %27, i64 2
  %55 = load i64, i64* %54, align 8
  br label %59

56:                                               ; preds = %47
  %57 = bitcast %"class.v8::Integer"* %51 to i64*
  %58 = load i64, i64* %57, align 8
  br label %59

59:                                               ; preds = %32, %41, %44, %53, %56
  %60 = phi i64 [ %34, %32 ], [ %43, %41 ], [ %46, %44 ], [ %55, %53 ], [ %58, %56 ]
  store i64 %60, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element26HeightAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %23, i64* %24, align 8
  store i8 0, i8* %21, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 -1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i64 %28, -4294967296
  %33 = zext i32 %31 to i64
  %34 = or i64 %32, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load i16, i16* %36, align 2
  switch i16 %37, label %42 [
    i16 1057, label %38
    i16 1056, label %38
    i16 1040, label %38
  ]

38:                                               ; preds = %1, %1, %1
  %39 = add i64 %28, 19
  %40 = inttoptr i64 %39 to i8**
  %41 = load i8*, i8** %40, align 1
  br label %45

42:                                               ; preds = %1
  %43 = bitcast i64* %27 to %"class.v8::Object"*
  %44 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %43, i32 1) #9
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i8* [ %41, %38 ], [ %44, %42 ]
  %47 = bitcast i8* %46 to %"class.blink::HTMLInputElement"*
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %45
  %52 = load i64*, i64** %4, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 1
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 160
  %56 = inttoptr i64 %55 to %"class.v8::Value"*
  br label %60

57:                                               ; preds = %45
  %58 = bitcast i64** %25 to %"class.v8::Value"**
  %59 = load %"class.v8::Value"*, %"class.v8::Value"** %58, align 8
  br label %60

60:                                               ; preds = %51, %57
  %61 = phi %"class.v8::Value"* [ %56, %51 ], [ %59, %57 ]
  %62 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %61) #9
  br i1 %62, label %63, label %66, !prof !4

63:                                               ; preds = %60
  %64 = bitcast %"class.v8::Value"* %61 to %"class.v8::Uint32"*
  %65 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %64) #9
  br label %73

66:                                               ; preds = %60
  %67 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %61) #9
  br i1 %67, label %68, label %71, !prof !4

68:                                               ; preds = %66
  %69 = bitcast %"class.v8::Value"* %61 to %"class.v8::Int32"*
  %70 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %69) #9
  br label %73

71:                                               ; preds = %66
  %72 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %61, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %73

73:                                               ; preds = %63, %68, %71
  %74 = phi i32 [ %65, %63 ], [ %70, %68 ], [ %72, %71 ]
  %75 = load i32, i32* %17, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %73
  call void @_ZN5blink16HTMLInputElement9setHeightEj(%"class.blink::HTMLInputElement"* %47, i32 %74) #9
  br label %78

78:                                               ; preds = %73, %77
  %79 = load i8, i8* %21, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %78
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %82

82:                                               ; preds = %78, %81
  %83 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %85 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %86 = load i64*, i64** %85, align 8
  %87 = icmp eq i64* %86, null
  br i1 %87, label %97, label %88

88:                                               ; preds = %82
  %89 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %90 = bitcast %"class.v8::Isolate"* %89 to %"class.v8::internal::Isolate"*
  %91 = load i64, i64* %86, align 8
  %92 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %90, i64 %91) #9
  %93 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %89) #9
  br i1 %93, label %97, label %94

94:                                               ; preds = %88
  %95 = bitcast i64* %92 to %"class.v8::Value"*
  %96 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %89, %"class.v8::Value"* %95) #9
  br label %97

97:                                               ; preds = %94, %88, %82
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %97, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element33IndeterminateAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 276
  %25 = bitcast i8* %24 to i16*
  %26 = load i16, i16* %25, align 4
  %27 = and i16 %26, 8
  %28 = icmp eq i16 %27, 0
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 3
  %32 = getelementptr inbounds i64, i64* %30, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = select i1 %28, i64 192, i64 184
  %35 = add i64 %34, %33
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element33IndeterminateAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLInputElement"*
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i64* %27 to %"class.v8::Isolate"**
  %29 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %22
  %34 = ptrtoint %"class.v8::Isolate"* %29 to i64
  %35 = add i64 %34, 160
  %36 = inttoptr i64 %35 to %"class.v8::Value"*
  br label %40

37:                                               ; preds = %22
  %38 = bitcast i64** %2 to %"class.v8::Value"**
  %39 = load %"class.v8::Value"*, %"class.v8::Value"** %38, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi %"class.v8::Value"* [ %36, %33 ], [ %39, %37 ]
  %42 = tail call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %41) #9
  br i1 %42, label %43, label %46, !prof !4

43:                                               ; preds = %40
  %44 = bitcast %"class.v8::Value"* %41 to %"class.v8::Boolean"*
  %45 = tail call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %44) #9
  br label %48

46:                                               ; preds = %40
  %47 = tail call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %41, %"class.v8::Isolate"* %29) #9
  br label %48

48:                                               ; preds = %43, %46
  %49 = phi i1 [ %45, %43 ], [ %47, %46 ]
  tail call void @_ZN5blink16HTMLInputElement16setIndeterminateEb(%"class.blink::HTMLInputElement"* %24, i1 zeroext %49) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element24ListAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLInputElement"*
  %25 = tail call %"class.blink::HTMLElement"* @_ZNK5blink16HTMLInputElement4listEv(%"class.blink::HTMLInputElement"* %24) #9
  %26 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::HTMLElement"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !3

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #9
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #9
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #9
  %49 = bitcast %"class.blink::HTMLElement"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #9
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element23MaxAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMaxAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.339"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #9
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element23MaxAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMaxAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element29MaxLengthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::TextControlElement"*
  %25 = tail call i32 @_ZNK5blink18TextControlElement9maxLengthEv(%"class.blink::TextControlElement"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = sext i32 %25 to i64
  %30 = add nsw i64 %29, 1073741824
  %31 = icmp ult i64 %30, 2147483648
  br i1 %31, label %32, label %34, !prof !4

32:                                               ; preds = %22
  %33 = shl nsw i64 %29, 1
  br label %46

34:                                               ; preds = %22
  %35 = getelementptr inbounds i64, i64* %27, i64 1
  %36 = bitcast i64* %35 to %"class.v8::Isolate"**
  %37 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  %38 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %37, i32 %25) #9
  %39 = icmp eq %"class.v8::Integer"* %38, null
  br i1 %39, label %40, label %43, !prof !3

40:                                               ; preds = %34
  %41 = getelementptr inbounds i64, i64* %27, i64 2
  %42 = load i64, i64* %41, align 8
  br label %46

43:                                               ; preds = %34
  %44 = bitcast %"class.v8::Integer"* %38 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %32, %40, %43
  %47 = phi i64 [ %33, %32 ], [ %42, %40 ], [ %45, %43 ]
  store i64 %47, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element29MaxLengthAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %23, i64* %24, align 8
  store i8 0, i8* %21, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 -1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i64 %28, -4294967296
  %33 = zext i32 %31 to i64
  %34 = or i64 %32, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load i16, i16* %36, align 2
  switch i16 %37, label %42 [
    i16 1057, label %38
    i16 1056, label %38
    i16 1040, label %38
  ]

38:                                               ; preds = %1, %1, %1
  %39 = add i64 %28, 19
  %40 = inttoptr i64 %39 to i8**
  %41 = load i8*, i8** %40, align 1
  br label %45

42:                                               ; preds = %1
  %43 = bitcast i64* %27 to %"class.v8::Object"*
  %44 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %43, i32 1) #9
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i8* [ %41, %38 ], [ %44, %42 ]
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = load i64*, i64** %4, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 160
  %55 = inttoptr i64 %54 to %"class.v8::Value"*
  br label %59

56:                                               ; preds = %45
  %57 = bitcast i64** %25 to %"class.v8::Value"**
  %58 = load %"class.v8::Value"*, %"class.v8::Value"** %57, align 8
  br label %59

59:                                               ; preds = %50, %56
  %60 = phi %"class.v8::Value"* [ %55, %50 ], [ %58, %56 ]
  %61 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %60) #9
  br i1 %61, label %62, label %65, !prof !4

62:                                               ; preds = %59
  %63 = bitcast %"class.v8::Value"* %60 to %"class.v8::Int32"*
  %64 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %63) #9
  br label %67

65:                                               ; preds = %59
  %66 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %60, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %67

67:                                               ; preds = %62, %65
  %68 = phi i32 [ %64, %62 ], [ %66, %65 ]
  %69 = load i32, i32* %17, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = bitcast i8* %46 to %"class.blink::TextControlElement"*
  call void @_ZN5blink18TextControlElement12setMaxLengthEiRNS_14ExceptionStateE(%"class.blink::TextControlElement"* %72, i32 %68, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %73

73:                                               ; preds = %67, %71
  %74 = load i8, i8* %21, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %77

77:                                               ; preds = %73, %76
  %78 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %79 = load i64, i64* %78, align 8
  store i64 %79, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %80 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %81 = load i64*, i64** %80, align 8
  %82 = icmp eq i64* %81, null
  br i1 %82, label %92, label %83

83:                                               ; preds = %77
  %84 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %85 = bitcast %"class.v8::Isolate"* %84 to %"class.v8::internal::Isolate"*
  %86 = load i64, i64* %81, align 8
  %87 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %85, i64 %86) #9
  %88 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %84) #9
  br i1 %88, label %92, label %89

89:                                               ; preds = %83
  %90 = bitcast i64* %87 to %"class.v8::Value"*
  %91 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %84, %"class.v8::Value"* %90) #9
  br label %92

92:                                               ; preds = %89, %83, %77
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #9
  br label %108

108:                                              ; preds = %92, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element23MinAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMinAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.339"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #9
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element23MinAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMinAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element29MinLengthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::TextControlElement"*
  %25 = tail call i32 @_ZNK5blink18TextControlElement9minLengthEv(%"class.blink::TextControlElement"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = sext i32 %25 to i64
  %30 = add nsw i64 %29, 1073741824
  %31 = icmp ult i64 %30, 2147483648
  br i1 %31, label %32, label %34, !prof !4

32:                                               ; preds = %22
  %33 = shl nsw i64 %29, 1
  br label %46

34:                                               ; preds = %22
  %35 = getelementptr inbounds i64, i64* %27, i64 1
  %36 = bitcast i64* %35 to %"class.v8::Isolate"**
  %37 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  %38 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %37, i32 %25) #9
  %39 = icmp eq %"class.v8::Integer"* %38, null
  br i1 %39, label %40, label %43, !prof !3

40:                                               ; preds = %34
  %41 = getelementptr inbounds i64, i64* %27, i64 2
  %42 = load i64, i64* %41, align 8
  br label %46

43:                                               ; preds = %34
  %44 = bitcast %"class.v8::Integer"* %38 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %32, %40, %43
  %47 = phi i64 [ %33, %32 ], [ %42, %40 ], [ %45, %43 ]
  store i64 %47, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element29MinLengthAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %23, i64* %24, align 8
  store i8 0, i8* %21, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 -1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i64 %28, -4294967296
  %33 = zext i32 %31 to i64
  %34 = or i64 %32, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load i16, i16* %36, align 2
  switch i16 %37, label %42 [
    i16 1057, label %38
    i16 1056, label %38
    i16 1040, label %38
  ]

38:                                               ; preds = %1, %1, %1
  %39 = add i64 %28, 19
  %40 = inttoptr i64 %39 to i8**
  %41 = load i8*, i8** %40, align 1
  br label %45

42:                                               ; preds = %1
  %43 = bitcast i64* %27 to %"class.v8::Object"*
  %44 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %43, i32 1) #9
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i8* [ %41, %38 ], [ %44, %42 ]
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = load i64*, i64** %4, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 160
  %55 = inttoptr i64 %54 to %"class.v8::Value"*
  br label %59

56:                                               ; preds = %45
  %57 = bitcast i64** %25 to %"class.v8::Value"**
  %58 = load %"class.v8::Value"*, %"class.v8::Value"** %57, align 8
  br label %59

59:                                               ; preds = %50, %56
  %60 = phi %"class.v8::Value"* [ %55, %50 ], [ %58, %56 ]
  %61 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %60) #9
  br i1 %61, label %62, label %65, !prof !4

62:                                               ; preds = %59
  %63 = bitcast %"class.v8::Value"* %60 to %"class.v8::Int32"*
  %64 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %63) #9
  br label %67

65:                                               ; preds = %59
  %66 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %60, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %67

67:                                               ; preds = %62, %65
  %68 = phi i32 [ %64, %62 ], [ %66, %65 ]
  %69 = load i32, i32* %17, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = bitcast i8* %46 to %"class.blink::TextControlElement"*
  call void @_ZN5blink18TextControlElement12setMinLengthEiRNS_14ExceptionStateE(%"class.blink::TextControlElement"* %72, i32 %68, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %73

73:                                               ; preds = %67, %71
  %74 = load i8, i8* %21, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %77

77:                                               ; preds = %73, %76
  %78 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %79 = load i64, i64* %78, align 8
  store i64 %79, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %80 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %81 = load i64*, i64** %80, align 8
  %82 = icmp eq i64* %81, null
  br i1 %82, label %92, label %83

83:                                               ; preds = %77
  %84 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %85 = bitcast %"class.v8::Isolate"* %84 to %"class.v8::internal::Isolate"*
  %86 = load i64, i64* %81, align 8
  %87 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %85, i64 %86) #9
  %88 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %84) #9
  br i1 %88, label %92, label %89

89:                                               ; preds = %83
  %90 = bitcast i64* %87 to %"class.v8::Value"*
  %91 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %84, %"class.v8::Value"* %90) #9
  br label %92

92:                                               ; preds = %89, %83, %77
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #9
  br label %108

108:                                              ; preds = %92, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element28MultipleAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kMultipleAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 3
  %33 = getelementptr inbounds i64, i64* %31, i64 1
  br label %94

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %42 = bitcast %"class.blink::Member.339"* %41 to %"class.blink::Attribute"**
  %43 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  br label %51

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %48 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::Attribute"*
  %49 = lshr i32 %36, 1
  %50 = and i32 %49, 268435455
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi %"class.blink::Attribute"* [ %48, %46 ], [ %43, %39 ]
  %53 = phi i32 [ %50, %46 ], [ %45, %39 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %82, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %78, %57
  %63 = phi %"class.blink::Attribute"* [ %52, %57 ], [ %79, %78 ]
  %64 = phi i32 [ 0, %57 ], [ %80, %78 ]
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %59
  br i1 %67, label %87, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, %76
  br i1 %77, label %87, label %78

78:                                               ; preds = %73, %68
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 1
  %80 = add i32 %64, 1
  %81 = icmp eq %"class.blink::Attribute"* %79, %55
  br i1 %81, label %82, label %62

82:                                               ; preds = %78, %51
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 3
  %86 = getelementptr inbounds i64, i64* %84, i64 1
  br label %94

87:                                               ; preds = %62, %73
  %88 = icmp eq i32 %64, -1
  %89 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 3
  %92 = getelementptr inbounds i64, i64* %90, i64 1
  %93 = select i1 %88, i64 192, i64 184
  br label %94

94:                                               ; preds = %87, %82, %29
  %95 = phi i64* [ %33, %29 ], [ %86, %82 ], [ %92, %87 ]
  %96 = phi i64* [ %32, %29 ], [ %85, %82 ], [ %91, %87 ]
  %97 = phi i64 [ 192, %29 ], [ 192, %82 ], [ %93, %87 ]
  %98 = load i64, i64* %95, align 8
  %99 = add i64 %98, %97
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %96, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element28MultipleAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kMultipleAttrE, align 8
  tail call void @_ZN5blink8bindings48PerformAttributeSetCEReactionsReflectTypeBooleanERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element24NameAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 1048576
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %87, label %29

29:                                               ; preds = %22
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %31 = getelementptr inbounds i8, i8* %23, i64 96
  %32 = bitcast i8* %31 to %"class.blink::ElementData"**
  %33 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %32, align 8
  %34 = icmp eq %"class.blink::ElementData"* %33, null
  br i1 %34, label %85, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %33, i64 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.blink::ElementData"* %33 to %"class.blink::UniqueElementData"*
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %33, i64 1, i32 1
  %43 = bitcast %"class.blink::Member.339"* %42 to %"class.blink::Attribute"**
  %44 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %41, i64 0, i32 2, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  br label %52

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %33, i64 1
  %49 = bitcast %"class.blink::ElementData"* %48 to %"class.blink::Attribute"*
  %50 = lshr i32 %37, 1
  %51 = and i32 %50, 268435455
  br label %52

52:                                               ; preds = %47, %40
  %53 = phi %"class.blink::Attribute"* [ %49, %47 ], [ %44, %40 ]
  %54 = phi i32 [ %51, %47 ], [ %46, %40 ]
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %53, i64 %55
  %57 = icmp eq i32 %54, 0
  br i1 %57, label %85, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %63

63:                                               ; preds = %78, %58
  %64 = phi %"class.blink::Attribute"* [ %53, %58 ], [ %79, %78 ]
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %60
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, %76
  br i1 %77, label %81, label %78

78:                                               ; preds = %73, %68
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %64, i64 1
  %80 = icmp eq %"class.blink::Attribute"* %79, %56
  br i1 %80, label %85, label %63

81:                                               ; preds = %73, %63
  %82 = icmp eq %"class.blink::Attribute"* %64, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %64, i64 0, i32 1
  br label %89

85:                                               ; preds = %78, %81, %52, %29
  %86 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %89

87:                                               ; preds = %22
  %88 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %89

89:                                               ; preds = %83, %85, %87
  %90 = phi %"class.WTF::AtomicString"* [ %88, %87 ], [ %86, %85 ], [ %84, %83 ]
  %91 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 1
  %94 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %90, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %97, label %103

97:                                               ; preds = %89
  %98 = getelementptr inbounds i64, i64* %92, i64 3
  %99 = load i64, i64* %93, align 8
  %100 = add i64 %99, 200
  %101 = inttoptr i64 %100 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %98, align 8
  br label %122

103:                                              ; preds = %89
  %104 = load i64, i64* %93, align 8
  %105 = add i64 %104, 8
  %106 = inttoptr i64 %105 to %"class.blink::V8PerIsolateData"**
  %107 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %107, i64 0, i32 5, i32 0, i32 0, i32 0
  %109 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %108, align 8
  %110 = getelementptr inbounds i64, i64* %92, i64 3
  %111 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %109, i64 0, i32 3, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, %95
  br i1 %113, label %114, label %121

114:                                              ; preds = %103
  %115 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %109, i64 0, i32 1, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %122, label %118

118:                                              ; preds = %114
  %119 = inttoptr i64 %116 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %110, align 8
  br label %122

121:                                              ; preds = %103
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %109, i64* %110, %"class.WTF::StringImpl"* nonnull %95) #9
  br label %122

122:                                              ; preds = %97, %114, %118, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element24NameAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element27PatternAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kPatternAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.339"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #9
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element27PatternAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kPatternAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element31PlaceholderAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kPlaceholderAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.339"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #9
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element31PlaceholderAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kPlaceholderAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element28ReadOnlyAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kReadonlyAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 3
  %33 = getelementptr inbounds i64, i64* %31, i64 1
  br label %94

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %42 = bitcast %"class.blink::Member.339"* %41 to %"class.blink::Attribute"**
  %43 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  br label %51

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %48 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::Attribute"*
  %49 = lshr i32 %36, 1
  %50 = and i32 %49, 268435455
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi %"class.blink::Attribute"* [ %48, %46 ], [ %43, %39 ]
  %53 = phi i32 [ %50, %46 ], [ %45, %39 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %82, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %78, %57
  %63 = phi %"class.blink::Attribute"* [ %52, %57 ], [ %79, %78 ]
  %64 = phi i32 [ 0, %57 ], [ %80, %78 ]
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %59
  br i1 %67, label %87, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, %76
  br i1 %77, label %87, label %78

78:                                               ; preds = %73, %68
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 1
  %80 = add i32 %64, 1
  %81 = icmp eq %"class.blink::Attribute"* %79, %55
  br i1 %81, label %82, label %62

82:                                               ; preds = %78, %51
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 3
  %86 = getelementptr inbounds i64, i64* %84, i64 1
  br label %94

87:                                               ; preds = %62, %73
  %88 = icmp eq i32 %64, -1
  %89 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 3
  %92 = getelementptr inbounds i64, i64* %90, i64 1
  %93 = select i1 %88, i64 192, i64 184
  br label %94

94:                                               ; preds = %87, %82, %29
  %95 = phi i64* [ %33, %29 ], [ %86, %82 ], [ %92, %87 ]
  %96 = phi i64* [ %32, %29 ], [ %85, %82 ], [ %91, %87 ]
  %97 = phi i64 [ 192, %29 ], [ 192, %82 ], [ %93, %87 ]
  %98 = load i64, i64* %95, align 8
  %99 = add i64 %98, %97
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %96, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element28ReadOnlyAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kReadonlyAttrE, align 8
  tail call void @_ZN5blink8bindings48PerformAttributeSetCEReactionsReflectTypeBooleanERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element28RequiredAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kRequiredAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 3
  %33 = getelementptr inbounds i64, i64* %31, i64 1
  br label %94

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %42 = bitcast %"class.blink::Member.339"* %41 to %"class.blink::Attribute"**
  %43 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  br label %51

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %48 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::Attribute"*
  %49 = lshr i32 %36, 1
  %50 = and i32 %49, 268435455
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi %"class.blink::Attribute"* [ %48, %46 ], [ %43, %39 ]
  %53 = phi i32 [ %50, %46 ], [ %45, %39 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %82, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %78, %57
  %63 = phi %"class.blink::Attribute"* [ %52, %57 ], [ %79, %78 ]
  %64 = phi i32 [ 0, %57 ], [ %80, %78 ]
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %59
  br i1 %67, label %87, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, %76
  br i1 %77, label %87, label %78

78:                                               ; preds = %73, %68
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 1
  %80 = add i32 %64, 1
  %81 = icmp eq %"class.blink::Attribute"* %79, %55
  br i1 %81, label %82, label %62

82:                                               ; preds = %78, %51
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 3
  %86 = getelementptr inbounds i64, i64* %84, i64 1
  br label %94

87:                                               ; preds = %62, %73
  %88 = icmp eq i32 %64, -1
  %89 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 3
  %92 = getelementptr inbounds i64, i64* %90, i64 1
  %93 = select i1 %88, i64 192, i64 184
  br label %94

94:                                               ; preds = %87, %82, %29
  %95 = phi i64* [ %33, %29 ], [ %86, %82 ], [ %92, %87 ]
  %96 = phi i64* [ %32, %29 ], [ %85, %82 ], [ %91, %87 ]
  %97 = phi i64 [ 192, %29 ], [ 192, %82 ], [ %93, %87 ]
  %98 = load i64, i64* %95, align 8
  %99 = add i64 %98, %97
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %96, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element28RequiredAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kRequiredAttrE, align 8
  tail call void @_ZN5blink8bindings48PerformAttributeSetCEReactionsReflectTypeBooleanERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element24SizeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLInputElement"*
  %25 = tail call i32 @_ZNK5blink16HTMLInputElement4sizeEv(%"class.blink::HTMLInputElement"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = icmp sgt i32 %25, -1
  br i1 %29, label %30, label %47, !prof !4

30:                                               ; preds = %22
  %31 = icmp ult i32 %25, 1073741824
  br i1 %31, label %32, label %35, !prof !4

32:                                               ; preds = %30
  %33 = sext i32 %25 to i64
  %34 = shl nsw i64 %33, 1
  br label %59

35:                                               ; preds = %30
  %36 = getelementptr inbounds i64, i64* %27, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %38, i32 %25) #9
  %40 = icmp eq %"class.v8::Integer"* %39, null
  br i1 %40, label %41, label %44, !prof !3

41:                                               ; preds = %35
  %42 = getelementptr inbounds i64, i64* %27, i64 2
  %43 = load i64, i64* %42, align 8
  br label %59

44:                                               ; preds = %35
  %45 = bitcast %"class.v8::Integer"* %39 to i64*
  %46 = load i64, i64* %45, align 8
  br label %59

47:                                               ; preds = %22
  %48 = getelementptr inbounds i64, i64* %27, i64 1
  %49 = bitcast i64* %48 to %"class.v8::Isolate"**
  %50 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, align 8
  %51 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %50, i32 %25) #9
  %52 = icmp eq %"class.v8::Integer"* %51, null
  br i1 %52, label %53, label %56, !prof !3

53:                                               ; preds = %47
  %54 = getelementptr inbounds i64, i64* %27, i64 2
  %55 = load i64, i64* %54, align 8
  br label %59

56:                                               ; preds = %47
  %57 = bitcast %"class.v8::Integer"* %51 to i64*
  %58 = load i64, i64* %57, align 8
  br label %59

59:                                               ; preds = %32, %41, %44, %53, %56
  %60 = phi i64 [ %34, %32 ], [ %43, %41 ], [ %46, %44 ], [ %55, %53 ], [ %58, %56 ]
  store i64 %60, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element24SizeAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %23, i64* %24, align 8
  store i8 0, i8* %21, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 -1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i64 %28, -4294967296
  %33 = zext i32 %31 to i64
  %34 = or i64 %32, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load i16, i16* %36, align 2
  switch i16 %37, label %42 [
    i16 1057, label %38
    i16 1056, label %38
    i16 1040, label %38
  ]

38:                                               ; preds = %1, %1, %1
  %39 = add i64 %28, 19
  %40 = inttoptr i64 %39 to i8**
  %41 = load i8*, i8** %40, align 1
  br label %45

42:                                               ; preds = %1
  %43 = bitcast i64* %27 to %"class.v8::Object"*
  %44 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %43, i32 1) #9
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i8* [ %41, %38 ], [ %44, %42 ]
  %47 = bitcast i8* %46 to %"class.blink::HTMLInputElement"*
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %45
  %52 = load i64*, i64** %4, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 1
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 160
  %56 = inttoptr i64 %55 to %"class.v8::Value"*
  br label %60

57:                                               ; preds = %45
  %58 = bitcast i64** %25 to %"class.v8::Value"**
  %59 = load %"class.v8::Value"*, %"class.v8::Value"** %58, align 8
  br label %60

60:                                               ; preds = %51, %57
  %61 = phi %"class.v8::Value"* [ %56, %51 ], [ %59, %57 ]
  %62 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %61) #9
  br i1 %62, label %63, label %66, !prof !4

63:                                               ; preds = %60
  %64 = bitcast %"class.v8::Value"* %61 to %"class.v8::Uint32"*
  %65 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %64) #9
  br label %73

66:                                               ; preds = %60
  %67 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %61) #9
  br i1 %67, label %68, label %71, !prof !4

68:                                               ; preds = %66
  %69 = bitcast %"class.v8::Value"* %61 to %"class.v8::Int32"*
  %70 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %69) #9
  br label %73

71:                                               ; preds = %66
  %72 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %61, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %73

73:                                               ; preds = %63, %68, %71
  %74 = phi i32 [ %65, %63 ], [ %70, %68 ], [ %72, %71 ]
  %75 = load i32, i32* %17, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %73
  call void @_ZN5blink16HTMLInputElement7setSizeEjRNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* %47, i32 %74, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %78

78:                                               ; preds = %73, %77
  %79 = load i8, i8* %21, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %78
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %82

82:                                               ; preds = %78, %81
  %83 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %85 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %86 = load i64*, i64** %85, align 8
  %87 = icmp eq i64* %86, null
  br i1 %87, label %97, label %88

88:                                               ; preds = %82
  %89 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %90 = bitcast %"class.v8::Isolate"* %89 to %"class.v8::internal::Isolate"*
  %91 = load i64, i64* %86, align 8
  %92 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %90, i64 %91) #9
  %93 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %89) #9
  br i1 %93, label %97, label %94

94:                                               ; preds = %88
  %95 = bitcast i64* %92 to %"class.v8::Value"*
  %96 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %89, %"class.v8::Value"* %95) #9
  br label %97

97:                                               ; preds = %94, %88, %82
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %97, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element23SrcAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #9
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %25) #9
  %26 = bitcast i8* %24 to %"class.blink::Element"*
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  call void @_ZNK5blink7Element15GetURLAttributeERKNS_13QualifiedNameE(%"class.blink::KURL"* nonnull sret %2, %"class.blink::Element"* %26, %"class.blink::QualifiedName"* dereferenceable(8) %27) #9
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 1
  %31 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 4, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %40

34:                                               ; preds = %23
  %35 = getelementptr inbounds i64, i64* %29, i64 3
  %36 = load i64, i64* %30, align 8
  %37 = add i64 %36, 200
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %35, align 8
  br label %59

40:                                               ; preds = %23
  %41 = load i64, i64* %30, align 8
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to %"class.blink::V8PerIsolateData"**
  %44 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %44, i64 0, i32 5, i32 0, i32 0, i32 0
  %46 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %45, align 8
  %47 = getelementptr inbounds i64, i64* %29, i64 3
  %48 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %46, i64 0, i32 3, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, %32
  br i1 %50, label %51, label %58

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %46, i64 0, i32 1, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = inttoptr i64 %53 to i64*
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %47, align 8
  br label %59

58:                                               ; preds = %40
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %46, i64* %47, %"class.WTF::StringImpl"* nonnull %32) #9
  br label %59

59:                                               ; preds = %34, %51, %55, %58
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %25) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element23SrcAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element24StepAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kStepAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.339"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #9
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element24StepAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kStepAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element24TypeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLFormControlElement"*
  %25 = bitcast i8* %23 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %26 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %26, i64 171
  %28 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %27, align 8
  %29 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %28(%"class.blink::HTMLFormControlElement"* %24) #9
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %29, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %42

36:                                               ; preds = %22
  %37 = getelementptr inbounds i64, i64* %31, i64 3
  %38 = load i64, i64* %32, align 8
  %39 = add i64 %38, 200
  %40 = inttoptr i64 %39 to i64*
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %37, align 8
  br label %61

42:                                               ; preds = %22
  %43 = load i64, i64* %32, align 8
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to %"class.blink::V8PerIsolateData"**
  %46 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %46, i64 0, i32 5, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %47, align 8
  %49 = getelementptr inbounds i64, i64* %31, i64 3
  %50 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %48, i64 0, i32 3, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, %34
  br i1 %52, label %53, label %60

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %48, i64 0, i32 1, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = inttoptr i64 %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %49, align 8
  br label %61

60:                                               ; preds = %42
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %48, i64* %49, %"class.WTF::StringImpl"* nonnull %34) #9
  br label %61

61:                                               ; preds = %36, %53, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element24TypeAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %26 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %25, i64* %26, align 8
  store i8 0, i8* %23, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 -1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i64 %30, -4294967296
  %35 = zext i32 %33 to i64
  %36 = or i64 %34, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %44 [
    i16 1057, label %40
    i16 1056, label %40
    i16 1040, label %40
  ]

40:                                               ; preds = %1, %1, %1
  %41 = add i64 %30, 19
  %42 = inttoptr i64 %41 to i8**
  %43 = load i8*, i8** %42, align 1
  br label %47

44:                                               ; preds = %1
  %45 = bitcast i64* %29 to %"class.v8::Object"*
  %46 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %45, i32 1) #9
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i8* [ %43, %40 ], [ %46, %44 ]
  %49 = bitcast i8* %48 to %"class.blink::HTMLInputElement"*
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %47
  %54 = load i64*, i64** %6, align 8
  %55 = getelementptr inbounds i64, i64* %54, i64 1
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 160
  %58 = inttoptr i64 %57 to %"class.v8::Value"*
  br label %62

59:                                               ; preds = %47
  %60 = bitcast i64** %27 to %"class.v8::Value"**
  %61 = load %"class.v8::Value"*, %"class.v8::Value"** %60, align 8
  br label %62

62:                                               ; preds = %53, %59
  %63 = phi %"class.v8::Value"* [ %58, %53 ], [ %61, %59 ]
  %64 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %64) #9
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %63, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %65 = load i32, i32* %19, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %120

67:                                               ; preds = %62
  %68 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9
  %69 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %70 = load %"class.v8::String"*, %"class.v8::String"** %69, align 8
  %71 = icmp eq %"class.v8::String"* %70, null
  br i1 %71, label %74, label %72, !prof !3

72:                                               ; preds = %67
  %73 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %70, i32 0) #9
  br label %101

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %101, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 acquire, align 4
  %81 = and i32 %80, 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %99, label %83

83:                                               ; preds = %78
  %84 = load atomic i32, i32* %79 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %101

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #9
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  call void @llvm.trap() #9
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %101

99:                                               ; preds = %78
  %100 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %76) #9
  br label %101

101:                                              ; preds = %72, %74, %83, %97, %99
  %102 = phi %"class.WTF::StringImpl"* [ %73, %72 ], [ %100, %99 ], [ %76, %83 ], [ %76, %97 ], [ null, %74 ]
  %103 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %103, align 8
  call void @_ZN5blink16HTMLInputElement7setTypeERKN3WTF12AtomicStringE(%"class.blink::HTMLInputElement"* %49, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #9
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #9
  br label %119

119:                                              ; preds = %101, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #9
  br label %120

120:                                              ; preds = %62, %119
  %121 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  store i8* null, i8** %121, align 8
  %123 = icmp eq i8* %122, null
  br i1 %123, label %125, label %124

124:                                              ; preds = %120
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %122) #9
  br label %125

125:                                              ; preds = %124, %120
  %126 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #9
  br label %142

142:                                              ; preds = %125, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %64) #9
  %143 = load i8, i8* %23, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %142
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %146

146:                                              ; preds = %142, %145
  %147 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %149 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %150 = load i64*, i64** %149, align 8
  %151 = icmp eq i64* %150, null
  br i1 %151, label %161, label %152

152:                                              ; preds = %146
  %153 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %154 = bitcast %"class.v8::Isolate"* %153 to %"class.v8::internal::Isolate"*
  %155 = load i64, i64* %150, align 8
  %156 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %154, i64 %155) #9
  %157 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %153) #9
  br i1 %157, label %161, label %158

158:                                              ; preds = %152
  %159 = bitcast i64* %156 to %"class.v8::Value"*
  %160 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %153, %"class.v8::Value"* %159) #9
  br label %161

161:                                              ; preds = %158, %152, %146
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #9
  br label %177

177:                                              ; preds = %161, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element32DefaultValueAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.339"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #9
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element32DefaultValueAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element25ValueAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLInputElement"*
  %25 = bitcast i8* %23 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %26 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %26, i64 195
  %28 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %27, align 8
  %29 = tail call %"class.WTF::StringImpl"* %28(%"class.blink::HTMLInputElement"* %24) #9
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %33, label %53, label %34

34:                                               ; preds = %22
  %35 = load i64, i64* %32, align 8
  %36 = add i64 %35, 8
  %37 = inttoptr i64 %36 to %"class.blink::V8PerIsolateData"**
  %38 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %38, i64 0, i32 5, i32 0, i32 0, i32 0
  %40 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %39, align 8
  %41 = getelementptr inbounds i64, i64* %31, i64 3
  %42 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %40, i64 0, i32 3, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, %29
  br i1 %44, label %45, label %52

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %40, i64 0, i32 1, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  %50 = inttoptr i64 %47 to i64*
  %51 = load i64, i64* %50, align 8
  store i64 %51, i64* %41, align 8
  br label %59

52:                                               ; preds = %34
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %40, i64* %41, %"class.WTF::StringImpl"* nonnull %29) #9
  br label %59

53:                                               ; preds = %22
  %54 = getelementptr inbounds i64, i64* %31, i64 3
  %55 = load i64, i64* %32, align 8
  %56 = add i64 %55, 200
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %54, align 8
  br label %72

59:                                               ; preds = %45, %49, %52
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %72

72:                                               ; preds = %53, %68, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element25ValueAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %26 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %25, i64* %26, align 8
  store i8 0, i8* %23, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 -1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i64 %30, -4294967296
  %35 = zext i32 %33 to i64
  %36 = or i64 %34, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %44 [
    i16 1057, label %40
    i16 1056, label %40
    i16 1040, label %40
  ]

40:                                               ; preds = %1, %1, %1
  %41 = add i64 %30, 19
  %42 = inttoptr i64 %41 to i8**
  %43 = load i8*, i8** %42, align 1
  br label %47

44:                                               ; preds = %1
  %45 = bitcast i64* %29 to %"class.v8::Object"*
  %46 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %45, i32 1) #9
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i8* [ %43, %40 ], [ %46, %44 ]
  %49 = bitcast i8* %48 to %"class.blink::HTMLInputElement"*
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %47
  %54 = load i64*, i64** %6, align 8
  %55 = getelementptr inbounds i64, i64* %54, i64 1
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 160
  %58 = inttoptr i64 %57 to %"class.v8::Value"*
  br label %62

59:                                               ; preds = %47
  %60 = bitcast i64** %27 to %"class.v8::Value"**
  %61 = load %"class.v8::Value"*, %"class.v8::Value"** %60, align 8
  br label %62

62:                                               ; preds = %53, %59
  %63 = phi %"class.v8::Value"* [ %58, %53 ], [ %61, %59 ]
  %64 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %64) #9
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE2EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %63, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %65 = load i32, i32* %19, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %114

67:                                               ; preds = %62
  %68 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9
  %69 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %70 = load %"class.v8::String"*, %"class.v8::String"** %69, align 8
  %71 = icmp eq %"class.v8::String"* %70, null
  br i1 %71, label %74, label %72, !prof !3

72:                                               ; preds = %67
  %73 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %70, i32 0) #9
  br label %95

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #9
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %83
  call void @llvm.trap() #9
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %72, %74, %78, %93
  %96 = phi %"class.WTF::StringImpl"* [ %73, %72 ], [ null, %74 ], [ %76, %78 ], [ %76, %93 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %96, %"class.WTF::StringImpl"** %97, align 8
  call void @_ZN5blink16HTMLInputElement8setValueERKN3WTF6StringERNS_14ExceptionStateENS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %49, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2, i32 0) #9
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %95, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #9
  br label %114

114:                                              ; preds = %62, %113
  %115 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  store i8* null, i8** %115, align 8
  %117 = icmp eq i8* %116, null
  br i1 %117, label %119, label %118

118:                                              ; preds = %114
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %116) #9
  br label %119

119:                                              ; preds = %118, %114
  %120 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #9
  br label %136

136:                                              ; preds = %119, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %64) #9
  %137 = load i8, i8* %23, align 8, !range !2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %140, label %139

139:                                              ; preds = %136
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %140

140:                                              ; preds = %136, %139
  %141 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %142 = load i64, i64* %141, align 8
  store i64 %142, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %143 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = icmp eq i64* %144, null
  br i1 %145, label %155, label %146

146:                                              ; preds = %140
  %147 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %148 = bitcast %"class.v8::Isolate"* %147 to %"class.v8::internal::Isolate"*
  %149 = load i64, i64* %144, align 8
  %150 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %148, i64 %149) #9
  %151 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %147) #9
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = bitcast i64* %150 to %"class.v8::Value"*
  %154 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %147, %"class.v8::Value"* %153) #9
  br label %155

155:                                              ; preds = %152, %146, %140
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #9
  br label %171

171:                                              ; preds = %155, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element31ValueAsDateAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ScriptValue", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = bitcast i64* %5 to %"class.v8::Object"*
  %7 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %6) #9
  %8 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7)
  %9 = load i64, i64* %5, align 8
  %10 = add i64 %9, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = and i64 %9, -4294967296
  %14 = zext i32 %12 to i64
  %15 = or i64 %13, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load i16, i16* %17, align 2
  switch i16 %18, label %23 [
    i16 1057, label %19
    i16 1056, label %19
    i16 1040, label %19
  ]

19:                                               ; preds = %1, %1, %1
  %20 = add i64 %9, 19
  %21 = inttoptr i64 %20 to i8**
  %22 = load i8*, i8** %21, align 1
  br label %25

23:                                               ; preds = %1
  %24 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %6, i32 1) #9
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi i8* [ %22, %19 ], [ %24, %23 ]
  %27 = bitcast i8* %26 to %"class.blink::HTMLInputElement"*
  %28 = bitcast %"class.blink::ScriptValue"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #9
  call void @_ZNK5blink16HTMLInputElement11valueAsDateEPNS_11ScriptStateE(%"class.blink::ScriptValue"* nonnull sret %2, %"class.blink::HTMLInputElement"* %27, %"class.blink::ScriptState"* %8) #9
  %29 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  br i1 %31, label %32, label %37

32:                                               ; preds = %25
  %33 = bitcast %"class.blink::ScriptState"* %8 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 176
  %36 = inttoptr i64 %35 to %"class.v8::Value"*
  br label %39

37:                                               ; preds = %25
  %38 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %2) #9
  br label %39

39:                                               ; preds = %32, %37
  %40 = phi %"class.v8::Value"* [ %36, %32 ], [ %38, %37 ]
  %41 = icmp eq %"class.v8::Value"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 3
  %46 = bitcast %"class.v8::Value"* %40 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %45, align 8
  br label %48

48:                                               ; preds = %39, %42
  %49 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 1, i32 0
  %50 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %49, align 8
  %51 = icmp eq %"class.blink::DOMWrapperWorld"* %50, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %50, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %53) #9
  %54 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %50) #9
  %58 = bitcast %"class.blink::DOMWrapperWorld"* %50 to i8*
  call void @free(i8* %58) #9
  br label %59

59:                                               ; preds = %48, %52, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element31ValueAsDateAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::CEReactionsScope", align 8
  %5 = alloca %"class.blink::ScriptValue", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %45, !prof !3

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %111

45:                                               ; preds = %1
  %46 = bitcast %"class.blink::CEReactionsScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %4, i64 0, i32 1
  %48 = bitcast %"class.blink::CEReactionsScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false)
  %49 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %50 = bitcast %"class.blink::CEReactionsScope"* %4 to i64*
  store i64 %49, i64* %50, align 8
  store i8 0, i8* %47, align 8
  store %"class.blink::CEReactionsScope"* %4, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %51 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 -1
  %54 = bitcast i64* %53 to %"class.v8::Object"*
  %55 = load i64, i64* %53, align 8
  %56 = add i64 %55, -1
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = and i64 %55, -4294967296
  %60 = zext i32 %58 to i64
  %61 = or i64 %59, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load i16, i16* %63, align 2
  switch i16 %64, label %69 [
    i16 1057, label %65
    i16 1056, label %65
    i16 1040, label %65
  ]

65:                                               ; preds = %45, %45, %45
  %66 = add i64 %55, 19
  %67 = inttoptr i64 %66 to i8**
  %68 = load i8*, i8** %67, align 1
  br label %71

69:                                               ; preds = %45
  %70 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %54, i32 1) #9
  br label %71

71:                                               ; preds = %65, %69
  %72 = phi i8* [ %68, %65 ], [ %70, %69 ]
  %73 = bitcast i8* %72 to %"class.blink::HTMLInputElement"*
  %74 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %54) #9
  %75 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %74)
  %76 = load i32, i32* %22, align 8
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %84, label %78

78:                                               ; preds = %71
  %79 = load i64*, i64** %6, align 8
  %80 = getelementptr inbounds i64, i64* %79, i64 1
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 160
  %83 = inttoptr i64 %82 to %"class.v8::Value"*
  br label %87

84:                                               ; preds = %71
  %85 = bitcast i64** %51 to %"class.v8::Value"**
  %86 = load %"class.v8::Value"*, %"class.v8::Value"** %85, align 8
  br label %87

87:                                               ; preds = %78, %84
  %88 = phi %"class.v8::Value"* [ %83, %78 ], [ %86, %84 ]
  %89 = bitcast %"class.blink::ScriptValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #9
  call void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9IDLObjectEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::ScriptValue"* nonnull sret %5, %"class.v8::Isolate"* %10, %"class.v8::Value"* %88, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %90 = load i32, i32* %19, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %87
  call void @_ZN5blink16HTMLInputElement14setValueAsDateEPNS_11ScriptStateERKNS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* %73, %"class.blink::ScriptState"* %75, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %93

93:                                               ; preds = %87, %92
  %94 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1, i32 1, i32 0
  %95 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %94, align 8
  %96 = icmp eq %"class.blink::DOMWrapperWorld"* %95, null
  br i1 %96, label %104, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %95, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %98) #9
  %99 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %95, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %97
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %95) #9
  %103 = bitcast %"class.blink::DOMWrapperWorld"* %95 to i8*
  call void @free(i8* %103) #9
  br label %104

104:                                              ; preds = %93, %97, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #9
  %105 = load i8, i8* %47, align 8, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %108, label %107

107:                                              ; preds = %104
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %4) #9
  br label %108

108:                                              ; preds = %104, %107
  %109 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %110 = load i64, i64* %109, align 8
  store i64 %110, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #9
  br label %111

111:                                              ; preds = %108, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %112 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %113 = load i64*, i64** %112, align 8
  %114 = icmp eq i64* %113, null
  br i1 %114, label %124, label %115

115:                                              ; preds = %111
  %116 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %117 = bitcast %"class.v8::Isolate"* %116 to %"class.v8::internal::Isolate"*
  %118 = load i64, i64* %113, align 8
  %119 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %117, i64 %118) #9
  %120 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %116) #9
  br i1 %120, label %124, label %121

121:                                              ; preds = %115
  %122 = bitcast i64* %119 to %"class.v8::Value"*
  %123 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %116, %"class.v8::Value"* %122) #9
  br label %124

124:                                              ; preds = %121, %115, %111
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #9
  br label %140

140:                                              ; preds = %124, %136, %139
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element33ValueAsNumberAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLInputElement"*
  %25 = tail call double @_ZNK5blink16HTMLInputElement13valueAsNumberEv(%"class.blink::HTMLInputElement"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = getelementptr inbounds i64, i64* %27, i64 1
  %30 = bitcast i64* %29 to %"class.v8::Isolate"**
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %31, double %25) #9
  %33 = icmp eq %"class.v8::Number"* %32, null
  %34 = bitcast %"class.v8::Number"* %32 to i64*
  %35 = getelementptr inbounds i64, i64* %27, i64 2
  %36 = select i1 %33, i64* %35, i64* %34, !prof !3
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element33ValueAsNumberAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #9
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = bitcast i8* %24 to %"class.blink::HTMLInputElement"*
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = bitcast i64* %28 to %"class.v8::Isolate"**
  %30 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %23
  %35 = ptrtoint %"class.v8::Isolate"* %30 to i64
  %36 = add i64 %35, 160
  %37 = inttoptr i64 %36 to %"class.v8::Value"*
  br label %41

38:                                               ; preds = %23
  %39 = bitcast i64** %3 to %"class.v8::Value"**
  %40 = load %"class.v8::Value"*, %"class.v8::Value"** %39, align 8
  br label %41

41:                                               ; preds = %34, %38
  %42 = phi %"class.v8::Value"* [ %37, %34 ], [ %40, %38 ]
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %30, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #9
  %54 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %42) #9
  br i1 %54, label %55, label %58, !prof !4

55:                                               ; preds = %41
  %56 = bitcast %"class.v8::Value"* %42 to %"class.v8::Number"*
  %57 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %56) #9
  br label %62

58:                                               ; preds = %41
  %59 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %30, %"class.v8::Value"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %60 = load i32, i32* %51, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %55, %58
  %63 = phi double [ %57, %55 ], [ %59, %58 ]
  call void @_ZN5blink16HTMLInputElement16setValueAsNumberEdRNS_14ExceptionStateENS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %25, double %63, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2, i32 0) #9
  br label %64

64:                                               ; preds = %58, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %66, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %64
  %69 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %70 = bitcast %"class.v8::Isolate"* %69 to %"class.v8::internal::Isolate"*
  %71 = load i64, i64* %66, align 8
  %72 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %70, i64 %71) #9
  %73 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %69) #9
  br i1 %73, label %77, label %74

74:                                               ; preds = %68
  %75 = bitcast i64* %72 to %"class.v8::Value"*
  %76 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %69, %"class.v8::Value"* %75) #9
  br label %77

77:                                               ; preds = %74, %68, %64
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #9
  br label %93

93:                                               ; preds = %77, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element25WidthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLInputElement"*
  %25 = tail call i32 @_ZNK5blink16HTMLInputElement5widthEv(%"class.blink::HTMLInputElement"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = icmp sgt i32 %25, -1
  br i1 %29, label %30, label %47, !prof !4

30:                                               ; preds = %22
  %31 = icmp ult i32 %25, 1073741824
  br i1 %31, label %32, label %35, !prof !4

32:                                               ; preds = %30
  %33 = sext i32 %25 to i64
  %34 = shl nsw i64 %33, 1
  br label %59

35:                                               ; preds = %30
  %36 = getelementptr inbounds i64, i64* %27, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %38, i32 %25) #9
  %40 = icmp eq %"class.v8::Integer"* %39, null
  br i1 %40, label %41, label %44, !prof !3

41:                                               ; preds = %35
  %42 = getelementptr inbounds i64, i64* %27, i64 2
  %43 = load i64, i64* %42, align 8
  br label %59

44:                                               ; preds = %35
  %45 = bitcast %"class.v8::Integer"* %39 to i64*
  %46 = load i64, i64* %45, align 8
  br label %59

47:                                               ; preds = %22
  %48 = getelementptr inbounds i64, i64* %27, i64 1
  %49 = bitcast i64* %48 to %"class.v8::Isolate"**
  %50 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, align 8
  %51 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %50, i32 %25) #9
  %52 = icmp eq %"class.v8::Integer"* %51, null
  br i1 %52, label %53, label %56, !prof !3

53:                                               ; preds = %47
  %54 = getelementptr inbounds i64, i64* %27, i64 2
  %55 = load i64, i64* %54, align 8
  br label %59

56:                                               ; preds = %47
  %57 = bitcast %"class.v8::Integer"* %51 to i64*
  %58 = load i64, i64* %57, align 8
  br label %59

59:                                               ; preds = %32, %41, %44, %53, %56
  %60 = phi i64 [ %34, %32 ], [ %43, %41 ], [ %46, %44 ], [ %55, %53 ], [ %58, %56 ]
  store i64 %60, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element25WidthAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %23, i64* %24, align 8
  store i8 0, i8* %21, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 -1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i64 %28, -4294967296
  %33 = zext i32 %31 to i64
  %34 = or i64 %32, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load i16, i16* %36, align 2
  switch i16 %37, label %42 [
    i16 1057, label %38
    i16 1056, label %38
    i16 1040, label %38
  ]

38:                                               ; preds = %1, %1, %1
  %39 = add i64 %28, 19
  %40 = inttoptr i64 %39 to i8**
  %41 = load i8*, i8** %40, align 1
  br label %45

42:                                               ; preds = %1
  %43 = bitcast i64* %27 to %"class.v8::Object"*
  %44 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %43, i32 1) #9
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i8* [ %41, %38 ], [ %44, %42 ]
  %47 = bitcast i8* %46 to %"class.blink::HTMLInputElement"*
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %45
  %52 = load i64*, i64** %4, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 1
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 160
  %56 = inttoptr i64 %55 to %"class.v8::Value"*
  br label %60

57:                                               ; preds = %45
  %58 = bitcast i64** %25 to %"class.v8::Value"**
  %59 = load %"class.v8::Value"*, %"class.v8::Value"** %58, align 8
  br label %60

60:                                               ; preds = %51, %57
  %61 = phi %"class.v8::Value"* [ %56, %51 ], [ %59, %57 ]
  %62 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %61) #9
  br i1 %62, label %63, label %66, !prof !4

63:                                               ; preds = %60
  %64 = bitcast %"class.v8::Value"* %61 to %"class.v8::Uint32"*
  %65 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %64) #9
  br label %73

66:                                               ; preds = %60
  %67 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %61) #9
  br i1 %67, label %68, label %71, !prof !4

68:                                               ; preds = %66
  %69 = bitcast %"class.v8::Value"* %61 to %"class.v8::Int32"*
  %70 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %69) #9
  br label %73

71:                                               ; preds = %66
  %72 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %61, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %73

73:                                               ; preds = %63, %68, %71
  %74 = phi i32 [ %65, %63 ], [ %70, %68 ], [ %72, %71 ]
  %75 = load i32, i32* %17, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %73
  call void @_ZN5blink16HTMLInputElement8setWidthEj(%"class.blink::HTMLInputElement"* %47, i32 %74) #9
  br label %78

78:                                               ; preds = %73, %77
  %79 = load i8, i8* %21, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %78
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %82

82:                                               ; preds = %78, %81
  %83 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %85 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %86 = load i64*, i64** %85, align 8
  %87 = icmp eq i64* %86, null
  br i1 %87, label %97, label %88

88:                                               ; preds = %82
  %89 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %90 = bitcast %"class.v8::Isolate"* %89 to %"class.v8::internal::Isolate"*
  %91 = load i64, i64* %86, align 8
  %92 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %90, i64 %91) #9
  %93 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %89) #9
  br i1 %93, label %97, label %94

94:                                               ; preds = %88
  %95 = bitcast i64* %92 to %"class.v8::Value"*
  %96 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %89, %"class.v8::Value"* %95) #9
  br label %97

97:                                               ; preds = %94, %88, %82
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %97, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element32WillValidateAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLFormControlElement"*
  %25 = bitcast i8* %23 to i1 (%"class.blink::HTMLFormControlElement"*)***
  %26 = load i1 (%"class.blink::HTMLFormControlElement"*)**, i1 (%"class.blink::HTMLFormControlElement"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %26, i64 129
  %28 = load i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::HTMLFormControlElement"* %24) #9
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 3
  %33 = getelementptr inbounds i64, i64* %31, i64 1
  %34 = load i64, i64* %33, align 8
  %35 = select i1 %29, i64 184, i64 192
  %36 = add i64 %34, %35
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element28ValidityAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 104
  %25 = bitcast i8* %24 to %"class.blink::ListedElement"*
  %26 = tail call %"class.blink::ValidityState"* @_ZN5blink13ListedElement8validityEv(%"class.blink::ListedElement"* %25) #9
  %27 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %26, i64 0, i32 0
  %28 = icmp eq %"class.blink::ValidityState"* %26, null
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 3
  br i1 %28, label %32, label %38, !prof !3

32:                                               ; preds = %22
  %33 = getelementptr inbounds i64, i64* %30, i64 1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 176
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %31, align 8
  br label %61

38:                                               ; preds = %22
  %39 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %40 = load i64*, i64** %2, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 -1
  %42 = bitcast i64* %41 to %"class.v8::Object"*
  %43 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %31, %"class.blink::ScriptWrappable"* nonnull %27, %"class.v8::Object"* %42, %"class.blink::ScriptWrappable"* %39) #9
  br i1 %43, label %61, label %44

44:                                               ; preds = %38
  %45 = load i64*, i64** %2, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = bitcast i64* %46 to %"class.v8::Object"*
  %48 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %47) #9
  %49 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %48) #9
  %50 = bitcast %"class.blink::ValidityState"* %26 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %51 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, i64 7
  %53 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %52, align 8
  %54 = tail call %"class.v8::Value"* %53(%"class.blink::ScriptWrappable"* nonnull %27, %"class.blink::ScriptState"* %49) #9
  %55 = icmp eq %"class.v8::Value"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %44
  %57 = load i64*, i64** %29, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 3
  %59 = bitcast %"class.v8::Value"* %54 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %58, align 8
  br label %61

61:                                               ; preds = %32, %38, %44, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element37ValidationMessageAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLInputElement"*
  %25 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement17validationMessageEv(%"class.blink::HTMLInputElement"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %22
  %31 = load i64, i64* %28, align 8
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to %"class.blink::V8PerIsolateData"**
  %34 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %34, i64 0, i32 5, i32 0, i32 0, i32 0
  %36 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %35, align 8
  %37 = getelementptr inbounds i64, i64* %27, i64 3
  %38 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %36, i64 0, i32 3, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, %25
  br i1 %40, label %41, label %48

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %36, i64 0, i32 1, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = inttoptr i64 %43 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %37, align 8
  br label %55

48:                                               ; preds = %30
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %36, i64* %37, %"class.WTF::StringImpl"* nonnull %25) #9
  br label %55

49:                                               ; preds = %22
  %50 = getelementptr inbounds i64, i64* %27, i64 3
  %51 = load i64, i64* %28, align 8
  %52 = add i64 %51, 200
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %50, align 8
  br label %68

55:                                               ; preds = %41, %45, %48
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #9
  br label %68

68:                                               ; preds = %49, %64, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element26LabelsAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLElement"*
  %25 = tail call %"class.blink::LabelsNodeList"* @_ZN5blink11HTMLElement6labelsEv(%"class.blink::HTMLElement"* %24) #9
  %26 = getelementptr inbounds %"class.blink::LabelsNodeList", %"class.blink::LabelsNodeList"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::LabelsNodeList"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !3

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #9
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #9
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #9
  %49 = bitcast %"class.blink::LabelsNodeList"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #9
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element34SelectionStartAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #9
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = bitcast i8* %24 to %"class.blink::HTMLInputElement"*
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %30) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 56, i1 false)
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 2, i16* %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %33, align 2
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %35 = bitcast i8** %34 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i64 0, i64 0)>, <2 x i8*>* %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %38 = bitcast %"class.v8::Isolate"** %37 to i64*
  store i64 %29, i64* %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %41 = bitcast %"class.WTF::StringImpl"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #9
  %42 = call i64 @_ZNK5blink16HTMLInputElement24selectionStartForBindingERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* %25, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %43 = load i32, i32* %39, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %91

45:                                               ; preds = %23
  %46 = trunc i64 %42 to i8
  %47 = lshr i64 %42, 32
  %48 = trunc i64 %47 to i32
  %49 = icmp eq i8 %46, 0
  %50 = load i64*, i64** %26, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 3
  br i1 %49, label %83, label %52

52:                                               ; preds = %45
  %53 = icmp sgt i32 %48, -1
  br i1 %53, label %54, label %71, !prof !4

54:                                               ; preds = %52
  %55 = icmp ult i32 %48, 1073741824
  br i1 %55, label %56, label %59, !prof !4

56:                                               ; preds = %54
  %57 = ashr i64 %42, 32
  %58 = shl nsw i64 %57, 1
  br label %89

59:                                               ; preds = %54
  %60 = getelementptr inbounds i64, i64* %50, i64 1
  %61 = bitcast i64* %60 to %"class.v8::Isolate"**
  %62 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %61, align 8
  %63 = call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %62, i32 %48) #9
  %64 = icmp eq %"class.v8::Integer"* %63, null
  br i1 %64, label %65, label %68, !prof !3

65:                                               ; preds = %59
  %66 = getelementptr inbounds i64, i64* %50, i64 2
  %67 = load i64, i64* %66, align 8
  br label %89

68:                                               ; preds = %59
  %69 = bitcast %"class.v8::Integer"* %63 to i64*
  %70 = load i64, i64* %69, align 8
  br label %89

71:                                               ; preds = %52
  %72 = getelementptr inbounds i64, i64* %50, i64 1
  %73 = bitcast i64* %72 to %"class.v8::Isolate"**
  %74 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %73, align 8
  %75 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %74, i32 %48) #9
  %76 = icmp eq %"class.v8::Integer"* %75, null
  br i1 %76, label %77, label %80, !prof !3

77:                                               ; preds = %71
  %78 = getelementptr inbounds i64, i64* %50, i64 2
  %79 = load i64, i64* %78, align 8
  br label %89

80:                                               ; preds = %71
  %81 = bitcast %"class.v8::Integer"* %75 to i64*
  %82 = load i64, i64* %81, align 8
  br label %89

83:                                               ; preds = %45
  %84 = getelementptr inbounds i64, i64* %50, i64 1
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 176
  %87 = inttoptr i64 %86 to i64*
  %88 = load i64, i64* %87, align 8
  br label %89

89:                                               ; preds = %56, %65, %68, %77, %80, %83
  %90 = phi i64 [ %88, %83 ], [ %82, %80 ], [ %79, %77 ], [ %70, %68 ], [ %67, %65 ], [ %58, %56 ]
  store i64 %90, i64* %51, align 8
  br label %91

91:                                               ; preds = %89, %23
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #9
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #9
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #9
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #9
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %30) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element34SelectionStartAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !3

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %84

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to %"class.blink::HTMLInputElement"**
  %60 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %59, align 1
  br label %73

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = bitcast i8* %63 to %"class.blink::HTMLInputElement"*
  %66 = icmp sgt i32 %64, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = load i64*, i64** %4, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 160
  %72 = inttoptr i64 %71 to %"class.v8::Value"*
  br label %77

73:                                               ; preds = %57, %61
  %74 = phi %"class.blink::HTMLInputElement"* [ %60, %57 ], [ %65, %61 ]
  %75 = bitcast i64** %44 to %"class.v8::Value"**
  %76 = load %"class.v8::Value"*, %"class.v8::Value"** %75, align 8
  br label %77

77:                                               ; preds = %67, %73
  %78 = phi %"class.blink::HTMLInputElement"* [ %65, %67 ], [ %74, %73 ]
  %79 = phi %"class.v8::Value"* [ %72, %67 ], [ %76, %73 ]
  %80 = call i64 @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_18IDLIntegerTypeBaseIjLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %79, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %81 = load i32, i32* %17, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %77
  call void @_ZN5blink16HTMLInputElement27setSelectionStartForBindingEN4absl8optionalIjEERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* %78, i64 %80, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %84

84:                                               ; preds = %77, %83, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %85 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %86 = load i64*, i64** %85, align 8
  %87 = icmp eq i64* %86, null
  br i1 %87, label %97, label %88

88:                                               ; preds = %84
  %89 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %90 = bitcast %"class.v8::Isolate"* %89 to %"class.v8::internal::Isolate"*
  %91 = load i64, i64* %86, align 8
  %92 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %90, i64 %91) #9
  %93 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %89) #9
  br i1 %93, label %97, label %94

94:                                               ; preds = %88
  %95 = bitcast i64* %92 to %"class.v8::Value"*
  %96 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %89, %"class.v8::Value"* %95) #9
  br label %97

97:                                               ; preds = %94, %88, %84
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %97, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element32SelectionEndAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #9
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = bitcast i8* %24 to %"class.blink::HTMLInputElement"*
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %30) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 56, i1 false)
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 2, i16* %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %33, align 2
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %35 = bitcast i8** %34 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0)>, <2 x i8*>* %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %38 = bitcast %"class.v8::Isolate"** %37 to i64*
  store i64 %29, i64* %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %41 = bitcast %"class.WTF::StringImpl"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #9
  %42 = call i64 @_ZNK5blink16HTMLInputElement22selectionEndForBindingERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* %25, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %43 = load i32, i32* %39, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %91

45:                                               ; preds = %23
  %46 = trunc i64 %42 to i8
  %47 = lshr i64 %42, 32
  %48 = trunc i64 %47 to i32
  %49 = icmp eq i8 %46, 0
  %50 = load i64*, i64** %26, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 3
  br i1 %49, label %83, label %52

52:                                               ; preds = %45
  %53 = icmp sgt i32 %48, -1
  br i1 %53, label %54, label %71, !prof !4

54:                                               ; preds = %52
  %55 = icmp ult i32 %48, 1073741824
  br i1 %55, label %56, label %59, !prof !4

56:                                               ; preds = %54
  %57 = ashr i64 %42, 32
  %58 = shl nsw i64 %57, 1
  br label %89

59:                                               ; preds = %54
  %60 = getelementptr inbounds i64, i64* %50, i64 1
  %61 = bitcast i64* %60 to %"class.v8::Isolate"**
  %62 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %61, align 8
  %63 = call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %62, i32 %48) #9
  %64 = icmp eq %"class.v8::Integer"* %63, null
  br i1 %64, label %65, label %68, !prof !3

65:                                               ; preds = %59
  %66 = getelementptr inbounds i64, i64* %50, i64 2
  %67 = load i64, i64* %66, align 8
  br label %89

68:                                               ; preds = %59
  %69 = bitcast %"class.v8::Integer"* %63 to i64*
  %70 = load i64, i64* %69, align 8
  br label %89

71:                                               ; preds = %52
  %72 = getelementptr inbounds i64, i64* %50, i64 1
  %73 = bitcast i64* %72 to %"class.v8::Isolate"**
  %74 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %73, align 8
  %75 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %74, i32 %48) #9
  %76 = icmp eq %"class.v8::Integer"* %75, null
  br i1 %76, label %77, label %80, !prof !3

77:                                               ; preds = %71
  %78 = getelementptr inbounds i64, i64* %50, i64 2
  %79 = load i64, i64* %78, align 8
  br label %89

80:                                               ; preds = %71
  %81 = bitcast %"class.v8::Integer"* %75 to i64*
  %82 = load i64, i64* %81, align 8
  br label %89

83:                                               ; preds = %45
  %84 = getelementptr inbounds i64, i64* %50, i64 1
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 176
  %87 = inttoptr i64 %86 to i64*
  %88 = load i64, i64* %87, align 8
  br label %89

89:                                               ; preds = %56, %65, %68, %77, %80, %83
  %90 = phi i64 [ %88, %83 ], [ %82, %80 ], [ %79, %77 ], [ %70, %68 ], [ %67, %65 ], [ %58, %56 ]
  store i64 %90, i64* %51, align 8
  br label %91

91:                                               ; preds = %89, %23
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #9
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #9
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #9
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #9
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %30) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element32SelectionEndAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !3

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %84

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to %"class.blink::HTMLInputElement"**
  %60 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %59, align 1
  br label %73

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = bitcast i8* %63 to %"class.blink::HTMLInputElement"*
  %66 = icmp sgt i32 %64, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = load i64*, i64** %4, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 160
  %72 = inttoptr i64 %71 to %"class.v8::Value"*
  br label %77

73:                                               ; preds = %57, %61
  %74 = phi %"class.blink::HTMLInputElement"* [ %60, %57 ], [ %65, %61 ]
  %75 = bitcast i64** %44 to %"class.v8::Value"**
  %76 = load %"class.v8::Value"*, %"class.v8::Value"** %75, align 8
  br label %77

77:                                               ; preds = %67, %73
  %78 = phi %"class.blink::HTMLInputElement"* [ %65, %67 ], [ %74, %73 ]
  %79 = phi %"class.v8::Value"* [ %72, %67 ], [ %76, %73 ]
  %80 = call i64 @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_18IDLIntegerTypeBaseIjLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %79, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %81 = load i32, i32* %17, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %77
  call void @_ZN5blink16HTMLInputElement25setSelectionEndForBindingEN4absl8optionalIjEERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* %78, i64 %80, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %84

84:                                               ; preds = %77, %83, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %85 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %86 = load i64*, i64** %85, align 8
  %87 = icmp eq i64* %86, null
  br i1 %87, label %97, label %88

88:                                               ; preds = %84
  %89 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %90 = bitcast %"class.v8::Isolate"* %89 to %"class.v8::internal::Isolate"*
  %91 = load i64, i64* %86, align 8
  %92 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %90, i64 %91) #9
  %93 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %89) #9
  br i1 %93, label %97, label %94

94:                                               ; preds = %88
  %95 = bitcast i64* %92 to %"class.v8::Value"*
  %96 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %89, %"class.v8::Value"* %95) #9
  br label %97

97:                                               ; preds = %94, %88, %84
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %97, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element38SelectionDirectionAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #9
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = bitcast i8* %24 to %"class.blink::HTMLInputElement"*
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = bitcast i64* %28 to %"class.v8::Isolate"**
  %30 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8
  %31 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 56, i1 false)
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 2, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %36 = bitcast i8** %35 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.42, i64 0, i64 0)>, <2 x i8*>* %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %30, %"class.v8::Isolate"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %41 = bitcast %"class.WTF::StringImpl"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #9
  %42 = call %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement28selectionDirectionForBindingERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* %25, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %43 = load i32, i32* %39, align 8
  %44 = icmp eq i32 %43, 0
  %45 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %44, label %46, label %75

46:                                               ; preds = %23
  br i1 %45, label %47, label %55

47:                                               ; preds = %46
  %48 = load i64*, i64** %26, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 3
  %50 = getelementptr inbounds i64, i64* %48, i64 1
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 176
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %49, align 8
  br label %89

55:                                               ; preds = %46
  %56 = ptrtoint %"class.v8::Isolate"* %30 to i64
  %57 = add i64 %56, 8
  %58 = inttoptr i64 %57 to %"class.blink::V8PerIsolateData"**
  %59 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %59, i64 0, i32 5, i32 0, i32 0, i32 0
  %61 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %60, align 8
  %62 = load i64*, i64** %26, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 3
  %64 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %61, i64 0, i32 3, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, %42
  br i1 %66, label %67, label %74

67:                                               ; preds = %55
  %68 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %61, i64 0, i32 1, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = inttoptr i64 %69 to i64*
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %63, align 8
  br label %76

74:                                               ; preds = %55
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %61, i64* %63, %"class.WTF::StringImpl"* nonnull %42) #9
  br label %76

75:                                               ; preds = %23
  br i1 %45, label %89, label %76

76:                                               ; preds = %67, %71, %74, %75
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #9
  br label %89

89:                                               ; preds = %47, %75, %85, %88
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %90 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %91 = load i64*, i64** %90, align 8
  %92 = icmp eq i64* %91, null
  br i1 %92, label %102, label %93

93:                                               ; preds = %89
  %94 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8
  %95 = bitcast %"class.v8::Isolate"* %94 to %"class.v8::internal::Isolate"*
  %96 = load i64, i64* %91, align 8
  %97 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %95, i64 %96) #9
  %98 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %94) #9
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = bitcast i64* %97 to %"class.v8::Value"*
  %101 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %94, %"class.v8::Value"* %100) #9
  br label %102

102:                                              ; preds = %99, %93, %89
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #9
  br label %118

118:                                              ; preds = %102, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element38SelectionDirectionAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.42, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %45, !prof !3

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %155

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to %"class.blink::HTMLInputElement"**
  %62 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %61, align 1
  br label %75

63:                                               ; preds = %45
  %64 = bitcast i64* %48 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #9
  %66 = load i32, i32* %22, align 8
  %67 = bitcast i8* %65 to %"class.blink::HTMLInputElement"*
  %68 = icmp sgt i32 %66, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %63
  %70 = load i64*, i64** %6, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 1
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 160
  %74 = inttoptr i64 %73 to %"class.v8::Value"*
  br label %79

75:                                               ; preds = %59, %63
  %76 = phi %"class.blink::HTMLInputElement"* [ %62, %59 ], [ %67, %63 ]
  %77 = bitcast i64** %46 to %"class.v8::Value"**
  %78 = load %"class.v8::Value"*, %"class.v8::Value"** %77, align 8
  br label %79

79:                                               ; preds = %69, %75
  %80 = phi %"class.blink::HTMLInputElement"* [ %67, %69 ], [ %76, %75 ]
  %81 = phi %"class.v8::Value"* [ %74, %69 ], [ %78, %75 ]
  %82 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %82) #9
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %81, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %83 = load i32, i32* %19, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %132

85:                                               ; preds = %79
  %86 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #9
  %87 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %88 = load %"class.v8::String"*, %"class.v8::String"** %87, align 8
  %89 = icmp eq %"class.v8::String"* %88, null
  br i1 %89, label %92, label %90, !prof !3

90:                                               ; preds = %85
  %91 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %88, i32 0) #9
  br label %113

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %113, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %113

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i33
  %105 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #9
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !3

110:                                              ; preds = %101
  call void @llvm.trap() #9
  unreachable

111:                                              ; preds = %101
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %102, align 4
  br label %113

113:                                              ; preds = %90, %92, %96, %111
  %114 = phi %"class.WTF::StringImpl"* [ %91, %90 ], [ null, %92 ], [ %94, %96 ], [ %94, %111 ]
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %115, align 8
  call void @_ZN5blink16HTMLInputElement31setSelectionDirectionForBindingERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* %80, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #9
  br label %131

131:                                              ; preds = %113, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #9
  br label %132

132:                                              ; preds = %79, %131
  %133 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  store i8* null, i8** %133, align 8
  %135 = icmp eq i8* %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %132
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %134) #9
  br label %137

137:                                              ; preds = %136, %132
  %138 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #9
  br label %154

154:                                              ; preds = %137, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %82) #9
  br label %155

155:                                              ; preds = %154, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %156 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %157 = load i64*, i64** %156, align 8
  %158 = icmp eq i64* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %155
  %160 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %161 = bitcast %"class.v8::Isolate"* %160 to %"class.v8::internal::Isolate"*
  %162 = load i64, i64* %157, align 8
  %163 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %161, i64 %162) #9
  %164 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %160) #9
  br i1 %164, label %168, label %165

165:                                              ; preds = %159
  %166 = bitcast i64* %163 to %"class.v8::Value"*
  %167 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %160, %"class.v8::Value"* %166) #9
  br label %168

168:                                              ; preds = %165, %159, %155
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %184, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %169) #9
  br label %184

184:                                              ; preds = %168, %180, %183
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element25AlignAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.339"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #9
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element25AlignAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element26UseMapAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kUsemapAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.339"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #9
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element26UseMapAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #1 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kUsemapAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element35WebkitdirectoryAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 47) #9
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #9
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kWebkitdirectoryAttrE, align 8
  %42 = getelementptr inbounds i8, i8* %40, i64 96
  %43 = bitcast i8* %42 to %"class.blink::ElementData"**
  %44 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %43, align 8
  %45 = icmp eq %"class.blink::ElementData"* %44, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %39
  %47 = load i64*, i64** %2, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 3
  %49 = getelementptr inbounds i64, i64* %47, i64 1
  br label %108

50:                                               ; preds = %39
  %51 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %50
  %56 = bitcast %"class.blink::ElementData"* %44 to %"class.blink::UniqueElementData"*
  %57 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 1, i32 1
  %58 = bitcast %"class.blink::Member.339"* %57 to %"class.blink::Attribute"**
  %59 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %56, i64 0, i32 2, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  br label %67

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 1
  %64 = bitcast %"class.blink::ElementData"* %63 to %"class.blink::Attribute"*
  %65 = lshr i32 %52, 1
  %66 = and i32 %65, 268435455
  br label %67

67:                                               ; preds = %62, %55
  %68 = phi %"class.blink::Attribute"* [ %64, %62 ], [ %59, %55 ]
  %69 = phi i32 [ %66, %62 ], [ %61, %55 ]
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %68, i64 %70
  %72 = icmp eq i32 %69, 0
  br i1 %72, label %98, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %41, i64 0, i32 0, i32 0
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %78

78:                                               ; preds = %94, %73
  %79 = phi %"class.blink::Attribute"* [ %68, %73 ], [ %95, %94 ]
  %80 = phi i32 [ 0, %73 ], [ %96, %94 ]
  %81 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %79, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8
  %83 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %82, %75
  br i1 %83, label %102, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %82, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %86, %87
  br i1 %88, label %89, label %94

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %82, i64 0, i32 4, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %91, %92
  br i1 %93, label %102, label %94

94:                                               ; preds = %89, %84
  %95 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %79, i64 1
  %96 = add i32 %80, 1
  %97 = icmp eq %"class.blink::Attribute"* %95, %71
  br i1 %97, label %98, label %78

98:                                               ; preds = %94, %67
  %99 = load i64*, i64** %2, align 8
  %100 = getelementptr inbounds i64, i64* %99, i64 3
  %101 = getelementptr inbounds i64, i64* %99, i64 1
  br label %108

102:                                              ; preds = %78, %89
  %103 = icmp eq i32 %80, -1
  %104 = load i64*, i64** %2, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 3
  %106 = getelementptr inbounds i64, i64* %104, i64 1
  %107 = select i1 %103, i64 192, i64 184
  br label %108

108:                                              ; preds = %102, %98, %46
  %109 = phi i64* [ %49, %46 ], [ %101, %98 ], [ %106, %102 ]
  %110 = phi i64* [ %48, %46 ], [ %100, %98 ], [ %105, %102 ]
  %111 = phi i64 [ 192, %46 ], [ 192, %98 ], [ %107, %102 ]
  %112 = load i64, i64* %109, align 8
  %113 = add i64 %112, %111
  %114 = inttoptr i64 %113 to i64*
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %110, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element35WebkitdirectoryAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 47) #9
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #9
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %39
  %45 = load i64*, i64** %2, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 160
  %49 = inttoptr i64 %48 to %"class.v8::Value"*
  br label %53

50:                                               ; preds = %39
  %51 = bitcast i64** %19 to %"class.v8::Value"**
  %52 = load %"class.v8::Value"*, %"class.v8::Value"** %51, align 8
  br label %53

53:                                               ; preds = %44, %50
  %54 = phi %"class.v8::Value"* [ %49, %44 ], [ %52, %50 ]
  %55 = tail call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %54) #9
  br i1 %55, label %56, label %59, !prof !4

56:                                               ; preds = %53
  %57 = bitcast %"class.v8::Value"* %54 to %"class.v8::Boolean"*
  %58 = tail call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %57) #9
  br label %61

59:                                               ; preds = %53
  %60 = tail call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %54, %"class.v8::Isolate"* %6) #9
  br label %61

61:                                               ; preds = %56, %59
  %62 = phi i1 [ %58, %56 ], [ %60, %59 ]
  %63 = bitcast i8* %40 to %"class.blink::Element"*
  %64 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kWebkitdirectoryAttrE, align 8
  tail call void @_ZN5blink7Element19SetBooleanAttributeERKNS_13QualifiedNameEb(%"class.blink::Element"* %63, %"class.blink::QualifiedName"* dereferenceable(8) %64, i1 zeroext %62) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element31IncrementalAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 25) #9
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #9
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kIncrementalAttrE, align 8
  %42 = getelementptr inbounds i8, i8* %40, i64 96
  %43 = bitcast i8* %42 to %"class.blink::ElementData"**
  %44 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %43, align 8
  %45 = icmp eq %"class.blink::ElementData"* %44, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %39
  %47 = load i64*, i64** %2, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 3
  %49 = getelementptr inbounds i64, i64* %47, i64 1
  br label %108

50:                                               ; preds = %39
  %51 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %50
  %56 = bitcast %"class.blink::ElementData"* %44 to %"class.blink::UniqueElementData"*
  %57 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 1, i32 1
  %58 = bitcast %"class.blink::Member.339"* %57 to %"class.blink::Attribute"**
  %59 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %56, i64 0, i32 2, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  br label %67

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 1
  %64 = bitcast %"class.blink::ElementData"* %63 to %"class.blink::Attribute"*
  %65 = lshr i32 %52, 1
  %66 = and i32 %65, 268435455
  br label %67

67:                                               ; preds = %62, %55
  %68 = phi %"class.blink::Attribute"* [ %64, %62 ], [ %59, %55 ]
  %69 = phi i32 [ %66, %62 ], [ %61, %55 ]
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %68, i64 %70
  %72 = icmp eq i32 %69, 0
  br i1 %72, label %98, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %41, i64 0, i32 0, i32 0
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %78

78:                                               ; preds = %94, %73
  %79 = phi %"class.blink::Attribute"* [ %68, %73 ], [ %95, %94 ]
  %80 = phi i32 [ 0, %73 ], [ %96, %94 ]
  %81 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %79, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8
  %83 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %82, %75
  br i1 %83, label %102, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %82, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %86, %87
  br i1 %88, label %89, label %94

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %82, i64 0, i32 4, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %91, %92
  br i1 %93, label %102, label %94

94:                                               ; preds = %89, %84
  %95 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %79, i64 1
  %96 = add i32 %80, 1
  %97 = icmp eq %"class.blink::Attribute"* %95, %71
  br i1 %97, label %98, label %78

98:                                               ; preds = %94, %67
  %99 = load i64*, i64** %2, align 8
  %100 = getelementptr inbounds i64, i64* %99, i64 3
  %101 = getelementptr inbounds i64, i64* %99, i64 1
  br label %108

102:                                              ; preds = %78, %89
  %103 = icmp eq i32 %80, -1
  %104 = load i64*, i64** %2, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 3
  %106 = getelementptr inbounds i64, i64* %104, i64 1
  %107 = select i1 %103, i64 192, i64 184
  br label %108

108:                                              ; preds = %102, %98, %46
  %109 = phi i64* [ %49, %46 ], [ %101, %98 ], [ %106, %102 ]
  %110 = phi i64* [ %48, %46 ], [ %100, %98 ], [ %105, %102 ]
  %111 = phi i64 [ 192, %46 ], [ 192, %98 ], [ %107, %102 ]
  %112 = load i64, i64* %109, align 8
  %113 = add i64 %112, %111
  %114 = inttoptr i64 %113 to i64*
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %110, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element31IncrementalAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 25) #9
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #9
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %39
  %45 = load i64*, i64** %2, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 160
  %49 = inttoptr i64 %48 to %"class.v8::Value"*
  br label %53

50:                                               ; preds = %39
  %51 = bitcast i64** %19 to %"class.v8::Value"**
  %52 = load %"class.v8::Value"*, %"class.v8::Value"** %51, align 8
  br label %53

53:                                               ; preds = %44, %50
  %54 = phi %"class.v8::Value"* [ %49, %44 ], [ %52, %50 ]
  %55 = tail call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %54) #9
  br i1 %55, label %56, label %59, !prof !4

56:                                               ; preds = %53
  %57 = bitcast %"class.v8::Value"* %54 to %"class.v8::Boolean"*
  %58 = tail call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %57) #9
  br label %61

59:                                               ; preds = %53
  %60 = tail call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %54, %"class.v8::Isolate"* %6) #9
  br label %61

61:                                               ; preds = %56, %59
  %62 = phi i1 [ %58, %56 ], [ %60, %59 ]
  %63 = bitcast i8* %40 to %"class.blink::Element"*
  %64 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kIncrementalAttrE, align 8
  tail call void @_ZN5blink7Element19SetBooleanAttributeERKNS_13QualifiedNameEb(%"class.blink::Element"* %63, %"class.blink::QualifiedName"* dereferenceable(8) %64, i1 zeroext %62) #9
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element30CheckValidityOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 104
  %25 = bitcast i8* %24 to %"class.blink::ListedElement"*
  %26 = tail call zeroext i1 @_ZN5blink13ListedElement13checkValidityEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::ListedElement"* %25, %"class.blink::HeapVector.359"* null) #9
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 3
  %30 = getelementptr inbounds i64, i64* %28, i64 1
  %31 = load i64, i64* %30, align 8
  %32 = select i1 %26, i64 184, i64 192
  %33 = add i64 %31, %32
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element31ReportValidityOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 104
  %25 = bitcast i8* %24 to %"class.blink::ListedElement"*
  %26 = tail call zeroext i1 @_ZN5blink13ListedElement14reportValidityEv(%"class.blink::ListedElement"* %25) #9
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 3
  %30 = getelementptr inbounds i64, i64* %28, i64 1
  %31 = load i64, i64* %30, align 8
  %32 = select i1 %26, i64 184, i64 192
  %33 = add i64 %31, %32
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element23SelectOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::TextControlElement"*
  tail call void @_ZN5blink18TextControlElement6selectEv(%"class.blink::TextControlElement"* %24) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element34SetCustomValidityOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %75, !prof !3

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 56, i1 false)
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %18, align 2
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %20 = bitcast i8** %19 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.50, i64 0, i64 0)>, <2 x i8*>* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %23 = bitcast %"class.v8::Isolate"** %22 to i64*
  store i64 %14, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %26 = bitcast %"class.WTF::StringImpl"** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  %27 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %28 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %8) #9
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #9
  br label %45

45:                                               ; preds = %10, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %47, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %45
  %50 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %22, align 8
  %51 = bitcast %"class.v8::Isolate"* %50 to %"class.v8::internal::Isolate"*
  %52 = load i64, i64* %47, align 8
  %53 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %51, i64 %52) #9
  %54 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %50) #9
  br i1 %54, label %58, label %55

55:                                               ; preds = %49
  %56 = bitcast i64* %53 to %"class.v8::Value"*
  %57 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %50, %"class.v8::Value"* %56) #9
  br label %58

58:                                               ; preds = %55, %49, %45
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #9
  br label %74

74:                                               ; preds = %58, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %15) #9
  br label %285

75:                                               ; preds = %1
  %76 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds i64, i64* %77, i64 -1
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i64 %79, -4294967296
  %84 = zext i32 %82 to i64
  %85 = or i64 %83, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load i16, i16* %87, align 2
  switch i16 %88, label %93 [
    i16 1057, label %89
    i16 1056, label %89
    i16 1040, label %89
  ]

89:                                               ; preds = %75, %75, %75
  %90 = add i64 %79, 19
  %91 = inttoptr i64 %90 to i8**
  %92 = load i8*, i8** %91, align 1
  br label %105

93:                                               ; preds = %75
  %94 = bitcast i64* %78 to %"class.v8::Object"*
  %95 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %94, i32 1) #9
  %96 = load i32, i32* %7, align 8
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %105, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %100 = load i64*, i64** %99, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 160
  %104 = inttoptr i64 %103 to %"class.v8::Value"*
  br label %109

105:                                              ; preds = %89, %93
  %106 = phi i8* [ %92, %89 ], [ %95, %93 ]
  %107 = bitcast i64** %76 to %"class.v8::Value"**
  %108 = load %"class.v8::Value"*, %"class.v8::Value"** %107, align 8
  br label %109

109:                                              ; preds = %98, %105
  %110 = phi i1 [ false, %98 ], [ true, %105 ]
  %111 = phi i8* [ %95, %98 ], [ %106, %105 ]
  %112 = phi %"class.v8::Value"* [ %104, %98 ], [ %108, %105 ]
  %113 = bitcast %"class.v8::Value"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = and i64 %114, 3
  %116 = icmp eq i64 %115, 1
  br i1 %116, label %117, label %142, !prof !5

117:                                              ; preds = %109
  %118 = add i64 %114, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = and i64 %114, -4294967296
  %122 = zext i32 %120 to i64
  %123 = or i64 %121, %122
  %124 = add i64 %123, 7
  %125 = inttoptr i64 %124 to i16*
  %126 = load i16, i16* %125, align 2
  %127 = icmp ult i16 %126, 64
  br i1 %127, label %128, label %142, !prof !4

128:                                              ; preds = %117
  br i1 %110, label %136, label %129

129:                                              ; preds = %128
  %130 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %131 = load i64*, i64** %130, align 8
  %132 = getelementptr inbounds i64, i64* %131, i64 1
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 160
  %135 = inttoptr i64 %134 to %"class.v8::Value"*
  br label %139

136:                                              ; preds = %128
  %137 = bitcast i64** %76 to %"class.v8::Value"**
  %138 = load %"class.v8::Value"*, %"class.v8::Value"** %137, align 8
  br label %139

139:                                              ; preds = %129, %136
  %140 = phi %"class.v8::Value"* [ %135, %129 ], [ %138, %136 ]
  %141 = ptrtoint %"class.v8::Value"* %140 to i64
  br label %209

142:                                              ; preds = %109, %117
  %143 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = getelementptr inbounds i64, i64* %144, i64 1
  %146 = bitcast i64* %145 to %"class.v8::Isolate"**
  %147 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %146, align 8
  %148 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %148) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %148, i8 -86, i64 56, i1 false)
  %149 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %149, align 8
  %150 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %150, align 8
  %151 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %151, align 2
  %152 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %153 = bitcast i8** %152 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.50, i64 0, i64 0)>, <2 x i8*>* %153, align 8
  %154 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %154, align 8
  %155 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %147, %"class.v8::Isolate"** %155, align 8
  %156 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %156, align 8
  %157 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %158 = bitcast %"class.WTF::StringImpl"** %157 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 16, i1 false) #9
  %159 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %159) #9
  br i1 %110, label %164, label %160

160:                                              ; preds = %142
  %161 = load i64, i64* %145, align 8
  %162 = add i64 %161, 160
  %163 = inttoptr i64 %162 to %"class.v8::Value"*
  br label %167

164:                                              ; preds = %142
  %165 = bitcast i64** %76 to %"class.v8::Value"**
  %166 = load %"class.v8::Value"*, %"class.v8::Value"** %165, align 8
  br label %167

167:                                              ; preds = %160, %164
  %168 = phi %"class.v8::Value"* [ %163, %160 ], [ %166, %164 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %147, %"class.v8::Value"* %168, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #9
  %169 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1
  %172 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %171, i64 0, i32 0, i32 0
  %173 = bitcast %"class.WTF::String"* %171 to i64*
  %174 = load i64, i64* %173, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %172, align 8
  %175 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1
  %176 = bitcast %"class.std::__1::unique_ptr.786"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %159) #9
  %178 = load i32, i32* %156, align 8
  %179 = icmp eq i32 %178, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %149, align 8
  %180 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %181 = load i64*, i64** %180, align 8
  %182 = icmp eq i64* %181, null
  br i1 %182, label %192, label %183

183:                                              ; preds = %167
  %184 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %155, align 8
  %185 = bitcast %"class.v8::Isolate"* %184 to %"class.v8::internal::Isolate"*
  %186 = load i64, i64* %181, align 8
  %187 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %185, i64 %186) #9
  %188 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %184) #9
  br i1 %188, label %192, label %189

189:                                              ; preds = %183
  %190 = bitcast i64* %187 to %"class.v8::Value"*
  %191 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %184, %"class.v8::Value"* %190) #9
  br label %192

192:                                              ; preds = %189, %183, %167
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %192
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #9
  br label %208

208:                                              ; preds = %192, %204, %207
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %148) #9
  br i1 %179, label %209, label %263

209:                                              ; preds = %208, %139
  %210 = phi i64 [ 0, %139 ], [ %177, %208 ]
  %211 = phi i64 [ 0, %139 ], [ %174, %208 ]
  %212 = phi i64 [ %141, %139 ], [ %170, %208 ]
  %213 = getelementptr inbounds i8, i8* %111, i64 104
  %214 = bitcast i8* %213 to %"class.blink::ListedElement"*
  %215 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #9
  %216 = icmp eq i64 %212, 0
  br i1 %216, label %220, label %217, !prof !3

217:                                              ; preds = %209
  %218 = inttoptr i64 %212 to %"class.v8::String"*
  %219 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %218, i32 0) #9
  br label %240

220:                                              ; preds = %209
  %221 = inttoptr i64 %211 to %"class.WTF::StringImpl"*
  %222 = icmp eq i64 %211, 0
  br i1 %222, label %240, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %240

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = zext i32 %230 to i33
  %232 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %231, i33 1) #9
  %233 = extractvalue { i33, i1 } %232, 1
  %234 = extractvalue { i33, i1 } %232, 0
  %235 = icmp slt i33 %234, 0
  %236 = or i1 %233, %235
  br i1 %236, label %237, label %238, !prof !3

237:                                              ; preds = %228
  call void @llvm.trap() #9
  unreachable

238:                                              ; preds = %228
  %239 = trunc i33 %234 to i32
  store i32 %239, i32* %229, align 4
  br label %240

240:                                              ; preds = %217, %220, %223, %238
  %241 = phi %"class.WTF::StringImpl"* [ %219, %217 ], [ null, %220 ], [ %221, %223 ], [ %221, %238 ]
  %242 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %241, %"class.WTF::StringImpl"** %242, align 8
  %243 = bitcast i8* %213 to void (%"class.blink::ListedElement"*, %"class.WTF::String"*)***
  %244 = load void (%"class.blink::ListedElement"*, %"class.WTF::String"*)**, void (%"class.blink::ListedElement"*, %"class.WTF::String"*)*** %243, align 8
  %245 = getelementptr inbounds void (%"class.blink::ListedElement"*, %"class.WTF::String"*)*, void (%"class.blink::ListedElement"*, %"class.WTF::String"*)** %244, i64 21
  %246 = load void (%"class.blink::ListedElement"*, %"class.WTF::String"*)*, void (%"class.blink::ListedElement"*, %"class.WTF::String"*)** %245, align 8
  call void %246(%"class.blink::ListedElement"* %214, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %262, label %249

249:                                              ; preds = %240
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  br i1 %253, label %256, label %258

256:                                              ; preds = %249
  %257 = add i32 %255, -1
  store i32 %257, i32* %254, align 4
  br label %258

258:                                              ; preds = %256, %249
  %259 = phi i32 [ %257, %256 ], [ %255, %249 ]
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %258
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %247) #9
  br label %262

262:                                              ; preds = %240, %258, %261
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #9
  br label %263

263:                                              ; preds = %208, %262
  %264 = phi i64 [ %210, %262 ], [ %177, %208 ]
  %265 = phi i64 [ %211, %262 ], [ %174, %208 ]
  %266 = icmp eq i64 %264, 0
  br i1 %266, label %269, label %267

267:                                              ; preds = %263
  %268 = inttoptr i64 %264 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %268) #9
  br label %269

269:                                              ; preds = %267, %263
  %270 = inttoptr i64 %265 to %"class.WTF::StringImpl"*
  %271 = icmp eq i64 %265, 0
  br i1 %271, label %285, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = and i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  br i1 %276, label %279, label %281

279:                                              ; preds = %272
  %280 = add i32 %278, -1
  store i32 %280, i32* %277, align 4
  br label %281

281:                                              ; preds = %279, %272
  %282 = phi i32 [ %280, %279 ], [ %278, %272 ]
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %270) #9
  br label %285

285:                                              ; preds = %284, %281, %269, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element29SetRangeTextOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #9
  %9 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %8, i64 0, i32 5
  %14 = load %"class.base::TickClock"*, %"class.base::TickClock"** %13, align 8
  %15 = bitcast %"class.base::TickClock"* %14 to i64 (%"class.base::TickClock"*)***
  %16 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %16, i64 2
  %18 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %17, align 8
  %19 = tail call i64 %18(%"class.base::TickClock"* %14) #9
  %20 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %8, i64 0, i32 4, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp slt i64 %19, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %12
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %8) #9
  br label %24

24:                                               ; preds = %1, %12, %23
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %26, 4
  %28 = select i1 %27, i32 %26, i32 4
  switch i32 %28, label %211 [
    i32 4, label %29
    i32 3, label %30
    i32 1, label %31
  ]

29:                                               ; preds = %24
  tail call fastcc void @_ZN5blink12_GLOBAL__N_121v8_html_input_element30SetRangeTextOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %280

30:                                               ; preds = %24
  tail call fastcc void @_ZN5blink12_GLOBAL__N_121v8_html_input_element30SetRangeTextOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %280

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 1
  %35 = bitcast i64* %34 to %"class.v8::Isolate"**
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  %37 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 56, i1 false) #9
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %40, align 2
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %42 = bitcast i8** %41 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0)>, <2 x i8*>* %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %36, %"class.v8::Isolate"** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %47 = bitcast %"class.WTF::StringImpl"** %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #9
  %48 = icmp slt i32 %26, 1
  br i1 %48, label %49, label %69, !prof !3

49:                                               ; preds = %31
  %50 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #9
  %51 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %26) #9
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %52, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #9
  br label %68

68:                                               ; preds = %67, %64, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #9
  br label %181

69:                                               ; preds = %31
  %70 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds i64, i64* %71, i64 -1
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, -1
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = and i64 %73, -4294967296
  %78 = zext i32 %76 to i64
  %79 = or i64 %77, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load i16, i16* %81, align 2
  switch i16 %82, label %89 [
    i16 1057, label %83
    i16 1056, label %83
    i16 1040, label %83
  ]

83:                                               ; preds = %69, %69, %69
  %84 = bitcast i64* %71 to %"class.v8::Value"*
  %85 = add i64 %73, 19
  %86 = inttoptr i64 %85 to %"class.blink::HTMLInputElement"**
  %87 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %86, align 1
  %88 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %88) #9
  br label %105

89:                                               ; preds = %69
  %90 = bitcast i64* %72 to %"class.v8::Object"*
  %91 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %90, i32 1) #9
  %92 = load i32, i32* %25, align 8
  %93 = bitcast i8* %91 to %"class.blink::HTMLInputElement"*
  %94 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %94) #9
  %95 = icmp sgt i32 %92, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %89
  %97 = bitcast i64** %70 to %"class.v8::Value"**
  %98 = load %"class.v8::Value"*, %"class.v8::Value"** %97, align 8
  br label %105

99:                                               ; preds = %89
  %100 = load i64*, i64** %32, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 160
  %104 = inttoptr i64 %103 to %"class.v8::Value"*
  br label %105

105:                                              ; preds = %83, %96, %99
  %106 = phi i8* [ %94, %99 ], [ %88, %83 ], [ %94, %96 ]
  %107 = phi %"class.blink::HTMLInputElement"* [ %93, %99 ], [ %87, %83 ], [ %93, %96 ]
  %108 = phi %"class.v8::Value"* [ %104, %99 ], [ %84, %83 ], [ %98, %96 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %36, %"class.v8::Value"* %108, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %109 = load i32, i32* %45, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %158

111:                                              ; preds = %105
  %112 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #9
  %113 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %114 = load %"class.v8::String"*, %"class.v8::String"** %113, align 8
  %115 = icmp eq %"class.v8::String"* %114, null
  br i1 %115, label %118, label %116, !prof !3

116:                                              ; preds = %111
  %117 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %114, i32 0) #9
  br label %139

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %139, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i33
  %131 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %130, i33 1) #9
  %132 = extractvalue { i33, i1 } %131, 1
  %133 = extractvalue { i33, i1 } %131, 0
  %134 = icmp slt i33 %133, 0
  %135 = or i1 %132, %134
  br i1 %135, label %136, label %137, !prof !3

136:                                              ; preds = %127
  call void @llvm.trap() #9
  unreachable

137:                                              ; preds = %127
  %138 = trunc i33 %133 to i32
  store i32 %138, i32* %128, align 4
  br label %139

139:                                              ; preds = %137, %122, %118, %116
  %140 = phi %"class.WTF::StringImpl"* [ %117, %116 ], [ null, %118 ], [ %120, %122 ], [ %120, %137 ]
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %140, %"class.WTF::StringImpl"** %141, align 8
  call void @_ZN5blink16HTMLInputElement12setRangeTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* %107, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #9
  br label %157

157:                                              ; preds = %156, %153, %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #9
  br label %158

158:                                              ; preds = %157, %105
  %159 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %160 = load i8*, i8** %159, align 8
  store i8* null, i8** %159, align 8
  %161 = icmp eq i8* %160, null
  br i1 %161, label %163, label %162

162:                                              ; preds = %158
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %160) #9
  br label %163

163:                                              ; preds = %162, %158
  %164 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #9
  br label %180

180:                                              ; preds = %179, %176, %163
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %106) #9
  br label %181

181:                                              ; preds = %180, %68
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %182 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %183 = load i64*, i64** %182, align 8
  %184 = icmp eq i64* %183, null
  br i1 %184, label %194, label %185

185:                                              ; preds = %181
  %186 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %44, align 8
  %187 = bitcast %"class.v8::Isolate"* %186 to %"class.v8::internal::Isolate"*
  %188 = load i64, i64* %183, align 8
  %189 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %187, i64 %188) #9
  %190 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %186) #9
  br i1 %190, label %194, label %191

191:                                              ; preds = %185
  %192 = bitcast i64* %189 to %"class.v8::Value"*
  %193 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %186, %"class.v8::Value"* %192) #9
  br label %194

194:                                              ; preds = %191, %185, %181
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %196, label %210, label %197

197:                                              ; preds = %194
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  br i1 %201, label %204, label %206

204:                                              ; preds = %197
  %205 = add i32 %203, -1
  store i32 %205, i32* %202, align 4
  br label %206

206:                                              ; preds = %204, %197
  %207 = phi i32 [ %205, %204 ], [ %203, %197 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %195) #9
  br label %210

210:                                              ; preds = %194, %206, %209
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %37) #9
  br label %280

211:                                              ; preds = %24
  %212 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %213 = load i64*, i64** %212, align 8
  %214 = getelementptr inbounds i64, i64* %213, i64 1
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %216) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 -86, i64 56, i1 false)
  %217 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %217, align 8
  %218 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 6, i16* %218, align 8
  %219 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %219, align 2
  %220 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %221 = bitcast i8** %220 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0)>, <2 x i8*>* %221, align 8
  %222 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %222, align 8
  %223 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  %224 = bitcast %"class.v8::Isolate"** %223 to i64*
  store i64 %215, i64* %224, align 8
  %225 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %225, align 8
  %226 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %227 = bitcast %"class.WTF::StringImpl"** %226 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %227, i8 0, i64 16, i1 false) #9
  %228 = icmp slt i32 %26, 1
  br i1 %228, label %229, label %249, !prof !3

229:                                              ; preds = %211
  %230 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #9
  %231 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %26) #9
  %232 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %231, %"class.WTF::StringImpl"** %232, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #9
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %232, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %233, null
  br i1 %234, label %248, label %235

235:                                              ; preds = %229
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %235
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %235
  %245 = phi i32 [ %243, %242 ], [ %241, %235 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %233) #9
  br label %248

248:                                              ; preds = %229, %244, %247
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #9
  br label %250

249:                                              ; preds = %211
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.62, i64 0, i64 0)) #9
  br label %250

250:                                              ; preds = %249, %248
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %217, align 8
  %251 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %252 = load i64*, i64** %251, align 8
  %253 = icmp eq i64* %252, null
  br i1 %253, label %263, label %254

254:                                              ; preds = %250
  %255 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %223, align 8
  %256 = bitcast %"class.v8::Isolate"* %255 to %"class.v8::internal::Isolate"*
  %257 = load i64, i64* %252, align 8
  %258 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %256, i64 %257) #9
  %259 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %255) #9
  br i1 %259, label %263, label %260

260:                                              ; preds = %254
  %261 = bitcast i64* %258 to %"class.v8::Value"*
  %262 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %255, %"class.v8::Value"* %261) #9
  br label %263

263:                                              ; preds = %260, %254, %250
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %265, label %279, label %266

266:                                              ; preds = %263
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %272 = load i32, i32* %271, align 4
  br i1 %270, label %273, label %275

273:                                              ; preds = %266
  %274 = add i32 %272, -1
  store i32 %274, i32* %271, align 4
  br label %275

275:                                              ; preds = %273, %266
  %276 = phi i32 [ %274, %273 ], [ %272, %266 ]
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %275
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %264) #9
  br label %279

279:                                              ; preds = %263, %275, %278
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %216) #9
  br label %280

280:                                              ; preds = %279, %210, %30, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element34SetSelectionRangeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 2
  br i1 %24, label %25, label %45, !prof !3

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %264

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = sext i32 %23 to i64
  br label %48

48:                                               ; preds = %79, %45
  %49 = phi i64 [ %50, %79 ], [ %47, %45 ]
  %50 = add nsw i64 %49, -1
  %51 = icmp sgt i64 %49, 0
  br i1 %51, label %52, label %91

52:                                               ; preds = %48
  %53 = icmp sgt i64 %49, %47
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = load i64, i64* %8, align 8
  %56 = add i64 %55, 160
  %57 = inttoptr i64 %56 to %"class.v8::Value"*
  br label %62

58:                                               ; preds = %52
  %59 = load i64*, i64** %46, align 8
  %60 = getelementptr inbounds i64, i64* %59, i64 %50
  %61 = bitcast i64* %60 to %"class.v8::Value"*
  br label %62

62:                                               ; preds = %58, %54
  %63 = phi %"class.v8::Value"* [ %57, %54 ], [ %61, %58 ]
  %64 = bitcast %"class.v8::Value"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 1
  br i1 %67, label %68, label %87

68:                                               ; preds = %62
  %69 = add i64 %65, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = and i64 %65, -4294967296
  %73 = zext i32 %71 to i64
  %74 = or i64 %72, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i16*
  %77 = load i16, i16* %76, align 2
  %78 = icmp eq i16 %77, 67
  br i1 %78, label %79, label %85

79:                                               ; preds = %68
  %80 = add i64 %65, 23
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, -2
  %84 = icmp eq i32 %83, 10
  br i1 %84, label %48, label %89

85:                                               ; preds = %68
  %86 = trunc i64 %49 to i32
  br label %91

87:                                               ; preds = %62
  %88 = trunc i64 %49 to i32
  br label %91

89:                                               ; preds = %79
  %90 = trunc i64 %49 to i32
  br label %91

91:                                               ; preds = %48, %85, %87, %89
  %92 = phi i32 [ %86, %85 ], [ %88, %87 ], [ %90, %89 ], [ 0, %48 ]
  %93 = load i64*, i64** %46, align 8
  %94 = getelementptr inbounds i64, i64* %93, i64 -1
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, -1
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = and i64 %95, -4294967296
  %100 = zext i32 %98 to i64
  %101 = or i64 %99, %100
  %102 = add i64 %101, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load i16, i16* %103, align 2
  switch i16 %104, label %109 [
    i16 1057, label %105
    i16 1056, label %105
    i16 1040, label %105
  ]

105:                                              ; preds = %91, %91, %91
  %106 = add i64 %95, 19
  %107 = inttoptr i64 %106 to i8**
  %108 = load i8*, i8** %107, align 1
  br label %113

109:                                              ; preds = %91
  %110 = bitcast i64* %94 to %"class.v8::Object"*
  %111 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %110, i32 1) #9
  %112 = load i32, i32* %22, align 8
  br label %113

113:                                              ; preds = %105, %109
  %114 = phi i32 [ %23, %105 ], [ %112, %109 ]
  %115 = phi i8* [ %108, %105 ], [ %111, %109 ]
  %116 = bitcast i8* %115 to %"class.blink::HTMLInputElement"*
  %117 = icmp sgt i32 %114, 0
  br i1 %117, label %124, label %118

118:                                              ; preds = %113
  %119 = load i64*, i64** %6, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 160
  %123 = inttoptr i64 %122 to %"class.v8::Value"*
  br label %127

124:                                              ; preds = %113
  %125 = bitcast i64** %46 to %"class.v8::Value"**
  %126 = load %"class.v8::Value"*, %"class.v8::Value"** %125, align 8
  br label %127

127:                                              ; preds = %118, %124
  %128 = phi %"class.v8::Value"* [ %123, %118 ], [ %126, %124 ]
  %129 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %128) #9
  br i1 %129, label %130, label %133, !prof !4

130:                                              ; preds = %127
  %131 = bitcast %"class.v8::Value"* %128 to %"class.v8::Uint32"*
  %132 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %131) #9
  br label %142

133:                                              ; preds = %127
  %134 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %128) #9
  br i1 %134, label %135, label %138, !prof !4

135:                                              ; preds = %133
  %136 = bitcast %"class.v8::Value"* %128 to %"class.v8::Int32"*
  %137 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %136) #9
  br label %142

138:                                              ; preds = %133
  %139 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %128, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %140 = load i32, i32* %19, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %264

142:                                              ; preds = %135, %130, %138
  %143 = phi i32 [ %139, %138 ], [ %137, %135 ], [ %132, %130 ]
  %144 = load i32, i32* %22, align 8
  %145 = icmp sgt i32 %144, 1
  br i1 %145, label %152, label %146

146:                                              ; preds = %142
  %147 = load i64*, i64** %6, align 8
  %148 = getelementptr inbounds i64, i64* %147, i64 1
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 160
  %151 = inttoptr i64 %150 to %"class.v8::Value"*
  br label %156

152:                                              ; preds = %142
  %153 = load i64*, i64** %46, align 8
  %154 = getelementptr inbounds i64, i64* %153, i64 1
  %155 = bitcast i64* %154 to %"class.v8::Value"*
  br label %156

156:                                              ; preds = %146, %152
  %157 = phi %"class.v8::Value"* [ %151, %146 ], [ %155, %152 ]
  %158 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %157) #9
  br i1 %158, label %159, label %162, !prof !4

159:                                              ; preds = %156
  %160 = bitcast %"class.v8::Value"* %157 to %"class.v8::Uint32"*
  %161 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %160) #9
  br label %169

162:                                              ; preds = %156
  %163 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %157) #9
  br i1 %163, label %164, label %167, !prof !4

164:                                              ; preds = %162
  %165 = bitcast %"class.v8::Value"* %157 to %"class.v8::Int32"*
  %166 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %165) #9
  br label %169

167:                                              ; preds = %162
  %168 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %157, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %169

169:                                              ; preds = %159, %164, %167
  %170 = phi i32 [ %161, %159 ], [ %166, %164 ], [ %168, %167 ]
  %171 = load i32, i32* %19, align 8
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %264

173:                                              ; preds = %169
  %174 = icmp slt i32 %92, 3
  br i1 %174, label %175, label %176

175:                                              ; preds = %173
  call void @_ZN5blink16HTMLInputElement27setSelectionRangeForBindingEjjRNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* %116, i32 %143, i32 %170, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %264

176:                                              ; preds = %173
  %177 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %177) #9
  %178 = load i32, i32* %22, align 8
  %179 = icmp sgt i32 %178, 2
  br i1 %179, label %186, label %180

180:                                              ; preds = %176
  %181 = load i64*, i64** %6, align 8
  %182 = getelementptr inbounds i64, i64* %181, i64 1
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, 160
  %185 = inttoptr i64 %184 to %"class.v8::Value"*
  br label %190

186:                                              ; preds = %176
  %187 = load i64*, i64** %46, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 2
  %189 = bitcast i64* %188 to %"class.v8::Value"*
  br label %190

190:                                              ; preds = %180, %186
  %191 = phi %"class.v8::Value"* [ %185, %180 ], [ %189, %186 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %191, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %192 = load i32, i32* %19, align 8
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %241

194:                                              ; preds = %190
  %195 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #9
  %196 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %197 = load %"class.v8::String"*, %"class.v8::String"** %196, align 8
  %198 = icmp eq %"class.v8::String"* %197, null
  br i1 %198, label %201, label %199, !prof !3

199:                                              ; preds = %194
  %200 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %197, i32 0) #9
  br label %222

201:                                              ; preds = %194
  %202 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %202, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %222, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %222

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = zext i32 %212 to i33
  %214 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %213, i33 1) #9
  %215 = extractvalue { i33, i1 } %214, 1
  %216 = extractvalue { i33, i1 } %214, 0
  %217 = icmp slt i33 %216, 0
  %218 = or i1 %215, %217
  br i1 %218, label %219, label %220, !prof !3

219:                                              ; preds = %210
  call void @llvm.trap() #9
  unreachable

220:                                              ; preds = %210
  %221 = trunc i33 %216 to i32
  store i32 %221, i32* %211, align 4
  br label %222

222:                                              ; preds = %199, %201, %205, %220
  %223 = phi %"class.WTF::StringImpl"* [ %200, %199 ], [ null, %201 ], [ %203, %205 ], [ %203, %220 ]
  %224 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %223, %"class.WTF::StringImpl"** %224, align 8
  call void @_ZN5blink16HTMLInputElement27setSelectionRangeForBindingEjjRKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* %116, i32 %143, i32 %170, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %226 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %226, label %240, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  br i1 %231, label %234, label %236

234:                                              ; preds = %227
  %235 = add i32 %233, -1
  store i32 %235, i32* %232, align 4
  br label %236

236:                                              ; preds = %234, %227
  %237 = phi i32 [ %235, %234 ], [ %233, %227 ]
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %236
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %225) #9
  br label %240

240:                                              ; preds = %222, %236, %239
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #9
  br label %241

241:                                              ; preds = %190, %240
  %242 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %243 = load i8*, i8** %242, align 8
  store i8* null, i8** %242, align 8
  %244 = icmp eq i8* %243, null
  br i1 %244, label %246, label %245

245:                                              ; preds = %241
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %243) #9
  br label %246

246:                                              ; preds = %245, %241
  %247 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %249, label %263, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 0
  %256 = load i32, i32* %255, align 4
  br i1 %254, label %257, label %259

257:                                              ; preds = %250
  %258 = add i32 %256, -1
  store i32 %258, i32* %255, align 4
  br label %259

259:                                              ; preds = %257, %250
  %260 = phi i32 [ %258, %257 ], [ %256, %250 ]
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %259
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %248) #9
  br label %263

263:                                              ; preds = %262, %259, %246
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %177) #9
  br label %264

264:                                              ; preds = %263, %175, %169, %138, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %265 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  br i1 %267, label %277, label %268

268:                                              ; preds = %264
  %269 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %270 = bitcast %"class.v8::Isolate"* %269 to %"class.v8::internal::Isolate"*
  %271 = load i64, i64* %266, align 8
  %272 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %270, i64 %271) #9
  %273 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %269) #9
  br i1 %273, label %277, label %274

274:                                              ; preds = %268
  %275 = bitcast i64* %272 to %"class.v8::Value"*
  %276 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %269, %"class.v8::Value"* %275) #9
  br label %277

277:                                              ; preds = %274, %268, %264
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #9
  br label %293

293:                                              ; preds = %277, %289, %292
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element25StepDownOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #9
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = bitcast i8* %24 to %"class.blink::HTMLInputElement"*
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = bitcast i64* %28 to %"class.v8::Isolate"**
  %30 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8
  %31 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 56, i1 false)
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %36 = bitcast i8** %35 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i64 0, i64 0)>, <2 x i8*>* %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %30, %"class.v8::Isolate"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %41 = bitcast %"class.WTF::StringImpl"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #9
  %42 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %23
  %46 = load i64, i64* %28, align 8
  %47 = add i64 %46, 160
  %48 = inttoptr i64 %47 to %"class.v8::Value"*
  br label %52

49:                                               ; preds = %23
  %50 = bitcast i64** %3 to %"class.v8::Value"**
  %51 = load %"class.v8::Value"*, %"class.v8::Value"** %50, align 8
  br label %52

52:                                               ; preds = %45, %49
  %53 = phi %"class.v8::Value"* [ %48, %45 ], [ %51, %49 ]
  %54 = bitcast %"class.v8::Value"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, 3
  %57 = icmp eq i64 %56, 1
  br i1 %57, label %58, label %75

58:                                               ; preds = %52
  %59 = add i64 %55, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = and i64 %55, -4294967296
  %63 = zext i32 %61 to i64
  %64 = or i64 %62, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load i16, i16* %66, align 2
  %68 = icmp eq i16 %67, 67
  br i1 %68, label %69, label %75

69:                                               ; preds = %58
  %70 = add i64 %55, 23
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = and i32 %72, -2
  %74 = icmp eq i32 %73, 10
  br i1 %74, label %93, label %75

75:                                               ; preds = %58, %52, %69
  br i1 %44, label %80, label %76

76:                                               ; preds = %75
  %77 = load i64, i64* %28, align 8
  %78 = add i64 %77, 160
  %79 = inttoptr i64 %78 to %"class.v8::Value"*
  br label %83

80:                                               ; preds = %75
  %81 = bitcast i64** %3 to %"class.v8::Value"**
  %82 = load %"class.v8::Value"*, %"class.v8::Value"** %81, align 8
  br label %83

83:                                               ; preds = %76, %80
  %84 = phi %"class.v8::Value"* [ %79, %76 ], [ %82, %80 ]
  %85 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %84) #9
  br i1 %85, label %86, label %89, !prof !4

86:                                               ; preds = %83
  %87 = bitcast %"class.v8::Value"* %84 to %"class.v8::Int32"*
  %88 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %87) #9
  br label %93

89:                                               ; preds = %83
  %90 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %30, %"class.v8::Value"* %84, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %91 = load i32, i32* %39, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %86, %89, %69
  %94 = phi i32 [ %90, %89 ], [ 1, %69 ], [ %88, %86 ]
  call void @_ZN5blink16HTMLInputElement8stepDownEiRNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* %25, i32 %94, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %95

95:                                               ; preds = %89, %93
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #9
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #9
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #9
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element23StepUpOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #9
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = bitcast i8* %24 to %"class.blink::HTMLInputElement"*
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = bitcast i64* %28 to %"class.v8::Isolate"**
  %30 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8
  %31 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 56, i1 false)
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %36 = bitcast i8** %35 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i64 0, i64 0)>, <2 x i8*>* %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %30, %"class.v8::Isolate"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %41 = bitcast %"class.WTF::StringImpl"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #9
  %42 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %23
  %46 = load i64, i64* %28, align 8
  %47 = add i64 %46, 160
  %48 = inttoptr i64 %47 to %"class.v8::Value"*
  br label %52

49:                                               ; preds = %23
  %50 = bitcast i64** %3 to %"class.v8::Value"**
  %51 = load %"class.v8::Value"*, %"class.v8::Value"** %50, align 8
  br label %52

52:                                               ; preds = %45, %49
  %53 = phi %"class.v8::Value"* [ %48, %45 ], [ %51, %49 ]
  %54 = bitcast %"class.v8::Value"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, 3
  %57 = icmp eq i64 %56, 1
  br i1 %57, label %58, label %75

58:                                               ; preds = %52
  %59 = add i64 %55, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = and i64 %55, -4294967296
  %63 = zext i32 %61 to i64
  %64 = or i64 %62, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load i16, i16* %66, align 2
  %68 = icmp eq i16 %67, 67
  br i1 %68, label %69, label %75

69:                                               ; preds = %58
  %70 = add i64 %55, 23
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = and i32 %72, -2
  %74 = icmp eq i32 %73, 10
  br i1 %74, label %93, label %75

75:                                               ; preds = %58, %52, %69
  br i1 %44, label %80, label %76

76:                                               ; preds = %75
  %77 = load i64, i64* %28, align 8
  %78 = add i64 %77, 160
  %79 = inttoptr i64 %78 to %"class.v8::Value"*
  br label %83

80:                                               ; preds = %75
  %81 = bitcast i64** %3 to %"class.v8::Value"**
  %82 = load %"class.v8::Value"*, %"class.v8::Value"** %81, align 8
  br label %83

83:                                               ; preds = %76, %80
  %84 = phi %"class.v8::Value"* [ %79, %76 ], [ %82, %80 ]
  %85 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %84) #9
  br i1 %85, label %86, label %89, !prof !4

86:                                               ; preds = %83
  %87 = bitcast %"class.v8::Value"* %84 to %"class.v8::Int32"*
  %88 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %87) #9
  br label %93

89:                                               ; preds = %83
  %90 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %30, %"class.v8::Value"* %84, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %91 = load i32, i32* %39, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %86, %89, %69
  %94 = phi i32 [ %90, %89 ], [ 1, %69 ], [ %88, %86 ]
  call void @_ZN5blink16HTMLInputElement6stepUpEiRNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* %25, i32 %94, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %95

95:                                               ; preds = %89, %93
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8
  %101 = bitcast %"class.v8::Isolate"* %100 to %"class.v8::internal::Isolate"*
  %102 = load i64, i64* %97, align 8
  %103 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %102) #9
  %104 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %100) #9
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %103 to %"class.v8::Value"*
  %107 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %100, %"class.v8::Value"* %106) #9
  br label %108

108:                                              ; preds = %105, %99, %95
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #9
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.182"* byval(%"class.base::span.182") align 8) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element27CaptureAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 1851) #9
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #9
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kCaptureAttrE, align 8
  %42 = getelementptr inbounds i8, i8* %40, i64 96
  %43 = bitcast i8* %42 to %"class.blink::ElementData"**
  %44 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %43, align 8
  %45 = icmp eq %"class.blink::ElementData"* %44, null
  br i1 %45, label %96, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 0, i32 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.blink::ElementData"* %44 to %"class.blink::UniqueElementData"*
  %53 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 1, i32 1
  %54 = bitcast %"class.blink::Member.339"* %53 to %"class.blink::Attribute"**
  %55 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %52, i64 0, i32 2, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  br label %63

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 1
  %60 = bitcast %"class.blink::ElementData"* %59 to %"class.blink::Attribute"*
  %61 = lshr i32 %48, 1
  %62 = and i32 %61, 268435455
  br label %63

63:                                               ; preds = %58, %51
  %64 = phi %"class.blink::Attribute"* [ %60, %58 ], [ %55, %51 ]
  %65 = phi i32 [ %62, %58 ], [ %57, %51 ]
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %64, i64 %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %96, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %41, i64 0, i32 0, i32 0
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %74

74:                                               ; preds = %89, %69
  %75 = phi %"class.blink::Attribute"* [ %64, %69 ], [ %90, %89 ]
  %76 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %71
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %77, i64 0, i32 3, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %81, %82
  br i1 %83, label %84, label %89

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %77, i64 0, i32 4, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %86, %87
  br i1 %88, label %92, label %89

89:                                               ; preds = %84, %79
  %90 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %75, i64 1
  %91 = icmp eq %"class.blink::Attribute"* %90, %67
  br i1 %91, label %96, label %74

92:                                               ; preds = %84, %74
  %93 = icmp eq %"class.blink::Attribute"* %75, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %75, i64 0, i32 1
  br label %98

96:                                               ; preds = %89, %92, %63, %39
  %97 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %98

98:                                               ; preds = %94, %96
  %99 = phi %"class.WTF::AtomicString"* [ %97, %96 ], [ %95, %94 ]
  %100 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %103, label %111

103:                                              ; preds = %98
  %104 = load i64*, i64** %2, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 3
  %106 = getelementptr inbounds i64, i64* %104, i64 1
  %107 = load i64, i64* %106, align 8
  %108 = add i64 %107, 200
  %109 = inttoptr i64 %108 to i64*
  %110 = load i64, i64* %109, align 8
  store i64 %110, i64* %105, align 8
  br label %131

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::Isolate"* %6 to i64
  %113 = add i64 %112, 8
  %114 = inttoptr i64 %113 to %"class.blink::V8PerIsolateData"**
  %115 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %115, i64 0, i32 5, i32 0, i32 0, i32 0
  %117 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %116, align 8
  %118 = load i64*, i64** %2, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 3
  %120 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %117, i64 0, i32 3, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, %101
  br i1 %122, label %123, label %130

123:                                              ; preds = %111
  %124 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %117, i64 0, i32 1, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %131, label %127

127:                                              ; preds = %123
  %128 = inttoptr i64 %125 to i64*
  %129 = load i64, i64* %128, align 8
  store i64 %129, i64* %119, align 8
  br label %131

130:                                              ; preds = %111
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %117, i64* %119, %"class.WTF::StringImpl"* nonnull %101) #9
  br label %131

131:                                              ; preds = %103, %123, %127, %130
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element27CaptureAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %9) #9
  %11 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %10) #9
  %12 = icmp eq %"class.blink::ExecutionContext"* %11, null
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %11, i64 0, i32 3
  %14 = icmp eq %"class.blink::UseCounter"* %13, null
  %15 = or i1 %12, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::UseCounter"* %13 to void (%"class.blink::UseCounter"*, i32)***
  %18 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, i64 3
  %20 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %19, align 8
  tail call void %20(%"class.blink::UseCounter"* nonnull %13, i32 1852) #9
  br label %21

21:                                               ; preds = %1, %16
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds i64, i64* %23, i64 -1
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i64 %25, -4294967296
  %30 = zext i32 %28 to i64
  %31 = or i64 %29, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load i16, i16* %33, align 2
  switch i16 %34, label %39 [
    i16 1057, label %35
    i16 1056, label %35
    i16 1040, label %35
  ]

35:                                               ; preds = %21, %21, %21
  %36 = add i64 %25, 19
  %37 = inttoptr i64 %36 to i8**
  %38 = load i8*, i8** %37, align 1
  br label %42

39:                                               ; preds = %21
  %40 = bitcast i64* %24 to %"class.v8::Object"*
  %41 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %40, i32 1) #9
  br label %42

42:                                               ; preds = %35, %39
  %43 = phi i8* [ %38, %35 ], [ %41, %39 ]
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %42
  %48 = load i64*, i64** %5, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 1
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 160
  %52 = inttoptr i64 %51 to %"class.v8::Value"*
  br label %56

53:                                               ; preds = %42
  %54 = bitcast i64** %22 to %"class.v8::Value"**
  %55 = load %"class.v8::Value"*, %"class.v8::Value"** %54, align 8
  br label %56

56:                                               ; preds = %47, %53
  %57 = phi %"class.v8::Value"* [ %52, %47 ], [ %55, %53 ]
  %58 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %58) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 56, i1 false)
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %60, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %61, align 2
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %63 = bitcast i8** %62 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i64 0, i64 0)>, <2 x i8*>* %63, align 8
  %64 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %66, align 8
  %67 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %68 = bitcast %"class.WTF::StringImpl"** %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #9
  %69 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %69) #9
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %3, %"class.v8::Isolate"* %9, %"class.v8::Value"* %57, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %70 = load i32, i32* %66, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %127

72:                                               ; preds = %56
  %73 = bitcast i8* %43 to %"class.blink::Element"*
  %74 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kCaptureAttrE, align 8
  %75 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #9
  %76 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 0, i32 0
  %77 = load %"class.v8::String"*, %"class.v8::String"** %76, align 8
  %78 = icmp eq %"class.v8::String"* %77, null
  br i1 %78, label %81, label %79, !prof !3

79:                                               ; preds = %72
  %80 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %77, i32 0) #9
  br label %108

81:                                               ; preds = %72
  %82 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %108, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 acquire, align 4
  %88 = and i32 %87, 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %106, label %90

90:                                               ; preds = %85
  %91 = load atomic i32, i32* %86 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %108

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #9
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !3

103:                                              ; preds = %94
  call void @llvm.trap() #9
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %108

106:                                              ; preds = %85
  %107 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %83) #9
  br label %108

108:                                              ; preds = %79, %81, %90, %104, %106
  %109 = phi %"class.WTF::StringImpl"* [ %80, %79 ], [ %107, %106 ], [ %83, %90 ], [ %83, %104 ], [ null, %81 ]
  %110 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %109, %"class.WTF::StringImpl"** %110, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %73, %"class.blink::QualifiedName"* dereferenceable(8) %74, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #9
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #9
  br label %126

126:                                              ; preds = %108, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #9
  br label %127

127:                                              ; preds = %56, %126
  %128 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  store i8* null, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %132, label %131

131:                                              ; preds = %127
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %129) #9
  br label %132

132:                                              ; preds = %131, %127
  %133 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #9
  br label %149

149:                                              ; preds = %132, %145, %148
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %69) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %150 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %151 = load i64*, i64** %150, align 8
  %152 = icmp eq i64* %151, null
  br i1 %152, label %162, label %153

153:                                              ; preds = %149
  %154 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %65, align 8
  %155 = bitcast %"class.v8::Isolate"* %154 to %"class.v8::internal::Isolate"*
  %156 = load i64, i64* %151, align 8
  %157 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %155, i64 %156) #9
  %158 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %154) #9
  br i1 %158, label %162, label %159

159:                                              ; preds = %153
  %160 = bitcast i64* %157 to %"class.v8::Value"*
  %161 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %154, %"class.v8::Value"* %160) #9
  br label %162

162:                                              ; preds = %159, %153, %149
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #9
  br label %178

178:                                              ; preds = %162, %174, %177
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %58) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121v8_html_input_element33WebkitEntriesAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #1 {
  %2 = alloca %"class.blink::HeapVector.838", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #9
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #9
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 1326) #9
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  %24 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %23) #9
  %25 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %24)
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, -1
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i64 %26, -4294967296
  %31 = zext i32 %29 to i64
  %32 = or i64 %30, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load i16, i16* %34, align 2
  switch i16 %35, label %40 [
    i16 1057, label %36
    i16 1056, label %36
    i16 1040, label %36
  ]

36:                                               ; preds = %19, %19, %19
  %37 = add i64 %26, 19
  %38 = inttoptr i64 %37 to i8**
  %39 = load i8*, i8** %38, align 1
  br label %42

40:                                               ; preds = %19
  %41 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %23, i32 1) #9
  br label %42

42:                                               ; preds = %36, %40
  %43 = phi i8* [ %39, %36 ], [ %41, %40 ]
  %44 = bitcast i8* %43 to %"class.blink::HTMLInputElement"*
  %45 = bitcast %"class.blink::HeapVector.838"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #9
  call void @_ZN5blink26HTMLInputElementFileSystem13webkitEntriesEPNS_11ScriptStateERNS_16HTMLInputElementE(%"class.blink::HeapVector.838"* nonnull sret %2, %"class.blink::ScriptState"* %25, %"class.blink::HTMLInputElement"* dereferenceable(320) %44) #9
  %46 = bitcast %"class.blink::HeapVector.838"* %2 to %"class.blink::HeapVector.849"*
  %47 = call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %25, %"class.blink::HeapVector.849"* nonnull dereferenceable(16) %46) #9
  %48 = icmp eq %"class.v8::Value"* %47, null
  br i1 %48, label %68, label %49

49:                                               ; preds = %42
  %50 = bitcast %"class.v8::Value"* %47 to %"class.v8::Object"*
  %51 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"class.v8::Context"*, %"class.v8::Context"** %51, align 8
  %53 = icmp eq %"class.v8::Context"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = bitcast %"class.blink::ScriptState"* %25 to %"class.v8::internal::Isolate"**
  %56 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %55, align 8
  %57 = bitcast %"class.v8::Context"* %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %56, i64 %58) #9
  %60 = bitcast i64* %59 to %"class.v8::Context"*
  br label %61

61:                                               ; preds = %49, %54
  %62 = phi %"class.v8::Context"* [ %60, %54 ], [ null, %49 ]
  %63 = call i16 @_ZN2v86Object17SetIntegrityLevelENS_5LocalINS_7ContextEEENS_14IntegrityLevelE(%"class.v8::Object"* nonnull %50, %"class.v8::Context"* %62, i32 0) #9
  %64 = load i64*, i64** %3, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 3
  %66 = bitcast %"class.v8::Value"* %47 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %65, align 8
  br label %68

68:                                               ; preds = %42, %61
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages27ConstructorCalledAsFunctionEv() local_unnamed_addr #3

declare void @_ZN5blink17V8HTMLConstructor15HtmlConstructorERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_15WrapperTypeInfoENS_15HTMLElementTypeE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"struct.blink::WrapperTypeInfo"* dereferenceable(48), i32) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #3

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8), i8*, i8*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink31HTMLFormControlElementWithState23IDLExposedAutofillValueEv(%"class.blink::HTMLFormControlElementWithState"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.786"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #9
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #9
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #9
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.786"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #9
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #9
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #9
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.786"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #9
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare void @_ZN5blink31HTMLFormControlElementWithState26setIDLExposedAutofillValueERKN3WTF6StringE(%"class.blink::HTMLFormControlElementWithState"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #3

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #3

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #3

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #3

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #3

declare void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"*) local_unnamed_addr #3

declare void @_ZN5blink8bindings48PerformAttributeSetCEReactionsReflectTypeBooleanERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8), i8*, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"*, i1 zeroext, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #3

declare %"class.blink::HTMLFormElement"* @_ZNK5blink22HTMLFormControlElement9formOwnerEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !3
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #9
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #9
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !3
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #9
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !3

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.58, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i64 0, i64 0)) #9
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.58, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.60, i64 0, i64 0)) #9
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #1 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare %"class.blink::FileList"* @_ZNK5blink16HTMLInputElement5filesEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement8setFilesEPNS_8FileListE(%"class.blink::HTMLInputElement"*, %"class.blink::FileList"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #3

declare void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoERNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink22HTMLFormControlElement10formActionEv(%"class.blink::HTMLFormControlElement"*) local_unnamed_addr #3

declare void @_ZN5blink22HTMLFormControlElement13setFormActionERKN3WTF12AtomicStringE(%"class.blink::HTMLFormControlElement"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink22HTMLFormControlElement11formEnctypeEv(%"class.blink::HTMLFormControlElement"*) local_unnamed_addr #3

declare void @_ZN5blink22HTMLFormControlElement14setFormEnctypeERKN3WTF12AtomicStringE(%"class.blink::HTMLFormControlElement"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink22HTMLFormControlElement10formMethodEv(%"class.blink::HTMLFormControlElement"*) local_unnamed_addr #3

declare void @_ZN5blink22HTMLFormControlElement13setFormMethodERKN3WTF12AtomicStringE(%"class.blink::HTMLFormControlElement"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare i32 @_ZNK5blink16HTMLInputElement6heightEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #3

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #3

declare %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement9setHeightEj(%"class.blink::HTMLInputElement"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #3

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #3

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement16setIndeterminateEb(%"class.blink::HTMLInputElement"*, i1 zeroext) local_unnamed_addr #3

declare %"class.blink::HTMLElement"* @_ZNK5blink16HTMLInputElement4listEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #3

declare i32 @_ZNK5blink18TextControlElement9maxLengthEv(%"class.blink::TextControlElement"*) local_unnamed_addr #3

declare void @_ZN5blink18TextControlElement12setMaxLengthEiRNS_14ExceptionStateE(%"class.blink::TextControlElement"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare i32 @_ZNK5blink18TextControlElement9minLengthEv(%"class.blink::TextControlElement"*) local_unnamed_addr #3

declare void @_ZN5blink18TextControlElement12setMinLengthEiRNS_14ExceptionStateE(%"class.blink::TextControlElement"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare i32 @_ZNK5blink16HTMLInputElement4sizeEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement7setSizeEjRNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare void @_ZNK5blink7Element15GetURLAttributeERKNS_13QualifiedNameE(%"class.blink::KURL"* sret, %"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare void @_ZN5blink16HTMLInputElement7setTypeERKN3WTF12AtomicStringE(%"class.blink::HTMLInputElement"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE2EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.786"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %102

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #9
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #9
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #9
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.786"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %102

36:                                               ; preds = %26
  %37 = load i64, i64* %6, align 8
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %40, label %84

40:                                               ; preds = %36
  %41 = add i64 %37, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = and i64 %37, -4294967296
  %45 = zext i32 %43 to i64
  %46 = or i64 %44, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 67
  br i1 %50, label %51, label %84

51:                                               ; preds = %40
  %52 = add i64 %37, 23
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, -2
  %56 = icmp eq i32 %55, 6
  br i1 %56, label %57, label %84

57:                                               ; preds = %51
  %58 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %59 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %62, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #9
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !3

78:                                               ; preds = %69
  tail call void @llvm.trap() #9
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %57, %64, %79
  %82 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %83 = bitcast %"class.std::__1::unique_ptr.786"* %82 to i64*
  store i64 0, i64* %83, align 8
  br label %102

84:                                               ; preds = %40, %36, %51
  %85 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %85) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #9
  %86 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %87 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %86) #9
  %88 = icmp eq %"class.v8::String"* %87, null
  br i1 %88, label %89, label %96

89:                                               ; preds = %84
  %90 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %91 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %92 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %92, i64 5
  %94 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %93, align 8
  call void %94(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %90) #9
  %95 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 152, i1 false)
  br label %101

96:                                               ; preds = %84
  %97 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %87, %"class.v8::String"** %97, align 8
  %98 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %98, align 8
  %99 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %100 = bitcast %"class.std::__1::unique_ptr.786"* %99 to i64*
  store i64 0, i64* %100, align 8
  br label %101

101:                                              ; preds = %96, %89
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %85) #9
  br label %102

102:                                              ; preds = %101, %81, %28, %21
  ret void
}

declare void @_ZN5blink16HTMLInputElement8setValueERKN3WTF6StringERNS_14ExceptionStateENS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72), i32) local_unnamed_addr #3

declare void @_ZNK5blink16HTMLInputElement11valueAsDateEPNS_11ScriptStateE(%"class.blink::ScriptValue"* sret, %"class.blink::HTMLInputElement"*, %"class.blink::ScriptState"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9IDLObjectEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::ScriptValue"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #9
  br i1 %6, label %7, label %10

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  tail call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %9, %"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #9
  br label %62

10:                                               ; preds = %4
  %11 = bitcast %"class.v8::Value"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 3
  %14 = icmp eq i64 %13, 1
  br i1 %14, label %15, label %37

15:                                               ; preds = %10
  %16 = add i64 %12, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = and i64 %12, -4294967296
  %20 = zext i32 %18 to i64
  %21 = or i64 %19, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load i16, i16* %23, align 2
  %25 = icmp eq i16 %24, 67
  br i1 %25, label %26, label %37

26:                                               ; preds = %15
  %27 = add i64 %12, 23
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = ashr i32 %29, 1
  switch i32 %30, label %37 [
    i32 5, label %31
    i32 3, label %31
  ]

31:                                               ; preds = %26, %26
  %32 = ptrtoint %"class.v8::Isolate"* %1 to i64
  %33 = add i64 %32, 176
  %34 = inttoptr i64 %33 to %"class.v8::Value"*
  %35 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  tail call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %36, %"class.v8::Isolate"* %1, %"class.v8::Value"* %34) #9
  br label %62

37:                                               ; preds = %26, %15, %10
  %38 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #9
  %39 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i64 0, i64 0)) #9
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %40, align 8
  %41 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %42 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %42, i64 3
  %44 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %43, align 8
  call void %44(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #9
  br label %60

60:                                               ; preds = %37, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #9
  %61 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false)
  br label %62

62:                                               ; preds = %60, %31, %7
  ret void
}

declare void @_ZN5blink16HTMLInputElement14setValueAsDateEPNS_11ScriptStateERKNS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.472, %class.scoped_refptr.472* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #9
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.189"* dereferenceable(8) %9) #9
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #9
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #9
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #9
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.472* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #9
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #9
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #9
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #9
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #9
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #9
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #9
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.472* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #9
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #9
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #9
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #3

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #3

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.189"* dereferenceable(8)) local_unnamed_addr #3

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare double @_ZNK5blink16HTMLInputElement13valueAsNumberEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #3

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement16setValueAsNumberEdRNS_14ExceptionStateENS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"*, double, %"class.blink::ExceptionState"* dereferenceable(72), i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"*) local_unnamed_addr #3

declare double @_ZNK2v86Number5ValueEv(%"class.v8::Number"*) local_unnamed_addr #3

declare double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare i32 @_ZNK5blink16HTMLInputElement5widthEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement8setWidthEj(%"class.blink::HTMLInputElement"*, i32) local_unnamed_addr #3

declare %"class.blink::ValidityState"* @_ZN5blink13ListedElement8validityEv(%"class.blink::ListedElement"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement17validationMessageEv(%"class.blink::HTMLInputElement"*) unnamed_addr #3

declare %"class.blink::LabelsNodeList"* @_ZN5blink11HTMLElement6labelsEv(%"class.blink::HTMLElement"*) local_unnamed_addr #3

declare i64 @_ZNK5blink16HTMLInputElement24selectionStartForBindingERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_18IDLIntegerTypeBaseIjLNS_8bindings18IDLIntegerConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 comdat align 2 {
  %4 = bitcast %"class.v8::Value"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 3
  %7 = icmp eq i64 %6, 1
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = add i64 %5, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %5, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  %18 = icmp eq i16 %17, 67
  br i1 %18, label %19, label %24

19:                                               ; preds = %8
  %20 = add i64 %5, 23
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = ashr i32 %22, 1
  switch i32 %23, label %24 [
    i32 5, label %36
    i32 3, label %36
  ]

24:                                               ; preds = %19, %8, %3
  %25 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %1) #9
  br i1 %25, label %26, label %29, !prof !4

26:                                               ; preds = %24
  %27 = bitcast %"class.v8::Value"* %1 to %"class.v8::Uint32"*
  %28 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %27) #9
  br label %36

29:                                               ; preds = %24
  %30 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %1) #9
  br i1 %30, label %31, label %34, !prof !4

31:                                               ; preds = %29
  %32 = bitcast %"class.v8::Value"* %1 to %"class.v8::Int32"*
  %33 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %32) #9
  br label %36

34:                                               ; preds = %29
  %35 = tail call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  br label %36

36:                                               ; preds = %19, %19, %34, %31, %26
  %37 = phi i64 [ 0, %19 ], [ 1, %26 ], [ 1, %31 ], [ 1, %34 ], [ 0, %19 ]
  %38 = phi i32 [ undef, %19 ], [ %28, %26 ], [ %33, %31 ], [ %35, %34 ], [ undef, %19 ]
  %39 = zext i32 %38 to i64
  %40 = shl nuw i64 %39, 32
  %41 = or i64 %40, %37
  ret i64 %41
}

declare void @_ZN5blink16HTMLInputElement27setSelectionStartForBindingEN4absl8optionalIjEERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, i64, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare i64 @_ZNK5blink16HTMLInputElement22selectionEndForBindingERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement25setSelectionEndForBindingEN4absl8optionalIjEERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, i64, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement28selectionDirectionForBindingERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement31setSelectionDirectionForBindingERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.786"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %76

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #9
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #9
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #9
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.786"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %76

36:                                               ; preds = %26
  %37 = load i64, i64* %6, align 8
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %40, label %58

40:                                               ; preds = %36
  %41 = add i64 %37, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = and i64 %37, -4294967296
  %45 = zext i32 %43 to i64
  %46 = or i64 %44, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 67
  br i1 %50, label %51, label %58

51:                                               ; preds = %40
  %52 = add i64 %37, 23
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = ashr i32 %54, 1
  switch i32 %55, label %58 [
    i32 5, label %56
    i32 3, label %56
  ]

56:                                               ; preds = %51, %51
  %57 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 152, i1 false)
  br label %76

58:                                               ; preds = %51, %40, %36
  %59 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %59) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #9
  %60 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %61 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %60) #9
  %62 = icmp eq %"class.v8::String"* %61, null
  br i1 %62, label %63, label %70

63:                                               ; preds = %58
  %64 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %65 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %66 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %66, i64 5
  %68 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %67, align 8
  call void %68(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %64) #9
  %69 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 152, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %61, %"class.v8::String"** %71, align 8
  %72 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %72, align 8
  %73 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %74 = bitcast %"class.std::__1::unique_ptr.786"* %73 to i64*
  store i64 0, i64* %74, align 8
  br label %75

75:                                               ; preds = %70, %63
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %59) #9
  br label %76

76:                                               ; preds = %75, %56, %28, %21
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #3

declare void @_ZN5blink7Element19SetBooleanAttributeERKNS_13QualifiedNameEb(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink13ListedElement13checkValidityEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::ListedElement"*, %"class.blink::HeapVector.359"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink13ListedElement14reportValidityEv(%"class.blink::ListedElement"*) local_unnamed_addr #3

declare void @_ZN5blink18TextControlElement6selectEv(%"class.blink::TextControlElement"*) local_unnamed_addr #3

declare %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_121v8_html_input_element30SetRangeTextOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) unnamed_addr #1 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = bitcast i64* %10 to %"class.v8::Isolate"**
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %16, align 2
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %18 = bitcast i8** %17 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0)>, <2 x i8*>* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %23 = bitcast %"class.WTF::StringImpl"** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #9
  %24 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 3
  br i1 %26, label %27, label %47, !prof !3

27:                                               ; preds = %1
  %28 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %25) #9
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #9
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #9
  br label %46

46:                                               ; preds = %27, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %310

47:                                               ; preds = %1
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 -1
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, -1
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = and i64 %51, -4294967296
  %56 = zext i32 %54 to i64
  %57 = or i64 %55, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load i16, i16* %59, align 2
  switch i16 %60, label %66 [
    i16 1057, label %61
    i16 1056, label %61
    i16 1040, label %61
  ]

61:                                               ; preds = %47, %47, %47
  %62 = add i64 %51, 19
  %63 = inttoptr i64 %62 to %"class.blink::HTMLInputElement"**
  %64 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %63, align 1
  %65 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %65) #9
  br label %79

66:                                               ; preds = %47
  %67 = bitcast i64* %50 to %"class.v8::Object"*
  %68 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %67, i32 1) #9
  %69 = load i32, i32* %24, align 8
  %70 = bitcast i8* %68 to %"class.blink::HTMLInputElement"*
  %71 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %71) #9
  %72 = icmp sgt i32 %69, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %66
  %74 = load i64*, i64** %8, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 1
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, 160
  %78 = inttoptr i64 %77 to %"class.v8::Value"*
  br label %84

79:                                               ; preds = %61, %66
  %80 = phi i8* [ %65, %61 ], [ %71, %66 ]
  %81 = phi %"class.blink::HTMLInputElement"* [ %64, %61 ], [ %70, %66 ]
  %82 = bitcast i64** %48 to %"class.v8::Value"**
  %83 = load %"class.v8::Value"*, %"class.v8::Value"** %82, align 8
  br label %84

84:                                               ; preds = %73, %79
  %85 = phi i8* [ %71, %73 ], [ %80, %79 ]
  %86 = phi %"class.blink::HTMLInputElement"* [ %70, %73 ], [ %81, %79 ]
  %87 = phi %"class.v8::Value"* [ %78, %73 ], [ %83, %79 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %12, %"class.v8::Value"* %87, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #9
  %88 = load i32, i32* %21, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %287

90:                                               ; preds = %84
  %91 = load i32, i32* %24, align 8
  %92 = icmp sgt i32 %91, 1
  br i1 %92, label %99, label %93

93:                                               ; preds = %90
  %94 = load i64*, i64** %8, align 8
  %95 = getelementptr inbounds i64, i64* %94, i64 1
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 160
  %98 = inttoptr i64 %97 to %"class.v8::Value"*
  br label %103

99:                                               ; preds = %90
  %100 = load i64*, i64** %48, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = bitcast i64* %101 to %"class.v8::Value"*
  br label %103

103:                                              ; preds = %93, %99
  %104 = phi %"class.v8::Value"* [ %98, %93 ], [ %102, %99 ]
  %105 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %104) #9
  br i1 %105, label %106, label %109, !prof !4

106:                                              ; preds = %103
  %107 = bitcast %"class.v8::Value"* %104 to %"class.v8::Uint32"*
  %108 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %107) #9
  br label %116

109:                                              ; preds = %103
  %110 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %104) #9
  br i1 %110, label %111, label %114, !prof !4

111:                                              ; preds = %109
  %112 = bitcast %"class.v8::Value"* %104 to %"class.v8::Int32"*
  %113 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %112) #9
  br label %116

114:                                              ; preds = %109
  %115 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %104, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #9
  br label %116

116:                                              ; preds = %106, %111, %114
  %117 = phi i32 [ %108, %106 ], [ %113, %111 ], [ %115, %114 ]
  %118 = load i32, i32* %21, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %287

120:                                              ; preds = %116
  %121 = load i32, i32* %24, align 8
  %122 = icmp sgt i32 %121, 2
  br i1 %122, label %129, label %123

123:                                              ; preds = %120
  %124 = load i64*, i64** %8, align 8
  %125 = getelementptr inbounds i64, i64* %124, i64 1
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 160
  %128 = inttoptr i64 %127 to %"class.v8::Value"*
  br label %133

129:                                              ; preds = %120
  %130 = load i64*, i64** %48, align 8
  %131 = getelementptr inbounds i64, i64* %130, i64 2
  %132 = bitcast i64* %131 to %"class.v8::Value"*
  br label %133

133:                                              ; preds = %123, %129
  %134 = phi %"class.v8::Value"* [ %128, %123 ], [ %132, %129 ]
  %135 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %134) #9
  br i1 %135, label %136, label %139, !prof !4

136:                                              ; preds = %133
  %137 = bitcast %"class.v8::Value"* %134 to %"class.v8::Uint32"*
  %138 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %137) #9
  br label %146

139:                                              ; preds = %133
  %140 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %134) #9
  br i1 %140, label %141, label %144, !prof !4

141:                                              ; preds = %139
  %142 = bitcast %"class.v8::Value"* %134 to %"class.v8::Int32"*
  %143 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %142) #9
  br label %146

144:                                              ; preds = %139
  %145 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %134, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #9
  br label %146

146:                                              ; preds = %136, %141, %144
  %147 = phi i32 [ %138, %136 ], [ %143, %141 ], [ %145, %144 ]
  %148 = load i32, i32* %21, align 8
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %287

150:                                              ; preds = %146
  %151 = load i32, i32* %24, align 8
  %152 = icmp sgt i32 %151, 3
  br i1 %152, label %159, label %153

153:                                              ; preds = %150
  %154 = load i64*, i64** %8, align 8
  %155 = getelementptr inbounds i64, i64* %154, i64 1
  %156 = load i64, i64* %155, align 8
  %157 = add i64 %156, 160
  %158 = inttoptr i64 %157 to %"class.v8::Value"*
  br label %163

159:                                              ; preds = %150
  %160 = load i64*, i64** %48, align 8
  %161 = getelementptr inbounds i64, i64* %160, i64 3
  %162 = bitcast i64* %161 to %"class.v8::Value"*
  br label %163

163:                                              ; preds = %153, %159
  %164 = phi %"class.v8::Value"* [ %158, %153 ], [ %162, %159 ]
  %165 = bitcast %"class.v8::Value"* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = and i64 %166, 3
  %168 = icmp eq i64 %167, 1
  br i1 %168, label %169, label %186

169:                                              ; preds = %163
  %170 = add i64 %166, -1
  %171 = inttoptr i64 %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = and i64 %166, -4294967296
  %174 = zext i32 %172 to i64
  %175 = or i64 %173, %174
  %176 = add i64 %175, 7
  %177 = inttoptr i64 %176 to i16*
  %178 = load i16, i16* %177, align 2
  %179 = icmp eq i16 %178, 67
  br i1 %179, label %180, label %186

180:                                              ; preds = %169
  %181 = add i64 %166, 23
  %182 = inttoptr i64 %181 to i32*
  %183 = load i32, i32* %182, align 4
  %184 = and i32 %183, -2
  %185 = icmp eq i32 %184, 10
  br i1 %185, label %211, label %186

186:                                              ; preds = %169, %163, %180
  br i1 %152, label %193, label %187

187:                                              ; preds = %186
  %188 = load i64*, i64** %8, align 8
  %189 = getelementptr inbounds i64, i64* %188, i64 1
  %190 = load i64, i64* %189, align 8
  %191 = add i64 %190, 160
  %192 = inttoptr i64 %191 to %"class.v8::Value"*
  br label %197

193:                                              ; preds = %186
  %194 = load i64*, i64** %48, align 8
  %195 = getelementptr inbounds i64, i64* %194, i64 3
  %196 = bitcast i64* %195 to %"class.v8::Value"*
  br label %197

197:                                              ; preds = %187, %193
  %198 = phi %"class.v8::Value"* [ %192, %187 ], [ %196, %193 ]
  %199 = call { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %198, i64 4, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN5blink15V8SelectionMode13string_table_E, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.66, i64 0, i64 0), %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #9
  %200 = extractvalue { i8, i64 } %199, 0
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %206, label %202

202:                                              ; preds = %197
  %203 = extractvalue { i8, i64 } %199, 1
  %204 = getelementptr inbounds [4 x i8*], [4 x i8*]* @_ZN5blink15V8SelectionMode13string_table_E.const, i64 0, i64 %203
  %205 = load i8*, i8** %204, align 8
  br label %206

206:                                              ; preds = %197, %202
  %207 = phi i8* [ %205, %202 ], [ null, %197 ]
  %208 = ptrtoint i8* %207 to i64
  %209 = load i32, i32* %21, align 8
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %287

211:                                              ; preds = %206, %180
  %212 = phi i64 [ ptrtoint ([9 x i8]* @.str.65 to i64), %180 ], [ %208, %206 ]
  %213 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213) #9
  %214 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %215 = load %"class.v8::String"*, %"class.v8::String"** %214, align 8
  %216 = icmp eq %"class.v8::String"* %215, null
  br i1 %216, label %219, label %217, !prof !3

217:                                              ; preds = %211
  %218 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %215, i32 0) #9
  br label %240

219:                                              ; preds = %211
  %220 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %240, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %240

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = zext i32 %230 to i33
  %232 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %231, i33 1) #9
  %233 = extractvalue { i33, i1 } %232, 1
  %234 = extractvalue { i33, i1 } %232, 0
  %235 = icmp slt i33 %234, 0
  %236 = or i1 %233, %235
  br i1 %236, label %237, label %238, !prof !3

237:                                              ; preds = %228
  call void @llvm.trap() #9
  unreachable

238:                                              ; preds = %228
  %239 = trunc i33 %234 to i32
  store i32 %239, i32* %229, align 4
  br label %240

240:                                              ; preds = %217, %219, %223, %238
  %241 = phi %"class.WTF::StringImpl"* [ %218, %217 ], [ null, %219 ], [ %221, %223 ], [ %221, %238 ]
  %242 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %241, %"class.WTF::StringImpl"** %242, align 8
  %243 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #9
  %244 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244)
  %245 = inttoptr i64 %212 to i8*
  %246 = icmp eq i64 %212, 0
  br i1 %246, label %249, label %247

247:                                              ; preds = %240
  %248 = call i64 @strlen(i8* nonnull %245) #10
  br label %249

249:                                              ; preds = %240, %247
  %250 = phi i64 [ %248, %247 ], [ 0, %240 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %245, i64 %250) #9
  %251 = bitcast %"class.WTF::String"* %2 to i64*
  %252 = load i64, i64* %251, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %244)
  %253 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %254 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %252, i64* %254, align 8
  call void @_ZN5blink16HTMLInputElement12setRangeTextERKN3WTF6StringEjjS4_RNS_14ExceptionStateE(%"class.blink::HTMLInputElement"* %86, %"class.WTF::String"* nonnull dereferenceable(8) %6, i32 %117, i32 %147, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #9
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %270, label %257

257:                                              ; preds = %249
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  br i1 %261, label %264, label %266

264:                                              ; preds = %257
  %265 = add i32 %263, -1
  store i32 %265, i32* %262, align 4
  br label %266

266:                                              ; preds = %264, %257
  %267 = phi i32 [ %265, %264 ], [ %263, %257 ]
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %255) #9
  br label %270

270:                                              ; preds = %249, %266, %269
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #9
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %272 = icmp eq %"class.WTF::StringImpl"* %271, null
  br i1 %272, label %286, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  br i1 %277, label %280, label %282

280:                                              ; preds = %273
  %281 = add i32 %279, -1
  store i32 %281, i32* %278, align 4
  br label %282

282:                                              ; preds = %280, %273
  %283 = phi i32 [ %281, %280 ], [ %279, %273 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %271) #9
  br label %286

286:                                              ; preds = %270, %282, %285
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #9
  br label %287

287:                                              ; preds = %206, %146, %116, %84, %286
  %288 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %289 = load i8*, i8** %288, align 8
  store i8* null, i8** %288, align 8
  %290 = icmp eq i8* %289, null
  br i1 %290, label %292, label %291

291:                                              ; preds = %287
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %289) #9
  br label %292

292:                                              ; preds = %291, %287
  %293 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %293, align 8
  %295 = icmp eq %"class.WTF::StringImpl"* %294, null
  br i1 %295, label %309, label %296

296:                                              ; preds = %292
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %298 = load atomic i32, i32* %297 monotonic, align 4
  %299 = and i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 0
  %302 = load i32, i32* %301, align 4
  br i1 %300, label %303, label %305

303:                                              ; preds = %296
  %304 = add i32 %302, -1
  store i32 %304, i32* %301, align 4
  br label %305

305:                                              ; preds = %303, %296
  %306 = phi i32 [ %304, %303 ], [ %302, %296 ]
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %309

308:                                              ; preds = %305
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %294) #9
  br label %309

309:                                              ; preds = %292, %305, %308
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %85) #9
  br label %310

310:                                              ; preds = %309, %46
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %311 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %312 = load i64*, i64** %311, align 8
  %313 = icmp eq i64* %312, null
  br i1 %313, label %323, label %314

314:                                              ; preds = %310
  %315 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8
  %316 = bitcast %"class.v8::Isolate"* %315 to %"class.v8::internal::Isolate"*
  %317 = load i64, i64* %312, align 8
  %318 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %316, i64 %317) #9
  %319 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %315) #9
  br i1 %319, label %323, label %320

320:                                              ; preds = %314
  %321 = bitcast i64* %318 to %"class.v8::Value"*
  %322 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %315, %"class.v8::Value"* %321) #9
  br label %323

323:                                              ; preds = %320, %314, %310
  %324 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %325 = icmp eq %"class.WTF::StringImpl"* %324, null
  br i1 %325, label %339, label %326

326:                                              ; preds = %323
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %324, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = load atomic i32, i32* %327 monotonic, align 4
  %329 = and i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %324, i64 0, i32 0
  %332 = load i32, i32* %331, align 4
  br i1 %330, label %333, label %335

333:                                              ; preds = %326
  %334 = add i32 %332, -1
  store i32 %334, i32* %331, align 4
  br label %335

335:                                              ; preds = %333, %326
  %336 = phi i32 [ %334, %333 ], [ %332, %326 ]
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %339

338:                                              ; preds = %335
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %324) #9
  br label %339

339:                                              ; preds = %323, %335, %338
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #9
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #3

declare void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"*) local_unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement12setRangeTextERKN3WTF6StringEjjS4_RNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #3

declare { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i64, i8**, i8*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement12setRangeTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement27setSelectionRangeForBindingEjjRNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, i32, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement27setSelectionRangeForBindingEjjRKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement8stepDownEiRNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare void @_ZN5blink16HTMLInputElement6stepUpEiRNS_14ExceptionStateE(%"class.blink::HTMLInputElement"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink26HTMLInputElementFileSystem13webkitEntriesEPNS_11ScriptStateERNS_16HTMLInputElementE(%"class.blink::HeapVector.838"* sret, %"class.blink::ScriptState"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) local_unnamed_addr #3

declare i16 @_ZN2v86Object17SetIntegrityLevelENS_5LocalINS_7ContextEEENS_14IntegrityLevelE(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_15ScriptWrappableENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"*, %"class.blink::HeapVector.849"* dereferenceable(16)) local_unnamed_addr #8 comdat {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Isolate"*
  %11 = bitcast %"class.v8::Context"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #9
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi %"class.v8::Context"* [ %14, %9 ], [ null, %2 ]
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %16) #9
  %17 = getelementptr inbounds %"class.blink::HeapVector.849", %"class.blink::HeapVector.849"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %21, label %20, !prof !4

20:                                               ; preds = %15
  tail call void @llvm.trap() #9
  unreachable

21:                                               ; preds = %15
  %22 = tail call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %5, i32 %18) #9
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %16) #9
  %23 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %24 = icmp eq %"class.v8::Context"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %26, align 8
  %28 = bitcast %"class.v8::Context"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %27, i64 %29) #9
  %31 = bitcast i64* %30 to %"class.v8::Context"*
  br label %32

32:                                               ; preds = %21, %25
  %33 = phi %"class.v8::Context"* [ %31, %25 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.blink::HeapVector.849", %"class.blink::HeapVector.849"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Member.855"*, %"class.blink::Member.855"** %34, align 8
  %36 = load i32, i32* %17, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::Member.855", %"class.blink::Member.855"* %35, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %75, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.logging::CheckError"* %3 to i8*
  %42 = bitcast %"class.v8::Array"* %22 to %"class.v8::Object"*
  br label %43

43:                                               ; preds = %40, %71
  %44 = phi i32 [ 0, %40 ], [ %72, %71 ]
  %45 = phi %"class.blink::Member.855"* [ %35, %40 ], [ %73, %71 ]
  %46 = getelementptr inbounds %"class.blink::Member.855", %"class.blink::Member.855"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %46, align 8
  %48 = icmp eq %"class.blink::ScriptWrappable"* %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.67, i64 0, i64 0), i32 209, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.68, i64 0, i64 0)) #9
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #9
  br label %51

51:                                               ; preds = %49, %43
  %52 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %53 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* %47, %"class.v8::Isolate"* %52) #9
  %54 = bitcast %"class.v8::Object"* %53 to %"class.v8::Value"*
  %55 = icmp eq %"class.v8::Object"* %53, null
  br i1 %55, label %56, label %62

56:                                               ; preds = %51
  %57 = bitcast %"class.blink::ScriptWrappable"* %47 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %58 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %58, i64 7
  %60 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %59, align 8
  %61 = call %"class.v8::Value"* %60(%"class.blink::ScriptWrappable"* %47, %"class.blink::ScriptState"* %0) #9
  br label %62

62:                                               ; preds = %51, %56
  %63 = phi %"class.v8::Value"* [ %61, %56 ], [ %54, %51 ]
  %64 = icmp eq %"class.v8::Value"* %63, null
  br i1 %64, label %77, label %65

65:                                               ; preds = %62
  %66 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %33, i32 %44, %"class.v8::Value"* nonnull %63) #9
  %67 = trunc i16 %66 to i8
  %68 = icmp eq i8 %67, 0
  %69 = icmp ult i16 %66, 256
  %70 = or i1 %69, %68
  br i1 %70, label %77, label %71, !prof !6

71:                                               ; preds = %65
  %72 = add i32 %44, 1
  %73 = getelementptr inbounds %"class.blink::Member.855", %"class.blink::Member.855"* %45, i64 1
  %74 = icmp eq %"class.blink::Member.855"* %73, %38
  br i1 %74, label %75, label %43

75:                                               ; preds = %71, %32
  %76 = bitcast %"class.v8::Array"* %22 to %"class.v8::Value"*
  br label %77

77:                                               ; preds = %62, %65, %75
  %78 = phi %"class.v8::Value"* [ %76, %75 ], [ null, %65 ], [ null, %62 ]
  ret %"class.v8::Value"* %78
}

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #3

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #3

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #3

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #9
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #9
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #9
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %47, %"class.blink::ScriptWrappable"* %0) #9
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #9
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
!6 = !{!"branch_weights", i32 2002, i32 2000}
