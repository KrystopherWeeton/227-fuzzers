; ModuleID = '../../third_party/openscreen/src/cast/streaming/resolution.cc'
source_filename = "../../third_party/openscreen/src/cast/streaming/resolution.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.Json::Value" = type { %"union.Json::Value::ValueHolder", %struct.anon, %"class.Json::Value::Comments", i64, i64 }
%"union.Json::Value::ValueHolder" = type { i64 }
%struct.anon = type { i16, [2 x i8] }
%"class.Json::Value::Comments" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::array"* }
%"struct.std::__1::array" = type opaque
%"struct.openscreen::cast::Resolution" = type { i32, i32 }
%"struct.openscreen::cast::Dimensions" = type { i32, i32, %"class.openscreen::SimpleFraction" }
%"class.openscreen::SimpleFraction" = type { i32, i32 }
%"class.openscreen::ErrorOr" = type <{ %union.anon.18, i8, [7 x i8] }>
%union.anon.18 = type { %"class.openscreen::Error" }
%"class.openscreen::Error" = type { i8, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.10 }
%struct.anon.10 = type { i8 }

$_ZN10openscreen4json30ParseAndValidateSimpleFractionERKN4Json5ValueEPNS_14SimpleFractionE = comdat any

@_ZN10openscreen4cast12_GLOBAL__N_16kWidthE = internal constant [6 x i8] c"width\00", align 1
@_ZN10openscreen4cast12_GLOBAL__N_17kHeightE = internal constant [7 x i8] c"height\00", align 1
@_ZN10openscreen4cast12_GLOBAL__N_110kFrameRateE = internal constant [10 x i8] c"frameRate\00", align 1
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4cast10Resolution16ParseAndValidateERKN4Json5ValueEPS1_(%"class.Json::Value"* dereferenceable(40), %"struct.openscreen::cast::Resolution"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(40) %"class.Json::Value"* @_ZNK4Json5ValueixEPKc(%"class.Json::Value"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN10openscreen4cast12_GLOBAL__N_16kWidthE, i64 0, i64 0)) #11
  %4 = getelementptr inbounds %"struct.openscreen::cast::Resolution", %"struct.openscreen::cast::Resolution"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4Json5Value5isIntEv(%"class.Json::Value"* %3) #11
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = tail call i32 @_ZNK4Json5Value5asIntEv(%"class.Json::Value"* %3) #11
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %6
  store i32 %7, i32* %4, align 4
  %10 = tail call dereferenceable(40) %"class.Json::Value"* @_ZNK4Json5ValueixEPKc(%"class.Json::Value"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN10openscreen4cast12_GLOBAL__N_17kHeightE, i64 0, i64 0)) #11
  %11 = getelementptr inbounds %"struct.openscreen::cast::Resolution", %"struct.openscreen::cast::Resolution"* %1, i64 0, i32 1
  %12 = tail call zeroext i1 @_ZNK4Json5Value5isIntEv(%"class.Json::Value"* %10) #11
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = tail call i32 @_ZNK4Json5Value5asIntEv(%"class.Json::Value"* %10) #11
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  store i32 %14, i32* %11, align 4
  %17 = load i32, i32* %4, align 4
  %18 = icmp sgt i32 %17, 0
  %19 = icmp ne i32 %14, 0
  %20 = and i1 %18, %19
  ret i1 %20

21:                                               ; preds = %13, %9, %6, %2
  ret i1 false
}

declare dereferenceable(40) %"class.Json::Value"* @_ZNK4Json5ValueixEPKc(%"class.Json::Value"*, i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4cast10Resolution7IsValidEv(%"struct.openscreen::cast::Resolution"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.openscreen::cast::Resolution", %"struct.openscreen::cast::Resolution"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.openscreen::cast::Resolution", %"struct.openscreen::cast::Resolution"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10openscreen4cast10Resolution6ToJsonEv(%"class.Json::Value"* noalias sret, %"struct.openscreen::cast::Resolution"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.Json::Value", align 8
  %4 = alloca %"class.Json::Value", align 8
  %5 = bitcast %"class.Json::Value"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 40, i1 false)
  tail call void @_ZN4Json5ValueC1ENS_9ValueTypeE(%"class.Json::Value"* %0, i32 0) #11
  %6 = bitcast %"class.Json::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"struct.openscreen::cast::Resolution", %"struct.openscreen::cast::Resolution"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  call void @_ZN4Json5ValueC1Ei(%"class.Json::Value"* nonnull %3, i32 %8) #11
  %9 = call dereferenceable(40) %"class.Json::Value"* @_ZN4Json5ValueixEPKc(%"class.Json::Value"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN10openscreen4cast12_GLOBAL__N_16kWidthE, i64 0, i64 0)) #11
  %10 = call dereferenceable(40) %"class.Json::Value"* @_ZN4Json5ValueaSEOS0_(%"class.Json::Value"* %9, %"class.Json::Value"* nonnull dereferenceable(40) %3) #11
  call void @_ZN4Json5ValueD1Ev(%"class.Json::Value"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #11
  %11 = bitcast %"class.Json::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.openscreen::cast::Resolution", %"struct.openscreen::cast::Resolution"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  call void @_ZN4Json5ValueC1Ei(%"class.Json::Value"* nonnull %4, i32 %13) #11
  %14 = call dereferenceable(40) %"class.Json::Value"* @_ZN4Json5ValueixEPKc(%"class.Json::Value"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN10openscreen4cast12_GLOBAL__N_17kHeightE, i64 0, i64 0)) #11
  %15 = call dereferenceable(40) %"class.Json::Value"* @_ZN4Json5ValueaSEOS0_(%"class.Json::Value"* %14, %"class.Json::Value"* nonnull dereferenceable(40) %4) #11
  call void @_ZN4Json5ValueD1Ev(%"class.Json::Value"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN4Json5ValueC1ENS_9ValueTypeE(%"class.Json::Value"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4Json5ValueC1Ei(%"class.Json::Value"*, i32) unnamed_addr #1

declare dereferenceable(40) %"class.Json::Value"* @_ZN4Json5ValueixEPKc(%"class.Json::Value"*, i8*) local_unnamed_addr #1

declare dereferenceable(40) %"class.Json::Value"* @_ZN4Json5ValueaSEOS0_(%"class.Json::Value"*, %"class.Json::Value"* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4Json5ValueD1Ev(%"class.Json::Value"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4cast10ResolutioneqERKS1_(%"struct.openscreen::cast::Resolution"*, %"struct.openscreen::cast::Resolution"* dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::cast::Resolution", %"struct.openscreen::cast::Resolution"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.openscreen::cast::Resolution", %"struct.openscreen::cast::Resolution"* %1, i64 0, i32 0
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::cast::Resolution", %"struct.openscreen::cast::Resolution"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::cast::Resolution", %"struct.openscreen::cast::Resolution"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %9, align 4
  %13 = icmp eq i32 %11, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4cast10ResolutionneERKS1_(%"struct.openscreen::cast::Resolution"* nocapture readonly, %"struct.openscreen::cast::Resolution"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::cast::Resolution", %"struct.openscreen::cast::Resolution"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.openscreen::cast::Resolution", %"struct.openscreen::cast::Resolution"* %1, i64 0, i32 0
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::cast::Resolution", %"struct.openscreen::cast::Resolution"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::cast::Resolution", %"struct.openscreen::cast::Resolution"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %9, align 4
  %13 = icmp ne i32 %11, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ true, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4cast10Dimensions16ParseAndValidateERKN4Json5ValueEPS1_(%"class.Json::Value"* dereferenceable(40), %"struct.openscreen::cast::Dimensions"*) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(40) %"class.Json::Value"* @_ZNK4Json5ValueixEPKc(%"class.Json::Value"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN10openscreen4cast12_GLOBAL__N_16kWidthE, i64 0, i64 0)) #11
  %4 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4Json5Value5isIntEv(%"class.Json::Value"* %3) #11
  br i1 %5, label %6, label %37

6:                                                ; preds = %2
  %7 = tail call i32 @_ZNK4Json5Value5asIntEv(%"class.Json::Value"* %3) #11
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %37, label %9

9:                                                ; preds = %6
  store i32 %7, i32* %4, align 4
  %10 = tail call dereferenceable(40) %"class.Json::Value"* @_ZNK4Json5ValueixEPKc(%"class.Json::Value"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN10openscreen4cast12_GLOBAL__N_17kHeightE, i64 0, i64 0)) #11
  %11 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 1
  %12 = tail call zeroext i1 @_ZNK4Json5Value5isIntEv(%"class.Json::Value"* %10) #11
  br i1 %12, label %13, label %37

13:                                               ; preds = %9
  %14 = tail call i32 @_ZNK4Json5Value5asIntEv(%"class.Json::Value"* %10) #11
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %37, label %16

16:                                               ; preds = %13
  store i32 %14, i32* %11, align 4
  %17 = tail call dereferenceable(40) %"class.Json::Value"* @_ZNK4Json5ValueixEPKc(%"class.Json::Value"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10openscreen4cast12_GLOBAL__N_110kFrameRateE, i64 0, i64 0)) #11
  %18 = tail call zeroext i1 @_ZNK4Json5Value6isNullEv(%"class.Json::Value"* %17) #11
  br i1 %18, label %23, label %19

19:                                               ; preds = %16
  %20 = tail call dereferenceable(40) %"class.Json::Value"* @_ZNK4Json5ValueixEPKc(%"class.Json::Value"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10openscreen4cast12_GLOBAL__N_110kFrameRateE, i64 0, i64 0)) #11
  %21 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 2
  %22 = tail call zeroext i1 @_ZN10openscreen4json30ParseAndValidateSimpleFractionERKN4Json5ValueEPNS_14SimpleFractionE(%"class.Json::Value"* dereferenceable(40) %20, %"class.openscreen::SimpleFraction"* %21)
  br i1 %22, label %23, label %37

23:                                               ; preds = %19, %16
  %24 = load i32, i32* %4, align 4
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %37

26:                                               ; preds = %23
  %27 = load i32, i32* %11, align 4
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %37

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 2, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 2, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, 0
  br label %37

37:                                               ; preds = %13, %9, %6, %2, %33, %29, %26, %23, %19
  %38 = phi i1 [ false, %19 ], [ false, %26 ], [ false, %23 ], [ false, %29 ], [ %36, %33 ], [ false, %2 ], [ false, %6 ], [ false, %9 ], [ false, %13 ]
  ret i1 %38
}

declare zeroext i1 @_ZNK4Json5Value6isNullEv(%"class.Json::Value"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN10openscreen4json30ParseAndValidateSimpleFractionERKN4Json5ValueEPNS_14SimpleFractionE(%"class.Json::Value"* dereferenceable(40), %"class.openscreen::SimpleFraction"*) local_unnamed_addr #6 comdat {
  %3 = alloca %"class.openscreen::ErrorOr", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = tail call zeroext i1 @_ZNK4Json5Value5isIntEv(%"class.Json::Value"* %0) #11
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = tail call i32 @_ZNK4Json5Value5asIntEv(%"class.Json::Value"* %0) #11
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %62, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.openscreen::SimpleFraction"* %1 to i64*
  %11 = zext i32 %7 to i64
  %12 = or i64 %11, 4294967296
  store i64 %12, i64* %10, align 4
  br label %62

13:                                               ; preds = %2
  %14 = tail call zeroext i1 @_ZNK4Json5Value8isStringEv(%"class.Json::Value"* %0) #11
  br i1 %14, label %15, label %62

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.openscreen::ErrorOr", %"class.openscreen::ErrorOr"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  call void @_ZNK4Json5Value8asStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.Json::Value"* %0) #11
  %18 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %15
  %23 = zext i8 %20 to i64
  %24 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  br label %32

25:                                               ; preds = %15
  %26 = bitcast %"class.std::__1::basic_string"* %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp sgt i64 %29, -1
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %25
  call void @llvm.trap() #11
  unreachable

32:                                               ; preds = %22, %25
  %33 = phi i64 [ %27, %25 ], [ %24, %22 ]
  %34 = phi i64 [ %29, %25 ], [ %23, %22 ]
  %35 = inttoptr i64 %33 to i8*
  call void @_ZN10openscreen14SimpleFraction10FromStringEN4absl11string_viewE(%"class.openscreen::ErrorOr"* nonnull sret %3, i8* %35, i64 %34) #11
  %36 = load i8, i8* %19, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %32, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  %42 = getelementptr inbounds %"class.openscreen::ErrorOr", %"class.openscreen::ErrorOr"* %3, i64 0, i32 1
  %43 = load i8, i8* %42, align 8, !range !3
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.openscreen::ErrorOr"* %3 to i32*
  %47 = load i32, i32* %46, align 8
  %48 = icmp sgt i32 %47, -1
  br i1 %48, label %49, label %60

49:                                               ; preds = %45
  %50 = bitcast %"class.openscreen::ErrorOr"* %3 to %"class.openscreen::SimpleFraction"*
  %51 = getelementptr inbounds %"class.openscreen::SimpleFraction", %"class.openscreen::SimpleFraction"* %50, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %49
  %55 = bitcast %"class.openscreen::ErrorOr"* %3 to i64*
  %56 = bitcast %"class.openscreen::SimpleFraction"* %1 to i64*
  %57 = load i64, i64* %55, align 8
  store i64 %57, i64* %56, align 4
  br label %60

58:                                               ; preds = %41
  %59 = getelementptr inbounds %"class.openscreen::ErrorOr", %"class.openscreen::ErrorOr"* %3, i64 0, i32 0, i32 0
  call void @_ZN10openscreen5ErrorD1Ev(%"class.openscreen::Error"* nonnull %59) #11
  br label %60

60:                                               ; preds = %45, %54, %49, %58
  %61 = phi i1 [ false, %58 ], [ false, %49 ], [ true, %54 ], [ false, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  br label %62

62:                                               ; preds = %13, %9, %6, %60
  %63 = phi i1 [ %61, %60 ], [ true, %9 ], [ false, %6 ], [ false, %13 ]
  ret i1 %63
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4cast10Dimensions7IsValidEv(%"struct.openscreen::cast::Dimensions"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %17

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %0, i64 0, i32 2, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, -1
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %0, i64 0, i32 2, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %5 ], [ false, %1 ], [ false, %9 ], [ %16, %13 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10openscreen4cast10Dimensions6ToJsonEv(%"class.Json::Value"* noalias sret, %"struct.openscreen::cast::Dimensions"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.Json::Value", align 8
  %4 = alloca %"class.Json::Value", align 8
  %5 = alloca %"class.Json::Value", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.Json::Value"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 40, i1 false)
  tail call void @_ZN4Json5ValueC1ENS_9ValueTypeE(%"class.Json::Value"* %0, i32 0) #11
  %8 = bitcast %"class.Json::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  call void @_ZN4Json5ValueC1Ei(%"class.Json::Value"* nonnull %3, i32 %10) #11
  %11 = call dereferenceable(40) %"class.Json::Value"* @_ZN4Json5ValueixEPKc(%"class.Json::Value"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN10openscreen4cast12_GLOBAL__N_16kWidthE, i64 0, i64 0)) #11
  %12 = call dereferenceable(40) %"class.Json::Value"* @_ZN4Json5ValueaSEOS0_(%"class.Json::Value"* %11, %"class.Json::Value"* nonnull dereferenceable(40) %3) #11
  call void @_ZN4Json5ValueD1Ev(%"class.Json::Value"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #11
  %13 = bitcast %"class.Json::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  call void @_ZN4Json5ValueC1Ei(%"class.Json::Value"* nonnull %4, i32 %15) #11
  %16 = call dereferenceable(40) %"class.Json::Value"* @_ZN4Json5ValueixEPKc(%"class.Json::Value"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN10openscreen4cast12_GLOBAL__N_17kHeightE, i64 0, i64 0)) #11
  %17 = call dereferenceable(40) %"class.Json::Value"* @_ZN4Json5ValueaSEOS0_(%"class.Json::Value"* %16, %"class.Json::Value"* nonnull dereferenceable(40) %4) #11
  call void @_ZN4Json5ValueD1Ev(%"class.Json::Value"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #11
  %18 = bitcast %"class.Json::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  %19 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 2
  call void @_ZNK10openscreen14SimpleFraction8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.openscreen::SimpleFraction"* %20) #11
  call void @_ZN4Json5ValueC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Json::Value"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #11
  %21 = call dereferenceable(40) %"class.Json::Value"* @_ZN4Json5ValueixEPKc(%"class.Json::Value"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10openscreen4cast12_GLOBAL__N_110kFrameRateE, i64 0, i64 0)) #11
  %22 = call dereferenceable(40) %"class.Json::Value"* @_ZN4Json5ValueaSEOS0_(%"class.Json::Value"* %21, %"class.Json::Value"* nonnull dereferenceable(40) %5) #11
  call void @_ZN4Json5ValueD1Ev(%"class.Json::Value"* nonnull %5) #11
  %23 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %2, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  ret void
}

declare void @_ZNK10openscreen14SimpleFraction8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.openscreen::SimpleFraction"*) local_unnamed_addr #1

declare void @_ZN4Json5ValueC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Json::Value"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4cast10DimensionseqERKS1_(%"struct.openscreen::cast::Dimensions"*, %"struct.openscreen::cast::Dimensions"* dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 0
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %8, label %44

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %9, align 4
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %44

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %0, i64 0, i32 2, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = tail call double @nan(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #13
  br label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %0, i64 0, i32 2, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = sitofp i32 %22 to double
  %24 = sitofp i32 %16 to double
  %25 = fdiv double %23, %24
  br label %26

26:                                               ; preds = %18, %20
  %27 = phi double [ %19, %18 ], [ %25, %20 ]
  %28 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 2, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = tail call double @nan(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #13
  br label %39

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 2, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = sitofp i32 %35 to double
  %37 = sitofp i32 %29 to double
  %38 = fdiv double %36, %37
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi double [ %32, %31 ], [ %38, %33 ]
  %41 = fsub double %27, %40
  %42 = tail call double @llvm.fabs.f64(double %41) #11
  %43 = fcmp olt double %42, 1.000000e-04
  br label %44

44:                                               ; preds = %2, %39, %8
  %45 = phi i1 [ false, %8 ], [ %43, %39 ], [ false, %2 ]
  ret i1 %45
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4cast10DimensionsneERKS1_(%"struct.openscreen::cast::Dimensions"* nocapture readonly, %"struct.openscreen::cast::Dimensions"* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 0
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %8, label %44

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %9, align 4
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %44

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %0, i64 0, i32 2, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = tail call double @nan(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #13
  br label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %0, i64 0, i32 2, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = sitofp i32 %22 to double
  %24 = sitofp i32 %16 to double
  %25 = fdiv double %23, %24
  br label %26

26:                                               ; preds = %20, %18
  %27 = phi double [ %19, %18 ], [ %25, %20 ]
  %28 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 2, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = tail call double @nan(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #13
  br label %39

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"struct.openscreen::cast::Dimensions", %"struct.openscreen::cast::Dimensions"* %1, i64 0, i32 2, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = sitofp i32 %35 to double
  %37 = sitofp i32 %29 to double
  %38 = fdiv double %36, %37
  br label %39

39:                                               ; preds = %33, %31
  %40 = phi double [ %32, %31 ], [ %38, %33 ]
  %41 = fsub double %27, %40
  %42 = tail call double @llvm.fabs.f64(double %41) #11
  %43 = fcmp uge double %42, 1.000000e-04
  br label %44

44:                                               ; preds = %2, %8, %39
  %45 = phi i1 [ true, %8 ], [ %43, %39 ], [ true, %2 ]
  ret i1 %45
}

declare zeroext i1 @_ZNK4Json5Value5isIntEv(%"class.Json::Value"*) local_unnamed_addr #1

declare i32 @_ZNK4Json5Value5asIntEv(%"class.Json::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4Json5Value8isStringEv(%"class.Json::Value"*) local_unnamed_addr #1

declare void @_ZN10openscreen14SimpleFraction10FromStringEN4absl11string_viewE(%"class.openscreen::ErrorOr"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZNK4Json5Value8asStringEv(%"class.std::__1::basic_string"* sret, %"class.Json::Value"*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind
declare void @_ZN10openscreen5ErrorD1Ev(%"class.openscreen::Error"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #8

; Function Attrs: nounwind readonly
declare double @nan(i8*) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
