; ModuleID = '../../v8/src/json/json-stringifier.cc'
source_filename = "../../v8/src/json/json-stringifier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::nothrow_t" = type { i8 }
%"class.v8::internal::JsonStringifier" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1130", %"class.v8::internal::Handle.1131", i16*, i32, %"class.std::__1::vector.1132" }
%"class.v8::internal::IncrementalStringBuilder" = type { %"class.v8::internal::Isolate"*, i32, i8, i32, i32, %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129" }
%"class.v8::internal::Handle.1129" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Handle.1130" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1131" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::vector.1132" = type { %"class.std::__1::__vector_base.1133" }
%"class.std::__1::__vector_base.1133" = type { %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"*, %"class.std::__1::__compressed_pair.1135" }
%"struct.std::__1::pair.1134" = type { %"class.v8::internal::Handle.1128", %"class.v8::internal::Handle.1128" }
%"class.v8::internal::Handle.1128" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.1136" }
%"struct.std::__1::__compressed_pair_elem.1136" = type { %"struct.std::__1::pair.1134"* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.975", i32, i8, i8, i32, i32, %"class.std::__1::vector.981", %"class.std::__1::vector.981", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.988", i64, %"class.std::__1::unordered_map.989", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1045", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1083", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1117", %"class.std::__1::vector.1121", %"class.std::__1::vector.1121", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1050", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1054", %"class.std::__1::unique_ptr.1060", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1066", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1050" = type { %"struct.std::__1::__atomic_base.1051" }
%"struct.std::__1::__atomic_base.1051" = type { %"struct.std::__1::__cxx_atomic_impl.1052" }
%"struct.std::__1::__cxx_atomic_impl.1052" = type { %"struct.std::__1::__cxx_atomic_base_impl.1053" }
%"struct.std::__1::__cxx_atomic_base_impl.1053" = type { i32 }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1066" = type { %"class.std::__1::__vector_base.1067" }
%"class.std::__1::__vector_base.1067" = type { %"struct.std::__1::pair.1068"*, %"struct.std::__1::pair.1068"*, %"class.std::__1::__compressed_pair.1069" }
%"struct.std::__1::pair.1068" = type opaque
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"struct.std::__1::pair.1068"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.981" = type { %"class.std::__1::__vector_base.982" }
%"class.std::__1::__vector_base.982" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.988" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.989" = type { %"class.std::__1::__hash_table.990" }
%"class.std::__1::__hash_table.990" = type <{ %"class.std::__1::unique_ptr.991", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1009", [4 x i8] }>
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993", %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.994"** }
%"struct.std::__1::__hash_node_base.994" = type { %"struct.std::__1::__hash_node_base.994"* }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::__bucket_list_deallocator.996" }
%"class.std::__1::__bucket_list_deallocator.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.994" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1013", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1042", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1043", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1013" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1038, %union.anon.1040, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1038 = type { i64 }
%union.anon.1040 = type { i64 }
%"class.std::__1::weak_ptr.1042" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1043" = type { %"class.v8::PersistentBase.1044" }
%"class.v8::PersistentBase.1044" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1014", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1014" = type { %"class.std::__1::__hash_table.1015" }
%"class.std::__1::__hash_table.1015" = type <{ %"class.std::__1::unique_ptr.1016", %"class.std::__1::__compressed_pair.1026", %"class.std::__1::__compressed_pair.1031", %"class.std::__1::__compressed_pair.1034", [4 x i8] }>
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018", %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"struct.std::__1::__hash_node_base.1019"** }
%"struct.std::__1::__hash_node_base.1019" = type { %"struct.std::__1::__hash_node_base.1019"* }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.std::__1::__bucket_list_deallocator.1021" }
%"class.std::__1::__bucket_list_deallocator.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::__hash_node_base.1019" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1074", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1091" }
%"class.std::__1::unordered_map.1091" = type { %"class.std::__1::__hash_table.1092" }
%"class.std::__1::__hash_table.1092" = type <{ %"class.std::__1::unique_ptr.1093", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1111", [4 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095", %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1096"** }
%"struct.std::__1::__hash_node_base.1096" = type { %"struct.std::__1::__hash_node_base.1096"* }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::__bucket_list_deallocator.1098" }
%"class.std::__1::__bucket_list_deallocator.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1096" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1117" = type { %"struct.std::__1::__atomic_base.1118" }
%"struct.std::__1::__atomic_base.1118" = type { %"struct.std::__1::__cxx_atomic_impl.1119" }
%"struct.std::__1::__cxx_atomic_impl.1119" = type { %"struct.std::__1::__cxx_atomic_base_impl.1120" }
%"struct.std::__1::__cxx_atomic_base_impl.1120" = type { %"class.std::__1::vector.1121"* }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1145", %"class.v8::internal::Handle.1128", %"class.v8::internal::Handle.1128", %"class.v8::internal::Handle.1131", %"class.v8::internal::Handle.1128", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1145" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1182", i32, i32, i32, %"class.v8::internal::Handle.1183" }
%"class.v8::internal::Handle.1182" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1183" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::CircularStructureMessageBuilder" = type { %"class.v8::internal::IncrementalStringBuilder" }
%"class.v8::internal::Representation" = type { i8 }
%"class.v8::internal::String::FlatContent" = type { %union.anon.1192, i32, i32, %"class.v8::internal::CombinationAssertScope"* }
%union.anon.1192 = type { i8* }
%"class.v8::internal::CombinationAssertScope" = type { i8 }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::FlatStringReader" = type { %"class.v8::internal::Relocatable", %"class.v8::internal::Handle.1129", i8, i32, i8* }
%"class.v8::internal::LookupIterator::Key" = type { %"class.v8::internal::Handle.1145", i64 }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }

$_ZN2v88internal31CircularStructureMessageBuilder15AppendStartLineENS0_6HandleINS0_6ObjectEEE = comdat any

$_ZN2v88internal31CircularStructureMessageBuilder16AppendNormalLineENS0_6HandleINS0_6ObjectEEES4_ = comdat any

$_ZN2v88internal31CircularStructureMessageBuilder14AppendEllipsisEv = comdat any

$_ZN2v88internal31CircularStructureMessageBuilder17AppendClosingLineENS0_6HandleINS0_6ObjectEEE = comdat any

$_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE = comdat any

$_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE = comdat any

$_ZN2v88internal15JsonStringifier10Serialize_ILb0EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_ = comdat any

$_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE = comdat any

$_ZN2v88internal31CircularStructureMessageBuilder21AppendConstructorNameENS0_6HandleINS0_6ObjectEEE = comdat any

$_ZN2v88internal31CircularStructureMessageBuilder9AppendKeyENS0_6HandleINS0_6ObjectEEE = comdat any

$_ZN2v88internal31CircularStructureMessageBuilder9AppendSmiENS0_3SmiE = comdat any

$_ZNK2v88internal14Representation8MnemonicEv = comdat any

$_ZN2v88internal15JsonStringifier10Serialize_ILb1EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_ = comdat any

$_ZN2v88internal11RelocatableD2Ev = comdat any

$_ZN2v88internal11RelocatableD0Ev = comdat any

$_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE = comdat any

$_ZN2v88internal11Relocatable21PostGarbageCollectionEv = comdat any

$_ZTVN2v88internal11RelocatableE = comdat any

@.str = private unnamed_addr constant [2049 x i8] c"\5Cu0000\00 \5Cu0001\00 \5Cu0002\00 \5Cu0003\00 \5Cu0004\00 \5Cu0005\00 \5Cu0006\00 \5Cu0007\00 \5Cb\00     \5Ct\00     \5Cn\00     \5Cu000b\00 \5Cf\00     \5Cr\00     \5Cu000e\00 \5Cu000f\00 \5Cu0010\00 \5Cu0011\00 \5Cu0012\00 \5Cu0013\00 \5Cu0014\00 \5Cu0015\00 \5Cu0016\00 \5Cu0017\00 \5Cu0018\00 \5Cu0019\00 \5Cu001a\00 \5Cu001b\00 \5Cu001c\00 \5Cu001d\00 \5Cu001e\00 \5Cu001f`\00      a\00      b\00      c\00      d\00      e\00      f\00      g\00      h\00      i\00      j\00      k\00      l\00      m\00      n\00      o\00      p\00      q\00      r\00      s\00      t\00      u\00      v\00      w\00      x\00      y\00      z\00      {\00      |\00      }\00      ~\00      \7F\00      \80\00      \81\00      \82\00      \83\00      \84\00      \85\00      \86\00      \87\00      \88\00      \89\00      \8A\00      \8B\00      \8C\00      \8D\00      \8E\00      \8F\00      \90\00      \91\00      \92\00      \93\00      \94\00      \95\00      \96\00      \97\00      \98\00      \99\00      \9A\00      \9B\00      \9C\00      \9D\00      \9E\00      \9F\00      \A0\00      \A1\00      \A2\00      \A3\00      \A4\00      \A5\00      \A6\00      \A7\00      \A8\00      \A9\00      \AA\00      \AB\00      \AC\00      \AD\00      \AE\00      \AF\00      \B0\00      \B1\00      \B2\00      \B3\00      \B4\00      \B5\00      \B6\00      \B7\00      \B8\00      \B9\00      \BA\00      \BB\00      \BC\00      \BD\00      \BE\00      \BF\00      \C0\00      \C1\00      \C2\00      \C3\00      \C4\00      \C5\00      \C6\00      \C7\00      \C8\00      \C9\00      \CA\00      \CB\00      \CC\00      \CD\00      \CE\00      \CF\00      \D0\00      \D1\00      \D2\00      \D3\00      \D4\00      \D5\00      \D6\00      \D7\00      \D8\00      \D9\00      \DA\00      \DB\00      \DC\00      \DD\00      \DE\00      \DF\00      \E0\00      \E1\00      \E2\00      \E3\00      \E4\00      \E5\00      \E6\00      \E7\00      \E8\00      \E9\00      \EA\00      \EB\00      \EC\00      \ED\00      \EE\00      \EF\00      \F0\00      \F1\00      \F2\00      \F3\00      \F4\00      \F5\00      \F6\00      \F7\00      \F8\00      \F9\00      \FA\00      \FB\00      \FC\00      \FD\00      \FE\00      \FF\00      \00", align 1
@_ZN2v88internal15JsonStringifier15JsonEscapeTableE = hidden local_unnamed_addr constant i8* getelementptr inbounds ([2049 x i8], [2049 x i8]* @.str, i64 0, i64 0), align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.5 = private unnamed_addr constant [40 x i8] c"object->length().ToArrayLength(&length)\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c"starting at object with constructor \00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c" -> object with constructor \00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"key->IsString()\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c" closes the circle\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"NewArray\00", align 1
@_ZTVN2v88internal11RelocatableE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11RelocatableD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11RelocatableD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)* @_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11Relocatable21PostGarbageCollectionEv to i8*)] }, comdat, align 8
@switch.table._ZNK2v88internal14Representation8MnemonicEv = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)], align 8
@switch.table._ZN2v88internal15JsonStringifier10Serialize_ILb1EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_ = private unnamed_addr constant [5 x i64] [i64 0, i64 0, i64 16384, i64 0, i64 0], align 8

@_ZN2v88internal15JsonStringifierC1EPNS0_7IsolateE = hidden unnamed_addr alias void (%"class.v8::internal::JsonStringifier"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::JsonStringifier"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal15JsonStringifierC2EPNS0_7IsolateE

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13JsonStringifyEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::internal::JsonStringifier", align 8
  %6 = bitcast %"class.v8::internal::JsonStringifier"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %5, i64 0, i32 1
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* %8, %"class.v8::internal::Isolate"* %0) #7
  %9 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %5, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %5, i64 0, i32 7
  %11 = bitcast %"class.std::__1::vector.1132"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #7
  %12 = bitcast %"class.v8::internal::JsonStringifier"* %5 to %"class.v8::internal::Factory"**
  %13 = getelementptr inbounds i64*, i64** %9, i64 1
  %14 = bitcast i64** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 28, i1 false) #7
  %15 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %12, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %15, i64 3744
  %17 = bitcast i64** %9 to %"class.v8::internal::Factory"**
  store %"class.v8::internal::Factory"* %16, %"class.v8::internal::Factory"** %17, align 8
  %18 = call zeroext i1 @_ZN2v88internal15JsonStringifier18InitializeReplacerENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::JsonStringifier"* nonnull %5, i64* %2) #7
  br i1 %18, label %19, label %45

19:                                               ; preds = %4
  %20 = load i64, i64* %3, align 8
  %21 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 4
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %20 to i32
  %25 = trunc i64 %23 to i32
  %26 = icmp eq i32 %24, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %19
  %28 = bitcast %"class.v8::internal::Isolate"* %21 to %"class.v8::internal::Factory"*
  br label %33

29:                                               ; preds = %19
  %30 = call zeroext i1 @_ZN2v88internal15JsonStringifier13InitializeGapENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::JsonStringifier"* nonnull %5, i64* %3) #7
  br i1 %30, label %31, label %45

31:                                               ; preds = %29
  %32 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %12, align 8
  br label %33

33:                                               ; preds = %31, %27
  %34 = phi %"class.v8::internal::Factory"* [ %28, %27 ], [ %32, %31 ]
  %35 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %34, i64 200
  %36 = bitcast %"class.v8::internal::Factory"* %35 to i64*
  %37 = call i32 @_ZN2v88internal15JsonStringifier10Serialize_ILb0EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_(%"class.v8::internal::JsonStringifier"* nonnull %5, i64* %1, i1 zeroext false, i64* %36) #7
  switch i32 %37, label %45 [
    i32 0, label %38
    i32 1, label %42
  ]

38:                                               ; preds = %33
  %39 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %12, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %39, i64 160
  %41 = ptrtoint %"class.v8::internal::Factory"* %40 to i64
  br label %45

42:                                               ; preds = %33
  %43 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  %44 = ptrtoint i64* %43 to i64
  br label %45

45:                                               ; preds = %4, %29, %33, %38, %42
  %46 = phi i64 [ %44, %42 ], [ %41, %38 ], [ 0, %4 ], [ 0, %29 ], [ 0, %33 ]
  %47 = inttoptr i64 %46 to i64*
  %48 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %5, i64 0, i32 5
  %49 = load i16*, i16** %48, align 8
  %50 = icmp eq i16* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %45
  %52 = bitcast i16* %49 to i8*
  call void @_ZdaPv(i8* %52) #13
  br label %53

53:                                               ; preds = %51, %45
  %54 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %5, i64 0, i32 7, i32 0, i32 0
  %55 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %54, align 8
  %56 = icmp eq %"struct.std::__1::pair.1134"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = ptrtoint %"struct.std::__1::pair.1134"* %55 to i64
  %59 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %5, i64 0, i32 7, i32 0, i32 1
  %60 = bitcast %"struct.std::__1::pair.1134"** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = bitcast %"struct.std::__1::pair.1134"* %55 to i8*
  call void @_ZdlPv(i8* %61) #13
  br label %62

62:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #7
  ret i64* %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15JsonStringifier9StringifyENS0_6HandleINS0_6ObjectEEES4_S4_(%"class.v8::internal::JsonStringifier"*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = tail call zeroext i1 @_ZN2v88internal15JsonStringifier18InitializeReplacerENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %2)
  br i1 %5, label %6, label %37

6:                                                ; preds = %4
  %7 = load i64, i64* %3, align 8
  %8 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 4
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %7 to i32
  %13 = trunc i64 %11 to i32
  %14 = icmp eq i32 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %6
  %16 = bitcast %"class.v8::internal::Isolate"* %9 to %"class.v8::internal::Factory"*
  %17 = bitcast %"class.v8::internal::JsonStringifier"* %0 to %"class.v8::internal::Factory"**
  br label %23

18:                                               ; preds = %6
  %19 = tail call zeroext i1 @_ZN2v88internal15JsonStringifier13InitializeGapENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %3)
  br i1 %19, label %20, label %37

20:                                               ; preds = %18
  %21 = bitcast %"class.v8::internal::JsonStringifier"* %0 to %"class.v8::internal::Factory"**
  %22 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %21, align 8
  br label %23

23:                                               ; preds = %15, %20
  %24 = phi %"class.v8::internal::Factory"** [ %17, %15 ], [ %21, %20 ]
  %25 = phi %"class.v8::internal::Factory"* [ %16, %15 ], [ %22, %20 ]
  %26 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %25, i64 200
  %27 = bitcast %"class.v8::internal::Factory"* %26 to i64*
  %28 = tail call i32 @_ZN2v88internal15JsonStringifier10Serialize_ILb0EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_(%"class.v8::internal::JsonStringifier"* %0, i64* %1, i1 zeroext false, i64* %27) #7
  switch i32 %28, label %37 [
    i32 0, label %29
    i32 1, label %33
  ]

29:                                               ; preds = %23
  %30 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %24, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 160
  %32 = ptrtoint %"class.v8::internal::Factory"* %31 to i64
  br label %37

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %35 = tail call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* %34) #7
  %36 = ptrtoint i64* %35 to i64
  br label %37

37:                                               ; preds = %23, %18, %4, %29, %33
  %38 = phi i64 [ %36, %33 ], [ %32, %29 ], [ 0, %4 ], [ 0, %18 ], [ 0, %23 ]
  %39 = inttoptr i64 %38 to i64*
  ret i64* %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15JsonStringifierC2EPNS0_7IsolateE(%"class.v8::internal::JsonStringifier"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* %4, %"class.v8::internal::Isolate"* %1) #7
  %5 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7
  %7 = bitcast %"class.std::__1::vector.1132"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #7
  %8 = bitcast %"class.v8::internal::JsonStringifier"* %0 to %"class.v8::internal::Factory"**
  %9 = getelementptr inbounds i64*, i64** %5, i64 1
  %10 = bitcast i64** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 28, i1 false)
  %11 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %8, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %11, i64 3744
  %13 = bitcast i64** %5 to %"class.v8::internal::Factory"**
  store %"class.v8::internal::Factory"* %12, %"class.v8::internal::Factory"** %13, align 8
  ret void
}

declare void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"*, %"class.v8::internal::Isolate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15JsonStringifier18InitializeReplacerENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::JsonStringifier"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %324, label %7

7:                                                ; preds = %2
  %8 = and i64 %4, -4294967296
  %9 = add i64 %4, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp eq i16 %16, 1085
  br i1 %17, label %32, label %18

18:                                               ; preds = %7
  %19 = load atomic i32, i32* %10 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %8, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 188
  br i1 %25, label %26, label %324

26:                                               ; preds = %18
  %27 = tail call i16 @_ZN2v88internal7JSProxy7IsArrayENS0_6HandleIS1_EE(i64* %1) #7
  %28 = trunc i16 %27 to i8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %343, label %30

30:                                               ; preds = %26
  %31 = icmp ult i16 %27, 256
  br i1 %31, label %324, label %32

32:                                               ; preds = %7, %30
  %33 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %34 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31
  %36 = bitcast %"struct.v8::internal::HandleScopeData"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 1
  %39 = bitcast i64** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %41, align 8
  %44 = bitcast %"class.v8::internal::JsonStringifier"* %0 to %"class.v8::internal::Factory"**
  %45 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %44, align 8
  %46 = tail call i64* @_ZN2v88internal7Factory17NewOrderedHashSetEv(%"class.v8::internal::Factory"* %45) #7
  %47 = ptrtoint i64* %46 to i64
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %49 = tail call i64* @_ZN2v88internal6Object22GetLengthFromArrayLikeEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %48, i64* %1) #7
  %50 = icmp eq i64* %49, null
  br i1 %50, label %303, label %51

51:                                               ; preds = %32
  %52 = load i64, i64* %49, align 8
  %53 = and i64 %52, 1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %51
  %56 = trunc i64 %52 to i32
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %83, label %58

58:                                               ; preds = %55
  %59 = lshr i32 %56, 1
  br label %85

60:                                               ; preds = %51
  %61 = and i64 %52, -4294967296
  %62 = add i64 %52, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %61, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load atomic i16, i16* %68 monotonic, align 2
  %70 = icmp eq i16 %69, 66
  br i1 %70, label %71, label %83

71:                                               ; preds = %60
  %72 = add i64 %52, 3
  %73 = inttoptr i64 %72 to double*
  %74 = load double, double* %73, align 1
  %75 = fadd double %74, 0x4330000000000000
  %76 = bitcast double %75 to i64
  %77 = and i64 %76, -4294967296
  %78 = icmp eq i64 %77, 4841369599423283200
  br i1 %78, label %79, label %83

79:                                               ; preds = %71
  %80 = trunc i64 %76 to i32
  %81 = uitofp i32 %80 to double
  %82 = fcmp oeq double %74, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %79, %55, %60, %71
  %84 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  br label %89

85:                                               ; preds = %58, %79
  %86 = phi i32 [ %80, %79 ], [ %59, %58 ]
  %87 = icmp eq i32 %86, 0
  %88 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  br i1 %87, label %260, label %89

89:                                               ; preds = %83, %85
  %90 = phi %"class.v8::internal::Isolate"* [ %84, %83 ], [ %88, %85 ]
  %91 = phi i32 [ -1, %83 ], [ %86, %85 ]
  %92 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  %93 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  %94 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  %95 = bitcast %"class.v8::internal::Isolate"** %94 to %"class.v8::internal::Factory"**
  %96 = zext i32 %91 to i64
  br label %97

97:                                               ; preds = %255, %89
  %98 = phi i64 [ 0, %89 ], [ %257, %255 ]
  %99 = phi %"class.v8::internal::Isolate"* [ %90, %89 ], [ %258, %255 ]
  %100 = phi i64 [ %47, %89 ], [ %256, %255 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %92) #7
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %3, %"class.v8::internal::Isolate"* %99, i64* %1, i64* null, i64 %98, i64* %1, i32 3) #7
  %101 = load i32, i32* %93, align 4
  %102 = icmp eq i32 %101, 4
  br i1 %102, label %103, label %107

103:                                              ; preds = %97
  %104 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %95, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %104, i64 160
  %106 = bitcast %"class.v8::internal::Factory"* %105 to i64*
  br label %109

107:                                              ; preds = %97
  %108 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %3, i1 zeroext false) #7
  br label %109

109:                                              ; preds = %103, %107
  %110 = phi i64* [ %108, %107 ], [ %106, %103 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %92) #7
  %111 = icmp eq i64* %110, null
  br i1 %111, label %303, label %112

112:                                              ; preds = %109
  %113 = load i64, i64* %110, align 8
  %114 = and i64 %113, 1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %135, label %116

116:                                              ; preds = %112
  %117 = and i64 %113, -4294967296
  %118 = add i64 %113, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = icmp eq i16 %125, 66
  br i1 %126, label %137, label %127

127:                                              ; preds = %116
  %128 = load atomic i32, i32* %119 monotonic, align 4
  %129 = zext i32 %128 to i64
  %130 = or i64 %117, %129
  %131 = add i64 %130, 7
  %132 = inttoptr i64 %131 to i16*
  %133 = load atomic i16, i16* %132 monotonic, align 2
  %134 = icmp ult i16 %133, 64
  br i1 %134, label %137, label %150

135:                                              ; preds = %112
  %136 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  br label %146

137:                                              ; preds = %116, %127
  %138 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %139 = load atomic i32, i32* %119 monotonic, align 4
  %140 = zext i32 %139 to i64
  %141 = or i64 %117, %140
  %142 = add i64 %141, 7
  %143 = inttoptr i64 %142 to i16*
  %144 = load atomic i16, i16* %143 monotonic, align 2
  %145 = icmp ult i16 %144, 64
  br i1 %145, label %226, label %146

146:                                              ; preds = %137, %135
  %147 = phi %"class.v8::internal::Isolate"* [ %138, %137 ], [ %136, %135 ]
  %148 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %147, i64* nonnull %110) #7
  %149 = icmp eq i64* %148, null
  br i1 %149, label %303, label %226

150:                                              ; preds = %127
  %151 = load atomic i32, i32* %119 monotonic, align 4
  %152 = zext i32 %151 to i64
  %153 = or i64 %117, %152
  %154 = add i64 %153, 7
  %155 = inttoptr i64 %154 to i16*
  %156 = load atomic i16, i16* %155 monotonic, align 2
  %157 = icmp eq i16 %156, 1041
  br i1 %157, label %158, label %255

158:                                              ; preds = %150
  %159 = add i64 %113, 11
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i64
  %163 = or i64 %117, %162
  %164 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %164, i64 0, i32 31, i32 4
  %166 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %165, align 8
  %167 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %158
  %169 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %166, i64 %163) #7
  %170 = load i64, i64* %169, align 8
  br label %184

171:                                              ; preds = %158
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %164, i64 0, i32 31, i32 0
  %173 = load i64*, i64** %172, align 8
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %164, i64 0, i32 31, i32 1
  %175 = load i64*, i64** %174, align 8
  %176 = icmp eq i64* %173, %175
  br i1 %176, label %177, label %179

177:                                              ; preds = %171
  %178 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %164) #7
  br label %179

179:                                              ; preds = %177, %171
  %180 = phi i64* [ %178, %177 ], [ %173, %171 ]
  %181 = ptrtoint i64* %180 to i64
  %182 = add i64 %181, 8
  %183 = inttoptr i64 %182 to i64*
  store i64* %183, i64** %172, align 8
  store i64 %163, i64* %180, align 8
  br label %184

184:                                              ; preds = %168, %179
  %185 = phi i64 [ %170, %168 ], [ %163, %179 ]
  %186 = and i64 %185, 1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %207, label %188

188:                                              ; preds = %184
  %189 = and i64 %185, -4294967296
  %190 = add i64 %185, -1
  %191 = inttoptr i64 %190 to i32*
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = zext i32 %192 to i64
  %194 = or i64 %189, %193
  %195 = add i64 %194, 7
  %196 = inttoptr i64 %195 to i16*
  %197 = load atomic i16, i16* %196 monotonic, align 2
  %198 = icmp eq i16 %197, 66
  br i1 %198, label %207, label %199

199:                                              ; preds = %188
  %200 = load atomic i32, i32* %191 monotonic, align 4
  %201 = zext i32 %200 to i64
  %202 = or i64 %189, %201
  %203 = add i64 %202, 7
  %204 = inttoptr i64 %203 to i16*
  %205 = load atomic i16, i16* %204 monotonic, align 2
  %206 = icmp ult i16 %205, 64
  br i1 %206, label %207, label %255

207:                                              ; preds = %184, %188, %199
  %208 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %209 = load i64, i64* %110, align 8
  %210 = and i64 %209, 1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %223, label %212

212:                                              ; preds = %207
  %213 = and i64 %209, -4294967296
  %214 = add i64 %209, -1
  %215 = inttoptr i64 %214 to i32*
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = zext i32 %216 to i64
  %218 = or i64 %213, %217
  %219 = add i64 %218, 7
  %220 = inttoptr i64 %219 to i16*
  %221 = load atomic i16, i16* %220 monotonic, align 2
  %222 = icmp ult i16 %221, 64
  br i1 %222, label %226, label %223

223:                                              ; preds = %207, %212
  %224 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %208, i64* nonnull %110) #7
  %225 = icmp eq i64* %224, null
  br i1 %225, label %303, label %226

226:                                              ; preds = %212, %137, %146, %223
  %227 = phi i64* [ %148, %146 ], [ %224, %223 ], [ %110, %137 ], [ %110, %212 ]
  %228 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %44, align 8
  %229 = load i64, i64* %227, align 8
  %230 = and i64 %229, -4294967296
  %231 = add i64 %229, -1
  %232 = inttoptr i64 %231 to i32*
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = zext i32 %233 to i64
  %235 = or i64 %230, %234
  %236 = add i64 %235, 7
  %237 = inttoptr i64 %236 to i16*
  %238 = load atomic i16, i16* %237 monotonic, align 2
  %239 = icmp ult i16 %238, 32
  %240 = bitcast %"class.v8::internal::Factory"* %228 to %"class.v8::internal::Isolate"*
  br i1 %239, label %247, label %241

241:                                              ; preds = %226
  %242 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %228, i64 45008
  %243 = bitcast %"class.v8::internal::Factory"* %242 to %"class.v8::internal::StringTable"**
  %244 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %243, align 8
  %245 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %244, %"class.v8::internal::Isolate"* %240, i64* nonnull %227) #7
  %246 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  br label %247

247:                                              ; preds = %226, %241
  %248 = phi %"class.v8::internal::Isolate"* [ %246, %241 ], [ %240, %226 ]
  %249 = phi i64* [ %245, %241 ], [ %227, %226 ]
  %250 = inttoptr i64 %100 to i64*
  %251 = call i64* @_ZN2v88internal14OrderedHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %248, i64* %250, i64* %249) #7
  %252 = icmp eq i64* %251, null
  br i1 %252, label %303, label %253

253:                                              ; preds = %247
  %254 = ptrtoint i64* %251 to i64
  br label %255

255:                                              ; preds = %199, %150, %253
  %256 = phi i64 [ %254, %253 ], [ %100, %150 ], [ %100, %199 ]
  %257 = add nuw nsw i64 %98, 1
  %258 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %259 = icmp eq i64 %257, %96
  br i1 %259, label %260, label %97

260:                                              ; preds = %255, %85
  %261 = phi i64 [ %47, %85 ], [ %256, %255 ]
  %262 = phi %"class.v8::internal::Isolate"* [ %88, %85 ], [ %258, %255 ]
  %263 = inttoptr i64 %261 to i64*
  %264 = call i64* @_ZN2v88internal14OrderedHashSet18ConvertToKeysArrayEPNS0_7IsolateENS0_6HandleIS1_EENS0_17GetKeysConversionE(%"class.v8::internal::Isolate"* %262, i64* %263, i32 1) #7
  %265 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* %264, i64** %265, align 8
  %266 = load i64, i64* %264, align 8
  %267 = inttoptr i64 %37 to i64*
  %268 = inttoptr i64 %40 to i64*
  %269 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %35, i64 0, i32 0
  %270 = load i64*, i64** %269, align 8
  store i64 %37, i64* %36, align 8
  %271 = load i32, i32* %41, align 8
  %272 = add nsw i32 %271, -1
  store i32 %272, i32* %41, align 8
  %273 = load i64*, i64** %38, align 8
  %274 = icmp eq i64* %273, %268
  br i1 %274, label %277, label %275

275:                                              ; preds = %260
  store i64* %268, i64** %38, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %34) #7
  %276 = load i64*, i64** %269, align 8
  br label %277

277:                                              ; preds = %275, %260
  %278 = phi i64* [ %276, %275 ], [ %267, %260 ]
  %279 = phi i64* [ %268, %275 ], [ %270, %260 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %278, i64* %279) #7
  %280 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 4
  %281 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %280, align 8
  %282 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %281, null
  br i1 %282, label %285, label %283

283:                                              ; preds = %277
  %284 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %281, i64 %266) #7
  br label %297

285:                                              ; preds = %277
  %286 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 0
  %287 = load i64*, i64** %286, align 8
  %288 = load i64*, i64** %38, align 8
  %289 = icmp eq i64* %287, %288
  br i1 %289, label %290, label %292

290:                                              ; preds = %285
  %291 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %34) #7
  br label %292

292:                                              ; preds = %290, %285
  %293 = phi i64* [ %291, %290 ], [ %287, %285 ]
  %294 = ptrtoint i64* %293 to i64
  %295 = add i64 %294, 8
  %296 = inttoptr i64 %295 to i64*
  store i64* %296, i64** %286, align 8
  store i64 %266, i64* %293, align 8
  br label %297

297:                                              ; preds = %283, %292
  %298 = phi i64* [ %284, %283 ], [ %293, %292 ]
  %299 = load i64, i64* %36, align 8
  %300 = load i64, i64* %39, align 8
  %301 = load i32, i32* %41, align 8
  %302 = add nsw i32 %301, 1
  store i32 %302, i32* %41, align 8
  store i64* %298, i64** %265, align 8
  br label %303

303:                                              ; preds = %109, %146, %223, %247, %297, %32
  %304 = phi i64 [ %37, %32 ], [ %299, %297 ], [ %37, %247 ], [ %37, %223 ], [ %37, %146 ], [ %37, %109 ]
  %305 = phi i64 [ %40, %32 ], [ %300, %297 ], [ %40, %247 ], [ %40, %223 ], [ %40, %146 ], [ %40, %109 ]
  %306 = phi i32 [ 1, %32 ], [ 0, %297 ], [ 1, %247 ], [ 1, %223 ], [ 1, %146 ], [ 1, %109 ]
  %307 = icmp eq %"class.v8::internal::Isolate"* %34, null
  br i1 %307, label %322, label %308

308:                                              ; preds = %303
  %309 = inttoptr i64 %304 to i64*
  %310 = inttoptr i64 %305 to i64*
  %311 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %35, i64 0, i32 0
  %312 = load i64*, i64** %311, align 8
  store i64 %304, i64* %36, align 8
  %313 = load i32, i32* %41, align 8
  %314 = add nsw i32 %313, -1
  store i32 %314, i32* %41, align 8
  %315 = load i64*, i64** %38, align 8
  %316 = icmp eq i64* %315, %310
  br i1 %316, label %319, label %317

317:                                              ; preds = %308
  store i64* %310, i64** %38, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %34) #7
  %318 = load i64*, i64** %311, align 8
  br label %319

319:                                              ; preds = %317, %308
  %320 = phi i64* [ %318, %317 ], [ %309, %308 ]
  %321 = phi i64* [ %310, %317 ], [ %312, %308 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %320, i64* %321) #7
  br label %322

322:                                              ; preds = %303, %319
  %323 = icmp eq i32 %306, 0
  br i1 %323, label %342, label %343

324:                                              ; preds = %2, %18, %30
  %325 = load i64, i64* %1, align 8
  %326 = and i64 %325, 1
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %342, label %328

328:                                              ; preds = %324
  %329 = and i64 %325, -4294967296
  %330 = add i64 %325, -1
  %331 = inttoptr i64 %330 to i32*
  %332 = load atomic i32, i32* %331 monotonic, align 4
  %333 = zext i32 %332 to i64
  %334 = or i64 %329, %333
  %335 = add i64 %334, 9
  %336 = inttoptr i64 %335 to i8*
  %337 = load atomic i8, i8* %336 monotonic, align 1
  %338 = and i8 %337, 2
  %339 = icmp eq i8 %338, 0
  br i1 %339, label %342, label %340

340:                                              ; preds = %328
  %341 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 4, i32 0, i32 0
  store i64* %1, i64** %341, align 8
  br label %342

342:                                              ; preds = %328, %324, %340, %322
  br label %343

343:                                              ; preds = %26, %322, %342
  %344 = phi i1 [ true, %342 ], [ false, %322 ], [ false, %26 ]
  ret i1 %344
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15JsonStringifier13InitializeGapENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::JsonStringifier"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31
  %6 = bitcast %"struct.v8::internal::HandleScopeData"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31, i32 1
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 31, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = load i64, i64* %1, align 8
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %118, label %16

16:                                               ; preds = %2
  %17 = and i64 %13, -4294967296
  %18 = add i64 %13, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp eq i16 %25, 1041
  br i1 %26, label %27, label %118

27:                                               ; preds = %16
  %28 = add i64 %13, 11
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %17, %31
  %33 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 31, i32 4
  %35 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %34, align 8
  %36 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %27
  %38 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %35, i64 %32) #7
  %39 = load i64, i64* %38, align 8
  br label %53

40:                                               ; preds = %27
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 31, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 31, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = icmp eq i64* %42, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %33) #7
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi i64* [ %47, %46 ], [ %42, %40 ]
  %50 = ptrtoint i64* %49 to i64
  %51 = add i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  store i64* %52, i64** %41, align 8
  store i64 %32, i64* %49, align 8
  br label %53

53:                                               ; preds = %37, %48
  %54 = phi i64 [ %39, %37 ], [ %32, %48 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %97, label %57

57:                                               ; preds = %53
  %58 = and i64 %54, -4294967296
  %59 = add i64 %54, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %58, %62
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = icmp ult i16 %66, 64
  br i1 %67, label %68, label %89

68:                                               ; preds = %57
  %69 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %70 = load i64, i64* %1, align 8
  %71 = and i64 %70, 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %84, label %73

73:                                               ; preds = %68
  %74 = and i64 %70, -4294967296
  %75 = add i64 %70, -1
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %74, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = icmp ult i16 %82, 64
  br i1 %83, label %86, label %84

84:                                               ; preds = %73, %68
  %85 = tail call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %69, i64* %1) #7
  br label %86

86:                                               ; preds = %73, %84
  %87 = phi i64* [ %85, %84 ], [ %1, %73 ]
  %88 = icmp eq i64* %87, null
  br i1 %88, label %280, label %118

89:                                               ; preds = %57
  %90 = load atomic i32, i32* %60 monotonic, align 4
  %91 = zext i32 %90 to i64
  %92 = or i64 %58, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load atomic i16, i16* %94 monotonic, align 2
  %96 = icmp eq i16 %95, 66
  br i1 %96, label %97, label %118

97:                                               ; preds = %53, %89
  %98 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %99 = load i64, i64* %1, align 8
  %100 = and i64 %99, 1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = and i64 %99, -4294967296
  %104 = add i64 %99, -1
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %103, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = icmp eq i16 %111, 66
  br i1 %112, label %115, label %113

113:                                              ; preds = %102
  %114 = tail call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %98, i64* %1, i32 0) #7
  br label %115

115:                                              ; preds = %97, %102, %113
  %116 = phi i64* [ %114, %113 ], [ %1, %102 ], [ %1, %97 ]
  %117 = icmp eq i64* %116, null
  br i1 %117, label %280, label %118

118:                                              ; preds = %115, %86, %2, %89, %16
  %119 = phi i64* [ %1, %16 ], [ %1, %89 ], [ %1, %2 ], [ %87, %86 ], [ %116, %115 ]
  %120 = load i64, i64* %119, align 8
  %121 = and i64 %120, 1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %193, label %123

123:                                              ; preds = %118
  %124 = and i64 %120, -4294967296
  %125 = add i64 %120, -1
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %124, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load atomic i16, i16* %131 monotonic, align 2
  %133 = icmp ult i16 %132, 64
  br i1 %133, label %134, label %185

134:                                              ; preds = %123
  %135 = add i64 %120, 7
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = icmp sgt i32 %137, 0
  br i1 %138, label %139, label %280

139:                                              ; preds = %134
  %140 = icmp slt i32 %137, 10
  %141 = select i1 %140, i32 %137, i32 10
  %142 = add nuw nsw i32 %141, 1
  %143 = sext i32 %142 to i64
  %144 = shl nuw nsw i64 %143, 1
  %145 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %144, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #13
  %146 = icmp eq i8* %145, null
  br i1 %146, label %147, label %156

147:                                              ; preds = %139
  %148 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #7
  %149 = bitcast %"class.v8::Platform"* %148 to void (%"class.v8::Platform"*)***
  %150 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %150, i64 3
  %152 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %151, align 8
  tail call void %152(%"class.v8::Platform"* %148) #7
  %153 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %144, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #13
  %154 = icmp eq i8* %153, null
  br i1 %154, label %155, label %156

155:                                              ; preds = %147
  tail call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0)) #14
  unreachable

156:                                              ; preds = %147, %139
  %157 = phi i8* [ %153, %147 ], [ %145, %139 ]
  %158 = bitcast i8* %157 to i16*
  %159 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %160 = bitcast i16** %159 to i8**
  store i8* %157, i8** %160, align 8
  %161 = load i64, i64* %119, align 8
  tail call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64 %161, i16* %158, i32 0, i32 %141) #7
  %162 = load i16*, i16** %159, align 8
  %163 = sext i32 %141 to i64
  br label %166

164:                                              ; preds = %166
  %165 = icmp slt i64 %171, %163
  br i1 %165, label %166, label %182

166:                                              ; preds = %156, %164
  %167 = phi i64 [ 0, %156 ], [ %171, %164 ]
  %168 = getelementptr inbounds i16, i16* %162, i64 %167
  %169 = load i16, i16* %168, align 2
  %170 = icmp ugt i16 %169, 255
  %171 = add nuw nsw i64 %167, 1
  br i1 %170, label %172, label %164

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %174 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %175 = load i64*, i64** %174, align 8
  %176 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %177 = load i32, i32* %176, align 4
  %178 = tail call i64* @_ZN2v88internal9SeqString8TruncateENS0_6HandleIS1_EEi(i64* %175, i32 %177) #7
  %179 = load i64, i64* %178, align 8
  %180 = load i64*, i64** %174, align 8
  store i64 %179, i64* %180, align 8
  %181 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  store i32 1, i32* %181, align 8
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %173) #7
  br label %182

182:                                              ; preds = %164, %172
  %183 = load i16*, i16** %159, align 8
  %184 = getelementptr inbounds i16, i16* %183, i64 %163
  store i16 0, i16* %184, align 2
  br label %280

185:                                              ; preds = %123
  %186 = load atomic i32, i32* %126 monotonic, align 4
  %187 = zext i32 %186 to i64
  %188 = or i64 %124, %187
  %189 = add i64 %188, 7
  %190 = inttoptr i64 %189 to i16*
  %191 = load atomic i16, i16* %190 monotonic, align 2
  %192 = icmp eq i16 %191, 66
  br i1 %192, label %197, label %280

193:                                              ; preds = %118
  %194 = trunc i64 %120 to i32
  %195 = ashr i32 %194, 1
  %196 = sitofp i32 %195 to double
  br label %201

197:                                              ; preds = %185
  %198 = add i64 %120, 3
  %199 = inttoptr i64 %198 to double*
  %200 = load double, double* %199, align 1
  br label %201

201:                                              ; preds = %193, %197
  %202 = phi double [ %196, %193 ], [ %200, %197 ]
  %203 = tail call double @llvm.fabs.f64(double %202) #15
  %204 = fcmp one double %203, 0x7FF0000000000000
  %205 = fcmp ole double %202, 0x41DFFFFFFFC00000
  %206 = and i1 %205, %204
  %207 = fcmp oge double %202, 0xC1E0000000000000
  %208 = and i1 %207, %206
  br i1 %208, label %209, label %213

209:                                              ; preds = %201
  %210 = fptosi double %202 to i32
  %211 = sitofp i32 %210 to double
  %212 = fcmp une double %202, %211
  br i1 %212, label %213, label %245

213:                                              ; preds = %209, %201
  %214 = bitcast double %202 to i64
  %215 = and i64 %214, 9218868437227405312
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %280, label %217

217:                                              ; preds = %213
  %218 = lshr i64 %214, 52
  %219 = trunc i64 %218 to i32
  %220 = and i32 %219, 2047
  %221 = add nsw i32 %220, -1075
  %222 = icmp slt i32 %221, 0
  br i1 %222, label %223, label %231

223:                                              ; preds = %217
  %224 = icmp slt i32 %221, -52
  br i1 %224, label %280, label %225

225:                                              ; preds = %223
  %226 = and i64 %214, 4503599627370495
  %227 = or i64 %226, 4503599627370496
  %228 = sub nuw nsw i32 1075, %220
  %229 = zext i32 %228 to i64
  %230 = lshr i64 %227, %229
  br label %239

231:                                              ; preds = %217
  %232 = icmp sgt i32 %221, 31
  br i1 %232, label %280, label %233

233:                                              ; preds = %231
  %234 = and i64 %214, 4503599627370495
  %235 = or i64 %234, 4503599627370496
  %236 = zext i32 %221 to i64
  %237 = shl i64 %235, %236
  %238 = and i64 %237, 4294967295
  br label %239

239:                                              ; preds = %233, %225
  %240 = phi i64 [ %230, %225 ], [ %238, %233 ]
  %241 = icmp sgt i64 %214, -1
  %242 = select i1 %241, i32 1, i32 -1
  %243 = trunc i64 %240 to i32
  %244 = mul i32 %242, %243
  br label %245

245:                                              ; preds = %209, %239
  %246 = phi i32 [ %210, %209 ], [ %244, %239 ]
  %247 = icmp sgt i32 %246, 0
  br i1 %247, label %248, label %280

248:                                              ; preds = %245
  %249 = icmp slt i32 %246, 10
  %250 = select i1 %249, i32 %246, i32 10
  %251 = add nuw nsw i32 %250, 1
  %252 = sext i32 %251 to i64
  %253 = shl nuw nsw i64 %252, 1
  %254 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %253, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #13
  %255 = icmp eq i8* %254, null
  br i1 %255, label %256, label %265

256:                                              ; preds = %248
  %257 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #7
  %258 = bitcast %"class.v8::Platform"* %257 to void (%"class.v8::Platform"*)***
  %259 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %258, align 8
  %260 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %259, i64 3
  %261 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %260, align 8
  tail call void %261(%"class.v8::Platform"* %257) #7
  %262 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %253, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #13
  %263 = icmp eq i8* %262, null
  br i1 %263, label %264, label %265

264:                                              ; preds = %256
  tail call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0)) #14
  unreachable

265:                                              ; preds = %256, %248
  %266 = phi i8* [ %262, %256 ], [ %254, %248 ]
  %267 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %268 = bitcast i16** %267 to i8**
  store i8* %266, i8** %268, align 8
  %269 = bitcast i8* %266 to i16*
  %270 = sext i32 %250 to i64
  br label %273

271:                                              ; preds = %273
  %272 = getelementptr inbounds i16, i16* %279, i64 %270
  store i16 0, i16* %272, align 2
  br label %280

273:                                              ; preds = %265, %273
  %274 = phi i64 [ 0, %265 ], [ %277, %273 ]
  %275 = phi i16* [ %269, %265 ], [ %279, %273 ]
  %276 = getelementptr inbounds i16, i16* %275, i64 %274
  store i16 32, i16* %276, align 2
  %277 = add nuw nsw i64 %274, 1
  %278 = icmp slt i64 %277, %270
  %279 = load i16*, i16** %267, align 8
  br i1 %278, label %273, label %271

280:                                              ; preds = %213, %231, %223, %245, %271, %134, %182, %86, %115, %185
  %281 = phi i1 [ true, %185 ], [ false, %115 ], [ false, %86 ], [ true, %182 ], [ true, %134 ], [ true, %271 ], [ true, %245 ], [ true, %223 ], [ true, %231 ], [ true, %213 ]
  %282 = icmp eq %"class.v8::internal::Isolate"* %4, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %280
  %284 = inttoptr i64 %7 to i64*
  %285 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %5, i64 0, i32 0
  %286 = load i64*, i64** %285, align 8
  store i64 %7, i64* %6, align 8
  %287 = load i32, i32* %10, align 8
  %288 = add nsw i32 %287, -1
  store i32 %288, i32* %10, align 8
  %289 = load i64*, i64** %8, align 8
  %290 = icmp eq i64* %289, %9
  br i1 %290, label %293, label %291

291:                                              ; preds = %283
  store i64* %9, i64** %8, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %4) #7
  %292 = load i64*, i64** %285, align 8
  br label %293

293:                                              ; preds = %291, %283
  %294 = phi i64* [ %292, %291 ], [ %284, %283 ]
  %295 = phi i64* [ %9, %291 ], [ %286, %283 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %294, i64* %295) #7
  br label %296

296:                                              ; preds = %280, %293
  ret i1 %281
}

declare i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory17NewOrderedHashSetEv(%"class.v8::internal::Factory"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object22GetLengthFromArrayLikeEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal14OrderedHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal14OrderedHashSet18ConvertToKeysArrayEPNS0_7IsolateENS0_6HandleIS1_EENS0_17GetKeysConversionE(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64, i16*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15JsonStringifier19ApplyToJsonFunctionENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::JsonStringifier"* nocapture readonly, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = alloca [1 x %"class.v8::internal::Handle.1128"], align 8
  %6 = ptrtoint i64* %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %13 = bitcast i64** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %18) #7
  %19 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %20 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 0
  %23 = icmp eq i64* %21, null
  br i1 %23, label %45, label %24

24:                                               ; preds = %3
  %25 = load i64, i64* %21, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 0, i32 4
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %25, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i64 %27, 4294967295
  %32 = icmp eq i64 %31, 0
  tail call void @llvm.assume(i1 %32) #7
  %33 = zext i32 %30 to i64
  %34 = or i64 %27, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp eq i16 %37, 64
  br i1 %38, label %39, label %45

39:                                               ; preds = %24
  %40 = add i64 %25, 7
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %39, %24, %3
  br label %46

46:                                               ; preds = %45, %39
  %47 = phi i32 [ 2, %45 ], [ 0, %39 ]
  store i32 %47, i32* %22, align 8
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  store i32 4, i32* %48, align 4
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 2
  store i8 0, i8* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 3
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 4, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %19, %"class.v8::internal::Isolate"** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 6, i32 0, i32 0
  store i64* %21, i64** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 10
  %58 = bitcast %"class.v8::internal::Handle.1128"* %57 to i64*
  store i64 %6, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 11
  %60 = bitcast i64* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 -1, i64 16, i1 false) #7
  %61 = load i64, i64* %21, align 8
  %62 = and i64 %61, -4294967296
  %63 = add i64 %61, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %62, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = and i16 %70, -32
  %72 = icmp eq i16 %71, 32
  br i1 %72, label %73, label %77

73:                                               ; preds = %46
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 5, i32 0, i32 0, i32 0
  %75 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %74, align 8
  %76 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %75, %"class.v8::internal::Isolate"* %19, i64* %21) #7
  br label %77

77:                                               ; preds = %46, %73
  %78 = phi i64* [ %76, %73 ], [ %21, %46 ]
  store i64* %78, i64** %53, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %4) #7
  %79 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #7
  %80 = icmp eq i64* %79, null
  br i1 %80, label %157, label %81

81:                                               ; preds = %77
  %82 = load i64, i64* %79, align 8
  %83 = and i64 %82, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %157, label %85

85:                                               ; preds = %81
  %86 = and i64 %82, -4294967296
  %87 = add i64 %82, -1
  %88 = inttoptr i64 %87 to i32*
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %86, %90
  %92 = add i64 %91, 9
  %93 = inttoptr i64 %92 to i8*
  %94 = load atomic i8, i8* %93 monotonic, align 1
  %95 = and i8 %94, 2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %157, label %97

97:                                               ; preds = %85
  %98 = load i64, i64* %2, align 8
  %99 = and i64 %98, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %97
  %102 = bitcast %"class.v8::internal::JsonStringifier"* %0 to %"class.v8::internal::Factory"**
  %103 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %102, align 8
  %104 = call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %103, i64* %2, i32 2) #7
  br label %105

105:                                              ; preds = %101, %97
  %106 = phi i64* [ %104, %101 ], [ %2, %97 ]
  %107 = ptrtoint i64* %106 to i64
  %108 = bitcast [1 x %"class.v8::internal::Handle.1128"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #7
  %109 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1128"], [1 x %"class.v8::internal::Handle.1128"]* %5, i64 0, i64 0
  %110 = bitcast [1 x %"class.v8::internal::Handle.1128"]* %5 to i64*
  store i64 %107, i64* %110, align 8
  %111 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %112 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %111, i64* nonnull %79, i64* %1, i32 1, %"class.v8::internal::Handle.1128"* nonnull %109) #7
  %113 = icmp eq i64* %112, null
  br i1 %113, label %153, label %114

114:                                              ; preds = %105
  %115 = load i64, i64* %112, align 8
  %116 = inttoptr i64 %11 to i64*
  %117 = inttoptr i64 %14 to i64*
  %118 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %119 = load i64*, i64** %118, align 8
  store i64 %11, i64* %10, align 8
  %120 = load i32, i32* %15, align 8
  %121 = add nsw i32 %120, -1
  store i32 %121, i32* %15, align 8
  %122 = load i64*, i64** %12, align 8
  %123 = icmp eq i64* %122, %117
  br i1 %123, label %126, label %124

124:                                              ; preds = %114
  store i64* %117, i64** %12, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #7
  %125 = load i64*, i64** %118, align 8
  br label %126

126:                                              ; preds = %124, %114
  %127 = phi i64* [ %125, %124 ], [ %116, %114 ]
  %128 = phi i64* [ %117, %124 ], [ %119, %114 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %127, i64* %128) #7
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %130 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %129, align 8
  %131 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %126
  %133 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %130, i64 %115) #7
  %134 = ptrtoint i64* %133 to i64
  br label %147

135:                                              ; preds = %126
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %137 = load i64*, i64** %136, align 8
  %138 = load i64*, i64** %12, align 8
  %139 = icmp eq i64* %137, %138
  br i1 %139, label %140, label %142

140:                                              ; preds = %135
  %141 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #7
  br label %142

142:                                              ; preds = %140, %135
  %143 = phi i64* [ %141, %140 ], [ %137, %135 ]
  %144 = ptrtoint i64* %143 to i64
  %145 = add i64 %144, 8
  %146 = inttoptr i64 %145 to i64*
  store i64* %146, i64** %136, align 8
  store i64 %115, i64* %143, align 8
  br label %147

147:                                              ; preds = %132, %142
  %148 = phi i64 [ %134, %132 ], [ %144, %142 ]
  %149 = load i64, i64* %10, align 8
  %150 = load i64, i64* %13, align 8
  %151 = load i32, i32* %15, align 8
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %15, align 8
  br label %153

153:                                              ; preds = %105, %147
  %154 = phi i64 [ %149, %147 ], [ %11, %105 ]
  %155 = phi i64 [ %150, %147 ], [ %14, %105 ]
  %156 = phi i64 [ %148, %147 ], [ 0, %105 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #7
  br label %157

157:                                              ; preds = %85, %81, %77, %153
  %158 = phi i64 [ %154, %153 ], [ %11, %77 ], [ %11, %85 ], [ %11, %81 ]
  %159 = phi i64 [ %155, %153 ], [ %14, %77 ], [ %14, %85 ], [ %14, %81 ]
  %160 = phi i64 [ %156, %153 ], [ 0, %77 ], [ %6, %85 ], [ %6, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %18) #7
  %161 = icmp eq %"class.v8::internal::Isolate"* %8, null
  br i1 %161, label %176, label %162

162:                                              ; preds = %157
  %163 = inttoptr i64 %158 to i64*
  %164 = inttoptr i64 %159 to i64*
  %165 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %166 = load i64*, i64** %165, align 8
  store i64 %158, i64* %10, align 8
  %167 = load i32, i32* %15, align 8
  %168 = add nsw i32 %167, -1
  store i32 %168, i32* %15, align 8
  %169 = load i64*, i64** %12, align 8
  %170 = icmp eq i64* %169, %164
  br i1 %170, label %173, label %171

171:                                              ; preds = %162
  store i64* %164, i64** %12, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #7
  %172 = load i64*, i64** %165, align 8
  br label %173

173:                                              ; preds = %171, %162
  %174 = phi i64* [ %172, %171 ], [ %163, %162 ]
  %175 = phi i64* [ %164, %171 ], [ %166, %162 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %174, i64* %175) #7
  br label %176

176:                                              ; preds = %157, %173
  %177 = inttoptr i64 %160 to i64*
  ret i64* %177
}

declare i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1128"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15JsonStringifier21ApplyReplacerFunctionENS0_6HandleINS0_6ObjectEEES4_S4_(%"class.v8::internal::JsonStringifier"* nocapture readonly, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca [2 x %"class.v8::internal::Handle.1128"], align 16
  %6 = ptrtoint i64* %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %13 = bitcast i64** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = load i64, i64* %2, align 8
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %4
  %22 = bitcast %"class.v8::internal::JsonStringifier"* %0 to %"class.v8::internal::Factory"**
  %23 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %22, align 8
  %24 = tail call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %23, i64* %2, i32 2) #7
  br label %25

25:                                               ; preds = %21, %4
  %26 = phi i64* [ %24, %21 ], [ %2, %4 ]
  %27 = ptrtoint i64* %26 to i64
  %28 = bitcast [2 x %"class.v8::internal::Handle.1128"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #7
  %29 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1128"], [2 x %"class.v8::internal::Handle.1128"]* %5, i64 0, i64 0
  %30 = bitcast [2 x %"class.v8::internal::Handle.1128"]* %5 to i64*
  store i64 %27, i64* %30, align 16
  %31 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1128"], [2 x %"class.v8::internal::Handle.1128"]* %5, i64 0, i64 1
  %32 = bitcast %"class.v8::internal::Handle.1128"* %31 to i64*
  store i64 %6, i64* %32, align 8
  %33 = tail call i64* @_ZN2v88internal15JsonStringifier13CurrentHolderENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::JsonStringifier"* %0, i64* undef, i64* %3)
  %34 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %35 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 4, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %34, i64* %36, i64* %33, i32 2, %"class.v8::internal::Handle.1128"* nonnull %29) #7
  %38 = icmp eq i64* %37, null
  br i1 %38, label %77, label %39

39:                                               ; preds = %25
  %40 = load i64, i64* %37, align 8
  %41 = inttoptr i64 %11 to i64*
  %42 = inttoptr i64 %14 to i64*
  %43 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %44 = load i64*, i64** %43, align 8
  store i64 %11, i64* %10, align 8
  %45 = load i32, i32* %15, align 8
  %46 = add nsw i32 %45, -1
  store i32 %46, i32* %15, align 8
  %47 = load i64*, i64** %12, align 8
  %48 = icmp eq i64* %47, %42
  br i1 %48, label %51, label %49

49:                                               ; preds = %39
  store i64* %42, i64** %12, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #7
  %50 = load i64*, i64** %43, align 8
  br label %51

51:                                               ; preds = %49, %39
  %52 = phi i64* [ %50, %49 ], [ %41, %39 ]
  %53 = phi i64* [ %42, %49 ], [ %44, %39 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %52, i64* %53) #7
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %55 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %54, align 8
  %56 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %51
  %58 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %55, i64 %40) #7
  br label %71

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64*, i64** %12, align 8
  %63 = icmp eq i64* %61, %62
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #7
  br label %66

66:                                               ; preds = %64, %59
  %67 = phi i64* [ %65, %64 ], [ %61, %59 ]
  %68 = ptrtoint i64* %67 to i64
  %69 = add i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  store i64* %70, i64** %60, align 8
  store i64 %40, i64* %67, align 8
  br label %71

71:                                               ; preds = %57, %66
  %72 = phi i64* [ %58, %57 ], [ %67, %66 ]
  %73 = load i64, i64* %10, align 8
  %74 = load i64, i64* %13, align 8
  %75 = load i32, i32* %15, align 8
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %15, align 8
  br label %77

77:                                               ; preds = %25, %71
  %78 = phi i64 [ %73, %71 ], [ %11, %25 ]
  %79 = phi i64 [ %74, %71 ], [ %14, %25 ]
  %80 = phi i64* [ %72, %71 ], [ null, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #7
  %81 = icmp eq %"class.v8::internal::Isolate"* %8, null
  br i1 %81, label %96, label %82

82:                                               ; preds = %77
  %83 = inttoptr i64 %78 to i64*
  %84 = inttoptr i64 %79 to i64*
  %85 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %86 = load i64*, i64** %85, align 8
  store i64 %78, i64* %10, align 8
  %87 = load i32, i32* %15, align 8
  %88 = add nsw i32 %87, -1
  store i32 %88, i32* %15, align 8
  %89 = load i64*, i64** %12, align 8
  %90 = icmp eq i64* %89, %84
  br i1 %90, label %93, label %91

91:                                               ; preds = %82
  store i64* %84, i64** %12, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #7
  %92 = load i64*, i64** %85, align 8
  br label %93

93:                                               ; preds = %91, %82
  %94 = phi i64* [ %92, %91 ], [ %83, %82 ]
  %95 = phi i64* [ %84, %91 ], [ %86, %82 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %94, i64* %95) #7
  br label %96

96:                                               ; preds = %77, %93
  ret i64* %80
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15JsonStringifier13CurrentHolderENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::JsonStringifier"* nocapture readonly, i64* nocapture readnone, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7, i32 0, i32 1
  %7 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.1134"* %5, %7
  br i1 %8, label %9, label %59

9:                                                ; preds = %3
  %10 = bitcast %"class.v8::internal::JsonStringifier"* %0 to %"class.v8::internal::Factory"**
  %11 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %13 = bitcast %"class.v8::internal::Factory"* %11 to %"class.v8::internal::Isolate"*
  %14 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %11, i64 13840
  %15 = bitcast %"class.v8::internal::Factory"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, -4294967296
  %18 = add i64 %16, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, 19
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %17, %26
  %28 = add i64 %27, 571
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %17, %31
  %33 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %11, i64 45608
  %34 = bitcast %"class.v8::internal::Factory"* %33 to %"class.v8::internal::CanonicalHandleScope"**
  %35 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %34, align 8
  %36 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %9
  %38 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %35, i64 %32) #7
  br label %54

39:                                               ; preds = %9
  %40 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %11, i64 45584
  %41 = bitcast %"class.v8::internal::Factory"* %40 to i64**
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %11, i64 45592
  %44 = bitcast %"class.v8::internal::Factory"* %43 to i64**
  %45 = load i64*, i64** %44, align 8
  %46 = icmp eq i64* %42, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %39
  %48 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #7
  br label %49

49:                                               ; preds = %47, %39
  %50 = phi i64* [ %48, %47 ], [ %42, %39 ]
  %51 = ptrtoint i64* %50 to i64
  %52 = add i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  store i64* %53, i64** %41, align 8
  store i64 %32, i64* %50, align 8
  br label %54

54:                                               ; preds = %37, %49
  %55 = phi i64* [ %38, %37 ], [ %50, %49 ]
  %56 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %11, i64* %55, i8 zeroext 0) #7
  %57 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 0, i32 7, i32 0, i64 9
  tail call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %57, i64* %56, i64* %58, i64* %2, i32 0) #7
  br label %83

59:                                               ; preds = %3
  %60 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %7, i64 -1, i32 1, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 4
  %66 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %65, align 8
  %67 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %59
  %69 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %66, i64 %62) #7
  br label %83

70:                                               ; preds = %59
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = icmp eq i64* %72, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %70
  %77 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %64) #7
  br label %78

78:                                               ; preds = %76, %70
  %79 = phi i64* [ %77, %76 ], [ %72, %70 ]
  %80 = ptrtoint i64* %79 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  store i64* %82, i64** %71, align 8
  store i64 %62, i64* %79, align 8
  br label %83

83:                                               ; preds = %78, %68, %54
  %84 = phi i64* [ %56, %54 ], [ %69, %68 ], [ %79, %78 ]
  ret i64* %84
}

declare i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal15JsonStringifier9StackPushENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::JsonStringifier"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint i64* %1 to i64
  %5 = ptrtoint i64* %2 to i64
  %6 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 6, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %27, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7
  %14 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::pair.1134"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.1132"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  %20 = inttoptr i64 %18 to %"struct.std::__1::pair.1134"*
  %21 = inttoptr i64 %16 to %"struct.std::__1::pair.1134"*
  br i1 %19, label %48, label %22

22:                                               ; preds = %12
  %23 = load i64, i64* %1, align 8
  %24 = trunc i64 %23 to i32
  %25 = sub i64 %16, %18
  %26 = ashr exact i64 %25, 4
  br label %30

27:                                               ; preds = %3
  %28 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %29 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %28) #7
  br label %114

30:                                               ; preds = %22, %37
  %31 = phi i64 [ 0, %22 ], [ %38, %37 ]
  %32 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %20, i64 %31, i32 1, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  %36 = icmp eq i32 %35, %24
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = add nuw i64 %31, 1
  %39 = icmp ult i64 %38, %26
  br i1 %39, label %30, label %48

40:                                               ; preds = %30
  %41 = tail call i64* @_ZN2v88internal15JsonStringifier38ConstructCircularStructureErrorMessageENS0_6HandleINS0_6ObjectEEEm(%"class.v8::internal::JsonStringifier"* %0, i64* %2, i64 %31)
  %42 = bitcast %"class.v8::internal::JsonStringifier"* %0 to %"class.v8::internal::Factory"**
  %43 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %42, align 8
  %44 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %43, i32 35, i64* %41, i64* null, i64* null) #7
  %45 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %46 = load i64, i64* %44, align 8
  %47 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %45, i64 %46, %"class.v8::internal::MessageLocation"* null) #7
  br label %114

48:                                               ; preds = %37, %12
  %49 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %50 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %49, align 8
  %51 = icmp ugt %"struct.std::__1::pair.1134"* %50, %21
  %52 = ptrtoint %"struct.std::__1::pair.1134"* %50 to i64
  br i1 %51, label %53, label %59

53:                                               ; preds = %48
  %54 = inttoptr i64 %16 to i64*
  store i64 %5, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %21, i64 0, i32 1
  %56 = bitcast %"class.v8::internal::Handle.1128"* %55 to i64*
  store i64 %4, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %21, i64 1
  %58 = ptrtoint %"struct.std::__1::pair.1134"* %57 to i64
  store i64 %58, i64* %15, align 8
  br label %114

59:                                               ; preds = %48
  %60 = sub i64 %16, %18
  %61 = ashr exact i64 %60, 4
  %62 = add nsw i64 %61, 1
  %63 = icmp ugt i64 %62, 1152921504606846975
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = bitcast %"class.std::__1::vector.1132"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %65) #14
  unreachable

66:                                               ; preds = %59
  %67 = bitcast %"struct.std::__1::pair.1134"** %49 to i64*
  %68 = sub i64 %52, %18
  %69 = ashr exact i64 %68, 4
  %70 = icmp ult i64 %69, 576460752303423487
  br i1 %70, label %71, label %79

71:                                               ; preds = %66
  %72 = ashr exact i64 %68, 3
  %73 = icmp ult i64 %72, %62
  %74 = select i1 %73, i64 %62, i64 %72
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %71
  %77 = icmp ugt i64 %74, 1152921504606846975
  br i1 %77, label %78, label %79

78:                                               ; preds = %76
  tail call void @abort() #14
  unreachable

79:                                               ; preds = %76, %66
  %80 = phi i64 [ %74, %76 ], [ 1152921504606846975, %66 ]
  %81 = shl i64 %80, 4
  %82 = tail call i8* @_Znwm(i64 %81) #13
  %83 = bitcast i8* %82 to %"struct.std::__1::pair.1134"*
  br label %84

84:                                               ; preds = %79, %71
  %85 = phi i64 [ %80, %79 ], [ 0, %71 ]
  %86 = phi %"struct.std::__1::pair.1134"* [ %83, %79 ], [ null, %71 ]
  %87 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %86, i64 %61
  %88 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %86, i64 %85
  %89 = ptrtoint %"struct.std::__1::pair.1134"* %88 to i64
  %90 = bitcast %"struct.std::__1::pair.1134"* %87 to i64*
  store i64 %5, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %86, i64 %61, i32 1
  %92 = bitcast %"class.v8::internal::Handle.1128"* %91 to i64*
  store i64 %4, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %87, i64 1
  %94 = ptrtoint %"struct.std::__1::pair.1134"* %93 to i64
  %95 = getelementptr inbounds %"class.std::__1::vector.1132", %"class.std::__1::vector.1132"* %13, i64 0, i32 0, i32 0
  %96 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %95, align 8
  %97 = load i64, i64* %15, align 8
  %98 = ptrtoint %"struct.std::__1::pair.1134"* %96 to i64
  %99 = sub i64 %97, %98
  %100 = ashr exact i64 %99, 4
  %101 = sub nsw i64 0, %100
  %102 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %87, i64 %101
  %103 = ptrtoint %"struct.std::__1::pair.1134"* %102 to i64
  %104 = icmp sgt i64 %99, 0
  br i1 %104, label %105, label %109

105:                                              ; preds = %84
  %106 = bitcast %"struct.std::__1::pair.1134"* %102 to i8*
  %107 = bitcast %"struct.std::__1::pair.1134"* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 %99, i1 false) #7
  %108 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %95, align 8
  br label %109

109:                                              ; preds = %105, %84
  %110 = phi %"struct.std::__1::pair.1134"* [ %96, %84 ], [ %108, %105 ]
  store i64 %103, i64* %17, align 8
  store i64 %94, i64* %15, align 8
  store i64 %89, i64* %67, align 8
  %111 = icmp eq %"struct.std::__1::pair.1134"* %110, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %109
  %113 = bitcast %"struct.std::__1::pair.1134"* %110 to i8*
  tail call void @_ZdlPv(i8* %113) #13
  br label %114

114:                                              ; preds = %53, %109, %112, %40, %27
  %115 = phi i32 [ 2, %27 ], [ 2, %40 ], [ 1, %112 ], [ 1, %109 ], [ 1, %53 ]
  ret i32 %115
}

declare i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15JsonStringifier38ConstructCircularStructureErrorMessageENS0_6HandleINS0_6ObjectEEEm(%"class.v8::internal::JsonStringifier"* nocapture readonly, i64*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::CircularStructureMessageBuilder", align 8
  %5 = bitcast %"class.v8::internal::CircularStructureMessageBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %4, i64 0, i32 0
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8, %"class.v8::internal::Isolate"* %7) #7
  %9 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair.1134"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.1132"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 4
  %17 = getelementptr inbounds %"class.std::__1::vector.1132", %"class.std::__1::vector.1132"* %9, i64 0, i32 0, i32 0
  %18 = inttoptr i64 %14 to %"struct.std::__1::pair.1134"*
  %19 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %18, i64 %2, i32 1, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  call void @_ZN2v88internal31CircularStructureMessageBuilder15AppendStartLineENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::CircularStructureMessageBuilder"* nonnull %4, i64* %20)
  %21 = add i64 %2, 3
  %22 = icmp ult i64 %21, %16
  %23 = select i1 %22, i64 %21, i64 %16
  %24 = add i64 %2, 1
  %25 = icmp ult i64 %24, %23
  br i1 %25, label %26, label %35

26:                                               ; preds = %3, %26
  %27 = phi i64 [ %33, %26 ], [ %24, %3 ]
  %28 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %17, align 8
  %29 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %28, i64 %27, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %28, i64 %27, i32 1, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  call void @_ZN2v88internal31CircularStructureMessageBuilder16AppendNormalLineENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::CircularStructureMessageBuilder"* nonnull %4, i64* %30, i64* %32)
  %33 = add nuw i64 %27, 1
  %34 = icmp ult i64 %33, %23
  br i1 %34, label %26, label %35

35:                                               ; preds = %26, %3
  %36 = phi i64 [ %2, %3 ], [ %27, %26 ]
  %37 = phi i64 [ %24, %3 ], [ %33, %26 ]
  %38 = add i64 %36, 2
  %39 = icmp ugt i64 %16, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  call void @_ZN2v88internal31CircularStructureMessageBuilder14AppendEllipsisEv(%"class.v8::internal::CircularStructureMessageBuilder"* nonnull %4)
  br label %41

41:                                               ; preds = %40, %35
  %42 = add nsw i64 %16, -1
  %43 = icmp ult i64 %37, %42
  %44 = select i1 %43, i64 %42, i64 %37
  %45 = icmp ult i64 %44, %16
  br i1 %45, label %46, label %55

46:                                               ; preds = %41, %46
  %47 = phi i64 [ %53, %46 ], [ %44, %41 ]
  %48 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %17, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %48, i64 %47, i32 0, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %48, i64 %47, i32 1, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  call void @_ZN2v88internal31CircularStructureMessageBuilder16AppendNormalLineENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::CircularStructureMessageBuilder"* nonnull %4, i64* %50, i64* %52)
  %53 = add nuw i64 %47, 1
  %54 = icmp ult i64 %53, %16
  br i1 %54, label %46, label %55

55:                                               ; preds = %46, %41
  call void @_ZN2v88internal31CircularStructureMessageBuilder17AppendClosingLineENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::CircularStructureMessageBuilder"* nonnull %4, i64* %1)
  %56 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #7
  %57 = icmp eq i64* %56, null
  br i1 %57, label %58, label %63

58:                                               ; preds = %55
  %59 = bitcast %"class.v8::internal::JsonStringifier"* %0 to %"class.v8::internal::Factory"**
  %60 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %60, i64 200
  %62 = bitcast %"class.v8::internal::Factory"* %61 to i64*
  br label %63

63:                                               ; preds = %55, %58
  %64 = phi i64* [ %62, %58 ], [ %56, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #7
  ret i64* %64
}

declare i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal15JsonStringifier8StackPopEv(%"class.v8::internal::JsonStringifier"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7, i32 0, i32 1
  %3 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %3, i64 -1
  store %"struct.std::__1::pair.1134"* %4, %"struct.std::__1::pair.1134"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal31CircularStructureMessageBuilder15AppendStartLineENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::CircularStructureMessageBuilder"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 4
  %9 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 3
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  %12 = load i32, i32* %8, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %8, align 4
  br i1 %6, label %23, label %14

14:                                               ; preds = %2
  %15 = shl nsw i32 %12, 1
  %16 = sext i32 %15 to i64
  %17 = add i64 %11, 11
  %18 = add i64 %17, %16
  %19 = inttoptr i64 %18 to i16*
  store i16 10, i16* %19, align 2
  %20 = load i32, i32* %8, align 4
  %21 = load i32, i32* %9, align 8
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %45, label %47

23:                                               ; preds = %2
  %24 = sext i32 %12 to i64
  %25 = add i64 %11, 11
  %26 = add i64 %25, %24
  %27 = inttoptr i64 %26 to i8*
  store i8 10, i8* %27, align 1
  %28 = load i32, i32* %8, align 4
  %29 = load i32, i32* %9, align 8
  %30 = icmp eq i32 %28, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %23
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %32 = load i32, i32* %8, align 4
  br label %33

33:                                               ; preds = %31, %23
  %34 = phi i32 [ %32, %31 ], [ %28, %23 ]
  %35 = load i64*, i64** %7, align 8
  %36 = load i64, i64* %35, align 8
  %37 = add nsw i32 %34, 1
  store i32 %37, i32* %8, align 4
  %38 = sext i32 %34 to i64
  %39 = add i64 %36, 11
  %40 = add i64 %39, %38
  %41 = inttoptr i64 %40 to i8*
  store i8 32, i8* %41, align 1
  %42 = load i32, i32* %8, align 4
  %43 = load i32, i32* %9, align 8
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %104, label %106

45:                                               ; preds = %14
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %46 = load i32, i32* %8, align 4
  br label %47

47:                                               ; preds = %45, %14
  %48 = phi i32 [ %46, %45 ], [ %20, %14 ]
  %49 = load i64*, i64** %7, align 8
  %50 = load i64, i64* %49, align 8
  %51 = add nsw i32 %48, 1
  store i32 %51, i32* %8, align 4
  %52 = shl nsw i32 %48, 1
  %53 = sext i32 %52 to i64
  %54 = add i64 %50, 11
  %55 = add i64 %54, %53
  %56 = inttoptr i64 %55 to i16*
  store i16 32, i16* %56, align 2
  %57 = load i32, i32* %8, align 4
  %58 = load i32, i32* %9, align 8
  %59 = icmp eq i32 %57, %58
  br i1 %59, label %203, label %205

60:                                               ; preds = %295, %308, %190, %202
  %61 = load i32, i32* %4, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %82

63:                                               ; preds = %60, %79
  %64 = phi i8 [ %80, %79 ], [ 115, %60 ]
  %65 = phi i8* [ %66, %79 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0), %60 ]
  %66 = getelementptr inbounds i8, i8* %65, i64 1
  %67 = load i64*, i64** %7, align 8
  %68 = load i64, i64* %67, align 8
  %69 = load i32, i32* %8, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %8, align 4
  %71 = sext i32 %69 to i64
  %72 = add i64 %68, 11
  %73 = add i64 %72, %71
  %74 = inttoptr i64 %73 to i8*
  store i8 %64, i8* %74, align 1
  %75 = load i32, i32* %8, align 4
  %76 = load i32, i32* %9, align 8
  %77 = icmp eq i32 %75, %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %63
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  br label %79

79:                                               ; preds = %78, %63
  %80 = load i8, i8* %66, align 1
  %81 = icmp eq i8* %66, getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 36)
  br i1 %81, label %103, label %63

82:                                               ; preds = %60, %100
  %83 = phi i8 [ %101, %100 ], [ 115, %60 ]
  %84 = phi i8* [ %85, %100 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0), %60 ]
  %85 = getelementptr inbounds i8, i8* %84, i64 1
  %86 = load i64*, i64** %7, align 8
  %87 = load i64, i64* %86, align 8
  %88 = load i32, i32* %8, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %8, align 4
  %90 = zext i8 %83 to i16
  %91 = shl nsw i32 %88, 1
  %92 = sext i32 %91 to i64
  %93 = add i64 %87, 11
  %94 = add i64 %93, %92
  %95 = inttoptr i64 %94 to i16*
  store i16 %90, i16* %95, align 2
  %96 = load i32, i32* %8, align 4
  %97 = load i32, i32* %9, align 8
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %99, label %100

99:                                               ; preds = %82
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  br label %100

100:                                              ; preds = %99, %82
  %101 = load i8, i8* %85, align 1
  %102 = icmp eq i8* %85, getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 36)
  br i1 %102, label %103, label %82

103:                                              ; preds = %100, %79
  tail call void @_ZN2v88internal31CircularStructureMessageBuilder21AppendConstructorNameENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::CircularStructureMessageBuilder"* %0, i64* %1)
  ret void

104:                                              ; preds = %33
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %105 = load i32, i32* %8, align 4
  br label %106

106:                                              ; preds = %104, %33
  %107 = phi i32 [ %105, %104 ], [ %42, %33 ]
  %108 = load i64*, i64** %7, align 8
  %109 = load i64, i64* %108, align 8
  %110 = add nsw i32 %107, 1
  store i32 %110, i32* %8, align 4
  %111 = sext i32 %107 to i64
  %112 = add i64 %109, 11
  %113 = add i64 %112, %111
  %114 = inttoptr i64 %113 to i8*
  store i8 32, i8* %114, align 1
  %115 = load i32, i32* %8, align 4
  %116 = load i32, i32* %9, align 8
  %117 = icmp eq i32 %115, %116
  br i1 %117, label %118, label %120

118:                                              ; preds = %106
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %119 = load i32, i32* %8, align 4
  br label %120

120:                                              ; preds = %118, %106
  %121 = phi i32 [ %119, %118 ], [ %115, %106 ]
  %122 = load i64*, i64** %7, align 8
  %123 = load i64, i64* %122, align 8
  %124 = add nsw i32 %121, 1
  store i32 %124, i32* %8, align 4
  %125 = sext i32 %121 to i64
  %126 = add i64 %123, 11
  %127 = add i64 %126, %125
  %128 = inttoptr i64 %127 to i8*
  store i8 32, i8* %128, align 1
  %129 = load i32, i32* %8, align 4
  %130 = load i32, i32* %9, align 8
  %131 = icmp eq i32 %129, %130
  br i1 %131, label %132, label %134

132:                                              ; preds = %120
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %133 = load i32, i32* %8, align 4
  br label %134

134:                                              ; preds = %132, %120
  %135 = phi i32 [ %133, %132 ], [ %129, %120 ]
  %136 = load i64*, i64** %7, align 8
  %137 = load i64, i64* %136, align 8
  %138 = add nsw i32 %135, 1
  store i32 %138, i32* %8, align 4
  %139 = sext i32 %135 to i64
  %140 = add i64 %137, 11
  %141 = add i64 %140, %139
  %142 = inttoptr i64 %141 to i8*
  store i8 32, i8* %142, align 1
  %143 = load i32, i32* %8, align 4
  %144 = load i32, i32* %9, align 8
  %145 = icmp eq i32 %143, %144
  br i1 %145, label %146, label %148

146:                                              ; preds = %134
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %147 = load i32, i32* %8, align 4
  br label %148

148:                                              ; preds = %146, %134
  %149 = phi i32 [ %147, %146 ], [ %143, %134 ]
  %150 = load i64*, i64** %7, align 8
  %151 = load i64, i64* %150, align 8
  %152 = add nsw i32 %149, 1
  store i32 %152, i32* %8, align 4
  %153 = sext i32 %149 to i64
  %154 = add i64 %151, 11
  %155 = add i64 %154, %153
  %156 = inttoptr i64 %155 to i8*
  store i8 45, i8* %156, align 1
  %157 = load i32, i32* %8, align 4
  %158 = load i32, i32* %9, align 8
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %160, label %162

160:                                              ; preds = %148
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %161 = load i32, i32* %8, align 4
  br label %162

162:                                              ; preds = %160, %148
  %163 = phi i32 [ %161, %160 ], [ %157, %148 ]
  %164 = load i64*, i64** %7, align 8
  %165 = load i64, i64* %164, align 8
  %166 = add nsw i32 %163, 1
  store i32 %166, i32* %8, align 4
  %167 = sext i32 %163 to i64
  %168 = add i64 %165, 11
  %169 = add i64 %168, %167
  %170 = inttoptr i64 %169 to i8*
  store i8 45, i8* %170, align 1
  %171 = load i32, i32* %8, align 4
  %172 = load i32, i32* %9, align 8
  %173 = icmp eq i32 %171, %172
  br i1 %173, label %174, label %176

174:                                              ; preds = %162
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %175 = load i32, i32* %8, align 4
  br label %176

176:                                              ; preds = %174, %162
  %177 = phi i32 [ %175, %174 ], [ %171, %162 ]
  %178 = load i64*, i64** %7, align 8
  %179 = load i64, i64* %178, align 8
  %180 = add nsw i32 %177, 1
  store i32 %180, i32* %8, align 4
  %181 = sext i32 %177 to i64
  %182 = add i64 %179, 11
  %183 = add i64 %182, %181
  %184 = inttoptr i64 %183 to i8*
  store i8 62, i8* %184, align 1
  %185 = load i32, i32* %8, align 4
  %186 = load i32, i32* %9, align 8
  %187 = icmp eq i32 %185, %186
  br i1 %187, label %188, label %190

188:                                              ; preds = %176
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %189 = load i32, i32* %8, align 4
  br label %190

190:                                              ; preds = %188, %176
  %191 = phi i32 [ %189, %188 ], [ %185, %176 ]
  %192 = load i64*, i64** %7, align 8
  %193 = load i64, i64* %192, align 8
  %194 = add nsw i32 %191, 1
  store i32 %194, i32* %8, align 4
  %195 = sext i32 %191 to i64
  %196 = add i64 %193, 11
  %197 = add i64 %196, %195
  %198 = inttoptr i64 %197 to i8*
  store i8 32, i8* %198, align 1
  %199 = load i32, i32* %8, align 4
  %200 = load i32, i32* %9, align 8
  %201 = icmp eq i32 %199, %200
  br i1 %201, label %202, label %60

202:                                              ; preds = %190
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  br label %60

203:                                              ; preds = %47
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %204 = load i32, i32* %8, align 4
  br label %205

205:                                              ; preds = %203, %47
  %206 = phi i32 [ %204, %203 ], [ %57, %47 ]
  %207 = load i64*, i64** %7, align 8
  %208 = load i64, i64* %207, align 8
  %209 = add nsw i32 %206, 1
  store i32 %209, i32* %8, align 4
  %210 = shl nsw i32 %206, 1
  %211 = sext i32 %210 to i64
  %212 = add i64 %208, 11
  %213 = add i64 %212, %211
  %214 = inttoptr i64 %213 to i16*
  store i16 32, i16* %214, align 2
  %215 = load i32, i32* %8, align 4
  %216 = load i32, i32* %9, align 8
  %217 = icmp eq i32 %215, %216
  br i1 %217, label %218, label %220

218:                                              ; preds = %205
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %219 = load i32, i32* %8, align 4
  br label %220

220:                                              ; preds = %218, %205
  %221 = phi i32 [ %219, %218 ], [ %215, %205 ]
  %222 = load i64*, i64** %7, align 8
  %223 = load i64, i64* %222, align 8
  %224 = add nsw i32 %221, 1
  store i32 %224, i32* %8, align 4
  %225 = shl nsw i32 %221, 1
  %226 = sext i32 %225 to i64
  %227 = add i64 %223, 11
  %228 = add i64 %227, %226
  %229 = inttoptr i64 %228 to i16*
  store i16 32, i16* %229, align 2
  %230 = load i32, i32* %8, align 4
  %231 = load i32, i32* %9, align 8
  %232 = icmp eq i32 %230, %231
  br i1 %232, label %233, label %235

233:                                              ; preds = %220
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %234 = load i32, i32* %8, align 4
  br label %235

235:                                              ; preds = %233, %220
  %236 = phi i32 [ %234, %233 ], [ %230, %220 ]
  %237 = load i64*, i64** %7, align 8
  %238 = load i64, i64* %237, align 8
  %239 = add nsw i32 %236, 1
  store i32 %239, i32* %8, align 4
  %240 = shl nsw i32 %236, 1
  %241 = sext i32 %240 to i64
  %242 = add i64 %238, 11
  %243 = add i64 %242, %241
  %244 = inttoptr i64 %243 to i16*
  store i16 32, i16* %244, align 2
  %245 = load i32, i32* %8, align 4
  %246 = load i32, i32* %9, align 8
  %247 = icmp eq i32 %245, %246
  br i1 %247, label %248, label %250

248:                                              ; preds = %235
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %249 = load i32, i32* %8, align 4
  br label %250

250:                                              ; preds = %248, %235
  %251 = phi i32 [ %249, %248 ], [ %245, %235 ]
  %252 = load i64*, i64** %7, align 8
  %253 = load i64, i64* %252, align 8
  %254 = add nsw i32 %251, 1
  store i32 %254, i32* %8, align 4
  %255 = shl nsw i32 %251, 1
  %256 = sext i32 %255 to i64
  %257 = add i64 %253, 11
  %258 = add i64 %257, %256
  %259 = inttoptr i64 %258 to i16*
  store i16 45, i16* %259, align 2
  %260 = load i32, i32* %8, align 4
  %261 = load i32, i32* %9, align 8
  %262 = icmp eq i32 %260, %261
  br i1 %262, label %263, label %265

263:                                              ; preds = %250
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %264 = load i32, i32* %8, align 4
  br label %265

265:                                              ; preds = %263, %250
  %266 = phi i32 [ %264, %263 ], [ %260, %250 ]
  %267 = load i64*, i64** %7, align 8
  %268 = load i64, i64* %267, align 8
  %269 = add nsw i32 %266, 1
  store i32 %269, i32* %8, align 4
  %270 = shl nsw i32 %266, 1
  %271 = sext i32 %270 to i64
  %272 = add i64 %268, 11
  %273 = add i64 %272, %271
  %274 = inttoptr i64 %273 to i16*
  store i16 45, i16* %274, align 2
  %275 = load i32, i32* %8, align 4
  %276 = load i32, i32* %9, align 8
  %277 = icmp eq i32 %275, %276
  br i1 %277, label %278, label %280

278:                                              ; preds = %265
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %279 = load i32, i32* %8, align 4
  br label %280

280:                                              ; preds = %278, %265
  %281 = phi i32 [ %279, %278 ], [ %275, %265 ]
  %282 = load i64*, i64** %7, align 8
  %283 = load i64, i64* %282, align 8
  %284 = add nsw i32 %281, 1
  store i32 %284, i32* %8, align 4
  %285 = shl nsw i32 %281, 1
  %286 = sext i32 %285 to i64
  %287 = add i64 %283, 11
  %288 = add i64 %287, %286
  %289 = inttoptr i64 %288 to i16*
  store i16 62, i16* %289, align 2
  %290 = load i32, i32* %8, align 4
  %291 = load i32, i32* %9, align 8
  %292 = icmp eq i32 %290, %291
  br i1 %292, label %293, label %295

293:                                              ; preds = %280
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %294 = load i32, i32* %8, align 4
  br label %295

295:                                              ; preds = %293, %280
  %296 = phi i32 [ %294, %293 ], [ %290, %280 ]
  %297 = load i64*, i64** %7, align 8
  %298 = load i64, i64* %297, align 8
  %299 = add nsw i32 %296, 1
  store i32 %299, i32* %8, align 4
  %300 = shl nsw i32 %296, 1
  %301 = sext i32 %300 to i64
  %302 = add i64 %298, 11
  %303 = add i64 %302, %301
  %304 = inttoptr i64 %303 to i16*
  store i16 32, i16* %304, align 2
  %305 = load i32, i32* %8, align 4
  %306 = load i32, i32* %9, align 8
  %307 = icmp eq i32 %305, %306
  br i1 %307, label %308, label %60

308:                                              ; preds = %295
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  br label %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal31CircularStructureMessageBuilder16AppendNormalLineENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::CircularStructureMessageBuilder"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 4
  %10 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 3
  %11 = load i64*, i64** %8, align 8
  %12 = load i64, i64* %11, align 8
  %13 = load i32, i32* %9, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %9, align 4
  br i1 %7, label %24, label %15

15:                                               ; preds = %3
  %16 = shl nsw i32 %13, 1
  %17 = sext i32 %16 to i64
  %18 = add i64 %12, 11
  %19 = add i64 %18, %17
  %20 = inttoptr i64 %19 to i16*
  store i16 10, i16* %20, align 2
  %21 = load i32, i32* %9, align 4
  %22 = load i32, i32* %10, align 8
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %46, label %48

24:                                               ; preds = %3
  %25 = sext i32 %13 to i64
  %26 = add i64 %12, 11
  %27 = add i64 %26, %25
  %28 = inttoptr i64 %27 to i8*
  store i8 10, i8* %28, align 1
  %29 = load i32, i32* %9, align 4
  %30 = load i32, i32* %10, align 8
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %24
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %33 = load i32, i32* %9, align 4
  br label %34

34:                                               ; preds = %32, %24
  %35 = phi i32 [ %33, %32 ], [ %29, %24 ]
  %36 = load i64*, i64** %8, align 8
  %37 = load i64, i64* %36, align 8
  %38 = add nsw i32 %35, 1
  store i32 %38, i32* %9, align 4
  %39 = sext i32 %35 to i64
  %40 = add i64 %37, 11
  %41 = add i64 %40, %39
  %42 = inttoptr i64 %41 to i8*
  store i8 32, i8* %42, align 1
  %43 = load i32, i32* %9, align 4
  %44 = load i32, i32* %10, align 8
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %105, label %107

46:                                               ; preds = %15
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %47 = load i32, i32* %9, align 4
  br label %48

48:                                               ; preds = %46, %15
  %49 = phi i32 [ %47, %46 ], [ %21, %15 ]
  %50 = load i64*, i64** %8, align 8
  %51 = load i64, i64* %50, align 8
  %52 = add nsw i32 %49, 1
  store i32 %52, i32* %9, align 4
  %53 = shl nsw i32 %49, 1
  %54 = sext i32 %53 to i64
  %55 = add i64 %51, 11
  %56 = add i64 %55, %54
  %57 = inttoptr i64 %56 to i16*
  store i16 32, i16* %57, align 2
  %58 = load i32, i32* %9, align 4
  %59 = load i32, i32* %10, align 8
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %232, label %234

61:                                               ; preds = %354, %367, %219, %231
  tail call void @_ZN2v88internal31CircularStructureMessageBuilder9AppendKeyENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::CircularStructureMessageBuilder"* %0, i64* %1)
  %62 = load i32, i32* %5, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %83

64:                                               ; preds = %61, %80
  %65 = phi i8 [ %81, %80 ], [ 32, %61 ]
  %66 = phi i8* [ %67, %80 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0), %61 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 1
  %68 = load i64*, i64** %8, align 8
  %69 = load i64, i64* %68, align 8
  %70 = load i32, i32* %9, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %9, align 4
  %72 = sext i32 %70 to i64
  %73 = add i64 %69, 11
  %74 = add i64 %73, %72
  %75 = inttoptr i64 %74 to i8*
  store i8 %65, i8* %75, align 1
  %76 = load i32, i32* %9, align 4
  %77 = load i32, i32* %10, align 8
  %78 = icmp eq i32 %76, %77
  br i1 %78, label %79, label %80

79:                                               ; preds = %64
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  br label %80

80:                                               ; preds = %79, %64
  %81 = load i8, i8* %67, align 1
  %82 = icmp eq i8* %67, getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 28)
  br i1 %82, label %104, label %64

83:                                               ; preds = %61, %101
  %84 = phi i8 [ %102, %101 ], [ 32, %61 ]
  %85 = phi i8* [ %86, %101 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0), %61 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 1
  %87 = load i64*, i64** %8, align 8
  %88 = load i64, i64* %87, align 8
  %89 = load i32, i32* %9, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %9, align 4
  %91 = zext i8 %84 to i16
  %92 = shl nsw i32 %89, 1
  %93 = sext i32 %92 to i64
  %94 = add i64 %88, 11
  %95 = add i64 %94, %93
  %96 = inttoptr i64 %95 to i16*
  store i16 %91, i16* %96, align 2
  %97 = load i32, i32* %9, align 4
  %98 = load i32, i32* %10, align 8
  %99 = icmp eq i32 %97, %98
  br i1 %99, label %100, label %101

100:                                              ; preds = %83
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  br label %101

101:                                              ; preds = %100, %83
  %102 = load i8, i8* %86, align 1
  %103 = icmp eq i8* %86, getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 28)
  br i1 %103, label %104, label %83

104:                                              ; preds = %101, %80
  tail call void @_ZN2v88internal31CircularStructureMessageBuilder21AppendConstructorNameENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::CircularStructureMessageBuilder"* %0, i64* %2)
  ret void

105:                                              ; preds = %34
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %106 = load i32, i32* %9, align 4
  br label %107

107:                                              ; preds = %105, %34
  %108 = phi i32 [ %106, %105 ], [ %43, %34 ]
  %109 = load i64*, i64** %8, align 8
  %110 = load i64, i64* %109, align 8
  %111 = add nsw i32 %108, 1
  store i32 %111, i32* %9, align 4
  %112 = sext i32 %108 to i64
  %113 = add i64 %110, 11
  %114 = add i64 %113, %112
  %115 = inttoptr i64 %114 to i8*
  store i8 32, i8* %115, align 1
  %116 = load i32, i32* %9, align 4
  %117 = load i32, i32* %10, align 8
  %118 = icmp eq i32 %116, %117
  br i1 %118, label %119, label %121

119:                                              ; preds = %107
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %120 = load i32, i32* %9, align 4
  br label %121

121:                                              ; preds = %119, %107
  %122 = phi i32 [ %120, %119 ], [ %116, %107 ]
  %123 = load i64*, i64** %8, align 8
  %124 = load i64, i64* %123, align 8
  %125 = add nsw i32 %122, 1
  store i32 %125, i32* %9, align 4
  %126 = sext i32 %122 to i64
  %127 = add i64 %124, 11
  %128 = add i64 %127, %126
  %129 = inttoptr i64 %128 to i8*
  store i8 32, i8* %129, align 1
  %130 = load i32, i32* %9, align 4
  %131 = load i32, i32* %10, align 8
  %132 = icmp eq i32 %130, %131
  br i1 %132, label %133, label %135

133:                                              ; preds = %121
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %134 = load i32, i32* %9, align 4
  br label %135

135:                                              ; preds = %133, %121
  %136 = phi i32 [ %134, %133 ], [ %130, %121 ]
  %137 = load i64*, i64** %8, align 8
  %138 = load i64, i64* %137, align 8
  %139 = add nsw i32 %136, 1
  store i32 %139, i32* %9, align 4
  %140 = sext i32 %136 to i64
  %141 = add i64 %138, 11
  %142 = add i64 %141, %140
  %143 = inttoptr i64 %142 to i8*
  store i8 32, i8* %143, align 1
  %144 = load i32, i32* %9, align 4
  %145 = load i32, i32* %10, align 8
  %146 = icmp eq i32 %144, %145
  br i1 %146, label %147, label %149

147:                                              ; preds = %135
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %148 = load i32, i32* %9, align 4
  br label %149

149:                                              ; preds = %147, %135
  %150 = phi i32 [ %148, %147 ], [ %144, %135 ]
  %151 = load i64*, i64** %8, align 8
  %152 = load i64, i64* %151, align 8
  %153 = add nsw i32 %150, 1
  store i32 %153, i32* %9, align 4
  %154 = sext i32 %150 to i64
  %155 = add i64 %152, 11
  %156 = add i64 %155, %154
  %157 = inttoptr i64 %156 to i8*
  store i8 124, i8* %157, align 1
  %158 = load i32, i32* %9, align 4
  %159 = load i32, i32* %10, align 8
  %160 = icmp eq i32 %158, %159
  br i1 %160, label %161, label %163

161:                                              ; preds = %149
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %162 = load i32, i32* %9, align 4
  br label %163

163:                                              ; preds = %161, %149
  %164 = phi i32 [ %162, %161 ], [ %158, %149 ]
  %165 = load i64*, i64** %8, align 8
  %166 = load i64, i64* %165, align 8
  %167 = add nsw i32 %164, 1
  store i32 %167, i32* %9, align 4
  %168 = sext i32 %164 to i64
  %169 = add i64 %166, 11
  %170 = add i64 %169, %168
  %171 = inttoptr i64 %170 to i8*
  store i8 32, i8* %171, align 1
  %172 = load i32, i32* %9, align 4
  %173 = load i32, i32* %10, align 8
  %174 = icmp eq i32 %172, %173
  br i1 %174, label %175, label %177

175:                                              ; preds = %163
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %176 = load i32, i32* %9, align 4
  br label %177

177:                                              ; preds = %175, %163
  %178 = phi i32 [ %176, %175 ], [ %172, %163 ]
  %179 = load i64*, i64** %8, align 8
  %180 = load i64, i64* %179, align 8
  %181 = add nsw i32 %178, 1
  store i32 %181, i32* %9, align 4
  %182 = sext i32 %178 to i64
  %183 = add i64 %180, 11
  %184 = add i64 %183, %182
  %185 = inttoptr i64 %184 to i8*
  store i8 32, i8* %185, align 1
  %186 = load i32, i32* %9, align 4
  %187 = load i32, i32* %10, align 8
  %188 = icmp eq i32 %186, %187
  br i1 %188, label %189, label %191

189:                                              ; preds = %177
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %190 = load i32, i32* %9, align 4
  br label %191

191:                                              ; preds = %189, %177
  %192 = phi i32 [ %190, %189 ], [ %186, %177 ]
  %193 = load i64*, i64** %8, align 8
  %194 = load i64, i64* %193, align 8
  %195 = add nsw i32 %192, 1
  store i32 %195, i32* %9, align 4
  %196 = sext i32 %192 to i64
  %197 = add i64 %194, 11
  %198 = add i64 %197, %196
  %199 = inttoptr i64 %198 to i8*
  store i8 32, i8* %199, align 1
  %200 = load i32, i32* %9, align 4
  %201 = load i32, i32* %10, align 8
  %202 = icmp eq i32 %200, %201
  br i1 %202, label %203, label %205

203:                                              ; preds = %191
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %204 = load i32, i32* %9, align 4
  br label %205

205:                                              ; preds = %203, %191
  %206 = phi i32 [ %204, %203 ], [ %200, %191 ]
  %207 = load i64*, i64** %8, align 8
  %208 = load i64, i64* %207, align 8
  %209 = add nsw i32 %206, 1
  store i32 %209, i32* %9, align 4
  %210 = sext i32 %206 to i64
  %211 = add i64 %208, 11
  %212 = add i64 %211, %210
  %213 = inttoptr i64 %212 to i8*
  store i8 32, i8* %213, align 1
  %214 = load i32, i32* %9, align 4
  %215 = load i32, i32* %10, align 8
  %216 = icmp eq i32 %214, %215
  br i1 %216, label %217, label %219

217:                                              ; preds = %205
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %218 = load i32, i32* %9, align 4
  br label %219

219:                                              ; preds = %217, %205
  %220 = phi i32 [ %218, %217 ], [ %214, %205 ]
  %221 = load i64*, i64** %8, align 8
  %222 = load i64, i64* %221, align 8
  %223 = add nsw i32 %220, 1
  store i32 %223, i32* %9, align 4
  %224 = sext i32 %220 to i64
  %225 = add i64 %222, 11
  %226 = add i64 %225, %224
  %227 = inttoptr i64 %226 to i8*
  store i8 32, i8* %227, align 1
  %228 = load i32, i32* %9, align 4
  %229 = load i32, i32* %10, align 8
  %230 = icmp eq i32 %228, %229
  br i1 %230, label %231, label %61

231:                                              ; preds = %219
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  br label %61

232:                                              ; preds = %48
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %233 = load i32, i32* %9, align 4
  br label %234

234:                                              ; preds = %232, %48
  %235 = phi i32 [ %233, %232 ], [ %58, %48 ]
  %236 = load i64*, i64** %8, align 8
  %237 = load i64, i64* %236, align 8
  %238 = add nsw i32 %235, 1
  store i32 %238, i32* %9, align 4
  %239 = shl nsw i32 %235, 1
  %240 = sext i32 %239 to i64
  %241 = add i64 %237, 11
  %242 = add i64 %241, %240
  %243 = inttoptr i64 %242 to i16*
  store i16 32, i16* %243, align 2
  %244 = load i32, i32* %9, align 4
  %245 = load i32, i32* %10, align 8
  %246 = icmp eq i32 %244, %245
  br i1 %246, label %247, label %249

247:                                              ; preds = %234
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %248 = load i32, i32* %9, align 4
  br label %249

249:                                              ; preds = %247, %234
  %250 = phi i32 [ %248, %247 ], [ %244, %234 ]
  %251 = load i64*, i64** %8, align 8
  %252 = load i64, i64* %251, align 8
  %253 = add nsw i32 %250, 1
  store i32 %253, i32* %9, align 4
  %254 = shl nsw i32 %250, 1
  %255 = sext i32 %254 to i64
  %256 = add i64 %252, 11
  %257 = add i64 %256, %255
  %258 = inttoptr i64 %257 to i16*
  store i16 32, i16* %258, align 2
  %259 = load i32, i32* %9, align 4
  %260 = load i32, i32* %10, align 8
  %261 = icmp eq i32 %259, %260
  br i1 %261, label %262, label %264

262:                                              ; preds = %249
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %263 = load i32, i32* %9, align 4
  br label %264

264:                                              ; preds = %262, %249
  %265 = phi i32 [ %263, %262 ], [ %259, %249 ]
  %266 = load i64*, i64** %8, align 8
  %267 = load i64, i64* %266, align 8
  %268 = add nsw i32 %265, 1
  store i32 %268, i32* %9, align 4
  %269 = shl nsw i32 %265, 1
  %270 = sext i32 %269 to i64
  %271 = add i64 %267, 11
  %272 = add i64 %271, %270
  %273 = inttoptr i64 %272 to i16*
  store i16 32, i16* %273, align 2
  %274 = load i32, i32* %9, align 4
  %275 = load i32, i32* %10, align 8
  %276 = icmp eq i32 %274, %275
  br i1 %276, label %277, label %279

277:                                              ; preds = %264
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %278 = load i32, i32* %9, align 4
  br label %279

279:                                              ; preds = %277, %264
  %280 = phi i32 [ %278, %277 ], [ %274, %264 ]
  %281 = load i64*, i64** %8, align 8
  %282 = load i64, i64* %281, align 8
  %283 = add nsw i32 %280, 1
  store i32 %283, i32* %9, align 4
  %284 = shl nsw i32 %280, 1
  %285 = sext i32 %284 to i64
  %286 = add i64 %282, 11
  %287 = add i64 %286, %285
  %288 = inttoptr i64 %287 to i16*
  store i16 124, i16* %288, align 2
  %289 = load i32, i32* %9, align 4
  %290 = load i32, i32* %10, align 8
  %291 = icmp eq i32 %289, %290
  br i1 %291, label %292, label %294

292:                                              ; preds = %279
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %293 = load i32, i32* %9, align 4
  br label %294

294:                                              ; preds = %292, %279
  %295 = phi i32 [ %293, %292 ], [ %289, %279 ]
  %296 = load i64*, i64** %8, align 8
  %297 = load i64, i64* %296, align 8
  %298 = add nsw i32 %295, 1
  store i32 %298, i32* %9, align 4
  %299 = shl nsw i32 %295, 1
  %300 = sext i32 %299 to i64
  %301 = add i64 %297, 11
  %302 = add i64 %301, %300
  %303 = inttoptr i64 %302 to i16*
  store i16 32, i16* %303, align 2
  %304 = load i32, i32* %9, align 4
  %305 = load i32, i32* %10, align 8
  %306 = icmp eq i32 %304, %305
  br i1 %306, label %307, label %309

307:                                              ; preds = %294
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %308 = load i32, i32* %9, align 4
  br label %309

309:                                              ; preds = %307, %294
  %310 = phi i32 [ %308, %307 ], [ %304, %294 ]
  %311 = load i64*, i64** %8, align 8
  %312 = load i64, i64* %311, align 8
  %313 = add nsw i32 %310, 1
  store i32 %313, i32* %9, align 4
  %314 = shl nsw i32 %310, 1
  %315 = sext i32 %314 to i64
  %316 = add i64 %312, 11
  %317 = add i64 %316, %315
  %318 = inttoptr i64 %317 to i16*
  store i16 32, i16* %318, align 2
  %319 = load i32, i32* %9, align 4
  %320 = load i32, i32* %10, align 8
  %321 = icmp eq i32 %319, %320
  br i1 %321, label %322, label %324

322:                                              ; preds = %309
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %323 = load i32, i32* %9, align 4
  br label %324

324:                                              ; preds = %322, %309
  %325 = phi i32 [ %323, %322 ], [ %319, %309 ]
  %326 = load i64*, i64** %8, align 8
  %327 = load i64, i64* %326, align 8
  %328 = add nsw i32 %325, 1
  store i32 %328, i32* %9, align 4
  %329 = shl nsw i32 %325, 1
  %330 = sext i32 %329 to i64
  %331 = add i64 %327, 11
  %332 = add i64 %331, %330
  %333 = inttoptr i64 %332 to i16*
  store i16 32, i16* %333, align 2
  %334 = load i32, i32* %9, align 4
  %335 = load i32, i32* %10, align 8
  %336 = icmp eq i32 %334, %335
  br i1 %336, label %337, label %339

337:                                              ; preds = %324
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %338 = load i32, i32* %9, align 4
  br label %339

339:                                              ; preds = %337, %324
  %340 = phi i32 [ %338, %337 ], [ %334, %324 ]
  %341 = load i64*, i64** %8, align 8
  %342 = load i64, i64* %341, align 8
  %343 = add nsw i32 %340, 1
  store i32 %343, i32* %9, align 4
  %344 = shl nsw i32 %340, 1
  %345 = sext i32 %344 to i64
  %346 = add i64 %342, 11
  %347 = add i64 %346, %345
  %348 = inttoptr i64 %347 to i16*
  store i16 32, i16* %348, align 2
  %349 = load i32, i32* %9, align 4
  %350 = load i32, i32* %10, align 8
  %351 = icmp eq i32 %349, %350
  br i1 %351, label %352, label %354

352:                                              ; preds = %339
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  %353 = load i32, i32* %9, align 4
  br label %354

354:                                              ; preds = %352, %339
  %355 = phi i32 [ %353, %352 ], [ %349, %339 ]
  %356 = load i64*, i64** %8, align 8
  %357 = load i64, i64* %356, align 8
  %358 = add nsw i32 %355, 1
  store i32 %358, i32* %9, align 4
  %359 = shl nsw i32 %355, 1
  %360 = sext i32 %359 to i64
  %361 = add i64 %357, 11
  %362 = add i64 %361, %360
  %363 = inttoptr i64 %362 to i16*
  store i16 32, i16* %363, align 2
  %364 = load i32, i32* %9, align 4
  %365 = load i32, i32* %10, align 8
  %366 = icmp eq i32 %364, %365
  br i1 %366, label %367, label %61

367:                                              ; preds = %354
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %4) #7
  br label %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal31CircularStructureMessageBuilder14AppendEllipsisEv(%"class.v8::internal::CircularStructureMessageBuilder"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 4
  %8 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 3
  %9 = load i64*, i64** %6, align 8
  %10 = load i64, i64* %9, align 8
  %11 = load i32, i32* %7, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %7, align 4
  br i1 %5, label %22, label %13

13:                                               ; preds = %1
  %14 = shl nsw i32 %11, 1
  %15 = sext i32 %14 to i64
  %16 = add i64 %10, 11
  %17 = add i64 %16, %15
  %18 = inttoptr i64 %17 to i16*
  store i16 10, i16* %18, align 2
  %19 = load i32, i32* %7, align 4
  %20 = load i32, i32* %8, align 8
  %21 = icmp eq i32 %19, %20
  br i1 %21, label %44, label %46

22:                                               ; preds = %1
  %23 = sext i32 %11 to i64
  %24 = add i64 %10, 11
  %25 = add i64 %24, %23
  %26 = inttoptr i64 %25 to i8*
  store i8 10, i8* %26, align 1
  %27 = load i32, i32* %7, align 4
  %28 = load i32, i32* %8, align 8
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %22
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %31 = load i32, i32* %7, align 4
  br label %32

32:                                               ; preds = %30, %22
  %33 = phi i32 [ %31, %30 ], [ %27, %22 ]
  %34 = load i64*, i64** %6, align 8
  %35 = load i64, i64* %34, align 8
  %36 = add nsw i32 %33, 1
  store i32 %36, i32* %7, align 4
  %37 = sext i32 %33 to i64
  %38 = add i64 %35, 11
  %39 = add i64 %38, %37
  %40 = inttoptr i64 %39 to i8*
  store i8 32, i8* %40, align 1
  %41 = load i32, i32* %7, align 4
  %42 = load i32, i32* %8, align 8
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %144, label %146

44:                                               ; preds = %13
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %45 = load i32, i32* %7, align 4
  br label %46

46:                                               ; preds = %44, %13
  %47 = phi i32 [ %45, %44 ], [ %19, %13 ]
  %48 = load i64*, i64** %6, align 8
  %49 = load i64, i64* %48, align 8
  %50 = add nsw i32 %47, 1
  store i32 %50, i32* %7, align 4
  %51 = shl nsw i32 %47, 1
  %52 = sext i32 %51 to i64
  %53 = add i64 %49, 11
  %54 = add i64 %53, %52
  %55 = inttoptr i64 %54 to i16*
  store i16 32, i16* %55, align 2
  %56 = load i32, i32* %7, align 4
  %57 = load i32, i32* %8, align 8
  %58 = icmp eq i32 %56, %57
  br i1 %58, label %271, label %273

59:                                               ; preds = %393, %406, %258, %270
  %60 = load i32, i32* %3, align 8
  %61 = icmp eq i32 %60, 0
  %62 = load i64*, i64** %6, align 8
  %63 = load i64, i64* %62, align 8
  %64 = load i32, i32* %7, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %7, align 4
  br i1 %61, label %75, label %66

66:                                               ; preds = %59
  %67 = shl nsw i32 %64, 1
  %68 = sext i32 %67 to i64
  %69 = add i64 %63, 11
  %70 = add i64 %69, %68
  %71 = inttoptr i64 %70 to i16*
  store i16 46, i16* %71, align 2
  %72 = load i32, i32* %7, align 4
  %73 = load i32, i32* %8, align 8
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %97, label %99

75:                                               ; preds = %59
  %76 = sext i32 %64 to i64
  %77 = add i64 %63, 11
  %78 = add i64 %77, %76
  %79 = inttoptr i64 %78 to i8*
  store i8 46, i8* %79, align 1
  %80 = load i32, i32* %7, align 4
  %81 = load i32, i32* %8, align 8
  %82 = icmp eq i32 %80, %81
  br i1 %82, label %83, label %85

83:                                               ; preds = %75
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %84 = load i32, i32* %7, align 4
  br label %85

85:                                               ; preds = %83, %75
  %86 = phi i32 [ %84, %83 ], [ %80, %75 ]
  %87 = load i64*, i64** %6, align 8
  %88 = load i64, i64* %87, align 8
  %89 = add nsw i32 %86, 1
  store i32 %89, i32* %7, align 4
  %90 = sext i32 %86 to i64
  %91 = add i64 %88, 11
  %92 = add i64 %91, %90
  %93 = inttoptr i64 %92 to i8*
  store i8 46, i8* %93, align 1
  %94 = load i32, i32* %7, align 4
  %95 = load i32, i32* %8, align 8
  %96 = icmp eq i32 %94, %95
  br i1 %96, label %113, label %115

97:                                               ; preds = %66
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %98 = load i32, i32* %7, align 4
  br label %99

99:                                               ; preds = %97, %66
  %100 = phi i32 [ %98, %97 ], [ %72, %66 ]
  %101 = load i64*, i64** %6, align 8
  %102 = load i64, i64* %101, align 8
  %103 = add nsw i32 %100, 1
  store i32 %103, i32* %7, align 4
  %104 = shl nsw i32 %100, 1
  %105 = sext i32 %104 to i64
  %106 = add i64 %102, 11
  %107 = add i64 %106, %105
  %108 = inttoptr i64 %107 to i16*
  store i16 46, i16* %108, align 2
  %109 = load i32, i32* %7, align 4
  %110 = load i32, i32* %8, align 8
  %111 = icmp eq i32 %109, %110
  br i1 %111, label %128, label %130

112:                                              ; preds = %130, %143, %115, %127
  ret void

113:                                              ; preds = %85
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %114 = load i32, i32* %7, align 4
  br label %115

115:                                              ; preds = %113, %85
  %116 = phi i32 [ %114, %113 ], [ %94, %85 ]
  %117 = load i64*, i64** %6, align 8
  %118 = load i64, i64* %117, align 8
  %119 = add nsw i32 %116, 1
  store i32 %119, i32* %7, align 4
  %120 = sext i32 %116 to i64
  %121 = add i64 %118, 11
  %122 = add i64 %121, %120
  %123 = inttoptr i64 %122 to i8*
  store i8 46, i8* %123, align 1
  %124 = load i32, i32* %7, align 4
  %125 = load i32, i32* %8, align 8
  %126 = icmp eq i32 %124, %125
  br i1 %126, label %127, label %112

127:                                              ; preds = %115
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  br label %112

128:                                              ; preds = %99
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %129 = load i32, i32* %7, align 4
  br label %130

130:                                              ; preds = %128, %99
  %131 = phi i32 [ %129, %128 ], [ %109, %99 ]
  %132 = load i64*, i64** %6, align 8
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i32 %131, 1
  store i32 %134, i32* %7, align 4
  %135 = shl nsw i32 %131, 1
  %136 = sext i32 %135 to i64
  %137 = add i64 %133, 11
  %138 = add i64 %137, %136
  %139 = inttoptr i64 %138 to i16*
  store i16 46, i16* %139, align 2
  %140 = load i32, i32* %7, align 4
  %141 = load i32, i32* %8, align 8
  %142 = icmp eq i32 %140, %141
  br i1 %142, label %143, label %112

143:                                              ; preds = %130
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  br label %112

144:                                              ; preds = %32
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %145 = load i32, i32* %7, align 4
  br label %146

146:                                              ; preds = %144, %32
  %147 = phi i32 [ %145, %144 ], [ %41, %32 ]
  %148 = load i64*, i64** %6, align 8
  %149 = load i64, i64* %148, align 8
  %150 = add nsw i32 %147, 1
  store i32 %150, i32* %7, align 4
  %151 = sext i32 %147 to i64
  %152 = add i64 %149, 11
  %153 = add i64 %152, %151
  %154 = inttoptr i64 %153 to i8*
  store i8 32, i8* %154, align 1
  %155 = load i32, i32* %7, align 4
  %156 = load i32, i32* %8, align 8
  %157 = icmp eq i32 %155, %156
  br i1 %157, label %158, label %160

158:                                              ; preds = %146
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %159 = load i32, i32* %7, align 4
  br label %160

160:                                              ; preds = %158, %146
  %161 = phi i32 [ %159, %158 ], [ %155, %146 ]
  %162 = load i64*, i64** %6, align 8
  %163 = load i64, i64* %162, align 8
  %164 = add nsw i32 %161, 1
  store i32 %164, i32* %7, align 4
  %165 = sext i32 %161 to i64
  %166 = add i64 %163, 11
  %167 = add i64 %166, %165
  %168 = inttoptr i64 %167 to i8*
  store i8 32, i8* %168, align 1
  %169 = load i32, i32* %7, align 4
  %170 = load i32, i32* %8, align 8
  %171 = icmp eq i32 %169, %170
  br i1 %171, label %172, label %174

172:                                              ; preds = %160
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %173 = load i32, i32* %7, align 4
  br label %174

174:                                              ; preds = %172, %160
  %175 = phi i32 [ %173, %172 ], [ %169, %160 ]
  %176 = load i64*, i64** %6, align 8
  %177 = load i64, i64* %176, align 8
  %178 = add nsw i32 %175, 1
  store i32 %178, i32* %7, align 4
  %179 = sext i32 %175 to i64
  %180 = add i64 %177, 11
  %181 = add i64 %180, %179
  %182 = inttoptr i64 %181 to i8*
  store i8 32, i8* %182, align 1
  %183 = load i32, i32* %7, align 4
  %184 = load i32, i32* %8, align 8
  %185 = icmp eq i32 %183, %184
  br i1 %185, label %186, label %188

186:                                              ; preds = %174
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %187 = load i32, i32* %7, align 4
  br label %188

188:                                              ; preds = %186, %174
  %189 = phi i32 [ %187, %186 ], [ %183, %174 ]
  %190 = load i64*, i64** %6, align 8
  %191 = load i64, i64* %190, align 8
  %192 = add nsw i32 %189, 1
  store i32 %192, i32* %7, align 4
  %193 = sext i32 %189 to i64
  %194 = add i64 %191, 11
  %195 = add i64 %194, %193
  %196 = inttoptr i64 %195 to i8*
  store i8 124, i8* %196, align 1
  %197 = load i32, i32* %7, align 4
  %198 = load i32, i32* %8, align 8
  %199 = icmp eq i32 %197, %198
  br i1 %199, label %200, label %202

200:                                              ; preds = %188
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %201 = load i32, i32* %7, align 4
  br label %202

202:                                              ; preds = %200, %188
  %203 = phi i32 [ %201, %200 ], [ %197, %188 ]
  %204 = load i64*, i64** %6, align 8
  %205 = load i64, i64* %204, align 8
  %206 = add nsw i32 %203, 1
  store i32 %206, i32* %7, align 4
  %207 = sext i32 %203 to i64
  %208 = add i64 %205, 11
  %209 = add i64 %208, %207
  %210 = inttoptr i64 %209 to i8*
  store i8 32, i8* %210, align 1
  %211 = load i32, i32* %7, align 4
  %212 = load i32, i32* %8, align 8
  %213 = icmp eq i32 %211, %212
  br i1 %213, label %214, label %216

214:                                              ; preds = %202
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %215 = load i32, i32* %7, align 4
  br label %216

216:                                              ; preds = %214, %202
  %217 = phi i32 [ %215, %214 ], [ %211, %202 ]
  %218 = load i64*, i64** %6, align 8
  %219 = load i64, i64* %218, align 8
  %220 = add nsw i32 %217, 1
  store i32 %220, i32* %7, align 4
  %221 = sext i32 %217 to i64
  %222 = add i64 %219, 11
  %223 = add i64 %222, %221
  %224 = inttoptr i64 %223 to i8*
  store i8 32, i8* %224, align 1
  %225 = load i32, i32* %7, align 4
  %226 = load i32, i32* %8, align 8
  %227 = icmp eq i32 %225, %226
  br i1 %227, label %228, label %230

228:                                              ; preds = %216
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %229 = load i32, i32* %7, align 4
  br label %230

230:                                              ; preds = %228, %216
  %231 = phi i32 [ %229, %228 ], [ %225, %216 ]
  %232 = load i64*, i64** %6, align 8
  %233 = load i64, i64* %232, align 8
  %234 = add nsw i32 %231, 1
  store i32 %234, i32* %7, align 4
  %235 = sext i32 %231 to i64
  %236 = add i64 %233, 11
  %237 = add i64 %236, %235
  %238 = inttoptr i64 %237 to i8*
  store i8 32, i8* %238, align 1
  %239 = load i32, i32* %7, align 4
  %240 = load i32, i32* %8, align 8
  %241 = icmp eq i32 %239, %240
  br i1 %241, label %242, label %244

242:                                              ; preds = %230
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %243 = load i32, i32* %7, align 4
  br label %244

244:                                              ; preds = %242, %230
  %245 = phi i32 [ %243, %242 ], [ %239, %230 ]
  %246 = load i64*, i64** %6, align 8
  %247 = load i64, i64* %246, align 8
  %248 = add nsw i32 %245, 1
  store i32 %248, i32* %7, align 4
  %249 = sext i32 %245 to i64
  %250 = add i64 %247, 11
  %251 = add i64 %250, %249
  %252 = inttoptr i64 %251 to i8*
  store i8 32, i8* %252, align 1
  %253 = load i32, i32* %7, align 4
  %254 = load i32, i32* %8, align 8
  %255 = icmp eq i32 %253, %254
  br i1 %255, label %256, label %258

256:                                              ; preds = %244
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %257 = load i32, i32* %7, align 4
  br label %258

258:                                              ; preds = %256, %244
  %259 = phi i32 [ %257, %256 ], [ %253, %244 ]
  %260 = load i64*, i64** %6, align 8
  %261 = load i64, i64* %260, align 8
  %262 = add nsw i32 %259, 1
  store i32 %262, i32* %7, align 4
  %263 = sext i32 %259 to i64
  %264 = add i64 %261, 11
  %265 = add i64 %264, %263
  %266 = inttoptr i64 %265 to i8*
  store i8 32, i8* %266, align 1
  %267 = load i32, i32* %7, align 4
  %268 = load i32, i32* %8, align 8
  %269 = icmp eq i32 %267, %268
  br i1 %269, label %270, label %59

270:                                              ; preds = %258
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  br label %59

271:                                              ; preds = %46
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %272 = load i32, i32* %7, align 4
  br label %273

273:                                              ; preds = %271, %46
  %274 = phi i32 [ %272, %271 ], [ %56, %46 ]
  %275 = load i64*, i64** %6, align 8
  %276 = load i64, i64* %275, align 8
  %277 = add nsw i32 %274, 1
  store i32 %277, i32* %7, align 4
  %278 = shl nsw i32 %274, 1
  %279 = sext i32 %278 to i64
  %280 = add i64 %276, 11
  %281 = add i64 %280, %279
  %282 = inttoptr i64 %281 to i16*
  store i16 32, i16* %282, align 2
  %283 = load i32, i32* %7, align 4
  %284 = load i32, i32* %8, align 8
  %285 = icmp eq i32 %283, %284
  br i1 %285, label %286, label %288

286:                                              ; preds = %273
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %287 = load i32, i32* %7, align 4
  br label %288

288:                                              ; preds = %286, %273
  %289 = phi i32 [ %287, %286 ], [ %283, %273 ]
  %290 = load i64*, i64** %6, align 8
  %291 = load i64, i64* %290, align 8
  %292 = add nsw i32 %289, 1
  store i32 %292, i32* %7, align 4
  %293 = shl nsw i32 %289, 1
  %294 = sext i32 %293 to i64
  %295 = add i64 %291, 11
  %296 = add i64 %295, %294
  %297 = inttoptr i64 %296 to i16*
  store i16 32, i16* %297, align 2
  %298 = load i32, i32* %7, align 4
  %299 = load i32, i32* %8, align 8
  %300 = icmp eq i32 %298, %299
  br i1 %300, label %301, label %303

301:                                              ; preds = %288
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %302 = load i32, i32* %7, align 4
  br label %303

303:                                              ; preds = %301, %288
  %304 = phi i32 [ %302, %301 ], [ %298, %288 ]
  %305 = load i64*, i64** %6, align 8
  %306 = load i64, i64* %305, align 8
  %307 = add nsw i32 %304, 1
  store i32 %307, i32* %7, align 4
  %308 = shl nsw i32 %304, 1
  %309 = sext i32 %308 to i64
  %310 = add i64 %306, 11
  %311 = add i64 %310, %309
  %312 = inttoptr i64 %311 to i16*
  store i16 32, i16* %312, align 2
  %313 = load i32, i32* %7, align 4
  %314 = load i32, i32* %8, align 8
  %315 = icmp eq i32 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %303
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %317 = load i32, i32* %7, align 4
  br label %318

318:                                              ; preds = %316, %303
  %319 = phi i32 [ %317, %316 ], [ %313, %303 ]
  %320 = load i64*, i64** %6, align 8
  %321 = load i64, i64* %320, align 8
  %322 = add nsw i32 %319, 1
  store i32 %322, i32* %7, align 4
  %323 = shl nsw i32 %319, 1
  %324 = sext i32 %323 to i64
  %325 = add i64 %321, 11
  %326 = add i64 %325, %324
  %327 = inttoptr i64 %326 to i16*
  store i16 124, i16* %327, align 2
  %328 = load i32, i32* %7, align 4
  %329 = load i32, i32* %8, align 8
  %330 = icmp eq i32 %328, %329
  br i1 %330, label %331, label %333

331:                                              ; preds = %318
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %332 = load i32, i32* %7, align 4
  br label %333

333:                                              ; preds = %331, %318
  %334 = phi i32 [ %332, %331 ], [ %328, %318 ]
  %335 = load i64*, i64** %6, align 8
  %336 = load i64, i64* %335, align 8
  %337 = add nsw i32 %334, 1
  store i32 %337, i32* %7, align 4
  %338 = shl nsw i32 %334, 1
  %339 = sext i32 %338 to i64
  %340 = add i64 %336, 11
  %341 = add i64 %340, %339
  %342 = inttoptr i64 %341 to i16*
  store i16 32, i16* %342, align 2
  %343 = load i32, i32* %7, align 4
  %344 = load i32, i32* %8, align 8
  %345 = icmp eq i32 %343, %344
  br i1 %345, label %346, label %348

346:                                              ; preds = %333
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %347 = load i32, i32* %7, align 4
  br label %348

348:                                              ; preds = %346, %333
  %349 = phi i32 [ %347, %346 ], [ %343, %333 ]
  %350 = load i64*, i64** %6, align 8
  %351 = load i64, i64* %350, align 8
  %352 = add nsw i32 %349, 1
  store i32 %352, i32* %7, align 4
  %353 = shl nsw i32 %349, 1
  %354 = sext i32 %353 to i64
  %355 = add i64 %351, 11
  %356 = add i64 %355, %354
  %357 = inttoptr i64 %356 to i16*
  store i16 32, i16* %357, align 2
  %358 = load i32, i32* %7, align 4
  %359 = load i32, i32* %8, align 8
  %360 = icmp eq i32 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %348
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %362 = load i32, i32* %7, align 4
  br label %363

363:                                              ; preds = %361, %348
  %364 = phi i32 [ %362, %361 ], [ %358, %348 ]
  %365 = load i64*, i64** %6, align 8
  %366 = load i64, i64* %365, align 8
  %367 = add nsw i32 %364, 1
  store i32 %367, i32* %7, align 4
  %368 = shl nsw i32 %364, 1
  %369 = sext i32 %368 to i64
  %370 = add i64 %366, 11
  %371 = add i64 %370, %369
  %372 = inttoptr i64 %371 to i16*
  store i16 32, i16* %372, align 2
  %373 = load i32, i32* %7, align 4
  %374 = load i32, i32* %8, align 8
  %375 = icmp eq i32 %373, %374
  br i1 %375, label %376, label %378

376:                                              ; preds = %363
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %377 = load i32, i32* %7, align 4
  br label %378

378:                                              ; preds = %376, %363
  %379 = phi i32 [ %377, %376 ], [ %373, %363 ]
  %380 = load i64*, i64** %6, align 8
  %381 = load i64, i64* %380, align 8
  %382 = add nsw i32 %379, 1
  store i32 %382, i32* %7, align 4
  %383 = shl nsw i32 %379, 1
  %384 = sext i32 %383 to i64
  %385 = add i64 %381, 11
  %386 = add i64 %385, %384
  %387 = inttoptr i64 %386 to i16*
  store i16 32, i16* %387, align 2
  %388 = load i32, i32* %7, align 4
  %389 = load i32, i32* %8, align 8
  %390 = icmp eq i32 %388, %389
  br i1 %390, label %391, label %393

391:                                              ; preds = %378
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  %392 = load i32, i32* %7, align 4
  br label %393

393:                                              ; preds = %391, %378
  %394 = phi i32 [ %392, %391 ], [ %388, %378 ]
  %395 = load i64*, i64** %6, align 8
  %396 = load i64, i64* %395, align 8
  %397 = add nsw i32 %394, 1
  store i32 %397, i32* %7, align 4
  %398 = shl nsw i32 %394, 1
  %399 = sext i32 %398 to i64
  %400 = add i64 %396, 11
  %401 = add i64 %400, %399
  %402 = inttoptr i64 %401 to i16*
  store i16 32, i16* %402, align 2
  %403 = load i32, i32* %7, align 4
  %404 = load i32, i32* %8, align 8
  %405 = icmp eq i32 %403, %404
  br i1 %405, label %406, label %59

406:                                              ; preds = %393
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2) #7
  br label %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal31CircularStructureMessageBuilder17AppendClosingLineENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::CircularStructureMessageBuilder"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 4
  %9 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 3
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  %12 = load i32, i32* %8, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %8, align 4
  br i1 %6, label %23, label %14

14:                                               ; preds = %2
  %15 = shl nsw i32 %12, 1
  %16 = sext i32 %15 to i64
  %17 = add i64 %11, 11
  %18 = add i64 %17, %16
  %19 = inttoptr i64 %18 to i16*
  store i16 10, i16* %19, align 2
  %20 = load i32, i32* %8, align 4
  %21 = load i32, i32* %9, align 8
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %45, label %47

23:                                               ; preds = %2
  %24 = sext i32 %12 to i64
  %25 = add i64 %11, 11
  %26 = add i64 %25, %24
  %27 = inttoptr i64 %26 to i8*
  store i8 10, i8* %27, align 1
  %28 = load i32, i32* %8, align 4
  %29 = load i32, i32* %9, align 8
  %30 = icmp eq i32 %28, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %23
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %32 = load i32, i32* %8, align 4
  br label %33

33:                                               ; preds = %31, %23
  %34 = phi i32 [ %32, %31 ], [ %28, %23 ]
  %35 = load i64*, i64** %7, align 8
  %36 = load i64, i64* %35, align 8
  %37 = add nsw i32 %34, 1
  store i32 %37, i32* %8, align 4
  %38 = sext i32 %34 to i64
  %39 = add i64 %36, 11
  %40 = add i64 %39, %38
  %41 = inttoptr i64 %40 to i8*
  store i8 32, i8* %41, align 1
  %42 = load i32, i32* %8, align 4
  %43 = load i32, i32* %9, align 8
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %336, label %338

45:                                               ; preds = %14
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %46 = load i32, i32* %8, align 4
  br label %47

47:                                               ; preds = %45, %14
  %48 = phi i32 [ %46, %45 ], [ %20, %14 ]
  %49 = load i64*, i64** %7, align 8
  %50 = load i64, i64* %49, align 8
  %51 = add nsw i32 %48, 1
  store i32 %51, i32* %8, align 4
  %52 = shl nsw i32 %48, 1
  %53 = sext i32 %52 to i64
  %54 = add i64 %50, 11
  %55 = add i64 %54, %53
  %56 = inttoptr i64 %55 to i16*
  store i16 32, i16* %56, align 2
  %57 = load i32, i32* %8, align 4
  %58 = load i32, i32* %9, align 8
  %59 = icmp eq i32 %57, %58
  br i1 %59, label %435, label %437

60:                                               ; preds = %527, %540, %422, %434
  tail call void @_ZN2v88internal31CircularStructureMessageBuilder9AppendKeyENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::CircularStructureMessageBuilder"* %0, i64* %1)
  %61 = load i32, i32* %4, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %89

63:                                               ; preds = %60
  %64 = load i64*, i64** %7, align 8
  %65 = load i64, i64* %64, align 8
  %66 = load i32, i32* %8, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %8, align 4
  %68 = sext i32 %66 to i64
  %69 = add i64 %65, 11
  %70 = add i64 %69, %68
  %71 = inttoptr i64 %70 to i8*
  store i8 32, i8* %71, align 1
  %72 = load i32, i32* %8, align 4
  %73 = load i32, i32* %9, align 8
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %75, label %77

75:                                               ; preds = %63
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %76 = load i32, i32* %8, align 4
  br label %77

77:                                               ; preds = %75, %63
  %78 = phi i32 [ %76, %75 ], [ %72, %63 ]
  %79 = load i64*, i64** %7, align 8
  %80 = load i64, i64* %79, align 8
  %81 = add nsw i32 %78, 1
  store i32 %81, i32* %8, align 4
  %82 = sext i32 %78 to i64
  %83 = add i64 %80, 11
  %84 = add i64 %83, %82
  %85 = inttoptr i64 %84 to i8*
  store i8 99, i8* %85, align 1
  %86 = load i32, i32* %8, align 4
  %87 = load i32, i32* %9, align 8
  %88 = icmp eq i32 %86, %87
  br i1 %88, label %111, label %113

89:                                               ; preds = %60, %107
  %90 = phi i8 [ %108, %107 ], [ 32, %60 ]
  %91 = phi i8* [ %92, %107 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), %60 ]
  %92 = getelementptr inbounds i8, i8* %91, i64 1
  %93 = load i64*, i64** %7, align 8
  %94 = load i64, i64* %93, align 8
  %95 = load i32, i32* %8, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %8, align 4
  %97 = zext i8 %90 to i16
  %98 = shl nsw i32 %95, 1
  %99 = sext i32 %98 to i64
  %100 = add i64 %94, 11
  %101 = add i64 %100, %99
  %102 = inttoptr i64 %101 to i16*
  store i16 %97, i16* %102, align 2
  %103 = load i32, i32* %8, align 4
  %104 = load i32, i32* %9, align 8
  %105 = icmp eq i32 %103, %104
  br i1 %105, label %106, label %107

106:                                              ; preds = %89
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  br label %107

107:                                              ; preds = %106, %89
  %108 = load i8, i8* %92, align 1
  %109 = icmp eq i8* %92, getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 18)
  br i1 %109, label %110, label %89

110:                                              ; preds = %107, %323, %335
  ret void

111:                                              ; preds = %77
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %112 = load i32, i32* %8, align 4
  br label %113

113:                                              ; preds = %111, %77
  %114 = phi i32 [ %112, %111 ], [ %86, %77 ]
  %115 = load i64*, i64** %7, align 8
  %116 = load i64, i64* %115, align 8
  %117 = add nsw i32 %114, 1
  store i32 %117, i32* %8, align 4
  %118 = sext i32 %114 to i64
  %119 = add i64 %116, 11
  %120 = add i64 %119, %118
  %121 = inttoptr i64 %120 to i8*
  store i8 108, i8* %121, align 1
  %122 = load i32, i32* %8, align 4
  %123 = load i32, i32* %9, align 8
  %124 = icmp eq i32 %122, %123
  br i1 %124, label %125, label %127

125:                                              ; preds = %113
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %126 = load i32, i32* %8, align 4
  br label %127

127:                                              ; preds = %125, %113
  %128 = phi i32 [ %126, %125 ], [ %122, %113 ]
  %129 = load i64*, i64** %7, align 8
  %130 = load i64, i64* %129, align 8
  %131 = add nsw i32 %128, 1
  store i32 %131, i32* %8, align 4
  %132 = sext i32 %128 to i64
  %133 = add i64 %130, 11
  %134 = add i64 %133, %132
  %135 = inttoptr i64 %134 to i8*
  store i8 111, i8* %135, align 1
  %136 = load i32, i32* %8, align 4
  %137 = load i32, i32* %9, align 8
  %138 = icmp eq i32 %136, %137
  br i1 %138, label %139, label %141

139:                                              ; preds = %127
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %140 = load i32, i32* %8, align 4
  br label %141

141:                                              ; preds = %139, %127
  %142 = phi i32 [ %140, %139 ], [ %136, %127 ]
  %143 = load i64*, i64** %7, align 8
  %144 = load i64, i64* %143, align 8
  %145 = add nsw i32 %142, 1
  store i32 %145, i32* %8, align 4
  %146 = sext i32 %142 to i64
  %147 = add i64 %144, 11
  %148 = add i64 %147, %146
  %149 = inttoptr i64 %148 to i8*
  store i8 115, i8* %149, align 1
  %150 = load i32, i32* %8, align 4
  %151 = load i32, i32* %9, align 8
  %152 = icmp eq i32 %150, %151
  br i1 %152, label %153, label %155

153:                                              ; preds = %141
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %154 = load i32, i32* %8, align 4
  br label %155

155:                                              ; preds = %153, %141
  %156 = phi i32 [ %154, %153 ], [ %150, %141 ]
  %157 = load i64*, i64** %7, align 8
  %158 = load i64, i64* %157, align 8
  %159 = add nsw i32 %156, 1
  store i32 %159, i32* %8, align 4
  %160 = sext i32 %156 to i64
  %161 = add i64 %158, 11
  %162 = add i64 %161, %160
  %163 = inttoptr i64 %162 to i8*
  store i8 101, i8* %163, align 1
  %164 = load i32, i32* %8, align 4
  %165 = load i32, i32* %9, align 8
  %166 = icmp eq i32 %164, %165
  br i1 %166, label %167, label %169

167:                                              ; preds = %155
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %168 = load i32, i32* %8, align 4
  br label %169

169:                                              ; preds = %167, %155
  %170 = phi i32 [ %168, %167 ], [ %164, %155 ]
  %171 = load i64*, i64** %7, align 8
  %172 = load i64, i64* %171, align 8
  %173 = add nsw i32 %170, 1
  store i32 %173, i32* %8, align 4
  %174 = sext i32 %170 to i64
  %175 = add i64 %172, 11
  %176 = add i64 %175, %174
  %177 = inttoptr i64 %176 to i8*
  store i8 115, i8* %177, align 1
  %178 = load i32, i32* %8, align 4
  %179 = load i32, i32* %9, align 8
  %180 = icmp eq i32 %178, %179
  br i1 %180, label %181, label %183

181:                                              ; preds = %169
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %182 = load i32, i32* %8, align 4
  br label %183

183:                                              ; preds = %181, %169
  %184 = phi i32 [ %182, %181 ], [ %178, %169 ]
  %185 = load i64*, i64** %7, align 8
  %186 = load i64, i64* %185, align 8
  %187 = add nsw i32 %184, 1
  store i32 %187, i32* %8, align 4
  %188 = sext i32 %184 to i64
  %189 = add i64 %186, 11
  %190 = add i64 %189, %188
  %191 = inttoptr i64 %190 to i8*
  store i8 32, i8* %191, align 1
  %192 = load i32, i32* %8, align 4
  %193 = load i32, i32* %9, align 8
  %194 = icmp eq i32 %192, %193
  br i1 %194, label %195, label %197

195:                                              ; preds = %183
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %196 = load i32, i32* %8, align 4
  br label %197

197:                                              ; preds = %195, %183
  %198 = phi i32 [ %196, %195 ], [ %192, %183 ]
  %199 = load i64*, i64** %7, align 8
  %200 = load i64, i64* %199, align 8
  %201 = add nsw i32 %198, 1
  store i32 %201, i32* %8, align 4
  %202 = sext i32 %198 to i64
  %203 = add i64 %200, 11
  %204 = add i64 %203, %202
  %205 = inttoptr i64 %204 to i8*
  store i8 116, i8* %205, align 1
  %206 = load i32, i32* %8, align 4
  %207 = load i32, i32* %9, align 8
  %208 = icmp eq i32 %206, %207
  br i1 %208, label %209, label %211

209:                                              ; preds = %197
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %210 = load i32, i32* %8, align 4
  br label %211

211:                                              ; preds = %209, %197
  %212 = phi i32 [ %210, %209 ], [ %206, %197 ]
  %213 = load i64*, i64** %7, align 8
  %214 = load i64, i64* %213, align 8
  %215 = add nsw i32 %212, 1
  store i32 %215, i32* %8, align 4
  %216 = sext i32 %212 to i64
  %217 = add i64 %214, 11
  %218 = add i64 %217, %216
  %219 = inttoptr i64 %218 to i8*
  store i8 104, i8* %219, align 1
  %220 = load i32, i32* %8, align 4
  %221 = load i32, i32* %9, align 8
  %222 = icmp eq i32 %220, %221
  br i1 %222, label %223, label %225

223:                                              ; preds = %211
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %224 = load i32, i32* %8, align 4
  br label %225

225:                                              ; preds = %223, %211
  %226 = phi i32 [ %224, %223 ], [ %220, %211 ]
  %227 = load i64*, i64** %7, align 8
  %228 = load i64, i64* %227, align 8
  %229 = add nsw i32 %226, 1
  store i32 %229, i32* %8, align 4
  %230 = sext i32 %226 to i64
  %231 = add i64 %228, 11
  %232 = add i64 %231, %230
  %233 = inttoptr i64 %232 to i8*
  store i8 101, i8* %233, align 1
  %234 = load i32, i32* %8, align 4
  %235 = load i32, i32* %9, align 8
  %236 = icmp eq i32 %234, %235
  br i1 %236, label %237, label %239

237:                                              ; preds = %225
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %238 = load i32, i32* %8, align 4
  br label %239

239:                                              ; preds = %237, %225
  %240 = phi i32 [ %238, %237 ], [ %234, %225 ]
  %241 = load i64*, i64** %7, align 8
  %242 = load i64, i64* %241, align 8
  %243 = add nsw i32 %240, 1
  store i32 %243, i32* %8, align 4
  %244 = sext i32 %240 to i64
  %245 = add i64 %242, 11
  %246 = add i64 %245, %244
  %247 = inttoptr i64 %246 to i8*
  store i8 32, i8* %247, align 1
  %248 = load i32, i32* %8, align 4
  %249 = load i32, i32* %9, align 8
  %250 = icmp eq i32 %248, %249
  br i1 %250, label %251, label %253

251:                                              ; preds = %239
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %252 = load i32, i32* %8, align 4
  br label %253

253:                                              ; preds = %251, %239
  %254 = phi i32 [ %252, %251 ], [ %248, %239 ]
  %255 = load i64*, i64** %7, align 8
  %256 = load i64, i64* %255, align 8
  %257 = add nsw i32 %254, 1
  store i32 %257, i32* %8, align 4
  %258 = sext i32 %254 to i64
  %259 = add i64 %256, 11
  %260 = add i64 %259, %258
  %261 = inttoptr i64 %260 to i8*
  store i8 99, i8* %261, align 1
  %262 = load i32, i32* %8, align 4
  %263 = load i32, i32* %9, align 8
  %264 = icmp eq i32 %262, %263
  br i1 %264, label %265, label %267

265:                                              ; preds = %253
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %266 = load i32, i32* %8, align 4
  br label %267

267:                                              ; preds = %265, %253
  %268 = phi i32 [ %266, %265 ], [ %262, %253 ]
  %269 = load i64*, i64** %7, align 8
  %270 = load i64, i64* %269, align 8
  %271 = add nsw i32 %268, 1
  store i32 %271, i32* %8, align 4
  %272 = sext i32 %268 to i64
  %273 = add i64 %270, 11
  %274 = add i64 %273, %272
  %275 = inttoptr i64 %274 to i8*
  store i8 105, i8* %275, align 1
  %276 = load i32, i32* %8, align 4
  %277 = load i32, i32* %9, align 8
  %278 = icmp eq i32 %276, %277
  br i1 %278, label %279, label %281

279:                                              ; preds = %267
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %280 = load i32, i32* %8, align 4
  br label %281

281:                                              ; preds = %279, %267
  %282 = phi i32 [ %280, %279 ], [ %276, %267 ]
  %283 = load i64*, i64** %7, align 8
  %284 = load i64, i64* %283, align 8
  %285 = add nsw i32 %282, 1
  store i32 %285, i32* %8, align 4
  %286 = sext i32 %282 to i64
  %287 = add i64 %284, 11
  %288 = add i64 %287, %286
  %289 = inttoptr i64 %288 to i8*
  store i8 114, i8* %289, align 1
  %290 = load i32, i32* %8, align 4
  %291 = load i32, i32* %9, align 8
  %292 = icmp eq i32 %290, %291
  br i1 %292, label %293, label %295

293:                                              ; preds = %281
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %294 = load i32, i32* %8, align 4
  br label %295

295:                                              ; preds = %293, %281
  %296 = phi i32 [ %294, %293 ], [ %290, %281 ]
  %297 = load i64*, i64** %7, align 8
  %298 = load i64, i64* %297, align 8
  %299 = add nsw i32 %296, 1
  store i32 %299, i32* %8, align 4
  %300 = sext i32 %296 to i64
  %301 = add i64 %298, 11
  %302 = add i64 %301, %300
  %303 = inttoptr i64 %302 to i8*
  store i8 99, i8* %303, align 1
  %304 = load i32, i32* %8, align 4
  %305 = load i32, i32* %9, align 8
  %306 = icmp eq i32 %304, %305
  br i1 %306, label %307, label %309

307:                                              ; preds = %295
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %308 = load i32, i32* %8, align 4
  br label %309

309:                                              ; preds = %307, %295
  %310 = phi i32 [ %308, %307 ], [ %304, %295 ]
  %311 = load i64*, i64** %7, align 8
  %312 = load i64, i64* %311, align 8
  %313 = add nsw i32 %310, 1
  store i32 %313, i32* %8, align 4
  %314 = sext i32 %310 to i64
  %315 = add i64 %312, 11
  %316 = add i64 %315, %314
  %317 = inttoptr i64 %316 to i8*
  store i8 108, i8* %317, align 1
  %318 = load i32, i32* %8, align 4
  %319 = load i32, i32* %9, align 8
  %320 = icmp eq i32 %318, %319
  br i1 %320, label %321, label %323

321:                                              ; preds = %309
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %322 = load i32, i32* %8, align 4
  br label %323

323:                                              ; preds = %321, %309
  %324 = phi i32 [ %322, %321 ], [ %318, %309 ]
  %325 = load i64*, i64** %7, align 8
  %326 = load i64, i64* %325, align 8
  %327 = add nsw i32 %324, 1
  store i32 %327, i32* %8, align 4
  %328 = sext i32 %324 to i64
  %329 = add i64 %326, 11
  %330 = add i64 %329, %328
  %331 = inttoptr i64 %330 to i8*
  store i8 101, i8* %331, align 1
  %332 = load i32, i32* %8, align 4
  %333 = load i32, i32* %9, align 8
  %334 = icmp eq i32 %332, %333
  br i1 %334, label %335, label %110

335:                                              ; preds = %323
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  br label %110

336:                                              ; preds = %33
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %337 = load i32, i32* %8, align 4
  br label %338

338:                                              ; preds = %336, %33
  %339 = phi i32 [ %337, %336 ], [ %42, %33 ]
  %340 = load i64*, i64** %7, align 8
  %341 = load i64, i64* %340, align 8
  %342 = add nsw i32 %339, 1
  store i32 %342, i32* %8, align 4
  %343 = sext i32 %339 to i64
  %344 = add i64 %341, 11
  %345 = add i64 %344, %343
  %346 = inttoptr i64 %345 to i8*
  store i8 32, i8* %346, align 1
  %347 = load i32, i32* %8, align 4
  %348 = load i32, i32* %9, align 8
  %349 = icmp eq i32 %347, %348
  br i1 %349, label %350, label %352

350:                                              ; preds = %338
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %351 = load i32, i32* %8, align 4
  br label %352

352:                                              ; preds = %350, %338
  %353 = phi i32 [ %351, %350 ], [ %347, %338 ]
  %354 = load i64*, i64** %7, align 8
  %355 = load i64, i64* %354, align 8
  %356 = add nsw i32 %353, 1
  store i32 %356, i32* %8, align 4
  %357 = sext i32 %353 to i64
  %358 = add i64 %355, 11
  %359 = add i64 %358, %357
  %360 = inttoptr i64 %359 to i8*
  store i8 32, i8* %360, align 1
  %361 = load i32, i32* %8, align 4
  %362 = load i32, i32* %9, align 8
  %363 = icmp eq i32 %361, %362
  br i1 %363, label %364, label %366

364:                                              ; preds = %352
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %365 = load i32, i32* %8, align 4
  br label %366

366:                                              ; preds = %364, %352
  %367 = phi i32 [ %365, %364 ], [ %361, %352 ]
  %368 = load i64*, i64** %7, align 8
  %369 = load i64, i64* %368, align 8
  %370 = add nsw i32 %367, 1
  store i32 %370, i32* %8, align 4
  %371 = sext i32 %367 to i64
  %372 = add i64 %369, 11
  %373 = add i64 %372, %371
  %374 = inttoptr i64 %373 to i8*
  store i8 32, i8* %374, align 1
  %375 = load i32, i32* %8, align 4
  %376 = load i32, i32* %9, align 8
  %377 = icmp eq i32 %375, %376
  br i1 %377, label %378, label %380

378:                                              ; preds = %366
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %379 = load i32, i32* %8, align 4
  br label %380

380:                                              ; preds = %378, %366
  %381 = phi i32 [ %379, %378 ], [ %375, %366 ]
  %382 = load i64*, i64** %7, align 8
  %383 = load i64, i64* %382, align 8
  %384 = add nsw i32 %381, 1
  store i32 %384, i32* %8, align 4
  %385 = sext i32 %381 to i64
  %386 = add i64 %383, 11
  %387 = add i64 %386, %385
  %388 = inttoptr i64 %387 to i8*
  store i8 45, i8* %388, align 1
  %389 = load i32, i32* %8, align 4
  %390 = load i32, i32* %9, align 8
  %391 = icmp eq i32 %389, %390
  br i1 %391, label %392, label %394

392:                                              ; preds = %380
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %393 = load i32, i32* %8, align 4
  br label %394

394:                                              ; preds = %392, %380
  %395 = phi i32 [ %393, %392 ], [ %389, %380 ]
  %396 = load i64*, i64** %7, align 8
  %397 = load i64, i64* %396, align 8
  %398 = add nsw i32 %395, 1
  store i32 %398, i32* %8, align 4
  %399 = sext i32 %395 to i64
  %400 = add i64 %397, 11
  %401 = add i64 %400, %399
  %402 = inttoptr i64 %401 to i8*
  store i8 45, i8* %402, align 1
  %403 = load i32, i32* %8, align 4
  %404 = load i32, i32* %9, align 8
  %405 = icmp eq i32 %403, %404
  br i1 %405, label %406, label %408

406:                                              ; preds = %394
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %407 = load i32, i32* %8, align 4
  br label %408

408:                                              ; preds = %406, %394
  %409 = phi i32 [ %407, %406 ], [ %403, %394 ]
  %410 = load i64*, i64** %7, align 8
  %411 = load i64, i64* %410, align 8
  %412 = add nsw i32 %409, 1
  store i32 %412, i32* %8, align 4
  %413 = sext i32 %409 to i64
  %414 = add i64 %411, 11
  %415 = add i64 %414, %413
  %416 = inttoptr i64 %415 to i8*
  store i8 45, i8* %416, align 1
  %417 = load i32, i32* %8, align 4
  %418 = load i32, i32* %9, align 8
  %419 = icmp eq i32 %417, %418
  br i1 %419, label %420, label %422

420:                                              ; preds = %408
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %421 = load i32, i32* %8, align 4
  br label %422

422:                                              ; preds = %420, %408
  %423 = phi i32 [ %421, %420 ], [ %417, %408 ]
  %424 = load i64*, i64** %7, align 8
  %425 = load i64, i64* %424, align 8
  %426 = add nsw i32 %423, 1
  store i32 %426, i32* %8, align 4
  %427 = sext i32 %423 to i64
  %428 = add i64 %425, 11
  %429 = add i64 %428, %427
  %430 = inttoptr i64 %429 to i8*
  store i8 32, i8* %430, align 1
  %431 = load i32, i32* %8, align 4
  %432 = load i32, i32* %9, align 8
  %433 = icmp eq i32 %431, %432
  br i1 %433, label %434, label %60

434:                                              ; preds = %422
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  br label %60

435:                                              ; preds = %47
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %436 = load i32, i32* %8, align 4
  br label %437

437:                                              ; preds = %435, %47
  %438 = phi i32 [ %436, %435 ], [ %57, %47 ]
  %439 = load i64*, i64** %7, align 8
  %440 = load i64, i64* %439, align 8
  %441 = add nsw i32 %438, 1
  store i32 %441, i32* %8, align 4
  %442 = shl nsw i32 %438, 1
  %443 = sext i32 %442 to i64
  %444 = add i64 %440, 11
  %445 = add i64 %444, %443
  %446 = inttoptr i64 %445 to i16*
  store i16 32, i16* %446, align 2
  %447 = load i32, i32* %8, align 4
  %448 = load i32, i32* %9, align 8
  %449 = icmp eq i32 %447, %448
  br i1 %449, label %450, label %452

450:                                              ; preds = %437
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %451 = load i32, i32* %8, align 4
  br label %452

452:                                              ; preds = %450, %437
  %453 = phi i32 [ %451, %450 ], [ %447, %437 ]
  %454 = load i64*, i64** %7, align 8
  %455 = load i64, i64* %454, align 8
  %456 = add nsw i32 %453, 1
  store i32 %456, i32* %8, align 4
  %457 = shl nsw i32 %453, 1
  %458 = sext i32 %457 to i64
  %459 = add i64 %455, 11
  %460 = add i64 %459, %458
  %461 = inttoptr i64 %460 to i16*
  store i16 32, i16* %461, align 2
  %462 = load i32, i32* %8, align 4
  %463 = load i32, i32* %9, align 8
  %464 = icmp eq i32 %462, %463
  br i1 %464, label %465, label %467

465:                                              ; preds = %452
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %466 = load i32, i32* %8, align 4
  br label %467

467:                                              ; preds = %465, %452
  %468 = phi i32 [ %466, %465 ], [ %462, %452 ]
  %469 = load i64*, i64** %7, align 8
  %470 = load i64, i64* %469, align 8
  %471 = add nsw i32 %468, 1
  store i32 %471, i32* %8, align 4
  %472 = shl nsw i32 %468, 1
  %473 = sext i32 %472 to i64
  %474 = add i64 %470, 11
  %475 = add i64 %474, %473
  %476 = inttoptr i64 %475 to i16*
  store i16 32, i16* %476, align 2
  %477 = load i32, i32* %8, align 4
  %478 = load i32, i32* %9, align 8
  %479 = icmp eq i32 %477, %478
  br i1 %479, label %480, label %482

480:                                              ; preds = %467
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %481 = load i32, i32* %8, align 4
  br label %482

482:                                              ; preds = %480, %467
  %483 = phi i32 [ %481, %480 ], [ %477, %467 ]
  %484 = load i64*, i64** %7, align 8
  %485 = load i64, i64* %484, align 8
  %486 = add nsw i32 %483, 1
  store i32 %486, i32* %8, align 4
  %487 = shl nsw i32 %483, 1
  %488 = sext i32 %487 to i64
  %489 = add i64 %485, 11
  %490 = add i64 %489, %488
  %491 = inttoptr i64 %490 to i16*
  store i16 45, i16* %491, align 2
  %492 = load i32, i32* %8, align 4
  %493 = load i32, i32* %9, align 8
  %494 = icmp eq i32 %492, %493
  br i1 %494, label %495, label %497

495:                                              ; preds = %482
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %496 = load i32, i32* %8, align 4
  br label %497

497:                                              ; preds = %495, %482
  %498 = phi i32 [ %496, %495 ], [ %492, %482 ]
  %499 = load i64*, i64** %7, align 8
  %500 = load i64, i64* %499, align 8
  %501 = add nsw i32 %498, 1
  store i32 %501, i32* %8, align 4
  %502 = shl nsw i32 %498, 1
  %503 = sext i32 %502 to i64
  %504 = add i64 %500, 11
  %505 = add i64 %504, %503
  %506 = inttoptr i64 %505 to i16*
  store i16 45, i16* %506, align 2
  %507 = load i32, i32* %8, align 4
  %508 = load i32, i32* %9, align 8
  %509 = icmp eq i32 %507, %508
  br i1 %509, label %510, label %512

510:                                              ; preds = %497
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %511 = load i32, i32* %8, align 4
  br label %512

512:                                              ; preds = %510, %497
  %513 = phi i32 [ %511, %510 ], [ %507, %497 ]
  %514 = load i64*, i64** %7, align 8
  %515 = load i64, i64* %514, align 8
  %516 = add nsw i32 %513, 1
  store i32 %516, i32* %8, align 4
  %517 = shl nsw i32 %513, 1
  %518 = sext i32 %517 to i64
  %519 = add i64 %515, 11
  %520 = add i64 %519, %518
  %521 = inttoptr i64 %520 to i16*
  store i16 45, i16* %521, align 2
  %522 = load i32, i32* %8, align 4
  %523 = load i32, i32* %9, align 8
  %524 = icmp eq i32 %522, %523
  br i1 %524, label %525, label %527

525:                                              ; preds = %512
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  %526 = load i32, i32* %8, align 4
  br label %527

527:                                              ; preds = %525, %512
  %528 = phi i32 [ %526, %525 ], [ %522, %512 ]
  %529 = load i64*, i64** %7, align 8
  %530 = load i64, i64* %529, align 8
  %531 = add nsw i32 %528, 1
  store i32 %531, i32* %8, align 4
  %532 = shl nsw i32 %528, 1
  %533 = sext i32 %532 to i64
  %534 = add i64 %530, 11
  %535 = add i64 %534, %533
  %536 = inttoptr i64 %535 to i16*
  store i16 32, i16* %536, align 2
  %537 = load i32, i32* %8, align 4
  %538 = load i32, i32* %9, align 8
  %539 = icmp eq i32 %537, %538
  br i1 %539, label %540, label %60

540:                                              ; preds = %527
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  br label %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal15JsonStringifier27SerializeJSPrimitiveWrapperENS0_6HandleINS0_18JSPrimitiveWrapperEEENS2_INS0_6ObjectEEE(%"class.v8::internal::JsonStringifier"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Representation", align 1
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = and i64 %10, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %53, label %14

14:                                               ; preds = %3
  %15 = add i64 %11, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %6, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp ult i16 %22, 64
  br i1 %23, label %24, label %45

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %27 = and i64 %5, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %39, label %29

29:                                               ; preds = %24
  %30 = add i64 %5, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %6, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp ult i16 %37, 64
  br i1 %38, label %41, label %39

39:                                               ; preds = %29, %24
  %40 = tail call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %26, i64* %1) #7
  br label %41

41:                                               ; preds = %29, %39
  %42 = phi i64* [ %40, %39 ], [ %1, %29 ]
  %43 = icmp eq i64* %42, null
  br i1 %43, label %607, label %44

44:                                               ; preds = %41
  tail call void @_ZN2v88internal15JsonStringifier15SerializeStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonStringifier"* %0, i64* nonnull %42)
  br label %607

45:                                               ; preds = %14
  %46 = load atomic i32, i32* %16 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %6, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = icmp eq i16 %51, 66
  br i1 %52, label %53, label %84

53:                                               ; preds = %3, %45
  %54 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %55 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %54, align 8
  %56 = and i64 %5, 1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = add i64 %5, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %6, %62
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = icmp eq i16 %66, 66
  br i1 %67, label %70, label %68

68:                                               ; preds = %58
  %69 = tail call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %55, i64* %1, i32 0) #7
  br label %70

70:                                               ; preds = %53, %58, %68
  %71 = phi i64* [ %69, %68 ], [ %1, %58 ], [ %1, %53 ]
  %72 = icmp eq i64* %71, null
  br i1 %72, label %607, label %73

73:                                               ; preds = %70
  %74 = load i64, i64* %71, align 8
  %75 = and i64 %74, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = tail call i32 @_ZN2v88internal15JsonStringifier12SerializeSmiENS0_3SmiE(%"class.v8::internal::JsonStringifier"* %0, i64 %74)
  br label %607

79:                                               ; preds = %73
  %80 = add i64 %74, 3
  %81 = inttoptr i64 %80 to double*
  %82 = load double, double* %81, align 1
  %83 = tail call i32 @_ZN2v88internal15JsonStringifier15SerializeDoubleEd(%"class.v8::internal::JsonStringifier"* %0, double %82) #7
  br label %607

84:                                               ; preds = %45
  %85 = load atomic i32, i32* %16 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %6, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = icmp eq i16 %90, 65
  br i1 %91, label %92, label %99

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %94 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %93, align 8
  %95 = bitcast %"class.v8::internal::Isolate"* %94 to %"class.v8::internal::Factory"*
  %96 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %95, i32 22, i64* null, i64* null, i64* null) #7
  %97 = load i64, i64* %96, align 8
  %98 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %94, i64 %97, %"class.v8::internal::MessageLocation"* null) #7
  br label %607

99:                                               ; preds = %84
  %100 = load atomic i32, i32* %16 monotonic, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %6, %101
  %103 = add i64 %102, 7
  %104 = inttoptr i64 %103 to i16*
  %105 = load atomic i16, i16* %104 monotonic, align 2
  %106 = icmp eq i16 %105, 67
  br i1 %106, label %107, label %178

107:                                              ; preds = %99
  %108 = add i64 %11, 23
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = lshr i32 %110, 1
  %112 = trunc i32 %111 to i8
  %113 = icmp ult i8 %112, 2
  br i1 %113, label %114, label %178

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %116 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %117 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %116, align 8
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %117, i64 0, i32 0, i32 7, i32 0, i64 7
  %119 = load i64, i64* %118, align 8
  %120 = trunc i64 %119 to i32
  %121 = icmp eq i32 %9, %120
  %122 = select i1 %121, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)
  %123 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, 0
  %126 = load i8, i8* %122, align 1
  %127 = icmp eq i8 %126, 0
  br i1 %125, label %133, label %128

128:                                              ; preds = %114
  br i1 %127, label %607, label %129

129:                                              ; preds = %128
  %130 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %131 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %132 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %157

133:                                              ; preds = %114
  br i1 %127, label %607, label %134

134:                                              ; preds = %133
  %135 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %136 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %137 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %138

138:                                              ; preds = %154, %134
  %139 = phi i8 [ %126, %134 ], [ %155, %154 ]
  %140 = phi i8* [ %122, %134 ], [ %141, %154 ]
  %141 = getelementptr inbounds i8, i8* %140, i64 1
  %142 = load i64*, i64** %135, align 8
  %143 = load i64, i64* %142, align 8
  %144 = load i32, i32* %136, align 4
  %145 = add nsw i32 %144, 1
  store i32 %145, i32* %136, align 4
  %146 = sext i32 %144 to i64
  %147 = add i64 %143, 11
  %148 = add i64 %147, %146
  %149 = inttoptr i64 %148 to i8*
  store i8 %139, i8* %149, align 1
  %150 = load i32, i32* %136, align 4
  %151 = load i32, i32* %137, align 8
  %152 = icmp eq i32 %150, %151
  br i1 %152, label %153, label %154

153:                                              ; preds = %138
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %115) #7
  br label %154

154:                                              ; preds = %153, %138
  %155 = load i8, i8* %141, align 1
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %607, label %138

157:                                              ; preds = %175, %129
  %158 = phi i8 [ %126, %129 ], [ %176, %175 ]
  %159 = phi i8* [ %122, %129 ], [ %160, %175 ]
  %160 = getelementptr inbounds i8, i8* %159, i64 1
  %161 = load i64*, i64** %130, align 8
  %162 = load i64, i64* %161, align 8
  %163 = load i32, i32* %131, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %131, align 4
  %165 = zext i8 %158 to i16
  %166 = shl nsw i32 %163, 1
  %167 = sext i32 %166 to i64
  %168 = add i64 %162, 11
  %169 = add i64 %168, %167
  %170 = inttoptr i64 %169 to i16*
  store i16 %165, i16* %170, align 2
  %171 = load i32, i32* %131, align 4
  %172 = load i32, i32* %132, align 8
  %173 = icmp eq i32 %171, %172
  br i1 %173, label %174, label %175

174:                                              ; preds = %157
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %115) #7
  br label %175

175:                                              ; preds = %174, %157
  %176 = load i8, i8* %160, align 1
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %607, label %157

178:                                              ; preds = %99, %107
  %179 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %180 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %179, align 8
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %180, i64 0, i32 31
  %182 = bitcast %"struct.v8::internal::HandleScopeData"* %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %180, i64 0, i32 31, i32 1
  %185 = load i64*, i64** %184, align 8
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %180, i64 0, i32 31, i32 2
  %187 = load i32, i32* %186, align 8
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %186, align 8
  %189 = tail call i32 @_ZN2v88internal15JsonStringifier9StackPushENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::JsonStringifier"* %0, i64* %1, i64* %2) #7
  %190 = icmp eq i32 %189, 1
  br i1 %190, label %191, label %591

191:                                              ; preds = %178
  %192 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 3, i32 0, i32 0
  %193 = load i64*, i64** %192, align 8
  %194 = icmp eq i64* %193, null
  br i1 %194, label %195, label %584

195:                                              ; preds = %191
  %196 = load i64, i64* %1, align 8
  %197 = and i64 %196, -4294967296
  %198 = add i64 %196, -1
  %199 = inttoptr i64 %198 to i32*
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = zext i32 %200 to i64
  %202 = or i64 %197, %201
  %203 = add i64 %202, 7
  %204 = inttoptr i64 %203 to i16*
  %205 = load atomic i16, i16* %204 monotonic, align 2
  %206 = icmp ult i16 %205, 1042
  br i1 %206, label %584, label %207

207:                                              ; preds = %195
  %208 = load atomic i32, i32* %199 monotonic, align 4
  %209 = zext i32 %208 to i64
  %210 = or i64 %197, %209
  %211 = add i64 %210, 11
  %212 = inttoptr i64 %211 to i32*
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2097152
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %584

216:                                              ; preds = %207
  %217 = add i64 %196, 7
  %218 = inttoptr i64 %217 to i32*
  %219 = load i32, i32* %218, align 4
  %220 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %179, align 8
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %220, i64 0, i32 0, i32 7, i32 0, i64 29
  %222 = load i64, i64* %221, align 8
  %223 = trunc i64 %222 to i32
  %224 = icmp eq i32 %219, %223
  br i1 %224, label %230, label %225

225:                                              ; preds = %216
  %226 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %220, i64 0, i32 0, i32 7, i32 0, i64 111
  %227 = load i64, i64* %226, align 8
  %228 = trunc i64 %227 to i32
  %229 = icmp eq i32 %219, %228
  br i1 %229, label %230, label %584

230:                                              ; preds = %216, %225
  %231 = load atomic i32, i32* %199 monotonic, align 4
  %232 = zext i32 %231 to i64
  %233 = or i64 %197, %232
  %234 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %220, i64 0, i32 31, i32 4
  %235 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %234, align 8
  %236 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %235, null
  br i1 %236, label %239, label %237

237:                                              ; preds = %230
  %238 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %235, i64 %233) #7
  br label %252

239:                                              ; preds = %230
  %240 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %220, i64 0, i32 31, i32 0
  %241 = load i64*, i64** %240, align 8
  %242 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %220, i64 0, i32 31, i32 1
  %243 = load i64*, i64** %242, align 8
  %244 = icmp eq i64* %241, %243
  br i1 %244, label %245, label %247

245:                                              ; preds = %239
  %246 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %220) #7
  br label %247

247:                                              ; preds = %245, %239
  %248 = phi i64* [ %246, %245 ], [ %241, %239 ]
  %249 = ptrtoint i64* %248 to i64
  %250 = add i64 %249, 8
  %251 = inttoptr i64 %250 to i64*
  store i64* %251, i64** %240, align 8
  store i64 %233, i64* %248, align 8
  br label %252

252:                                              ; preds = %247, %237
  %253 = phi i64* [ %238, %237 ], [ %248, %247 ]
  %254 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %255 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %256 = load i32, i32* %255, align 8
  %257 = icmp eq i32 %256, 0
  %258 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %259 = load i64*, i64** %258, align 8
  %260 = load i64, i64* %259, align 8
  %261 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %262 = load i32, i32* %261, align 4
  %263 = add nsw i32 %262, 1
  store i32 %263, i32* %261, align 4
  br i1 %257, label %264, label %274

264:                                              ; preds = %252
  %265 = sext i32 %262 to i64
  %266 = add i64 %260, 11
  %267 = add i64 %266, %265
  %268 = inttoptr i64 %267 to i8*
  store i8 123, i8* %268, align 1
  %269 = load i32, i32* %261, align 4
  %270 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %271 = load i32, i32* %270, align 8
  %272 = icmp eq i32 %269, %271
  br i1 %272, label %273, label %285

273:                                              ; preds = %264
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %254) #7
  br label %285

274:                                              ; preds = %252
  %275 = shl nsw i32 %262, 1
  %276 = sext i32 %275 to i64
  %277 = add i64 %260, 11
  %278 = add i64 %277, %276
  %279 = inttoptr i64 %278 to i16*
  store i16 123, i16* %279, align 2
  %280 = load i32, i32* %261, align 4
  %281 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %282 = load i32, i32* %281, align 8
  %283 = icmp eq i32 %280, %282
  br i1 %283, label %284, label %285

284:                                              ; preds = %274
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %254) #7
  br label %285

285:                                              ; preds = %284, %274, %273, %264
  %286 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %287 = load i32, i32* %286, align 8
  %288 = add nsw i32 %287, 1
  store i32 %288, i32* %286, align 8
  %289 = load i64, i64* %253, align 8
  %290 = add i64 %289, 11
  %291 = inttoptr i64 %290 to i32*
  %292 = load atomic i32, i32* %291 acquire, align 4
  %293 = lshr i32 %292, 10
  %294 = and i32 %293, 1023
  %295 = zext i32 %294 to i64
  %296 = icmp eq i32 %294, 0
  br i1 %296, label %297, label %300

297:                                              ; preds = %285
  %298 = load i32, i32* %286, align 8
  %299 = add nsw i32 %298, -1
  store i32 %299, i32* %286, align 8
  br label %556

300:                                              ; preds = %285
  %301 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %4, i64 0, i32 0
  br label %302

302:                                              ; preds = %300, %457
  %303 = phi i8 [ 0, %300 ], [ %458, %457 ]
  %304 = phi i64 [ 0, %300 ], [ %459, %457 ]
  %305 = load i64, i64* %253, align 8
  %306 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %179, align 8
  %307 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %306, i64 0, i32 0, i32 4
  %308 = load i64, i64* %307, align 8
  %309 = add i64 %305, 23
  %310 = inttoptr i64 %309 to i32*
  %311 = load i32, i32* %310, align 4
  %312 = and i64 %308, 4294967295
  %313 = icmp eq i64 %312, 0
  tail call void @llvm.assume(i1 %313) #7
  %314 = zext i32 %311 to i64
  %315 = or i64 %308, %314
  %316 = mul nuw nsw i64 %304, 51539607552
  %317 = add nuw nsw i64 %316, 68719476736
  %318 = lshr exact i64 %317, 32
  %319 = add nsw i64 %318, -1
  %320 = add i64 %319, %315
  %321 = inttoptr i64 %320 to i32*
  %322 = load atomic i32, i32* %321 monotonic, align 4
  %323 = zext i32 %322 to i64
  %324 = or i64 %308, %323
  %325 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %306, i64 0, i32 31, i32 4
  %326 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %325, align 8
  %327 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %326, null
  br i1 %327, label %331, label %328

328:                                              ; preds = %302
  %329 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %326, i64 %324) #7
  %330 = load i64, i64* %329, align 8
  br label %344

331:                                              ; preds = %302
  %332 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %306, i64 0, i32 31, i32 0
  %333 = load i64*, i64** %332, align 8
  %334 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %306, i64 0, i32 31, i32 1
  %335 = load i64*, i64** %334, align 8
  %336 = icmp eq i64* %333, %335
  br i1 %336, label %337, label %339

337:                                              ; preds = %331
  %338 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %306) #7
  br label %339

339:                                              ; preds = %337, %331
  %340 = phi i64* [ %338, %337 ], [ %333, %331 ]
  %341 = ptrtoint i64* %340 to i64
  %342 = add i64 %341, 8
  %343 = inttoptr i64 %342 to i64*
  store i64* %343, i64** %332, align 8
  store i64 %324, i64* %340, align 8
  br label %344

344:                                              ; preds = %339, %328
  %345 = phi i64 [ %330, %328 ], [ %324, %339 ]
  %346 = phi i64* [ %329, %328 ], [ %340, %339 ]
  %347 = and i64 %345, -4294967296
  %348 = add i64 %345, -1
  %349 = inttoptr i64 %348 to i32*
  %350 = load atomic i32, i32* %349 monotonic, align 4
  %351 = zext i32 %350 to i64
  %352 = or i64 %347, %351
  %353 = add i64 %352, 7
  %354 = inttoptr i64 %353 to i16*
  %355 = load atomic i16, i16* %354 monotonic, align 2
  %356 = icmp ult i16 %355, 64
  br i1 %356, label %357, label %457

357:                                              ; preds = %344
  %358 = load i64, i64* %253, align 8
  %359 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %179, align 8
  %360 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %359, i64 0, i32 0, i32 4
  %361 = load i64, i64* %360, align 8
  %362 = add i64 %358, 23
  %363 = inttoptr i64 %362 to i32*
  %364 = load i32, i32* %363, align 4
  %365 = and i64 %361, 4294967295
  %366 = icmp eq i64 %365, 0
  tail call void @llvm.assume(i1 %366) #7
  %367 = zext i32 %364 to i64
  %368 = or i64 %361, %367
  %369 = or i64 %318, 3
  %370 = add i64 %368, %369
  %371 = inttoptr i64 %370 to i32*
  %372 = load atomic i32, i32* %371 monotonic, align 4
  %373 = lshr i32 %372, 7
  %374 = and i32 %372, 32
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %457

376:                                              ; preds = %357
  %377 = and i32 %372, 4
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %444

379:                                              ; preds = %376
  %380 = load i64, i64* %1, align 8
  %381 = add i64 %380, -1
  %382 = inttoptr i64 %381 to i32*
  %383 = load atomic i32, i32* %382 monotonic, align 4
  %384 = trunc i64 %358 to i32
  %385 = icmp eq i32 %383, %384
  br i1 %385, label %386, label %444

386:                                              ; preds = %379
  %387 = and i64 %358, -4294967296
  %388 = load atomic i32, i32* %363 monotonic, align 4
  %389 = zext i32 %388 to i64
  %390 = or i64 %387, %389
  %391 = add i64 %390, %369
  %392 = inttoptr i64 %391 to i32*
  %393 = load atomic i32, i32* %392 monotonic, align 4
  %394 = ashr i32 %393, 1
  %395 = lshr i32 %394, 19
  %396 = and i32 %395, 1023
  %397 = lshr i32 %394, 6
  %398 = trunc i32 %397 to i8
  %399 = and i8 %398, 7
  %400 = add i64 %358, 3
  %401 = inttoptr i64 %400 to i8*
  %402 = load atomic i8, i8* %401 monotonic, align 1
  %403 = zext i8 %402 to i32
  %404 = add i64 %358, 4
  %405 = inttoptr i64 %404 to i8*
  %406 = load atomic i8, i8* %405 monotonic, align 1
  %407 = zext i8 %406 to i32
  %408 = sub nsw i32 %403, %407
  %409 = icmp slt i32 %396, %408
  br i1 %409, label %410, label %418

410:                                              ; preds = %386
  %411 = load atomic i8, i8* %405 monotonic, align 1
  %412 = zext i8 %411 to i64
  %413 = shl nuw nsw i64 %412, 28
  %414 = load atomic i8, i8* %405 monotonic, align 1
  %415 = zext i8 %414 to i32
  %416 = add nuw nsw i32 %396, %415
  %417 = shl nuw nsw i32 %416, 2
  br label %422

418:                                              ; preds = %386
  %419 = sub nsw i32 %396, %408
  %420 = shl nsw i32 %419, 2
  %421 = add nsw i32 %420, 8
  br label %422

422:                                              ; preds = %418, %410
  %423 = phi i32 [ %417, %410 ], [ %421, %418 ]
  %424 = phi i64 [ %413, %410 ], [ 536870912, %418 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %301) #7
  store i8 %399, i8* %301, align 1
  %425 = icmp ult i8 %399, 5
  br i1 %425, label %428, label %426

426:                                              ; preds = %422
  %427 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %4) #7
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i8* %427) #7
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #14
  unreachable

428:                                              ; preds = %422
  %429 = zext i8 %399 to i64
  %430 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZN2v88internal15JsonStringifier10Serialize_ILb1EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_, i64 0, i64 %429
  %431 = load i64, i64* %430, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %301) #7
  %432 = zext i1 %409 to i64
  %433 = shl nuw nsw i64 %432, 13
  %434 = sext i32 %423 to i64
  %435 = sext i32 %408 to i64
  %436 = shl nsw i64 %435, 16
  %437 = or i64 %433, %436
  %438 = or i64 %437, %434
  %439 = or i64 %438, %424
  %440 = or i64 %439, %431
  %441 = trunc i32 %373 to i8
  %442 = and i8 %441, 7
  %443 = tail call i64* @_ZN2v88internal8JSObject14FastPropertyAtENS0_6HandleIS1_EENS0_14RepresentationENS0_10FieldIndexE(i64* %1, i8 %442, i64 %440) #7
  br label %447

444:                                              ; preds = %376, %379
  %445 = tail call i64* @_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %359, i64* %1, i64* %346) #7
  %446 = icmp eq i64* %445, null
  br i1 %446, label %591, label %447

447:                                              ; preds = %444, %428
  %448 = phi i64* [ %443, %428 ], [ %445, %444 ]
  %449 = and i8 %303, 1
  %450 = icmp ne i8 %449, 0
  %451 = tail call i32 @_ZN2v88internal15JsonStringifier10Serialize_ILb1EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_(%"class.v8::internal::JsonStringifier"* %0, i64* %448, i1 zeroext %450, i64* %346) #7
  %452 = xor i1 %450, true
  %453 = icmp eq i32 %451, 1
  %454 = and i1 %453, %452
  %455 = select i1 %454, i8 1, i8 %303
  %456 = icmp eq i32 %451, 2
  br i1 %456, label %591, label %457

457:                                              ; preds = %357, %344, %447
  %458 = phi i8 [ %455, %447 ], [ %303, %357 ], [ %303, %344 ]
  %459 = add nuw nsw i64 %304, 1
  %460 = icmp eq i64 %459, %295
  br i1 %460, label %461, label %302

461:                                              ; preds = %457
  %462 = load i32, i32* %286, align 8
  %463 = add nsw i32 %462, -1
  store i32 %463, i32* %286, align 8
  %464 = and i8 %458, 1
  %465 = icmp eq i8 %464, 0
  br i1 %465, label %556, label %466

466:                                              ; preds = %461
  %467 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %468 = load i16*, i16** %467, align 8
  %469 = icmp eq i16* %468, null
  br i1 %469, label %556, label %470

470:                                              ; preds = %466
  %471 = load i32, i32* %255, align 8
  %472 = icmp eq i32 %471, 0
  %473 = load i64*, i64** %258, align 8
  %474 = load i64, i64* %473, align 8
  %475 = load i32, i32* %261, align 4
  %476 = add nsw i32 %475, 1
  store i32 %476, i32* %261, align 4
  br i1 %472, label %477, label %487

477:                                              ; preds = %470
  %478 = sext i32 %475 to i64
  %479 = add i64 %474, 11
  %480 = add i64 %479, %478
  %481 = inttoptr i64 %480 to i8*
  store i8 10, i8* %481, align 1
  %482 = load i32, i32* %261, align 4
  %483 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %484 = load i32, i32* %483, align 8
  %485 = icmp eq i32 %482, %484
  br i1 %485, label %486, label %498

486:                                              ; preds = %477
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %254) #7
  br label %498

487:                                              ; preds = %470
  %488 = shl nsw i32 %475, 1
  %489 = sext i32 %488 to i64
  %490 = add i64 %474, 11
  %491 = add i64 %490, %489
  %492 = inttoptr i64 %491 to i16*
  store i16 10, i16* %492, align 2
  %493 = load i32, i32* %261, align 4
  %494 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %495 = load i32, i32* %494, align 8
  %496 = icmp eq i32 %493, %495
  br i1 %496, label %497, label %498

497:                                              ; preds = %487
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %254) #7
  br label %498

498:                                              ; preds = %497, %487, %486, %477
  %499 = load i32, i32* %286, align 8
  %500 = icmp sgt i32 %499, 0
  br i1 %500, label %501, label %556

501:                                              ; preds = %498
  %502 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %503

503:                                              ; preds = %552, %501
  %504 = phi i32 [ 0, %501 ], [ %553, %552 ]
  %505 = load i16*, i16** %467, align 8
  %506 = load i32, i32* %255, align 8
  %507 = icmp eq i32 %506, 0
  %508 = load i16, i16* %505, align 2
  %509 = icmp eq i16 %508, 0
  br i1 %507, label %511, label %510

510:                                              ; preds = %503
  br i1 %509, label %552, label %532

511:                                              ; preds = %503
  br i1 %509, label %552, label %512

512:                                              ; preds = %511, %529
  %513 = phi i16 [ %530, %529 ], [ %508, %511 ]
  %514 = phi i16* [ %515, %529 ], [ %505, %511 ]
  %515 = getelementptr inbounds i16, i16* %514, i64 1
  %516 = load i64*, i64** %258, align 8
  %517 = load i64, i64* %516, align 8
  %518 = load i32, i32* %261, align 4
  %519 = add nsw i32 %518, 1
  store i32 %519, i32* %261, align 4
  %520 = trunc i16 %513 to i8
  %521 = sext i32 %518 to i64
  %522 = add i64 %517, 11
  %523 = add i64 %522, %521
  %524 = inttoptr i64 %523 to i8*
  store i8 %520, i8* %524, align 1
  %525 = load i32, i32* %261, align 4
  %526 = load i32, i32* %502, align 8
  %527 = icmp eq i32 %525, %526
  br i1 %527, label %528, label %529

528:                                              ; preds = %512
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %254) #7
  br label %529

529:                                              ; preds = %528, %512
  %530 = load i16, i16* %515, align 2
  %531 = icmp eq i16 %530, 0
  br i1 %531, label %552, label %512

532:                                              ; preds = %510, %549
  %533 = phi i16 [ %550, %549 ], [ %508, %510 ]
  %534 = phi i16* [ %535, %549 ], [ %505, %510 ]
  %535 = getelementptr inbounds i16, i16* %534, i64 1
  %536 = load i64*, i64** %258, align 8
  %537 = load i64, i64* %536, align 8
  %538 = load i32, i32* %261, align 4
  %539 = add nsw i32 %538, 1
  store i32 %539, i32* %261, align 4
  %540 = shl nsw i32 %538, 1
  %541 = sext i32 %540 to i64
  %542 = add i64 %537, 11
  %543 = add i64 %542, %541
  %544 = inttoptr i64 %543 to i16*
  store i16 %533, i16* %544, align 2
  %545 = load i32, i32* %261, align 4
  %546 = load i32, i32* %502, align 8
  %547 = icmp eq i32 %545, %546
  br i1 %547, label %548, label %549

548:                                              ; preds = %532
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %254) #7
  br label %549

549:                                              ; preds = %548, %532
  %550 = load i16, i16* %535, align 2
  %551 = icmp eq i16 %550, 0
  br i1 %551, label %552, label %532

552:                                              ; preds = %549, %529, %511, %510
  %553 = add nuw nsw i32 %504, 1
  %554 = load i32, i32* %286, align 8
  %555 = icmp slt i32 %553, %554
  br i1 %555, label %503, label %556

556:                                              ; preds = %552, %297, %466, %498, %461
  %557 = load i32, i32* %255, align 8
  %558 = icmp eq i32 %557, 0
  %559 = load i64*, i64** %258, align 8
  %560 = load i64, i64* %559, align 8
  %561 = load i32, i32* %261, align 4
  %562 = add nsw i32 %561, 1
  store i32 %562, i32* %261, align 4
  br i1 %558, label %563, label %573

563:                                              ; preds = %556
  %564 = sext i32 %561 to i64
  %565 = add i64 %560, 11
  %566 = add i64 %565, %564
  %567 = inttoptr i64 %566 to i8*
  store i8 125, i8* %567, align 1
  %568 = load i32, i32* %261, align 4
  %569 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %570 = load i32, i32* %569, align 8
  %571 = icmp eq i32 %568, %570
  br i1 %571, label %572, label %587

572:                                              ; preds = %563
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %254) #7
  br label %587

573:                                              ; preds = %556
  %574 = shl nsw i32 %561, 1
  %575 = sext i32 %574 to i64
  %576 = add i64 %560, 11
  %577 = add i64 %576, %575
  %578 = inttoptr i64 %577 to i16*
  store i16 125, i16* %578, align 2
  %579 = load i32, i32* %261, align 4
  %580 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %581 = load i32, i32* %580, align 8
  %582 = icmp eq i32 %579, %581
  br i1 %582, label %583, label %587

583:                                              ; preds = %573
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %254) #7
  br label %587

584:                                              ; preds = %191, %195, %207, %225
  %585 = tail call i32 @_ZN2v88internal15JsonStringifier23SerializeJSReceiverSlowENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %1) #7
  %586 = icmp eq i32 %585, 1
  br i1 %586, label %587, label %591

587:                                              ; preds = %563, %572, %573, %583, %584
  %588 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7, i32 0, i32 1
  %589 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %588, align 8
  %590 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %589, i64 -1
  store %"struct.std::__1::pair.1134"* %590, %"struct.std::__1::pair.1134"** %588, align 8
  br label %591

591:                                              ; preds = %447, %444, %587, %584, %178
  %592 = phi i32 [ 1, %587 ], [ %585, %584 ], [ %189, %178 ], [ 2, %444 ], [ 2, %447 ]
  %593 = icmp eq %"class.v8::internal::Isolate"* %180, null
  br i1 %593, label %607, label %594

594:                                              ; preds = %591
  %595 = inttoptr i64 %183 to i64*
  %596 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %181, i64 0, i32 0
  %597 = load i64*, i64** %596, align 8
  store i64 %183, i64* %182, align 8
  %598 = load i32, i32* %186, align 8
  %599 = add nsw i32 %598, -1
  store i32 %599, i32* %186, align 8
  %600 = load i64*, i64** %184, align 8
  %601 = icmp eq i64* %600, %185
  br i1 %601, label %604, label %602

602:                                              ; preds = %594
  store i64* %185, i64** %184, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %180) #7
  %603 = load i64*, i64** %596, align 8
  br label %604

604:                                              ; preds = %602, %594
  %605 = phi i64* [ %603, %602 ], [ %595, %594 ]
  %606 = phi i64* [ %185, %602 ], [ %597, %594 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %605, i64* %606) #7
  br label %607

607:                                              ; preds = %175, %154, %70, %77, %44, %79, %128, %133, %604, %591, %41, %92
  %608 = phi i32 [ 2, %92 ], [ 2, %41 ], [ %592, %591 ], [ %592, %604 ], [ 1, %133 ], [ 1, %128 ], [ 1, %79 ], [ 1, %44 ], [ 2, %70 ], [ 1, %77 ], [ 1, %154 ], [ 1, %175 ]
  ret i32 %608
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15JsonStringifier15SerializeStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonStringifier"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String::FlatContent", align 8
  %4 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %5 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::FlatStringReader", align 8
  %7 = alloca %"class.v8::internal::String::FlatContent", align 8
  %8 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %9 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::FlatStringReader", align 8
  %11 = alloca %"class.v8::internal::String::FlatContent", align 8
  %12 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %13 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %14 = alloca %"class.v8::internal::FlatStringReader", align 8
  %15 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %17 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %16, i64* %1, i8 zeroext 0)
  %18 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  %22 = load i64, i64* %17, align 8
  br label %23

23:                                               ; preds = %36, %2
  %24 = phi i64 [ %22, %2 ], [ %41, %36 ]
  %25 = and i64 %24, -4294967296
  %26 = add i64 %24, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = and i16 %33, 9
  %35 = zext i16 %34 to i32
  switch i32 %35, label %36 [
    i32 8, label %43
    i32 0, label %42
  ]

36:                                               ; preds = %23
  %37 = add i64 %24, 11
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %25, %40
  br label %23

42:                                               ; preds = %23
  br label %43

43:                                               ; preds = %23, %42
  %44 = phi i1 [ false, %42 ], [ true, %23 ]
  br i1 %21, label %45, label %254

45:                                               ; preds = %43
  br i1 %44, label %46, label %246

46:                                               ; preds = %45
  %47 = add i64 %22, 7
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %53, align 4
  %56 = sext i32 %54 to i64
  %57 = add i64 %52, 11
  %58 = add i64 %57, %56
  %59 = inttoptr i64 %58 to i8*
  store i8 34, i8* %59, align 1
  %60 = load i32, i32* %53, align 4
  %61 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %65

64:                                               ; preds = %46
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %65

65:                                               ; preds = %64, %46
  %66 = icmp sgt i32 %49, 16384
  br i1 %66, label %138, label %67

67:                                               ; preds = %65
  %68 = shl i32 %49, 3
  %69 = load i32, i32* %61, align 8
  %70 = load i32, i32* %53, align 4
  %71 = sub nsw i32 %69, %70
  %72 = icmp sle i32 %71, %68
  %73 = icmp eq i32 %68, 0
  %74 = or i1 %73, %72
  br i1 %74, label %138, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %76) #7
  %77 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #7
  %78 = load i64, i64* %17, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %9, i64 0, i32 0
  %81 = bitcast %"class.v8::internal::String::FlatContent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #7
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %7, %"class.v8::internal::String"* nonnull %80, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %8) #7
  %82 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %7, i64 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %7, i64 0, i32 1
  %85 = load i32, i32* %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #7
  %86 = load i64*, i64** %50, align 8
  %87 = load i32, i32* %53, align 4
  %88 = load i64, i64* %86, align 8
  %89 = add i64 %88, 11
  %90 = inttoptr i64 %89 to i8*
  %91 = sext i32 %87 to i64
  %92 = getelementptr inbounds i8, i8* %90, i64 %91
  %93 = ptrtoint i8* %92 to i64
  %94 = icmp sgt i32 %85, 0
  br i1 %94, label %95, label %132

95:                                               ; preds = %75
  %96 = zext i32 %85 to i64
  br label %97

97:                                               ; preds = %126, %95
  %98 = phi i64 [ %93, %95 ], [ %127, %126 ]
  %99 = phi i64 [ 0, %95 ], [ %128, %126 ]
  %100 = getelementptr inbounds i8, i8* %83, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = add i8 %101, -35
  %103 = icmp ult i8 %102, 92
  %104 = icmp ne i8 %101, 92
  %105 = and i1 %104, %103
  %106 = inttoptr i64 %98 to i8*
  br i1 %105, label %107, label %110

107:                                              ; preds = %97
  %108 = getelementptr inbounds i8, i8* %106, i64 1
  %109 = ptrtoint i8* %108 to i64
  store i8 %101, i8* %106, align 1
  br label %126

110:                                              ; preds = %97
  %111 = zext i8 %101 to i64
  %112 = shl nuw nsw i64 %111, 3
  %113 = getelementptr inbounds [2049 x i8], [2049 x i8]* @.str, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %126, label %116

116:                                              ; preds = %110, %116
  %117 = phi i8* [ %121, %116 ], [ %106, %110 ]
  %118 = phi i8 [ %122, %116 ], [ %114, %110 ]
  %119 = phi i8* [ %120, %116 ], [ %113, %110 ]
  %120 = getelementptr inbounds i8, i8* %119, i64 1
  %121 = getelementptr inbounds i8, i8* %117, i64 1
  store i8 %118, i8* %117, align 1
  %122 = load i8, i8* %120, align 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %116

124:                                              ; preds = %116
  %125 = ptrtoint i8* %121 to i64
  br label %126

126:                                              ; preds = %124, %110, %107
  %127 = phi i64 [ %109, %107 ], [ %98, %110 ], [ %125, %124 ]
  %128 = add nuw nsw i64 %99, 1
  %129 = icmp eq i64 %128, %96
  br i1 %129, label %130, label %97

130:                                              ; preds = %126
  %131 = load i32, i32* %53, align 4
  br label %132

132:                                              ; preds = %130, %75
  %133 = phi i32 [ %87, %75 ], [ %131, %130 ]
  %134 = phi i64 [ %93, %75 ], [ %127, %130 ]
  %135 = sub i64 %134, %93
  %136 = trunc i64 %135 to i32
  %137 = add nsw i32 %133, %136
  store i32 %137, i32* %53, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %76) #7
  br label %233

138:                                              ; preds = %67, %65
  %139 = bitcast %"class.v8::internal::FlatStringReader"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %139) #7
  %140 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  call void @_ZN2v88internal16FlatStringReaderC1EPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::FlatStringReader"* nonnull %10, %"class.v8::internal::Isolate"* %140, i64* %17) #7
  %141 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %10, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %10, i64 0, i32 4
  br label %156

146:                                              ; preds = %228, %138
  %147 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %148 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %10, i64 0, i32 0, i32 1
  %149 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %10, i64 0, i32 0, i32 2
  %151 = bitcast %"class.v8::internal::Relocatable"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %149, i64 0, i32 91
  %154 = bitcast %"class.v8::internal::Relocatable"** %153 to i64*
  store i64 %152, i64* %154, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %139) #7
  %155 = load i32, i32* %53, align 4
  br label %233

156:                                              ; preds = %228, %144
  %157 = phi i64 [ 0, %144 ], [ %229, %228 ]
  %158 = load i8*, i8** %145, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 %157
  %160 = load i8, i8* %159, align 1
  %161 = add i8 %160, -35
  %162 = icmp ult i8 %161, 92
  %163 = icmp ne i8 %160, 92
  %164 = and i1 %163, %162
  br i1 %164, label %165, label %178

165:                                              ; preds = %156
  %166 = load i64*, i64** %50, align 8
  %167 = load i64, i64* %166, align 8
  %168 = load i32, i32* %53, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %53, align 4
  %170 = sext i32 %168 to i64
  %171 = add i64 %167, 11
  %172 = add i64 %171, %170
  %173 = inttoptr i64 %172 to i8*
  store i8 %160, i8* %173, align 1
  %174 = load i32, i32* %53, align 4
  %175 = load i32, i32* %61, align 8
  %176 = icmp eq i32 %174, %175
  br i1 %176, label %177, label %228

177:                                              ; preds = %165
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %228

178:                                              ; preds = %156
  %179 = zext i8 %160 to i64
  %180 = shl nuw nsw i64 %179, 3
  %181 = getelementptr inbounds [2049 x i8], [2049 x i8]* @.str, i64 0, i64 %180
  %182 = load i32, i32* %19, align 8
  %183 = icmp eq i32 %182, 0
  %184 = load i8, i8* %181, align 1
  %185 = icmp eq i8 %184, 0
  br i1 %183, label %187, label %186

186:                                              ; preds = %178
  br i1 %185, label %228, label %207

187:                                              ; preds = %178
  br i1 %185, label %228, label %188

188:                                              ; preds = %187, %204
  %189 = phi i8 [ %205, %204 ], [ %184, %187 ]
  %190 = phi i8* [ %191, %204 ], [ %181, %187 ]
  %191 = getelementptr inbounds i8, i8* %190, i64 1
  %192 = load i64*, i64** %50, align 8
  %193 = load i64, i64* %192, align 8
  %194 = load i32, i32* %53, align 4
  %195 = add nsw i32 %194, 1
  store i32 %195, i32* %53, align 4
  %196 = sext i32 %194 to i64
  %197 = add i64 %193, 11
  %198 = add i64 %197, %196
  %199 = inttoptr i64 %198 to i8*
  store i8 %189, i8* %199, align 1
  %200 = load i32, i32* %53, align 4
  %201 = load i32, i32* %61, align 8
  %202 = icmp eq i32 %200, %201
  br i1 %202, label %203, label %204

203:                                              ; preds = %188
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %204

204:                                              ; preds = %203, %188
  %205 = load i8, i8* %191, align 1
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %228, label %188

207:                                              ; preds = %186, %225
  %208 = phi i8 [ %226, %225 ], [ %184, %186 ]
  %209 = phi i8* [ %210, %225 ], [ %181, %186 ]
  %210 = getelementptr inbounds i8, i8* %209, i64 1
  %211 = load i64*, i64** %50, align 8
  %212 = load i64, i64* %211, align 8
  %213 = load i32, i32* %53, align 4
  %214 = add nsw i32 %213, 1
  store i32 %214, i32* %53, align 4
  %215 = zext i8 %208 to i16
  %216 = shl nsw i32 %213, 1
  %217 = sext i32 %216 to i64
  %218 = add i64 %212, 11
  %219 = add i64 %218, %217
  %220 = inttoptr i64 %219 to i16*
  store i16 %215, i16* %220, align 2
  %221 = load i32, i32* %53, align 4
  %222 = load i32, i32* %61, align 8
  %223 = icmp eq i32 %221, %222
  br i1 %223, label %224, label %225

224:                                              ; preds = %207
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %225

225:                                              ; preds = %224, %207
  %226 = load i8, i8* %210, align 1
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %228, label %207

228:                                              ; preds = %225, %204, %187, %186, %177, %165
  %229 = add nuw nsw i64 %157, 1
  %230 = load i32, i32* %141, align 4
  %231 = sext i32 %230 to i64
  %232 = icmp slt i64 %229, %231
  br i1 %232, label %156, label %146

233:                                              ; preds = %146, %132
  %234 = phi i32 [ %155, %146 ], [ %137, %132 ]
  %235 = load i64*, i64** %50, align 8
  %236 = load i64, i64* %235, align 8
  %237 = add nsw i32 %234, 1
  store i32 %237, i32* %53, align 4
  %238 = sext i32 %234 to i64
  %239 = add nsw i64 %238, 11
  %240 = add i64 %239, %236
  %241 = inttoptr i64 %240 to i8*
  store i8 34, i8* %241, align 1
  %242 = load i32, i32* %53, align 4
  %243 = load i32, i32* %61, align 8
  %244 = icmp eq i32 %242, %243
  br i1 %244, label %245, label %1094

245:                                              ; preds = %233
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %1094

246:                                              ; preds = %45
  %247 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %248 = load i64*, i64** %247, align 8
  %249 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %250 = load i32, i32* %249, align 4
  %251 = tail call i64* @_ZN2v88internal9SeqString8TruncateENS0_6HandleIS1_EEi(i64* %248, i32 %250) #7
  %252 = load i64, i64* %251, align 8
  %253 = load i64*, i64** %247, align 8
  store i64 %252, i64* %253, align 8
  store i32 1, i32* %19, align 8
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  tail call void @_ZN2v88internal15JsonStringifier15SerializeStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %17)
  br label %1094

254:                                              ; preds = %43
  %255 = add i64 %22, 7
  %256 = inttoptr i64 %255 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %259 = load i64*, i64** %258, align 8
  %260 = load i64, i64* %259, align 8
  %261 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %262 = load i32, i32* %261, align 4
  %263 = add nsw i32 %262, 1
  store i32 %263, i32* %261, align 4
  %264 = shl nsw i32 %262, 1
  %265 = sext i32 %264 to i64
  %266 = add i64 %260, 11
  %267 = add i64 %266, %265
  %268 = inttoptr i64 %267 to i16*
  store i16 34, i16* %268, align 2
  %269 = load i32, i32* %261, align 4
  %270 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %271 = load i32, i32* %270, align 8
  %272 = icmp eq i32 %269, %271
  br i1 %44, label %273, label %464

273:                                              ; preds = %254
  br i1 %272, label %274, label %275

274:                                              ; preds = %273
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %275

275:                                              ; preds = %274, %273
  %276 = icmp sgt i32 %257, 16384
  br i1 %276, label %353, label %277

277:                                              ; preds = %275
  %278 = shl i32 %257, 3
  %279 = load i32, i32* %270, align 8
  %280 = load i32, i32* %261, align 4
  %281 = sub nsw i32 %279, %280
  %282 = icmp sle i32 %281, %278
  %283 = icmp eq i32 %278, 0
  %284 = or i1 %283, %282
  br i1 %284, label %353, label %285

285:                                              ; preds = %277
  %286 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %286) #7
  %287 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287) #7
  %288 = load i64, i64* %17, align 8
  %289 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %288, i64* %289, align 8
  %290 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %13, i64 0, i32 0
  %291 = bitcast %"class.v8::internal::String::FlatContent"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %291) #7
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %11, %"class.v8::internal::String"* nonnull %290, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %12) #7
  %292 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %11, i64 0, i32 0, i32 0
  %293 = load i8*, i8** %292, align 8
  %294 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %11, i64 0, i32 1
  %295 = load i32, i32* %294, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %291) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #7
  %296 = load i64*, i64** %258, align 8
  %297 = load i32, i32* %261, align 4
  %298 = load i64, i64* %296, align 8
  %299 = add i64 %298, 11
  %300 = inttoptr i64 %299 to i16*
  %301 = sext i32 %297 to i64
  %302 = getelementptr inbounds i16, i16* %300, i64 %301
  %303 = ptrtoint i16* %302 to i64
  %304 = icmp sgt i32 %295, 0
  br i1 %304, label %305, label %346

305:                                              ; preds = %285
  %306 = zext i32 %295 to i64
  br label %307

307:                                              ; preds = %340, %305
  %308 = phi i64 [ %303, %305 ], [ %341, %340 ]
  %309 = phi i64 [ 0, %305 ], [ %342, %340 ]
  %310 = getelementptr inbounds i8, i8* %293, i64 %309
  %311 = load i8, i8* %310, align 1
  %312 = add i8 %311, -35
  %313 = icmp ult i8 %312, 92
  %314 = icmp ne i8 %311, 92
  %315 = and i1 %314, %313
  br i1 %315, label %316, label %321

316:                                              ; preds = %307
  %317 = zext i8 %311 to i16
  %318 = inttoptr i64 %308 to i16*
  %319 = getelementptr inbounds i16, i16* %318, i64 1
  %320 = ptrtoint i16* %319 to i64
  store i16 %317, i16* %318, align 2
  br label %340

321:                                              ; preds = %307
  %322 = zext i8 %311 to i64
  %323 = shl nuw nsw i64 %322, 3
  %324 = getelementptr inbounds [2049 x i8], [2049 x i8]* @.str, i64 0, i64 %323
  %325 = load i8, i8* %324, align 1
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %340, label %327

327:                                              ; preds = %321
  %328 = inttoptr i64 %308 to i16*
  br label %329

329:                                              ; preds = %329, %327
  %330 = phi i16* [ %335, %329 ], [ %328, %327 ]
  %331 = phi i8 [ %336, %329 ], [ %325, %327 ]
  %332 = phi i8* [ %333, %329 ], [ %324, %327 ]
  %333 = getelementptr inbounds i8, i8* %332, i64 1
  %334 = zext i8 %331 to i16
  %335 = getelementptr inbounds i16, i16* %330, i64 1
  store i16 %334, i16* %330, align 2
  %336 = load i8, i8* %333, align 1
  %337 = icmp eq i8 %336, 0
  br i1 %337, label %338, label %329

338:                                              ; preds = %329
  %339 = ptrtoint i16* %335 to i64
  br label %340

340:                                              ; preds = %338, %321, %316
  %341 = phi i64 [ %320, %316 ], [ %308, %321 ], [ %339, %338 ]
  %342 = add nuw nsw i64 %309, 1
  %343 = icmp eq i64 %342, %306
  br i1 %343, label %344, label %307

344:                                              ; preds = %340
  %345 = load i32, i32* %261, align 4
  br label %346

346:                                              ; preds = %344, %285
  %347 = phi i32 [ %297, %285 ], [ %345, %344 ]
  %348 = phi i64 [ %303, %285 ], [ %341, %344 ]
  %349 = sub i64 %348, %303
  %350 = lshr exact i64 %349, 1
  %351 = trunc i64 %350 to i32
  %352 = add nsw i32 %347, %351
  store i32 %352, i32* %261, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %286) #7
  br label %450

353:                                              ; preds = %277, %275
  %354 = bitcast %"class.v8::internal::FlatStringReader"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %354) #7
  %355 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  call void @_ZN2v88internal16FlatStringReaderC1EPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::FlatStringReader"* nonnull %14, %"class.v8::internal::Isolate"* %355, i64* %17) #7
  %356 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %14, i64 0, i32 3
  %357 = load i32, i32* %356, align 4
  %358 = icmp sgt i32 %357, 0
  br i1 %358, label %359, label %361

359:                                              ; preds = %353
  %360 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %14, i64 0, i32 4
  br label %371

361:                                              ; preds = %445, %353
  %362 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %14, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %362, align 8
  %363 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %14, i64 0, i32 0, i32 1
  %364 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %363, align 8
  %365 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %14, i64 0, i32 0, i32 2
  %366 = bitcast %"class.v8::internal::Relocatable"** %365 to i64*
  %367 = load i64, i64* %366, align 8
  %368 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %364, i64 0, i32 91
  %369 = bitcast %"class.v8::internal::Relocatable"** %368 to i64*
  store i64 %367, i64* %369, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %354) #7
  %370 = load i32, i32* %261, align 4
  br label %450

371:                                              ; preds = %445, %359
  %372 = phi i64 [ 0, %359 ], [ %446, %445 ]
  %373 = load i8*, i8** %360, align 8
  %374 = getelementptr inbounds i8, i8* %373, i64 %372
  %375 = load i8, i8* %374, align 1
  %376 = add i8 %375, -35
  %377 = icmp ult i8 %376, 92
  %378 = icmp ne i8 %375, 92
  %379 = and i1 %378, %377
  br i1 %379, label %380, label %395

380:                                              ; preds = %371
  %381 = load i64*, i64** %258, align 8
  %382 = load i64, i64* %381, align 8
  %383 = load i32, i32* %261, align 4
  %384 = add nsw i32 %383, 1
  store i32 %384, i32* %261, align 4
  %385 = zext i8 %375 to i16
  %386 = shl nsw i32 %383, 1
  %387 = sext i32 %386 to i64
  %388 = add i64 %382, 11
  %389 = add i64 %388, %387
  %390 = inttoptr i64 %389 to i16*
  store i16 %385, i16* %390, align 2
  %391 = load i32, i32* %261, align 4
  %392 = load i32, i32* %270, align 8
  %393 = icmp eq i32 %391, %392
  br i1 %393, label %394, label %445

394:                                              ; preds = %380
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %445

395:                                              ; preds = %371
  %396 = zext i8 %375 to i64
  %397 = shl nuw nsw i64 %396, 3
  %398 = getelementptr inbounds [2049 x i8], [2049 x i8]* @.str, i64 0, i64 %397
  %399 = load i32, i32* %19, align 8
  %400 = icmp eq i32 %399, 0
  %401 = load i8, i8* %398, align 1
  %402 = icmp eq i8 %401, 0
  br i1 %400, label %404, label %403

403:                                              ; preds = %395
  br i1 %402, label %445, label %424

404:                                              ; preds = %395
  br i1 %402, label %445, label %405

405:                                              ; preds = %404, %421
  %406 = phi i8 [ %422, %421 ], [ %401, %404 ]
  %407 = phi i8* [ %408, %421 ], [ %398, %404 ]
  %408 = getelementptr inbounds i8, i8* %407, i64 1
  %409 = load i64*, i64** %258, align 8
  %410 = load i64, i64* %409, align 8
  %411 = load i32, i32* %261, align 4
  %412 = add nsw i32 %411, 1
  store i32 %412, i32* %261, align 4
  %413 = sext i32 %411 to i64
  %414 = add i64 %410, 11
  %415 = add i64 %414, %413
  %416 = inttoptr i64 %415 to i8*
  store i8 %406, i8* %416, align 1
  %417 = load i32, i32* %261, align 4
  %418 = load i32, i32* %270, align 8
  %419 = icmp eq i32 %417, %418
  br i1 %419, label %420, label %421

420:                                              ; preds = %405
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %421

421:                                              ; preds = %420, %405
  %422 = load i8, i8* %408, align 1
  %423 = icmp eq i8 %422, 0
  br i1 %423, label %445, label %405

424:                                              ; preds = %403, %442
  %425 = phi i8 [ %443, %442 ], [ %401, %403 ]
  %426 = phi i8* [ %427, %442 ], [ %398, %403 ]
  %427 = getelementptr inbounds i8, i8* %426, i64 1
  %428 = load i64*, i64** %258, align 8
  %429 = load i64, i64* %428, align 8
  %430 = load i32, i32* %261, align 4
  %431 = add nsw i32 %430, 1
  store i32 %431, i32* %261, align 4
  %432 = zext i8 %425 to i16
  %433 = shl nsw i32 %430, 1
  %434 = sext i32 %433 to i64
  %435 = add i64 %429, 11
  %436 = add i64 %435, %434
  %437 = inttoptr i64 %436 to i16*
  store i16 %432, i16* %437, align 2
  %438 = load i32, i32* %261, align 4
  %439 = load i32, i32* %270, align 8
  %440 = icmp eq i32 %438, %439
  br i1 %440, label %441, label %442

441:                                              ; preds = %424
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %442

442:                                              ; preds = %441, %424
  %443 = load i8, i8* %427, align 1
  %444 = icmp eq i8 %443, 0
  br i1 %444, label %445, label %424

445:                                              ; preds = %442, %421, %404, %403, %394, %380
  %446 = add nuw nsw i64 %372, 1
  %447 = load i32, i32* %356, align 4
  %448 = sext i32 %447 to i64
  %449 = icmp slt i64 %446, %448
  br i1 %449, label %371, label %361

450:                                              ; preds = %361, %346
  %451 = phi i32 [ %370, %361 ], [ %352, %346 ]
  %452 = load i64*, i64** %258, align 8
  %453 = load i64, i64* %452, align 8
  %454 = add nsw i32 %451, 1
  store i32 %454, i32* %261, align 4
  %455 = shl nsw i32 %451, 1
  %456 = sext i32 %455 to i64
  %457 = add i64 %453, 11
  %458 = add i64 %457, %456
  %459 = inttoptr i64 %458 to i16*
  store i16 34, i16* %459, align 2
  %460 = load i32, i32* %261, align 4
  %461 = load i32, i32* %270, align 8
  %462 = icmp eq i32 %460, %461
  br i1 %462, label %463, label %1094

463:                                              ; preds = %450
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %1094

464:                                              ; preds = %254
  br i1 %272, label %465, label %466

465:                                              ; preds = %464
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %466

466:                                              ; preds = %465, %464
  %467 = icmp sgt i32 %257, 16384
  br i1 %467, label %619, label %468

468:                                              ; preds = %466
  %469 = shl i32 %257, 3
  %470 = load i32, i32* %270, align 8
  %471 = load i32, i32* %261, align 4
  %472 = sub nsw i32 %470, %471
  %473 = icmp sle i32 %472, %469
  %474 = icmp eq i32 %469, 0
  %475 = or i1 %474, %473
  br i1 %475, label %619, label %476

476:                                              ; preds = %468
  %477 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %477) #7
  %478 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %478) #7
  %479 = load i64, i64* %17, align 8
  %480 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %479, i64* %480, align 8
  %481 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0
  %482 = bitcast %"class.v8::internal::String::FlatContent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %482) #7
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %3, %"class.v8::internal::String"* nonnull %481, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %4) #7
  %483 = bitcast %"class.v8::internal::String::FlatContent"* %3 to i16**
  %484 = load i16*, i16** %483, align 8
  %485 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %3, i64 0, i32 1
  %486 = load i32, i32* %485, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %482) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %478) #7
  %487 = load i64*, i64** %258, align 8
  %488 = load i32, i32* %261, align 4
  %489 = load i64, i64* %487, align 8
  %490 = add i64 %489, 11
  %491 = inttoptr i64 %490 to i16*
  %492 = sext i32 %488 to i64
  %493 = getelementptr inbounds i16, i16* %491, i64 %492
  %494 = ptrtoint i16* %493 to i64
  %495 = icmp sgt i32 %486, 0
  br i1 %495, label %496, label %612

496:                                              ; preds = %476, %605
  %497 = phi i64 [ %606, %605 ], [ %494, %476 ]
  %498 = phi i32 [ %608, %605 ], [ 0, %476 ]
  %499 = inttoptr i64 %497 to i16*
  %500 = sext i32 %498 to i64
  %501 = getelementptr inbounds i16, i16* %484, i64 %500
  %502 = load i16, i16* %501, align 2
  %503 = icmp ult i16 %502, 35
  br i1 %503, label %588, label %504

504:                                              ; preds = %496
  switch i16 %502, label %505 [
    i16 127, label %588
    i16 92, label %588
  ]

505:                                              ; preds = %504
  %506 = and i16 %502, -2048
  %507 = icmp eq i16 %506, -10240
  br i1 %507, label %511, label %508

508:                                              ; preds = %505
  %509 = getelementptr inbounds i16, i16* %499, i64 1
  %510 = ptrtoint i16* %509 to i64
  store i16 %502, i16* %499, align 2
  br label %605

511:                                              ; preds = %505
  %512 = icmp ult i16 %502, -9216
  br i1 %512, label %520, label %513

513:                                              ; preds = %511
  %514 = getelementptr inbounds i16, i16* %499, i64 1
  store i16 92, i16* %499, align 2
  %515 = getelementptr inbounds i16, i16* %499, i64 2
  store i16 117, i16* %514, align 2
  %516 = uitofp i16 %502 to double
  %517 = call i8* @_ZN2v88internal20DoubleToRadixCStringEdi(double %516, i32 16) #7
  %518 = load i8, i8* %517, align 1
  %519 = icmp eq i8 %518, 0
  br i1 %519, label %583, label %574

520:                                              ; preds = %511
  %521 = add nsw i32 %498, 1
  %522 = icmp slt i32 %521, %486
  br i1 %522, label %530, label %523

523:                                              ; preds = %520
  %524 = getelementptr inbounds i16, i16* %499, i64 1
  store i16 92, i16* %499, align 2
  %525 = getelementptr inbounds i16, i16* %499, i64 2
  store i16 117, i16* %524, align 2
  %526 = uitofp i16 %502 to double
  %527 = call i8* @_ZN2v88internal20DoubleToRadixCStringEdi(double %526, i32 16) #7
  %528 = load i8, i8* %527, align 1
  %529 = icmp eq i8 %528, 0
  br i1 %529, label %569, label %560

530:                                              ; preds = %520
  %531 = sext i32 %521 to i64
  %532 = getelementptr inbounds i16, i16* %484, i64 %531
  %533 = load i16, i16* %532, align 2
  %534 = and i16 %533, -1024
  %535 = icmp eq i16 %534, -9216
  %536 = getelementptr inbounds i16, i16* %499, i64 1
  br i1 %535, label %543, label %537

537:                                              ; preds = %530
  store i16 92, i16* %499, align 2
  %538 = getelementptr inbounds i16, i16* %499, i64 2
  store i16 117, i16* %536, align 2
  %539 = uitofp i16 %502 to double
  %540 = call i8* @_ZN2v88internal20DoubleToRadixCStringEdi(double %539, i32 16) #7
  %541 = load i8, i8* %540, align 1
  %542 = icmp eq i8 %541, 0
  br i1 %542, label %555, label %546

543:                                              ; preds = %530
  store i16 %502, i16* %499, align 2
  %544 = getelementptr inbounds i16, i16* %499, i64 2
  %545 = ptrtoint i16* %544 to i64
  store i16 %533, i16* %536, align 2
  br label %605

546:                                              ; preds = %537, %546
  %547 = phi i16* [ %552, %546 ], [ %538, %537 ]
  %548 = phi i8 [ %553, %546 ], [ %541, %537 ]
  %549 = phi i8* [ %550, %546 ], [ %540, %537 ]
  %550 = getelementptr inbounds i8, i8* %549, i64 1
  %551 = zext i8 %548 to i16
  %552 = getelementptr inbounds i16, i16* %547, i64 1
  store i16 %551, i16* %547, align 2
  %553 = load i8, i8* %550, align 1
  %554 = icmp eq i8 %553, 0
  br i1 %554, label %555, label %546

555:                                              ; preds = %546, %537
  %556 = phi i16* [ %538, %537 ], [ %552, %546 ]
  %557 = ptrtoint i16* %556 to i64
  %558 = icmp eq i8* %540, null
  br i1 %558, label %605, label %559

559:                                              ; preds = %555
  call void @_ZdaPv(i8* nonnull %540) #13
  br label %605

560:                                              ; preds = %523, %560
  %561 = phi i16* [ %566, %560 ], [ %525, %523 ]
  %562 = phi i8 [ %567, %560 ], [ %528, %523 ]
  %563 = phi i8* [ %564, %560 ], [ %527, %523 ]
  %564 = getelementptr inbounds i8, i8* %563, i64 1
  %565 = zext i8 %562 to i16
  %566 = getelementptr inbounds i16, i16* %561, i64 1
  store i16 %565, i16* %561, align 2
  %567 = load i8, i8* %564, align 1
  %568 = icmp eq i8 %567, 0
  br i1 %568, label %569, label %560

569:                                              ; preds = %560, %523
  %570 = phi i16* [ %525, %523 ], [ %566, %560 ]
  %571 = ptrtoint i16* %570 to i64
  %572 = icmp eq i8* %527, null
  br i1 %572, label %605, label %573

573:                                              ; preds = %569
  call void @_ZdaPv(i8* nonnull %527) #13
  br label %605

574:                                              ; preds = %513, %574
  %575 = phi i16* [ %580, %574 ], [ %515, %513 ]
  %576 = phi i8 [ %581, %574 ], [ %518, %513 ]
  %577 = phi i8* [ %578, %574 ], [ %517, %513 ]
  %578 = getelementptr inbounds i8, i8* %577, i64 1
  %579 = zext i8 %576 to i16
  %580 = getelementptr inbounds i16, i16* %575, i64 1
  store i16 %579, i16* %575, align 2
  %581 = load i8, i8* %578, align 1
  %582 = icmp eq i8 %581, 0
  br i1 %582, label %583, label %574

583:                                              ; preds = %574, %513
  %584 = phi i16* [ %515, %513 ], [ %580, %574 ]
  %585 = ptrtoint i16* %584 to i64
  %586 = icmp eq i8* %517, null
  br i1 %586, label %605, label %587

587:                                              ; preds = %583
  call void @_ZdaPv(i8* nonnull %517) #13
  br label %605

588:                                              ; preds = %504, %504, %496
  %589 = zext i16 %502 to i64
  %590 = shl nuw nsw i64 %589, 3
  %591 = getelementptr inbounds [2049 x i8], [2049 x i8]* @.str, i64 0, i64 %590
  %592 = load i8, i8* %591, align 1
  %593 = icmp eq i8 %592, 0
  br i1 %593, label %605, label %594

594:                                              ; preds = %588, %594
  %595 = phi i16* [ %600, %594 ], [ %499, %588 ]
  %596 = phi i8 [ %601, %594 ], [ %592, %588 ]
  %597 = phi i8* [ %598, %594 ], [ %591, %588 ]
  %598 = getelementptr inbounds i8, i8* %597, i64 1
  %599 = zext i8 %596 to i16
  %600 = getelementptr inbounds i16, i16* %595, i64 1
  store i16 %599, i16* %595, align 2
  %601 = load i8, i8* %598, align 1
  %602 = icmp eq i8 %601, 0
  br i1 %602, label %603, label %594

603:                                              ; preds = %594
  %604 = ptrtoint i16* %600 to i64
  br label %605

605:                                              ; preds = %603, %588, %587, %583, %573, %569, %559, %555, %543, %508
  %606 = phi i64 [ %497, %588 ], [ %545, %543 ], [ %557, %555 ], [ %557, %559 ], [ %571, %569 ], [ %571, %573 ], [ %585, %583 ], [ %585, %587 ], [ %510, %508 ], [ %604, %603 ]
  %607 = phi i32 [ %498, %588 ], [ %521, %543 ], [ %498, %555 ], [ %498, %559 ], [ %498, %569 ], [ %498, %573 ], [ %498, %583 ], [ %498, %587 ], [ %498, %508 ], [ %498, %603 ]
  %608 = add nsw i32 %607, 1
  %609 = icmp slt i32 %608, %486
  br i1 %609, label %496, label %610

610:                                              ; preds = %605
  %611 = load i32, i32* %261, align 4
  br label %612

612:                                              ; preds = %610, %476
  %613 = phi i32 [ %488, %476 ], [ %611, %610 ]
  %614 = phi i64 [ %494, %476 ], [ %606, %610 ]
  %615 = sub i64 %614, %494
  %616 = lshr exact i64 %615, 1
  %617 = trunc i64 %616 to i32
  %618 = add nsw i32 %613, %617
  store i32 %618, i32* %261, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %477) #7
  br label %1074

619:                                              ; preds = %468, %466
  %620 = bitcast %"class.v8::internal::FlatStringReader"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %620) #7
  %621 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  call void @_ZN2v88internal16FlatStringReaderC1EPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::FlatStringReader"* nonnull %6, %"class.v8::internal::Isolate"* %621, i64* %17) #7
  %622 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %6, i64 0, i32 3
  %623 = load i32, i32* %622, align 4
  %624 = icmp sgt i32 %623, 0
  br i1 %624, label %625, label %628

625:                                              ; preds = %619
  %626 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %6, i64 0, i32 4
  %627 = bitcast i8** %626 to i16**
  br label %638

628:                                              ; preds = %1069, %619
  %629 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %629, align 8
  %630 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %6, i64 0, i32 0, i32 1
  %631 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %630, align 8
  %632 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %6, i64 0, i32 0, i32 2
  %633 = bitcast %"class.v8::internal::Relocatable"** %632 to i64*
  %634 = load i64, i64* %633, align 8
  %635 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %631, i64 0, i32 91
  %636 = bitcast %"class.v8::internal::Relocatable"** %635 to i64*
  store i64 %634, i64* %636, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %620) #7
  %637 = load i32, i32* %261, align 4
  br label %1074

638:                                              ; preds = %1069, %625
  %639 = phi i32 [ %623, %625 ], [ %1072, %1069 ]
  %640 = phi i32 [ 0, %625 ], [ %1071, %1069 ]
  %641 = load i16*, i16** %627, align 8
  %642 = sext i32 %640 to i64
  %643 = getelementptr inbounds i16, i16* %641, i64 %642
  %644 = load i16, i16* %643, align 2
  %645 = icmp ult i16 %644, 35
  br i1 %645, label %1019, label %646

646:                                              ; preds = %638
  switch i16 %644, label %647 [
    i16 127, label %1019
    i16 92, label %1019
  ]

647:                                              ; preds = %646
  %648 = and i16 %644, -2048
  %649 = icmp eq i16 %648, -10240
  br i1 %649, label %664, label %650

650:                                              ; preds = %647
  %651 = load i64*, i64** %258, align 8
  %652 = load i64, i64* %651, align 8
  %653 = load i32, i32* %261, align 4
  %654 = add nsw i32 %653, 1
  store i32 %654, i32* %261, align 4
  %655 = shl nsw i32 %653, 1
  %656 = sext i32 %655 to i64
  %657 = add i64 %652, 11
  %658 = add i64 %657, %656
  %659 = inttoptr i64 %658 to i16*
  store i16 %644, i16* %659, align 2
  %660 = load i32, i32* %261, align 4
  %661 = load i32, i32* %270, align 8
  %662 = icmp eq i32 %660, %661
  br i1 %662, label %663, label %1069

663:                                              ; preds = %650
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %1069

664:                                              ; preds = %647
  %665 = icmp ult i16 %644, -9216
  br i1 %665, label %666, label %914

666:                                              ; preds = %664
  %667 = add nsw i32 %640, 1
  %668 = icmp slt i32 %667, %639
  br i1 %668, label %669, label %809

669:                                              ; preds = %666
  %670 = sext i32 %667 to i64
  %671 = getelementptr inbounds i16, i16* %641, i64 %670
  %672 = load i16, i16* %671, align 2
  %673 = and i16 %672, -1024
  %674 = icmp eq i16 %673, -9216
  br i1 %674, label %675, label %704

675:                                              ; preds = %669
  %676 = load i64*, i64** %258, align 8
  %677 = load i64, i64* %676, align 8
  %678 = load i32, i32* %261, align 4
  %679 = add nsw i32 %678, 1
  store i32 %679, i32* %261, align 4
  %680 = shl nsw i32 %678, 1
  %681 = sext i32 %680 to i64
  %682 = add i64 %677, 11
  %683 = add i64 %682, %681
  %684 = inttoptr i64 %683 to i16*
  store i16 %644, i16* %684, align 2
  %685 = load i32, i32* %261, align 4
  %686 = load i32, i32* %270, align 8
  %687 = icmp eq i32 %685, %686
  br i1 %687, label %688, label %690

688:                                              ; preds = %675
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  %689 = load i32, i32* %261, align 4
  br label %690

690:                                              ; preds = %688, %675
  %691 = phi i32 [ %685, %675 ], [ %689, %688 ]
  %692 = load i64*, i64** %258, align 8
  %693 = load i64, i64* %692, align 8
  %694 = add nsw i32 %691, 1
  store i32 %694, i32* %261, align 4
  %695 = shl nsw i32 %691, 1
  %696 = sext i32 %695 to i64
  %697 = add i64 %693, 11
  %698 = add i64 %697, %696
  %699 = inttoptr i64 %698 to i16*
  store i16 %672, i16* %699, align 2
  %700 = load i32, i32* %261, align 4
  %701 = load i32, i32* %270, align 8
  %702 = icmp eq i32 %700, %701
  br i1 %702, label %703, label %1069

703:                                              ; preds = %690
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %1069

704:                                              ; preds = %669
  %705 = load i32, i32* %19, align 8
  %706 = icmp eq i32 %705, 0
  %707 = load i64*, i64** %258, align 8
  %708 = load i64, i64* %707, align 8
  %709 = load i32, i32* %261, align 4
  %710 = add nsw i32 %709, 1
  store i32 %710, i32* %261, align 4
  br i1 %706, label %720, label %711

711:                                              ; preds = %704
  %712 = shl nsw i32 %709, 1
  %713 = sext i32 %712 to i64
  %714 = add i64 %708, 11
  %715 = add i64 %714, %713
  %716 = inttoptr i64 %715 to i16*
  store i16 92, i16* %716, align 2
  %717 = load i32, i32* %261, align 4
  %718 = load i32, i32* %270, align 8
  %719 = icmp eq i32 %717, %718
  br i1 %719, label %742, label %744

720:                                              ; preds = %704
  %721 = sext i32 %709 to i64
  %722 = add i64 %708, 11
  %723 = add i64 %722, %721
  %724 = inttoptr i64 %723 to i8*
  store i8 92, i8* %724, align 1
  %725 = load i32, i32* %261, align 4
  %726 = load i32, i32* %270, align 8
  %727 = icmp eq i32 %725, %726
  br i1 %727, label %728, label %730

728:                                              ; preds = %720
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  %729 = load i32, i32* %261, align 4
  br label %730

730:                                              ; preds = %728, %720
  %731 = phi i32 [ %729, %728 ], [ %725, %720 ]
  %732 = load i64*, i64** %258, align 8
  %733 = load i64, i64* %732, align 8
  %734 = add nsw i32 %731, 1
  store i32 %734, i32* %261, align 4
  %735 = sext i32 %731 to i64
  %736 = add nsw i64 %735, 11
  %737 = add i64 %736, %733
  %738 = inttoptr i64 %737 to i8*
  store i8 117, i8* %738, align 1
  %739 = load i32, i32* %261, align 4
  %740 = load i32, i32* %270, align 8
  %741 = icmp eq i32 %739, %740
  br i1 %741, label %1093, label %757

742:                                              ; preds = %711
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  %743 = load i32, i32* %261, align 4
  br label %744

744:                                              ; preds = %742, %711
  %745 = phi i32 [ %743, %742 ], [ %717, %711 ]
  %746 = load i64*, i64** %258, align 8
  %747 = load i64, i64* %746, align 8
  %748 = add nsw i32 %745, 1
  store i32 %748, i32* %261, align 4
  %749 = shl nsw i32 %745, 1
  %750 = sext i32 %749 to i64
  %751 = add i64 %747, 11
  %752 = add i64 %751, %750
  %753 = inttoptr i64 %752 to i16*
  store i16 117, i16* %753, align 2
  %754 = load i32, i32* %261, align 4
  %755 = load i32, i32* %270, align 8
  %756 = icmp eq i32 %754, %755
  br i1 %756, label %1092, label %757

757:                                              ; preds = %1093, %1092, %744, %730
  %758 = uitofp i16 %644 to double
  %759 = call i8* @_ZN2v88internal20DoubleToRadixCStringEdi(double %758, i32 16) #7
  %760 = load i32, i32* %19, align 8
  %761 = icmp eq i32 %760, 0
  %762 = load i8, i8* %759, align 1
  %763 = icmp eq i8 %762, 0
  br i1 %761, label %765, label %764

764:                                              ; preds = %757
  br i1 %763, label %806, label %785

765:                                              ; preds = %757
  br i1 %763, label %806, label %766

766:                                              ; preds = %765, %782
  %767 = phi i8 [ %783, %782 ], [ %762, %765 ]
  %768 = phi i8* [ %769, %782 ], [ %759, %765 ]
  %769 = getelementptr inbounds i8, i8* %768, i64 1
  %770 = load i64*, i64** %258, align 8
  %771 = load i64, i64* %770, align 8
  %772 = load i32, i32* %261, align 4
  %773 = add nsw i32 %772, 1
  store i32 %773, i32* %261, align 4
  %774 = sext i32 %772 to i64
  %775 = add i64 %771, 11
  %776 = add i64 %775, %774
  %777 = inttoptr i64 %776 to i8*
  store i8 %767, i8* %777, align 1
  %778 = load i32, i32* %261, align 4
  %779 = load i32, i32* %270, align 8
  %780 = icmp eq i32 %778, %779
  br i1 %780, label %781, label %782

781:                                              ; preds = %766
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %782

782:                                              ; preds = %781, %766
  %783 = load i8, i8* %769, align 1
  %784 = icmp eq i8 %783, 0
  br i1 %784, label %806, label %766

785:                                              ; preds = %764, %803
  %786 = phi i8 [ %804, %803 ], [ %762, %764 ]
  %787 = phi i8* [ %788, %803 ], [ %759, %764 ]
  %788 = getelementptr inbounds i8, i8* %787, i64 1
  %789 = load i64*, i64** %258, align 8
  %790 = load i64, i64* %789, align 8
  %791 = load i32, i32* %261, align 4
  %792 = add nsw i32 %791, 1
  store i32 %792, i32* %261, align 4
  %793 = zext i8 %786 to i16
  %794 = shl nsw i32 %791, 1
  %795 = sext i32 %794 to i64
  %796 = add i64 %790, 11
  %797 = add i64 %796, %795
  %798 = inttoptr i64 %797 to i16*
  store i16 %793, i16* %798, align 2
  %799 = load i32, i32* %261, align 4
  %800 = load i32, i32* %270, align 8
  %801 = icmp eq i32 %799, %800
  br i1 %801, label %802, label %803

802:                                              ; preds = %785
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %803

803:                                              ; preds = %802, %785
  %804 = load i8, i8* %788, align 1
  %805 = icmp eq i8 %804, 0
  br i1 %805, label %806, label %785

806:                                              ; preds = %803, %782, %765, %764
  %807 = icmp eq i8* %759, null
  br i1 %807, label %1069, label %808

808:                                              ; preds = %806
  call void @_ZdaPv(i8* nonnull %759) #13
  br label %1069

809:                                              ; preds = %666
  %810 = load i32, i32* %19, align 8
  %811 = icmp eq i32 %810, 0
  %812 = load i64*, i64** %258, align 8
  %813 = load i64, i64* %812, align 8
  %814 = load i32, i32* %261, align 4
  %815 = add nsw i32 %814, 1
  store i32 %815, i32* %261, align 4
  br i1 %811, label %825, label %816

816:                                              ; preds = %809
  %817 = shl nsw i32 %814, 1
  %818 = sext i32 %817 to i64
  %819 = add i64 %813, 11
  %820 = add i64 %819, %818
  %821 = inttoptr i64 %820 to i16*
  store i16 92, i16* %821, align 2
  %822 = load i32, i32* %261, align 4
  %823 = load i32, i32* %270, align 8
  %824 = icmp eq i32 %822, %823
  br i1 %824, label %847, label %849

825:                                              ; preds = %809
  %826 = sext i32 %814 to i64
  %827 = add i64 %813, 11
  %828 = add i64 %827, %826
  %829 = inttoptr i64 %828 to i8*
  store i8 92, i8* %829, align 1
  %830 = load i32, i32* %261, align 4
  %831 = load i32, i32* %270, align 8
  %832 = icmp eq i32 %830, %831
  br i1 %832, label %833, label %835

833:                                              ; preds = %825
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  %834 = load i32, i32* %261, align 4
  br label %835

835:                                              ; preds = %833, %825
  %836 = phi i32 [ %834, %833 ], [ %830, %825 ]
  %837 = load i64*, i64** %258, align 8
  %838 = load i64, i64* %837, align 8
  %839 = add nsw i32 %836, 1
  store i32 %839, i32* %261, align 4
  %840 = sext i32 %836 to i64
  %841 = add nsw i64 %840, 11
  %842 = add i64 %841, %838
  %843 = inttoptr i64 %842 to i8*
  store i8 117, i8* %843, align 1
  %844 = load i32, i32* %261, align 4
  %845 = load i32, i32* %270, align 8
  %846 = icmp eq i32 %844, %845
  br i1 %846, label %1091, label %862

847:                                              ; preds = %816
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  %848 = load i32, i32* %261, align 4
  br label %849

849:                                              ; preds = %847, %816
  %850 = phi i32 [ %848, %847 ], [ %822, %816 ]
  %851 = load i64*, i64** %258, align 8
  %852 = load i64, i64* %851, align 8
  %853 = add nsw i32 %850, 1
  store i32 %853, i32* %261, align 4
  %854 = shl nsw i32 %850, 1
  %855 = sext i32 %854 to i64
  %856 = add i64 %852, 11
  %857 = add i64 %856, %855
  %858 = inttoptr i64 %857 to i16*
  store i16 117, i16* %858, align 2
  %859 = load i32, i32* %261, align 4
  %860 = load i32, i32* %270, align 8
  %861 = icmp eq i32 %859, %860
  br i1 %861, label %1090, label %862

862:                                              ; preds = %1091, %1090, %849, %835
  %863 = uitofp i16 %644 to double
  %864 = call i8* @_ZN2v88internal20DoubleToRadixCStringEdi(double %863, i32 16) #7
  %865 = load i32, i32* %19, align 8
  %866 = icmp eq i32 %865, 0
  %867 = load i8, i8* %864, align 1
  %868 = icmp eq i8 %867, 0
  br i1 %866, label %870, label %869

869:                                              ; preds = %862
  br i1 %868, label %911, label %890

870:                                              ; preds = %862
  br i1 %868, label %911, label %871

871:                                              ; preds = %870, %887
  %872 = phi i8 [ %888, %887 ], [ %867, %870 ]
  %873 = phi i8* [ %874, %887 ], [ %864, %870 ]
  %874 = getelementptr inbounds i8, i8* %873, i64 1
  %875 = load i64*, i64** %258, align 8
  %876 = load i64, i64* %875, align 8
  %877 = load i32, i32* %261, align 4
  %878 = add nsw i32 %877, 1
  store i32 %878, i32* %261, align 4
  %879 = sext i32 %877 to i64
  %880 = add i64 %876, 11
  %881 = add i64 %880, %879
  %882 = inttoptr i64 %881 to i8*
  store i8 %872, i8* %882, align 1
  %883 = load i32, i32* %261, align 4
  %884 = load i32, i32* %270, align 8
  %885 = icmp eq i32 %883, %884
  br i1 %885, label %886, label %887

886:                                              ; preds = %871
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %887

887:                                              ; preds = %886, %871
  %888 = load i8, i8* %874, align 1
  %889 = icmp eq i8 %888, 0
  br i1 %889, label %911, label %871

890:                                              ; preds = %869, %908
  %891 = phi i8 [ %909, %908 ], [ %867, %869 ]
  %892 = phi i8* [ %893, %908 ], [ %864, %869 ]
  %893 = getelementptr inbounds i8, i8* %892, i64 1
  %894 = load i64*, i64** %258, align 8
  %895 = load i64, i64* %894, align 8
  %896 = load i32, i32* %261, align 4
  %897 = add nsw i32 %896, 1
  store i32 %897, i32* %261, align 4
  %898 = zext i8 %891 to i16
  %899 = shl nsw i32 %896, 1
  %900 = sext i32 %899 to i64
  %901 = add i64 %895, 11
  %902 = add i64 %901, %900
  %903 = inttoptr i64 %902 to i16*
  store i16 %898, i16* %903, align 2
  %904 = load i32, i32* %261, align 4
  %905 = load i32, i32* %270, align 8
  %906 = icmp eq i32 %904, %905
  br i1 %906, label %907, label %908

907:                                              ; preds = %890
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %908

908:                                              ; preds = %907, %890
  %909 = load i8, i8* %893, align 1
  %910 = icmp eq i8 %909, 0
  br i1 %910, label %911, label %890

911:                                              ; preds = %908, %887, %870, %869
  %912 = icmp eq i8* %864, null
  br i1 %912, label %1069, label %913

913:                                              ; preds = %911
  call void @_ZdaPv(i8* nonnull %864) #13
  br label %1069

914:                                              ; preds = %664
  %915 = load i32, i32* %19, align 8
  %916 = icmp eq i32 %915, 0
  %917 = load i64*, i64** %258, align 8
  %918 = load i64, i64* %917, align 8
  %919 = load i32, i32* %261, align 4
  %920 = add nsw i32 %919, 1
  store i32 %920, i32* %261, align 4
  br i1 %916, label %930, label %921

921:                                              ; preds = %914
  %922 = shl nsw i32 %919, 1
  %923 = sext i32 %922 to i64
  %924 = add i64 %918, 11
  %925 = add i64 %924, %923
  %926 = inttoptr i64 %925 to i16*
  store i16 92, i16* %926, align 2
  %927 = load i32, i32* %261, align 4
  %928 = load i32, i32* %270, align 8
  %929 = icmp eq i32 %927, %928
  br i1 %929, label %952, label %954

930:                                              ; preds = %914
  %931 = sext i32 %919 to i64
  %932 = add i64 %918, 11
  %933 = add i64 %932, %931
  %934 = inttoptr i64 %933 to i8*
  store i8 92, i8* %934, align 1
  %935 = load i32, i32* %261, align 4
  %936 = load i32, i32* %270, align 8
  %937 = icmp eq i32 %935, %936
  br i1 %937, label %938, label %940

938:                                              ; preds = %930
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  %939 = load i32, i32* %261, align 4
  br label %940

940:                                              ; preds = %938, %930
  %941 = phi i32 [ %939, %938 ], [ %935, %930 ]
  %942 = load i64*, i64** %258, align 8
  %943 = load i64, i64* %942, align 8
  %944 = add nsw i32 %941, 1
  store i32 %944, i32* %261, align 4
  %945 = sext i32 %941 to i64
  %946 = add nsw i64 %945, 11
  %947 = add i64 %946, %943
  %948 = inttoptr i64 %947 to i8*
  store i8 117, i8* %948, align 1
  %949 = load i32, i32* %261, align 4
  %950 = load i32, i32* %270, align 8
  %951 = icmp eq i32 %949, %950
  br i1 %951, label %1089, label %967

952:                                              ; preds = %921
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  %953 = load i32, i32* %261, align 4
  br label %954

954:                                              ; preds = %952, %921
  %955 = phi i32 [ %953, %952 ], [ %927, %921 ]
  %956 = load i64*, i64** %258, align 8
  %957 = load i64, i64* %956, align 8
  %958 = add nsw i32 %955, 1
  store i32 %958, i32* %261, align 4
  %959 = shl nsw i32 %955, 1
  %960 = sext i32 %959 to i64
  %961 = add i64 %957, 11
  %962 = add i64 %961, %960
  %963 = inttoptr i64 %962 to i16*
  store i16 117, i16* %963, align 2
  %964 = load i32, i32* %261, align 4
  %965 = load i32, i32* %270, align 8
  %966 = icmp eq i32 %964, %965
  br i1 %966, label %1088, label %967

967:                                              ; preds = %1089, %1088, %954, %940
  %968 = uitofp i16 %644 to double
  %969 = call i8* @_ZN2v88internal20DoubleToRadixCStringEdi(double %968, i32 16) #7
  %970 = load i32, i32* %19, align 8
  %971 = icmp eq i32 %970, 0
  %972 = load i8, i8* %969, align 1
  %973 = icmp eq i8 %972, 0
  br i1 %971, label %975, label %974

974:                                              ; preds = %967
  br i1 %973, label %1016, label %995

975:                                              ; preds = %967
  br i1 %973, label %1016, label %976

976:                                              ; preds = %975, %992
  %977 = phi i8 [ %993, %992 ], [ %972, %975 ]
  %978 = phi i8* [ %979, %992 ], [ %969, %975 ]
  %979 = getelementptr inbounds i8, i8* %978, i64 1
  %980 = load i64*, i64** %258, align 8
  %981 = load i64, i64* %980, align 8
  %982 = load i32, i32* %261, align 4
  %983 = add nsw i32 %982, 1
  store i32 %983, i32* %261, align 4
  %984 = sext i32 %982 to i64
  %985 = add i64 %981, 11
  %986 = add i64 %985, %984
  %987 = inttoptr i64 %986 to i8*
  store i8 %977, i8* %987, align 1
  %988 = load i32, i32* %261, align 4
  %989 = load i32, i32* %270, align 8
  %990 = icmp eq i32 %988, %989
  br i1 %990, label %991, label %992

991:                                              ; preds = %976
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %992

992:                                              ; preds = %991, %976
  %993 = load i8, i8* %979, align 1
  %994 = icmp eq i8 %993, 0
  br i1 %994, label %1016, label %976

995:                                              ; preds = %974, %1013
  %996 = phi i8 [ %1014, %1013 ], [ %972, %974 ]
  %997 = phi i8* [ %998, %1013 ], [ %969, %974 ]
  %998 = getelementptr inbounds i8, i8* %997, i64 1
  %999 = load i64*, i64** %258, align 8
  %1000 = load i64, i64* %999, align 8
  %1001 = load i32, i32* %261, align 4
  %1002 = add nsw i32 %1001, 1
  store i32 %1002, i32* %261, align 4
  %1003 = zext i8 %996 to i16
  %1004 = shl nsw i32 %1001, 1
  %1005 = sext i32 %1004 to i64
  %1006 = add i64 %1000, 11
  %1007 = add i64 %1006, %1005
  %1008 = inttoptr i64 %1007 to i16*
  store i16 %1003, i16* %1008, align 2
  %1009 = load i32, i32* %261, align 4
  %1010 = load i32, i32* %270, align 8
  %1011 = icmp eq i32 %1009, %1010
  br i1 %1011, label %1012, label %1013

1012:                                             ; preds = %995
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %1013

1013:                                             ; preds = %1012, %995
  %1014 = load i8, i8* %998, align 1
  %1015 = icmp eq i8 %1014, 0
  br i1 %1015, label %1016, label %995

1016:                                             ; preds = %1013, %992, %975, %974
  %1017 = icmp eq i8* %969, null
  br i1 %1017, label %1069, label %1018

1018:                                             ; preds = %1016
  call void @_ZdaPv(i8* nonnull %969) #13
  br label %1069

1019:                                             ; preds = %646, %646, %638
  %1020 = zext i16 %644 to i64
  %1021 = shl nuw nsw i64 %1020, 3
  %1022 = getelementptr inbounds [2049 x i8], [2049 x i8]* @.str, i64 0, i64 %1021
  %1023 = load i32, i32* %19, align 8
  %1024 = icmp eq i32 %1023, 0
  %1025 = load i8, i8* %1022, align 1
  %1026 = icmp eq i8 %1025, 0
  br i1 %1024, label %1028, label %1027

1027:                                             ; preds = %1019
  br i1 %1026, label %1069, label %1048

1028:                                             ; preds = %1019
  br i1 %1026, label %1069, label %1029

1029:                                             ; preds = %1028, %1045
  %1030 = phi i8 [ %1046, %1045 ], [ %1025, %1028 ]
  %1031 = phi i8* [ %1032, %1045 ], [ %1022, %1028 ]
  %1032 = getelementptr inbounds i8, i8* %1031, i64 1
  %1033 = load i64*, i64** %258, align 8
  %1034 = load i64, i64* %1033, align 8
  %1035 = load i32, i32* %261, align 4
  %1036 = add nsw i32 %1035, 1
  store i32 %1036, i32* %261, align 4
  %1037 = sext i32 %1035 to i64
  %1038 = add i64 %1034, 11
  %1039 = add i64 %1038, %1037
  %1040 = inttoptr i64 %1039 to i8*
  store i8 %1030, i8* %1040, align 1
  %1041 = load i32, i32* %261, align 4
  %1042 = load i32, i32* %270, align 8
  %1043 = icmp eq i32 %1041, %1042
  br i1 %1043, label %1044, label %1045

1044:                                             ; preds = %1029
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %1045

1045:                                             ; preds = %1044, %1029
  %1046 = load i8, i8* %1032, align 1
  %1047 = icmp eq i8 %1046, 0
  br i1 %1047, label %1069, label %1029

1048:                                             ; preds = %1027, %1066
  %1049 = phi i8 [ %1067, %1066 ], [ %1025, %1027 ]
  %1050 = phi i8* [ %1051, %1066 ], [ %1022, %1027 ]
  %1051 = getelementptr inbounds i8, i8* %1050, i64 1
  %1052 = load i64*, i64** %258, align 8
  %1053 = load i64, i64* %1052, align 8
  %1054 = load i32, i32* %261, align 4
  %1055 = add nsw i32 %1054, 1
  store i32 %1055, i32* %261, align 4
  %1056 = zext i8 %1049 to i16
  %1057 = shl nsw i32 %1054, 1
  %1058 = sext i32 %1057 to i64
  %1059 = add i64 %1053, 11
  %1060 = add i64 %1059, %1058
  %1061 = inttoptr i64 %1060 to i16*
  store i16 %1056, i16* %1061, align 2
  %1062 = load i32, i32* %261, align 4
  %1063 = load i32, i32* %270, align 8
  %1064 = icmp eq i32 %1062, %1063
  br i1 %1064, label %1065, label %1066

1065:                                             ; preds = %1048
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %1066

1066:                                             ; preds = %1065, %1048
  %1067 = load i8, i8* %1051, align 1
  %1068 = icmp eq i8 %1067, 0
  br i1 %1068, label %1069, label %1048

1069:                                             ; preds = %1066, %1045, %1028, %1027, %1018, %1016, %913, %911, %808, %806, %703, %690, %663, %650
  %1070 = phi i32 [ %640, %650 ], [ %640, %663 ], [ %667, %690 ], [ %667, %703 ], [ %640, %806 ], [ %640, %808 ], [ %640, %911 ], [ %640, %913 ], [ %640, %1016 ], [ %640, %1018 ], [ %640, %1027 ], [ %640, %1028 ], [ %640, %1045 ], [ %640, %1066 ]
  %1071 = add nsw i32 %1070, 1
  %1072 = load i32, i32* %622, align 4
  %1073 = icmp slt i32 %1071, %1072
  br i1 %1073, label %638, label %628

1074:                                             ; preds = %628, %612
  %1075 = phi i32 [ %637, %628 ], [ %618, %612 ]
  %1076 = load i64*, i64** %258, align 8
  %1077 = load i64, i64* %1076, align 8
  %1078 = add nsw i32 %1075, 1
  store i32 %1078, i32* %261, align 4
  %1079 = shl nsw i32 %1075, 1
  %1080 = sext i32 %1079 to i64
  %1081 = add i64 %1077, 11
  %1082 = add i64 %1081, %1080
  %1083 = inttoptr i64 %1082 to i16*
  store i16 34, i16* %1083, align 2
  %1084 = load i32, i32* %261, align 4
  %1085 = load i32, i32* %270, align 8
  %1086 = icmp eq i32 %1084, %1085
  br i1 %1086, label %1087, label %1094

1087:                                             ; preds = %1074
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %1094

1088:                                             ; preds = %954
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %967

1089:                                             ; preds = %940
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %967

1090:                                             ; preds = %849
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %862

1091:                                             ; preds = %835
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %862

1092:                                             ; preds = %744
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %757

1093:                                             ; preds = %730
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %18) #7
  br label %757

1094:                                             ; preds = %1087, %1074, %463, %450, %245, %233, %246
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal15JsonStringifier12SerializeSmiENS0_3SmiE(%"class.v8::internal::JsonStringifier"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca [100 x i8], align 16
  %4 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %6 = trunc i64 %1 to i32
  %7 = ashr i32 %6, 1
  %8 = call i8* @_ZN2v88internal12IntToCStringEiNS0_6VectorIcEE(i32 %7, i8* nonnull %4, i64 100) #7
  %9 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = load i8, i8* %8, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %11, label %19, label %14

14:                                               ; preds = %2
  br i1 %13, label %64, label %15

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %18 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %43

19:                                               ; preds = %2
  br i1 %13, label %64, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %23 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %24

24:                                               ; preds = %40, %20
  %25 = phi i8 [ %12, %20 ], [ %41, %40 ]
  %26 = phi i8* [ %8, %20 ], [ %27, %40 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  %28 = load i64*, i64** %21, align 8
  %29 = load i64, i64* %28, align 8
  %30 = load i32, i32* %22, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %22, align 4
  %32 = sext i32 %30 to i64
  %33 = add i64 %29, 11
  %34 = add i64 %33, %32
  %35 = inttoptr i64 %34 to i8*
  store i8 %25, i8* %35, align 1
  %36 = load i32, i32* %22, align 4
  %37 = load i32, i32* %23, align 8
  %38 = icmp eq i32 %36, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %24
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %5) #7
  br label %40

40:                                               ; preds = %39, %24
  %41 = load i8, i8* %27, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %64, label %24

43:                                               ; preds = %61, %15
  %44 = phi i8 [ %12, %15 ], [ %62, %61 ]
  %45 = phi i8* [ %8, %15 ], [ %46, %61 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 1
  %47 = load i64*, i64** %16, align 8
  %48 = load i64, i64* %47, align 8
  %49 = load i32, i32* %17, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %17, align 4
  %51 = zext i8 %44 to i16
  %52 = shl nsw i32 %49, 1
  %53 = sext i32 %52 to i64
  %54 = add i64 %48, 11
  %55 = add i64 %54, %53
  %56 = inttoptr i64 %55 to i16*
  store i16 %51, i16* %56, align 2
  %57 = load i32, i32* %17, align 4
  %58 = load i32, i32* %18, align 8
  %59 = icmp eq i32 %57, %58
  br i1 %59, label %60, label %61

60:                                               ; preds = %43
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %5) #7
  br label %61

61:                                               ; preds = %60, %43
  %62 = load i8, i8* %46, align 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %43

64:                                               ; preds = %61, %40, %14, %19
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %4) #7
  ret i32 1
}

declare i8* @_ZN2v88internal12IntToCStringEiNS0_6VectorIcEE(i32, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal15JsonStringifier15SerializeDoubleEd(%"class.v8::internal::JsonStringifier"*, double) local_unnamed_addr #0 align 2 {
  %3 = alloca [100 x i8], align 16
  %4 = tail call double @llvm.fabs.f64(double %1) #15
  %5 = fcmp oeq double %4, 0x7FF0000000000000
  %6 = fcmp uno double %1, 0.000000e+00
  %7 = or i1 %6, %5
  br i1 %7, label %8, label %66

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %15 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %16 = load i64*, i64** %13, align 8
  %17 = load i64, i64* %16, align 8
  %18 = load i32, i32* %14, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %14, align 4
  br i1 %12, label %29, label %20

20:                                               ; preds = %8
  %21 = shl nsw i32 %18, 1
  %22 = sext i32 %21 to i64
  %23 = add i64 %17, 11
  %24 = add i64 %23, %22
  %25 = inttoptr i64 %24 to i16*
  store i16 110, i16* %25, align 2
  %26 = load i32, i32* %14, align 4
  %27 = load i32, i32* %15, align 8
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %51, label %53

29:                                               ; preds = %8
  %30 = sext i32 %18 to i64
  %31 = add i64 %17, 11
  %32 = add i64 %31, %30
  %33 = inttoptr i64 %32 to i8*
  store i8 110, i8* %33, align 1
  %34 = load i32, i32* %14, align 4
  %35 = load i32, i32* %15, align 8
  %36 = icmp eq i32 %34, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %29
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %9) #7
  %38 = load i32, i32* %14, align 4
  br label %39

39:                                               ; preds = %37, %29
  %40 = phi i32 [ %38, %37 ], [ %34, %29 ]
  %41 = load i64*, i64** %13, align 8
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i32 %40, 1
  store i32 %43, i32* %14, align 4
  %44 = sext i32 %40 to i64
  %45 = add i64 %42, 11
  %46 = add i64 %45, %44
  %47 = inttoptr i64 %46 to i8*
  store i8 117, i8* %47, align 1
  %48 = load i32, i32* %14, align 4
  %49 = load i32, i32* %15, align 8
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %127, label %129

51:                                               ; preds = %20
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %9) #7
  %52 = load i32, i32* %14, align 4
  br label %53

53:                                               ; preds = %51, %20
  %54 = phi i32 [ %52, %51 ], [ %26, %20 ]
  %55 = load i64*, i64** %13, align 8
  %56 = load i64, i64* %55, align 8
  %57 = add nsw i32 %54, 1
  store i32 %57, i32* %14, align 4
  %58 = shl nsw i32 %54, 1
  %59 = sext i32 %58 to i64
  %60 = add i64 %56, 11
  %61 = add i64 %60, %59
  %62 = inttoptr i64 %61 to i16*
  store i16 117, i16* %62, align 2
  %63 = load i32, i32* %14, align 4
  %64 = load i32, i32* %15, align 8
  %65 = icmp eq i32 %63, %64
  br i1 %65, label %156, label %158

66:                                               ; preds = %2
  %67 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %67) #7
  %68 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %69 = call i8* @_ZN2v88internal15DoubleToCStringEdNS0_6VectorIcEE(double %1, i8* nonnull %67, i64 100) #7
  %70 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  %73 = load i8, i8* %69, align 1
  %74 = icmp eq i8 %73, 0
  br i1 %72, label %80, label %75

75:                                               ; preds = %66
  br i1 %74, label %125, label %76

76:                                               ; preds = %75
  %77 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %78 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %79 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %104

80:                                               ; preds = %66
  br i1 %74, label %125, label %81

81:                                               ; preds = %80
  %82 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %83 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %84 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %85

85:                                               ; preds = %101, %81
  %86 = phi i8 [ %73, %81 ], [ %102, %101 ]
  %87 = phi i8* [ %69, %81 ], [ %88, %101 ]
  %88 = getelementptr inbounds i8, i8* %87, i64 1
  %89 = load i64*, i64** %82, align 8
  %90 = load i64, i64* %89, align 8
  %91 = load i32, i32* %83, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %83, align 4
  %93 = sext i32 %91 to i64
  %94 = add i64 %90, 11
  %95 = add i64 %94, %93
  %96 = inttoptr i64 %95 to i8*
  store i8 %86, i8* %96, align 1
  %97 = load i32, i32* %83, align 4
  %98 = load i32, i32* %84, align 8
  %99 = icmp eq i32 %97, %98
  br i1 %99, label %100, label %101

100:                                              ; preds = %85
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %68) #7
  br label %101

101:                                              ; preds = %100, %85
  %102 = load i8, i8* %88, align 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %125, label %85

104:                                              ; preds = %122, %76
  %105 = phi i8 [ %73, %76 ], [ %123, %122 ]
  %106 = phi i8* [ %69, %76 ], [ %107, %122 ]
  %107 = getelementptr inbounds i8, i8* %106, i64 1
  %108 = load i64*, i64** %77, align 8
  %109 = load i64, i64* %108, align 8
  %110 = load i32, i32* %78, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %78, align 4
  %112 = zext i8 %105 to i16
  %113 = shl nsw i32 %110, 1
  %114 = sext i32 %113 to i64
  %115 = add i64 %109, 11
  %116 = add i64 %115, %114
  %117 = inttoptr i64 %116 to i16*
  store i16 %112, i16* %117, align 2
  %118 = load i32, i32* %78, align 4
  %119 = load i32, i32* %79, align 8
  %120 = icmp eq i32 %118, %119
  br i1 %120, label %121, label %122

121:                                              ; preds = %104
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %68) #7
  br label %122

122:                                              ; preds = %121, %104
  %123 = load i8, i8* %107, align 1
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %104

125:                                              ; preds = %122, %101, %75, %80
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %67) #7
  br label %126

126:                                              ; preds = %173, %186, %143, %155, %125
  ret i32 1

127:                                              ; preds = %39
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %9) #7
  %128 = load i32, i32* %14, align 4
  br label %129

129:                                              ; preds = %127, %39
  %130 = phi i32 [ %128, %127 ], [ %48, %39 ]
  %131 = load i64*, i64** %13, align 8
  %132 = load i64, i64* %131, align 8
  %133 = add nsw i32 %130, 1
  store i32 %133, i32* %14, align 4
  %134 = sext i32 %130 to i64
  %135 = add i64 %132, 11
  %136 = add i64 %135, %134
  %137 = inttoptr i64 %136 to i8*
  store i8 108, i8* %137, align 1
  %138 = load i32, i32* %14, align 4
  %139 = load i32, i32* %15, align 8
  %140 = icmp eq i32 %138, %139
  br i1 %140, label %141, label %143

141:                                              ; preds = %129
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %9) #7
  %142 = load i32, i32* %14, align 4
  br label %143

143:                                              ; preds = %141, %129
  %144 = phi i32 [ %142, %141 ], [ %138, %129 ]
  %145 = load i64*, i64** %13, align 8
  %146 = load i64, i64* %145, align 8
  %147 = add nsw i32 %144, 1
  store i32 %147, i32* %14, align 4
  %148 = sext i32 %144 to i64
  %149 = add i64 %146, 11
  %150 = add i64 %149, %148
  %151 = inttoptr i64 %150 to i8*
  store i8 108, i8* %151, align 1
  %152 = load i32, i32* %14, align 4
  %153 = load i32, i32* %15, align 8
  %154 = icmp eq i32 %152, %153
  br i1 %154, label %155, label %126

155:                                              ; preds = %143
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %9) #7
  br label %126

156:                                              ; preds = %53
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %9) #7
  %157 = load i32, i32* %14, align 4
  br label %158

158:                                              ; preds = %156, %53
  %159 = phi i32 [ %157, %156 ], [ %63, %53 ]
  %160 = load i64*, i64** %13, align 8
  %161 = load i64, i64* %160, align 8
  %162 = add nsw i32 %159, 1
  store i32 %162, i32* %14, align 4
  %163 = shl nsw i32 %159, 1
  %164 = sext i32 %163 to i64
  %165 = add i64 %161, 11
  %166 = add i64 %165, %164
  %167 = inttoptr i64 %166 to i16*
  store i16 108, i16* %167, align 2
  %168 = load i32, i32* %14, align 4
  %169 = load i32, i32* %15, align 8
  %170 = icmp eq i32 %168, %169
  br i1 %170, label %171, label %173

171:                                              ; preds = %158
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %9) #7
  %172 = load i32, i32* %14, align 4
  br label %173

173:                                              ; preds = %171, %158
  %174 = phi i32 [ %172, %171 ], [ %168, %158 ]
  %175 = load i64*, i64** %13, align 8
  %176 = load i64, i64* %175, align 8
  %177 = add nsw i32 %174, 1
  store i32 %177, i32* %14, align 4
  %178 = shl nsw i32 %174, 1
  %179 = sext i32 %178 to i64
  %180 = add i64 %176, 11
  %181 = add i64 %180, %179
  %182 = inttoptr i64 %181 to i16*
  store i16 108, i16* %182, align 2
  %183 = load i32, i32* %14, align 4
  %184 = load i32, i32* %15, align 8
  %185 = icmp eq i32 %183, %184
  br i1 %185, label %186, label %126

186:                                              ; preds = %173
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %9) #7
  br label %126
}

declare i8* @_ZN2v88internal15DoubleToCStringEdNS0_6VectorIcEE(double, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal15JsonStringifier22SerializeArrayLikeSlowENS0_6HandleINS0_10JSReceiverEEEjj(%"class.v8::internal::JsonStringifier"*, i64*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = icmp ugt i32 %3, 268435444
  br i1 %6, label %23, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 2
  %10 = icmp ult i32 %2, %3
  br i1 %10, label %11, label %242

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %15 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %16 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %18 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %19 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  %20 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  %22 = bitcast %"class.v8::internal::Isolate"** %21 to %"class.v8::internal::Factory"**
  br label %30

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %26 = bitcast %"class.v8::internal::Isolate"* %25 to %"class.v8::internal::Factory"*
  %27 = tail call i64* @_ZN2v88internal7Factory27NewInvalidStringLengthErrorEv(%"class.v8::internal::Factory"* %26) #7
  %28 = load i64, i64* %27, align 8
  %29 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %25, i64 %28, %"class.v8::internal::MessageLocation"* null) #7
  ret i32 2

30:                                               ; preds = %239, %11
  %31 = phi i32 [ %2, %11 ], [ %240, %239 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %59, label %33

33:                                               ; preds = %30
  %34 = load i32, i32* %12, align 8
  %35 = icmp eq i32 %34, 0
  %36 = load i64*, i64** %13, align 8
  %37 = load i64, i64* %36, align 8
  %38 = load i32, i32* %14, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %14, align 4
  br i1 %35, label %40, label %49

40:                                               ; preds = %33
  %41 = sext i32 %38 to i64
  %42 = add i64 %37, 11
  %43 = add i64 %42, %41
  %44 = inttoptr i64 %43 to i8*
  store i8 44, i8* %44, align 1
  %45 = load i32, i32* %14, align 4
  %46 = load i32, i32* %15, align 8
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %59

48:                                               ; preds = %40
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  br label %59

49:                                               ; preds = %33
  %50 = shl nsw i32 %38, 1
  %51 = sext i32 %50 to i64
  %52 = add i64 %37, 11
  %53 = add i64 %52, %51
  %54 = inttoptr i64 %53 to i16*
  store i16 44, i16* %54, align 2
  %55 = load i32, i32* %14, align 4
  %56 = load i32, i32* %15, align 8
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %58, label %59

58:                                               ; preds = %49
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  br label %59

59:                                               ; preds = %58, %49, %48, %40, %30
  %60 = load i16*, i16** %16, align 8
  %61 = icmp eq i16* %60, null
  br i1 %61, label %144, label %62

62:                                               ; preds = %59
  %63 = load i32, i32* %12, align 8
  %64 = icmp eq i32 %63, 0
  %65 = load i64*, i64** %13, align 8
  %66 = load i64, i64* %65, align 8
  %67 = load i32, i32* %14, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %14, align 4
  br i1 %64, label %69, label %78

69:                                               ; preds = %62
  %70 = sext i32 %67 to i64
  %71 = add i64 %66, 11
  %72 = add i64 %71, %70
  %73 = inttoptr i64 %72 to i8*
  store i8 10, i8* %73, align 1
  %74 = load i32, i32* %14, align 4
  %75 = load i32, i32* %15, align 8
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %77, label %88

77:                                               ; preds = %69
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  br label %88

78:                                               ; preds = %62
  %79 = shl nsw i32 %67, 1
  %80 = sext i32 %79 to i64
  %81 = add i64 %66, 11
  %82 = add i64 %81, %80
  %83 = inttoptr i64 %82 to i16*
  store i16 10, i16* %83, align 2
  %84 = load i32, i32* %14, align 4
  %85 = load i32, i32* %15, align 8
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %87, label %88

87:                                               ; preds = %78
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  br label %88

88:                                               ; preds = %87, %78, %77, %69
  %89 = load i32, i32* %17, align 8
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %91, label %144

91:                                               ; preds = %88, %140
  %92 = phi i32 [ %141, %140 ], [ 0, %88 ]
  %93 = load i16*, i16** %16, align 8
  %94 = load i32, i32* %12, align 8
  %95 = icmp eq i32 %94, 0
  %96 = load i16, i16* %93, align 2
  %97 = icmp eq i16 %96, 0
  br i1 %95, label %99, label %98

98:                                               ; preds = %91
  br i1 %97, label %140, label %120

99:                                               ; preds = %91
  br i1 %97, label %140, label %100

100:                                              ; preds = %99, %117
  %101 = phi i16 [ %118, %117 ], [ %96, %99 ]
  %102 = phi i16* [ %103, %117 ], [ %93, %99 ]
  %103 = getelementptr inbounds i16, i16* %102, i64 1
  %104 = load i64*, i64** %13, align 8
  %105 = load i64, i64* %104, align 8
  %106 = load i32, i32* %14, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %14, align 4
  %108 = trunc i16 %101 to i8
  %109 = sext i32 %106 to i64
  %110 = add i64 %105, 11
  %111 = add i64 %110, %109
  %112 = inttoptr i64 %111 to i8*
  store i8 %108, i8* %112, align 1
  %113 = load i32, i32* %14, align 4
  %114 = load i32, i32* %15, align 8
  %115 = icmp eq i32 %113, %114
  br i1 %115, label %116, label %117

116:                                              ; preds = %100
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  br label %117

117:                                              ; preds = %116, %100
  %118 = load i16, i16* %103, align 2
  %119 = icmp eq i16 %118, 0
  br i1 %119, label %140, label %100

120:                                              ; preds = %98, %137
  %121 = phi i16 [ %138, %137 ], [ %96, %98 ]
  %122 = phi i16* [ %123, %137 ], [ %93, %98 ]
  %123 = getelementptr inbounds i16, i16* %122, i64 1
  %124 = load i64*, i64** %13, align 8
  %125 = load i64, i64* %124, align 8
  %126 = load i32, i32* %14, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %14, align 4
  %128 = shl nsw i32 %126, 1
  %129 = sext i32 %128 to i64
  %130 = add i64 %125, 11
  %131 = add i64 %130, %129
  %132 = inttoptr i64 %131 to i16*
  store i16 %121, i16* %132, align 2
  %133 = load i32, i32* %14, align 4
  %134 = load i32, i32* %15, align 8
  %135 = icmp eq i32 %133, %134
  br i1 %135, label %136, label %137

136:                                              ; preds = %120
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  br label %137

137:                                              ; preds = %136, %120
  %138 = load i16, i16* %123, align 2
  %139 = icmp eq i16 %138, 0
  br i1 %139, label %140, label %120

140:                                              ; preds = %137, %117, %99, %98
  %141 = add nuw nsw i32 %92, 1
  %142 = load i32, i32* %17, align 8
  %143 = icmp slt i32 %141, %142
  br i1 %143, label %91, label %144

144:                                              ; preds = %140, %59, %88
  %145 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %19) #7
  %146 = zext i32 %31 to i64
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* %145, i64* %1, i64* null, i64 %146, i64* %1, i32 3) #7
  %147 = load i32, i32* %20, align 4
  %148 = icmp eq i32 %147, 4
  br i1 %148, label %149, label %153

149:                                              ; preds = %144
  %150 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %22, align 8
  %151 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %150, i64 160
  %152 = bitcast %"class.v8::internal::Factory"* %151 to i64*
  br label %155

153:                                              ; preds = %144
  %154 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #7
  br label %155

155:                                              ; preds = %149, %153
  %156 = phi i64* [ %154, %153 ], [ %152, %149 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %19) #7
  %157 = icmp eq i64* %156, null
  br i1 %157, label %242, label %158

158:                                              ; preds = %155
  %159 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %160 = sext i32 %31 to i64
  %161 = shl nsw i64 %160, 1
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %159, i64 0, i32 31, i32 4
  %163 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %162, align 8
  %164 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %163, null
  br i1 %164, label %167, label %165

165:                                              ; preds = %158
  %166 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %163, i64 %161) #7
  br label %180

167:                                              ; preds = %158
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %159, i64 0, i32 31, i32 0
  %169 = load i64*, i64** %168, align 8
  %170 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %159, i64 0, i32 31, i32 1
  %171 = load i64*, i64** %170, align 8
  %172 = icmp eq i64* %169, %171
  br i1 %172, label %173, label %175

173:                                              ; preds = %167
  %174 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %159) #7
  br label %175

175:                                              ; preds = %173, %167
  %176 = phi i64* [ %174, %173 ], [ %169, %167 ]
  %177 = ptrtoint i64* %176 to i64
  %178 = add i64 %177, 8
  %179 = inttoptr i64 %178 to i64*
  store i64* %179, i64** %168, align 8
  store i64 %161, i64* %176, align 8
  br label %180

180:                                              ; preds = %165, %175
  %181 = phi i64* [ %166, %165 ], [ %176, %175 ]
  %182 = call i32 @_ZN2v88internal15JsonStringifier10Serialize_ILb0EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_(%"class.v8::internal::JsonStringifier"* %0, i64* nonnull %156, i1 zeroext false, i64* %181) #7
  switch i32 %182, label %242 [
    i32 1, label %239
    i32 0, label %183
  ]

183:                                              ; preds = %180
  %184 = load i8, i8* %9, align 4, !range !2
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %242

186:                                              ; preds = %183
  %187 = load i32, i32* %12, align 8
  %188 = icmp eq i32 %187, 0
  %189 = load i64*, i64** %13, align 8
  %190 = load i64, i64* %189, align 8
  %191 = load i32, i32* %14, align 4
  %192 = add nsw i32 %191, 1
  store i32 %192, i32* %14, align 4
  br i1 %188, label %202, label %193

193:                                              ; preds = %186
  %194 = shl nsw i32 %191, 1
  %195 = sext i32 %194 to i64
  %196 = add i64 %190, 11
  %197 = add i64 %196, %195
  %198 = inttoptr i64 %197 to i16*
  store i16 110, i16* %198, align 2
  %199 = load i32, i32* %14, align 4
  %200 = load i32, i32* %15, align 8
  %201 = icmp eq i32 %199, %200
  br i1 %201, label %224, label %226

202:                                              ; preds = %186
  %203 = sext i32 %191 to i64
  %204 = add i64 %190, 11
  %205 = add i64 %204, %203
  %206 = inttoptr i64 %205 to i8*
  store i8 110, i8* %206, align 1
  %207 = load i32, i32* %14, align 4
  %208 = load i32, i32* %15, align 8
  %209 = icmp eq i32 %207, %208
  br i1 %209, label %210, label %212

210:                                              ; preds = %202
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  %211 = load i32, i32* %14, align 4
  br label %212

212:                                              ; preds = %210, %202
  %213 = phi i32 [ %211, %210 ], [ %207, %202 ]
  %214 = load i64*, i64** %13, align 8
  %215 = load i64, i64* %214, align 8
  %216 = add nsw i32 %213, 1
  store i32 %216, i32* %14, align 4
  %217 = sext i32 %213 to i64
  %218 = add i64 %215, 11
  %219 = add i64 %218, %217
  %220 = inttoptr i64 %219 to i8*
  store i8 117, i8* %220, align 1
  %221 = load i32, i32* %14, align 4
  %222 = load i32, i32* %15, align 8
  %223 = icmp eq i32 %221, %222
  br i1 %223, label %275, label %277

224:                                              ; preds = %193
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  %225 = load i32, i32* %14, align 4
  br label %226

226:                                              ; preds = %224, %193
  %227 = phi i32 [ %225, %224 ], [ %199, %193 ]
  %228 = load i64*, i64** %13, align 8
  %229 = load i64, i64* %228, align 8
  %230 = add nsw i32 %227, 1
  store i32 %230, i32* %14, align 4
  %231 = shl nsw i32 %227, 1
  %232 = sext i32 %231 to i64
  %233 = add i64 %229, 11
  %234 = add i64 %233, %232
  %235 = inttoptr i64 %234 to i16*
  store i16 117, i16* %235, align 2
  %236 = load i32, i32* %14, align 4
  %237 = load i32, i32* %15, align 8
  %238 = icmp eq i32 %236, %237
  br i1 %238, label %244, label %246

239:                                              ; preds = %291, %303, %261, %274, %180
  %240 = add nuw i32 %31, 1
  %241 = icmp eq i32 %240, %3
  br i1 %241, label %242, label %30

242:                                              ; preds = %155, %180, %183, %239, %7
  %243 = phi i32 [ 1, %7 ], [ 2, %183 ], [ %182, %180 ], [ 1, %239 ], [ 2, %155 ]
  ret i32 %243

244:                                              ; preds = %226
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  %245 = load i32, i32* %14, align 4
  br label %246

246:                                              ; preds = %244, %226
  %247 = phi i32 [ %245, %244 ], [ %236, %226 ]
  %248 = load i64*, i64** %13, align 8
  %249 = load i64, i64* %248, align 8
  %250 = add nsw i32 %247, 1
  store i32 %250, i32* %14, align 4
  %251 = shl nsw i32 %247, 1
  %252 = sext i32 %251 to i64
  %253 = add i64 %249, 11
  %254 = add i64 %253, %252
  %255 = inttoptr i64 %254 to i16*
  store i16 108, i16* %255, align 2
  %256 = load i32, i32* %14, align 4
  %257 = load i32, i32* %15, align 8
  %258 = icmp eq i32 %256, %257
  br i1 %258, label %259, label %261

259:                                              ; preds = %246
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  %260 = load i32, i32* %14, align 4
  br label %261

261:                                              ; preds = %259, %246
  %262 = phi i32 [ %260, %259 ], [ %256, %246 ]
  %263 = load i64*, i64** %13, align 8
  %264 = load i64, i64* %263, align 8
  %265 = add nsw i32 %262, 1
  store i32 %265, i32* %14, align 4
  %266 = shl nsw i32 %262, 1
  %267 = sext i32 %266 to i64
  %268 = add i64 %264, 11
  %269 = add i64 %268, %267
  %270 = inttoptr i64 %269 to i16*
  store i16 108, i16* %270, align 2
  %271 = load i32, i32* %14, align 4
  %272 = load i32, i32* %15, align 8
  %273 = icmp eq i32 %271, %272
  br i1 %273, label %274, label %239

274:                                              ; preds = %261
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  br label %239

275:                                              ; preds = %212
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  %276 = load i32, i32* %14, align 4
  br label %277

277:                                              ; preds = %275, %212
  %278 = phi i32 [ %276, %275 ], [ %221, %212 ]
  %279 = load i64*, i64** %13, align 8
  %280 = load i64, i64* %279, align 8
  %281 = add nsw i32 %278, 1
  store i32 %281, i32* %14, align 4
  %282 = sext i32 %278 to i64
  %283 = add i64 %280, 11
  %284 = add i64 %283, %282
  %285 = inttoptr i64 %284 to i8*
  store i8 108, i8* %285, align 1
  %286 = load i32, i32* %14, align 4
  %287 = load i32, i32* %15, align 8
  %288 = icmp eq i32 %286, %287
  br i1 %288, label %289, label %291

289:                                              ; preds = %277
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  %290 = load i32, i32* %14, align 4
  br label %291

291:                                              ; preds = %289, %277
  %292 = phi i32 [ %290, %289 ], [ %286, %277 ]
  %293 = load i64*, i64** %13, align 8
  %294 = load i64, i64* %293, align 8
  %295 = add nsw i32 %292, 1
  store i32 %295, i32* %14, align 4
  %296 = sext i32 %292 to i64
  %297 = add i64 %294, 11
  %298 = add i64 %297, %296
  %299 = inttoptr i64 %298 to i8*
  store i8 108, i8* %299, align 1
  %300 = load i32, i32* %14, align 4
  %301 = load i32, i32* %15, align 8
  %302 = icmp eq i32 %300, %301
  br i1 %302, label %303, label %239

303:                                              ; preds = %291
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %8) #7
  br label %239
}

declare i64* @_ZN2v88internal7Factory27NewInvalidStringLengthErrorEv(%"class.v8::internal::Factory"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal15JsonStringifier23SerializeJSReceiverSlowENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::JsonStringifier"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 3
  %4 = bitcast %"class.v8::internal::Handle.1130"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = tail call i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64* %1, i32 0, i32 18, i32 0, i1 zeroext false, i1 zeroext false) #7
  %9 = icmp eq i64* %8, null
  br i1 %9, label %237, label %10

10:                                               ; preds = %7
  %11 = ptrtoint i64* %8 to i64
  br label %12

12:                                               ; preds = %10, %2
  %13 = phi i64 [ %5, %2 ], [ %11, %10 ]
  %14 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %21, align 4
  br i1 %17, label %24, label %34

24:                                               ; preds = %12
  %25 = sext i32 %22 to i64
  %26 = add i64 %20, 11
  %27 = add i64 %26, %25
  %28 = inttoptr i64 %27 to i8*
  store i8 123, i8* %28, align 1
  %29 = load i32, i32* %21, align 4
  %30 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %33, label %45

33:                                               ; preds = %24
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %14) #7
  br label %45

34:                                               ; preds = %12
  %35 = shl nsw i32 %22, 1
  %36 = sext i32 %35 to i64
  %37 = add i64 %20, 11
  %38 = add i64 %37, %36
  %39 = inttoptr i64 %38 to i16*
  store i16 123, i16* %39, align 2
  %40 = load i32, i32* %21, align 4
  %41 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %45

44:                                               ; preds = %34
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %14) #7
  br label %45

45:                                               ; preds = %24, %33, %34, %44
  %46 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %47 = load i32, i32* %46, align 8
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %46, align 8
  %49 = inttoptr i64 %13 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 3
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %56, label %55

55:                                               ; preds = %45
  store i32 %47, i32* %46, align 8
  br label %209

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  br label %58

58:                                               ; preds = %56, %101
  %59 = phi i64 [ 0, %56 ], [ %106, %101 ]
  %60 = phi i64 [ %50, %56 ], [ %107, %101 ]
  %61 = phi i8 [ 0, %56 ], [ %105, %101 ]
  %62 = and i64 %60, -4294967296
  %63 = trunc i64 %59 to i32
  %64 = shl i32 %63, 2
  %65 = sext i32 %64 to i64
  %66 = add nsw i64 %65, 7
  %67 = add i64 %66, %60
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %62, %70
  %72 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %57, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %72, i64 0, i32 31, i32 4
  %74 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %73, align 8
  %75 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %58
  %77 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %74, i64 %71) #7
  br label %91

78:                                               ; preds = %58
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %72, i64 0, i32 31, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %72, i64 0, i32 31, i32 1
  %82 = load i64*, i64** %81, align 8
  %83 = icmp eq i64* %80, %82
  br i1 %83, label %84, label %86

84:                                               ; preds = %78
  %85 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %72) #7
  br label %86

86:                                               ; preds = %84, %78
  %87 = phi i64* [ %85, %84 ], [ %80, %78 ]
  %88 = ptrtoint i64* %87 to i64
  %89 = add i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  store i64* %90, i64** %79, align 8
  store i64 %71, i64* %87, align 8
  br label %91

91:                                               ; preds = %76, %86
  %92 = phi i64* [ %77, %76 ], [ %87, %86 ]
  %93 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %57, align 8
  %94 = tail call i64* @_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %93, i64* %1, i64* %92)
  %95 = icmp eq i64* %94, null
  br i1 %95, label %237, label %96

96:                                               ; preds = %91
  %97 = and i8 %61, 1
  %98 = icmp ne i8 %97, 0
  %99 = tail call i32 @_ZN2v88internal15JsonStringifier10Serialize_ILb1EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_(%"class.v8::internal::JsonStringifier"* %0, i64* nonnull %94, i1 zeroext %98, i64* %92) #7
  %100 = icmp eq i32 %99, 2
  br i1 %100, label %237, label %101

101:                                              ; preds = %96
  %102 = icmp eq i32 %99, 1
  %103 = xor i1 %98, true
  %104 = and i1 %102, %103
  %105 = select i1 %104, i8 1, i8 %61
  %106 = add nuw nsw i64 %59, 1
  %107 = load i64, i64* %49, align 8
  %108 = add i64 %107, 3
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = ashr i32 %110, 1
  %112 = sext i32 %111 to i64
  %113 = icmp slt i64 %106, %112
  br i1 %113, label %58, label %114

114:                                              ; preds = %101
  %115 = load i32, i32* %46, align 8
  %116 = and i8 %105, 1
  %117 = icmp eq i8 %116, 0
  %118 = add nsw i32 %115, -1
  store i32 %118, i32* %46, align 8
  br i1 %117, label %209, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %121 = load i16*, i16** %120, align 8
  %122 = icmp eq i16* %121, null
  br i1 %122, label %209, label %123

123:                                              ; preds = %119
  %124 = load i32, i32* %15, align 8
  %125 = icmp eq i32 %124, 0
  %126 = load i64*, i64** %18, align 8
  %127 = load i64, i64* %126, align 8
  %128 = load i32, i32* %21, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %21, align 4
  br i1 %125, label %130, label %140

130:                                              ; preds = %123
  %131 = sext i32 %128 to i64
  %132 = add i64 %127, 11
  %133 = add i64 %132, %131
  %134 = inttoptr i64 %133 to i8*
  store i8 10, i8* %134, align 1
  %135 = load i32, i32* %21, align 4
  %136 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %135, %137
  br i1 %138, label %139, label %151

139:                                              ; preds = %130
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %14) #7
  br label %151

140:                                              ; preds = %123
  %141 = shl nsw i32 %128, 1
  %142 = sext i32 %141 to i64
  %143 = add i64 %127, 11
  %144 = add i64 %143, %142
  %145 = inttoptr i64 %144 to i16*
  store i16 10, i16* %145, align 2
  %146 = load i32, i32* %21, align 4
  %147 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %148 = load i32, i32* %147, align 8
  %149 = icmp eq i32 %146, %148
  br i1 %149, label %150, label %151

150:                                              ; preds = %140
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %14) #7
  br label %151

151:                                              ; preds = %150, %140, %139, %130
  %152 = load i32, i32* %46, align 8
  %153 = icmp sgt i32 %152, 0
  br i1 %153, label %154, label %209

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %156

156:                                              ; preds = %205, %154
  %157 = phi i32 [ 0, %154 ], [ %206, %205 ]
  %158 = load i16*, i16** %120, align 8
  %159 = load i32, i32* %15, align 8
  %160 = icmp eq i32 %159, 0
  %161 = load i16, i16* %158, align 2
  %162 = icmp eq i16 %161, 0
  br i1 %160, label %164, label %163

163:                                              ; preds = %156
  br i1 %162, label %205, label %185

164:                                              ; preds = %156
  br i1 %162, label %205, label %165

165:                                              ; preds = %164, %182
  %166 = phi i16 [ %183, %182 ], [ %161, %164 ]
  %167 = phi i16* [ %168, %182 ], [ %158, %164 ]
  %168 = getelementptr inbounds i16, i16* %167, i64 1
  %169 = load i64*, i64** %18, align 8
  %170 = load i64, i64* %169, align 8
  %171 = load i32, i32* %21, align 4
  %172 = add nsw i32 %171, 1
  store i32 %172, i32* %21, align 4
  %173 = trunc i16 %166 to i8
  %174 = sext i32 %171 to i64
  %175 = add i64 %170, 11
  %176 = add i64 %175, %174
  %177 = inttoptr i64 %176 to i8*
  store i8 %173, i8* %177, align 1
  %178 = load i32, i32* %21, align 4
  %179 = load i32, i32* %155, align 8
  %180 = icmp eq i32 %178, %179
  br i1 %180, label %181, label %182

181:                                              ; preds = %165
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %14) #7
  br label %182

182:                                              ; preds = %181, %165
  %183 = load i16, i16* %168, align 2
  %184 = icmp eq i16 %183, 0
  br i1 %184, label %205, label %165

185:                                              ; preds = %163, %202
  %186 = phi i16 [ %203, %202 ], [ %161, %163 ]
  %187 = phi i16* [ %188, %202 ], [ %158, %163 ]
  %188 = getelementptr inbounds i16, i16* %187, i64 1
  %189 = load i64*, i64** %18, align 8
  %190 = load i64, i64* %189, align 8
  %191 = load i32, i32* %21, align 4
  %192 = add nsw i32 %191, 1
  store i32 %192, i32* %21, align 4
  %193 = shl nsw i32 %191, 1
  %194 = sext i32 %193 to i64
  %195 = add i64 %190, 11
  %196 = add i64 %195, %194
  %197 = inttoptr i64 %196 to i16*
  store i16 %186, i16* %197, align 2
  %198 = load i32, i32* %21, align 4
  %199 = load i32, i32* %155, align 8
  %200 = icmp eq i32 %198, %199
  br i1 %200, label %201, label %202

201:                                              ; preds = %185
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %14) #7
  br label %202

202:                                              ; preds = %201, %185
  %203 = load i16, i16* %188, align 2
  %204 = icmp eq i16 %203, 0
  br i1 %204, label %205, label %185

205:                                              ; preds = %202, %182, %164, %163
  %206 = add nuw nsw i32 %157, 1
  %207 = load i32, i32* %46, align 8
  %208 = icmp slt i32 %206, %207
  br i1 %208, label %156, label %209

209:                                              ; preds = %205, %55, %151, %119, %114
  %210 = load i32, i32* %15, align 8
  %211 = icmp eq i32 %210, 0
  %212 = load i64*, i64** %18, align 8
  %213 = load i64, i64* %212, align 8
  %214 = load i32, i32* %21, align 4
  %215 = add nsw i32 %214, 1
  store i32 %215, i32* %21, align 4
  br i1 %211, label %216, label %226

216:                                              ; preds = %209
  %217 = sext i32 %214 to i64
  %218 = add i64 %213, 11
  %219 = add i64 %218, %217
  %220 = inttoptr i64 %219 to i8*
  store i8 125, i8* %220, align 1
  %221 = load i32, i32* %21, align 4
  %222 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %223 = load i32, i32* %222, align 8
  %224 = icmp eq i32 %221, %223
  br i1 %224, label %225, label %237

225:                                              ; preds = %216
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %14) #7
  br label %237

226:                                              ; preds = %209
  %227 = shl nsw i32 %214, 1
  %228 = sext i32 %227 to i64
  %229 = add i64 %213, 11
  %230 = add i64 %229, %228
  %231 = inttoptr i64 %230 to i16*
  store i16 125, i16* %231, align 2
  %232 = load i32, i32* %21, align 4
  %233 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %234 = load i32, i32* %233, align 8
  %235 = icmp eq i32 %232, %234
  br i1 %235, label %236, label %237

236:                                              ; preds = %226
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %14) #7
  br label %237

237:                                              ; preds = %96, %91, %236, %226, %225, %216, %7
  %238 = phi i32 [ 2, %7 ], [ 1, %216 ], [ 1, %225 ], [ 1, %226 ], [ 1, %236 ], [ 2, %91 ], [ 2, %96 ]
  ret i32 %238
}

declare i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64*, i32, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = bitcast %"class.v8::internal::LookupIterator::Key"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = ptrtoint i64* %2 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %5, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %9, align 8
  %10 = load i64, i64* %2, align 8
  %11 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %5, i64 0, i32 1
  %12 = and i64 %10, -4294967296
  %13 = add i64 %10, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp ult i16 %20, 64
  %22 = bitcast %"class.v8::internal::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7
  br i1 %21, label %23, label %37

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %24, align 8
  %25 = add i64 %10, 3
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, -536870910
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %23
  %31 = lshr i32 %27, 2
  %32 = and i32 %31, 16777215
  %33 = zext i32 %32 to i64
  store i64 %33, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7
  br label %45

34:                                               ; preds = %23
  %35 = and i32 %27, 3
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %37, label %38

37:                                               ; preds = %34, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7
  br label %47

38:                                               ; preds = %34
  %39 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %4, i64* %11) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7
  br i1 %39, label %45, label %40

40:                                               ; preds = %38
  %41 = load i64, i64* %2, align 8
  %42 = and i64 %41, -4294967296
  %43 = add i64 %41, -1
  %44 = inttoptr i64 %43 to i32*
  br label %47

45:                                               ; preds = %38, %30
  %46 = bitcast %"class.v8::internal::LookupIterator::Key"* %5 to i64*
  store i64 %8, i64* %46, align 8
  br label %64

47:                                               ; preds = %40, %37
  %48 = phi i32* [ %44, %40 ], [ %14, %37 ]
  %49 = phi i64 [ %42, %40 ], [ %12, %37 ]
  store i64 -1, i64* %11, align 8
  %50 = load atomic i32, i32* %48 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %49, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = and i16 %55, -32
  %57 = icmp eq i16 %56, 32
  br i1 %57, label %58, label %62

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %59, align 8
  %61 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %60, %"class.v8::internal::Isolate"* %0, i64* %2) #7
  br label %62

62:                                               ; preds = %58, %47
  %63 = phi i64* [ %61, %58 ], [ %2, %47 ]
  store i64* %63, i64** %9, align 8
  br label %64

64:                                               ; preds = %45, %62
  %65 = phi i64* [ %2, %45 ], [ %63, %62 ]
  %66 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %66) #7
  %67 = load i64, i64* %11, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* %0, i64* %1, i64* %65, i64 %67, i64* %1, i32 3) #7
  %68 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %66) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  ret i64* %68
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal15JsonStringifier16SerializeJSProxyENS0_6HandleINS0_7JSProxyEEENS2_INS0_6ObjectEEE(%"class.v8::internal::JsonStringifier"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31
  %7 = bitcast %"struct.v8::internal::HandleScopeData"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 1
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  %14 = tail call i32 @_ZN2v88internal15JsonStringifier9StackPushENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::JsonStringifier"* %0, i64* %1, i64* %2)
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %255

16:                                               ; preds = %3
  %17 = load i64, i64* %1, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %248, label %20

20:                                               ; preds = %16
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 1085
  br i1 %30, label %45, label %31

31:                                               ; preds = %20
  %32 = load atomic i32, i32* %23 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %21, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp eq i16 %37, 188
  br i1 %38, label %39, label %248

39:                                               ; preds = %31
  %40 = tail call i16 @_ZN2v88internal7JSProxy7IsArrayENS0_6HandleIS1_EE(i64* %1) #7
  %41 = trunc i16 %40 to i8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %255, label %43

43:                                               ; preds = %39
  %44 = icmp ult i16 %40, 256
  br i1 %44, label %248, label %45

45:                                               ; preds = %20, %43
  %46 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %47 = tail call i64* @_ZN2v88internal6Object22GetLengthFromArrayLikeEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %46, i64* %1) #7
  %48 = icmp eq i64* %47, null
  br i1 %48, label %255, label %49

49:                                               ; preds = %45
  %50 = load i64, i64* %47, align 8
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = trunc i64 %50 to i32
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %81, label %56

56:                                               ; preds = %53
  %57 = lshr i32 %54, 1
  br label %87

58:                                               ; preds = %49
  %59 = and i64 %50, -4294967296
  %60 = add i64 %50, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %59, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = icmp eq i16 %67, 66
  br i1 %68, label %69, label %81

69:                                               ; preds = %58
  %70 = add i64 %50, 3
  %71 = inttoptr i64 %70 to double*
  %72 = load double, double* %71, align 1
  %73 = fadd double %72, 0x4330000000000000
  %74 = bitcast double %73 to i64
  %75 = and i64 %74, -4294967296
  %76 = icmp eq i64 %75, 4841369599423283200
  br i1 %76, label %77, label %81

77:                                               ; preds = %69
  %78 = trunc i64 %74 to i32
  %79 = uitofp i32 %78 to double
  %80 = fcmp oeq double %72, %79
  br i1 %80, label %87, label %81

81:                                               ; preds = %69, %58, %53, %77
  %82 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %83 = bitcast %"class.v8::internal::Isolate"* %82 to %"class.v8::internal::Factory"*
  %84 = tail call i64* @_ZN2v88internal7Factory27NewInvalidStringLengthErrorEv(%"class.v8::internal::Factory"* %83) #7
  %85 = load i64, i64* %84, align 8
  %86 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %82, i64 %85, %"class.v8::internal::MessageLocation"* null) #7
  br label %255

87:                                               ; preds = %56, %77
  %88 = phi i32 [ %57, %56 ], [ %78, %77 ]
  %89 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %90 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %97 = load i32, i32* %96, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %96, align 4
  br i1 %92, label %99, label %109

99:                                               ; preds = %87
  %100 = sext i32 %97 to i64
  %101 = add i64 %95, 11
  %102 = add i64 %101, %100
  %103 = inttoptr i64 %102 to i8*
  store i8 91, i8* %103, align 1
  %104 = load i32, i32* %96, align 4
  %105 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %104, %106
  br i1 %107, label %108, label %120

108:                                              ; preds = %99
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %89) #7
  br label %120

109:                                              ; preds = %87
  %110 = shl nsw i32 %97, 1
  %111 = sext i32 %110 to i64
  %112 = add i64 %95, 11
  %113 = add i64 %112, %111
  %114 = inttoptr i64 %113 to i16*
  store i16 91, i16* %114, align 2
  %115 = load i32, i32* %96, align 4
  %116 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %115, %117
  br i1 %118, label %119, label %120

119:                                              ; preds = %109
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %89) #7
  br label %120

120:                                              ; preds = %99, %108, %109, %119
  %121 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %122 = load i32, i32* %121, align 8
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %121, align 8
  %124 = tail call i32 @_ZN2v88internal15JsonStringifier22SerializeArrayLikeSlowENS0_6HandleINS0_10JSReceiverEEEjj(%"class.v8::internal::JsonStringifier"* %0, i64* %1, i32 0, i32 %88)
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %255

126:                                              ; preds = %120
  %127 = load i32, i32* %121, align 8
  %128 = add nsw i32 %127, -1
  store i32 %128, i32* %121, align 8
  %129 = icmp eq i32 %88, 0
  br i1 %129, label %220, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %132 = load i16*, i16** %131, align 8
  %133 = icmp eq i16* %132, null
  br i1 %133, label %220, label %134

134:                                              ; preds = %130
  %135 = load i32, i32* %90, align 8
  %136 = icmp eq i32 %135, 0
  %137 = load i64*, i64** %93, align 8
  %138 = load i64, i64* %137, align 8
  %139 = load i32, i32* %96, align 4
  %140 = add nsw i32 %139, 1
  store i32 %140, i32* %96, align 4
  br i1 %136, label %141, label %151

141:                                              ; preds = %134
  %142 = sext i32 %139 to i64
  %143 = add i64 %138, 11
  %144 = add i64 %143, %142
  %145 = inttoptr i64 %144 to i8*
  store i8 10, i8* %145, align 1
  %146 = load i32, i32* %96, align 4
  %147 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %148 = load i32, i32* %147, align 8
  %149 = icmp eq i32 %146, %148
  br i1 %149, label %150, label %162

150:                                              ; preds = %141
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %89) #7
  br label %162

151:                                              ; preds = %134
  %152 = shl nsw i32 %139, 1
  %153 = sext i32 %152 to i64
  %154 = add i64 %138, 11
  %155 = add i64 %154, %153
  %156 = inttoptr i64 %155 to i16*
  store i16 10, i16* %156, align 2
  %157 = load i32, i32* %96, align 4
  %158 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %159 = load i32, i32* %158, align 8
  %160 = icmp eq i32 %157, %159
  br i1 %160, label %161, label %162

161:                                              ; preds = %151
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %89) #7
  br label %162

162:                                              ; preds = %161, %151, %150, %141
  %163 = load i32, i32* %121, align 8
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %220

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %167

167:                                              ; preds = %216, %165
  %168 = phi i32 [ 0, %165 ], [ %217, %216 ]
  %169 = load i16*, i16** %131, align 8
  %170 = load i32, i32* %90, align 8
  %171 = icmp eq i32 %170, 0
  %172 = load i16, i16* %169, align 2
  %173 = icmp eq i16 %172, 0
  br i1 %171, label %175, label %174

174:                                              ; preds = %167
  br i1 %173, label %216, label %196

175:                                              ; preds = %167
  br i1 %173, label %216, label %176

176:                                              ; preds = %175, %193
  %177 = phi i16 [ %194, %193 ], [ %172, %175 ]
  %178 = phi i16* [ %179, %193 ], [ %169, %175 ]
  %179 = getelementptr inbounds i16, i16* %178, i64 1
  %180 = load i64*, i64** %93, align 8
  %181 = load i64, i64* %180, align 8
  %182 = load i32, i32* %96, align 4
  %183 = add nsw i32 %182, 1
  store i32 %183, i32* %96, align 4
  %184 = trunc i16 %177 to i8
  %185 = sext i32 %182 to i64
  %186 = add i64 %181, 11
  %187 = add i64 %186, %185
  %188 = inttoptr i64 %187 to i8*
  store i8 %184, i8* %188, align 1
  %189 = load i32, i32* %96, align 4
  %190 = load i32, i32* %166, align 8
  %191 = icmp eq i32 %189, %190
  br i1 %191, label %192, label %193

192:                                              ; preds = %176
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %89) #7
  br label %193

193:                                              ; preds = %192, %176
  %194 = load i16, i16* %179, align 2
  %195 = icmp eq i16 %194, 0
  br i1 %195, label %216, label %176

196:                                              ; preds = %174, %213
  %197 = phi i16 [ %214, %213 ], [ %172, %174 ]
  %198 = phi i16* [ %199, %213 ], [ %169, %174 ]
  %199 = getelementptr inbounds i16, i16* %198, i64 1
  %200 = load i64*, i64** %93, align 8
  %201 = load i64, i64* %200, align 8
  %202 = load i32, i32* %96, align 4
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %96, align 4
  %204 = shl nsw i32 %202, 1
  %205 = sext i32 %204 to i64
  %206 = add i64 %201, 11
  %207 = add i64 %206, %205
  %208 = inttoptr i64 %207 to i16*
  store i16 %197, i16* %208, align 2
  %209 = load i32, i32* %96, align 4
  %210 = load i32, i32* %166, align 8
  %211 = icmp eq i32 %209, %210
  br i1 %211, label %212, label %213

212:                                              ; preds = %196
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %89) #7
  br label %213

213:                                              ; preds = %212, %196
  %214 = load i16, i16* %199, align 2
  %215 = icmp eq i16 %214, 0
  br i1 %215, label %216, label %196

216:                                              ; preds = %213, %193, %175, %174
  %217 = add nuw nsw i32 %168, 1
  %218 = load i32, i32* %121, align 8
  %219 = icmp slt i32 %217, %218
  br i1 %219, label %167, label %220

220:                                              ; preds = %216, %162, %130, %126
  %221 = load i32, i32* %90, align 8
  %222 = icmp eq i32 %221, 0
  %223 = load i64*, i64** %93, align 8
  %224 = load i64, i64* %223, align 8
  %225 = load i32, i32* %96, align 4
  %226 = add nsw i32 %225, 1
  store i32 %226, i32* %96, align 4
  br i1 %222, label %227, label %237

227:                                              ; preds = %220
  %228 = sext i32 %225 to i64
  %229 = add i64 %224, 11
  %230 = add i64 %229, %228
  %231 = inttoptr i64 %230 to i8*
  store i8 93, i8* %231, align 1
  %232 = load i32, i32* %96, align 4
  %233 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %234 = load i32, i32* %233, align 8
  %235 = icmp eq i32 %232, %234
  br i1 %235, label %236, label %251

236:                                              ; preds = %227
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %89) #7
  br label %251

237:                                              ; preds = %220
  %238 = shl nsw i32 %225, 1
  %239 = sext i32 %238 to i64
  %240 = add i64 %224, 11
  %241 = add i64 %240, %239
  %242 = inttoptr i64 %241 to i16*
  store i16 93, i16* %242, align 2
  %243 = load i32, i32* %96, align 4
  %244 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %245 = load i32, i32* %244, align 8
  %246 = icmp eq i32 %243, %245
  br i1 %246, label %247, label %251

247:                                              ; preds = %237
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %89) #7
  br label %251

248:                                              ; preds = %16, %31, %43
  %249 = tail call i32 @_ZN2v88internal15JsonStringifier23SerializeJSReceiverSlowENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %1)
  %250 = icmp eq i32 %249, 1
  br i1 %250, label %251, label %255

251:                                              ; preds = %247, %237, %236, %227, %248
  %252 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7, i32 0, i32 1
  %253 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %252, align 8
  %254 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %253, i64 -1
  store %"struct.std::__1::pair.1134"* %254, %"struct.std::__1::pair.1134"** %252, align 8
  br label %255

255:                                              ; preds = %251, %248, %39, %81, %120, %45, %3
  %256 = phi i32 [ %14, %3 ], [ 1, %251 ], [ %249, %248 ], [ 2, %39 ], [ 2, %45 ], [ 2, %81 ], [ %124, %120 ]
  %257 = icmp eq %"class.v8::internal::Isolate"* %5, null
  br i1 %257, label %271, label %258

258:                                              ; preds = %255
  %259 = inttoptr i64 %8 to i64*
  %260 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %6, i64 0, i32 0
  %261 = load i64*, i64** %260, align 8
  store i64 %8, i64* %7, align 8
  %262 = load i32, i32* %11, align 8
  %263 = add nsw i32 %262, -1
  store i32 %263, i32* %11, align 8
  %264 = load i64*, i64** %9, align 8
  %265 = icmp eq i64* %264, %10
  br i1 %265, label %268, label %266

266:                                              ; preds = %258
  store i64* %10, i64** %9, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %5) #7
  %267 = load i64*, i64** %260, align 8
  br label %268

268:                                              ; preds = %266, %258
  %269 = phi i64* [ %267, %266 ], [ %259, %258 ]
  %270 = phi i64* [ %10, %266 ], [ %261, %258 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %269, i64* %270) #7
  br label %271

271:                                              ; preds = %255, %268
  ret i32 %256
}

; Function Attrs: alwaysinline norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15JsonStringifier11DoNotEscapeIhEEbT_(i8 zeroext) local_unnamed_addr #5 align 2 {
  %2 = add i8 %0, -35
  %3 = icmp ult i8 %2, 92
  %4 = icmp ne i8 %0, 92
  %5 = and i1 %4, %3
  ret i1 %5
}

; Function Attrs: alwaysinline norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15JsonStringifier11DoNotEscapeItEEbT_(i16 zeroext) local_unnamed_addr #5 align 2 {
  %2 = icmp ult i16 %0, 35
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  switch i16 %0, label %4 [
    i16 127, label %7
    i16 92, label %7
  ]

4:                                                ; preds = %3
  %5 = and i16 %0, -2048
  %6 = icmp ne i16 %5, -10240
  br label %7

7:                                                ; preds = %3, %3, %1, %4
  %8 = phi i1 [ false, %3 ], [ %6, %4 ], [ false, %1 ], [ false, %3 ]
  ret i1 %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #4 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %72

15:                                               ; preds = %3
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 1
  br i1 %23, label %24, label %72

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 7
  %32 = icmp eq i16 %31, 1
  br i1 %32, label %33, label %43

33:                                               ; preds = %24
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %70

43:                                               ; preds = %24, %33
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %52 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %53 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %43
  %55 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %52, i64 %50) #7
  %56 = load i64, i64* %55, align 8
  br label %72

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %65

65:                                               ; preds = %63, %57
  %66 = phi i64* [ %64, %63 ], [ %59, %57 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %58, align 8
  store i64 %50, i64* %66, align 8
  br label %72

70:                                               ; preds = %33
  %71 = tail call i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext %2) #7
  br label %118

72:                                               ; preds = %65, %54, %3, %15
  %73 = phi i64 [ %4, %15 ], [ %4, %3 ], [ %50, %65 ], [ %56, %54 ]
  %74 = phi i64* [ %1, %15 ], [ %1, %3 ], [ %66, %65 ], [ %55, %54 ]
  %75 = and i64 %73, -4294967296
  %76 = add i64 %73, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ult i16 %83, 64
  br i1 %84, label %85, label %118

85:                                               ; preds = %72
  %86 = load atomic i32, i32* %77 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %75, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 7
  %93 = icmp eq i16 %92, 5
  br i1 %93, label %94, label %118

94:                                               ; preds = %85
  %95 = add i64 %73, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %75, %98
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %94
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %99) #7
  br label %118

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %99, i64* %114, align 8
  br label %118

118:                                              ; preds = %72, %85, %103, %113, %70
  %119 = phi i64* [ %71, %70 ], [ %74, %85 ], [ %104, %103 ], [ %114, %113 ], [ %74, %72 ]
  ret i64* %119
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal15JsonStringifier10Serialize_ILb0EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_(%"class.v8::internal::JsonStringifier"*, i64*, i1 zeroext, i64*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Representation", align 1
  %6 = ptrtoint i64* %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 6, i32 1, i32 3
  %11 = load atomic i64, i64* %10 monotonic, align 8
  %12 = icmp ult i64 %9, %11
  br i1 %12, label %13, label %23

13:                                               ; preds = %4
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 6
  %16 = tail call i64 @_ZN2v88internal10StackGuard16HandleInterruptsEv(%"class.v8::internal::StackGuard"* %15) #7
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 32
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %16 to i32
  %21 = trunc i64 %19 to i32
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %1604, label %23

23:                                               ; preds = %4, %13
  %24 = load i64, i64* %1, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %51, label %27

27:                                               ; preds = %23
  %28 = and i64 %24, -4294967296
  %29 = add i64 %24, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %28, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = icmp ugt i16 %36, 185
  br i1 %37, label %46, label %38

38:                                               ; preds = %27
  %39 = load atomic i32, i32* %30 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %28, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = icmp eq i16 %44, 65
  br i1 %45, label %46, label %51

46:                                               ; preds = %27, %38
  %47 = tail call i64* @_ZN2v88internal15JsonStringifier19ApplyToJsonFunctionENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::JsonStringifier"* %0, i64* %1, i64* %3)
  %48 = icmp eq i64* %47, null
  br i1 %48, label %1604, label %49

49:                                               ; preds = %46
  %50 = ptrtoint i64* %47 to i64
  br label %51

51:                                               ; preds = %23, %49, %38
  %52 = phi i64 [ %6, %38 ], [ %50, %49 ], [ %6, %23 ]
  %53 = inttoptr i64 %52 to i64*
  %54 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 4, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = icmp eq i64* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = tail call i64* @_ZN2v88internal15JsonStringifier21ApplyReplacerFunctionENS0_6HandleINS0_6ObjectEEES4_S4_(%"class.v8::internal::JsonStringifier"* %0, i64* %53, i64* %3, i64* %1)
  %59 = icmp eq i64* %58, null
  br i1 %59, label %1604, label %60

60:                                               ; preds = %57, %51
  %61 = phi i64* [ %53, %51 ], [ %58, %57 ]
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  %66 = tail call i32 @_ZN2v88internal15JsonStringifier12SerializeSmiENS0_3SmiE(%"class.v8::internal::JsonStringifier"* %0, i64 %62)
  br label %1604

67:                                               ; preds = %60
  %68 = and i64 %62, -4294967296
  %69 = add i64 %62, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %68, %72
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  switch i16 %76, label %1148 [
    i16 66, label %77
    i16 65, label %82
    i16 67, label %88
    i16 1085, label %268
    i16 1041, label %1146
    i16 64, label %1604
  ]

77:                                               ; preds = %67
  %78 = add i64 %62, 3
  %79 = inttoptr i64 %78 to double*
  %80 = load double, double* %79, align 1
  %81 = tail call i32 @_ZN2v88internal15JsonStringifier15SerializeDoubleEd(%"class.v8::internal::JsonStringifier"* %0, double %80) #7
  br label %1604

82:                                               ; preds = %67
  %83 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %84 = bitcast %"class.v8::internal::Isolate"* %83 to %"class.v8::internal::Factory"*
  %85 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %84, i32 22, i64* null, i64* null, i64* null) #7
  %86 = load i64, i64* %85, align 8
  %87 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %83, i64 %86, %"class.v8::internal::MessageLocation"* null) #7
  br label %1604

88:                                               ; preds = %67
  %89 = add i64 %62, 23
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = lshr i32 %91, 1
  %93 = trunc i32 %92 to i8
  switch i8 %93, label %1604 [
    i8 0, label %94
    i8 1, label %152
    i8 3, label %210
  ]

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %96 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %100 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %101 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %102 = load i64*, i64** %99, align 8
  %103 = load i64, i64* %102, align 8
  %104 = load i32, i32* %100, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %100, align 4
  br i1 %98, label %115, label %106

106:                                              ; preds = %94
  %107 = shl nsw i32 %104, 1
  %108 = sext i32 %107 to i64
  %109 = add i64 %103, 11
  %110 = add i64 %109, %108
  %111 = inttoptr i64 %110 to i16*
  store i16 102, i16* %111, align 2
  %112 = load i32, i32* %100, align 4
  %113 = load i32, i32* %101, align 8
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %137, label %139

115:                                              ; preds = %94
  %116 = sext i32 %104 to i64
  %117 = add i64 %103, 11
  %118 = add i64 %117, %116
  %119 = inttoptr i64 %118 to i8*
  store i8 102, i8* %119, align 1
  %120 = load i32, i32* %100, align 4
  %121 = load i32, i32* %101, align 8
  %122 = icmp eq i32 %120, %121
  br i1 %122, label %123, label %125

123:                                              ; preds = %115
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %95) #7
  %124 = load i32, i32* %100, align 4
  br label %125

125:                                              ; preds = %123, %115
  %126 = phi i32 [ %124, %123 ], [ %120, %115 ]
  %127 = load i64*, i64** %99, align 8
  %128 = load i64, i64* %127, align 8
  %129 = add nsw i32 %126, 1
  store i32 %129, i32* %100, align 4
  %130 = sext i32 %126 to i64
  %131 = add i64 %128, 11
  %132 = add i64 %131, %130
  %133 = inttoptr i64 %132 to i8*
  store i8 97, i8* %133, align 1
  %134 = load i32, i32* %100, align 4
  %135 = load i32, i32* %101, align 8
  %136 = icmp eq i32 %134, %135
  br i1 %136, label %1606, label %1608

137:                                              ; preds = %106
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %95) #7
  %138 = load i32, i32* %100, align 4
  br label %139

139:                                              ; preds = %137, %106
  %140 = phi i32 [ %138, %137 ], [ %112, %106 ]
  %141 = load i64*, i64** %99, align 8
  %142 = load i64, i64* %141, align 8
  %143 = add nsw i32 %140, 1
  store i32 %143, i32* %100, align 4
  %144 = shl nsw i32 %140, 1
  %145 = sext i32 %144 to i64
  %146 = add i64 %142, 11
  %147 = add i64 %146, %145
  %148 = inttoptr i64 %147 to i16*
  store i16 97, i16* %148, align 2
  %149 = load i32, i32* %100, align 4
  %150 = load i32, i32* %101, align 8
  %151 = icmp eq i32 %149, %150
  br i1 %151, label %1649, label %1651

152:                                              ; preds = %88
  %153 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %154 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %158 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %159 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %160 = load i64*, i64** %157, align 8
  %161 = load i64, i64* %160, align 8
  %162 = load i32, i32* %158, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %158, align 4
  br i1 %156, label %173, label %164

164:                                              ; preds = %152
  %165 = shl nsw i32 %162, 1
  %166 = sext i32 %165 to i64
  %167 = add i64 %161, 11
  %168 = add i64 %167, %166
  %169 = inttoptr i64 %168 to i16*
  store i16 116, i16* %169, align 2
  %170 = load i32, i32* %158, align 4
  %171 = load i32, i32* %159, align 8
  %172 = icmp eq i32 %170, %171
  br i1 %172, label %195, label %197

173:                                              ; preds = %152
  %174 = sext i32 %162 to i64
  %175 = add i64 %161, 11
  %176 = add i64 %175, %174
  %177 = inttoptr i64 %176 to i8*
  store i8 116, i8* %177, align 1
  %178 = load i32, i32* %158, align 4
  %179 = load i32, i32* %159, align 8
  %180 = icmp eq i32 %178, %179
  br i1 %180, label %181, label %183

181:                                              ; preds = %173
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %153) #7
  %182 = load i32, i32* %158, align 4
  br label %183

183:                                              ; preds = %181, %173
  %184 = phi i32 [ %182, %181 ], [ %178, %173 ]
  %185 = load i64*, i64** %157, align 8
  %186 = load i64, i64* %185, align 8
  %187 = add nsw i32 %184, 1
  store i32 %187, i32* %158, align 4
  %188 = sext i32 %184 to i64
  %189 = add i64 %186, 11
  %190 = add i64 %189, %188
  %191 = inttoptr i64 %190 to i8*
  store i8 114, i8* %191, align 1
  %192 = load i32, i32* %158, align 4
  %193 = load i32, i32* %159, align 8
  %194 = icmp eq i32 %192, %193
  br i1 %194, label %1695, label %1697

195:                                              ; preds = %164
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %153) #7
  %196 = load i32, i32* %158, align 4
  br label %197

197:                                              ; preds = %195, %164
  %198 = phi i32 [ %196, %195 ], [ %170, %164 ]
  %199 = load i64*, i64** %157, align 8
  %200 = load i64, i64* %199, align 8
  %201 = add nsw i32 %198, 1
  store i32 %201, i32* %158, align 4
  %202 = shl nsw i32 %198, 1
  %203 = sext i32 %202 to i64
  %204 = add i64 %200, 11
  %205 = add i64 %204, %203
  %206 = inttoptr i64 %205 to i16*
  store i16 114, i16* %206, align 2
  %207 = load i32, i32* %158, align 4
  %208 = load i32, i32* %159, align 8
  %209 = icmp eq i32 %207, %208
  br i1 %209, label %1724, label %1726

210:                                              ; preds = %88
  %211 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %212 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %213 = load i32, i32* %212, align 8
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %216 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %217 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %218 = load i64*, i64** %215, align 8
  %219 = load i64, i64* %218, align 8
  %220 = load i32, i32* %216, align 4
  %221 = add nsw i32 %220, 1
  store i32 %221, i32* %216, align 4
  br i1 %214, label %231, label %222

222:                                              ; preds = %210
  %223 = shl nsw i32 %220, 1
  %224 = sext i32 %223 to i64
  %225 = add i64 %219, 11
  %226 = add i64 %225, %224
  %227 = inttoptr i64 %226 to i16*
  store i16 110, i16* %227, align 2
  %228 = load i32, i32* %216, align 4
  %229 = load i32, i32* %217, align 8
  %230 = icmp eq i32 %228, %229
  br i1 %230, label %253, label %255

231:                                              ; preds = %210
  %232 = sext i32 %220 to i64
  %233 = add i64 %219, 11
  %234 = add i64 %233, %232
  %235 = inttoptr i64 %234 to i8*
  store i8 110, i8* %235, align 1
  %236 = load i32, i32* %216, align 4
  %237 = load i32, i32* %217, align 8
  %238 = icmp eq i32 %236, %237
  br i1 %238, label %239, label %241

239:                                              ; preds = %231
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %211) #7
  %240 = load i32, i32* %216, align 4
  br label %241

241:                                              ; preds = %239, %231
  %242 = phi i32 [ %240, %239 ], [ %236, %231 ]
  %243 = load i64*, i64** %215, align 8
  %244 = load i64, i64* %243, align 8
  %245 = add nsw i32 %242, 1
  store i32 %245, i32* %216, align 4
  %246 = sext i32 %242 to i64
  %247 = add i64 %244, 11
  %248 = add i64 %247, %246
  %249 = inttoptr i64 %248 to i8*
  store i8 117, i8* %249, align 1
  %250 = load i32, i32* %216, align 4
  %251 = load i32, i32* %217, align 8
  %252 = icmp eq i32 %250, %251
  br i1 %252, label %1755, label %1757

253:                                              ; preds = %222
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %211) #7
  %254 = load i32, i32* %216, align 4
  br label %255

255:                                              ; preds = %253, %222
  %256 = phi i32 [ %254, %253 ], [ %228, %222 ]
  %257 = load i64*, i64** %215, align 8
  %258 = load i64, i64* %257, align 8
  %259 = add nsw i32 %256, 1
  store i32 %259, i32* %216, align 4
  %260 = shl nsw i32 %256, 1
  %261 = sext i32 %260 to i64
  %262 = add i64 %258, 11
  %263 = add i64 %262, %261
  %264 = inttoptr i64 %263 to i16*
  store i16 117, i16* %264, align 2
  %265 = load i32, i32* %216, align 4
  %266 = load i32, i32* %217, align 8
  %267 = icmp eq i32 %265, %266
  br i1 %267, label %1784, label %1786

268:                                              ; preds = %67
  %269 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %270 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %269, i64 0, i32 31
  %271 = bitcast %"struct.v8::internal::HandleScopeData"* %270 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %269, i64 0, i32 31, i32 1
  %274 = load i64*, i64** %273, align 8
  %275 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %269, i64 0, i32 31, i32 2
  %276 = load i32, i32* %275, align 8
  %277 = add nsw i32 %276, 1
  store i32 %277, i32* %275, align 8
  %278 = tail call i32 @_ZN2v88internal15JsonStringifier9StackPushENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::JsonStringifier"* %0, i64* %61, i64* %3) #7
  %279 = icmp eq i32 %278, 1
  br i1 %279, label %280, label %1130

280:                                              ; preds = %268
  %281 = load i64, i64* %61, align 8
  %282 = and i64 %281, -4294967296
  %283 = add i64 %281, 11
  %284 = inttoptr i64 %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = zext i32 %285 to i64
  %287 = or i64 %282, %286
  %288 = and i64 %286, 1
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %290, label %294

290:                                              ; preds = %280
  %291 = icmp slt i32 %285, 0
  br i1 %291, label %316, label %292, !prof !3

292:                                              ; preds = %290
  %293 = lshr i32 %285, 1
  br label %317

294:                                              ; preds = %280
  %295 = add i64 %287, -1
  %296 = inttoptr i64 %295 to i32*
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = zext i32 %297 to i64
  %299 = or i64 %282, %298
  %300 = add i64 %299, 7
  %301 = inttoptr i64 %300 to i16*
  %302 = load atomic i16, i16* %301 monotonic, align 2
  %303 = icmp eq i16 %302, 66
  br i1 %303, label %304, label %316, !prof !4

304:                                              ; preds = %294
  %305 = add i64 %287, 3
  %306 = inttoptr i64 %305 to double*
  %307 = load double, double* %306, align 1
  %308 = fadd double %307, 0x4330000000000000
  %309 = bitcast double %308 to i64
  %310 = and i64 %309, -4294967296
  %311 = icmp eq i64 %310, 4841369599423283200
  br i1 %311, label %312, label %316, !prof !4

312:                                              ; preds = %304
  %313 = trunc i64 %309 to i32
  %314 = uitofp i32 %313 to double
  %315 = fcmp oeq double %307, %314
  br i1 %315, label %317, label %316, !prof !5

316:                                              ; preds = %304, %294, %290, %312
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0)) #14
  unreachable

317:                                              ; preds = %292, %312
  %318 = phi i32 [ %293, %292 ], [ %313, %312 ]
  %319 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %320 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %321 = load i32, i32* %320, align 8
  %322 = icmp eq i32 %321, 0
  %323 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %324 = load i64*, i64** %323, align 8
  %325 = load i64, i64* %324, align 8
  %326 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %327 = load i32, i32* %326, align 4
  %328 = add nsw i32 %327, 1
  store i32 %328, i32* %326, align 4
  br i1 %322, label %329, label %339

329:                                              ; preds = %317
  %330 = sext i32 %327 to i64
  %331 = add i64 %325, 11
  %332 = add i64 %331, %330
  %333 = inttoptr i64 %332 to i8*
  store i8 91, i8* %333, align 1
  %334 = load i32, i32* %326, align 4
  %335 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %336 = load i32, i32* %335, align 8
  %337 = icmp eq i32 %334, %336
  br i1 %337, label %338, label %350

338:                                              ; preds = %329
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %350

339:                                              ; preds = %317
  %340 = shl nsw i32 %327, 1
  %341 = sext i32 %340 to i64
  %342 = add i64 %325, 11
  %343 = add i64 %342, %341
  %344 = inttoptr i64 %343 to i16*
  store i16 91, i16* %344, align 2
  %345 = load i32, i32* %326, align 4
  %346 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %347 = load i32, i32* %346, align 8
  %348 = icmp eq i32 %345, %347
  br i1 %348, label %349, label %350

349:                                              ; preds = %339
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %350

350:                                              ; preds = %349, %339, %338, %329
  %351 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %352 = load i32, i32* %351, align 8
  %353 = add nsw i32 %352, 1
  store i32 %353, i32* %351, align 8
  %354 = load i64*, i64** %54, align 8
  %355 = icmp eq i64* %354, null
  br i1 %355, label %356, label %995

356:                                              ; preds = %350
  %357 = load i64, i64* %61, align 8
  %358 = and i64 %357, -4294967296
  %359 = add i64 %357, -1
  %360 = inttoptr i64 %359 to i32*
  %361 = load atomic i32, i32* %360 monotonic, align 4
  %362 = zext i32 %361 to i64
  %363 = or i64 %358, %362
  %364 = add i64 %363, 10
  %365 = inttoptr i64 %364 to i8*
  %366 = load i8, i8* %365, align 1
  %367 = lshr i8 %366, 2
  switch i8 %367, label %995 [
    i8 0, label %368
    i8 4, label %543
    i8 2, label %715
  ]

368:                                              ; preds = %356
  %369 = add i64 %357, 7
  %370 = inttoptr i64 %369 to i32*
  %371 = load i32, i32* %370, align 4
  %372 = zext i32 %371 to i64
  %373 = or i64 %358, %372
  %374 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %375 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %374, i64 0, i32 31, i32 4
  %376 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %375, align 8
  %377 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %376, null
  br i1 %377, label %380, label %378

378:                                              ; preds = %368
  %379 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %376, i64 %373) #7
  br label %393

380:                                              ; preds = %368
  %381 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %374, i64 0, i32 31, i32 0
  %382 = load i64*, i64** %381, align 8
  %383 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %374, i64 0, i32 31, i32 1
  %384 = load i64*, i64** %383, align 8
  %385 = icmp eq i64* %382, %384
  br i1 %385, label %386, label %388

386:                                              ; preds = %380
  %387 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %374) #7
  br label %388

388:                                              ; preds = %386, %380
  %389 = phi i64* [ %387, %386 ], [ %382, %380 ]
  %390 = ptrtoint i64* %389 to i64
  %391 = add i64 %390, 8
  %392 = inttoptr i64 %391 to i64*
  store i64* %392, i64** %381, align 8
  store i64 %373, i64* %389, align 8
  br label %393

393:                                              ; preds = %388, %378
  %394 = phi i64* [ %379, %378 ], [ %389, %388 ]
  %395 = icmp eq i32 %318, 0
  br i1 %395, label %995, label %396

396:                                              ; preds = %393
  %397 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %398 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %397, i64 0, i32 0, i32 6, i32 1, i32 3
  %399 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %400 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  br label %401

401:                                              ; preds = %529, %396
  %402 = phi i32 [ 0, %396 ], [ %541, %529 ]
  %403 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %404 = load atomic i64, i64* %398 monotonic, align 8
  %405 = icmp ult i64 %403, %404
  br i1 %405, label %406, label %416

406:                                              ; preds = %401
  %407 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %408 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %407, i64 0, i32 0, i32 6
  %409 = tail call i64 @_ZN2v88internal10StackGuard16HandleInterruptsEv(%"class.v8::internal::StackGuard"* %408) #7
  %410 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %411 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %410, i64 0, i32 0, i32 7, i32 0, i64 32
  %412 = load i64, i64* %411, align 8
  %413 = trunc i64 %409 to i32
  %414 = trunc i64 %412 to i32
  %415 = icmp eq i32 %413, %414
  br i1 %415, label %1130, label %416

416:                                              ; preds = %401, %406
  %417 = icmp eq i32 %402, 0
  br i1 %417, label %444, label %418

418:                                              ; preds = %416
  %419 = load i32, i32* %320, align 8
  %420 = icmp eq i32 %419, 0
  %421 = load i64*, i64** %323, align 8
  %422 = load i64, i64* %421, align 8
  %423 = load i32, i32* %326, align 4
  %424 = add nsw i32 %423, 1
  store i32 %424, i32* %326, align 4
  br i1 %420, label %425, label %434

425:                                              ; preds = %418
  %426 = sext i32 %423 to i64
  %427 = add i64 %422, 11
  %428 = add i64 %427, %426
  %429 = inttoptr i64 %428 to i8*
  store i8 44, i8* %429, align 1
  %430 = load i32, i32* %326, align 4
  %431 = load i32, i32* %399, align 8
  %432 = icmp eq i32 %430, %431
  br i1 %432, label %433, label %444

433:                                              ; preds = %425
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %444

434:                                              ; preds = %418
  %435 = shl nsw i32 %423, 1
  %436 = sext i32 %435 to i64
  %437 = add i64 %422, 11
  %438 = add i64 %437, %436
  %439 = inttoptr i64 %438 to i16*
  store i16 44, i16* %439, align 2
  %440 = load i32, i32* %326, align 4
  %441 = load i32, i32* %399, align 8
  %442 = icmp eq i32 %440, %441
  br i1 %442, label %443, label %444

443:                                              ; preds = %434
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %444

444:                                              ; preds = %443, %434, %433, %425, %416
  %445 = load i16*, i16** %400, align 8
  %446 = icmp eq i16* %445, null
  br i1 %446, label %529, label %447

447:                                              ; preds = %444
  %448 = load i32, i32* %320, align 8
  %449 = icmp eq i32 %448, 0
  %450 = load i64*, i64** %323, align 8
  %451 = load i64, i64* %450, align 8
  %452 = load i32, i32* %326, align 4
  %453 = add nsw i32 %452, 1
  store i32 %453, i32* %326, align 4
  br i1 %449, label %454, label %463

454:                                              ; preds = %447
  %455 = sext i32 %452 to i64
  %456 = add i64 %451, 11
  %457 = add i64 %456, %455
  %458 = inttoptr i64 %457 to i8*
  store i8 10, i8* %458, align 1
  %459 = load i32, i32* %326, align 4
  %460 = load i32, i32* %399, align 8
  %461 = icmp eq i32 %459, %460
  br i1 %461, label %462, label %473

462:                                              ; preds = %454
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %473

463:                                              ; preds = %447
  %464 = shl nsw i32 %452, 1
  %465 = sext i32 %464 to i64
  %466 = add i64 %451, 11
  %467 = add i64 %466, %465
  %468 = inttoptr i64 %467 to i16*
  store i16 10, i16* %468, align 2
  %469 = load i32, i32* %326, align 4
  %470 = load i32, i32* %399, align 8
  %471 = icmp eq i32 %469, %470
  br i1 %471, label %472, label %473

472:                                              ; preds = %463
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %473

473:                                              ; preds = %472, %463, %462, %454
  %474 = load i32, i32* %351, align 8
  %475 = icmp sgt i32 %474, 0
  br i1 %475, label %476, label %529

476:                                              ; preds = %473, %525
  %477 = phi i32 [ %526, %525 ], [ 0, %473 ]
  %478 = load i16*, i16** %400, align 8
  %479 = load i32, i32* %320, align 8
  %480 = icmp eq i32 %479, 0
  %481 = load i16, i16* %478, align 2
  %482 = icmp eq i16 %481, 0
  br i1 %480, label %484, label %483

483:                                              ; preds = %476
  br i1 %482, label %525, label %505

484:                                              ; preds = %476
  br i1 %482, label %525, label %485

485:                                              ; preds = %484, %502
  %486 = phi i16 [ %503, %502 ], [ %481, %484 ]
  %487 = phi i16* [ %488, %502 ], [ %478, %484 ]
  %488 = getelementptr inbounds i16, i16* %487, i64 1
  %489 = load i64*, i64** %323, align 8
  %490 = load i64, i64* %489, align 8
  %491 = load i32, i32* %326, align 4
  %492 = add nsw i32 %491, 1
  store i32 %492, i32* %326, align 4
  %493 = trunc i16 %486 to i8
  %494 = sext i32 %491 to i64
  %495 = add i64 %490, 11
  %496 = add i64 %495, %494
  %497 = inttoptr i64 %496 to i8*
  store i8 %493, i8* %497, align 1
  %498 = load i32, i32* %326, align 4
  %499 = load i32, i32* %399, align 8
  %500 = icmp eq i32 %498, %499
  br i1 %500, label %501, label %502

501:                                              ; preds = %485
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %502

502:                                              ; preds = %501, %485
  %503 = load i16, i16* %488, align 2
  %504 = icmp eq i16 %503, 0
  br i1 %504, label %525, label %485

505:                                              ; preds = %483, %522
  %506 = phi i16 [ %523, %522 ], [ %481, %483 ]
  %507 = phi i16* [ %508, %522 ], [ %478, %483 ]
  %508 = getelementptr inbounds i16, i16* %507, i64 1
  %509 = load i64*, i64** %323, align 8
  %510 = load i64, i64* %509, align 8
  %511 = load i32, i32* %326, align 4
  %512 = add nsw i32 %511, 1
  store i32 %512, i32* %326, align 4
  %513 = shl nsw i32 %511, 1
  %514 = sext i32 %513 to i64
  %515 = add i64 %510, 11
  %516 = add i64 %515, %514
  %517 = inttoptr i64 %516 to i16*
  store i16 %506, i16* %517, align 2
  %518 = load i32, i32* %326, align 4
  %519 = load i32, i32* %399, align 8
  %520 = icmp eq i32 %518, %519
  br i1 %520, label %521, label %522

521:                                              ; preds = %505
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %522

522:                                              ; preds = %521, %505
  %523 = load i16, i16* %508, align 2
  %524 = icmp eq i16 %523, 0
  br i1 %524, label %525, label %505

525:                                              ; preds = %522, %502, %484, %483
  %526 = add nuw nsw i32 %477, 1
  %527 = load i32, i32* %351, align 8
  %528 = icmp slt i32 %526, %527
  br i1 %528, label %476, label %529

529:                                              ; preds = %525, %473, %444
  %530 = load i64, i64* %394, align 8
  %531 = and i64 %530, -4294967296
  %532 = shl i32 %402, 2
  %533 = sext i32 %532 to i64
  %534 = add nsw i64 %533, 7
  %535 = add i64 %534, %530
  %536 = inttoptr i64 %535 to i32*
  %537 = load atomic i32, i32* %536 monotonic, align 4
  %538 = zext i32 %537 to i64
  %539 = or i64 %531, %538
  %540 = tail call i32 @_ZN2v88internal15JsonStringifier12SerializeSmiENS0_3SmiE(%"class.v8::internal::JsonStringifier"* %0, i64 %539) #7
  %541 = add nuw i32 %402, 1
  %542 = icmp eq i32 %541, %318
  br i1 %542, label %1004, label %401

543:                                              ; preds = %356
  %544 = icmp eq i32 %318, 0
  br i1 %544, label %995, label %545

545:                                              ; preds = %543
  %546 = add i64 %357, 7
  %547 = inttoptr i64 %546 to i32*
  %548 = load i32, i32* %547, align 4
  %549 = zext i32 %548 to i64
  %550 = or i64 %358, %549
  %551 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %552 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %551, i64 0, i32 31, i32 4
  %553 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %552, align 8
  %554 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %553, null
  br i1 %554, label %557, label %555

555:                                              ; preds = %545
  %556 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %553, i64 %550) #7
  br label %570

557:                                              ; preds = %545
  %558 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %551, i64 0, i32 31, i32 0
  %559 = load i64*, i64** %558, align 8
  %560 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %551, i64 0, i32 31, i32 1
  %561 = load i64*, i64** %560, align 8
  %562 = icmp eq i64* %559, %561
  br i1 %562, label %563, label %565

563:                                              ; preds = %557
  %564 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %551) #7
  br label %565

565:                                              ; preds = %563, %557
  %566 = phi i64* [ %564, %563 ], [ %559, %557 ]
  %567 = ptrtoint i64* %566 to i64
  %568 = add i64 %567, 8
  %569 = inttoptr i64 %568 to i64*
  store i64* %569, i64** %558, align 8
  store i64 %550, i64* %566, align 8
  br label %570

570:                                              ; preds = %555, %565
  %571 = phi i64* [ %556, %555 ], [ %566, %565 ]
  %572 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %573 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %572, i64 0, i32 0, i32 6, i32 1, i32 3
  %574 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %575 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  br label %576

576:                                              ; preds = %704, %570
  %577 = phi i32 [ 0, %570 ], [ %713, %704 ]
  %578 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %579 = load atomic i64, i64* %573 monotonic, align 8
  %580 = icmp ult i64 %578, %579
  br i1 %580, label %581, label %591

581:                                              ; preds = %576
  %582 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %583 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %582, i64 0, i32 0, i32 6
  %584 = tail call i64 @_ZN2v88internal10StackGuard16HandleInterruptsEv(%"class.v8::internal::StackGuard"* %583) #7
  %585 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %586 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %585, i64 0, i32 0, i32 7, i32 0, i64 32
  %587 = load i64, i64* %586, align 8
  %588 = trunc i64 %584 to i32
  %589 = trunc i64 %587 to i32
  %590 = icmp eq i32 %588, %589
  br i1 %590, label %1130, label %591

591:                                              ; preds = %576, %581
  %592 = icmp eq i32 %577, 0
  br i1 %592, label %619, label %593

593:                                              ; preds = %591
  %594 = load i32, i32* %320, align 8
  %595 = icmp eq i32 %594, 0
  %596 = load i64*, i64** %323, align 8
  %597 = load i64, i64* %596, align 8
  %598 = load i32, i32* %326, align 4
  %599 = add nsw i32 %598, 1
  store i32 %599, i32* %326, align 4
  br i1 %595, label %600, label %609

600:                                              ; preds = %593
  %601 = sext i32 %598 to i64
  %602 = add i64 %597, 11
  %603 = add i64 %602, %601
  %604 = inttoptr i64 %603 to i8*
  store i8 44, i8* %604, align 1
  %605 = load i32, i32* %326, align 4
  %606 = load i32, i32* %574, align 8
  %607 = icmp eq i32 %605, %606
  br i1 %607, label %608, label %619

608:                                              ; preds = %600
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %619

609:                                              ; preds = %593
  %610 = shl nsw i32 %598, 1
  %611 = sext i32 %610 to i64
  %612 = add i64 %597, 11
  %613 = add i64 %612, %611
  %614 = inttoptr i64 %613 to i16*
  store i16 44, i16* %614, align 2
  %615 = load i32, i32* %326, align 4
  %616 = load i32, i32* %574, align 8
  %617 = icmp eq i32 %615, %616
  br i1 %617, label %618, label %619

618:                                              ; preds = %609
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %619

619:                                              ; preds = %618, %609, %608, %600, %591
  %620 = load i16*, i16** %575, align 8
  %621 = icmp eq i16* %620, null
  br i1 %621, label %704, label %622

622:                                              ; preds = %619
  %623 = load i32, i32* %320, align 8
  %624 = icmp eq i32 %623, 0
  %625 = load i64*, i64** %323, align 8
  %626 = load i64, i64* %625, align 8
  %627 = load i32, i32* %326, align 4
  %628 = add nsw i32 %627, 1
  store i32 %628, i32* %326, align 4
  br i1 %624, label %629, label %638

629:                                              ; preds = %622
  %630 = sext i32 %627 to i64
  %631 = add i64 %626, 11
  %632 = add i64 %631, %630
  %633 = inttoptr i64 %632 to i8*
  store i8 10, i8* %633, align 1
  %634 = load i32, i32* %326, align 4
  %635 = load i32, i32* %574, align 8
  %636 = icmp eq i32 %634, %635
  br i1 %636, label %637, label %648

637:                                              ; preds = %629
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %648

638:                                              ; preds = %622
  %639 = shl nsw i32 %627, 1
  %640 = sext i32 %639 to i64
  %641 = add i64 %626, 11
  %642 = add i64 %641, %640
  %643 = inttoptr i64 %642 to i16*
  store i16 10, i16* %643, align 2
  %644 = load i32, i32* %326, align 4
  %645 = load i32, i32* %574, align 8
  %646 = icmp eq i32 %644, %645
  br i1 %646, label %647, label %648

647:                                              ; preds = %638
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %648

648:                                              ; preds = %647, %638, %637, %629
  %649 = load i32, i32* %351, align 8
  %650 = icmp sgt i32 %649, 0
  br i1 %650, label %651, label %704

651:                                              ; preds = %648, %700
  %652 = phi i32 [ %701, %700 ], [ 0, %648 ]
  %653 = load i16*, i16** %575, align 8
  %654 = load i32, i32* %320, align 8
  %655 = icmp eq i32 %654, 0
  %656 = load i16, i16* %653, align 2
  %657 = icmp eq i16 %656, 0
  br i1 %655, label %659, label %658

658:                                              ; preds = %651
  br i1 %657, label %700, label %680

659:                                              ; preds = %651
  br i1 %657, label %700, label %660

660:                                              ; preds = %659, %677
  %661 = phi i16 [ %678, %677 ], [ %656, %659 ]
  %662 = phi i16* [ %663, %677 ], [ %653, %659 ]
  %663 = getelementptr inbounds i16, i16* %662, i64 1
  %664 = load i64*, i64** %323, align 8
  %665 = load i64, i64* %664, align 8
  %666 = load i32, i32* %326, align 4
  %667 = add nsw i32 %666, 1
  store i32 %667, i32* %326, align 4
  %668 = trunc i16 %661 to i8
  %669 = sext i32 %666 to i64
  %670 = add i64 %665, 11
  %671 = add i64 %670, %669
  %672 = inttoptr i64 %671 to i8*
  store i8 %668, i8* %672, align 1
  %673 = load i32, i32* %326, align 4
  %674 = load i32, i32* %574, align 8
  %675 = icmp eq i32 %673, %674
  br i1 %675, label %676, label %677

676:                                              ; preds = %660
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %677

677:                                              ; preds = %676, %660
  %678 = load i16, i16* %663, align 2
  %679 = icmp eq i16 %678, 0
  br i1 %679, label %700, label %660

680:                                              ; preds = %658, %697
  %681 = phi i16 [ %698, %697 ], [ %656, %658 ]
  %682 = phi i16* [ %683, %697 ], [ %653, %658 ]
  %683 = getelementptr inbounds i16, i16* %682, i64 1
  %684 = load i64*, i64** %323, align 8
  %685 = load i64, i64* %684, align 8
  %686 = load i32, i32* %326, align 4
  %687 = add nsw i32 %686, 1
  store i32 %687, i32* %326, align 4
  %688 = shl nsw i32 %686, 1
  %689 = sext i32 %688 to i64
  %690 = add i64 %685, 11
  %691 = add i64 %690, %689
  %692 = inttoptr i64 %691 to i16*
  store i16 %681, i16* %692, align 2
  %693 = load i32, i32* %326, align 4
  %694 = load i32, i32* %574, align 8
  %695 = icmp eq i32 %693, %694
  br i1 %695, label %696, label %697

696:                                              ; preds = %680
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %697

697:                                              ; preds = %696, %680
  %698 = load i16, i16* %683, align 2
  %699 = icmp eq i16 %698, 0
  br i1 %699, label %700, label %680

700:                                              ; preds = %697, %677, %659, %658
  %701 = add nuw nsw i32 %652, 1
  %702 = load i32, i32* %351, align 8
  %703 = icmp slt i32 %701, %702
  br i1 %703, label %651, label %704

704:                                              ; preds = %700, %648, %619
  %705 = load i64, i64* %571, align 8
  %706 = shl nsw i32 %577, 3
  %707 = or i32 %706, 7
  %708 = sext i32 %707 to i64
  %709 = add i64 %705, %708
  %710 = inttoptr i64 %709 to double*
  %711 = load double, double* %710, align 1
  %712 = tail call i32 @_ZN2v88internal15JsonStringifier15SerializeDoubleEd(%"class.v8::internal::JsonStringifier"* %0, double %711) #7
  %713 = add nuw i32 %577, 1
  %714 = icmp eq i32 %713, %318
  br i1 %714, label %1004, label %576

715:                                              ; preds = %356
  %716 = add i64 %357, 11
  %717 = inttoptr i64 %716 to i32*
  %718 = load i32, i32* %717, align 4
  %719 = zext i32 %718 to i64
  %720 = or i64 %358, %719
  %721 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %722 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %721, i64 0, i32 31, i32 4
  %723 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %722, align 8
  %724 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %723, null
  br i1 %724, label %727, label %725

725:                                              ; preds = %715
  %726 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %723, i64 %720) #7
  br label %740

727:                                              ; preds = %715
  %728 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %721, i64 0, i32 31, i32 0
  %729 = load i64*, i64** %728, align 8
  %730 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %721, i64 0, i32 31, i32 1
  %731 = load i64*, i64** %730, align 8
  %732 = icmp eq i64* %729, %731
  br i1 %732, label %733, label %735

733:                                              ; preds = %727
  %734 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %721) #7
  br label %735

735:                                              ; preds = %733, %727
  %736 = phi i64* [ %734, %733 ], [ %729, %727 ]
  %737 = ptrtoint i64* %736 to i64
  %738 = add i64 %737, 8
  %739 = inttoptr i64 %738 to i64*
  store i64* %739, i64** %728, align 8
  store i64 %720, i64* %736, align 8
  br label %740

740:                                              ; preds = %735, %725
  %741 = phi i64* [ %726, %725 ], [ %736, %735 ]
  %742 = icmp eq i32 %318, 0
  br i1 %742, label %995, label %743

743:                                              ; preds = %740
  %744 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %745 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  br label %746

746:                                              ; preds = %992, %743
  %747 = phi i32 [ 0, %743 ], [ %993, %992 ]
  %748 = load i64, i64* %61, align 8
  %749 = add i64 %748, 11
  %750 = inttoptr i64 %749 to i32*
  %751 = load i32, i32* %750, align 4
  %752 = load i64, i64* %741, align 8
  %753 = trunc i64 %752 to i32
  %754 = icmp eq i32 %751, %753
  br i1 %754, label %755, label %995

755:                                              ; preds = %746
  %756 = and i64 %748, -4294967296
  %757 = add i64 %748, -1
  %758 = inttoptr i64 %757 to i32*
  %759 = load atomic i32, i32* %758 monotonic, align 4
  %760 = zext i32 %759 to i64
  %761 = or i64 %756, %760
  %762 = add i64 %761, 10
  %763 = inttoptr i64 %762 to i8*
  %764 = load i8, i8* %763, align 1
  %765 = and i8 %764, -4
  %766 = icmp eq i8 %765, 8
  br i1 %766, label %767, label %995

767:                                              ; preds = %755
  %768 = icmp eq i32 %747, 0
  br i1 %768, label %795, label %769

769:                                              ; preds = %767
  %770 = load i32, i32* %320, align 8
  %771 = icmp eq i32 %770, 0
  %772 = load i64*, i64** %323, align 8
  %773 = load i64, i64* %772, align 8
  %774 = load i32, i32* %326, align 4
  %775 = add nsw i32 %774, 1
  store i32 %775, i32* %326, align 4
  br i1 %771, label %776, label %785

776:                                              ; preds = %769
  %777 = sext i32 %774 to i64
  %778 = add i64 %773, 11
  %779 = add i64 %778, %777
  %780 = inttoptr i64 %779 to i8*
  store i8 44, i8* %780, align 1
  %781 = load i32, i32* %326, align 4
  %782 = load i32, i32* %744, align 8
  %783 = icmp eq i32 %781, %782
  br i1 %783, label %784, label %795

784:                                              ; preds = %776
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %795

785:                                              ; preds = %769
  %786 = shl nsw i32 %774, 1
  %787 = sext i32 %786 to i64
  %788 = add i64 %773, 11
  %789 = add i64 %788, %787
  %790 = inttoptr i64 %789 to i16*
  store i16 44, i16* %790, align 2
  %791 = load i32, i32* %326, align 4
  %792 = load i32, i32* %744, align 8
  %793 = icmp eq i32 %791, %792
  br i1 %793, label %794, label %795

794:                                              ; preds = %785
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %795

795:                                              ; preds = %794, %785, %784, %776, %767
  %796 = load i16*, i16** %745, align 8
  %797 = icmp eq i16* %796, null
  br i1 %797, label %880, label %798

798:                                              ; preds = %795
  %799 = load i32, i32* %320, align 8
  %800 = icmp eq i32 %799, 0
  %801 = load i64*, i64** %323, align 8
  %802 = load i64, i64* %801, align 8
  %803 = load i32, i32* %326, align 4
  %804 = add nsw i32 %803, 1
  store i32 %804, i32* %326, align 4
  br i1 %800, label %805, label %814

805:                                              ; preds = %798
  %806 = sext i32 %803 to i64
  %807 = add i64 %802, 11
  %808 = add i64 %807, %806
  %809 = inttoptr i64 %808 to i8*
  store i8 10, i8* %809, align 1
  %810 = load i32, i32* %326, align 4
  %811 = load i32, i32* %744, align 8
  %812 = icmp eq i32 %810, %811
  br i1 %812, label %813, label %824

813:                                              ; preds = %805
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %824

814:                                              ; preds = %798
  %815 = shl nsw i32 %803, 1
  %816 = sext i32 %815 to i64
  %817 = add i64 %802, 11
  %818 = add i64 %817, %816
  %819 = inttoptr i64 %818 to i16*
  store i16 10, i16* %819, align 2
  %820 = load i32, i32* %326, align 4
  %821 = load i32, i32* %744, align 8
  %822 = icmp eq i32 %820, %821
  br i1 %822, label %823, label %824

823:                                              ; preds = %814
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %824

824:                                              ; preds = %823, %814, %813, %805
  %825 = load i32, i32* %351, align 8
  %826 = icmp sgt i32 %825, 0
  br i1 %826, label %827, label %880

827:                                              ; preds = %824, %876
  %828 = phi i32 [ %877, %876 ], [ 0, %824 ]
  %829 = load i16*, i16** %745, align 8
  %830 = load i32, i32* %320, align 8
  %831 = icmp eq i32 %830, 0
  %832 = load i16, i16* %829, align 2
  %833 = icmp eq i16 %832, 0
  br i1 %831, label %835, label %834

834:                                              ; preds = %827
  br i1 %833, label %876, label %856

835:                                              ; preds = %827
  br i1 %833, label %876, label %836

836:                                              ; preds = %835, %853
  %837 = phi i16 [ %854, %853 ], [ %832, %835 ]
  %838 = phi i16* [ %839, %853 ], [ %829, %835 ]
  %839 = getelementptr inbounds i16, i16* %838, i64 1
  %840 = load i64*, i64** %323, align 8
  %841 = load i64, i64* %840, align 8
  %842 = load i32, i32* %326, align 4
  %843 = add nsw i32 %842, 1
  store i32 %843, i32* %326, align 4
  %844 = trunc i16 %837 to i8
  %845 = sext i32 %842 to i64
  %846 = add i64 %841, 11
  %847 = add i64 %846, %845
  %848 = inttoptr i64 %847 to i8*
  store i8 %844, i8* %848, align 1
  %849 = load i32, i32* %326, align 4
  %850 = load i32, i32* %744, align 8
  %851 = icmp eq i32 %849, %850
  br i1 %851, label %852, label %853

852:                                              ; preds = %836
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %853

853:                                              ; preds = %852, %836
  %854 = load i16, i16* %839, align 2
  %855 = icmp eq i16 %854, 0
  br i1 %855, label %876, label %836

856:                                              ; preds = %834, %873
  %857 = phi i16 [ %874, %873 ], [ %832, %834 ]
  %858 = phi i16* [ %859, %873 ], [ %829, %834 ]
  %859 = getelementptr inbounds i16, i16* %858, i64 1
  %860 = load i64*, i64** %323, align 8
  %861 = load i64, i64* %860, align 8
  %862 = load i32, i32* %326, align 4
  %863 = add nsw i32 %862, 1
  store i32 %863, i32* %326, align 4
  %864 = shl nsw i32 %862, 1
  %865 = sext i32 %864 to i64
  %866 = add i64 %861, 11
  %867 = add i64 %866, %865
  %868 = inttoptr i64 %867 to i16*
  store i16 %857, i16* %868, align 2
  %869 = load i32, i32* %326, align 4
  %870 = load i32, i32* %744, align 8
  %871 = icmp eq i32 %869, %870
  br i1 %871, label %872, label %873

872:                                              ; preds = %856
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %873

873:                                              ; preds = %872, %856
  %874 = load i16, i16* %859, align 2
  %875 = icmp eq i16 %874, 0
  br i1 %875, label %876, label %856

876:                                              ; preds = %873, %853, %835, %834
  %877 = add nuw nsw i32 %828, 1
  %878 = load i32, i32* %351, align 8
  %879 = icmp slt i32 %877, %878
  br i1 %879, label %827, label %880

880:                                              ; preds = %876, %824, %795
  %881 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %882 = load i64, i64* %61, align 8
  %883 = and i64 %882, -4294967296
  %884 = add i64 %882, 7
  %885 = inttoptr i64 %884 to i32*
  %886 = load i32, i32* %885, align 4
  %887 = zext i32 %886 to i64
  %888 = or i64 %883, %887
  %889 = shl i32 %747, 2
  %890 = sext i32 %889 to i64
  %891 = add nsw i64 %890, 7
  %892 = add i64 %891, %888
  %893 = inttoptr i64 %892 to i32*
  %894 = load atomic i32, i32* %893 monotonic, align 4
  %895 = zext i32 %894 to i64
  %896 = or i64 %883, %895
  %897 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %881, i64 0, i32 31, i32 4
  %898 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %897, align 8
  %899 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %898, null
  br i1 %899, label %902, label %900

900:                                              ; preds = %880
  %901 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %898, i64 %896) #7
  br label %915

902:                                              ; preds = %880
  %903 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %881, i64 0, i32 31, i32 0
  %904 = load i64*, i64** %903, align 8
  %905 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %881, i64 0, i32 31, i32 1
  %906 = load i64*, i64** %905, align 8
  %907 = icmp eq i64* %904, %906
  br i1 %907, label %908, label %910

908:                                              ; preds = %902
  %909 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %881) #7
  br label %910

910:                                              ; preds = %908, %902
  %911 = phi i64* [ %909, %908 ], [ %904, %902 ]
  %912 = ptrtoint i64* %911 to i64
  %913 = add i64 %912, 8
  %914 = inttoptr i64 %913 to i64*
  store i64* %914, i64** %903, align 8
  store i64 %896, i64* %911, align 8
  br label %915

915:                                              ; preds = %910, %900
  %916 = phi i64* [ %901, %900 ], [ %911, %910 ]
  %917 = sext i32 %747 to i64
  %918 = shl nsw i64 %917, 1
  %919 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %897, align 8
  %920 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %919, null
  br i1 %920, label %923, label %921

921:                                              ; preds = %915
  %922 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %919, i64 %918) #7
  br label %936

923:                                              ; preds = %915
  %924 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %881, i64 0, i32 31, i32 0
  %925 = load i64*, i64** %924, align 8
  %926 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %881, i64 0, i32 31, i32 1
  %927 = load i64*, i64** %926, align 8
  %928 = icmp eq i64* %925, %927
  br i1 %928, label %929, label %931

929:                                              ; preds = %923
  %930 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %881) #7
  br label %931

931:                                              ; preds = %929, %923
  %932 = phi i64* [ %930, %929 ], [ %925, %923 ]
  %933 = ptrtoint i64* %932 to i64
  %934 = add i64 %933, 8
  %935 = inttoptr i64 %934 to i64*
  store i64* %935, i64** %924, align 8
  store i64 %918, i64* %932, align 8
  br label %936

936:                                              ; preds = %921, %931
  %937 = phi i64* [ %922, %921 ], [ %932, %931 ]
  %938 = tail call i32 @_ZN2v88internal15JsonStringifier10Serialize_ILb0EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_(%"class.v8::internal::JsonStringifier"* %0, i64* %916, i1 zeroext false, i64* %937) #7
  switch i32 %938, label %1130 [
    i32 0, label %939
    i32 1, label %992
  ]

939:                                              ; preds = %936
  %940 = load i32, i32* %320, align 8
  %941 = icmp eq i32 %940, 0
  %942 = load i64*, i64** %323, align 8
  %943 = load i64, i64* %942, align 8
  %944 = load i32, i32* %326, align 4
  %945 = add nsw i32 %944, 1
  store i32 %945, i32* %326, align 4
  br i1 %941, label %955, label %946

946:                                              ; preds = %939
  %947 = shl nsw i32 %944, 1
  %948 = sext i32 %947 to i64
  %949 = add i64 %943, 11
  %950 = add i64 %949, %948
  %951 = inttoptr i64 %950 to i16*
  store i16 110, i16* %951, align 2
  %952 = load i32, i32* %326, align 4
  %953 = load i32, i32* %744, align 8
  %954 = icmp eq i32 %952, %953
  br i1 %954, label %977, label %979

955:                                              ; preds = %939
  %956 = sext i32 %944 to i64
  %957 = add i64 %943, 11
  %958 = add i64 %957, %956
  %959 = inttoptr i64 %958 to i8*
  store i8 110, i8* %959, align 1
  %960 = load i32, i32* %326, align 4
  %961 = load i32, i32* %744, align 8
  %962 = icmp eq i32 %960, %961
  br i1 %962, label %963, label %965

963:                                              ; preds = %955
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  %964 = load i32, i32* %326, align 4
  br label %965

965:                                              ; preds = %963, %955
  %966 = phi i32 [ %964, %963 ], [ %960, %955 ]
  %967 = load i64*, i64** %323, align 8
  %968 = load i64, i64* %967, align 8
  %969 = add nsw i32 %966, 1
  store i32 %969, i32* %326, align 4
  %970 = sext i32 %966 to i64
  %971 = add i64 %968, 11
  %972 = add i64 %971, %970
  %973 = inttoptr i64 %972 to i8*
  store i8 117, i8* %973, align 1
  %974 = load i32, i32* %326, align 4
  %975 = load i32, i32* %744, align 8
  %976 = icmp eq i32 %974, %975
  br i1 %976, label %1846, label %1848

977:                                              ; preds = %946
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  %978 = load i32, i32* %326, align 4
  br label %979

979:                                              ; preds = %977, %946
  %980 = phi i32 [ %978, %977 ], [ %952, %946 ]
  %981 = load i64*, i64** %323, align 8
  %982 = load i64, i64* %981, align 8
  %983 = add nsw i32 %980, 1
  store i32 %983, i32* %326, align 4
  %984 = shl nsw i32 %980, 1
  %985 = sext i32 %984 to i64
  %986 = add i64 %982, 11
  %987 = add i64 %986, %985
  %988 = inttoptr i64 %987 to i16*
  store i16 117, i16* %988, align 2
  %989 = load i32, i32* %326, align 4
  %990 = load i32, i32* %744, align 8
  %991 = icmp eq i32 %989, %990
  br i1 %991, label %1815, label %1817

992:                                              ; preds = %1862, %1874, %1832, %1845, %936
  %993 = add nuw i32 %747, 1
  %994 = icmp eq i32 %993, %318
  br i1 %994, label %1004, label %746

995:                                              ; preds = %755, %746, %393, %740, %543, %356, %350
  %996 = phi i32 [ 0, %356 ], [ 0, %543 ], [ 0, %350 ], [ 0, %393 ], [ 0, %740 ], [ %747, %746 ], [ %747, %755 ]
  %997 = icmp ult i32 %996, %318
  br i1 %997, label %998, label %1004

998:                                              ; preds = %995
  %999 = tail call i32 @_ZN2v88internal15JsonStringifier22SerializeArrayLikeSlowENS0_6HandleINS0_10JSReceiverEEEjj(%"class.v8::internal::JsonStringifier"* %0, i64* %61, i32 %996, i32 %318) #7
  %1000 = icmp eq i32 %999, 1
  br i1 %1000, label %1001, label %1130

1001:                                             ; preds = %998
  %1002 = load i32, i32* %351, align 8
  %1003 = add nsw i32 %1002, -1
  store i32 %1003, i32* %351, align 8
  br label %1008

1004:                                             ; preds = %992, %704, %529, %995
  %1005 = load i32, i32* %351, align 8
  %1006 = add nsw i32 %1005, -1
  store i32 %1006, i32* %351, align 8
  %1007 = icmp eq i32 %318, 0
  br i1 %1007, label %1098, label %1008

1008:                                             ; preds = %1001, %1004
  %1009 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %1010 = load i16*, i16** %1009, align 8
  %1011 = icmp eq i16* %1010, null
  br i1 %1011, label %1098, label %1012

1012:                                             ; preds = %1008
  %1013 = load i32, i32* %320, align 8
  %1014 = icmp eq i32 %1013, 0
  %1015 = load i64*, i64** %323, align 8
  %1016 = load i64, i64* %1015, align 8
  %1017 = load i32, i32* %326, align 4
  %1018 = add nsw i32 %1017, 1
  store i32 %1018, i32* %326, align 4
  br i1 %1014, label %1019, label %1029

1019:                                             ; preds = %1012
  %1020 = sext i32 %1017 to i64
  %1021 = add i64 %1016, 11
  %1022 = add i64 %1021, %1020
  %1023 = inttoptr i64 %1022 to i8*
  store i8 10, i8* %1023, align 1
  %1024 = load i32, i32* %326, align 4
  %1025 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1026 = load i32, i32* %1025, align 8
  %1027 = icmp eq i32 %1024, %1026
  br i1 %1027, label %1028, label %1040

1028:                                             ; preds = %1019
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %1040

1029:                                             ; preds = %1012
  %1030 = shl nsw i32 %1017, 1
  %1031 = sext i32 %1030 to i64
  %1032 = add i64 %1016, 11
  %1033 = add i64 %1032, %1031
  %1034 = inttoptr i64 %1033 to i16*
  store i16 10, i16* %1034, align 2
  %1035 = load i32, i32* %326, align 4
  %1036 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1037 = load i32, i32* %1036, align 8
  %1038 = icmp eq i32 %1035, %1037
  br i1 %1038, label %1039, label %1040

1039:                                             ; preds = %1029
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %1040

1040:                                             ; preds = %1039, %1029, %1028, %1019
  %1041 = load i32, i32* %351, align 8
  %1042 = icmp sgt i32 %1041, 0
  br i1 %1042, label %1043, label %1098

1043:                                             ; preds = %1040
  %1044 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %1045

1045:                                             ; preds = %1094, %1043
  %1046 = phi i32 [ 0, %1043 ], [ %1095, %1094 ]
  %1047 = load i16*, i16** %1009, align 8
  %1048 = load i32, i32* %320, align 8
  %1049 = icmp eq i32 %1048, 0
  %1050 = load i16, i16* %1047, align 2
  %1051 = icmp eq i16 %1050, 0
  br i1 %1049, label %1053, label %1052

1052:                                             ; preds = %1045
  br i1 %1051, label %1094, label %1074

1053:                                             ; preds = %1045
  br i1 %1051, label %1094, label %1054

1054:                                             ; preds = %1053, %1071
  %1055 = phi i16 [ %1072, %1071 ], [ %1050, %1053 ]
  %1056 = phi i16* [ %1057, %1071 ], [ %1047, %1053 ]
  %1057 = getelementptr inbounds i16, i16* %1056, i64 1
  %1058 = load i64*, i64** %323, align 8
  %1059 = load i64, i64* %1058, align 8
  %1060 = load i32, i32* %326, align 4
  %1061 = add nsw i32 %1060, 1
  store i32 %1061, i32* %326, align 4
  %1062 = trunc i16 %1055 to i8
  %1063 = sext i32 %1060 to i64
  %1064 = add i64 %1059, 11
  %1065 = add i64 %1064, %1063
  %1066 = inttoptr i64 %1065 to i8*
  store i8 %1062, i8* %1066, align 1
  %1067 = load i32, i32* %326, align 4
  %1068 = load i32, i32* %1044, align 8
  %1069 = icmp eq i32 %1067, %1068
  br i1 %1069, label %1070, label %1071

1070:                                             ; preds = %1054
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %1071

1071:                                             ; preds = %1070, %1054
  %1072 = load i16, i16* %1057, align 2
  %1073 = icmp eq i16 %1072, 0
  br i1 %1073, label %1094, label %1054

1074:                                             ; preds = %1052, %1091
  %1075 = phi i16 [ %1092, %1091 ], [ %1050, %1052 ]
  %1076 = phi i16* [ %1077, %1091 ], [ %1047, %1052 ]
  %1077 = getelementptr inbounds i16, i16* %1076, i64 1
  %1078 = load i64*, i64** %323, align 8
  %1079 = load i64, i64* %1078, align 8
  %1080 = load i32, i32* %326, align 4
  %1081 = add nsw i32 %1080, 1
  store i32 %1081, i32* %326, align 4
  %1082 = shl nsw i32 %1080, 1
  %1083 = sext i32 %1082 to i64
  %1084 = add i64 %1079, 11
  %1085 = add i64 %1084, %1083
  %1086 = inttoptr i64 %1085 to i16*
  store i16 %1075, i16* %1086, align 2
  %1087 = load i32, i32* %326, align 4
  %1088 = load i32, i32* %1044, align 8
  %1089 = icmp eq i32 %1087, %1088
  br i1 %1089, label %1090, label %1091

1090:                                             ; preds = %1074
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %1091

1091:                                             ; preds = %1090, %1074
  %1092 = load i16, i16* %1077, align 2
  %1093 = icmp eq i16 %1092, 0
  br i1 %1093, label %1094, label %1074

1094:                                             ; preds = %1091, %1071, %1053, %1052
  %1095 = add nuw nsw i32 %1046, 1
  %1096 = load i32, i32* %351, align 8
  %1097 = icmp slt i32 %1095, %1096
  br i1 %1097, label %1045, label %1098

1098:                                             ; preds = %1094, %1008, %1040, %1004
  %1099 = load i32, i32* %320, align 8
  %1100 = icmp eq i32 %1099, 0
  %1101 = load i64*, i64** %323, align 8
  %1102 = load i64, i64* %1101, align 8
  %1103 = load i32, i32* %326, align 4
  %1104 = add nsw i32 %1103, 1
  store i32 %1104, i32* %326, align 4
  br i1 %1100, label %1105, label %1115

1105:                                             ; preds = %1098
  %1106 = sext i32 %1103 to i64
  %1107 = add i64 %1102, 11
  %1108 = add i64 %1107, %1106
  %1109 = inttoptr i64 %1108 to i8*
  store i8 93, i8* %1109, align 1
  %1110 = load i32, i32* %326, align 4
  %1111 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1112 = load i32, i32* %1111, align 8
  %1113 = icmp eq i32 %1110, %1112
  br i1 %1113, label %1114, label %1126

1114:                                             ; preds = %1105
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %1126

1115:                                             ; preds = %1098
  %1116 = shl nsw i32 %1103, 1
  %1117 = sext i32 %1116 to i64
  %1118 = add i64 %1102, 11
  %1119 = add i64 %1118, %1117
  %1120 = inttoptr i64 %1119 to i16*
  store i16 93, i16* %1120, align 2
  %1121 = load i32, i32* %326, align 4
  %1122 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1123 = load i32, i32* %1122, align 8
  %1124 = icmp eq i32 %1121, %1123
  br i1 %1124, label %1125, label %1126

1125:                                             ; preds = %1115
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %1126

1126:                                             ; preds = %1125, %1115, %1114, %1105
  %1127 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7, i32 0, i32 1
  %1128 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %1127, align 8
  %1129 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %1128, i64 -1
  store %"struct.std::__1::pair.1134"* %1129, %"struct.std::__1::pair.1134"** %1127, align 8
  br label %1130

1130:                                             ; preds = %936, %581, %406, %998, %1126, %268
  %1131 = phi i32 [ %278, %268 ], [ 1, %1126 ], [ %999, %998 ], [ 2, %406 ], [ 2, %581 ], [ %938, %936 ]
  %1132 = icmp eq %"class.v8::internal::Isolate"* %269, null
  br i1 %1132, label %1604, label %1133

1133:                                             ; preds = %1130
  %1134 = inttoptr i64 %272 to i64*
  %1135 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %270, i64 0, i32 0
  %1136 = load i64*, i64** %1135, align 8
  store i64 %272, i64* %271, align 8
  %1137 = load i32, i32* %275, align 8
  %1138 = add nsw i32 %1137, -1
  store i32 %1138, i32* %275, align 8
  %1139 = load i64*, i64** %273, align 8
  %1140 = icmp eq i64* %1139, %274
  br i1 %1140, label %1143, label %1141

1141:                                             ; preds = %1133
  store i64* %274, i64** %273, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %269) #7
  %1142 = load i64*, i64** %1135, align 8
  br label %1143

1143:                                             ; preds = %1141, %1133
  %1144 = phi i64* [ %1142, %1141 ], [ %1134, %1133 ]
  %1145 = phi i64* [ %274, %1141 ], [ %1136, %1133 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1144, i64* %1145) #7
  br label %1604

1146:                                             ; preds = %67
  %1147 = tail call i32 @_ZN2v88internal15JsonStringifier27SerializeJSPrimitiveWrapperENS0_6HandleINS0_18JSPrimitiveWrapperEEENS2_INS0_6ObjectEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %61, i64* %3)
  br label %1604

1148:                                             ; preds = %67
  %1149 = load atomic i32, i32* %70 monotonic, align 4
  %1150 = zext i32 %1149 to i64
  %1151 = or i64 %68, %1150
  %1152 = add i64 %1151, 7
  %1153 = inttoptr i64 %1152 to i16*
  %1154 = load atomic i16, i16* %1153 monotonic, align 2
  %1155 = icmp ult i16 %1154, 64
  br i1 %1155, label %1156, label %1157

1156:                                             ; preds = %1148
  tail call void @_ZN2v88internal15JsonStringifier15SerializeStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %61)
  br label %1604

1157:                                             ; preds = %1148
  %1158 = load atomic i32, i32* %70 monotonic, align 4
  %1159 = zext i32 %1158 to i64
  %1160 = or i64 %68, %1159
  %1161 = add i64 %1160, 9
  %1162 = inttoptr i64 %1161 to i8*
  %1163 = load atomic i8, i8* %1162 monotonic, align 1
  %1164 = and i8 %1163, 2
  %1165 = icmp eq i8 %1164, 0
  br i1 %1165, label %1166, label %1604

1166:                                             ; preds = %1157
  %1167 = load atomic i32, i32* %70 monotonic, align 4
  %1168 = zext i32 %1167 to i64
  %1169 = or i64 %68, %1168
  %1170 = add i64 %1169, 7
  %1171 = inttoptr i64 %1170 to i16*
  %1172 = load atomic i16, i16* %1171 monotonic, align 2
  %1173 = icmp eq i16 %1172, 188
  br i1 %1173, label %1174, label %1176

1174:                                             ; preds = %1166
  %1175 = tail call i32 @_ZN2v88internal15JsonStringifier16SerializeJSProxyENS0_6HandleINS0_7JSProxyEEENS2_INS0_6ObjectEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %61, i64* %3)
  br label %1604

1176:                                             ; preds = %1166
  %1177 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %1178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1177, i64 0, i32 31
  %1179 = bitcast %"struct.v8::internal::HandleScopeData"* %1178 to i64*
  %1180 = load i64, i64* %1179, align 8
  %1181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1177, i64 0, i32 31, i32 1
  %1182 = load i64*, i64** %1181, align 8
  %1183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1177, i64 0, i32 31, i32 2
  %1184 = load i32, i32* %1183, align 8
  %1185 = add nsw i32 %1184, 1
  store i32 %1185, i32* %1183, align 8
  %1186 = tail call i32 @_ZN2v88internal15JsonStringifier9StackPushENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::JsonStringifier"* %0, i64* %61, i64* %3) #7
  %1187 = icmp eq i32 %1186, 1
  br i1 %1187, label %1188, label %1588

1188:                                             ; preds = %1176
  %1189 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 3, i32 0, i32 0
  %1190 = load i64*, i64** %1189, align 8
  %1191 = icmp eq i64* %1190, null
  br i1 %1191, label %1192, label %1581

1192:                                             ; preds = %1188
  %1193 = load i64, i64* %61, align 8
  %1194 = and i64 %1193, -4294967296
  %1195 = add i64 %1193, -1
  %1196 = inttoptr i64 %1195 to i32*
  %1197 = load atomic i32, i32* %1196 monotonic, align 4
  %1198 = zext i32 %1197 to i64
  %1199 = or i64 %1194, %1198
  %1200 = add i64 %1199, 7
  %1201 = inttoptr i64 %1200 to i16*
  %1202 = load atomic i16, i16* %1201 monotonic, align 2
  %1203 = icmp ult i16 %1202, 1042
  br i1 %1203, label %1581, label %1204

1204:                                             ; preds = %1192
  %1205 = load atomic i32, i32* %1196 monotonic, align 4
  %1206 = zext i32 %1205 to i64
  %1207 = or i64 %1194, %1206
  %1208 = add i64 %1207, 11
  %1209 = inttoptr i64 %1208 to i32*
  %1210 = load atomic i32, i32* %1209 monotonic, align 4
  %1211 = and i32 %1210, 2097152
  %1212 = icmp eq i32 %1211, 0
  br i1 %1212, label %1213, label %1581

1213:                                             ; preds = %1204
  %1214 = add i64 %1193, 7
  %1215 = inttoptr i64 %1214 to i32*
  %1216 = load i32, i32* %1215, align 4
  %1217 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %1218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1217, i64 0, i32 0, i32 7, i32 0, i64 29
  %1219 = load i64, i64* %1218, align 8
  %1220 = trunc i64 %1219 to i32
  %1221 = icmp eq i32 %1216, %1220
  br i1 %1221, label %1227, label %1222

1222:                                             ; preds = %1213
  %1223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1217, i64 0, i32 0, i32 7, i32 0, i64 111
  %1224 = load i64, i64* %1223, align 8
  %1225 = trunc i64 %1224 to i32
  %1226 = icmp eq i32 %1216, %1225
  br i1 %1226, label %1227, label %1581

1227:                                             ; preds = %1213, %1222
  %1228 = load atomic i32, i32* %1196 monotonic, align 4
  %1229 = zext i32 %1228 to i64
  %1230 = or i64 %1194, %1229
  %1231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1217, i64 0, i32 31, i32 4
  %1232 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %1231, align 8
  %1233 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1232, null
  br i1 %1233, label %1236, label %1234

1234:                                             ; preds = %1227
  %1235 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1232, i64 %1230) #7
  br label %1249

1236:                                             ; preds = %1227
  %1237 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1217, i64 0, i32 31, i32 0
  %1238 = load i64*, i64** %1237, align 8
  %1239 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1217, i64 0, i32 31, i32 1
  %1240 = load i64*, i64** %1239, align 8
  %1241 = icmp eq i64* %1238, %1240
  br i1 %1241, label %1242, label %1244

1242:                                             ; preds = %1236
  %1243 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1217) #7
  br label %1244

1244:                                             ; preds = %1242, %1236
  %1245 = phi i64* [ %1243, %1242 ], [ %1238, %1236 ]
  %1246 = ptrtoint i64* %1245 to i64
  %1247 = add i64 %1246, 8
  %1248 = inttoptr i64 %1247 to i64*
  store i64* %1248, i64** %1237, align 8
  store i64 %1230, i64* %1245, align 8
  br label %1249

1249:                                             ; preds = %1244, %1234
  %1250 = phi i64* [ %1235, %1234 ], [ %1245, %1244 ]
  %1251 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %1252 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %1253 = load i32, i32* %1252, align 8
  %1254 = icmp eq i32 %1253, 0
  %1255 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %1256 = load i64*, i64** %1255, align 8
  %1257 = load i64, i64* %1256, align 8
  %1258 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %1259 = load i32, i32* %1258, align 4
  %1260 = add nsw i32 %1259, 1
  store i32 %1260, i32* %1258, align 4
  br i1 %1254, label %1261, label %1271

1261:                                             ; preds = %1249
  %1262 = sext i32 %1259 to i64
  %1263 = add i64 %1257, 11
  %1264 = add i64 %1263, %1262
  %1265 = inttoptr i64 %1264 to i8*
  store i8 123, i8* %1265, align 1
  %1266 = load i32, i32* %1258, align 4
  %1267 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1268 = load i32, i32* %1267, align 8
  %1269 = icmp eq i32 %1266, %1268
  br i1 %1269, label %1270, label %1282

1270:                                             ; preds = %1261
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1251) #7
  br label %1282

1271:                                             ; preds = %1249
  %1272 = shl nsw i32 %1259, 1
  %1273 = sext i32 %1272 to i64
  %1274 = add i64 %1257, 11
  %1275 = add i64 %1274, %1273
  %1276 = inttoptr i64 %1275 to i16*
  store i16 123, i16* %1276, align 2
  %1277 = load i32, i32* %1258, align 4
  %1278 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1279 = load i32, i32* %1278, align 8
  %1280 = icmp eq i32 %1277, %1279
  br i1 %1280, label %1281, label %1282

1281:                                             ; preds = %1271
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1251) #7
  br label %1282

1282:                                             ; preds = %1281, %1271, %1270, %1261
  %1283 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %1284 = load i32, i32* %1283, align 8
  %1285 = add nsw i32 %1284, 1
  store i32 %1285, i32* %1283, align 8
  %1286 = load i64, i64* %1250, align 8
  %1287 = add i64 %1286, 11
  %1288 = inttoptr i64 %1287 to i32*
  %1289 = load atomic i32, i32* %1288 acquire, align 4
  %1290 = lshr i32 %1289, 10
  %1291 = and i32 %1290, 1023
  %1292 = zext i32 %1291 to i64
  %1293 = icmp eq i32 %1291, 0
  br i1 %1293, label %1294, label %1297

1294:                                             ; preds = %1282
  %1295 = load i32, i32* %1283, align 8
  %1296 = add nsw i32 %1295, -1
  store i32 %1296, i32* %1283, align 8
  br label %1553

1297:                                             ; preds = %1282
  %1298 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %5, i64 0, i32 0
  br label %1299

1299:                                             ; preds = %1297, %1454
  %1300 = phi i8 [ 0, %1297 ], [ %1455, %1454 ]
  %1301 = phi i64 [ 0, %1297 ], [ %1456, %1454 ]
  %1302 = load i64, i64* %1250, align 8
  %1303 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %1304 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1303, i64 0, i32 0, i32 4
  %1305 = load i64, i64* %1304, align 8
  %1306 = add i64 %1302, 23
  %1307 = inttoptr i64 %1306 to i32*
  %1308 = load i32, i32* %1307, align 4
  %1309 = and i64 %1305, 4294967295
  %1310 = icmp eq i64 %1309, 0
  tail call void @llvm.assume(i1 %1310) #7
  %1311 = zext i32 %1308 to i64
  %1312 = or i64 %1305, %1311
  %1313 = mul nuw nsw i64 %1301, 51539607552
  %1314 = add nuw nsw i64 %1313, 68719476736
  %1315 = lshr exact i64 %1314, 32
  %1316 = add nsw i64 %1315, -1
  %1317 = add i64 %1316, %1312
  %1318 = inttoptr i64 %1317 to i32*
  %1319 = load atomic i32, i32* %1318 monotonic, align 4
  %1320 = zext i32 %1319 to i64
  %1321 = or i64 %1305, %1320
  %1322 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1303, i64 0, i32 31, i32 4
  %1323 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %1322, align 8
  %1324 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1323, null
  br i1 %1324, label %1328, label %1325

1325:                                             ; preds = %1299
  %1326 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1323, i64 %1321) #7
  %1327 = load i64, i64* %1326, align 8
  br label %1341

1328:                                             ; preds = %1299
  %1329 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1303, i64 0, i32 31, i32 0
  %1330 = load i64*, i64** %1329, align 8
  %1331 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1303, i64 0, i32 31, i32 1
  %1332 = load i64*, i64** %1331, align 8
  %1333 = icmp eq i64* %1330, %1332
  br i1 %1333, label %1334, label %1336

1334:                                             ; preds = %1328
  %1335 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1303) #7
  br label %1336

1336:                                             ; preds = %1334, %1328
  %1337 = phi i64* [ %1335, %1334 ], [ %1330, %1328 ]
  %1338 = ptrtoint i64* %1337 to i64
  %1339 = add i64 %1338, 8
  %1340 = inttoptr i64 %1339 to i64*
  store i64* %1340, i64** %1329, align 8
  store i64 %1321, i64* %1337, align 8
  br label %1341

1341:                                             ; preds = %1336, %1325
  %1342 = phi i64 [ %1327, %1325 ], [ %1321, %1336 ]
  %1343 = phi i64* [ %1326, %1325 ], [ %1337, %1336 ]
  %1344 = and i64 %1342, -4294967296
  %1345 = add i64 %1342, -1
  %1346 = inttoptr i64 %1345 to i32*
  %1347 = load atomic i32, i32* %1346 monotonic, align 4
  %1348 = zext i32 %1347 to i64
  %1349 = or i64 %1344, %1348
  %1350 = add i64 %1349, 7
  %1351 = inttoptr i64 %1350 to i16*
  %1352 = load atomic i16, i16* %1351 monotonic, align 2
  %1353 = icmp ult i16 %1352, 64
  br i1 %1353, label %1354, label %1454

1354:                                             ; preds = %1341
  %1355 = load i64, i64* %1250, align 8
  %1356 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %1357 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1356, i64 0, i32 0, i32 4
  %1358 = load i64, i64* %1357, align 8
  %1359 = add i64 %1355, 23
  %1360 = inttoptr i64 %1359 to i32*
  %1361 = load i32, i32* %1360, align 4
  %1362 = and i64 %1358, 4294967295
  %1363 = icmp eq i64 %1362, 0
  tail call void @llvm.assume(i1 %1363) #7
  %1364 = zext i32 %1361 to i64
  %1365 = or i64 %1358, %1364
  %1366 = or i64 %1315, 3
  %1367 = add i64 %1365, %1366
  %1368 = inttoptr i64 %1367 to i32*
  %1369 = load atomic i32, i32* %1368 monotonic, align 4
  %1370 = lshr i32 %1369, 7
  %1371 = and i32 %1369, 32
  %1372 = icmp eq i32 %1371, 0
  br i1 %1372, label %1373, label %1454

1373:                                             ; preds = %1354
  %1374 = and i32 %1369, 4
  %1375 = icmp eq i32 %1374, 0
  br i1 %1375, label %1376, label %1441

1376:                                             ; preds = %1373
  %1377 = load i64, i64* %61, align 8
  %1378 = add i64 %1377, -1
  %1379 = inttoptr i64 %1378 to i32*
  %1380 = load atomic i32, i32* %1379 monotonic, align 4
  %1381 = trunc i64 %1355 to i32
  %1382 = icmp eq i32 %1380, %1381
  br i1 %1382, label %1383, label %1441

1383:                                             ; preds = %1376
  %1384 = and i64 %1355, -4294967296
  %1385 = load atomic i32, i32* %1360 monotonic, align 4
  %1386 = zext i32 %1385 to i64
  %1387 = or i64 %1384, %1386
  %1388 = add i64 %1387, %1366
  %1389 = inttoptr i64 %1388 to i32*
  %1390 = load atomic i32, i32* %1389 monotonic, align 4
  %1391 = ashr i32 %1390, 1
  %1392 = lshr i32 %1391, 19
  %1393 = and i32 %1392, 1023
  %1394 = lshr i32 %1391, 6
  %1395 = trunc i32 %1394 to i8
  %1396 = and i8 %1395, 7
  %1397 = add i64 %1355, 3
  %1398 = inttoptr i64 %1397 to i8*
  %1399 = load atomic i8, i8* %1398 monotonic, align 1
  %1400 = zext i8 %1399 to i32
  %1401 = add i64 %1355, 4
  %1402 = inttoptr i64 %1401 to i8*
  %1403 = load atomic i8, i8* %1402 monotonic, align 1
  %1404 = zext i8 %1403 to i32
  %1405 = sub nsw i32 %1400, %1404
  %1406 = icmp slt i32 %1393, %1405
  br i1 %1406, label %1407, label %1415

1407:                                             ; preds = %1383
  %1408 = load atomic i8, i8* %1402 monotonic, align 1
  %1409 = zext i8 %1408 to i64
  %1410 = shl nuw nsw i64 %1409, 28
  %1411 = load atomic i8, i8* %1402 monotonic, align 1
  %1412 = zext i8 %1411 to i32
  %1413 = add nuw nsw i32 %1393, %1412
  %1414 = shl nuw nsw i32 %1413, 2
  br label %1419

1415:                                             ; preds = %1383
  %1416 = sub nsw i32 %1393, %1405
  %1417 = shl nsw i32 %1416, 2
  %1418 = add nsw i32 %1417, 8
  br label %1419

1419:                                             ; preds = %1415, %1407
  %1420 = phi i32 [ %1414, %1407 ], [ %1418, %1415 ]
  %1421 = phi i64 [ %1410, %1407 ], [ 536870912, %1415 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1298) #7
  store i8 %1396, i8* %1298, align 1
  %1422 = icmp ult i8 %1396, 5
  br i1 %1422, label %1425, label %1423

1423:                                             ; preds = %1419
  %1424 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %5) #7
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i8* %1424) #7
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #14
  unreachable

1425:                                             ; preds = %1419
  %1426 = zext i8 %1396 to i64
  %1427 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZN2v88internal15JsonStringifier10Serialize_ILb1EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_, i64 0, i64 %1426
  %1428 = load i64, i64* %1427, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1298) #7
  %1429 = zext i1 %1406 to i64
  %1430 = shl nuw nsw i64 %1429, 13
  %1431 = sext i32 %1420 to i64
  %1432 = sext i32 %1405 to i64
  %1433 = shl nsw i64 %1432, 16
  %1434 = or i64 %1430, %1433
  %1435 = or i64 %1434, %1431
  %1436 = or i64 %1435, %1421
  %1437 = or i64 %1436, %1428
  %1438 = trunc i32 %1370 to i8
  %1439 = and i8 %1438, 7
  %1440 = tail call i64* @_ZN2v88internal8JSObject14FastPropertyAtENS0_6HandleIS1_EENS0_14RepresentationENS0_10FieldIndexE(i64* %61, i8 %1439, i64 %1437) #7
  br label %1444

1441:                                             ; preds = %1373, %1376
  %1442 = tail call i64* @_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %1356, i64* %61, i64* %1343) #7
  %1443 = icmp eq i64* %1442, null
  br i1 %1443, label %1588, label %1444

1444:                                             ; preds = %1441, %1425
  %1445 = phi i64* [ %1440, %1425 ], [ %1442, %1441 ]
  %1446 = and i8 %1300, 1
  %1447 = icmp ne i8 %1446, 0
  %1448 = tail call i32 @_ZN2v88internal15JsonStringifier10Serialize_ILb1EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_(%"class.v8::internal::JsonStringifier"* %0, i64* %1445, i1 zeroext %1447, i64* %1343) #7
  %1449 = xor i1 %1447, true
  %1450 = icmp eq i32 %1448, 1
  %1451 = and i1 %1450, %1449
  %1452 = select i1 %1451, i8 1, i8 %1300
  %1453 = icmp eq i32 %1448, 2
  br i1 %1453, label %1588, label %1454

1454:                                             ; preds = %1354, %1341, %1444
  %1455 = phi i8 [ %1452, %1444 ], [ %1300, %1354 ], [ %1300, %1341 ]
  %1456 = add nuw nsw i64 %1301, 1
  %1457 = icmp eq i64 %1456, %1292
  br i1 %1457, label %1458, label %1299

1458:                                             ; preds = %1454
  %1459 = load i32, i32* %1283, align 8
  %1460 = add nsw i32 %1459, -1
  store i32 %1460, i32* %1283, align 8
  %1461 = and i8 %1455, 1
  %1462 = icmp eq i8 %1461, 0
  br i1 %1462, label %1553, label %1463

1463:                                             ; preds = %1458
  %1464 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %1465 = load i16*, i16** %1464, align 8
  %1466 = icmp eq i16* %1465, null
  br i1 %1466, label %1553, label %1467

1467:                                             ; preds = %1463
  %1468 = load i32, i32* %1252, align 8
  %1469 = icmp eq i32 %1468, 0
  %1470 = load i64*, i64** %1255, align 8
  %1471 = load i64, i64* %1470, align 8
  %1472 = load i32, i32* %1258, align 4
  %1473 = add nsw i32 %1472, 1
  store i32 %1473, i32* %1258, align 4
  br i1 %1469, label %1474, label %1484

1474:                                             ; preds = %1467
  %1475 = sext i32 %1472 to i64
  %1476 = add i64 %1471, 11
  %1477 = add i64 %1476, %1475
  %1478 = inttoptr i64 %1477 to i8*
  store i8 10, i8* %1478, align 1
  %1479 = load i32, i32* %1258, align 4
  %1480 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1481 = load i32, i32* %1480, align 8
  %1482 = icmp eq i32 %1479, %1481
  br i1 %1482, label %1483, label %1495

1483:                                             ; preds = %1474
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1251) #7
  br label %1495

1484:                                             ; preds = %1467
  %1485 = shl nsw i32 %1472, 1
  %1486 = sext i32 %1485 to i64
  %1487 = add i64 %1471, 11
  %1488 = add i64 %1487, %1486
  %1489 = inttoptr i64 %1488 to i16*
  store i16 10, i16* %1489, align 2
  %1490 = load i32, i32* %1258, align 4
  %1491 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1492 = load i32, i32* %1491, align 8
  %1493 = icmp eq i32 %1490, %1492
  br i1 %1493, label %1494, label %1495

1494:                                             ; preds = %1484
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1251) #7
  br label %1495

1495:                                             ; preds = %1494, %1484, %1483, %1474
  %1496 = load i32, i32* %1283, align 8
  %1497 = icmp sgt i32 %1496, 0
  br i1 %1497, label %1498, label %1553

1498:                                             ; preds = %1495
  %1499 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %1500

1500:                                             ; preds = %1549, %1498
  %1501 = phi i32 [ 0, %1498 ], [ %1550, %1549 ]
  %1502 = load i16*, i16** %1464, align 8
  %1503 = load i32, i32* %1252, align 8
  %1504 = icmp eq i32 %1503, 0
  %1505 = load i16, i16* %1502, align 2
  %1506 = icmp eq i16 %1505, 0
  br i1 %1504, label %1508, label %1507

1507:                                             ; preds = %1500
  br i1 %1506, label %1549, label %1529

1508:                                             ; preds = %1500
  br i1 %1506, label %1549, label %1509

1509:                                             ; preds = %1508, %1526
  %1510 = phi i16 [ %1527, %1526 ], [ %1505, %1508 ]
  %1511 = phi i16* [ %1512, %1526 ], [ %1502, %1508 ]
  %1512 = getelementptr inbounds i16, i16* %1511, i64 1
  %1513 = load i64*, i64** %1255, align 8
  %1514 = load i64, i64* %1513, align 8
  %1515 = load i32, i32* %1258, align 4
  %1516 = add nsw i32 %1515, 1
  store i32 %1516, i32* %1258, align 4
  %1517 = trunc i16 %1510 to i8
  %1518 = sext i32 %1515 to i64
  %1519 = add i64 %1514, 11
  %1520 = add i64 %1519, %1518
  %1521 = inttoptr i64 %1520 to i8*
  store i8 %1517, i8* %1521, align 1
  %1522 = load i32, i32* %1258, align 4
  %1523 = load i32, i32* %1499, align 8
  %1524 = icmp eq i32 %1522, %1523
  br i1 %1524, label %1525, label %1526

1525:                                             ; preds = %1509
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1251) #7
  br label %1526

1526:                                             ; preds = %1525, %1509
  %1527 = load i16, i16* %1512, align 2
  %1528 = icmp eq i16 %1527, 0
  br i1 %1528, label %1549, label %1509

1529:                                             ; preds = %1507, %1546
  %1530 = phi i16 [ %1547, %1546 ], [ %1505, %1507 ]
  %1531 = phi i16* [ %1532, %1546 ], [ %1502, %1507 ]
  %1532 = getelementptr inbounds i16, i16* %1531, i64 1
  %1533 = load i64*, i64** %1255, align 8
  %1534 = load i64, i64* %1533, align 8
  %1535 = load i32, i32* %1258, align 4
  %1536 = add nsw i32 %1535, 1
  store i32 %1536, i32* %1258, align 4
  %1537 = shl nsw i32 %1535, 1
  %1538 = sext i32 %1537 to i64
  %1539 = add i64 %1534, 11
  %1540 = add i64 %1539, %1538
  %1541 = inttoptr i64 %1540 to i16*
  store i16 %1530, i16* %1541, align 2
  %1542 = load i32, i32* %1258, align 4
  %1543 = load i32, i32* %1499, align 8
  %1544 = icmp eq i32 %1542, %1543
  br i1 %1544, label %1545, label %1546

1545:                                             ; preds = %1529
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1251) #7
  br label %1546

1546:                                             ; preds = %1545, %1529
  %1547 = load i16, i16* %1532, align 2
  %1548 = icmp eq i16 %1547, 0
  br i1 %1548, label %1549, label %1529

1549:                                             ; preds = %1546, %1526, %1508, %1507
  %1550 = add nuw nsw i32 %1501, 1
  %1551 = load i32, i32* %1283, align 8
  %1552 = icmp slt i32 %1550, %1551
  br i1 %1552, label %1500, label %1553

1553:                                             ; preds = %1549, %1294, %1463, %1495, %1458
  %1554 = load i32, i32* %1252, align 8
  %1555 = icmp eq i32 %1554, 0
  %1556 = load i64*, i64** %1255, align 8
  %1557 = load i64, i64* %1556, align 8
  %1558 = load i32, i32* %1258, align 4
  %1559 = add nsw i32 %1558, 1
  store i32 %1559, i32* %1258, align 4
  br i1 %1555, label %1560, label %1570

1560:                                             ; preds = %1553
  %1561 = sext i32 %1558 to i64
  %1562 = add i64 %1557, 11
  %1563 = add i64 %1562, %1561
  %1564 = inttoptr i64 %1563 to i8*
  store i8 125, i8* %1564, align 1
  %1565 = load i32, i32* %1258, align 4
  %1566 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1567 = load i32, i32* %1566, align 8
  %1568 = icmp eq i32 %1565, %1567
  br i1 %1568, label %1569, label %1584

1569:                                             ; preds = %1560
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1251) #7
  br label %1584

1570:                                             ; preds = %1553
  %1571 = shl nsw i32 %1558, 1
  %1572 = sext i32 %1571 to i64
  %1573 = add i64 %1557, 11
  %1574 = add i64 %1573, %1572
  %1575 = inttoptr i64 %1574 to i16*
  store i16 125, i16* %1575, align 2
  %1576 = load i32, i32* %1258, align 4
  %1577 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1578 = load i32, i32* %1577, align 8
  %1579 = icmp eq i32 %1576, %1578
  br i1 %1579, label %1580, label %1584

1580:                                             ; preds = %1570
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1251) #7
  br label %1584

1581:                                             ; preds = %1188, %1192, %1204, %1222
  %1582 = tail call i32 @_ZN2v88internal15JsonStringifier23SerializeJSReceiverSlowENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %61) #7
  %1583 = icmp eq i32 %1582, 1
  br i1 %1583, label %1584, label %1588

1584:                                             ; preds = %1560, %1569, %1570, %1580, %1581
  %1585 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7, i32 0, i32 1
  %1586 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %1585, align 8
  %1587 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %1586, i64 -1
  store %"struct.std::__1::pair.1134"* %1587, %"struct.std::__1::pair.1134"** %1585, align 8
  br label %1588

1588:                                             ; preds = %1444, %1441, %1584, %1581, %1176
  %1589 = phi i32 [ 1, %1584 ], [ %1582, %1581 ], [ %1186, %1176 ], [ 2, %1441 ], [ 2, %1444 ]
  %1590 = icmp eq %"class.v8::internal::Isolate"* %1177, null
  br i1 %1590, label %1604, label %1591

1591:                                             ; preds = %1588
  %1592 = inttoptr i64 %1180 to i64*
  %1593 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %1178, i64 0, i32 0
  %1594 = load i64*, i64** %1593, align 8
  store i64 %1180, i64* %1179, align 8
  %1595 = load i32, i32* %1183, align 8
  %1596 = add nsw i32 %1595, -1
  store i32 %1596, i32* %1183, align 8
  %1597 = load i64*, i64** %1181, align 8
  %1598 = icmp eq i64* %1597, %1182
  br i1 %1598, label %1601, label %1599

1599:                                             ; preds = %1591
  store i64* %1182, i64** %1181, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %1177) #7
  %1600 = load i64*, i64** %1593, align 8
  br label %1601

1601:                                             ; preds = %1599, %1591
  %1602 = phi i64* [ %1600, %1599 ], [ %1592, %1591 ]
  %1603 = phi i64* [ %1182, %1599 ], [ %1594, %1591 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %1602, i64* %1603) #7
  br label %1604

1604:                                             ; preds = %1801, %1814, %1771, %1783, %1741, %1754, %1711, %1723, %1681, %1694, %1636, %1648, %1157, %1601, %1588, %1143, %1130, %57, %46, %67, %88, %13, %1174, %1156, %1146, %82, %77, %65
  %1605 = phi i32 [ 1, %65 ], [ 1, %1156 ], [ %1175, %1174 ], [ %1147, %1146 ], [ 2, %82 ], [ 1, %77 ], [ 2, %13 ], [ 0, %88 ], [ 0, %67 ], [ 0, %1157 ], [ 2, %46 ], [ 2, %57 ], [ %1131, %1130 ], [ %1131, %1143 ], [ %1589, %1588 ], [ %1589, %1601 ], [ 1, %1648 ], [ 1, %1636 ], [ 1, %1694 ], [ 1, %1681 ], [ 1, %1723 ], [ 1, %1711 ], [ 1, %1754 ], [ 1, %1741 ], [ 1, %1783 ], [ 1, %1771 ], [ 1, %1814 ], [ 1, %1801 ]
  ret i32 %1605

1606:                                             ; preds = %125
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %95) #7
  %1607 = load i32, i32* %100, align 4
  br label %1608

1608:                                             ; preds = %1606, %125
  %1609 = phi i32 [ %1607, %1606 ], [ %134, %125 ]
  %1610 = load i64*, i64** %99, align 8
  %1611 = load i64, i64* %1610, align 8
  %1612 = add nsw i32 %1609, 1
  store i32 %1612, i32* %100, align 4
  %1613 = sext i32 %1609 to i64
  %1614 = add i64 %1611, 11
  %1615 = add i64 %1614, %1613
  %1616 = inttoptr i64 %1615 to i8*
  store i8 108, i8* %1616, align 1
  %1617 = load i32, i32* %100, align 4
  %1618 = load i32, i32* %101, align 8
  %1619 = icmp eq i32 %1617, %1618
  br i1 %1619, label %1620, label %1622

1620:                                             ; preds = %1608
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %95) #7
  %1621 = load i32, i32* %100, align 4
  br label %1622

1622:                                             ; preds = %1620, %1608
  %1623 = phi i32 [ %1621, %1620 ], [ %1617, %1608 ]
  %1624 = load i64*, i64** %99, align 8
  %1625 = load i64, i64* %1624, align 8
  %1626 = add nsw i32 %1623, 1
  store i32 %1626, i32* %100, align 4
  %1627 = sext i32 %1623 to i64
  %1628 = add i64 %1625, 11
  %1629 = add i64 %1628, %1627
  %1630 = inttoptr i64 %1629 to i8*
  store i8 115, i8* %1630, align 1
  %1631 = load i32, i32* %100, align 4
  %1632 = load i32, i32* %101, align 8
  %1633 = icmp eq i32 %1631, %1632
  br i1 %1633, label %1634, label %1636

1634:                                             ; preds = %1622
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %95) #7
  %1635 = load i32, i32* %100, align 4
  br label %1636

1636:                                             ; preds = %1634, %1622
  %1637 = phi i32 [ %1635, %1634 ], [ %1631, %1622 ]
  %1638 = load i64*, i64** %99, align 8
  %1639 = load i64, i64* %1638, align 8
  %1640 = add nsw i32 %1637, 1
  store i32 %1640, i32* %100, align 4
  %1641 = sext i32 %1637 to i64
  %1642 = add i64 %1639, 11
  %1643 = add i64 %1642, %1641
  %1644 = inttoptr i64 %1643 to i8*
  store i8 101, i8* %1644, align 1
  %1645 = load i32, i32* %100, align 4
  %1646 = load i32, i32* %101, align 8
  %1647 = icmp eq i32 %1645, %1646
  br i1 %1647, label %1648, label %1604

1648:                                             ; preds = %1636
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %95) #7
  br label %1604

1649:                                             ; preds = %139
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %95) #7
  %1650 = load i32, i32* %100, align 4
  br label %1651

1651:                                             ; preds = %1649, %139
  %1652 = phi i32 [ %1650, %1649 ], [ %149, %139 ]
  %1653 = load i64*, i64** %99, align 8
  %1654 = load i64, i64* %1653, align 8
  %1655 = add nsw i32 %1652, 1
  store i32 %1655, i32* %100, align 4
  %1656 = shl nsw i32 %1652, 1
  %1657 = sext i32 %1656 to i64
  %1658 = add i64 %1654, 11
  %1659 = add i64 %1658, %1657
  %1660 = inttoptr i64 %1659 to i16*
  store i16 108, i16* %1660, align 2
  %1661 = load i32, i32* %100, align 4
  %1662 = load i32, i32* %101, align 8
  %1663 = icmp eq i32 %1661, %1662
  br i1 %1663, label %1664, label %1666

1664:                                             ; preds = %1651
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %95) #7
  %1665 = load i32, i32* %100, align 4
  br label %1666

1666:                                             ; preds = %1664, %1651
  %1667 = phi i32 [ %1665, %1664 ], [ %1661, %1651 ]
  %1668 = load i64*, i64** %99, align 8
  %1669 = load i64, i64* %1668, align 8
  %1670 = add nsw i32 %1667, 1
  store i32 %1670, i32* %100, align 4
  %1671 = shl nsw i32 %1667, 1
  %1672 = sext i32 %1671 to i64
  %1673 = add i64 %1669, 11
  %1674 = add i64 %1673, %1672
  %1675 = inttoptr i64 %1674 to i16*
  store i16 115, i16* %1675, align 2
  %1676 = load i32, i32* %100, align 4
  %1677 = load i32, i32* %101, align 8
  %1678 = icmp eq i32 %1676, %1677
  br i1 %1678, label %1679, label %1681

1679:                                             ; preds = %1666
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %95) #7
  %1680 = load i32, i32* %100, align 4
  br label %1681

1681:                                             ; preds = %1679, %1666
  %1682 = phi i32 [ %1680, %1679 ], [ %1676, %1666 ]
  %1683 = load i64*, i64** %99, align 8
  %1684 = load i64, i64* %1683, align 8
  %1685 = add nsw i32 %1682, 1
  store i32 %1685, i32* %100, align 4
  %1686 = shl nsw i32 %1682, 1
  %1687 = sext i32 %1686 to i64
  %1688 = add i64 %1684, 11
  %1689 = add i64 %1688, %1687
  %1690 = inttoptr i64 %1689 to i16*
  store i16 101, i16* %1690, align 2
  %1691 = load i32, i32* %100, align 4
  %1692 = load i32, i32* %101, align 8
  %1693 = icmp eq i32 %1691, %1692
  br i1 %1693, label %1694, label %1604

1694:                                             ; preds = %1681
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %95) #7
  br label %1604

1695:                                             ; preds = %183
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %153) #7
  %1696 = load i32, i32* %158, align 4
  br label %1697

1697:                                             ; preds = %1695, %183
  %1698 = phi i32 [ %1696, %1695 ], [ %192, %183 ]
  %1699 = load i64*, i64** %157, align 8
  %1700 = load i64, i64* %1699, align 8
  %1701 = add nsw i32 %1698, 1
  store i32 %1701, i32* %158, align 4
  %1702 = sext i32 %1698 to i64
  %1703 = add i64 %1700, 11
  %1704 = add i64 %1703, %1702
  %1705 = inttoptr i64 %1704 to i8*
  store i8 117, i8* %1705, align 1
  %1706 = load i32, i32* %158, align 4
  %1707 = load i32, i32* %159, align 8
  %1708 = icmp eq i32 %1706, %1707
  br i1 %1708, label %1709, label %1711

1709:                                             ; preds = %1697
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %153) #7
  %1710 = load i32, i32* %158, align 4
  br label %1711

1711:                                             ; preds = %1709, %1697
  %1712 = phi i32 [ %1710, %1709 ], [ %1706, %1697 ]
  %1713 = load i64*, i64** %157, align 8
  %1714 = load i64, i64* %1713, align 8
  %1715 = add nsw i32 %1712, 1
  store i32 %1715, i32* %158, align 4
  %1716 = sext i32 %1712 to i64
  %1717 = add i64 %1714, 11
  %1718 = add i64 %1717, %1716
  %1719 = inttoptr i64 %1718 to i8*
  store i8 101, i8* %1719, align 1
  %1720 = load i32, i32* %158, align 4
  %1721 = load i32, i32* %159, align 8
  %1722 = icmp eq i32 %1720, %1721
  br i1 %1722, label %1723, label %1604

1723:                                             ; preds = %1711
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %153) #7
  br label %1604

1724:                                             ; preds = %197
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %153) #7
  %1725 = load i32, i32* %158, align 4
  br label %1726

1726:                                             ; preds = %1724, %197
  %1727 = phi i32 [ %1725, %1724 ], [ %207, %197 ]
  %1728 = load i64*, i64** %157, align 8
  %1729 = load i64, i64* %1728, align 8
  %1730 = add nsw i32 %1727, 1
  store i32 %1730, i32* %158, align 4
  %1731 = shl nsw i32 %1727, 1
  %1732 = sext i32 %1731 to i64
  %1733 = add i64 %1729, 11
  %1734 = add i64 %1733, %1732
  %1735 = inttoptr i64 %1734 to i16*
  store i16 117, i16* %1735, align 2
  %1736 = load i32, i32* %158, align 4
  %1737 = load i32, i32* %159, align 8
  %1738 = icmp eq i32 %1736, %1737
  br i1 %1738, label %1739, label %1741

1739:                                             ; preds = %1726
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %153) #7
  %1740 = load i32, i32* %158, align 4
  br label %1741

1741:                                             ; preds = %1739, %1726
  %1742 = phi i32 [ %1740, %1739 ], [ %1736, %1726 ]
  %1743 = load i64*, i64** %157, align 8
  %1744 = load i64, i64* %1743, align 8
  %1745 = add nsw i32 %1742, 1
  store i32 %1745, i32* %158, align 4
  %1746 = shl nsw i32 %1742, 1
  %1747 = sext i32 %1746 to i64
  %1748 = add i64 %1744, 11
  %1749 = add i64 %1748, %1747
  %1750 = inttoptr i64 %1749 to i16*
  store i16 101, i16* %1750, align 2
  %1751 = load i32, i32* %158, align 4
  %1752 = load i32, i32* %159, align 8
  %1753 = icmp eq i32 %1751, %1752
  br i1 %1753, label %1754, label %1604

1754:                                             ; preds = %1741
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %153) #7
  br label %1604

1755:                                             ; preds = %241
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %211) #7
  %1756 = load i32, i32* %216, align 4
  br label %1757

1757:                                             ; preds = %1755, %241
  %1758 = phi i32 [ %1756, %1755 ], [ %250, %241 ]
  %1759 = load i64*, i64** %215, align 8
  %1760 = load i64, i64* %1759, align 8
  %1761 = add nsw i32 %1758, 1
  store i32 %1761, i32* %216, align 4
  %1762 = sext i32 %1758 to i64
  %1763 = add i64 %1760, 11
  %1764 = add i64 %1763, %1762
  %1765 = inttoptr i64 %1764 to i8*
  store i8 108, i8* %1765, align 1
  %1766 = load i32, i32* %216, align 4
  %1767 = load i32, i32* %217, align 8
  %1768 = icmp eq i32 %1766, %1767
  br i1 %1768, label %1769, label %1771

1769:                                             ; preds = %1757
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %211) #7
  %1770 = load i32, i32* %216, align 4
  br label %1771

1771:                                             ; preds = %1769, %1757
  %1772 = phi i32 [ %1770, %1769 ], [ %1766, %1757 ]
  %1773 = load i64*, i64** %215, align 8
  %1774 = load i64, i64* %1773, align 8
  %1775 = add nsw i32 %1772, 1
  store i32 %1775, i32* %216, align 4
  %1776 = sext i32 %1772 to i64
  %1777 = add i64 %1774, 11
  %1778 = add i64 %1777, %1776
  %1779 = inttoptr i64 %1778 to i8*
  store i8 108, i8* %1779, align 1
  %1780 = load i32, i32* %216, align 4
  %1781 = load i32, i32* %217, align 8
  %1782 = icmp eq i32 %1780, %1781
  br i1 %1782, label %1783, label %1604

1783:                                             ; preds = %1771
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %211) #7
  br label %1604

1784:                                             ; preds = %255
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %211) #7
  %1785 = load i32, i32* %216, align 4
  br label %1786

1786:                                             ; preds = %1784, %255
  %1787 = phi i32 [ %1785, %1784 ], [ %265, %255 ]
  %1788 = load i64*, i64** %215, align 8
  %1789 = load i64, i64* %1788, align 8
  %1790 = add nsw i32 %1787, 1
  store i32 %1790, i32* %216, align 4
  %1791 = shl nsw i32 %1787, 1
  %1792 = sext i32 %1791 to i64
  %1793 = add i64 %1789, 11
  %1794 = add i64 %1793, %1792
  %1795 = inttoptr i64 %1794 to i16*
  store i16 108, i16* %1795, align 2
  %1796 = load i32, i32* %216, align 4
  %1797 = load i32, i32* %217, align 8
  %1798 = icmp eq i32 %1796, %1797
  br i1 %1798, label %1799, label %1801

1799:                                             ; preds = %1786
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %211) #7
  %1800 = load i32, i32* %216, align 4
  br label %1801

1801:                                             ; preds = %1799, %1786
  %1802 = phi i32 [ %1800, %1799 ], [ %1796, %1786 ]
  %1803 = load i64*, i64** %215, align 8
  %1804 = load i64, i64* %1803, align 8
  %1805 = add nsw i32 %1802, 1
  store i32 %1805, i32* %216, align 4
  %1806 = shl nsw i32 %1802, 1
  %1807 = sext i32 %1806 to i64
  %1808 = add i64 %1804, 11
  %1809 = add i64 %1808, %1807
  %1810 = inttoptr i64 %1809 to i16*
  store i16 108, i16* %1810, align 2
  %1811 = load i32, i32* %216, align 4
  %1812 = load i32, i32* %217, align 8
  %1813 = icmp eq i32 %1811, %1812
  br i1 %1813, label %1814, label %1604

1814:                                             ; preds = %1801
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %211) #7
  br label %1604

1815:                                             ; preds = %979
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  %1816 = load i32, i32* %326, align 4
  br label %1817

1817:                                             ; preds = %1815, %979
  %1818 = phi i32 [ %1816, %1815 ], [ %989, %979 ]
  %1819 = load i64*, i64** %323, align 8
  %1820 = load i64, i64* %1819, align 8
  %1821 = add nsw i32 %1818, 1
  store i32 %1821, i32* %326, align 4
  %1822 = shl nsw i32 %1818, 1
  %1823 = sext i32 %1822 to i64
  %1824 = add i64 %1820, 11
  %1825 = add i64 %1824, %1823
  %1826 = inttoptr i64 %1825 to i16*
  store i16 108, i16* %1826, align 2
  %1827 = load i32, i32* %326, align 4
  %1828 = load i32, i32* %744, align 8
  %1829 = icmp eq i32 %1827, %1828
  br i1 %1829, label %1830, label %1832

1830:                                             ; preds = %1817
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  %1831 = load i32, i32* %326, align 4
  br label %1832

1832:                                             ; preds = %1830, %1817
  %1833 = phi i32 [ %1831, %1830 ], [ %1827, %1817 ]
  %1834 = load i64*, i64** %323, align 8
  %1835 = load i64, i64* %1834, align 8
  %1836 = add nsw i32 %1833, 1
  store i32 %1836, i32* %326, align 4
  %1837 = shl nsw i32 %1833, 1
  %1838 = sext i32 %1837 to i64
  %1839 = add i64 %1835, 11
  %1840 = add i64 %1839, %1838
  %1841 = inttoptr i64 %1840 to i16*
  store i16 108, i16* %1841, align 2
  %1842 = load i32, i32* %326, align 4
  %1843 = load i32, i32* %744, align 8
  %1844 = icmp eq i32 %1842, %1843
  br i1 %1844, label %1845, label %992

1845:                                             ; preds = %1832
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %992

1846:                                             ; preds = %965
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  %1847 = load i32, i32* %326, align 4
  br label %1848

1848:                                             ; preds = %1846, %965
  %1849 = phi i32 [ %1847, %1846 ], [ %974, %965 ]
  %1850 = load i64*, i64** %323, align 8
  %1851 = load i64, i64* %1850, align 8
  %1852 = add nsw i32 %1849, 1
  store i32 %1852, i32* %326, align 4
  %1853 = sext i32 %1849 to i64
  %1854 = add i64 %1851, 11
  %1855 = add i64 %1854, %1853
  %1856 = inttoptr i64 %1855 to i8*
  store i8 108, i8* %1856, align 1
  %1857 = load i32, i32* %326, align 4
  %1858 = load i32, i32* %744, align 8
  %1859 = icmp eq i32 %1857, %1858
  br i1 %1859, label %1860, label %1862

1860:                                             ; preds = %1848
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  %1861 = load i32, i32* %326, align 4
  br label %1862

1862:                                             ; preds = %1860, %1848
  %1863 = phi i32 [ %1861, %1860 ], [ %1857, %1848 ]
  %1864 = load i64*, i64** %323, align 8
  %1865 = load i64, i64* %1864, align 8
  %1866 = add nsw i32 %1863, 1
  store i32 %1866, i32* %326, align 4
  %1867 = sext i32 %1863 to i64
  %1868 = add i64 %1865, 11
  %1869 = add i64 %1868, %1867
  %1870 = inttoptr i64 %1869 to i8*
  store i8 108, i8* %1870, align 1
  %1871 = load i32, i32* %326, align 4
  %1872 = load i32, i32* %744, align 8
  %1873 = icmp eq i32 %1871, %1872
  br i1 %1873, label %1874, label %992

1874:                                             ; preds = %1862
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %319) #7
  br label %992
}

declare i64 @_ZN2v88internal10StackGuard16HandleInterruptsEv(%"class.v8::internal::StackGuard"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.assume(i1) #7

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #8

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i16 @_ZN2v88internal7JSProxy7IsArrayENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64*, i32) unnamed_addr #4 comdat align 2 {
  %8 = ptrtoint i64* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %10 = icmp eq i64* %3, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = load i64, i64* %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %12, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %14, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #7
  %20 = zext i32 %17 to i64
  %21 = or i64 %14, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 64
  br i1 %25, label %26, label %32

26:                                               ; preds = %11
  %27 = add i64 %12, 7
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %11, %7
  br label %33

33:                                               ; preds = %26, %32
  %34 = phi i32 [ %6, %32 ], [ 0, %26 ]
  store i32 %34, i32* %9, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %3, i64** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %2, i64** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 10
  %45 = bitcast %"class.v8::internal::Handle.1128"* %44 to i64*
  store i64 %8, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  store i64 %4, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %47, align 8
  %48 = icmp eq i64 %4, -1
  br i1 %48, label %115, label %49

49:                                               ; preds = %33
  %50 = icmp ugt i64 %4, 4294967294
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %114, label %99

53:                                               ; preds = %49
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %72, label %78

59:                                               ; preds = %53
  %60 = and i64 %54, -4294967296
  %61 = add i64 %54, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 1080
  %70 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %69, label %98, label %71

71:                                               ; preds = %59
  br i1 %10, label %72, label %78

72:                                               ; preds = %57, %71
  %73 = phi %"class.v8::internal::Handle.1145"* [ %58, %57 ], [ %70, %71 ]
  %74 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %75 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %74, i64 %4, i1 zeroext true) #7
  %76 = ptrtoint i64* %75 to i64
  %77 = bitcast %"class.v8::internal::Handle.1145"* %73 to i64*
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %57, %72, %71
  %79 = phi i64* [ %3, %57 ], [ %75, %72 ], [ %3, %71 ]
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = and i16 %89, -32
  %91 = icmp eq i16 %90, 32
  br i1 %91, label %92, label %96

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %94 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %93, align 8
  %95 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %94, %"class.v8::internal::Isolate"* %1, i64* %79) #7
  br label %96

96:                                               ; preds = %78, %92
  %97 = phi i64* [ %95, %92 ], [ %79, %78 ]
  store i64* %97, i64** %40, align 8
  br label %114

98:                                               ; preds = %59
  br i1 %10, label %114, label %99

99:                                               ; preds = %51, %98
  %100 = phi %"class.v8::internal::Handle.1145"* [ %52, %51 ], [ %70, %98 ]
  %101 = load i64, i64* %3, align 8
  %102 = and i64 %101, -4294967296
  %103 = add i64 %101, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp ult i16 %110, 32
  br i1 %111, label %114, label %112

112:                                              ; preds = %99
  %113 = bitcast %"class.v8::internal::Handle.1145"* %100 to i64*
  store i64 0, i64* %113, align 8
  br label %114

114:                                              ; preds = %98, %51, %99, %112, %96
  tail call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* %0) #7
  br label %134

115:                                              ; preds = %33
  %116 = load i64, i64* %3, align 8
  %117 = and i64 %116, -4294967296
  %118 = add i64 %116, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = and i16 %125, -32
  %127 = icmp eq i16 %126, 32
  br i1 %127, label %128, label %132

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %130 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %129, align 8
  %131 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %130, %"class.v8::internal::Isolate"* %1, i64* %3) #7
  br label %132

132:                                              ; preds = %115, %128
  %133 = phi i64* [ %131, %128 ], [ %3, %115 ]
  store i64* %133, i64** %40, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* %0) #7
  br label %134

134:                                              ; preds = %132, %114
  ret void
}

declare i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"*, i64, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal9SeqString8TruncateENS0_6HandleIS1_EEi(i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #9

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal31CircularStructureMessageBuilder21AppendConstructorNameENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::CircularStructureMessageBuilder"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 4
  br i1 %6, label %13, label %23

13:                                               ; preds = %2
  %14 = sext i32 %11 to i64
  %15 = add i64 %9, 11
  %16 = add i64 %15, %14
  %17 = inttoptr i64 %16 to i8*
  store i8 39, i8* %17, align 1
  %18 = load i32, i32* %10, align 4
  %19 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %34

22:                                               ; preds = %13
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  br label %34

23:                                               ; preds = %2
  %24 = shl nsw i32 %11, 1
  %25 = sext i32 %24 to i64
  %26 = add i64 %9, 11
  %27 = add i64 %26, %25
  %28 = inttoptr i64 %27 to i16*
  store i16 39, i16* %28, align 2
  %29 = load i32, i32* %10, align 4
  %30 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %23
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  br label %34

34:                                               ; preds = %13, %22, %23, %33
  %35 = tail call i64* @_ZN2v88internal10JSReceiver18GetConstructorNameENS0_6HandleIS1_EE(i64* %1) #7
  tail call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* %3, i64* %35) #7
  %36 = load i32, i32* %4, align 8
  %37 = icmp eq i32 %36, 0
  %38 = load i64*, i64** %7, align 8
  %39 = load i64, i64* %38, align 8
  %40 = load i32, i32* %10, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %10, align 4
  br i1 %37, label %42, label %52

42:                                               ; preds = %34
  %43 = sext i32 %40 to i64
  %44 = add i64 %39, 11
  %45 = add i64 %44, %43
  %46 = inttoptr i64 %45 to i8*
  store i8 39, i8* %46, align 1
  %47 = load i32, i32* %10, align 4
  %48 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %51, label %63

51:                                               ; preds = %42
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  br label %63

52:                                               ; preds = %34
  %53 = shl nsw i32 %40, 1
  %54 = sext i32 %53 to i64
  %55 = add i64 %39, 11
  %56 = add i64 %55, %54
  %57 = inttoptr i64 %56 to i16*
  store i16 39, i16* %57, align 2
  %58 = load i32, i32* %10, align 4
  %59 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %63

62:                                               ; preds = %52
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %3) #7
  br label %63

63:                                               ; preds = %42, %51, %52, %62
  ret void
}

declare i64* @_ZN2v88internal10JSReceiver18GetConstructorNameENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

declare void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal31CircularStructureMessageBuilder9AppendKeyENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::CircularStructureMessageBuilder"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %66

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 4
  %13 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 3
  %14 = load i64*, i64** %11, align 8
  %15 = load i64, i64* %14, align 8
  %16 = load i32, i32* %12, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %12, align 4
  br i1 %10, label %27, label %18

18:                                               ; preds = %6
  %19 = shl nsw i32 %16, 1
  %20 = sext i32 %19 to i64
  %21 = add i64 %15, 11
  %22 = add i64 %21, %20
  %23 = inttoptr i64 %22 to i16*
  store i16 105, i16* %23, align 2
  %24 = load i32, i32* %12, align 4
  %25 = load i32, i32* %13, align 8
  %26 = icmp eq i32 %24, %25
  br i1 %26, label %49, label %51

27:                                               ; preds = %6
  %28 = sext i32 %16 to i64
  %29 = add i64 %15, 11
  %30 = add i64 %29, %28
  %31 = inttoptr i64 %30 to i8*
  store i8 105, i8* %31, align 1
  %32 = load i32, i32* %12, align 4
  %33 = load i32, i32* %13, align 8
  %34 = icmp eq i32 %32, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %27
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %7) #7
  %36 = load i32, i32* %12, align 4
  br label %37

37:                                               ; preds = %35, %27
  %38 = phi i32 [ %36, %35 ], [ %32, %27 ]
  %39 = load i64*, i64** %11, align 8
  %40 = load i64, i64* %39, align 8
  %41 = add nsw i32 %38, 1
  store i32 %41, i32* %12, align 4
  %42 = sext i32 %38 to i64
  %43 = add i64 %40, 11
  %44 = add i64 %43, %42
  %45 = inttoptr i64 %44 to i8*
  store i8 110, i8* %45, align 1
  %46 = load i32, i32* %12, align 4
  %47 = load i32, i32* %13, align 8
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %215, label %217

49:                                               ; preds = %18
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %7) #7
  %50 = load i32, i32* %12, align 4
  br label %51

51:                                               ; preds = %49, %18
  %52 = phi i32 [ %50, %49 ], [ %24, %18 ]
  %53 = load i64*, i64** %11, align 8
  %54 = load i64, i64* %53, align 8
  %55 = add nsw i32 %52, 1
  store i32 %55, i32* %12, align 4
  %56 = shl nsw i32 %52, 1
  %57 = sext i32 %56 to i64
  %58 = add i64 %54, 11
  %59 = add i64 %58, %57
  %60 = inttoptr i64 %59 to i16*
  store i16 110, i16* %60, align 2
  %61 = load i32, i32* %12, align 4
  %62 = load i32, i32* %13, align 8
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %272, label %274

64:                                               ; preds = %319, %332, %259, %271
  %65 = load i64, i64* %1, align 8
  tail call void @_ZN2v88internal31CircularStructureMessageBuilder9AppendSmiENS0_3SmiE(%"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 %65)
  br label %214

66:                                               ; preds = %2
  %67 = and i64 %3, -4294967296
  %68 = add i64 %3, -1
  %69 = inttoptr i64 %68 to i32*
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %67, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load atomic i16, i16* %74 monotonic, align 2
  %76 = icmp ult i16 %75, 64
  br i1 %76, label %78, label %77, !prof !5

77:                                               ; preds = %66
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0)) #14
  unreachable

78:                                               ; preds = %66
  %79 = add i64 %3, 7
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0
  %84 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %88 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 4
  %89 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 3
  %90 = load i64*, i64** %87, align 8
  %91 = load i64, i64* %90, align 8
  %92 = load i32, i32* %88, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %88, align 4
  br i1 %82, label %94, label %141

94:                                               ; preds = %78
  br i1 %86, label %104, label %95

95:                                               ; preds = %94
  %96 = shl nsw i32 %92, 1
  %97 = sext i32 %96 to i64
  %98 = add i64 %91, 11
  %99 = add i64 %98, %97
  %100 = inttoptr i64 %99 to i16*
  store i16 60, i16* %100, align 2
  %101 = load i32, i32* %88, align 4
  %102 = load i32, i32* %89, align 8
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %126, label %128

104:                                              ; preds = %94
  %105 = sext i32 %92 to i64
  %106 = add i64 %91, 11
  %107 = add i64 %106, %105
  %108 = inttoptr i64 %107 to i8*
  store i8 60, i8* %108, align 1
  %109 = load i32, i32* %88, align 4
  %110 = load i32, i32* %89, align 8
  %111 = icmp eq i32 %109, %110
  br i1 %111, label %112, label %114

112:                                              ; preds = %104
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %113 = load i32, i32* %88, align 4
  br label %114

114:                                              ; preds = %112, %104
  %115 = phi i32 [ %113, %112 ], [ %109, %104 ]
  %116 = load i64*, i64** %87, align 8
  %117 = load i64, i64* %116, align 8
  %118 = add nsw i32 %115, 1
  store i32 %118, i32* %88, align 4
  %119 = sext i32 %115 to i64
  %120 = add i64 %117, 11
  %121 = add i64 %120, %119
  %122 = inttoptr i64 %121 to i8*
  store i8 97, i8* %122, align 1
  %123 = load i32, i32* %88, align 4
  %124 = load i32, i32* %89, align 8
  %125 = icmp eq i32 %123, %124
  br i1 %125, label %333, label %335

126:                                              ; preds = %95
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %127 = load i32, i32* %88, align 4
  br label %128

128:                                              ; preds = %126, %95
  %129 = phi i32 [ %127, %126 ], [ %101, %95 ]
  %130 = load i64*, i64** %87, align 8
  %131 = load i64, i64* %130, align 8
  %132 = add nsw i32 %129, 1
  store i32 %132, i32* %88, align 4
  %133 = shl nsw i32 %129, 1
  %134 = sext i32 %133 to i64
  %135 = add i64 %131, 11
  %136 = add i64 %135, %134
  %137 = inttoptr i64 %136 to i16*
  store i16 97, i16* %137, align 2
  %138 = load i32, i32* %88, align 4
  %139 = load i32, i32* %89, align 8
  %140 = icmp eq i32 %138, %139
  br i1 %140, label %460, label %462

141:                                              ; preds = %78
  br i1 %86, label %151, label %142

142:                                              ; preds = %141
  %143 = shl nsw i32 %92, 1
  %144 = sext i32 %143 to i64
  %145 = add i64 %91, 11
  %146 = add i64 %145, %144
  %147 = inttoptr i64 %146 to i16*
  store i16 112, i16* %147, align 2
  %148 = load i32, i32* %88, align 4
  %149 = load i32, i32* %89, align 8
  %150 = icmp eq i32 %148, %149
  br i1 %150, label %173, label %175

151:                                              ; preds = %141
  %152 = sext i32 %92 to i64
  %153 = add i64 %91, 11
  %154 = add i64 %153, %152
  %155 = inttoptr i64 %154 to i8*
  store i8 112, i8* %155, align 1
  %156 = load i32, i32* %88, align 4
  %157 = load i32, i32* %89, align 8
  %158 = icmp eq i32 %156, %157
  br i1 %158, label %159, label %161

159:                                              ; preds = %151
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %160 = load i32, i32* %88, align 4
  br label %161

161:                                              ; preds = %159, %151
  %162 = phi i32 [ %160, %159 ], [ %156, %151 ]
  %163 = load i64*, i64** %87, align 8
  %164 = load i64, i64* %163, align 8
  %165 = add nsw i32 %162, 1
  store i32 %165, i32* %88, align 4
  %166 = sext i32 %162 to i64
  %167 = add i64 %164, 11
  %168 = add i64 %167, %166
  %169 = inttoptr i64 %168 to i8*
  store i8 114, i8* %169, align 1
  %170 = load i32, i32* %88, align 4
  %171 = load i32, i32* %89, align 8
  %172 = icmp eq i32 %170, %171
  br i1 %172, label %596, label %598

173:                                              ; preds = %142
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %174 = load i32, i32* %88, align 4
  br label %175

175:                                              ; preds = %173, %142
  %176 = phi i32 [ %174, %173 ], [ %148, %142 ]
  %177 = load i64*, i64** %87, align 8
  %178 = load i64, i64* %177, align 8
  %179 = add nsw i32 %176, 1
  store i32 %179, i32* %88, align 4
  %180 = shl nsw i32 %176, 1
  %181 = sext i32 %180 to i64
  %182 = add i64 %178, 11
  %183 = add i64 %182, %181
  %184 = inttoptr i64 %183 to i16*
  store i16 114, i16* %184, align 2
  %185 = load i32, i32* %88, align 4
  %186 = load i32, i32* %89, align 8
  %187 = icmp eq i32 %185, %186
  br i1 %187, label %709, label %711

188:                                              ; preds = %816, %829, %696, %708
  tail call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* %83, i64* %1) #7
  %189 = load i32, i32* %84, align 8
  %190 = icmp eq i32 %189, 0
  %191 = load i64*, i64** %87, align 8
  %192 = load i64, i64* %191, align 8
  %193 = load i32, i32* %88, align 4
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %88, align 4
  br i1 %190, label %195, label %204

195:                                              ; preds = %188
  %196 = sext i32 %193 to i64
  %197 = add i64 %192, 11
  %198 = add i64 %197, %196
  %199 = inttoptr i64 %198 to i8*
  store i8 39, i8* %199, align 1
  %200 = load i32, i32* %88, align 4
  %201 = load i32, i32* %89, align 8
  %202 = icmp eq i32 %200, %201
  br i1 %202, label %203, label %214

203:                                              ; preds = %195
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  br label %214

204:                                              ; preds = %188
  %205 = shl nsw i32 %193, 1
  %206 = sext i32 %205 to i64
  %207 = add i64 %192, 11
  %208 = add i64 %207, %206
  %209 = inttoptr i64 %208 to i16*
  store i16 39, i16* %209, align 2
  %210 = load i32, i32* %88, align 4
  %211 = load i32, i32* %89, align 8
  %212 = icmp eq i32 %210, %211
  br i1 %212, label %213, label %214

213:                                              ; preds = %204
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  br label %214

214:                                              ; preds = %582, %595, %447, %459, %195, %203, %204, %213, %64
  ret void

215:                                              ; preds = %37
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %7) #7
  %216 = load i32, i32* %12, align 4
  br label %217

217:                                              ; preds = %215, %37
  %218 = phi i32 [ %216, %215 ], [ %46, %37 ]
  %219 = load i64*, i64** %11, align 8
  %220 = load i64, i64* %219, align 8
  %221 = add nsw i32 %218, 1
  store i32 %221, i32* %12, align 4
  %222 = sext i32 %218 to i64
  %223 = add i64 %220, 11
  %224 = add i64 %223, %222
  %225 = inttoptr i64 %224 to i8*
  store i8 100, i8* %225, align 1
  %226 = load i32, i32* %12, align 4
  %227 = load i32, i32* %13, align 8
  %228 = icmp eq i32 %226, %227
  br i1 %228, label %229, label %231

229:                                              ; preds = %217
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %7) #7
  %230 = load i32, i32* %12, align 4
  br label %231

231:                                              ; preds = %229, %217
  %232 = phi i32 [ %230, %229 ], [ %226, %217 ]
  %233 = load i64*, i64** %11, align 8
  %234 = load i64, i64* %233, align 8
  %235 = add nsw i32 %232, 1
  store i32 %235, i32* %12, align 4
  %236 = sext i32 %232 to i64
  %237 = add i64 %234, 11
  %238 = add i64 %237, %236
  %239 = inttoptr i64 %238 to i8*
  store i8 101, i8* %239, align 1
  %240 = load i32, i32* %12, align 4
  %241 = load i32, i32* %13, align 8
  %242 = icmp eq i32 %240, %241
  br i1 %242, label %243, label %245

243:                                              ; preds = %231
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %7) #7
  %244 = load i32, i32* %12, align 4
  br label %245

245:                                              ; preds = %243, %231
  %246 = phi i32 [ %244, %243 ], [ %240, %231 ]
  %247 = load i64*, i64** %11, align 8
  %248 = load i64, i64* %247, align 8
  %249 = add nsw i32 %246, 1
  store i32 %249, i32* %12, align 4
  %250 = sext i32 %246 to i64
  %251 = add i64 %248, 11
  %252 = add i64 %251, %250
  %253 = inttoptr i64 %252 to i8*
  store i8 120, i8* %253, align 1
  %254 = load i32, i32* %12, align 4
  %255 = load i32, i32* %13, align 8
  %256 = icmp eq i32 %254, %255
  br i1 %256, label %257, label %259

257:                                              ; preds = %245
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %7) #7
  %258 = load i32, i32* %12, align 4
  br label %259

259:                                              ; preds = %257, %245
  %260 = phi i32 [ %258, %257 ], [ %254, %245 ]
  %261 = load i64*, i64** %11, align 8
  %262 = load i64, i64* %261, align 8
  %263 = add nsw i32 %260, 1
  store i32 %263, i32* %12, align 4
  %264 = sext i32 %260 to i64
  %265 = add i64 %262, 11
  %266 = add i64 %265, %264
  %267 = inttoptr i64 %266 to i8*
  store i8 32, i8* %267, align 1
  %268 = load i32, i32* %12, align 4
  %269 = load i32, i32* %13, align 8
  %270 = icmp eq i32 %268, %269
  br i1 %270, label %271, label %64

271:                                              ; preds = %259
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %7) #7
  br label %64

272:                                              ; preds = %51
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %7) #7
  %273 = load i32, i32* %12, align 4
  br label %274

274:                                              ; preds = %272, %51
  %275 = phi i32 [ %273, %272 ], [ %61, %51 ]
  %276 = load i64*, i64** %11, align 8
  %277 = load i64, i64* %276, align 8
  %278 = add nsw i32 %275, 1
  store i32 %278, i32* %12, align 4
  %279 = shl nsw i32 %275, 1
  %280 = sext i32 %279 to i64
  %281 = add i64 %277, 11
  %282 = add i64 %281, %280
  %283 = inttoptr i64 %282 to i16*
  store i16 100, i16* %283, align 2
  %284 = load i32, i32* %12, align 4
  %285 = load i32, i32* %13, align 8
  %286 = icmp eq i32 %284, %285
  br i1 %286, label %287, label %289

287:                                              ; preds = %274
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %7) #7
  %288 = load i32, i32* %12, align 4
  br label %289

289:                                              ; preds = %287, %274
  %290 = phi i32 [ %288, %287 ], [ %284, %274 ]
  %291 = load i64*, i64** %11, align 8
  %292 = load i64, i64* %291, align 8
  %293 = add nsw i32 %290, 1
  store i32 %293, i32* %12, align 4
  %294 = shl nsw i32 %290, 1
  %295 = sext i32 %294 to i64
  %296 = add i64 %292, 11
  %297 = add i64 %296, %295
  %298 = inttoptr i64 %297 to i16*
  store i16 101, i16* %298, align 2
  %299 = load i32, i32* %12, align 4
  %300 = load i32, i32* %13, align 8
  %301 = icmp eq i32 %299, %300
  br i1 %301, label %302, label %304

302:                                              ; preds = %289
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %7) #7
  %303 = load i32, i32* %12, align 4
  br label %304

304:                                              ; preds = %302, %289
  %305 = phi i32 [ %303, %302 ], [ %299, %289 ]
  %306 = load i64*, i64** %11, align 8
  %307 = load i64, i64* %306, align 8
  %308 = add nsw i32 %305, 1
  store i32 %308, i32* %12, align 4
  %309 = shl nsw i32 %305, 1
  %310 = sext i32 %309 to i64
  %311 = add i64 %307, 11
  %312 = add i64 %311, %310
  %313 = inttoptr i64 %312 to i16*
  store i16 120, i16* %313, align 2
  %314 = load i32, i32* %12, align 4
  %315 = load i32, i32* %13, align 8
  %316 = icmp eq i32 %314, %315
  br i1 %316, label %317, label %319

317:                                              ; preds = %304
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %7) #7
  %318 = load i32, i32* %12, align 4
  br label %319

319:                                              ; preds = %317, %304
  %320 = phi i32 [ %318, %317 ], [ %314, %304 ]
  %321 = load i64*, i64** %11, align 8
  %322 = load i64, i64* %321, align 8
  %323 = add nsw i32 %320, 1
  store i32 %323, i32* %12, align 4
  %324 = shl nsw i32 %320, 1
  %325 = sext i32 %324 to i64
  %326 = add i64 %322, 11
  %327 = add i64 %326, %325
  %328 = inttoptr i64 %327 to i16*
  store i16 32, i16* %328, align 2
  %329 = load i32, i32* %12, align 4
  %330 = load i32, i32* %13, align 8
  %331 = icmp eq i32 %329, %330
  br i1 %331, label %332, label %64

332:                                              ; preds = %319
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %7) #7
  br label %64

333:                                              ; preds = %114
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %334 = load i32, i32* %88, align 4
  br label %335

335:                                              ; preds = %333, %114
  %336 = phi i32 [ %334, %333 ], [ %123, %114 ]
  %337 = load i64*, i64** %87, align 8
  %338 = load i64, i64* %337, align 8
  %339 = add nsw i32 %336, 1
  store i32 %339, i32* %88, align 4
  %340 = sext i32 %336 to i64
  %341 = add i64 %338, 11
  %342 = add i64 %341, %340
  %343 = inttoptr i64 %342 to i8*
  store i8 110, i8* %343, align 1
  %344 = load i32, i32* %88, align 4
  %345 = load i32, i32* %89, align 8
  %346 = icmp eq i32 %344, %345
  br i1 %346, label %347, label %349

347:                                              ; preds = %335
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %348 = load i32, i32* %88, align 4
  br label %349

349:                                              ; preds = %347, %335
  %350 = phi i32 [ %348, %347 ], [ %344, %335 ]
  %351 = load i64*, i64** %87, align 8
  %352 = load i64, i64* %351, align 8
  %353 = add nsw i32 %350, 1
  store i32 %353, i32* %88, align 4
  %354 = sext i32 %350 to i64
  %355 = add i64 %352, 11
  %356 = add i64 %355, %354
  %357 = inttoptr i64 %356 to i8*
  store i8 111, i8* %357, align 1
  %358 = load i32, i32* %88, align 4
  %359 = load i32, i32* %89, align 8
  %360 = icmp eq i32 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %349
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %362 = load i32, i32* %88, align 4
  br label %363

363:                                              ; preds = %361, %349
  %364 = phi i32 [ %362, %361 ], [ %358, %349 ]
  %365 = load i64*, i64** %87, align 8
  %366 = load i64, i64* %365, align 8
  %367 = add nsw i32 %364, 1
  store i32 %367, i32* %88, align 4
  %368 = sext i32 %364 to i64
  %369 = add i64 %366, 11
  %370 = add i64 %369, %368
  %371 = inttoptr i64 %370 to i8*
  store i8 110, i8* %371, align 1
  %372 = load i32, i32* %88, align 4
  %373 = load i32, i32* %89, align 8
  %374 = icmp eq i32 %372, %373
  br i1 %374, label %375, label %377

375:                                              ; preds = %363
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %376 = load i32, i32* %88, align 4
  br label %377

377:                                              ; preds = %375, %363
  %378 = phi i32 [ %376, %375 ], [ %372, %363 ]
  %379 = load i64*, i64** %87, align 8
  %380 = load i64, i64* %379, align 8
  %381 = add nsw i32 %378, 1
  store i32 %381, i32* %88, align 4
  %382 = sext i32 %378 to i64
  %383 = add i64 %380, 11
  %384 = add i64 %383, %382
  %385 = inttoptr i64 %384 to i8*
  store i8 121, i8* %385, align 1
  %386 = load i32, i32* %88, align 4
  %387 = load i32, i32* %89, align 8
  %388 = icmp eq i32 %386, %387
  br i1 %388, label %389, label %391

389:                                              ; preds = %377
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %390 = load i32, i32* %88, align 4
  br label %391

391:                                              ; preds = %389, %377
  %392 = phi i32 [ %390, %389 ], [ %386, %377 ]
  %393 = load i64*, i64** %87, align 8
  %394 = load i64, i64* %393, align 8
  %395 = add nsw i32 %392, 1
  store i32 %395, i32* %88, align 4
  %396 = sext i32 %392 to i64
  %397 = add i64 %394, 11
  %398 = add i64 %397, %396
  %399 = inttoptr i64 %398 to i8*
  store i8 109, i8* %399, align 1
  %400 = load i32, i32* %88, align 4
  %401 = load i32, i32* %89, align 8
  %402 = icmp eq i32 %400, %401
  br i1 %402, label %403, label %405

403:                                              ; preds = %391
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %404 = load i32, i32* %88, align 4
  br label %405

405:                                              ; preds = %403, %391
  %406 = phi i32 [ %404, %403 ], [ %400, %391 ]
  %407 = load i64*, i64** %87, align 8
  %408 = load i64, i64* %407, align 8
  %409 = add nsw i32 %406, 1
  store i32 %409, i32* %88, align 4
  %410 = sext i32 %406 to i64
  %411 = add i64 %408, 11
  %412 = add i64 %411, %410
  %413 = inttoptr i64 %412 to i8*
  store i8 111, i8* %413, align 1
  %414 = load i32, i32* %88, align 4
  %415 = load i32, i32* %89, align 8
  %416 = icmp eq i32 %414, %415
  br i1 %416, label %417, label %419

417:                                              ; preds = %405
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %418 = load i32, i32* %88, align 4
  br label %419

419:                                              ; preds = %417, %405
  %420 = phi i32 [ %418, %417 ], [ %414, %405 ]
  %421 = load i64*, i64** %87, align 8
  %422 = load i64, i64* %421, align 8
  %423 = add nsw i32 %420, 1
  store i32 %423, i32* %88, align 4
  %424 = sext i32 %420 to i64
  %425 = add i64 %422, 11
  %426 = add i64 %425, %424
  %427 = inttoptr i64 %426 to i8*
  store i8 117, i8* %427, align 1
  %428 = load i32, i32* %88, align 4
  %429 = load i32, i32* %89, align 8
  %430 = icmp eq i32 %428, %429
  br i1 %430, label %431, label %433

431:                                              ; preds = %419
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %432 = load i32, i32* %88, align 4
  br label %433

433:                                              ; preds = %431, %419
  %434 = phi i32 [ %432, %431 ], [ %428, %419 ]
  %435 = load i64*, i64** %87, align 8
  %436 = load i64, i64* %435, align 8
  %437 = add nsw i32 %434, 1
  store i32 %437, i32* %88, align 4
  %438 = sext i32 %434 to i64
  %439 = add i64 %436, 11
  %440 = add i64 %439, %438
  %441 = inttoptr i64 %440 to i8*
  store i8 115, i8* %441, align 1
  %442 = load i32, i32* %88, align 4
  %443 = load i32, i32* %89, align 8
  %444 = icmp eq i32 %442, %443
  br i1 %444, label %445, label %447

445:                                              ; preds = %433
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %446 = load i32, i32* %88, align 4
  br label %447

447:                                              ; preds = %445, %433
  %448 = phi i32 [ %446, %445 ], [ %442, %433 ]
  %449 = load i64*, i64** %87, align 8
  %450 = load i64, i64* %449, align 8
  %451 = add nsw i32 %448, 1
  store i32 %451, i32* %88, align 4
  %452 = sext i32 %448 to i64
  %453 = add i64 %450, 11
  %454 = add i64 %453, %452
  %455 = inttoptr i64 %454 to i8*
  store i8 62, i8* %455, align 1
  %456 = load i32, i32* %88, align 4
  %457 = load i32, i32* %89, align 8
  %458 = icmp eq i32 %456, %457
  br i1 %458, label %459, label %214

459:                                              ; preds = %447
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  br label %214

460:                                              ; preds = %128
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %461 = load i32, i32* %88, align 4
  br label %462

462:                                              ; preds = %460, %128
  %463 = phi i32 [ %461, %460 ], [ %138, %128 ]
  %464 = load i64*, i64** %87, align 8
  %465 = load i64, i64* %464, align 8
  %466 = add nsw i32 %463, 1
  store i32 %466, i32* %88, align 4
  %467 = shl nsw i32 %463, 1
  %468 = sext i32 %467 to i64
  %469 = add i64 %465, 11
  %470 = add i64 %469, %468
  %471 = inttoptr i64 %470 to i16*
  store i16 110, i16* %471, align 2
  %472 = load i32, i32* %88, align 4
  %473 = load i32, i32* %89, align 8
  %474 = icmp eq i32 %472, %473
  br i1 %474, label %475, label %477

475:                                              ; preds = %462
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %476 = load i32, i32* %88, align 4
  br label %477

477:                                              ; preds = %475, %462
  %478 = phi i32 [ %476, %475 ], [ %472, %462 ]
  %479 = load i64*, i64** %87, align 8
  %480 = load i64, i64* %479, align 8
  %481 = add nsw i32 %478, 1
  store i32 %481, i32* %88, align 4
  %482 = shl nsw i32 %478, 1
  %483 = sext i32 %482 to i64
  %484 = add i64 %480, 11
  %485 = add i64 %484, %483
  %486 = inttoptr i64 %485 to i16*
  store i16 111, i16* %486, align 2
  %487 = load i32, i32* %88, align 4
  %488 = load i32, i32* %89, align 8
  %489 = icmp eq i32 %487, %488
  br i1 %489, label %490, label %492

490:                                              ; preds = %477
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %491 = load i32, i32* %88, align 4
  br label %492

492:                                              ; preds = %490, %477
  %493 = phi i32 [ %491, %490 ], [ %487, %477 ]
  %494 = load i64*, i64** %87, align 8
  %495 = load i64, i64* %494, align 8
  %496 = add nsw i32 %493, 1
  store i32 %496, i32* %88, align 4
  %497 = shl nsw i32 %493, 1
  %498 = sext i32 %497 to i64
  %499 = add i64 %495, 11
  %500 = add i64 %499, %498
  %501 = inttoptr i64 %500 to i16*
  store i16 110, i16* %501, align 2
  %502 = load i32, i32* %88, align 4
  %503 = load i32, i32* %89, align 8
  %504 = icmp eq i32 %502, %503
  br i1 %504, label %505, label %507

505:                                              ; preds = %492
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %506 = load i32, i32* %88, align 4
  br label %507

507:                                              ; preds = %505, %492
  %508 = phi i32 [ %506, %505 ], [ %502, %492 ]
  %509 = load i64*, i64** %87, align 8
  %510 = load i64, i64* %509, align 8
  %511 = add nsw i32 %508, 1
  store i32 %511, i32* %88, align 4
  %512 = shl nsw i32 %508, 1
  %513 = sext i32 %512 to i64
  %514 = add i64 %510, 11
  %515 = add i64 %514, %513
  %516 = inttoptr i64 %515 to i16*
  store i16 121, i16* %516, align 2
  %517 = load i32, i32* %88, align 4
  %518 = load i32, i32* %89, align 8
  %519 = icmp eq i32 %517, %518
  br i1 %519, label %520, label %522

520:                                              ; preds = %507
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %521 = load i32, i32* %88, align 4
  br label %522

522:                                              ; preds = %520, %507
  %523 = phi i32 [ %521, %520 ], [ %517, %507 ]
  %524 = load i64*, i64** %87, align 8
  %525 = load i64, i64* %524, align 8
  %526 = add nsw i32 %523, 1
  store i32 %526, i32* %88, align 4
  %527 = shl nsw i32 %523, 1
  %528 = sext i32 %527 to i64
  %529 = add i64 %525, 11
  %530 = add i64 %529, %528
  %531 = inttoptr i64 %530 to i16*
  store i16 109, i16* %531, align 2
  %532 = load i32, i32* %88, align 4
  %533 = load i32, i32* %89, align 8
  %534 = icmp eq i32 %532, %533
  br i1 %534, label %535, label %537

535:                                              ; preds = %522
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %536 = load i32, i32* %88, align 4
  br label %537

537:                                              ; preds = %535, %522
  %538 = phi i32 [ %536, %535 ], [ %532, %522 ]
  %539 = load i64*, i64** %87, align 8
  %540 = load i64, i64* %539, align 8
  %541 = add nsw i32 %538, 1
  store i32 %541, i32* %88, align 4
  %542 = shl nsw i32 %538, 1
  %543 = sext i32 %542 to i64
  %544 = add i64 %540, 11
  %545 = add i64 %544, %543
  %546 = inttoptr i64 %545 to i16*
  store i16 111, i16* %546, align 2
  %547 = load i32, i32* %88, align 4
  %548 = load i32, i32* %89, align 8
  %549 = icmp eq i32 %547, %548
  br i1 %549, label %550, label %552

550:                                              ; preds = %537
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %551 = load i32, i32* %88, align 4
  br label %552

552:                                              ; preds = %550, %537
  %553 = phi i32 [ %551, %550 ], [ %547, %537 ]
  %554 = load i64*, i64** %87, align 8
  %555 = load i64, i64* %554, align 8
  %556 = add nsw i32 %553, 1
  store i32 %556, i32* %88, align 4
  %557 = shl nsw i32 %553, 1
  %558 = sext i32 %557 to i64
  %559 = add i64 %555, 11
  %560 = add i64 %559, %558
  %561 = inttoptr i64 %560 to i16*
  store i16 117, i16* %561, align 2
  %562 = load i32, i32* %88, align 4
  %563 = load i32, i32* %89, align 8
  %564 = icmp eq i32 %562, %563
  br i1 %564, label %565, label %567

565:                                              ; preds = %552
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %566 = load i32, i32* %88, align 4
  br label %567

567:                                              ; preds = %565, %552
  %568 = phi i32 [ %566, %565 ], [ %562, %552 ]
  %569 = load i64*, i64** %87, align 8
  %570 = load i64, i64* %569, align 8
  %571 = add nsw i32 %568, 1
  store i32 %571, i32* %88, align 4
  %572 = shl nsw i32 %568, 1
  %573 = sext i32 %572 to i64
  %574 = add i64 %570, 11
  %575 = add i64 %574, %573
  %576 = inttoptr i64 %575 to i16*
  store i16 115, i16* %576, align 2
  %577 = load i32, i32* %88, align 4
  %578 = load i32, i32* %89, align 8
  %579 = icmp eq i32 %577, %578
  br i1 %579, label %580, label %582

580:                                              ; preds = %567
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %581 = load i32, i32* %88, align 4
  br label %582

582:                                              ; preds = %580, %567
  %583 = phi i32 [ %581, %580 ], [ %577, %567 ]
  %584 = load i64*, i64** %87, align 8
  %585 = load i64, i64* %584, align 8
  %586 = add nsw i32 %583, 1
  store i32 %586, i32* %88, align 4
  %587 = shl nsw i32 %583, 1
  %588 = sext i32 %587 to i64
  %589 = add i64 %585, 11
  %590 = add i64 %589, %588
  %591 = inttoptr i64 %590 to i16*
  store i16 62, i16* %591, align 2
  %592 = load i32, i32* %88, align 4
  %593 = load i32, i32* %89, align 8
  %594 = icmp eq i32 %592, %593
  br i1 %594, label %595, label %214

595:                                              ; preds = %582
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  br label %214

596:                                              ; preds = %161
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %597 = load i32, i32* %88, align 4
  br label %598

598:                                              ; preds = %596, %161
  %599 = phi i32 [ %597, %596 ], [ %170, %161 ]
  %600 = load i64*, i64** %87, align 8
  %601 = load i64, i64* %600, align 8
  %602 = add nsw i32 %599, 1
  store i32 %602, i32* %88, align 4
  %603 = sext i32 %599 to i64
  %604 = add i64 %601, 11
  %605 = add i64 %604, %603
  %606 = inttoptr i64 %605 to i8*
  store i8 111, i8* %606, align 1
  %607 = load i32, i32* %88, align 4
  %608 = load i32, i32* %89, align 8
  %609 = icmp eq i32 %607, %608
  br i1 %609, label %610, label %612

610:                                              ; preds = %598
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %611 = load i32, i32* %88, align 4
  br label %612

612:                                              ; preds = %610, %598
  %613 = phi i32 [ %611, %610 ], [ %607, %598 ]
  %614 = load i64*, i64** %87, align 8
  %615 = load i64, i64* %614, align 8
  %616 = add nsw i32 %613, 1
  store i32 %616, i32* %88, align 4
  %617 = sext i32 %613 to i64
  %618 = add i64 %615, 11
  %619 = add i64 %618, %617
  %620 = inttoptr i64 %619 to i8*
  store i8 112, i8* %620, align 1
  %621 = load i32, i32* %88, align 4
  %622 = load i32, i32* %89, align 8
  %623 = icmp eq i32 %621, %622
  br i1 %623, label %624, label %626

624:                                              ; preds = %612
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %625 = load i32, i32* %88, align 4
  br label %626

626:                                              ; preds = %624, %612
  %627 = phi i32 [ %625, %624 ], [ %621, %612 ]
  %628 = load i64*, i64** %87, align 8
  %629 = load i64, i64* %628, align 8
  %630 = add nsw i32 %627, 1
  store i32 %630, i32* %88, align 4
  %631 = sext i32 %627 to i64
  %632 = add i64 %629, 11
  %633 = add i64 %632, %631
  %634 = inttoptr i64 %633 to i8*
  store i8 101, i8* %634, align 1
  %635 = load i32, i32* %88, align 4
  %636 = load i32, i32* %89, align 8
  %637 = icmp eq i32 %635, %636
  br i1 %637, label %638, label %640

638:                                              ; preds = %626
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %639 = load i32, i32* %88, align 4
  br label %640

640:                                              ; preds = %638, %626
  %641 = phi i32 [ %639, %638 ], [ %635, %626 ]
  %642 = load i64*, i64** %87, align 8
  %643 = load i64, i64* %642, align 8
  %644 = add nsw i32 %641, 1
  store i32 %644, i32* %88, align 4
  %645 = sext i32 %641 to i64
  %646 = add i64 %643, 11
  %647 = add i64 %646, %645
  %648 = inttoptr i64 %647 to i8*
  store i8 114, i8* %648, align 1
  %649 = load i32, i32* %88, align 4
  %650 = load i32, i32* %89, align 8
  %651 = icmp eq i32 %649, %650
  br i1 %651, label %652, label %654

652:                                              ; preds = %640
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %653 = load i32, i32* %88, align 4
  br label %654

654:                                              ; preds = %652, %640
  %655 = phi i32 [ %653, %652 ], [ %649, %640 ]
  %656 = load i64*, i64** %87, align 8
  %657 = load i64, i64* %656, align 8
  %658 = add nsw i32 %655, 1
  store i32 %658, i32* %88, align 4
  %659 = sext i32 %655 to i64
  %660 = add i64 %657, 11
  %661 = add i64 %660, %659
  %662 = inttoptr i64 %661 to i8*
  store i8 116, i8* %662, align 1
  %663 = load i32, i32* %88, align 4
  %664 = load i32, i32* %89, align 8
  %665 = icmp eq i32 %663, %664
  br i1 %665, label %666, label %668

666:                                              ; preds = %654
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %667 = load i32, i32* %88, align 4
  br label %668

668:                                              ; preds = %666, %654
  %669 = phi i32 [ %667, %666 ], [ %663, %654 ]
  %670 = load i64*, i64** %87, align 8
  %671 = load i64, i64* %670, align 8
  %672 = add nsw i32 %669, 1
  store i32 %672, i32* %88, align 4
  %673 = sext i32 %669 to i64
  %674 = add i64 %671, 11
  %675 = add i64 %674, %673
  %676 = inttoptr i64 %675 to i8*
  store i8 121, i8* %676, align 1
  %677 = load i32, i32* %88, align 4
  %678 = load i32, i32* %89, align 8
  %679 = icmp eq i32 %677, %678
  br i1 %679, label %680, label %682

680:                                              ; preds = %668
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %681 = load i32, i32* %88, align 4
  br label %682

682:                                              ; preds = %680, %668
  %683 = phi i32 [ %681, %680 ], [ %677, %668 ]
  %684 = load i64*, i64** %87, align 8
  %685 = load i64, i64* %684, align 8
  %686 = add nsw i32 %683, 1
  store i32 %686, i32* %88, align 4
  %687 = sext i32 %683 to i64
  %688 = add i64 %685, 11
  %689 = add i64 %688, %687
  %690 = inttoptr i64 %689 to i8*
  store i8 32, i8* %690, align 1
  %691 = load i32, i32* %88, align 4
  %692 = load i32, i32* %89, align 8
  %693 = icmp eq i32 %691, %692
  br i1 %693, label %694, label %696

694:                                              ; preds = %682
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %695 = load i32, i32* %88, align 4
  br label %696

696:                                              ; preds = %694, %682
  %697 = phi i32 [ %695, %694 ], [ %691, %682 ]
  %698 = load i64*, i64** %87, align 8
  %699 = load i64, i64* %698, align 8
  %700 = add nsw i32 %697, 1
  store i32 %700, i32* %88, align 4
  %701 = sext i32 %697 to i64
  %702 = add i64 %699, 11
  %703 = add i64 %702, %701
  %704 = inttoptr i64 %703 to i8*
  store i8 39, i8* %704, align 1
  %705 = load i32, i32* %88, align 4
  %706 = load i32, i32* %89, align 8
  %707 = icmp eq i32 %705, %706
  br i1 %707, label %708, label %188

708:                                              ; preds = %696
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  br label %188

709:                                              ; preds = %175
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %710 = load i32, i32* %88, align 4
  br label %711

711:                                              ; preds = %709, %175
  %712 = phi i32 [ %710, %709 ], [ %185, %175 ]
  %713 = load i64*, i64** %87, align 8
  %714 = load i64, i64* %713, align 8
  %715 = add nsw i32 %712, 1
  store i32 %715, i32* %88, align 4
  %716 = shl nsw i32 %712, 1
  %717 = sext i32 %716 to i64
  %718 = add i64 %714, 11
  %719 = add i64 %718, %717
  %720 = inttoptr i64 %719 to i16*
  store i16 111, i16* %720, align 2
  %721 = load i32, i32* %88, align 4
  %722 = load i32, i32* %89, align 8
  %723 = icmp eq i32 %721, %722
  br i1 %723, label %724, label %726

724:                                              ; preds = %711
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %725 = load i32, i32* %88, align 4
  br label %726

726:                                              ; preds = %724, %711
  %727 = phi i32 [ %725, %724 ], [ %721, %711 ]
  %728 = load i64*, i64** %87, align 8
  %729 = load i64, i64* %728, align 8
  %730 = add nsw i32 %727, 1
  store i32 %730, i32* %88, align 4
  %731 = shl nsw i32 %727, 1
  %732 = sext i32 %731 to i64
  %733 = add i64 %729, 11
  %734 = add i64 %733, %732
  %735 = inttoptr i64 %734 to i16*
  store i16 112, i16* %735, align 2
  %736 = load i32, i32* %88, align 4
  %737 = load i32, i32* %89, align 8
  %738 = icmp eq i32 %736, %737
  br i1 %738, label %739, label %741

739:                                              ; preds = %726
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %740 = load i32, i32* %88, align 4
  br label %741

741:                                              ; preds = %739, %726
  %742 = phi i32 [ %740, %739 ], [ %736, %726 ]
  %743 = load i64*, i64** %87, align 8
  %744 = load i64, i64* %743, align 8
  %745 = add nsw i32 %742, 1
  store i32 %745, i32* %88, align 4
  %746 = shl nsw i32 %742, 1
  %747 = sext i32 %746 to i64
  %748 = add i64 %744, 11
  %749 = add i64 %748, %747
  %750 = inttoptr i64 %749 to i16*
  store i16 101, i16* %750, align 2
  %751 = load i32, i32* %88, align 4
  %752 = load i32, i32* %89, align 8
  %753 = icmp eq i32 %751, %752
  br i1 %753, label %754, label %756

754:                                              ; preds = %741
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %755 = load i32, i32* %88, align 4
  br label %756

756:                                              ; preds = %754, %741
  %757 = phi i32 [ %755, %754 ], [ %751, %741 ]
  %758 = load i64*, i64** %87, align 8
  %759 = load i64, i64* %758, align 8
  %760 = add nsw i32 %757, 1
  store i32 %760, i32* %88, align 4
  %761 = shl nsw i32 %757, 1
  %762 = sext i32 %761 to i64
  %763 = add i64 %759, 11
  %764 = add i64 %763, %762
  %765 = inttoptr i64 %764 to i16*
  store i16 114, i16* %765, align 2
  %766 = load i32, i32* %88, align 4
  %767 = load i32, i32* %89, align 8
  %768 = icmp eq i32 %766, %767
  br i1 %768, label %769, label %771

769:                                              ; preds = %756
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %770 = load i32, i32* %88, align 4
  br label %771

771:                                              ; preds = %769, %756
  %772 = phi i32 [ %770, %769 ], [ %766, %756 ]
  %773 = load i64*, i64** %87, align 8
  %774 = load i64, i64* %773, align 8
  %775 = add nsw i32 %772, 1
  store i32 %775, i32* %88, align 4
  %776 = shl nsw i32 %772, 1
  %777 = sext i32 %776 to i64
  %778 = add i64 %774, 11
  %779 = add i64 %778, %777
  %780 = inttoptr i64 %779 to i16*
  store i16 116, i16* %780, align 2
  %781 = load i32, i32* %88, align 4
  %782 = load i32, i32* %89, align 8
  %783 = icmp eq i32 %781, %782
  br i1 %783, label %784, label %786

784:                                              ; preds = %771
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %785 = load i32, i32* %88, align 4
  br label %786

786:                                              ; preds = %784, %771
  %787 = phi i32 [ %785, %784 ], [ %781, %771 ]
  %788 = load i64*, i64** %87, align 8
  %789 = load i64, i64* %788, align 8
  %790 = add nsw i32 %787, 1
  store i32 %790, i32* %88, align 4
  %791 = shl nsw i32 %787, 1
  %792 = sext i32 %791 to i64
  %793 = add i64 %789, 11
  %794 = add i64 %793, %792
  %795 = inttoptr i64 %794 to i16*
  store i16 121, i16* %795, align 2
  %796 = load i32, i32* %88, align 4
  %797 = load i32, i32* %89, align 8
  %798 = icmp eq i32 %796, %797
  br i1 %798, label %799, label %801

799:                                              ; preds = %786
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %800 = load i32, i32* %88, align 4
  br label %801

801:                                              ; preds = %799, %786
  %802 = phi i32 [ %800, %799 ], [ %796, %786 ]
  %803 = load i64*, i64** %87, align 8
  %804 = load i64, i64* %803, align 8
  %805 = add nsw i32 %802, 1
  store i32 %805, i32* %88, align 4
  %806 = shl nsw i32 %802, 1
  %807 = sext i32 %806 to i64
  %808 = add i64 %804, 11
  %809 = add i64 %808, %807
  %810 = inttoptr i64 %809 to i16*
  store i16 32, i16* %810, align 2
  %811 = load i32, i32* %88, align 4
  %812 = load i32, i32* %89, align 8
  %813 = icmp eq i32 %811, %812
  br i1 %813, label %814, label %816

814:                                              ; preds = %801
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  %815 = load i32, i32* %88, align 4
  br label %816

816:                                              ; preds = %814, %801
  %817 = phi i32 [ %815, %814 ], [ %811, %801 ]
  %818 = load i64*, i64** %87, align 8
  %819 = load i64, i64* %818, align 8
  %820 = add nsw i32 %817, 1
  store i32 %820, i32* %88, align 4
  %821 = shl nsw i32 %817, 1
  %822 = sext i32 %821 to i64
  %823 = add i64 %819, 11
  %824 = add i64 %823, %822
  %825 = inttoptr i64 %824 to i16*
  store i16 39, i16* %825, align 2
  %826 = load i32, i32* %88, align 4
  %827 = load i32, i32* %89, align 8
  %828 = icmp eq i32 %826, %827
  br i1 %828, label %829, label %188

829:                                              ; preds = %816
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %83) #7
  br label %188
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal31CircularStructureMessageBuilder9AppendSmiENS0_3SmiE(%"class.v8::internal::CircularStructureMessageBuilder"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [100 x i8], align 16
  %4 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0
  %6 = trunc i64 %1 to i32
  %7 = ashr i32 %6, 1
  %8 = call i8* @_ZN2v88internal12IntToCStringEiNS0_6VectorIcEE(i32 %7, i8* nonnull %4, i64 100) #7
  %9 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = load i8, i8* %8, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %11, label %19, label %14

14:                                               ; preds = %2
  br i1 %13, label %64, label %15

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 4
  %18 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 3
  br label %43

19:                                               ; preds = %2
  br i1 %13, label %64, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 4
  %23 = getelementptr inbounds %"class.v8::internal::CircularStructureMessageBuilder", %"class.v8::internal::CircularStructureMessageBuilder"* %0, i64 0, i32 0, i32 3
  br label %24

24:                                               ; preds = %40, %20
  %25 = phi i8 [ %12, %20 ], [ %41, %40 ]
  %26 = phi i8* [ %8, %20 ], [ %27, %40 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  %28 = load i64*, i64** %21, align 8
  %29 = load i64, i64* %28, align 8
  %30 = load i32, i32* %22, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %22, align 4
  %32 = sext i32 %30 to i64
  %33 = add i64 %29, 11
  %34 = add i64 %33, %32
  %35 = inttoptr i64 %34 to i8*
  store i8 %25, i8* %35, align 1
  %36 = load i32, i32* %22, align 4
  %37 = load i32, i32* %23, align 8
  %38 = icmp eq i32 %36, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %24
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %5) #7
  br label %40

40:                                               ; preds = %39, %24
  %41 = load i8, i8* %27, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %64, label %24

43:                                               ; preds = %61, %15
  %44 = phi i8 [ %12, %15 ], [ %62, %61 ]
  %45 = phi i8* [ %8, %15 ], [ %46, %61 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 1
  %47 = load i64*, i64** %16, align 8
  %48 = load i64, i64* %47, align 8
  %49 = load i32, i32* %17, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %17, align 4
  %51 = zext i8 %44 to i16
  %52 = shl nsw i32 %49, 1
  %53 = sext i32 %52 to i64
  %54 = add i64 %48, 11
  %55 = add i64 %54, %53
  %56 = inttoptr i64 %55 to i16*
  store i16 %51, i16* %56, align 2
  %57 = load i32, i32* %17, align 4
  %58 = load i32, i32* %18, align 8
  %59 = icmp eq i32 %57, %58
  br i1 %59, label %60, label %61

60:                                               ; preds = %43
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %5) #7
  br label %61

61:                                               ; preds = %60, %43
  %62 = load i8, i8* %46, align 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %43

64:                                               ; preds = %61, %40, %14, %19
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %4) #7
  ret void
}

declare i64* @_ZN2v88internal8JSObject14FastPropertyAtENS0_6HandleIS1_EENS0_14RepresentationENS0_10FieldIndexE(i64*, i8, i64) local_unnamed_addr #2

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp ult i8 %3, 6
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #14
  unreachable

6:                                                ; preds = %1
  %7 = sext i8 %3 to i64
  %8 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZNK2v88internal14Representation8MnemonicEv, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  ret i8* %9
}

declare zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal15JsonStringifier10Serialize_ILb1EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_(%"class.v8::internal::JsonStringifier"*, i64*, i1 zeroext, i64*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Representation", align 1
  %6 = ptrtoint i64* %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 6, i32 1, i32 3
  %11 = load atomic i64, i64* %10 monotonic, align 8
  %12 = icmp ult i64 %9, %11
  br i1 %12, label %13, label %23

13:                                               ; preds = %4
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 6
  %16 = tail call i64 @_ZN2v88internal10StackGuard16HandleInterruptsEv(%"class.v8::internal::StackGuard"* %15) #7
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 32
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %16 to i32
  %21 = trunc i64 %19 to i32
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %3307, label %23

23:                                               ; preds = %4, %13
  %24 = load i64, i64* %1, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %51, label %27

27:                                               ; preds = %23
  %28 = and i64 %24, -4294967296
  %29 = add i64 %24, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %28, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = icmp ugt i16 %36, 185
  br i1 %37, label %46, label %38

38:                                               ; preds = %27
  %39 = load atomic i32, i32* %30 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %28, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = icmp eq i16 %44, 65
  br i1 %45, label %46, label %51

46:                                               ; preds = %27, %38
  %47 = tail call i64* @_ZN2v88internal15JsonStringifier19ApplyToJsonFunctionENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::JsonStringifier"* %0, i64* %1, i64* %3)
  %48 = icmp eq i64* %47, null
  br i1 %48, label %3307, label %49

49:                                               ; preds = %46
  %50 = ptrtoint i64* %47 to i64
  br label %51

51:                                               ; preds = %23, %49, %38
  %52 = phi i64 [ %6, %38 ], [ %50, %49 ], [ %6, %23 ]
  %53 = inttoptr i64 %52 to i64*
  %54 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 4, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = icmp eq i64* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = tail call i64* @_ZN2v88internal15JsonStringifier21ApplyReplacerFunctionENS0_6HandleINS0_6ObjectEEES4_S4_(%"class.v8::internal::JsonStringifier"* %0, i64* %53, i64* %3, i64* %1)
  %59 = icmp eq i64* %58, null
  br i1 %59, label %3307, label %60

60:                                               ; preds = %57, %51
  %61 = phi i64* [ %53, %51 ], [ %58, %57 ]
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %259

65:                                               ; preds = %60
  br i1 %2, label %66, label %98

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %68 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %75 = load i32, i32* %74, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %74, align 4
  br i1 %70, label %77, label %87

77:                                               ; preds = %66
  %78 = sext i32 %75 to i64
  %79 = add i64 %73, 11
  %80 = add i64 %79, %78
  %81 = inttoptr i64 %80 to i8*
  store i8 44, i8* %81, align 1
  %82 = load i32, i32* %74, align 4
  %83 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %82, %84
  br i1 %85, label %86, label %98

86:                                               ; preds = %77
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %67) #7
  br label %98

87:                                               ; preds = %66
  %88 = shl nsw i32 %75, 1
  %89 = sext i32 %88 to i64
  %90 = add i64 %73, 11
  %91 = add i64 %90, %89
  %92 = inttoptr i64 %91 to i16*
  store i16 44, i16* %92, align 2
  %93 = load i32, i32* %74, align 4
  %94 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %93, %95
  br i1 %96, label %97, label %98

97:                                               ; preds = %87
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %67) #7
  br label %98

98:                                               ; preds = %97, %87, %86, %77, %65
  %99 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %100 = load i16*, i16** %99, align 8
  %101 = icmp eq i16* %100, null
  br i1 %101, label %193, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %104 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %108 = load i64*, i64** %107, align 8
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %111 = load i32, i32* %110, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %110, align 4
  br i1 %106, label %113, label %123

113:                                              ; preds = %102
  %114 = sext i32 %111 to i64
  %115 = add i64 %109, 11
  %116 = add i64 %115, %114
  %117 = inttoptr i64 %116 to i8*
  store i8 10, i8* %117, align 1
  %118 = load i32, i32* %110, align 4
  %119 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %120 = load i32, i32* %119, align 8
  %121 = icmp eq i32 %118, %120
  br i1 %121, label %122, label %134

122:                                              ; preds = %113
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %103) #7
  br label %134

123:                                              ; preds = %102
  %124 = shl nsw i32 %111, 1
  %125 = sext i32 %124 to i64
  %126 = add i64 %109, 11
  %127 = add i64 %126, %125
  %128 = inttoptr i64 %127 to i16*
  store i16 10, i16* %128, align 2
  %129 = load i32, i32* %110, align 4
  %130 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %129, %131
  br i1 %132, label %133, label %134

133:                                              ; preds = %123
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %103) #7
  br label %134

134:                                              ; preds = %133, %123, %122, %113
  %135 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %193

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %140

140:                                              ; preds = %189, %138
  %141 = phi i32 [ 0, %138 ], [ %190, %189 ]
  %142 = load i16*, i16** %99, align 8
  %143 = load i32, i32* %104, align 8
  %144 = icmp eq i32 %143, 0
  %145 = load i16, i16* %142, align 2
  %146 = icmp eq i16 %145, 0
  br i1 %144, label %148, label %147

147:                                              ; preds = %140
  br i1 %146, label %189, label %169

148:                                              ; preds = %140
  br i1 %146, label %189, label %149

149:                                              ; preds = %148, %166
  %150 = phi i16 [ %167, %166 ], [ %145, %148 ]
  %151 = phi i16* [ %152, %166 ], [ %142, %148 ]
  %152 = getelementptr inbounds i16, i16* %151, i64 1
  %153 = load i64*, i64** %107, align 8
  %154 = load i64, i64* %153, align 8
  %155 = load i32, i32* %110, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %110, align 4
  %157 = trunc i16 %150 to i8
  %158 = sext i32 %155 to i64
  %159 = add i64 %154, 11
  %160 = add i64 %159, %158
  %161 = inttoptr i64 %160 to i8*
  store i8 %157, i8* %161, align 1
  %162 = load i32, i32* %110, align 4
  %163 = load i32, i32* %139, align 8
  %164 = icmp eq i32 %162, %163
  br i1 %164, label %165, label %166

165:                                              ; preds = %149
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %103) #7
  br label %166

166:                                              ; preds = %165, %149
  %167 = load i16, i16* %152, align 2
  %168 = icmp eq i16 %167, 0
  br i1 %168, label %189, label %149

169:                                              ; preds = %147, %186
  %170 = phi i16 [ %187, %186 ], [ %145, %147 ]
  %171 = phi i16* [ %172, %186 ], [ %142, %147 ]
  %172 = getelementptr inbounds i16, i16* %171, i64 1
  %173 = load i64*, i64** %107, align 8
  %174 = load i64, i64* %173, align 8
  %175 = load i32, i32* %110, align 4
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* %110, align 4
  %177 = shl nsw i32 %175, 1
  %178 = sext i32 %177 to i64
  %179 = add i64 %174, 11
  %180 = add i64 %179, %178
  %181 = inttoptr i64 %180 to i16*
  store i16 %170, i16* %181, align 2
  %182 = load i32, i32* %110, align 4
  %183 = load i32, i32* %139, align 8
  %184 = icmp eq i32 %182, %183
  br i1 %184, label %185, label %186

185:                                              ; preds = %169
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %103) #7
  br label %186

186:                                              ; preds = %185, %169
  %187 = load i16, i16* %172, align 2
  %188 = icmp eq i16 %187, 0
  br i1 %188, label %189, label %169

189:                                              ; preds = %186, %166, %148, %147
  %190 = add nuw nsw i32 %141, 1
  %191 = load i32, i32* %135, align 8
  %192 = icmp slt i32 %190, %191
  br i1 %192, label %140, label %193

193:                                              ; preds = %189, %134, %98
  tail call void @_ZN2v88internal15JsonStringifier15SerializeStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %3) #7
  %194 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %195 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %196 = load i32, i32* %195, align 8
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %199 = load i64*, i64** %198, align 8
  %200 = load i64, i64* %199, align 8
  %201 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %202 = load i32, i32* %201, align 4
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %201, align 4
  br i1 %197, label %204, label %214

204:                                              ; preds = %193
  %205 = sext i32 %202 to i64
  %206 = add i64 %200, 11
  %207 = add i64 %206, %205
  %208 = inttoptr i64 %207 to i8*
  store i8 58, i8* %208, align 1
  %209 = load i32, i32* %201, align 4
  %210 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %211 = load i32, i32* %210, align 8
  %212 = icmp eq i32 %209, %211
  br i1 %212, label %213, label %225

213:                                              ; preds = %204
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %194) #7
  br label %225

214:                                              ; preds = %193
  %215 = shl nsw i32 %202, 1
  %216 = sext i32 %215 to i64
  %217 = add i64 %200, 11
  %218 = add i64 %217, %216
  %219 = inttoptr i64 %218 to i16*
  store i16 58, i16* %219, align 2
  %220 = load i32, i32* %201, align 4
  %221 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %222 = load i32, i32* %221, align 8
  %223 = icmp eq i32 %220, %222
  br i1 %223, label %224, label %225

224:                                              ; preds = %214
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %194) #7
  br label %225

225:                                              ; preds = %224, %214, %213, %204
  %226 = load i16*, i16** %99, align 8
  %227 = icmp eq i16* %226, null
  br i1 %227, label %256, label %228

228:                                              ; preds = %225
  %229 = load i32, i32* %195, align 8
  %230 = icmp eq i32 %229, 0
  %231 = load i64*, i64** %198, align 8
  %232 = load i64, i64* %231, align 8
  %233 = load i32, i32* %201, align 4
  %234 = add nsw i32 %233, 1
  store i32 %234, i32* %201, align 4
  br i1 %230, label %235, label %245

235:                                              ; preds = %228
  %236 = sext i32 %233 to i64
  %237 = add i64 %232, 11
  %238 = add i64 %237, %236
  %239 = inttoptr i64 %238 to i8*
  store i8 32, i8* %239, align 1
  %240 = load i32, i32* %201, align 4
  %241 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %242 = load i32, i32* %241, align 8
  %243 = icmp eq i32 %240, %242
  br i1 %243, label %244, label %256

244:                                              ; preds = %235
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %194) #7
  br label %256

245:                                              ; preds = %228
  %246 = shl nsw i32 %233, 1
  %247 = sext i32 %246 to i64
  %248 = add i64 %232, 11
  %249 = add i64 %248, %247
  %250 = inttoptr i64 %249 to i16*
  store i16 32, i16* %250, align 2
  %251 = load i32, i32* %201, align 4
  %252 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %251, %253
  br i1 %254, label %255, label %256

255:                                              ; preds = %245
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %194) #7
  br label %256

256:                                              ; preds = %225, %235, %244, %245, %255
  %257 = load i64, i64* %61, align 8
  %258 = tail call i32 @_ZN2v88internal15JsonStringifier12SerializeSmiENS0_3SmiE(%"class.v8::internal::JsonStringifier"* %0, i64 %257)
  br label %3307

259:                                              ; preds = %60
  %260 = and i64 %62, -4294967296
  %261 = add i64 %62, -1
  %262 = inttoptr i64 %261 to i32*
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = zext i32 %263 to i64
  %265 = or i64 %260, %264
  %266 = add i64 %265, 7
  %267 = inttoptr i64 %266 to i16*
  %268 = load atomic i16, i16* %267 monotonic, align 2
  switch i16 %268, label %2467 [
    i16 66, label %269
    i16 65, label %466
    i16 67, label %472
    i16 1085, label %1213
    i16 1041, label %2274
    i16 64, label %3307
  ]

269:                                              ; preds = %259
  br i1 %2, label %270, label %302

270:                                              ; preds = %269
  %271 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %272 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %273 = load i32, i32* %272, align 8
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %276 = load i64*, i64** %275, align 8
  %277 = load i64, i64* %276, align 8
  %278 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %279 = load i32, i32* %278, align 4
  %280 = add nsw i32 %279, 1
  store i32 %280, i32* %278, align 4
  br i1 %274, label %281, label %291

281:                                              ; preds = %270
  %282 = sext i32 %279 to i64
  %283 = add i64 %277, 11
  %284 = add i64 %283, %282
  %285 = inttoptr i64 %284 to i8*
  store i8 44, i8* %285, align 1
  %286 = load i32, i32* %278, align 4
  %287 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %288 = load i32, i32* %287, align 8
  %289 = icmp eq i32 %286, %288
  br i1 %289, label %290, label %302

290:                                              ; preds = %281
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %271) #7
  br label %302

291:                                              ; preds = %270
  %292 = shl nsw i32 %279, 1
  %293 = sext i32 %292 to i64
  %294 = add i64 %277, 11
  %295 = add i64 %294, %293
  %296 = inttoptr i64 %295 to i16*
  store i16 44, i16* %296, align 2
  %297 = load i32, i32* %278, align 4
  %298 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %299 = load i32, i32* %298, align 8
  %300 = icmp eq i32 %297, %299
  br i1 %300, label %301, label %302

301:                                              ; preds = %291
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %271) #7
  br label %302

302:                                              ; preds = %301, %291, %290, %281, %269
  %303 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %304 = load i16*, i16** %303, align 8
  %305 = icmp eq i16* %304, null
  br i1 %305, label %397, label %306

306:                                              ; preds = %302
  %307 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %308 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %309 = load i32, i32* %308, align 8
  %310 = icmp eq i32 %309, 0
  %311 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %312 = load i64*, i64** %311, align 8
  %313 = load i64, i64* %312, align 8
  %314 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %315 = load i32, i32* %314, align 4
  %316 = add nsw i32 %315, 1
  store i32 %316, i32* %314, align 4
  br i1 %310, label %317, label %327

317:                                              ; preds = %306
  %318 = sext i32 %315 to i64
  %319 = add i64 %313, 11
  %320 = add i64 %319, %318
  %321 = inttoptr i64 %320 to i8*
  store i8 10, i8* %321, align 1
  %322 = load i32, i32* %314, align 4
  %323 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %324 = load i32, i32* %323, align 8
  %325 = icmp eq i32 %322, %324
  br i1 %325, label %326, label %338

326:                                              ; preds = %317
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %307) #7
  br label %338

327:                                              ; preds = %306
  %328 = shl nsw i32 %315, 1
  %329 = sext i32 %328 to i64
  %330 = add i64 %313, 11
  %331 = add i64 %330, %329
  %332 = inttoptr i64 %331 to i16*
  store i16 10, i16* %332, align 2
  %333 = load i32, i32* %314, align 4
  %334 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %335 = load i32, i32* %334, align 8
  %336 = icmp eq i32 %333, %335
  br i1 %336, label %337, label %338

337:                                              ; preds = %327
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %307) #7
  br label %338

338:                                              ; preds = %337, %327, %326, %317
  %339 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %340 = load i32, i32* %339, align 8
  %341 = icmp sgt i32 %340, 0
  br i1 %341, label %342, label %397

342:                                              ; preds = %338
  %343 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %344

344:                                              ; preds = %393, %342
  %345 = phi i32 [ 0, %342 ], [ %394, %393 ]
  %346 = load i16*, i16** %303, align 8
  %347 = load i32, i32* %308, align 8
  %348 = icmp eq i32 %347, 0
  %349 = load i16, i16* %346, align 2
  %350 = icmp eq i16 %349, 0
  br i1 %348, label %352, label %351

351:                                              ; preds = %344
  br i1 %350, label %393, label %373

352:                                              ; preds = %344
  br i1 %350, label %393, label %353

353:                                              ; preds = %352, %370
  %354 = phi i16 [ %371, %370 ], [ %349, %352 ]
  %355 = phi i16* [ %356, %370 ], [ %346, %352 ]
  %356 = getelementptr inbounds i16, i16* %355, i64 1
  %357 = load i64*, i64** %311, align 8
  %358 = load i64, i64* %357, align 8
  %359 = load i32, i32* %314, align 4
  %360 = add nsw i32 %359, 1
  store i32 %360, i32* %314, align 4
  %361 = trunc i16 %354 to i8
  %362 = sext i32 %359 to i64
  %363 = add i64 %358, 11
  %364 = add i64 %363, %362
  %365 = inttoptr i64 %364 to i8*
  store i8 %361, i8* %365, align 1
  %366 = load i32, i32* %314, align 4
  %367 = load i32, i32* %343, align 8
  %368 = icmp eq i32 %366, %367
  br i1 %368, label %369, label %370

369:                                              ; preds = %353
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %307) #7
  br label %370

370:                                              ; preds = %369, %353
  %371 = load i16, i16* %356, align 2
  %372 = icmp eq i16 %371, 0
  br i1 %372, label %393, label %353

373:                                              ; preds = %351, %390
  %374 = phi i16 [ %391, %390 ], [ %349, %351 ]
  %375 = phi i16* [ %376, %390 ], [ %346, %351 ]
  %376 = getelementptr inbounds i16, i16* %375, i64 1
  %377 = load i64*, i64** %311, align 8
  %378 = load i64, i64* %377, align 8
  %379 = load i32, i32* %314, align 4
  %380 = add nsw i32 %379, 1
  store i32 %380, i32* %314, align 4
  %381 = shl nsw i32 %379, 1
  %382 = sext i32 %381 to i64
  %383 = add i64 %378, 11
  %384 = add i64 %383, %382
  %385 = inttoptr i64 %384 to i16*
  store i16 %374, i16* %385, align 2
  %386 = load i32, i32* %314, align 4
  %387 = load i32, i32* %343, align 8
  %388 = icmp eq i32 %386, %387
  br i1 %388, label %389, label %390

389:                                              ; preds = %373
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %307) #7
  br label %390

390:                                              ; preds = %389, %373
  %391 = load i16, i16* %376, align 2
  %392 = icmp eq i16 %391, 0
  br i1 %392, label %393, label %373

393:                                              ; preds = %390, %370, %352, %351
  %394 = add nuw nsw i32 %345, 1
  %395 = load i32, i32* %339, align 8
  %396 = icmp slt i32 %394, %395
  br i1 %396, label %344, label %397

397:                                              ; preds = %393, %338, %302
  tail call void @_ZN2v88internal15JsonStringifier15SerializeStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %3) #7
  %398 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %399 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %400 = load i32, i32* %399, align 8
  %401 = icmp eq i32 %400, 0
  %402 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %403 = load i64*, i64** %402, align 8
  %404 = load i64, i64* %403, align 8
  %405 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %406 = load i32, i32* %405, align 4
  %407 = add nsw i32 %406, 1
  store i32 %407, i32* %405, align 4
  br i1 %401, label %408, label %418

408:                                              ; preds = %397
  %409 = sext i32 %406 to i64
  %410 = add i64 %404, 11
  %411 = add i64 %410, %409
  %412 = inttoptr i64 %411 to i8*
  store i8 58, i8* %412, align 1
  %413 = load i32, i32* %405, align 4
  %414 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %415 = load i32, i32* %414, align 8
  %416 = icmp eq i32 %413, %415
  br i1 %416, label %417, label %429

417:                                              ; preds = %408
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %398) #7
  br label %429

418:                                              ; preds = %397
  %419 = shl nsw i32 %406, 1
  %420 = sext i32 %419 to i64
  %421 = add i64 %404, 11
  %422 = add i64 %421, %420
  %423 = inttoptr i64 %422 to i16*
  store i16 58, i16* %423, align 2
  %424 = load i32, i32* %405, align 4
  %425 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %426 = load i32, i32* %425, align 8
  %427 = icmp eq i32 %424, %426
  br i1 %427, label %428, label %429

428:                                              ; preds = %418
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %398) #7
  br label %429

429:                                              ; preds = %428, %418, %417, %408
  %430 = load i16*, i16** %303, align 8
  %431 = icmp eq i16* %430, null
  br i1 %431, label %460, label %432

432:                                              ; preds = %429
  %433 = load i32, i32* %399, align 8
  %434 = icmp eq i32 %433, 0
  %435 = load i64*, i64** %402, align 8
  %436 = load i64, i64* %435, align 8
  %437 = load i32, i32* %405, align 4
  %438 = add nsw i32 %437, 1
  store i32 %438, i32* %405, align 4
  br i1 %434, label %439, label %449

439:                                              ; preds = %432
  %440 = sext i32 %437 to i64
  %441 = add i64 %436, 11
  %442 = add i64 %441, %440
  %443 = inttoptr i64 %442 to i8*
  store i8 32, i8* %443, align 1
  %444 = load i32, i32* %405, align 4
  %445 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %446 = load i32, i32* %445, align 8
  %447 = icmp eq i32 %444, %446
  br i1 %447, label %448, label %460

448:                                              ; preds = %439
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %398) #7
  br label %460

449:                                              ; preds = %432
  %450 = shl nsw i32 %437, 1
  %451 = sext i32 %450 to i64
  %452 = add i64 %436, 11
  %453 = add i64 %452, %451
  %454 = inttoptr i64 %453 to i16*
  store i16 32, i16* %454, align 2
  %455 = load i32, i32* %405, align 4
  %456 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %457 = load i32, i32* %456, align 8
  %458 = icmp eq i32 %455, %457
  br i1 %458, label %459, label %460

459:                                              ; preds = %449
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %398) #7
  br label %460

460:                                              ; preds = %429, %439, %448, %449, %459
  %461 = load i64, i64* %61, align 8
  %462 = add i64 %461, 3
  %463 = inttoptr i64 %462 to double*
  %464 = load double, double* %463, align 1
  %465 = tail call i32 @_ZN2v88internal15JsonStringifier15SerializeDoubleEd(%"class.v8::internal::JsonStringifier"* %0, double %464) #7
  br label %3307

466:                                              ; preds = %259
  %467 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %468 = bitcast %"class.v8::internal::Isolate"* %467 to %"class.v8::internal::Factory"*
  %469 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %468, i32 22, i64* null, i64* null, i64* null) #7
  %470 = load i64, i64* %469, align 8
  %471 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %467, i64 %470, %"class.v8::internal::MessageLocation"* null) #7
  br label %3307

472:                                              ; preds = %259
  %473 = add i64 %62, 23
  %474 = inttoptr i64 %473 to i32*
  %475 = load i32, i32* %474, align 4
  %476 = lshr i32 %475, 1
  %477 = trunc i32 %476 to i8
  switch i8 %477, label %3307 [
    i8 0, label %478
    i8 1, label %723
    i8 3, label %968
  ]

478:                                              ; preds = %472
  br i1 %2, label %479, label %511

479:                                              ; preds = %478
  %480 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %481 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %482 = load i32, i32* %481, align 8
  %483 = icmp eq i32 %482, 0
  %484 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %485 = load i64*, i64** %484, align 8
  %486 = load i64, i64* %485, align 8
  %487 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %488 = load i32, i32* %487, align 4
  %489 = add nsw i32 %488, 1
  store i32 %489, i32* %487, align 4
  br i1 %483, label %490, label %500

490:                                              ; preds = %479
  %491 = sext i32 %488 to i64
  %492 = add i64 %486, 11
  %493 = add i64 %492, %491
  %494 = inttoptr i64 %493 to i8*
  store i8 44, i8* %494, align 1
  %495 = load i32, i32* %487, align 4
  %496 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %497 = load i32, i32* %496, align 8
  %498 = icmp eq i32 %495, %497
  br i1 %498, label %499, label %511

499:                                              ; preds = %490
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %480) #7
  br label %511

500:                                              ; preds = %479
  %501 = shl nsw i32 %488, 1
  %502 = sext i32 %501 to i64
  %503 = add i64 %486, 11
  %504 = add i64 %503, %502
  %505 = inttoptr i64 %504 to i16*
  store i16 44, i16* %505, align 2
  %506 = load i32, i32* %487, align 4
  %507 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %508 = load i32, i32* %507, align 8
  %509 = icmp eq i32 %506, %508
  br i1 %509, label %510, label %511

510:                                              ; preds = %500
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %480) #7
  br label %511

511:                                              ; preds = %510, %500, %499, %490, %478
  %512 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %513 = load i16*, i16** %512, align 8
  %514 = icmp eq i16* %513, null
  br i1 %514, label %606, label %515

515:                                              ; preds = %511
  %516 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %517 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %518 = load i32, i32* %517, align 8
  %519 = icmp eq i32 %518, 0
  %520 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %521 = load i64*, i64** %520, align 8
  %522 = load i64, i64* %521, align 8
  %523 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %524 = load i32, i32* %523, align 4
  %525 = add nsw i32 %524, 1
  store i32 %525, i32* %523, align 4
  br i1 %519, label %526, label %536

526:                                              ; preds = %515
  %527 = sext i32 %524 to i64
  %528 = add i64 %522, 11
  %529 = add i64 %528, %527
  %530 = inttoptr i64 %529 to i8*
  store i8 10, i8* %530, align 1
  %531 = load i32, i32* %523, align 4
  %532 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %533 = load i32, i32* %532, align 8
  %534 = icmp eq i32 %531, %533
  br i1 %534, label %535, label %547

535:                                              ; preds = %526
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %516) #7
  br label %547

536:                                              ; preds = %515
  %537 = shl nsw i32 %524, 1
  %538 = sext i32 %537 to i64
  %539 = add i64 %522, 11
  %540 = add i64 %539, %538
  %541 = inttoptr i64 %540 to i16*
  store i16 10, i16* %541, align 2
  %542 = load i32, i32* %523, align 4
  %543 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %544 = load i32, i32* %543, align 8
  %545 = icmp eq i32 %542, %544
  br i1 %545, label %546, label %547

546:                                              ; preds = %536
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %516) #7
  br label %547

547:                                              ; preds = %546, %536, %535, %526
  %548 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %549 = load i32, i32* %548, align 8
  %550 = icmp sgt i32 %549, 0
  br i1 %550, label %551, label %606

551:                                              ; preds = %547
  %552 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %553

553:                                              ; preds = %602, %551
  %554 = phi i32 [ 0, %551 ], [ %603, %602 ]
  %555 = load i16*, i16** %512, align 8
  %556 = load i32, i32* %517, align 8
  %557 = icmp eq i32 %556, 0
  %558 = load i16, i16* %555, align 2
  %559 = icmp eq i16 %558, 0
  br i1 %557, label %561, label %560

560:                                              ; preds = %553
  br i1 %559, label %602, label %582

561:                                              ; preds = %553
  br i1 %559, label %602, label %562

562:                                              ; preds = %561, %579
  %563 = phi i16 [ %580, %579 ], [ %558, %561 ]
  %564 = phi i16* [ %565, %579 ], [ %555, %561 ]
  %565 = getelementptr inbounds i16, i16* %564, i64 1
  %566 = load i64*, i64** %520, align 8
  %567 = load i64, i64* %566, align 8
  %568 = load i32, i32* %523, align 4
  %569 = add nsw i32 %568, 1
  store i32 %569, i32* %523, align 4
  %570 = trunc i16 %563 to i8
  %571 = sext i32 %568 to i64
  %572 = add i64 %567, 11
  %573 = add i64 %572, %571
  %574 = inttoptr i64 %573 to i8*
  store i8 %570, i8* %574, align 1
  %575 = load i32, i32* %523, align 4
  %576 = load i32, i32* %552, align 8
  %577 = icmp eq i32 %575, %576
  br i1 %577, label %578, label %579

578:                                              ; preds = %562
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %516) #7
  br label %579

579:                                              ; preds = %578, %562
  %580 = load i16, i16* %565, align 2
  %581 = icmp eq i16 %580, 0
  br i1 %581, label %602, label %562

582:                                              ; preds = %560, %599
  %583 = phi i16 [ %600, %599 ], [ %558, %560 ]
  %584 = phi i16* [ %585, %599 ], [ %555, %560 ]
  %585 = getelementptr inbounds i16, i16* %584, i64 1
  %586 = load i64*, i64** %520, align 8
  %587 = load i64, i64* %586, align 8
  %588 = load i32, i32* %523, align 4
  %589 = add nsw i32 %588, 1
  store i32 %589, i32* %523, align 4
  %590 = shl nsw i32 %588, 1
  %591 = sext i32 %590 to i64
  %592 = add i64 %587, 11
  %593 = add i64 %592, %591
  %594 = inttoptr i64 %593 to i16*
  store i16 %583, i16* %594, align 2
  %595 = load i32, i32* %523, align 4
  %596 = load i32, i32* %552, align 8
  %597 = icmp eq i32 %595, %596
  br i1 %597, label %598, label %599

598:                                              ; preds = %582
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %516) #7
  br label %599

599:                                              ; preds = %598, %582
  %600 = load i16, i16* %585, align 2
  %601 = icmp eq i16 %600, 0
  br i1 %601, label %602, label %582

602:                                              ; preds = %599, %579, %561, %560
  %603 = add nuw nsw i32 %554, 1
  %604 = load i32, i32* %548, align 8
  %605 = icmp slt i32 %603, %604
  br i1 %605, label %553, label %606

606:                                              ; preds = %602, %547, %511
  tail call void @_ZN2v88internal15JsonStringifier15SerializeStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %3) #7
  %607 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %608 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %609 = load i32, i32* %608, align 8
  %610 = icmp eq i32 %609, 0
  %611 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %612 = load i64*, i64** %611, align 8
  %613 = load i64, i64* %612, align 8
  %614 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %615 = load i32, i32* %614, align 4
  %616 = add nsw i32 %615, 1
  store i32 %616, i32* %614, align 4
  br i1 %610, label %617, label %627

617:                                              ; preds = %606
  %618 = sext i32 %615 to i64
  %619 = add i64 %613, 11
  %620 = add i64 %619, %618
  %621 = inttoptr i64 %620 to i8*
  store i8 58, i8* %621, align 1
  %622 = load i32, i32* %614, align 4
  %623 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %624 = load i32, i32* %623, align 8
  %625 = icmp eq i32 %622, %624
  br i1 %625, label %626, label %638

626:                                              ; preds = %617
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %607) #7
  br label %638

627:                                              ; preds = %606
  %628 = shl nsw i32 %615, 1
  %629 = sext i32 %628 to i64
  %630 = add i64 %613, 11
  %631 = add i64 %630, %629
  %632 = inttoptr i64 %631 to i16*
  store i16 58, i16* %632, align 2
  %633 = load i32, i32* %614, align 4
  %634 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %635 = load i32, i32* %634, align 8
  %636 = icmp eq i32 %633, %635
  br i1 %636, label %637, label %638

637:                                              ; preds = %627
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %607) #7
  br label %638

638:                                              ; preds = %637, %627, %626, %617
  %639 = load i16*, i16** %512, align 8
  %640 = icmp eq i16* %639, null
  br i1 %640, label %669, label %641

641:                                              ; preds = %638
  %642 = load i32, i32* %608, align 8
  %643 = icmp eq i32 %642, 0
  %644 = load i64*, i64** %611, align 8
  %645 = load i64, i64* %644, align 8
  %646 = load i32, i32* %614, align 4
  %647 = add nsw i32 %646, 1
  store i32 %647, i32* %614, align 4
  br i1 %643, label %648, label %658

648:                                              ; preds = %641
  %649 = sext i32 %646 to i64
  %650 = add i64 %645, 11
  %651 = add i64 %650, %649
  %652 = inttoptr i64 %651 to i8*
  store i8 32, i8* %652, align 1
  %653 = load i32, i32* %614, align 4
  %654 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %655 = load i32, i32* %654, align 8
  %656 = icmp eq i32 %653, %655
  br i1 %656, label %657, label %669

657:                                              ; preds = %648
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %607) #7
  br label %669

658:                                              ; preds = %641
  %659 = shl nsw i32 %646, 1
  %660 = sext i32 %659 to i64
  %661 = add i64 %645, 11
  %662 = add i64 %661, %660
  %663 = inttoptr i64 %662 to i16*
  store i16 32, i16* %663, align 2
  %664 = load i32, i32* %614, align 4
  %665 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %666 = load i32, i32* %665, align 8
  %667 = icmp eq i32 %664, %666
  br i1 %667, label %668, label %669

668:                                              ; preds = %658
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %607) #7
  br label %669

669:                                              ; preds = %638, %648, %657, %658, %668
  %670 = load i32, i32* %608, align 8
  %671 = icmp eq i32 %670, 0
  %672 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %673 = load i64*, i64** %611, align 8
  %674 = load i64, i64* %673, align 8
  %675 = load i32, i32* %614, align 4
  %676 = add nsw i32 %675, 1
  store i32 %676, i32* %614, align 4
  br i1 %671, label %686, label %677

677:                                              ; preds = %669
  %678 = shl nsw i32 %675, 1
  %679 = sext i32 %678 to i64
  %680 = add i64 %674, 11
  %681 = add i64 %680, %679
  %682 = inttoptr i64 %681 to i16*
  store i16 102, i16* %682, align 2
  %683 = load i32, i32* %614, align 4
  %684 = load i32, i32* %672, align 8
  %685 = icmp eq i32 %683, %684
  br i1 %685, label %708, label %710

686:                                              ; preds = %669
  %687 = sext i32 %675 to i64
  %688 = add i64 %674, 11
  %689 = add i64 %688, %687
  %690 = inttoptr i64 %689 to i8*
  store i8 102, i8* %690, align 1
  %691 = load i32, i32* %614, align 4
  %692 = load i32, i32* %672, align 8
  %693 = icmp eq i32 %691, %692
  br i1 %693, label %694, label %696

694:                                              ; preds = %686
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %607) #7
  %695 = load i32, i32* %614, align 4
  br label %696

696:                                              ; preds = %694, %686
  %697 = phi i32 [ %695, %694 ], [ %691, %686 ]
  %698 = load i64*, i64** %611, align 8
  %699 = load i64, i64* %698, align 8
  %700 = add nsw i32 %697, 1
  store i32 %700, i32* %614, align 4
  %701 = sext i32 %697 to i64
  %702 = add i64 %699, 11
  %703 = add i64 %702, %701
  %704 = inttoptr i64 %703 to i8*
  store i8 97, i8* %704, align 1
  %705 = load i32, i32* %614, align 4
  %706 = load i32, i32* %672, align 8
  %707 = icmp eq i32 %705, %706
  br i1 %707, label %3309, label %3311

708:                                              ; preds = %677
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %607) #7
  %709 = load i32, i32* %614, align 4
  br label %710

710:                                              ; preds = %708, %677
  %711 = phi i32 [ %709, %708 ], [ %683, %677 ]
  %712 = load i64*, i64** %611, align 8
  %713 = load i64, i64* %712, align 8
  %714 = add nsw i32 %711, 1
  store i32 %714, i32* %614, align 4
  %715 = shl nsw i32 %711, 1
  %716 = sext i32 %715 to i64
  %717 = add i64 %713, 11
  %718 = add i64 %717, %716
  %719 = inttoptr i64 %718 to i16*
  store i16 97, i16* %719, align 2
  %720 = load i32, i32* %614, align 4
  %721 = load i32, i32* %672, align 8
  %722 = icmp eq i32 %720, %721
  br i1 %722, label %3352, label %3354

723:                                              ; preds = %472
  br i1 %2, label %724, label %756

724:                                              ; preds = %723
  %725 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %726 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %727 = load i32, i32* %726, align 8
  %728 = icmp eq i32 %727, 0
  %729 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %730 = load i64*, i64** %729, align 8
  %731 = load i64, i64* %730, align 8
  %732 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %733 = load i32, i32* %732, align 4
  %734 = add nsw i32 %733, 1
  store i32 %734, i32* %732, align 4
  br i1 %728, label %735, label %745

735:                                              ; preds = %724
  %736 = sext i32 %733 to i64
  %737 = add i64 %731, 11
  %738 = add i64 %737, %736
  %739 = inttoptr i64 %738 to i8*
  store i8 44, i8* %739, align 1
  %740 = load i32, i32* %732, align 4
  %741 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %742 = load i32, i32* %741, align 8
  %743 = icmp eq i32 %740, %742
  br i1 %743, label %744, label %756

744:                                              ; preds = %735
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %725) #7
  br label %756

745:                                              ; preds = %724
  %746 = shl nsw i32 %733, 1
  %747 = sext i32 %746 to i64
  %748 = add i64 %731, 11
  %749 = add i64 %748, %747
  %750 = inttoptr i64 %749 to i16*
  store i16 44, i16* %750, align 2
  %751 = load i32, i32* %732, align 4
  %752 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %753 = load i32, i32* %752, align 8
  %754 = icmp eq i32 %751, %753
  br i1 %754, label %755, label %756

755:                                              ; preds = %745
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %725) #7
  br label %756

756:                                              ; preds = %755, %745, %744, %735, %723
  %757 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %758 = load i16*, i16** %757, align 8
  %759 = icmp eq i16* %758, null
  br i1 %759, label %851, label %760

760:                                              ; preds = %756
  %761 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %762 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %763 = load i32, i32* %762, align 8
  %764 = icmp eq i32 %763, 0
  %765 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %766 = load i64*, i64** %765, align 8
  %767 = load i64, i64* %766, align 8
  %768 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %769 = load i32, i32* %768, align 4
  %770 = add nsw i32 %769, 1
  store i32 %770, i32* %768, align 4
  br i1 %764, label %771, label %781

771:                                              ; preds = %760
  %772 = sext i32 %769 to i64
  %773 = add i64 %767, 11
  %774 = add i64 %773, %772
  %775 = inttoptr i64 %774 to i8*
  store i8 10, i8* %775, align 1
  %776 = load i32, i32* %768, align 4
  %777 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %778 = load i32, i32* %777, align 8
  %779 = icmp eq i32 %776, %778
  br i1 %779, label %780, label %792

780:                                              ; preds = %771
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %761) #7
  br label %792

781:                                              ; preds = %760
  %782 = shl nsw i32 %769, 1
  %783 = sext i32 %782 to i64
  %784 = add i64 %767, 11
  %785 = add i64 %784, %783
  %786 = inttoptr i64 %785 to i16*
  store i16 10, i16* %786, align 2
  %787 = load i32, i32* %768, align 4
  %788 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %789 = load i32, i32* %788, align 8
  %790 = icmp eq i32 %787, %789
  br i1 %790, label %791, label %792

791:                                              ; preds = %781
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %761) #7
  br label %792

792:                                              ; preds = %791, %781, %780, %771
  %793 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %794 = load i32, i32* %793, align 8
  %795 = icmp sgt i32 %794, 0
  br i1 %795, label %796, label %851

796:                                              ; preds = %792
  %797 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %798

798:                                              ; preds = %847, %796
  %799 = phi i32 [ 0, %796 ], [ %848, %847 ]
  %800 = load i16*, i16** %757, align 8
  %801 = load i32, i32* %762, align 8
  %802 = icmp eq i32 %801, 0
  %803 = load i16, i16* %800, align 2
  %804 = icmp eq i16 %803, 0
  br i1 %802, label %806, label %805

805:                                              ; preds = %798
  br i1 %804, label %847, label %827

806:                                              ; preds = %798
  br i1 %804, label %847, label %807

807:                                              ; preds = %806, %824
  %808 = phi i16 [ %825, %824 ], [ %803, %806 ]
  %809 = phi i16* [ %810, %824 ], [ %800, %806 ]
  %810 = getelementptr inbounds i16, i16* %809, i64 1
  %811 = load i64*, i64** %765, align 8
  %812 = load i64, i64* %811, align 8
  %813 = load i32, i32* %768, align 4
  %814 = add nsw i32 %813, 1
  store i32 %814, i32* %768, align 4
  %815 = trunc i16 %808 to i8
  %816 = sext i32 %813 to i64
  %817 = add i64 %812, 11
  %818 = add i64 %817, %816
  %819 = inttoptr i64 %818 to i8*
  store i8 %815, i8* %819, align 1
  %820 = load i32, i32* %768, align 4
  %821 = load i32, i32* %797, align 8
  %822 = icmp eq i32 %820, %821
  br i1 %822, label %823, label %824

823:                                              ; preds = %807
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %761) #7
  br label %824

824:                                              ; preds = %823, %807
  %825 = load i16, i16* %810, align 2
  %826 = icmp eq i16 %825, 0
  br i1 %826, label %847, label %807

827:                                              ; preds = %805, %844
  %828 = phi i16 [ %845, %844 ], [ %803, %805 ]
  %829 = phi i16* [ %830, %844 ], [ %800, %805 ]
  %830 = getelementptr inbounds i16, i16* %829, i64 1
  %831 = load i64*, i64** %765, align 8
  %832 = load i64, i64* %831, align 8
  %833 = load i32, i32* %768, align 4
  %834 = add nsw i32 %833, 1
  store i32 %834, i32* %768, align 4
  %835 = shl nsw i32 %833, 1
  %836 = sext i32 %835 to i64
  %837 = add i64 %832, 11
  %838 = add i64 %837, %836
  %839 = inttoptr i64 %838 to i16*
  store i16 %828, i16* %839, align 2
  %840 = load i32, i32* %768, align 4
  %841 = load i32, i32* %797, align 8
  %842 = icmp eq i32 %840, %841
  br i1 %842, label %843, label %844

843:                                              ; preds = %827
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %761) #7
  br label %844

844:                                              ; preds = %843, %827
  %845 = load i16, i16* %830, align 2
  %846 = icmp eq i16 %845, 0
  br i1 %846, label %847, label %827

847:                                              ; preds = %844, %824, %806, %805
  %848 = add nuw nsw i32 %799, 1
  %849 = load i32, i32* %793, align 8
  %850 = icmp slt i32 %848, %849
  br i1 %850, label %798, label %851

851:                                              ; preds = %847, %792, %756
  tail call void @_ZN2v88internal15JsonStringifier15SerializeStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %3) #7
  %852 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %853 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %854 = load i32, i32* %853, align 8
  %855 = icmp eq i32 %854, 0
  %856 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %857 = load i64*, i64** %856, align 8
  %858 = load i64, i64* %857, align 8
  %859 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %860 = load i32, i32* %859, align 4
  %861 = add nsw i32 %860, 1
  store i32 %861, i32* %859, align 4
  br i1 %855, label %862, label %872

862:                                              ; preds = %851
  %863 = sext i32 %860 to i64
  %864 = add i64 %858, 11
  %865 = add i64 %864, %863
  %866 = inttoptr i64 %865 to i8*
  store i8 58, i8* %866, align 1
  %867 = load i32, i32* %859, align 4
  %868 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %869 = load i32, i32* %868, align 8
  %870 = icmp eq i32 %867, %869
  br i1 %870, label %871, label %883

871:                                              ; preds = %862
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %852) #7
  br label %883

872:                                              ; preds = %851
  %873 = shl nsw i32 %860, 1
  %874 = sext i32 %873 to i64
  %875 = add i64 %858, 11
  %876 = add i64 %875, %874
  %877 = inttoptr i64 %876 to i16*
  store i16 58, i16* %877, align 2
  %878 = load i32, i32* %859, align 4
  %879 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %880 = load i32, i32* %879, align 8
  %881 = icmp eq i32 %878, %880
  br i1 %881, label %882, label %883

882:                                              ; preds = %872
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %852) #7
  br label %883

883:                                              ; preds = %882, %872, %871, %862
  %884 = load i16*, i16** %757, align 8
  %885 = icmp eq i16* %884, null
  br i1 %885, label %914, label %886

886:                                              ; preds = %883
  %887 = load i32, i32* %853, align 8
  %888 = icmp eq i32 %887, 0
  %889 = load i64*, i64** %856, align 8
  %890 = load i64, i64* %889, align 8
  %891 = load i32, i32* %859, align 4
  %892 = add nsw i32 %891, 1
  store i32 %892, i32* %859, align 4
  br i1 %888, label %893, label %903

893:                                              ; preds = %886
  %894 = sext i32 %891 to i64
  %895 = add i64 %890, 11
  %896 = add i64 %895, %894
  %897 = inttoptr i64 %896 to i8*
  store i8 32, i8* %897, align 1
  %898 = load i32, i32* %859, align 4
  %899 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %900 = load i32, i32* %899, align 8
  %901 = icmp eq i32 %898, %900
  br i1 %901, label %902, label %914

902:                                              ; preds = %893
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %852) #7
  br label %914

903:                                              ; preds = %886
  %904 = shl nsw i32 %891, 1
  %905 = sext i32 %904 to i64
  %906 = add i64 %890, 11
  %907 = add i64 %906, %905
  %908 = inttoptr i64 %907 to i16*
  store i16 32, i16* %908, align 2
  %909 = load i32, i32* %859, align 4
  %910 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %911 = load i32, i32* %910, align 8
  %912 = icmp eq i32 %909, %911
  br i1 %912, label %913, label %914

913:                                              ; preds = %903
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %852) #7
  br label %914

914:                                              ; preds = %883, %893, %902, %903, %913
  %915 = load i32, i32* %853, align 8
  %916 = icmp eq i32 %915, 0
  %917 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %918 = load i64*, i64** %856, align 8
  %919 = load i64, i64* %918, align 8
  %920 = load i32, i32* %859, align 4
  %921 = add nsw i32 %920, 1
  store i32 %921, i32* %859, align 4
  br i1 %916, label %931, label %922

922:                                              ; preds = %914
  %923 = shl nsw i32 %920, 1
  %924 = sext i32 %923 to i64
  %925 = add i64 %919, 11
  %926 = add i64 %925, %924
  %927 = inttoptr i64 %926 to i16*
  store i16 116, i16* %927, align 2
  %928 = load i32, i32* %859, align 4
  %929 = load i32, i32* %917, align 8
  %930 = icmp eq i32 %928, %929
  br i1 %930, label %953, label %955

931:                                              ; preds = %914
  %932 = sext i32 %920 to i64
  %933 = add i64 %919, 11
  %934 = add i64 %933, %932
  %935 = inttoptr i64 %934 to i8*
  store i8 116, i8* %935, align 1
  %936 = load i32, i32* %859, align 4
  %937 = load i32, i32* %917, align 8
  %938 = icmp eq i32 %936, %937
  br i1 %938, label %939, label %941

939:                                              ; preds = %931
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %852) #7
  %940 = load i32, i32* %859, align 4
  br label %941

941:                                              ; preds = %939, %931
  %942 = phi i32 [ %940, %939 ], [ %936, %931 ]
  %943 = load i64*, i64** %856, align 8
  %944 = load i64, i64* %943, align 8
  %945 = add nsw i32 %942, 1
  store i32 %945, i32* %859, align 4
  %946 = sext i32 %942 to i64
  %947 = add i64 %944, 11
  %948 = add i64 %947, %946
  %949 = inttoptr i64 %948 to i8*
  store i8 114, i8* %949, align 1
  %950 = load i32, i32* %859, align 4
  %951 = load i32, i32* %917, align 8
  %952 = icmp eq i32 %950, %951
  br i1 %952, label %3398, label %3400

953:                                              ; preds = %922
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %852) #7
  %954 = load i32, i32* %859, align 4
  br label %955

955:                                              ; preds = %953, %922
  %956 = phi i32 [ %954, %953 ], [ %928, %922 ]
  %957 = load i64*, i64** %856, align 8
  %958 = load i64, i64* %957, align 8
  %959 = add nsw i32 %956, 1
  store i32 %959, i32* %859, align 4
  %960 = shl nsw i32 %956, 1
  %961 = sext i32 %960 to i64
  %962 = add i64 %958, 11
  %963 = add i64 %962, %961
  %964 = inttoptr i64 %963 to i16*
  store i16 114, i16* %964, align 2
  %965 = load i32, i32* %859, align 4
  %966 = load i32, i32* %917, align 8
  %967 = icmp eq i32 %965, %966
  br i1 %967, label %3427, label %3429

968:                                              ; preds = %472
  br i1 %2, label %969, label %1001

969:                                              ; preds = %968
  %970 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %971 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %972 = load i32, i32* %971, align 8
  %973 = icmp eq i32 %972, 0
  %974 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %975 = load i64*, i64** %974, align 8
  %976 = load i64, i64* %975, align 8
  %977 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %978 = load i32, i32* %977, align 4
  %979 = add nsw i32 %978, 1
  store i32 %979, i32* %977, align 4
  br i1 %973, label %980, label %990

980:                                              ; preds = %969
  %981 = sext i32 %978 to i64
  %982 = add i64 %976, 11
  %983 = add i64 %982, %981
  %984 = inttoptr i64 %983 to i8*
  store i8 44, i8* %984, align 1
  %985 = load i32, i32* %977, align 4
  %986 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %987 = load i32, i32* %986, align 8
  %988 = icmp eq i32 %985, %987
  br i1 %988, label %989, label %1001

989:                                              ; preds = %980
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %970) #7
  br label %1001

990:                                              ; preds = %969
  %991 = shl nsw i32 %978, 1
  %992 = sext i32 %991 to i64
  %993 = add i64 %976, 11
  %994 = add i64 %993, %992
  %995 = inttoptr i64 %994 to i16*
  store i16 44, i16* %995, align 2
  %996 = load i32, i32* %977, align 4
  %997 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %998 = load i32, i32* %997, align 8
  %999 = icmp eq i32 %996, %998
  br i1 %999, label %1000, label %1001

1000:                                             ; preds = %990
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %970) #7
  br label %1001

1001:                                             ; preds = %1000, %990, %989, %980, %968
  %1002 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %1003 = load i16*, i16** %1002, align 8
  %1004 = icmp eq i16* %1003, null
  br i1 %1004, label %1096, label %1005

1005:                                             ; preds = %1001
  %1006 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %1007 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %1008 = load i32, i32* %1007, align 8
  %1009 = icmp eq i32 %1008, 0
  %1010 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %1011 = load i64*, i64** %1010, align 8
  %1012 = load i64, i64* %1011, align 8
  %1013 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %1014 = load i32, i32* %1013, align 4
  %1015 = add nsw i32 %1014, 1
  store i32 %1015, i32* %1013, align 4
  br i1 %1009, label %1016, label %1026

1016:                                             ; preds = %1005
  %1017 = sext i32 %1014 to i64
  %1018 = add i64 %1012, 11
  %1019 = add i64 %1018, %1017
  %1020 = inttoptr i64 %1019 to i8*
  store i8 10, i8* %1020, align 1
  %1021 = load i32, i32* %1013, align 4
  %1022 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1023 = load i32, i32* %1022, align 8
  %1024 = icmp eq i32 %1021, %1023
  br i1 %1024, label %1025, label %1037

1025:                                             ; preds = %1016
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1006) #7
  br label %1037

1026:                                             ; preds = %1005
  %1027 = shl nsw i32 %1014, 1
  %1028 = sext i32 %1027 to i64
  %1029 = add i64 %1012, 11
  %1030 = add i64 %1029, %1028
  %1031 = inttoptr i64 %1030 to i16*
  store i16 10, i16* %1031, align 2
  %1032 = load i32, i32* %1013, align 4
  %1033 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1034 = load i32, i32* %1033, align 8
  %1035 = icmp eq i32 %1032, %1034
  br i1 %1035, label %1036, label %1037

1036:                                             ; preds = %1026
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1006) #7
  br label %1037

1037:                                             ; preds = %1036, %1026, %1025, %1016
  %1038 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %1039 = load i32, i32* %1038, align 8
  %1040 = icmp sgt i32 %1039, 0
  br i1 %1040, label %1041, label %1096

1041:                                             ; preds = %1037
  %1042 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %1043

1043:                                             ; preds = %1092, %1041
  %1044 = phi i32 [ 0, %1041 ], [ %1093, %1092 ]
  %1045 = load i16*, i16** %1002, align 8
  %1046 = load i32, i32* %1007, align 8
  %1047 = icmp eq i32 %1046, 0
  %1048 = load i16, i16* %1045, align 2
  %1049 = icmp eq i16 %1048, 0
  br i1 %1047, label %1051, label %1050

1050:                                             ; preds = %1043
  br i1 %1049, label %1092, label %1072

1051:                                             ; preds = %1043
  br i1 %1049, label %1092, label %1052

1052:                                             ; preds = %1051, %1069
  %1053 = phi i16 [ %1070, %1069 ], [ %1048, %1051 ]
  %1054 = phi i16* [ %1055, %1069 ], [ %1045, %1051 ]
  %1055 = getelementptr inbounds i16, i16* %1054, i64 1
  %1056 = load i64*, i64** %1010, align 8
  %1057 = load i64, i64* %1056, align 8
  %1058 = load i32, i32* %1013, align 4
  %1059 = add nsw i32 %1058, 1
  store i32 %1059, i32* %1013, align 4
  %1060 = trunc i16 %1053 to i8
  %1061 = sext i32 %1058 to i64
  %1062 = add i64 %1057, 11
  %1063 = add i64 %1062, %1061
  %1064 = inttoptr i64 %1063 to i8*
  store i8 %1060, i8* %1064, align 1
  %1065 = load i32, i32* %1013, align 4
  %1066 = load i32, i32* %1042, align 8
  %1067 = icmp eq i32 %1065, %1066
  br i1 %1067, label %1068, label %1069

1068:                                             ; preds = %1052
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1006) #7
  br label %1069

1069:                                             ; preds = %1068, %1052
  %1070 = load i16, i16* %1055, align 2
  %1071 = icmp eq i16 %1070, 0
  br i1 %1071, label %1092, label %1052

1072:                                             ; preds = %1050, %1089
  %1073 = phi i16 [ %1090, %1089 ], [ %1048, %1050 ]
  %1074 = phi i16* [ %1075, %1089 ], [ %1045, %1050 ]
  %1075 = getelementptr inbounds i16, i16* %1074, i64 1
  %1076 = load i64*, i64** %1010, align 8
  %1077 = load i64, i64* %1076, align 8
  %1078 = load i32, i32* %1013, align 4
  %1079 = add nsw i32 %1078, 1
  store i32 %1079, i32* %1013, align 4
  %1080 = shl nsw i32 %1078, 1
  %1081 = sext i32 %1080 to i64
  %1082 = add i64 %1077, 11
  %1083 = add i64 %1082, %1081
  %1084 = inttoptr i64 %1083 to i16*
  store i16 %1073, i16* %1084, align 2
  %1085 = load i32, i32* %1013, align 4
  %1086 = load i32, i32* %1042, align 8
  %1087 = icmp eq i32 %1085, %1086
  br i1 %1087, label %1088, label %1089

1088:                                             ; preds = %1072
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1006) #7
  br label %1089

1089:                                             ; preds = %1088, %1072
  %1090 = load i16, i16* %1075, align 2
  %1091 = icmp eq i16 %1090, 0
  br i1 %1091, label %1092, label %1072

1092:                                             ; preds = %1089, %1069, %1051, %1050
  %1093 = add nuw nsw i32 %1044, 1
  %1094 = load i32, i32* %1038, align 8
  %1095 = icmp slt i32 %1093, %1094
  br i1 %1095, label %1043, label %1096

1096:                                             ; preds = %1092, %1037, %1001
  tail call void @_ZN2v88internal15JsonStringifier15SerializeStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %3) #7
  %1097 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %1098 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %1099 = load i32, i32* %1098, align 8
  %1100 = icmp eq i32 %1099, 0
  %1101 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %1102 = load i64*, i64** %1101, align 8
  %1103 = load i64, i64* %1102, align 8
  %1104 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %1105 = load i32, i32* %1104, align 4
  %1106 = add nsw i32 %1105, 1
  store i32 %1106, i32* %1104, align 4
  br i1 %1100, label %1107, label %1117

1107:                                             ; preds = %1096
  %1108 = sext i32 %1105 to i64
  %1109 = add i64 %1103, 11
  %1110 = add i64 %1109, %1108
  %1111 = inttoptr i64 %1110 to i8*
  store i8 58, i8* %1111, align 1
  %1112 = load i32, i32* %1104, align 4
  %1113 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1114 = load i32, i32* %1113, align 8
  %1115 = icmp eq i32 %1112, %1114
  br i1 %1115, label %1116, label %1128

1116:                                             ; preds = %1107
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1097) #7
  br label %1128

1117:                                             ; preds = %1096
  %1118 = shl nsw i32 %1105, 1
  %1119 = sext i32 %1118 to i64
  %1120 = add i64 %1103, 11
  %1121 = add i64 %1120, %1119
  %1122 = inttoptr i64 %1121 to i16*
  store i16 58, i16* %1122, align 2
  %1123 = load i32, i32* %1104, align 4
  %1124 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1125 = load i32, i32* %1124, align 8
  %1126 = icmp eq i32 %1123, %1125
  br i1 %1126, label %1127, label %1128

1127:                                             ; preds = %1117
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1097) #7
  br label %1128

1128:                                             ; preds = %1127, %1117, %1116, %1107
  %1129 = load i16*, i16** %1002, align 8
  %1130 = icmp eq i16* %1129, null
  br i1 %1130, label %1159, label %1131

1131:                                             ; preds = %1128
  %1132 = load i32, i32* %1098, align 8
  %1133 = icmp eq i32 %1132, 0
  %1134 = load i64*, i64** %1101, align 8
  %1135 = load i64, i64* %1134, align 8
  %1136 = load i32, i32* %1104, align 4
  %1137 = add nsw i32 %1136, 1
  store i32 %1137, i32* %1104, align 4
  br i1 %1133, label %1138, label %1148

1138:                                             ; preds = %1131
  %1139 = sext i32 %1136 to i64
  %1140 = add i64 %1135, 11
  %1141 = add i64 %1140, %1139
  %1142 = inttoptr i64 %1141 to i8*
  store i8 32, i8* %1142, align 1
  %1143 = load i32, i32* %1104, align 4
  %1144 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1145 = load i32, i32* %1144, align 8
  %1146 = icmp eq i32 %1143, %1145
  br i1 %1146, label %1147, label %1159

1147:                                             ; preds = %1138
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1097) #7
  br label %1159

1148:                                             ; preds = %1131
  %1149 = shl nsw i32 %1136, 1
  %1150 = sext i32 %1149 to i64
  %1151 = add i64 %1135, 11
  %1152 = add i64 %1151, %1150
  %1153 = inttoptr i64 %1152 to i16*
  store i16 32, i16* %1153, align 2
  %1154 = load i32, i32* %1104, align 4
  %1155 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1156 = load i32, i32* %1155, align 8
  %1157 = icmp eq i32 %1154, %1156
  br i1 %1157, label %1158, label %1159

1158:                                             ; preds = %1148
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1097) #7
  br label %1159

1159:                                             ; preds = %1128, %1138, %1147, %1148, %1158
  %1160 = load i32, i32* %1098, align 8
  %1161 = icmp eq i32 %1160, 0
  %1162 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1163 = load i64*, i64** %1101, align 8
  %1164 = load i64, i64* %1163, align 8
  %1165 = load i32, i32* %1104, align 4
  %1166 = add nsw i32 %1165, 1
  store i32 %1166, i32* %1104, align 4
  br i1 %1161, label %1176, label %1167

1167:                                             ; preds = %1159
  %1168 = shl nsw i32 %1165, 1
  %1169 = sext i32 %1168 to i64
  %1170 = add i64 %1164, 11
  %1171 = add i64 %1170, %1169
  %1172 = inttoptr i64 %1171 to i16*
  store i16 110, i16* %1172, align 2
  %1173 = load i32, i32* %1104, align 4
  %1174 = load i32, i32* %1162, align 8
  %1175 = icmp eq i32 %1173, %1174
  br i1 %1175, label %1198, label %1200

1176:                                             ; preds = %1159
  %1177 = sext i32 %1165 to i64
  %1178 = add i64 %1164, 11
  %1179 = add i64 %1178, %1177
  %1180 = inttoptr i64 %1179 to i8*
  store i8 110, i8* %1180, align 1
  %1181 = load i32, i32* %1104, align 4
  %1182 = load i32, i32* %1162, align 8
  %1183 = icmp eq i32 %1181, %1182
  br i1 %1183, label %1184, label %1186

1184:                                             ; preds = %1176
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1097) #7
  %1185 = load i32, i32* %1104, align 4
  br label %1186

1186:                                             ; preds = %1184, %1176
  %1187 = phi i32 [ %1185, %1184 ], [ %1181, %1176 ]
  %1188 = load i64*, i64** %1101, align 8
  %1189 = load i64, i64* %1188, align 8
  %1190 = add nsw i32 %1187, 1
  store i32 %1190, i32* %1104, align 4
  %1191 = sext i32 %1187 to i64
  %1192 = add i64 %1189, 11
  %1193 = add i64 %1192, %1191
  %1194 = inttoptr i64 %1193 to i8*
  store i8 117, i8* %1194, align 1
  %1195 = load i32, i32* %1104, align 4
  %1196 = load i32, i32* %1162, align 8
  %1197 = icmp eq i32 %1195, %1196
  br i1 %1197, label %3458, label %3460

1198:                                             ; preds = %1167
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1097) #7
  %1199 = load i32, i32* %1104, align 4
  br label %1200

1200:                                             ; preds = %1198, %1167
  %1201 = phi i32 [ %1199, %1198 ], [ %1173, %1167 ]
  %1202 = load i64*, i64** %1101, align 8
  %1203 = load i64, i64* %1202, align 8
  %1204 = add nsw i32 %1201, 1
  store i32 %1204, i32* %1104, align 4
  %1205 = shl nsw i32 %1201, 1
  %1206 = sext i32 %1205 to i64
  %1207 = add i64 %1203, 11
  %1208 = add i64 %1207, %1206
  %1209 = inttoptr i64 %1208 to i16*
  store i16 117, i16* %1209, align 2
  %1210 = load i32, i32* %1104, align 4
  %1211 = load i32, i32* %1162, align 8
  %1212 = icmp eq i32 %1210, %1211
  br i1 %1212, label %3487, label %3489

1213:                                             ; preds = %259
  br i1 %2, label %1214, label %1246

1214:                                             ; preds = %1213
  %1215 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %1216 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %1217 = load i32, i32* %1216, align 8
  %1218 = icmp eq i32 %1217, 0
  %1219 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %1220 = load i64*, i64** %1219, align 8
  %1221 = load i64, i64* %1220, align 8
  %1222 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %1223 = load i32, i32* %1222, align 4
  %1224 = add nsw i32 %1223, 1
  store i32 %1224, i32* %1222, align 4
  br i1 %1218, label %1225, label %1235

1225:                                             ; preds = %1214
  %1226 = sext i32 %1223 to i64
  %1227 = add i64 %1221, 11
  %1228 = add i64 %1227, %1226
  %1229 = inttoptr i64 %1228 to i8*
  store i8 44, i8* %1229, align 1
  %1230 = load i32, i32* %1222, align 4
  %1231 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1232 = load i32, i32* %1231, align 8
  %1233 = icmp eq i32 %1230, %1232
  br i1 %1233, label %1234, label %1246

1234:                                             ; preds = %1225
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1215) #7
  br label %1246

1235:                                             ; preds = %1214
  %1236 = shl nsw i32 %1223, 1
  %1237 = sext i32 %1236 to i64
  %1238 = add i64 %1221, 11
  %1239 = add i64 %1238, %1237
  %1240 = inttoptr i64 %1239 to i16*
  store i16 44, i16* %1240, align 2
  %1241 = load i32, i32* %1222, align 4
  %1242 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1243 = load i32, i32* %1242, align 8
  %1244 = icmp eq i32 %1241, %1243
  br i1 %1244, label %1245, label %1246

1245:                                             ; preds = %1235
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1215) #7
  br label %1246

1246:                                             ; preds = %1245, %1235, %1234, %1225, %1213
  %1247 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %1248 = load i16*, i16** %1247, align 8
  %1249 = icmp eq i16* %1248, null
  br i1 %1249, label %1341, label %1250

1250:                                             ; preds = %1246
  %1251 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %1252 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %1253 = load i32, i32* %1252, align 8
  %1254 = icmp eq i32 %1253, 0
  %1255 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %1256 = load i64*, i64** %1255, align 8
  %1257 = load i64, i64* %1256, align 8
  %1258 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %1259 = load i32, i32* %1258, align 4
  %1260 = add nsw i32 %1259, 1
  store i32 %1260, i32* %1258, align 4
  br i1 %1254, label %1261, label %1271

1261:                                             ; preds = %1250
  %1262 = sext i32 %1259 to i64
  %1263 = add i64 %1257, 11
  %1264 = add i64 %1263, %1262
  %1265 = inttoptr i64 %1264 to i8*
  store i8 10, i8* %1265, align 1
  %1266 = load i32, i32* %1258, align 4
  %1267 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1268 = load i32, i32* %1267, align 8
  %1269 = icmp eq i32 %1266, %1268
  br i1 %1269, label %1270, label %1282

1270:                                             ; preds = %1261
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1251) #7
  br label %1282

1271:                                             ; preds = %1250
  %1272 = shl nsw i32 %1259, 1
  %1273 = sext i32 %1272 to i64
  %1274 = add i64 %1257, 11
  %1275 = add i64 %1274, %1273
  %1276 = inttoptr i64 %1275 to i16*
  store i16 10, i16* %1276, align 2
  %1277 = load i32, i32* %1258, align 4
  %1278 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1279 = load i32, i32* %1278, align 8
  %1280 = icmp eq i32 %1277, %1279
  br i1 %1280, label %1281, label %1282

1281:                                             ; preds = %1271
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1251) #7
  br label %1282

1282:                                             ; preds = %1281, %1271, %1270, %1261
  %1283 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %1284 = load i32, i32* %1283, align 8
  %1285 = icmp sgt i32 %1284, 0
  br i1 %1285, label %1286, label %1341

1286:                                             ; preds = %1282
  %1287 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %1288

1288:                                             ; preds = %1337, %1286
  %1289 = phi i32 [ 0, %1286 ], [ %1338, %1337 ]
  %1290 = load i16*, i16** %1247, align 8
  %1291 = load i32, i32* %1252, align 8
  %1292 = icmp eq i32 %1291, 0
  %1293 = load i16, i16* %1290, align 2
  %1294 = icmp eq i16 %1293, 0
  br i1 %1292, label %1296, label %1295

1295:                                             ; preds = %1288
  br i1 %1294, label %1337, label %1317

1296:                                             ; preds = %1288
  br i1 %1294, label %1337, label %1297

1297:                                             ; preds = %1296, %1314
  %1298 = phi i16 [ %1315, %1314 ], [ %1293, %1296 ]
  %1299 = phi i16* [ %1300, %1314 ], [ %1290, %1296 ]
  %1300 = getelementptr inbounds i16, i16* %1299, i64 1
  %1301 = load i64*, i64** %1255, align 8
  %1302 = load i64, i64* %1301, align 8
  %1303 = load i32, i32* %1258, align 4
  %1304 = add nsw i32 %1303, 1
  store i32 %1304, i32* %1258, align 4
  %1305 = trunc i16 %1298 to i8
  %1306 = sext i32 %1303 to i64
  %1307 = add i64 %1302, 11
  %1308 = add i64 %1307, %1306
  %1309 = inttoptr i64 %1308 to i8*
  store i8 %1305, i8* %1309, align 1
  %1310 = load i32, i32* %1258, align 4
  %1311 = load i32, i32* %1287, align 8
  %1312 = icmp eq i32 %1310, %1311
  br i1 %1312, label %1313, label %1314

1313:                                             ; preds = %1297
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1251) #7
  br label %1314

1314:                                             ; preds = %1313, %1297
  %1315 = load i16, i16* %1300, align 2
  %1316 = icmp eq i16 %1315, 0
  br i1 %1316, label %1337, label %1297

1317:                                             ; preds = %1295, %1334
  %1318 = phi i16 [ %1335, %1334 ], [ %1293, %1295 ]
  %1319 = phi i16* [ %1320, %1334 ], [ %1290, %1295 ]
  %1320 = getelementptr inbounds i16, i16* %1319, i64 1
  %1321 = load i64*, i64** %1255, align 8
  %1322 = load i64, i64* %1321, align 8
  %1323 = load i32, i32* %1258, align 4
  %1324 = add nsw i32 %1323, 1
  store i32 %1324, i32* %1258, align 4
  %1325 = shl nsw i32 %1323, 1
  %1326 = sext i32 %1325 to i64
  %1327 = add i64 %1322, 11
  %1328 = add i64 %1327, %1326
  %1329 = inttoptr i64 %1328 to i16*
  store i16 %1318, i16* %1329, align 2
  %1330 = load i32, i32* %1258, align 4
  %1331 = load i32, i32* %1287, align 8
  %1332 = icmp eq i32 %1330, %1331
  br i1 %1332, label %1333, label %1334

1333:                                             ; preds = %1317
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1251) #7
  br label %1334

1334:                                             ; preds = %1333, %1317
  %1335 = load i16, i16* %1320, align 2
  %1336 = icmp eq i16 %1335, 0
  br i1 %1336, label %1337, label %1317

1337:                                             ; preds = %1334, %1314, %1296, %1295
  %1338 = add nuw nsw i32 %1289, 1
  %1339 = load i32, i32* %1283, align 8
  %1340 = icmp slt i32 %1338, %1339
  br i1 %1340, label %1288, label %1341

1341:                                             ; preds = %1337, %1282, %1246
  tail call void @_ZN2v88internal15JsonStringifier15SerializeStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %3) #7
  %1342 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %1343 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %1344 = load i32, i32* %1343, align 8
  %1345 = icmp eq i32 %1344, 0
  %1346 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %1347 = load i64*, i64** %1346, align 8
  %1348 = load i64, i64* %1347, align 8
  %1349 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %1350 = load i32, i32* %1349, align 4
  %1351 = add nsw i32 %1350, 1
  store i32 %1351, i32* %1349, align 4
  br i1 %1345, label %1352, label %1362

1352:                                             ; preds = %1341
  %1353 = sext i32 %1350 to i64
  %1354 = add i64 %1348, 11
  %1355 = add i64 %1354, %1353
  %1356 = inttoptr i64 %1355 to i8*
  store i8 58, i8* %1356, align 1
  %1357 = load i32, i32* %1349, align 4
  %1358 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1359 = load i32, i32* %1358, align 8
  %1360 = icmp eq i32 %1357, %1359
  br i1 %1360, label %1361, label %1373

1361:                                             ; preds = %1352
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1373

1362:                                             ; preds = %1341
  %1363 = shl nsw i32 %1350, 1
  %1364 = sext i32 %1363 to i64
  %1365 = add i64 %1348, 11
  %1366 = add i64 %1365, %1364
  %1367 = inttoptr i64 %1366 to i16*
  store i16 58, i16* %1367, align 2
  %1368 = load i32, i32* %1349, align 4
  %1369 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1370 = load i32, i32* %1369, align 8
  %1371 = icmp eq i32 %1368, %1370
  br i1 %1371, label %1372, label %1373

1372:                                             ; preds = %1362
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1373

1373:                                             ; preds = %1372, %1362, %1361, %1352
  %1374 = load i16*, i16** %1247, align 8
  %1375 = icmp eq i16* %1374, null
  br i1 %1375, label %1404, label %1376

1376:                                             ; preds = %1373
  %1377 = load i32, i32* %1343, align 8
  %1378 = icmp eq i32 %1377, 0
  %1379 = load i64*, i64** %1346, align 8
  %1380 = load i64, i64* %1379, align 8
  %1381 = load i32, i32* %1349, align 4
  %1382 = add nsw i32 %1381, 1
  store i32 %1382, i32* %1349, align 4
  br i1 %1378, label %1383, label %1393

1383:                                             ; preds = %1376
  %1384 = sext i32 %1381 to i64
  %1385 = add i64 %1380, 11
  %1386 = add i64 %1385, %1384
  %1387 = inttoptr i64 %1386 to i8*
  store i8 32, i8* %1387, align 1
  %1388 = load i32, i32* %1349, align 4
  %1389 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1390 = load i32, i32* %1389, align 8
  %1391 = icmp eq i32 %1388, %1390
  br i1 %1391, label %1392, label %1404

1392:                                             ; preds = %1383
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1404

1393:                                             ; preds = %1376
  %1394 = shl nsw i32 %1381, 1
  %1395 = sext i32 %1394 to i64
  %1396 = add i64 %1380, 11
  %1397 = add i64 %1396, %1395
  %1398 = inttoptr i64 %1397 to i16*
  store i16 32, i16* %1398, align 2
  %1399 = load i32, i32* %1349, align 4
  %1400 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1401 = load i32, i32* %1400, align 8
  %1402 = icmp eq i32 %1399, %1401
  br i1 %1402, label %1403, label %1404

1403:                                             ; preds = %1393
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1404

1404:                                             ; preds = %1373, %1383, %1392, %1393, %1403
  %1405 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %1406 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1405, i64 0, i32 31
  %1407 = bitcast %"struct.v8::internal::HandleScopeData"* %1406 to i64*
  %1408 = load i64, i64* %1407, align 8
  %1409 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1405, i64 0, i32 31, i32 1
  %1410 = load i64*, i64** %1409, align 8
  %1411 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1405, i64 0, i32 31, i32 2
  %1412 = load i32, i32* %1411, align 8
  %1413 = add nsw i32 %1412, 1
  store i32 %1413, i32* %1411, align 8
  %1414 = tail call i32 @_ZN2v88internal15JsonStringifier9StackPushENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::JsonStringifier"* %0, i64* %61, i64* %3) #7
  %1415 = icmp eq i32 %1414, 1
  br i1 %1415, label %1416, label %2258

1416:                                             ; preds = %1404
  %1417 = load i64, i64* %61, align 8
  %1418 = and i64 %1417, -4294967296
  %1419 = add i64 %1417, 11
  %1420 = inttoptr i64 %1419 to i32*
  %1421 = load i32, i32* %1420, align 4
  %1422 = zext i32 %1421 to i64
  %1423 = or i64 %1418, %1422
  %1424 = and i64 %1422, 1
  %1425 = icmp eq i64 %1424, 0
  br i1 %1425, label %1426, label %1430

1426:                                             ; preds = %1416
  %1427 = icmp slt i32 %1421, 0
  br i1 %1427, label %1452, label %1428, !prof !3

1428:                                             ; preds = %1426
  %1429 = lshr i32 %1421, 1
  br label %1453

1430:                                             ; preds = %1416
  %1431 = add i64 %1423, -1
  %1432 = inttoptr i64 %1431 to i32*
  %1433 = load atomic i32, i32* %1432 monotonic, align 4
  %1434 = zext i32 %1433 to i64
  %1435 = or i64 %1418, %1434
  %1436 = add i64 %1435, 7
  %1437 = inttoptr i64 %1436 to i16*
  %1438 = load atomic i16, i16* %1437 monotonic, align 2
  %1439 = icmp eq i16 %1438, 66
  br i1 %1439, label %1440, label %1452, !prof !4

1440:                                             ; preds = %1430
  %1441 = add i64 %1423, 3
  %1442 = inttoptr i64 %1441 to double*
  %1443 = load double, double* %1442, align 1
  %1444 = fadd double %1443, 0x4330000000000000
  %1445 = bitcast double %1444 to i64
  %1446 = and i64 %1445, -4294967296
  %1447 = icmp eq i64 %1446, 4841369599423283200
  br i1 %1447, label %1448, label %1452, !prof !4

1448:                                             ; preds = %1440
  %1449 = trunc i64 %1445 to i32
  %1450 = uitofp i32 %1449 to double
  %1451 = fcmp oeq double %1443, %1450
  br i1 %1451, label %1453, label %1452, !prof !5

1452:                                             ; preds = %1440, %1430, %1426, %1448
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0)) #14
  unreachable

1453:                                             ; preds = %1428, %1448
  %1454 = phi i32 [ %1429, %1428 ], [ %1449, %1448 ]
  %1455 = load i32, i32* %1343, align 8
  %1456 = icmp eq i32 %1455, 0
  %1457 = load i64*, i64** %1346, align 8
  %1458 = load i64, i64* %1457, align 8
  %1459 = load i32, i32* %1349, align 4
  %1460 = add nsw i32 %1459, 1
  store i32 %1460, i32* %1349, align 4
  br i1 %1456, label %1461, label %1471

1461:                                             ; preds = %1453
  %1462 = sext i32 %1459 to i64
  %1463 = add i64 %1458, 11
  %1464 = add i64 %1463, %1462
  %1465 = inttoptr i64 %1464 to i8*
  store i8 91, i8* %1465, align 1
  %1466 = load i32, i32* %1349, align 4
  %1467 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1468 = load i32, i32* %1467, align 8
  %1469 = icmp eq i32 %1466, %1468
  br i1 %1469, label %1470, label %1482

1470:                                             ; preds = %1461
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1482

1471:                                             ; preds = %1453
  %1472 = shl nsw i32 %1459, 1
  %1473 = sext i32 %1472 to i64
  %1474 = add i64 %1458, 11
  %1475 = add i64 %1474, %1473
  %1476 = inttoptr i64 %1475 to i16*
  store i16 91, i16* %1476, align 2
  %1477 = load i32, i32* %1349, align 4
  %1478 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %1479 = load i32, i32* %1478, align 8
  %1480 = icmp eq i32 %1477, %1479
  br i1 %1480, label %1481, label %1482

1481:                                             ; preds = %1471
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1482

1482:                                             ; preds = %1481, %1471, %1470, %1461
  %1483 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %1484 = load i32, i32* %1483, align 8
  %1485 = add nsw i32 %1484, 1
  store i32 %1485, i32* %1483, align 8
  %1486 = load i64*, i64** %54, align 8
  %1487 = icmp eq i64* %1486, null
  br i1 %1487, label %1488, label %2124

1488:                                             ; preds = %1482
  %1489 = load i64, i64* %61, align 8
  %1490 = and i64 %1489, -4294967296
  %1491 = add i64 %1489, -1
  %1492 = inttoptr i64 %1491 to i32*
  %1493 = load atomic i32, i32* %1492 monotonic, align 4
  %1494 = zext i32 %1493 to i64
  %1495 = or i64 %1490, %1494
  %1496 = add i64 %1495, 10
  %1497 = inttoptr i64 %1496 to i8*
  %1498 = load i8, i8* %1497, align 1
  %1499 = lshr i8 %1498, 2
  switch i8 %1499, label %2124 [
    i8 0, label %1500
    i8 4, label %1674
    i8 2, label %1845
  ]

1500:                                             ; preds = %1488
  %1501 = add i64 %1489, 7
  %1502 = inttoptr i64 %1501 to i32*
  %1503 = load i32, i32* %1502, align 4
  %1504 = zext i32 %1503 to i64
  %1505 = or i64 %1490, %1504
  %1506 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %1507 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1506, i64 0, i32 31, i32 4
  %1508 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %1507, align 8
  %1509 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1508, null
  br i1 %1509, label %1512, label %1510

1510:                                             ; preds = %1500
  %1511 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1508, i64 %1505) #7
  br label %1525

1512:                                             ; preds = %1500
  %1513 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1506, i64 0, i32 31, i32 0
  %1514 = load i64*, i64** %1513, align 8
  %1515 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1506, i64 0, i32 31, i32 1
  %1516 = load i64*, i64** %1515, align 8
  %1517 = icmp eq i64* %1514, %1516
  br i1 %1517, label %1518, label %1520

1518:                                             ; preds = %1512
  %1519 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1506) #7
  br label %1520

1520:                                             ; preds = %1518, %1512
  %1521 = phi i64* [ %1519, %1518 ], [ %1514, %1512 ]
  %1522 = ptrtoint i64* %1521 to i64
  %1523 = add i64 %1522, 8
  %1524 = inttoptr i64 %1523 to i64*
  store i64* %1524, i64** %1513, align 8
  store i64 %1505, i64* %1521, align 8
  br label %1525

1525:                                             ; preds = %1520, %1510
  %1526 = phi i64* [ %1511, %1510 ], [ %1521, %1520 ]
  %1527 = icmp eq i32 %1454, 0
  br i1 %1527, label %2124, label %1528

1528:                                             ; preds = %1525
  %1529 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %1530 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1529, i64 0, i32 0, i32 6, i32 1, i32 3
  %1531 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %1532

1532:                                             ; preds = %1660, %1528
  %1533 = phi i32 [ 0, %1528 ], [ %1672, %1660 ]
  %1534 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %1535 = load atomic i64, i64* %1530 monotonic, align 8
  %1536 = icmp ult i64 %1534, %1535
  br i1 %1536, label %1537, label %1547

1537:                                             ; preds = %1532
  %1538 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %1539 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1538, i64 0, i32 0, i32 6
  %1540 = tail call i64 @_ZN2v88internal10StackGuard16HandleInterruptsEv(%"class.v8::internal::StackGuard"* %1539) #7
  %1541 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %1542 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1541, i64 0, i32 0, i32 7, i32 0, i64 32
  %1543 = load i64, i64* %1542, align 8
  %1544 = trunc i64 %1540 to i32
  %1545 = trunc i64 %1543 to i32
  %1546 = icmp eq i32 %1544, %1545
  br i1 %1546, label %2258, label %1547

1547:                                             ; preds = %1532, %1537
  %1548 = icmp eq i32 %1533, 0
  br i1 %1548, label %1575, label %1549

1549:                                             ; preds = %1547
  %1550 = load i32, i32* %1343, align 8
  %1551 = icmp eq i32 %1550, 0
  %1552 = load i64*, i64** %1346, align 8
  %1553 = load i64, i64* %1552, align 8
  %1554 = load i32, i32* %1349, align 4
  %1555 = add nsw i32 %1554, 1
  store i32 %1555, i32* %1349, align 4
  br i1 %1551, label %1556, label %1565

1556:                                             ; preds = %1549
  %1557 = sext i32 %1554 to i64
  %1558 = add i64 %1553, 11
  %1559 = add i64 %1558, %1557
  %1560 = inttoptr i64 %1559 to i8*
  store i8 44, i8* %1560, align 1
  %1561 = load i32, i32* %1349, align 4
  %1562 = load i32, i32* %1531, align 8
  %1563 = icmp eq i32 %1561, %1562
  br i1 %1563, label %1564, label %1575

1564:                                             ; preds = %1556
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1575

1565:                                             ; preds = %1549
  %1566 = shl nsw i32 %1554, 1
  %1567 = sext i32 %1566 to i64
  %1568 = add i64 %1553, 11
  %1569 = add i64 %1568, %1567
  %1570 = inttoptr i64 %1569 to i16*
  store i16 44, i16* %1570, align 2
  %1571 = load i32, i32* %1349, align 4
  %1572 = load i32, i32* %1531, align 8
  %1573 = icmp eq i32 %1571, %1572
  br i1 %1573, label %1574, label %1575

1574:                                             ; preds = %1565
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1575

1575:                                             ; preds = %1574, %1565, %1564, %1556, %1547
  %1576 = load i16*, i16** %1247, align 8
  %1577 = icmp eq i16* %1576, null
  br i1 %1577, label %1660, label %1578

1578:                                             ; preds = %1575
  %1579 = load i32, i32* %1343, align 8
  %1580 = icmp eq i32 %1579, 0
  %1581 = load i64*, i64** %1346, align 8
  %1582 = load i64, i64* %1581, align 8
  %1583 = load i32, i32* %1349, align 4
  %1584 = add nsw i32 %1583, 1
  store i32 %1584, i32* %1349, align 4
  br i1 %1580, label %1585, label %1594

1585:                                             ; preds = %1578
  %1586 = sext i32 %1583 to i64
  %1587 = add i64 %1582, 11
  %1588 = add i64 %1587, %1586
  %1589 = inttoptr i64 %1588 to i8*
  store i8 10, i8* %1589, align 1
  %1590 = load i32, i32* %1349, align 4
  %1591 = load i32, i32* %1531, align 8
  %1592 = icmp eq i32 %1590, %1591
  br i1 %1592, label %1593, label %1604

1593:                                             ; preds = %1585
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1604

1594:                                             ; preds = %1578
  %1595 = shl nsw i32 %1583, 1
  %1596 = sext i32 %1595 to i64
  %1597 = add i64 %1582, 11
  %1598 = add i64 %1597, %1596
  %1599 = inttoptr i64 %1598 to i16*
  store i16 10, i16* %1599, align 2
  %1600 = load i32, i32* %1349, align 4
  %1601 = load i32, i32* %1531, align 8
  %1602 = icmp eq i32 %1600, %1601
  br i1 %1602, label %1603, label %1604

1603:                                             ; preds = %1594
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1604

1604:                                             ; preds = %1603, %1594, %1593, %1585
  %1605 = load i32, i32* %1483, align 8
  %1606 = icmp sgt i32 %1605, 0
  br i1 %1606, label %1607, label %1660

1607:                                             ; preds = %1604, %1656
  %1608 = phi i32 [ %1657, %1656 ], [ 0, %1604 ]
  %1609 = load i16*, i16** %1247, align 8
  %1610 = load i32, i32* %1343, align 8
  %1611 = icmp eq i32 %1610, 0
  %1612 = load i16, i16* %1609, align 2
  %1613 = icmp eq i16 %1612, 0
  br i1 %1611, label %1615, label %1614

1614:                                             ; preds = %1607
  br i1 %1613, label %1656, label %1636

1615:                                             ; preds = %1607
  br i1 %1613, label %1656, label %1616

1616:                                             ; preds = %1615, %1633
  %1617 = phi i16 [ %1634, %1633 ], [ %1612, %1615 ]
  %1618 = phi i16* [ %1619, %1633 ], [ %1609, %1615 ]
  %1619 = getelementptr inbounds i16, i16* %1618, i64 1
  %1620 = load i64*, i64** %1346, align 8
  %1621 = load i64, i64* %1620, align 8
  %1622 = load i32, i32* %1349, align 4
  %1623 = add nsw i32 %1622, 1
  store i32 %1623, i32* %1349, align 4
  %1624 = trunc i16 %1617 to i8
  %1625 = sext i32 %1622 to i64
  %1626 = add i64 %1621, 11
  %1627 = add i64 %1626, %1625
  %1628 = inttoptr i64 %1627 to i8*
  store i8 %1624, i8* %1628, align 1
  %1629 = load i32, i32* %1349, align 4
  %1630 = load i32, i32* %1531, align 8
  %1631 = icmp eq i32 %1629, %1630
  br i1 %1631, label %1632, label %1633

1632:                                             ; preds = %1616
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1633

1633:                                             ; preds = %1632, %1616
  %1634 = load i16, i16* %1619, align 2
  %1635 = icmp eq i16 %1634, 0
  br i1 %1635, label %1656, label %1616

1636:                                             ; preds = %1614, %1653
  %1637 = phi i16 [ %1654, %1653 ], [ %1612, %1614 ]
  %1638 = phi i16* [ %1639, %1653 ], [ %1609, %1614 ]
  %1639 = getelementptr inbounds i16, i16* %1638, i64 1
  %1640 = load i64*, i64** %1346, align 8
  %1641 = load i64, i64* %1640, align 8
  %1642 = load i32, i32* %1349, align 4
  %1643 = add nsw i32 %1642, 1
  store i32 %1643, i32* %1349, align 4
  %1644 = shl nsw i32 %1642, 1
  %1645 = sext i32 %1644 to i64
  %1646 = add i64 %1641, 11
  %1647 = add i64 %1646, %1645
  %1648 = inttoptr i64 %1647 to i16*
  store i16 %1637, i16* %1648, align 2
  %1649 = load i32, i32* %1349, align 4
  %1650 = load i32, i32* %1531, align 8
  %1651 = icmp eq i32 %1649, %1650
  br i1 %1651, label %1652, label %1653

1652:                                             ; preds = %1636
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1653

1653:                                             ; preds = %1652, %1636
  %1654 = load i16, i16* %1639, align 2
  %1655 = icmp eq i16 %1654, 0
  br i1 %1655, label %1656, label %1636

1656:                                             ; preds = %1653, %1633, %1615, %1614
  %1657 = add nuw nsw i32 %1608, 1
  %1658 = load i32, i32* %1483, align 8
  %1659 = icmp slt i32 %1657, %1658
  br i1 %1659, label %1607, label %1660

1660:                                             ; preds = %1656, %1604, %1575
  %1661 = load i64, i64* %1526, align 8
  %1662 = and i64 %1661, -4294967296
  %1663 = shl i32 %1533, 2
  %1664 = sext i32 %1663 to i64
  %1665 = add nsw i64 %1664, 7
  %1666 = add i64 %1665, %1661
  %1667 = inttoptr i64 %1666 to i32*
  %1668 = load atomic i32, i32* %1667 monotonic, align 4
  %1669 = zext i32 %1668 to i64
  %1670 = or i64 %1662, %1669
  %1671 = tail call i32 @_ZN2v88internal15JsonStringifier12SerializeSmiENS0_3SmiE(%"class.v8::internal::JsonStringifier"* %0, i64 %1670) #7
  %1672 = add nuw i32 %1533, 1
  %1673 = icmp eq i32 %1672, %1454
  br i1 %1673, label %2133, label %1532

1674:                                             ; preds = %1488
  %1675 = icmp eq i32 %1454, 0
  br i1 %1675, label %2124, label %1676

1676:                                             ; preds = %1674
  %1677 = add i64 %1489, 7
  %1678 = inttoptr i64 %1677 to i32*
  %1679 = load i32, i32* %1678, align 4
  %1680 = zext i32 %1679 to i64
  %1681 = or i64 %1490, %1680
  %1682 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %1683 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1682, i64 0, i32 31, i32 4
  %1684 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %1683, align 8
  %1685 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1684, null
  br i1 %1685, label %1688, label %1686

1686:                                             ; preds = %1676
  %1687 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1684, i64 %1681) #7
  br label %1701

1688:                                             ; preds = %1676
  %1689 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1682, i64 0, i32 31, i32 0
  %1690 = load i64*, i64** %1689, align 8
  %1691 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1682, i64 0, i32 31, i32 1
  %1692 = load i64*, i64** %1691, align 8
  %1693 = icmp eq i64* %1690, %1692
  br i1 %1693, label %1694, label %1696

1694:                                             ; preds = %1688
  %1695 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1682) #7
  br label %1696

1696:                                             ; preds = %1694, %1688
  %1697 = phi i64* [ %1695, %1694 ], [ %1690, %1688 ]
  %1698 = ptrtoint i64* %1697 to i64
  %1699 = add i64 %1698, 8
  %1700 = inttoptr i64 %1699 to i64*
  store i64* %1700, i64** %1689, align 8
  store i64 %1681, i64* %1697, align 8
  br label %1701

1701:                                             ; preds = %1686, %1696
  %1702 = phi i64* [ %1687, %1686 ], [ %1697, %1696 ]
  %1703 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %1704 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1703, i64 0, i32 0, i32 6, i32 1, i32 3
  %1705 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %1706

1706:                                             ; preds = %1834, %1701
  %1707 = phi i32 [ 0, %1701 ], [ %1843, %1834 ]
  %1708 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %1709 = load atomic i64, i64* %1704 monotonic, align 8
  %1710 = icmp ult i64 %1708, %1709
  br i1 %1710, label %1711, label %1721

1711:                                             ; preds = %1706
  %1712 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %1713 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1712, i64 0, i32 0, i32 6
  %1714 = tail call i64 @_ZN2v88internal10StackGuard16HandleInterruptsEv(%"class.v8::internal::StackGuard"* %1713) #7
  %1715 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %1716 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1715, i64 0, i32 0, i32 7, i32 0, i64 32
  %1717 = load i64, i64* %1716, align 8
  %1718 = trunc i64 %1714 to i32
  %1719 = trunc i64 %1717 to i32
  %1720 = icmp eq i32 %1718, %1719
  br i1 %1720, label %2258, label %1721

1721:                                             ; preds = %1706, %1711
  %1722 = icmp eq i32 %1707, 0
  br i1 %1722, label %1749, label %1723

1723:                                             ; preds = %1721
  %1724 = load i32, i32* %1343, align 8
  %1725 = icmp eq i32 %1724, 0
  %1726 = load i64*, i64** %1346, align 8
  %1727 = load i64, i64* %1726, align 8
  %1728 = load i32, i32* %1349, align 4
  %1729 = add nsw i32 %1728, 1
  store i32 %1729, i32* %1349, align 4
  br i1 %1725, label %1730, label %1739

1730:                                             ; preds = %1723
  %1731 = sext i32 %1728 to i64
  %1732 = add i64 %1727, 11
  %1733 = add i64 %1732, %1731
  %1734 = inttoptr i64 %1733 to i8*
  store i8 44, i8* %1734, align 1
  %1735 = load i32, i32* %1349, align 4
  %1736 = load i32, i32* %1705, align 8
  %1737 = icmp eq i32 %1735, %1736
  br i1 %1737, label %1738, label %1749

1738:                                             ; preds = %1730
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1749

1739:                                             ; preds = %1723
  %1740 = shl nsw i32 %1728, 1
  %1741 = sext i32 %1740 to i64
  %1742 = add i64 %1727, 11
  %1743 = add i64 %1742, %1741
  %1744 = inttoptr i64 %1743 to i16*
  store i16 44, i16* %1744, align 2
  %1745 = load i32, i32* %1349, align 4
  %1746 = load i32, i32* %1705, align 8
  %1747 = icmp eq i32 %1745, %1746
  br i1 %1747, label %1748, label %1749

1748:                                             ; preds = %1739
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1749

1749:                                             ; preds = %1748, %1739, %1738, %1730, %1721
  %1750 = load i16*, i16** %1247, align 8
  %1751 = icmp eq i16* %1750, null
  br i1 %1751, label %1834, label %1752

1752:                                             ; preds = %1749
  %1753 = load i32, i32* %1343, align 8
  %1754 = icmp eq i32 %1753, 0
  %1755 = load i64*, i64** %1346, align 8
  %1756 = load i64, i64* %1755, align 8
  %1757 = load i32, i32* %1349, align 4
  %1758 = add nsw i32 %1757, 1
  store i32 %1758, i32* %1349, align 4
  br i1 %1754, label %1759, label %1768

1759:                                             ; preds = %1752
  %1760 = sext i32 %1757 to i64
  %1761 = add i64 %1756, 11
  %1762 = add i64 %1761, %1760
  %1763 = inttoptr i64 %1762 to i8*
  store i8 10, i8* %1763, align 1
  %1764 = load i32, i32* %1349, align 4
  %1765 = load i32, i32* %1705, align 8
  %1766 = icmp eq i32 %1764, %1765
  br i1 %1766, label %1767, label %1778

1767:                                             ; preds = %1759
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1778

1768:                                             ; preds = %1752
  %1769 = shl nsw i32 %1757, 1
  %1770 = sext i32 %1769 to i64
  %1771 = add i64 %1756, 11
  %1772 = add i64 %1771, %1770
  %1773 = inttoptr i64 %1772 to i16*
  store i16 10, i16* %1773, align 2
  %1774 = load i32, i32* %1349, align 4
  %1775 = load i32, i32* %1705, align 8
  %1776 = icmp eq i32 %1774, %1775
  br i1 %1776, label %1777, label %1778

1777:                                             ; preds = %1768
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1778

1778:                                             ; preds = %1777, %1768, %1767, %1759
  %1779 = load i32, i32* %1483, align 8
  %1780 = icmp sgt i32 %1779, 0
  br i1 %1780, label %1781, label %1834

1781:                                             ; preds = %1778, %1830
  %1782 = phi i32 [ %1831, %1830 ], [ 0, %1778 ]
  %1783 = load i16*, i16** %1247, align 8
  %1784 = load i32, i32* %1343, align 8
  %1785 = icmp eq i32 %1784, 0
  %1786 = load i16, i16* %1783, align 2
  %1787 = icmp eq i16 %1786, 0
  br i1 %1785, label %1789, label %1788

1788:                                             ; preds = %1781
  br i1 %1787, label %1830, label %1810

1789:                                             ; preds = %1781
  br i1 %1787, label %1830, label %1790

1790:                                             ; preds = %1789, %1807
  %1791 = phi i16 [ %1808, %1807 ], [ %1786, %1789 ]
  %1792 = phi i16* [ %1793, %1807 ], [ %1783, %1789 ]
  %1793 = getelementptr inbounds i16, i16* %1792, i64 1
  %1794 = load i64*, i64** %1346, align 8
  %1795 = load i64, i64* %1794, align 8
  %1796 = load i32, i32* %1349, align 4
  %1797 = add nsw i32 %1796, 1
  store i32 %1797, i32* %1349, align 4
  %1798 = trunc i16 %1791 to i8
  %1799 = sext i32 %1796 to i64
  %1800 = add i64 %1795, 11
  %1801 = add i64 %1800, %1799
  %1802 = inttoptr i64 %1801 to i8*
  store i8 %1798, i8* %1802, align 1
  %1803 = load i32, i32* %1349, align 4
  %1804 = load i32, i32* %1705, align 8
  %1805 = icmp eq i32 %1803, %1804
  br i1 %1805, label %1806, label %1807

1806:                                             ; preds = %1790
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1807

1807:                                             ; preds = %1806, %1790
  %1808 = load i16, i16* %1793, align 2
  %1809 = icmp eq i16 %1808, 0
  br i1 %1809, label %1830, label %1790

1810:                                             ; preds = %1788, %1827
  %1811 = phi i16 [ %1828, %1827 ], [ %1786, %1788 ]
  %1812 = phi i16* [ %1813, %1827 ], [ %1783, %1788 ]
  %1813 = getelementptr inbounds i16, i16* %1812, i64 1
  %1814 = load i64*, i64** %1346, align 8
  %1815 = load i64, i64* %1814, align 8
  %1816 = load i32, i32* %1349, align 4
  %1817 = add nsw i32 %1816, 1
  store i32 %1817, i32* %1349, align 4
  %1818 = shl nsw i32 %1816, 1
  %1819 = sext i32 %1818 to i64
  %1820 = add i64 %1815, 11
  %1821 = add i64 %1820, %1819
  %1822 = inttoptr i64 %1821 to i16*
  store i16 %1811, i16* %1822, align 2
  %1823 = load i32, i32* %1349, align 4
  %1824 = load i32, i32* %1705, align 8
  %1825 = icmp eq i32 %1823, %1824
  br i1 %1825, label %1826, label %1827

1826:                                             ; preds = %1810
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1827

1827:                                             ; preds = %1826, %1810
  %1828 = load i16, i16* %1813, align 2
  %1829 = icmp eq i16 %1828, 0
  br i1 %1829, label %1830, label %1810

1830:                                             ; preds = %1827, %1807, %1789, %1788
  %1831 = add nuw nsw i32 %1782, 1
  %1832 = load i32, i32* %1483, align 8
  %1833 = icmp slt i32 %1831, %1832
  br i1 %1833, label %1781, label %1834

1834:                                             ; preds = %1830, %1778, %1749
  %1835 = load i64, i64* %1702, align 8
  %1836 = shl nsw i32 %1707, 3
  %1837 = or i32 %1836, 7
  %1838 = sext i32 %1837 to i64
  %1839 = add i64 %1835, %1838
  %1840 = inttoptr i64 %1839 to double*
  %1841 = load double, double* %1840, align 1
  %1842 = tail call i32 @_ZN2v88internal15JsonStringifier15SerializeDoubleEd(%"class.v8::internal::JsonStringifier"* %0, double %1841) #7
  %1843 = add nuw i32 %1707, 1
  %1844 = icmp eq i32 %1843, %1454
  br i1 %1844, label %2133, label %1706

1845:                                             ; preds = %1488
  %1846 = add i64 %1489, 11
  %1847 = inttoptr i64 %1846 to i32*
  %1848 = load i32, i32* %1847, align 4
  %1849 = zext i32 %1848 to i64
  %1850 = or i64 %1490, %1849
  %1851 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %1852 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1851, i64 0, i32 31, i32 4
  %1853 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %1852, align 8
  %1854 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1853, null
  br i1 %1854, label %1857, label %1855

1855:                                             ; preds = %1845
  %1856 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1853, i64 %1850) #7
  br label %1870

1857:                                             ; preds = %1845
  %1858 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1851, i64 0, i32 31, i32 0
  %1859 = load i64*, i64** %1858, align 8
  %1860 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1851, i64 0, i32 31, i32 1
  %1861 = load i64*, i64** %1860, align 8
  %1862 = icmp eq i64* %1859, %1861
  br i1 %1862, label %1863, label %1865

1863:                                             ; preds = %1857
  %1864 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1851) #7
  br label %1865

1865:                                             ; preds = %1863, %1857
  %1866 = phi i64* [ %1864, %1863 ], [ %1859, %1857 ]
  %1867 = ptrtoint i64* %1866 to i64
  %1868 = add i64 %1867, 8
  %1869 = inttoptr i64 %1868 to i64*
  store i64* %1869, i64** %1858, align 8
  store i64 %1850, i64* %1866, align 8
  br label %1870

1870:                                             ; preds = %1865, %1855
  %1871 = phi i64* [ %1856, %1855 ], [ %1866, %1865 ]
  %1872 = icmp eq i32 %1454, 0
  br i1 %1872, label %2124, label %1873

1873:                                             ; preds = %1870
  %1874 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %1875

1875:                                             ; preds = %2121, %1873
  %1876 = phi i32 [ 0, %1873 ], [ %2122, %2121 ]
  %1877 = load i64, i64* %61, align 8
  %1878 = add i64 %1877, 11
  %1879 = inttoptr i64 %1878 to i32*
  %1880 = load i32, i32* %1879, align 4
  %1881 = load i64, i64* %1871, align 8
  %1882 = trunc i64 %1881 to i32
  %1883 = icmp eq i32 %1880, %1882
  br i1 %1883, label %1884, label %2124

1884:                                             ; preds = %1875
  %1885 = and i64 %1877, -4294967296
  %1886 = add i64 %1877, -1
  %1887 = inttoptr i64 %1886 to i32*
  %1888 = load atomic i32, i32* %1887 monotonic, align 4
  %1889 = zext i32 %1888 to i64
  %1890 = or i64 %1885, %1889
  %1891 = add i64 %1890, 10
  %1892 = inttoptr i64 %1891 to i8*
  %1893 = load i8, i8* %1892, align 1
  %1894 = and i8 %1893, -4
  %1895 = icmp eq i8 %1894, 8
  br i1 %1895, label %1896, label %2124

1896:                                             ; preds = %1884
  %1897 = icmp eq i32 %1876, 0
  br i1 %1897, label %1924, label %1898

1898:                                             ; preds = %1896
  %1899 = load i32, i32* %1343, align 8
  %1900 = icmp eq i32 %1899, 0
  %1901 = load i64*, i64** %1346, align 8
  %1902 = load i64, i64* %1901, align 8
  %1903 = load i32, i32* %1349, align 4
  %1904 = add nsw i32 %1903, 1
  store i32 %1904, i32* %1349, align 4
  br i1 %1900, label %1905, label %1914

1905:                                             ; preds = %1898
  %1906 = sext i32 %1903 to i64
  %1907 = add i64 %1902, 11
  %1908 = add i64 %1907, %1906
  %1909 = inttoptr i64 %1908 to i8*
  store i8 44, i8* %1909, align 1
  %1910 = load i32, i32* %1349, align 4
  %1911 = load i32, i32* %1874, align 8
  %1912 = icmp eq i32 %1910, %1911
  br i1 %1912, label %1913, label %1924

1913:                                             ; preds = %1905
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1924

1914:                                             ; preds = %1898
  %1915 = shl nsw i32 %1903, 1
  %1916 = sext i32 %1915 to i64
  %1917 = add i64 %1902, 11
  %1918 = add i64 %1917, %1916
  %1919 = inttoptr i64 %1918 to i16*
  store i16 44, i16* %1919, align 2
  %1920 = load i32, i32* %1349, align 4
  %1921 = load i32, i32* %1874, align 8
  %1922 = icmp eq i32 %1920, %1921
  br i1 %1922, label %1923, label %1924

1923:                                             ; preds = %1914
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1924

1924:                                             ; preds = %1923, %1914, %1913, %1905, %1896
  %1925 = load i16*, i16** %1247, align 8
  %1926 = icmp eq i16* %1925, null
  br i1 %1926, label %2009, label %1927

1927:                                             ; preds = %1924
  %1928 = load i32, i32* %1343, align 8
  %1929 = icmp eq i32 %1928, 0
  %1930 = load i64*, i64** %1346, align 8
  %1931 = load i64, i64* %1930, align 8
  %1932 = load i32, i32* %1349, align 4
  %1933 = add nsw i32 %1932, 1
  store i32 %1933, i32* %1349, align 4
  br i1 %1929, label %1934, label %1943

1934:                                             ; preds = %1927
  %1935 = sext i32 %1932 to i64
  %1936 = add i64 %1931, 11
  %1937 = add i64 %1936, %1935
  %1938 = inttoptr i64 %1937 to i8*
  store i8 10, i8* %1938, align 1
  %1939 = load i32, i32* %1349, align 4
  %1940 = load i32, i32* %1874, align 8
  %1941 = icmp eq i32 %1939, %1940
  br i1 %1941, label %1942, label %1953

1942:                                             ; preds = %1934
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1953

1943:                                             ; preds = %1927
  %1944 = shl nsw i32 %1932, 1
  %1945 = sext i32 %1944 to i64
  %1946 = add i64 %1931, 11
  %1947 = add i64 %1946, %1945
  %1948 = inttoptr i64 %1947 to i16*
  store i16 10, i16* %1948, align 2
  %1949 = load i32, i32* %1349, align 4
  %1950 = load i32, i32* %1874, align 8
  %1951 = icmp eq i32 %1949, %1950
  br i1 %1951, label %1952, label %1953

1952:                                             ; preds = %1943
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1953

1953:                                             ; preds = %1952, %1943, %1942, %1934
  %1954 = load i32, i32* %1483, align 8
  %1955 = icmp sgt i32 %1954, 0
  br i1 %1955, label %1956, label %2009

1956:                                             ; preds = %1953, %2005
  %1957 = phi i32 [ %2006, %2005 ], [ 0, %1953 ]
  %1958 = load i16*, i16** %1247, align 8
  %1959 = load i32, i32* %1343, align 8
  %1960 = icmp eq i32 %1959, 0
  %1961 = load i16, i16* %1958, align 2
  %1962 = icmp eq i16 %1961, 0
  br i1 %1960, label %1964, label %1963

1963:                                             ; preds = %1956
  br i1 %1962, label %2005, label %1985

1964:                                             ; preds = %1956
  br i1 %1962, label %2005, label %1965

1965:                                             ; preds = %1964, %1982
  %1966 = phi i16 [ %1983, %1982 ], [ %1961, %1964 ]
  %1967 = phi i16* [ %1968, %1982 ], [ %1958, %1964 ]
  %1968 = getelementptr inbounds i16, i16* %1967, i64 1
  %1969 = load i64*, i64** %1346, align 8
  %1970 = load i64, i64* %1969, align 8
  %1971 = load i32, i32* %1349, align 4
  %1972 = add nsw i32 %1971, 1
  store i32 %1972, i32* %1349, align 4
  %1973 = trunc i16 %1966 to i8
  %1974 = sext i32 %1971 to i64
  %1975 = add i64 %1970, 11
  %1976 = add i64 %1975, %1974
  %1977 = inttoptr i64 %1976 to i8*
  store i8 %1973, i8* %1977, align 1
  %1978 = load i32, i32* %1349, align 4
  %1979 = load i32, i32* %1874, align 8
  %1980 = icmp eq i32 %1978, %1979
  br i1 %1980, label %1981, label %1982

1981:                                             ; preds = %1965
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %1982

1982:                                             ; preds = %1981, %1965
  %1983 = load i16, i16* %1968, align 2
  %1984 = icmp eq i16 %1983, 0
  br i1 %1984, label %2005, label %1965

1985:                                             ; preds = %1963, %2002
  %1986 = phi i16 [ %2003, %2002 ], [ %1961, %1963 ]
  %1987 = phi i16* [ %1988, %2002 ], [ %1958, %1963 ]
  %1988 = getelementptr inbounds i16, i16* %1987, i64 1
  %1989 = load i64*, i64** %1346, align 8
  %1990 = load i64, i64* %1989, align 8
  %1991 = load i32, i32* %1349, align 4
  %1992 = add nsw i32 %1991, 1
  store i32 %1992, i32* %1349, align 4
  %1993 = shl nsw i32 %1991, 1
  %1994 = sext i32 %1993 to i64
  %1995 = add i64 %1990, 11
  %1996 = add i64 %1995, %1994
  %1997 = inttoptr i64 %1996 to i16*
  store i16 %1986, i16* %1997, align 2
  %1998 = load i32, i32* %1349, align 4
  %1999 = load i32, i32* %1874, align 8
  %2000 = icmp eq i32 %1998, %1999
  br i1 %2000, label %2001, label %2002

2001:                                             ; preds = %1985
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %2002

2002:                                             ; preds = %2001, %1985
  %2003 = load i16, i16* %1988, align 2
  %2004 = icmp eq i16 %2003, 0
  br i1 %2004, label %2005, label %1985

2005:                                             ; preds = %2002, %1982, %1964, %1963
  %2006 = add nuw nsw i32 %1957, 1
  %2007 = load i32, i32* %1483, align 8
  %2008 = icmp slt i32 %2006, %2007
  br i1 %2008, label %1956, label %2009

2009:                                             ; preds = %2005, %1953, %1924
  %2010 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %2011 = load i64, i64* %61, align 8
  %2012 = and i64 %2011, -4294967296
  %2013 = add i64 %2011, 7
  %2014 = inttoptr i64 %2013 to i32*
  %2015 = load i32, i32* %2014, align 4
  %2016 = zext i32 %2015 to i64
  %2017 = or i64 %2012, %2016
  %2018 = shl i32 %1876, 2
  %2019 = sext i32 %2018 to i64
  %2020 = add nsw i64 %2019, 7
  %2021 = add i64 %2020, %2017
  %2022 = inttoptr i64 %2021 to i32*
  %2023 = load atomic i32, i32* %2022 monotonic, align 4
  %2024 = zext i32 %2023 to i64
  %2025 = or i64 %2012, %2024
  %2026 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2010, i64 0, i32 31, i32 4
  %2027 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %2026, align 8
  %2028 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2027, null
  br i1 %2028, label %2031, label %2029

2029:                                             ; preds = %2009
  %2030 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2027, i64 %2025) #7
  br label %2044

2031:                                             ; preds = %2009
  %2032 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2010, i64 0, i32 31, i32 0
  %2033 = load i64*, i64** %2032, align 8
  %2034 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2010, i64 0, i32 31, i32 1
  %2035 = load i64*, i64** %2034, align 8
  %2036 = icmp eq i64* %2033, %2035
  br i1 %2036, label %2037, label %2039

2037:                                             ; preds = %2031
  %2038 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2010) #7
  br label %2039

2039:                                             ; preds = %2037, %2031
  %2040 = phi i64* [ %2038, %2037 ], [ %2033, %2031 ]
  %2041 = ptrtoint i64* %2040 to i64
  %2042 = add i64 %2041, 8
  %2043 = inttoptr i64 %2042 to i64*
  store i64* %2043, i64** %2032, align 8
  store i64 %2025, i64* %2040, align 8
  br label %2044

2044:                                             ; preds = %2039, %2029
  %2045 = phi i64* [ %2030, %2029 ], [ %2040, %2039 ]
  %2046 = sext i32 %1876 to i64
  %2047 = shl nsw i64 %2046, 1
  %2048 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %2026, align 8
  %2049 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2048, null
  br i1 %2049, label %2052, label %2050

2050:                                             ; preds = %2044
  %2051 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2048, i64 %2047) #7
  br label %2065

2052:                                             ; preds = %2044
  %2053 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2010, i64 0, i32 31, i32 0
  %2054 = load i64*, i64** %2053, align 8
  %2055 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2010, i64 0, i32 31, i32 1
  %2056 = load i64*, i64** %2055, align 8
  %2057 = icmp eq i64* %2054, %2056
  br i1 %2057, label %2058, label %2060

2058:                                             ; preds = %2052
  %2059 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2010) #7
  br label %2060

2060:                                             ; preds = %2058, %2052
  %2061 = phi i64* [ %2059, %2058 ], [ %2054, %2052 ]
  %2062 = ptrtoint i64* %2061 to i64
  %2063 = add i64 %2062, 8
  %2064 = inttoptr i64 %2063 to i64*
  store i64* %2064, i64** %2053, align 8
  store i64 %2047, i64* %2061, align 8
  br label %2065

2065:                                             ; preds = %2060, %2050
  %2066 = phi i64* [ %2051, %2050 ], [ %2061, %2060 ]
  %2067 = tail call i32 @_ZN2v88internal15JsonStringifier10Serialize_ILb0EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_(%"class.v8::internal::JsonStringifier"* %0, i64* %2045, i1 zeroext false, i64* %2066) #7
  switch i32 %2067, label %2258 [
    i32 0, label %2068
    i32 1, label %2121
  ]

2068:                                             ; preds = %2065
  %2069 = load i32, i32* %1343, align 8
  %2070 = icmp eq i32 %2069, 0
  %2071 = load i64*, i64** %1346, align 8
  %2072 = load i64, i64* %2071, align 8
  %2073 = load i32, i32* %1349, align 4
  %2074 = add nsw i32 %2073, 1
  store i32 %2074, i32* %1349, align 4
  br i1 %2070, label %2084, label %2075

2075:                                             ; preds = %2068
  %2076 = shl nsw i32 %2073, 1
  %2077 = sext i32 %2076 to i64
  %2078 = add i64 %2072, 11
  %2079 = add i64 %2078, %2077
  %2080 = inttoptr i64 %2079 to i16*
  store i16 110, i16* %2080, align 2
  %2081 = load i32, i32* %1349, align 4
  %2082 = load i32, i32* %1874, align 8
  %2083 = icmp eq i32 %2081, %2082
  br i1 %2083, label %2106, label %2108

2084:                                             ; preds = %2068
  %2085 = sext i32 %2073 to i64
  %2086 = add i64 %2072, 11
  %2087 = add i64 %2086, %2085
  %2088 = inttoptr i64 %2087 to i8*
  store i8 110, i8* %2088, align 1
  %2089 = load i32, i32* %1349, align 4
  %2090 = load i32, i32* %1874, align 8
  %2091 = icmp eq i32 %2089, %2090
  br i1 %2091, label %2092, label %2094

2092:                                             ; preds = %2084
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  %2093 = load i32, i32* %1349, align 4
  br label %2094

2094:                                             ; preds = %2092, %2084
  %2095 = phi i32 [ %2093, %2092 ], [ %2089, %2084 ]
  %2096 = load i64*, i64** %1346, align 8
  %2097 = load i64, i64* %2096, align 8
  %2098 = add nsw i32 %2095, 1
  store i32 %2098, i32* %1349, align 4
  %2099 = sext i32 %2095 to i64
  %2100 = add i64 %2097, 11
  %2101 = add i64 %2100, %2099
  %2102 = inttoptr i64 %2101 to i8*
  store i8 117, i8* %2102, align 1
  %2103 = load i32, i32* %1349, align 4
  %2104 = load i32, i32* %1874, align 8
  %2105 = icmp eq i32 %2103, %2104
  br i1 %2105, label %3549, label %3551

2106:                                             ; preds = %2075
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  %2107 = load i32, i32* %1349, align 4
  br label %2108

2108:                                             ; preds = %2106, %2075
  %2109 = phi i32 [ %2107, %2106 ], [ %2081, %2075 ]
  %2110 = load i64*, i64** %1346, align 8
  %2111 = load i64, i64* %2110, align 8
  %2112 = add nsw i32 %2109, 1
  store i32 %2112, i32* %1349, align 4
  %2113 = shl nsw i32 %2109, 1
  %2114 = sext i32 %2113 to i64
  %2115 = add i64 %2111, 11
  %2116 = add i64 %2115, %2114
  %2117 = inttoptr i64 %2116 to i16*
  store i16 117, i16* %2117, align 2
  %2118 = load i32, i32* %1349, align 4
  %2119 = load i32, i32* %1874, align 8
  %2120 = icmp eq i32 %2118, %2119
  br i1 %2120, label %3518, label %3520

2121:                                             ; preds = %3565, %3577, %3535, %3548, %2065
  %2122 = add nuw i32 %1876, 1
  %2123 = icmp eq i32 %2122, %1454
  br i1 %2123, label %2133, label %1875

2124:                                             ; preds = %1884, %1875, %1525, %1870, %1674, %1488, %1482
  %2125 = phi i32 [ 0, %1488 ], [ 0, %1674 ], [ 0, %1482 ], [ 0, %1525 ], [ 0, %1870 ], [ %1876, %1875 ], [ %1876, %1884 ]
  %2126 = icmp ult i32 %2125, %1454
  br i1 %2126, label %2127, label %2133

2127:                                             ; preds = %2124
  %2128 = tail call i32 @_ZN2v88internal15JsonStringifier22SerializeArrayLikeSlowENS0_6HandleINS0_10JSReceiverEEEjj(%"class.v8::internal::JsonStringifier"* %0, i64* %61, i32 %2125, i32 %1454) #7
  %2129 = icmp eq i32 %2128, 1
  br i1 %2129, label %2130, label %2258

2130:                                             ; preds = %2127
  %2131 = load i32, i32* %1483, align 8
  %2132 = add nsw i32 %2131, -1
  store i32 %2132, i32* %1483, align 8
  br label %2137

2133:                                             ; preds = %2121, %1834, %1660, %2124
  %2134 = load i32, i32* %1483, align 8
  %2135 = add nsw i32 %2134, -1
  store i32 %2135, i32* %1483, align 8
  %2136 = icmp eq i32 %1454, 0
  br i1 %2136, label %2226, label %2137

2137:                                             ; preds = %2130, %2133
  %2138 = load i16*, i16** %1247, align 8
  %2139 = icmp eq i16* %2138, null
  br i1 %2139, label %2226, label %2140

2140:                                             ; preds = %2137
  %2141 = load i32, i32* %1343, align 8
  %2142 = icmp eq i32 %2141, 0
  %2143 = load i64*, i64** %1346, align 8
  %2144 = load i64, i64* %2143, align 8
  %2145 = load i32, i32* %1349, align 4
  %2146 = add nsw i32 %2145, 1
  store i32 %2146, i32* %1349, align 4
  br i1 %2142, label %2147, label %2157

2147:                                             ; preds = %2140
  %2148 = sext i32 %2145 to i64
  %2149 = add i64 %2144, 11
  %2150 = add i64 %2149, %2148
  %2151 = inttoptr i64 %2150 to i8*
  store i8 10, i8* %2151, align 1
  %2152 = load i32, i32* %1349, align 4
  %2153 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2154 = load i32, i32* %2153, align 8
  %2155 = icmp eq i32 %2152, %2154
  br i1 %2155, label %2156, label %2168

2156:                                             ; preds = %2147
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %2168

2157:                                             ; preds = %2140
  %2158 = shl nsw i32 %2145, 1
  %2159 = sext i32 %2158 to i64
  %2160 = add i64 %2144, 11
  %2161 = add i64 %2160, %2159
  %2162 = inttoptr i64 %2161 to i16*
  store i16 10, i16* %2162, align 2
  %2163 = load i32, i32* %1349, align 4
  %2164 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2165 = load i32, i32* %2164, align 8
  %2166 = icmp eq i32 %2163, %2165
  br i1 %2166, label %2167, label %2168

2167:                                             ; preds = %2157
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %2168

2168:                                             ; preds = %2167, %2157, %2156, %2147
  %2169 = load i32, i32* %1483, align 8
  %2170 = icmp sgt i32 %2169, 0
  br i1 %2170, label %2171, label %2226

2171:                                             ; preds = %2168
  %2172 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %2173

2173:                                             ; preds = %2222, %2171
  %2174 = phi i32 [ 0, %2171 ], [ %2223, %2222 ]
  %2175 = load i16*, i16** %1247, align 8
  %2176 = load i32, i32* %1343, align 8
  %2177 = icmp eq i32 %2176, 0
  %2178 = load i16, i16* %2175, align 2
  %2179 = icmp eq i16 %2178, 0
  br i1 %2177, label %2181, label %2180

2180:                                             ; preds = %2173
  br i1 %2179, label %2222, label %2202

2181:                                             ; preds = %2173
  br i1 %2179, label %2222, label %2182

2182:                                             ; preds = %2181, %2199
  %2183 = phi i16 [ %2200, %2199 ], [ %2178, %2181 ]
  %2184 = phi i16* [ %2185, %2199 ], [ %2175, %2181 ]
  %2185 = getelementptr inbounds i16, i16* %2184, i64 1
  %2186 = load i64*, i64** %1346, align 8
  %2187 = load i64, i64* %2186, align 8
  %2188 = load i32, i32* %1349, align 4
  %2189 = add nsw i32 %2188, 1
  store i32 %2189, i32* %1349, align 4
  %2190 = trunc i16 %2183 to i8
  %2191 = sext i32 %2188 to i64
  %2192 = add i64 %2187, 11
  %2193 = add i64 %2192, %2191
  %2194 = inttoptr i64 %2193 to i8*
  store i8 %2190, i8* %2194, align 1
  %2195 = load i32, i32* %1349, align 4
  %2196 = load i32, i32* %2172, align 8
  %2197 = icmp eq i32 %2195, %2196
  br i1 %2197, label %2198, label %2199

2198:                                             ; preds = %2182
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %2199

2199:                                             ; preds = %2198, %2182
  %2200 = load i16, i16* %2185, align 2
  %2201 = icmp eq i16 %2200, 0
  br i1 %2201, label %2222, label %2182

2202:                                             ; preds = %2180, %2219
  %2203 = phi i16 [ %2220, %2219 ], [ %2178, %2180 ]
  %2204 = phi i16* [ %2205, %2219 ], [ %2175, %2180 ]
  %2205 = getelementptr inbounds i16, i16* %2204, i64 1
  %2206 = load i64*, i64** %1346, align 8
  %2207 = load i64, i64* %2206, align 8
  %2208 = load i32, i32* %1349, align 4
  %2209 = add nsw i32 %2208, 1
  store i32 %2209, i32* %1349, align 4
  %2210 = shl nsw i32 %2208, 1
  %2211 = sext i32 %2210 to i64
  %2212 = add i64 %2207, 11
  %2213 = add i64 %2212, %2211
  %2214 = inttoptr i64 %2213 to i16*
  store i16 %2203, i16* %2214, align 2
  %2215 = load i32, i32* %1349, align 4
  %2216 = load i32, i32* %2172, align 8
  %2217 = icmp eq i32 %2215, %2216
  br i1 %2217, label %2218, label %2219

2218:                                             ; preds = %2202
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %2219

2219:                                             ; preds = %2218, %2202
  %2220 = load i16, i16* %2205, align 2
  %2221 = icmp eq i16 %2220, 0
  br i1 %2221, label %2222, label %2202

2222:                                             ; preds = %2219, %2199, %2181, %2180
  %2223 = add nuw nsw i32 %2174, 1
  %2224 = load i32, i32* %1483, align 8
  %2225 = icmp slt i32 %2223, %2224
  br i1 %2225, label %2173, label %2226

2226:                                             ; preds = %2222, %2137, %2168, %2133
  %2227 = load i32, i32* %1343, align 8
  %2228 = icmp eq i32 %2227, 0
  %2229 = load i64*, i64** %1346, align 8
  %2230 = load i64, i64* %2229, align 8
  %2231 = load i32, i32* %1349, align 4
  %2232 = add nsw i32 %2231, 1
  store i32 %2232, i32* %1349, align 4
  br i1 %2228, label %2233, label %2243

2233:                                             ; preds = %2226
  %2234 = sext i32 %2231 to i64
  %2235 = add i64 %2230, 11
  %2236 = add i64 %2235, %2234
  %2237 = inttoptr i64 %2236 to i8*
  store i8 93, i8* %2237, align 1
  %2238 = load i32, i32* %1349, align 4
  %2239 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2240 = load i32, i32* %2239, align 8
  %2241 = icmp eq i32 %2238, %2240
  br i1 %2241, label %2242, label %2254

2242:                                             ; preds = %2233
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %2254

2243:                                             ; preds = %2226
  %2244 = shl nsw i32 %2231, 1
  %2245 = sext i32 %2244 to i64
  %2246 = add i64 %2230, 11
  %2247 = add i64 %2246, %2245
  %2248 = inttoptr i64 %2247 to i16*
  store i16 93, i16* %2248, align 2
  %2249 = load i32, i32* %1349, align 4
  %2250 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2251 = load i32, i32* %2250, align 8
  %2252 = icmp eq i32 %2249, %2251
  br i1 %2252, label %2253, label %2254

2253:                                             ; preds = %2243
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %2254

2254:                                             ; preds = %2253, %2243, %2242, %2233
  %2255 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7, i32 0, i32 1
  %2256 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %2255, align 8
  %2257 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %2256, i64 -1
  store %"struct.std::__1::pair.1134"* %2257, %"struct.std::__1::pair.1134"** %2255, align 8
  br label %2258

2258:                                             ; preds = %2065, %1711, %1537, %2127, %2254, %1404
  %2259 = phi i32 [ %1414, %1404 ], [ 1, %2254 ], [ %2128, %2127 ], [ 2, %1537 ], [ 2, %1711 ], [ %2067, %2065 ]
  %2260 = icmp eq %"class.v8::internal::Isolate"* %1405, null
  br i1 %2260, label %3307, label %2261

2261:                                             ; preds = %2258
  %2262 = inttoptr i64 %1408 to i64*
  %2263 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %1406, i64 0, i32 0
  %2264 = load i64*, i64** %2263, align 8
  store i64 %1408, i64* %1407, align 8
  %2265 = load i32, i32* %1411, align 8
  %2266 = add nsw i32 %2265, -1
  store i32 %2266, i32* %1411, align 8
  %2267 = load i64*, i64** %1409, align 8
  %2268 = icmp eq i64* %2267, %1410
  br i1 %2268, label %2271, label %2269

2269:                                             ; preds = %2261
  store i64* %1410, i64** %1409, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %1405) #7
  %2270 = load i64*, i64** %2263, align 8
  br label %2271

2271:                                             ; preds = %2269, %2261
  %2272 = phi i64* [ %2270, %2269 ], [ %2262, %2261 ]
  %2273 = phi i64* [ %1410, %2269 ], [ %2264, %2261 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %2272, i64* %2273) #7
  br label %3307

2274:                                             ; preds = %259
  br i1 %2, label %2275, label %2307

2275:                                             ; preds = %2274
  %2276 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %2277 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %2278 = load i32, i32* %2277, align 8
  %2279 = icmp eq i32 %2278, 0
  %2280 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %2281 = load i64*, i64** %2280, align 8
  %2282 = load i64, i64* %2281, align 8
  %2283 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %2284 = load i32, i32* %2283, align 4
  %2285 = add nsw i32 %2284, 1
  store i32 %2285, i32* %2283, align 4
  br i1 %2279, label %2286, label %2296

2286:                                             ; preds = %2275
  %2287 = sext i32 %2284 to i64
  %2288 = add i64 %2282, 11
  %2289 = add i64 %2288, %2287
  %2290 = inttoptr i64 %2289 to i8*
  store i8 44, i8* %2290, align 1
  %2291 = load i32, i32* %2283, align 4
  %2292 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2293 = load i32, i32* %2292, align 8
  %2294 = icmp eq i32 %2291, %2293
  br i1 %2294, label %2295, label %2307

2295:                                             ; preds = %2286
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2276) #7
  br label %2307

2296:                                             ; preds = %2275
  %2297 = shl nsw i32 %2284, 1
  %2298 = sext i32 %2297 to i64
  %2299 = add i64 %2282, 11
  %2300 = add i64 %2299, %2298
  %2301 = inttoptr i64 %2300 to i16*
  store i16 44, i16* %2301, align 2
  %2302 = load i32, i32* %2283, align 4
  %2303 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2304 = load i32, i32* %2303, align 8
  %2305 = icmp eq i32 %2302, %2304
  br i1 %2305, label %2306, label %2307

2306:                                             ; preds = %2296
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2276) #7
  br label %2307

2307:                                             ; preds = %2306, %2296, %2295, %2286, %2274
  %2308 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %2309 = load i16*, i16** %2308, align 8
  %2310 = icmp eq i16* %2309, null
  br i1 %2310, label %2402, label %2311

2311:                                             ; preds = %2307
  %2312 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %2313 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %2314 = load i32, i32* %2313, align 8
  %2315 = icmp eq i32 %2314, 0
  %2316 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %2317 = load i64*, i64** %2316, align 8
  %2318 = load i64, i64* %2317, align 8
  %2319 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %2320 = load i32, i32* %2319, align 4
  %2321 = add nsw i32 %2320, 1
  store i32 %2321, i32* %2319, align 4
  br i1 %2315, label %2322, label %2332

2322:                                             ; preds = %2311
  %2323 = sext i32 %2320 to i64
  %2324 = add i64 %2318, 11
  %2325 = add i64 %2324, %2323
  %2326 = inttoptr i64 %2325 to i8*
  store i8 10, i8* %2326, align 1
  %2327 = load i32, i32* %2319, align 4
  %2328 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2329 = load i32, i32* %2328, align 8
  %2330 = icmp eq i32 %2327, %2329
  br i1 %2330, label %2331, label %2343

2331:                                             ; preds = %2322
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2312) #7
  br label %2343

2332:                                             ; preds = %2311
  %2333 = shl nsw i32 %2320, 1
  %2334 = sext i32 %2333 to i64
  %2335 = add i64 %2318, 11
  %2336 = add i64 %2335, %2334
  %2337 = inttoptr i64 %2336 to i16*
  store i16 10, i16* %2337, align 2
  %2338 = load i32, i32* %2319, align 4
  %2339 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2340 = load i32, i32* %2339, align 8
  %2341 = icmp eq i32 %2338, %2340
  br i1 %2341, label %2342, label %2343

2342:                                             ; preds = %2332
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2312) #7
  br label %2343

2343:                                             ; preds = %2342, %2332, %2331, %2322
  %2344 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %2345 = load i32, i32* %2344, align 8
  %2346 = icmp sgt i32 %2345, 0
  br i1 %2346, label %2347, label %2402

2347:                                             ; preds = %2343
  %2348 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %2349

2349:                                             ; preds = %2398, %2347
  %2350 = phi i32 [ 0, %2347 ], [ %2399, %2398 ]
  %2351 = load i16*, i16** %2308, align 8
  %2352 = load i32, i32* %2313, align 8
  %2353 = icmp eq i32 %2352, 0
  %2354 = load i16, i16* %2351, align 2
  %2355 = icmp eq i16 %2354, 0
  br i1 %2353, label %2357, label %2356

2356:                                             ; preds = %2349
  br i1 %2355, label %2398, label %2378

2357:                                             ; preds = %2349
  br i1 %2355, label %2398, label %2358

2358:                                             ; preds = %2357, %2375
  %2359 = phi i16 [ %2376, %2375 ], [ %2354, %2357 ]
  %2360 = phi i16* [ %2361, %2375 ], [ %2351, %2357 ]
  %2361 = getelementptr inbounds i16, i16* %2360, i64 1
  %2362 = load i64*, i64** %2316, align 8
  %2363 = load i64, i64* %2362, align 8
  %2364 = load i32, i32* %2319, align 4
  %2365 = add nsw i32 %2364, 1
  store i32 %2365, i32* %2319, align 4
  %2366 = trunc i16 %2359 to i8
  %2367 = sext i32 %2364 to i64
  %2368 = add i64 %2363, 11
  %2369 = add i64 %2368, %2367
  %2370 = inttoptr i64 %2369 to i8*
  store i8 %2366, i8* %2370, align 1
  %2371 = load i32, i32* %2319, align 4
  %2372 = load i32, i32* %2348, align 8
  %2373 = icmp eq i32 %2371, %2372
  br i1 %2373, label %2374, label %2375

2374:                                             ; preds = %2358
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2312) #7
  br label %2375

2375:                                             ; preds = %2374, %2358
  %2376 = load i16, i16* %2361, align 2
  %2377 = icmp eq i16 %2376, 0
  br i1 %2377, label %2398, label %2358

2378:                                             ; preds = %2356, %2395
  %2379 = phi i16 [ %2396, %2395 ], [ %2354, %2356 ]
  %2380 = phi i16* [ %2381, %2395 ], [ %2351, %2356 ]
  %2381 = getelementptr inbounds i16, i16* %2380, i64 1
  %2382 = load i64*, i64** %2316, align 8
  %2383 = load i64, i64* %2382, align 8
  %2384 = load i32, i32* %2319, align 4
  %2385 = add nsw i32 %2384, 1
  store i32 %2385, i32* %2319, align 4
  %2386 = shl nsw i32 %2384, 1
  %2387 = sext i32 %2386 to i64
  %2388 = add i64 %2383, 11
  %2389 = add i64 %2388, %2387
  %2390 = inttoptr i64 %2389 to i16*
  store i16 %2379, i16* %2390, align 2
  %2391 = load i32, i32* %2319, align 4
  %2392 = load i32, i32* %2348, align 8
  %2393 = icmp eq i32 %2391, %2392
  br i1 %2393, label %2394, label %2395

2394:                                             ; preds = %2378
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2312) #7
  br label %2395

2395:                                             ; preds = %2394, %2378
  %2396 = load i16, i16* %2381, align 2
  %2397 = icmp eq i16 %2396, 0
  br i1 %2397, label %2398, label %2378

2398:                                             ; preds = %2395, %2375, %2357, %2356
  %2399 = add nuw nsw i32 %2350, 1
  %2400 = load i32, i32* %2344, align 8
  %2401 = icmp slt i32 %2399, %2400
  br i1 %2401, label %2349, label %2402

2402:                                             ; preds = %2398, %2343, %2307
  tail call void @_ZN2v88internal15JsonStringifier15SerializeStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %3) #7
  %2403 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %2404 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %2405 = load i32, i32* %2404, align 8
  %2406 = icmp eq i32 %2405, 0
  %2407 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %2408 = load i64*, i64** %2407, align 8
  %2409 = load i64, i64* %2408, align 8
  %2410 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %2411 = load i32, i32* %2410, align 4
  %2412 = add nsw i32 %2411, 1
  store i32 %2412, i32* %2410, align 4
  br i1 %2406, label %2413, label %2423

2413:                                             ; preds = %2402
  %2414 = sext i32 %2411 to i64
  %2415 = add i64 %2409, 11
  %2416 = add i64 %2415, %2414
  %2417 = inttoptr i64 %2416 to i8*
  store i8 58, i8* %2417, align 1
  %2418 = load i32, i32* %2410, align 4
  %2419 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2420 = load i32, i32* %2419, align 8
  %2421 = icmp eq i32 %2418, %2420
  br i1 %2421, label %2422, label %2434

2422:                                             ; preds = %2413
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2403) #7
  br label %2434

2423:                                             ; preds = %2402
  %2424 = shl nsw i32 %2411, 1
  %2425 = sext i32 %2424 to i64
  %2426 = add i64 %2409, 11
  %2427 = add i64 %2426, %2425
  %2428 = inttoptr i64 %2427 to i16*
  store i16 58, i16* %2428, align 2
  %2429 = load i32, i32* %2410, align 4
  %2430 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2431 = load i32, i32* %2430, align 8
  %2432 = icmp eq i32 %2429, %2431
  br i1 %2432, label %2433, label %2434

2433:                                             ; preds = %2423
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2403) #7
  br label %2434

2434:                                             ; preds = %2433, %2423, %2422, %2413
  %2435 = load i16*, i16** %2308, align 8
  %2436 = icmp eq i16* %2435, null
  br i1 %2436, label %2465, label %2437

2437:                                             ; preds = %2434
  %2438 = load i32, i32* %2404, align 8
  %2439 = icmp eq i32 %2438, 0
  %2440 = load i64*, i64** %2407, align 8
  %2441 = load i64, i64* %2440, align 8
  %2442 = load i32, i32* %2410, align 4
  %2443 = add nsw i32 %2442, 1
  store i32 %2443, i32* %2410, align 4
  br i1 %2439, label %2444, label %2454

2444:                                             ; preds = %2437
  %2445 = sext i32 %2442 to i64
  %2446 = add i64 %2441, 11
  %2447 = add i64 %2446, %2445
  %2448 = inttoptr i64 %2447 to i8*
  store i8 32, i8* %2448, align 1
  %2449 = load i32, i32* %2410, align 4
  %2450 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2451 = load i32, i32* %2450, align 8
  %2452 = icmp eq i32 %2449, %2451
  br i1 %2452, label %2453, label %2465

2453:                                             ; preds = %2444
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2403) #7
  br label %2465

2454:                                             ; preds = %2437
  %2455 = shl nsw i32 %2442, 1
  %2456 = sext i32 %2455 to i64
  %2457 = add i64 %2441, 11
  %2458 = add i64 %2457, %2456
  %2459 = inttoptr i64 %2458 to i16*
  store i16 32, i16* %2459, align 2
  %2460 = load i32, i32* %2410, align 4
  %2461 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2462 = load i32, i32* %2461, align 8
  %2463 = icmp eq i32 %2460, %2462
  br i1 %2463, label %2464, label %2465

2464:                                             ; preds = %2454
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2403) #7
  br label %2465

2465:                                             ; preds = %2434, %2444, %2453, %2454, %2464
  %2466 = tail call i32 @_ZN2v88internal15JsonStringifier27SerializeJSPrimitiveWrapperENS0_6HandleINS0_18JSPrimitiveWrapperEEENS2_INS0_6ObjectEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %61, i64* %3)
  br label %3307

2467:                                             ; preds = %259
  %2468 = load atomic i32, i32* %262 monotonic, align 4
  %2469 = zext i32 %2468 to i64
  %2470 = or i64 %260, %2469
  %2471 = add i64 %2470, 7
  %2472 = inttoptr i64 %2471 to i16*
  %2473 = load atomic i16, i16* %2472 monotonic, align 2
  %2474 = icmp ult i16 %2473, 64
  br i1 %2474, label %2475, label %2667

2475:                                             ; preds = %2467
  br i1 %2, label %2476, label %2508

2476:                                             ; preds = %2475
  %2477 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %2478 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %2479 = load i32, i32* %2478, align 8
  %2480 = icmp eq i32 %2479, 0
  %2481 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %2482 = load i64*, i64** %2481, align 8
  %2483 = load i64, i64* %2482, align 8
  %2484 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %2485 = load i32, i32* %2484, align 4
  %2486 = add nsw i32 %2485, 1
  store i32 %2486, i32* %2484, align 4
  br i1 %2480, label %2487, label %2497

2487:                                             ; preds = %2476
  %2488 = sext i32 %2485 to i64
  %2489 = add i64 %2483, 11
  %2490 = add i64 %2489, %2488
  %2491 = inttoptr i64 %2490 to i8*
  store i8 44, i8* %2491, align 1
  %2492 = load i32, i32* %2484, align 4
  %2493 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2494 = load i32, i32* %2493, align 8
  %2495 = icmp eq i32 %2492, %2494
  br i1 %2495, label %2496, label %2508

2496:                                             ; preds = %2487
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2477) #7
  br label %2508

2497:                                             ; preds = %2476
  %2498 = shl nsw i32 %2485, 1
  %2499 = sext i32 %2498 to i64
  %2500 = add i64 %2483, 11
  %2501 = add i64 %2500, %2499
  %2502 = inttoptr i64 %2501 to i16*
  store i16 44, i16* %2502, align 2
  %2503 = load i32, i32* %2484, align 4
  %2504 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2505 = load i32, i32* %2504, align 8
  %2506 = icmp eq i32 %2503, %2505
  br i1 %2506, label %2507, label %2508

2507:                                             ; preds = %2497
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2477) #7
  br label %2508

2508:                                             ; preds = %2507, %2497, %2496, %2487, %2475
  %2509 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %2510 = load i16*, i16** %2509, align 8
  %2511 = icmp eq i16* %2510, null
  br i1 %2511, label %2603, label %2512

2512:                                             ; preds = %2508
  %2513 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %2514 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %2515 = load i32, i32* %2514, align 8
  %2516 = icmp eq i32 %2515, 0
  %2517 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %2518 = load i64*, i64** %2517, align 8
  %2519 = load i64, i64* %2518, align 8
  %2520 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %2521 = load i32, i32* %2520, align 4
  %2522 = add nsw i32 %2521, 1
  store i32 %2522, i32* %2520, align 4
  br i1 %2516, label %2523, label %2533

2523:                                             ; preds = %2512
  %2524 = sext i32 %2521 to i64
  %2525 = add i64 %2519, 11
  %2526 = add i64 %2525, %2524
  %2527 = inttoptr i64 %2526 to i8*
  store i8 10, i8* %2527, align 1
  %2528 = load i32, i32* %2520, align 4
  %2529 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2530 = load i32, i32* %2529, align 8
  %2531 = icmp eq i32 %2528, %2530
  br i1 %2531, label %2532, label %2544

2532:                                             ; preds = %2523
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2513) #7
  br label %2544

2533:                                             ; preds = %2512
  %2534 = shl nsw i32 %2521, 1
  %2535 = sext i32 %2534 to i64
  %2536 = add i64 %2519, 11
  %2537 = add i64 %2536, %2535
  %2538 = inttoptr i64 %2537 to i16*
  store i16 10, i16* %2538, align 2
  %2539 = load i32, i32* %2520, align 4
  %2540 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2541 = load i32, i32* %2540, align 8
  %2542 = icmp eq i32 %2539, %2541
  br i1 %2542, label %2543, label %2544

2543:                                             ; preds = %2533
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2513) #7
  br label %2544

2544:                                             ; preds = %2543, %2533, %2532, %2523
  %2545 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %2546 = load i32, i32* %2545, align 8
  %2547 = icmp sgt i32 %2546, 0
  br i1 %2547, label %2548, label %2603

2548:                                             ; preds = %2544
  %2549 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %2550

2550:                                             ; preds = %2599, %2548
  %2551 = phi i32 [ 0, %2548 ], [ %2600, %2599 ]
  %2552 = load i16*, i16** %2509, align 8
  %2553 = load i32, i32* %2514, align 8
  %2554 = icmp eq i32 %2553, 0
  %2555 = load i16, i16* %2552, align 2
  %2556 = icmp eq i16 %2555, 0
  br i1 %2554, label %2558, label %2557

2557:                                             ; preds = %2550
  br i1 %2556, label %2599, label %2579

2558:                                             ; preds = %2550
  br i1 %2556, label %2599, label %2559

2559:                                             ; preds = %2558, %2576
  %2560 = phi i16 [ %2577, %2576 ], [ %2555, %2558 ]
  %2561 = phi i16* [ %2562, %2576 ], [ %2552, %2558 ]
  %2562 = getelementptr inbounds i16, i16* %2561, i64 1
  %2563 = load i64*, i64** %2517, align 8
  %2564 = load i64, i64* %2563, align 8
  %2565 = load i32, i32* %2520, align 4
  %2566 = add nsw i32 %2565, 1
  store i32 %2566, i32* %2520, align 4
  %2567 = trunc i16 %2560 to i8
  %2568 = sext i32 %2565 to i64
  %2569 = add i64 %2564, 11
  %2570 = add i64 %2569, %2568
  %2571 = inttoptr i64 %2570 to i8*
  store i8 %2567, i8* %2571, align 1
  %2572 = load i32, i32* %2520, align 4
  %2573 = load i32, i32* %2549, align 8
  %2574 = icmp eq i32 %2572, %2573
  br i1 %2574, label %2575, label %2576

2575:                                             ; preds = %2559
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2513) #7
  br label %2576

2576:                                             ; preds = %2575, %2559
  %2577 = load i16, i16* %2562, align 2
  %2578 = icmp eq i16 %2577, 0
  br i1 %2578, label %2599, label %2559

2579:                                             ; preds = %2557, %2596
  %2580 = phi i16 [ %2597, %2596 ], [ %2555, %2557 ]
  %2581 = phi i16* [ %2582, %2596 ], [ %2552, %2557 ]
  %2582 = getelementptr inbounds i16, i16* %2581, i64 1
  %2583 = load i64*, i64** %2517, align 8
  %2584 = load i64, i64* %2583, align 8
  %2585 = load i32, i32* %2520, align 4
  %2586 = add nsw i32 %2585, 1
  store i32 %2586, i32* %2520, align 4
  %2587 = shl nsw i32 %2585, 1
  %2588 = sext i32 %2587 to i64
  %2589 = add i64 %2584, 11
  %2590 = add i64 %2589, %2588
  %2591 = inttoptr i64 %2590 to i16*
  store i16 %2580, i16* %2591, align 2
  %2592 = load i32, i32* %2520, align 4
  %2593 = load i32, i32* %2549, align 8
  %2594 = icmp eq i32 %2592, %2593
  br i1 %2594, label %2595, label %2596

2595:                                             ; preds = %2579
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2513) #7
  br label %2596

2596:                                             ; preds = %2595, %2579
  %2597 = load i16, i16* %2582, align 2
  %2598 = icmp eq i16 %2597, 0
  br i1 %2598, label %2599, label %2579

2599:                                             ; preds = %2596, %2576, %2558, %2557
  %2600 = add nuw nsw i32 %2551, 1
  %2601 = load i32, i32* %2545, align 8
  %2602 = icmp slt i32 %2600, %2601
  br i1 %2602, label %2550, label %2603

2603:                                             ; preds = %2599, %2544, %2508
  tail call void @_ZN2v88internal15JsonStringifier15SerializeStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %3) #7
  %2604 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %2605 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %2606 = load i32, i32* %2605, align 8
  %2607 = icmp eq i32 %2606, 0
  %2608 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %2609 = load i64*, i64** %2608, align 8
  %2610 = load i64, i64* %2609, align 8
  %2611 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %2612 = load i32, i32* %2611, align 4
  %2613 = add nsw i32 %2612, 1
  store i32 %2613, i32* %2611, align 4
  br i1 %2607, label %2614, label %2624

2614:                                             ; preds = %2603
  %2615 = sext i32 %2612 to i64
  %2616 = add i64 %2610, 11
  %2617 = add i64 %2616, %2615
  %2618 = inttoptr i64 %2617 to i8*
  store i8 58, i8* %2618, align 1
  %2619 = load i32, i32* %2611, align 4
  %2620 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2621 = load i32, i32* %2620, align 8
  %2622 = icmp eq i32 %2619, %2621
  br i1 %2622, label %2623, label %2635

2623:                                             ; preds = %2614
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2604) #7
  br label %2635

2624:                                             ; preds = %2603
  %2625 = shl nsw i32 %2612, 1
  %2626 = sext i32 %2625 to i64
  %2627 = add i64 %2610, 11
  %2628 = add i64 %2627, %2626
  %2629 = inttoptr i64 %2628 to i16*
  store i16 58, i16* %2629, align 2
  %2630 = load i32, i32* %2611, align 4
  %2631 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2632 = load i32, i32* %2631, align 8
  %2633 = icmp eq i32 %2630, %2632
  br i1 %2633, label %2634, label %2635

2634:                                             ; preds = %2624
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2604) #7
  br label %2635

2635:                                             ; preds = %2634, %2624, %2623, %2614
  %2636 = load i16*, i16** %2509, align 8
  %2637 = icmp eq i16* %2636, null
  br i1 %2637, label %2666, label %2638

2638:                                             ; preds = %2635
  %2639 = load i32, i32* %2605, align 8
  %2640 = icmp eq i32 %2639, 0
  %2641 = load i64*, i64** %2608, align 8
  %2642 = load i64, i64* %2641, align 8
  %2643 = load i32, i32* %2611, align 4
  %2644 = add nsw i32 %2643, 1
  store i32 %2644, i32* %2611, align 4
  br i1 %2640, label %2645, label %2655

2645:                                             ; preds = %2638
  %2646 = sext i32 %2643 to i64
  %2647 = add i64 %2642, 11
  %2648 = add i64 %2647, %2646
  %2649 = inttoptr i64 %2648 to i8*
  store i8 32, i8* %2649, align 1
  %2650 = load i32, i32* %2611, align 4
  %2651 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2652 = load i32, i32* %2651, align 8
  %2653 = icmp eq i32 %2650, %2652
  br i1 %2653, label %2654, label %2666

2654:                                             ; preds = %2645
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2604) #7
  br label %2666

2655:                                             ; preds = %2638
  %2656 = shl nsw i32 %2643, 1
  %2657 = sext i32 %2656 to i64
  %2658 = add i64 %2642, 11
  %2659 = add i64 %2658, %2657
  %2660 = inttoptr i64 %2659 to i16*
  store i16 32, i16* %2660, align 2
  %2661 = load i32, i32* %2611, align 4
  %2662 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2663 = load i32, i32* %2662, align 8
  %2664 = icmp eq i32 %2661, %2663
  br i1 %2664, label %2665, label %2666

2665:                                             ; preds = %2655
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2604) #7
  br label %2666

2666:                                             ; preds = %2635, %2645, %2654, %2655, %2665
  tail call void @_ZN2v88internal15JsonStringifier15SerializeStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %61)
  br label %3307

2667:                                             ; preds = %2467
  %2668 = load atomic i32, i32* %262 monotonic, align 4
  %2669 = zext i32 %2668 to i64
  %2670 = or i64 %260, %2669
  %2671 = add i64 %2670, 9
  %2672 = inttoptr i64 %2671 to i8*
  %2673 = load atomic i8, i8* %2672 monotonic, align 1
  %2674 = and i8 %2673, 2
  %2675 = icmp eq i8 %2674, 0
  br i1 %2675, label %2676, label %3307

2676:                                             ; preds = %2667
  br i1 %2, label %2677, label %2709

2677:                                             ; preds = %2676
  %2678 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %2679 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %2680 = load i32, i32* %2679, align 8
  %2681 = icmp eq i32 %2680, 0
  %2682 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %2683 = load i64*, i64** %2682, align 8
  %2684 = load i64, i64* %2683, align 8
  %2685 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %2686 = load i32, i32* %2685, align 4
  %2687 = add nsw i32 %2686, 1
  store i32 %2687, i32* %2685, align 4
  br i1 %2681, label %2688, label %2698

2688:                                             ; preds = %2677
  %2689 = sext i32 %2686 to i64
  %2690 = add i64 %2684, 11
  %2691 = add i64 %2690, %2689
  %2692 = inttoptr i64 %2691 to i8*
  store i8 44, i8* %2692, align 1
  %2693 = load i32, i32* %2685, align 4
  %2694 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2695 = load i32, i32* %2694, align 8
  %2696 = icmp eq i32 %2693, %2695
  br i1 %2696, label %2697, label %2709

2697:                                             ; preds = %2688
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2678) #7
  br label %2709

2698:                                             ; preds = %2677
  %2699 = shl nsw i32 %2686, 1
  %2700 = sext i32 %2699 to i64
  %2701 = add i64 %2684, 11
  %2702 = add i64 %2701, %2700
  %2703 = inttoptr i64 %2702 to i16*
  store i16 44, i16* %2703, align 2
  %2704 = load i32, i32* %2685, align 4
  %2705 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2706 = load i32, i32* %2705, align 8
  %2707 = icmp eq i32 %2704, %2706
  br i1 %2707, label %2708, label %2709

2708:                                             ; preds = %2698
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2678) #7
  br label %2709

2709:                                             ; preds = %2708, %2698, %2697, %2688, %2676
  %2710 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 5
  %2711 = load i16*, i16** %2710, align 8
  %2712 = icmp eq i16* %2711, null
  br i1 %2712, label %2804, label %2713

2713:                                             ; preds = %2709
  %2714 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %2715 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %2716 = load i32, i32* %2715, align 8
  %2717 = icmp eq i32 %2716, 0
  %2718 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %2719 = load i64*, i64** %2718, align 8
  %2720 = load i64, i64* %2719, align 8
  %2721 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %2722 = load i32, i32* %2721, align 4
  %2723 = add nsw i32 %2722, 1
  store i32 %2723, i32* %2721, align 4
  br i1 %2717, label %2724, label %2734

2724:                                             ; preds = %2713
  %2725 = sext i32 %2722 to i64
  %2726 = add i64 %2720, 11
  %2727 = add i64 %2726, %2725
  %2728 = inttoptr i64 %2727 to i8*
  store i8 10, i8* %2728, align 1
  %2729 = load i32, i32* %2721, align 4
  %2730 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2731 = load i32, i32* %2730, align 8
  %2732 = icmp eq i32 %2729, %2731
  br i1 %2732, label %2733, label %2745

2733:                                             ; preds = %2724
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2714) #7
  br label %2745

2734:                                             ; preds = %2713
  %2735 = shl nsw i32 %2722, 1
  %2736 = sext i32 %2735 to i64
  %2737 = add i64 %2720, 11
  %2738 = add i64 %2737, %2736
  %2739 = inttoptr i64 %2738 to i16*
  store i16 10, i16* %2739, align 2
  %2740 = load i32, i32* %2721, align 4
  %2741 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2742 = load i32, i32* %2741, align 8
  %2743 = icmp eq i32 %2740, %2742
  br i1 %2743, label %2744, label %2745

2744:                                             ; preds = %2734
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2714) #7
  br label %2745

2745:                                             ; preds = %2744, %2734, %2733, %2724
  %2746 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %2747 = load i32, i32* %2746, align 8
  %2748 = icmp sgt i32 %2747, 0
  br i1 %2748, label %2749, label %2804

2749:                                             ; preds = %2745
  %2750 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %2751

2751:                                             ; preds = %2800, %2749
  %2752 = phi i32 [ 0, %2749 ], [ %2801, %2800 ]
  %2753 = load i16*, i16** %2710, align 8
  %2754 = load i32, i32* %2715, align 8
  %2755 = icmp eq i32 %2754, 0
  %2756 = load i16, i16* %2753, align 2
  %2757 = icmp eq i16 %2756, 0
  br i1 %2755, label %2759, label %2758

2758:                                             ; preds = %2751
  br i1 %2757, label %2800, label %2780

2759:                                             ; preds = %2751
  br i1 %2757, label %2800, label %2760

2760:                                             ; preds = %2759, %2777
  %2761 = phi i16 [ %2778, %2777 ], [ %2756, %2759 ]
  %2762 = phi i16* [ %2763, %2777 ], [ %2753, %2759 ]
  %2763 = getelementptr inbounds i16, i16* %2762, i64 1
  %2764 = load i64*, i64** %2718, align 8
  %2765 = load i64, i64* %2764, align 8
  %2766 = load i32, i32* %2721, align 4
  %2767 = add nsw i32 %2766, 1
  store i32 %2767, i32* %2721, align 4
  %2768 = trunc i16 %2761 to i8
  %2769 = sext i32 %2766 to i64
  %2770 = add i64 %2765, 11
  %2771 = add i64 %2770, %2769
  %2772 = inttoptr i64 %2771 to i8*
  store i8 %2768, i8* %2772, align 1
  %2773 = load i32, i32* %2721, align 4
  %2774 = load i32, i32* %2750, align 8
  %2775 = icmp eq i32 %2773, %2774
  br i1 %2775, label %2776, label %2777

2776:                                             ; preds = %2760
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2714) #7
  br label %2777

2777:                                             ; preds = %2776, %2760
  %2778 = load i16, i16* %2763, align 2
  %2779 = icmp eq i16 %2778, 0
  br i1 %2779, label %2800, label %2760

2780:                                             ; preds = %2758, %2797
  %2781 = phi i16 [ %2798, %2797 ], [ %2756, %2758 ]
  %2782 = phi i16* [ %2783, %2797 ], [ %2753, %2758 ]
  %2783 = getelementptr inbounds i16, i16* %2782, i64 1
  %2784 = load i64*, i64** %2718, align 8
  %2785 = load i64, i64* %2784, align 8
  %2786 = load i32, i32* %2721, align 4
  %2787 = add nsw i32 %2786, 1
  store i32 %2787, i32* %2721, align 4
  %2788 = shl nsw i32 %2786, 1
  %2789 = sext i32 %2788 to i64
  %2790 = add i64 %2785, 11
  %2791 = add i64 %2790, %2789
  %2792 = inttoptr i64 %2791 to i16*
  store i16 %2781, i16* %2792, align 2
  %2793 = load i32, i32* %2721, align 4
  %2794 = load i32, i32* %2750, align 8
  %2795 = icmp eq i32 %2793, %2794
  br i1 %2795, label %2796, label %2797

2796:                                             ; preds = %2780
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2714) #7
  br label %2797

2797:                                             ; preds = %2796, %2780
  %2798 = load i16, i16* %2783, align 2
  %2799 = icmp eq i16 %2798, 0
  br i1 %2799, label %2800, label %2780

2800:                                             ; preds = %2797, %2777, %2759, %2758
  %2801 = add nuw nsw i32 %2752, 1
  %2802 = load i32, i32* %2746, align 8
  %2803 = icmp slt i32 %2801, %2802
  br i1 %2803, label %2751, label %2804

2804:                                             ; preds = %2800, %2745, %2709
  tail call void @_ZN2v88internal15JsonStringifier15SerializeStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %3) #7
  %2805 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1
  %2806 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 1
  %2807 = load i32, i32* %2806, align 8
  %2808 = icmp eq i32 %2807, 0
  %2809 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 6, i32 0, i32 0
  %2810 = load i64*, i64** %2809, align 8
  %2811 = load i64, i64* %2810, align 8
  %2812 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 4
  %2813 = load i32, i32* %2812, align 4
  %2814 = add nsw i32 %2813, 1
  store i32 %2814, i32* %2812, align 4
  br i1 %2808, label %2815, label %2825

2815:                                             ; preds = %2804
  %2816 = sext i32 %2813 to i64
  %2817 = add i64 %2811, 11
  %2818 = add i64 %2817, %2816
  %2819 = inttoptr i64 %2818 to i8*
  store i8 58, i8* %2819, align 1
  %2820 = load i32, i32* %2812, align 4
  %2821 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2822 = load i32, i32* %2821, align 8
  %2823 = icmp eq i32 %2820, %2822
  br i1 %2823, label %2824, label %2836

2824:                                             ; preds = %2815
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2805) #7
  br label %2836

2825:                                             ; preds = %2804
  %2826 = shl nsw i32 %2813, 1
  %2827 = sext i32 %2826 to i64
  %2828 = add i64 %2811, 11
  %2829 = add i64 %2828, %2827
  %2830 = inttoptr i64 %2829 to i16*
  store i16 58, i16* %2830, align 2
  %2831 = load i32, i32* %2812, align 4
  %2832 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2833 = load i32, i32* %2832, align 8
  %2834 = icmp eq i32 %2831, %2833
  br i1 %2834, label %2835, label %2836

2835:                                             ; preds = %2825
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2805) #7
  br label %2836

2836:                                             ; preds = %2835, %2825, %2824, %2815
  %2837 = load i16*, i16** %2710, align 8
  %2838 = icmp eq i16* %2837, null
  br i1 %2838, label %2867, label %2839

2839:                                             ; preds = %2836
  %2840 = load i32, i32* %2806, align 8
  %2841 = icmp eq i32 %2840, 0
  %2842 = load i64*, i64** %2809, align 8
  %2843 = load i64, i64* %2842, align 8
  %2844 = load i32, i32* %2812, align 4
  %2845 = add nsw i32 %2844, 1
  store i32 %2845, i32* %2812, align 4
  br i1 %2841, label %2846, label %2856

2846:                                             ; preds = %2839
  %2847 = sext i32 %2844 to i64
  %2848 = add i64 %2843, 11
  %2849 = add i64 %2848, %2847
  %2850 = inttoptr i64 %2849 to i8*
  store i8 32, i8* %2850, align 1
  %2851 = load i32, i32* %2812, align 4
  %2852 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2853 = load i32, i32* %2852, align 8
  %2854 = icmp eq i32 %2851, %2853
  br i1 %2854, label %2855, label %2867

2855:                                             ; preds = %2846
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2805) #7
  br label %2867

2856:                                             ; preds = %2839
  %2857 = shl nsw i32 %2844, 1
  %2858 = sext i32 %2857 to i64
  %2859 = add i64 %2843, 11
  %2860 = add i64 %2859, %2858
  %2861 = inttoptr i64 %2860 to i16*
  store i16 32, i16* %2861, align 2
  %2862 = load i32, i32* %2812, align 4
  %2863 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2864 = load i32, i32* %2863, align 8
  %2865 = icmp eq i32 %2862, %2864
  br i1 %2865, label %2866, label %2867

2866:                                             ; preds = %2856
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2805) #7
  br label %2867

2867:                                             ; preds = %2836, %2846, %2855, %2856, %2866
  %2868 = load i64, i64* %61, align 8
  %2869 = and i64 %2868, 1
  %2870 = icmp eq i64 %2869, 0
  br i1 %2870, label %2884, label %2871

2871:                                             ; preds = %2867
  %2872 = and i64 %2868, -4294967296
  %2873 = add i64 %2868, -1
  %2874 = inttoptr i64 %2873 to i32*
  %2875 = load atomic i32, i32* %2874 monotonic, align 4
  %2876 = zext i32 %2875 to i64
  %2877 = or i64 %2872, %2876
  %2878 = add i64 %2877, 7
  %2879 = inttoptr i64 %2878 to i16*
  %2880 = load atomic i16, i16* %2879 monotonic, align 2
  %2881 = icmp eq i16 %2880, 188
  br i1 %2881, label %2882, label %2884

2882:                                             ; preds = %2871
  %2883 = tail call i32 @_ZN2v88internal15JsonStringifier16SerializeJSProxyENS0_6HandleINS0_7JSProxyEEENS2_INS0_6ObjectEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %61, i64* %3)
  br label %3307

2884:                                             ; preds = %2867, %2871
  %2885 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %2886 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2885, i64 0, i32 31
  %2887 = bitcast %"struct.v8::internal::HandleScopeData"* %2886 to i64*
  %2888 = load i64, i64* %2887, align 8
  %2889 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2885, i64 0, i32 31, i32 1
  %2890 = load i64*, i64** %2889, align 8
  %2891 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2885, i64 0, i32 31, i32 2
  %2892 = load i32, i32* %2891, align 8
  %2893 = add nsw i32 %2892, 1
  store i32 %2893, i32* %2891, align 8
  %2894 = tail call i32 @_ZN2v88internal15JsonStringifier9StackPushENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::JsonStringifier"* %0, i64* %61, i64* %3) #7
  %2895 = icmp eq i32 %2894, 1
  br i1 %2895, label %2896, label %3291

2896:                                             ; preds = %2884
  %2897 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 3, i32 0, i32 0
  %2898 = load i64*, i64** %2897, align 8
  %2899 = icmp eq i64* %2898, null
  br i1 %2899, label %2900, label %3284

2900:                                             ; preds = %2896
  %2901 = load i64, i64* %61, align 8
  %2902 = and i64 %2901, -4294967296
  %2903 = add i64 %2901, -1
  %2904 = inttoptr i64 %2903 to i32*
  %2905 = load atomic i32, i32* %2904 monotonic, align 4
  %2906 = zext i32 %2905 to i64
  %2907 = or i64 %2902, %2906
  %2908 = add i64 %2907, 7
  %2909 = inttoptr i64 %2908 to i16*
  %2910 = load atomic i16, i16* %2909 monotonic, align 2
  %2911 = icmp ult i16 %2910, 1042
  br i1 %2911, label %3284, label %2912

2912:                                             ; preds = %2900
  %2913 = load atomic i32, i32* %2904 monotonic, align 4
  %2914 = zext i32 %2913 to i64
  %2915 = or i64 %2902, %2914
  %2916 = add i64 %2915, 11
  %2917 = inttoptr i64 %2916 to i32*
  %2918 = load atomic i32, i32* %2917 monotonic, align 4
  %2919 = and i32 %2918, 2097152
  %2920 = icmp eq i32 %2919, 0
  br i1 %2920, label %2921, label %3284

2921:                                             ; preds = %2912
  %2922 = add i64 %2901, 7
  %2923 = inttoptr i64 %2922 to i32*
  %2924 = load i32, i32* %2923, align 4
  %2925 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %2926 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2925, i64 0, i32 0, i32 7, i32 0, i64 29
  %2927 = load i64, i64* %2926, align 8
  %2928 = trunc i64 %2927 to i32
  %2929 = icmp eq i32 %2924, %2928
  br i1 %2929, label %2935, label %2930

2930:                                             ; preds = %2921
  %2931 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2925, i64 0, i32 0, i32 7, i32 0, i64 111
  %2932 = load i64, i64* %2931, align 8
  %2933 = trunc i64 %2932 to i32
  %2934 = icmp eq i32 %2924, %2933
  br i1 %2934, label %2935, label %3284

2935:                                             ; preds = %2921, %2930
  %2936 = load atomic i32, i32* %2904 monotonic, align 4
  %2937 = zext i32 %2936 to i64
  %2938 = or i64 %2902, %2937
  %2939 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2925, i64 0, i32 31, i32 4
  %2940 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %2939, align 8
  %2941 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2940, null
  br i1 %2941, label %2944, label %2942

2942:                                             ; preds = %2935
  %2943 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2940, i64 %2938) #7
  br label %2957

2944:                                             ; preds = %2935
  %2945 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2925, i64 0, i32 31, i32 0
  %2946 = load i64*, i64** %2945, align 8
  %2947 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2925, i64 0, i32 31, i32 1
  %2948 = load i64*, i64** %2947, align 8
  %2949 = icmp eq i64* %2946, %2948
  br i1 %2949, label %2950, label %2952

2950:                                             ; preds = %2944
  %2951 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2925) #7
  br label %2952

2952:                                             ; preds = %2950, %2944
  %2953 = phi i64* [ %2951, %2950 ], [ %2946, %2944 ]
  %2954 = ptrtoint i64* %2953 to i64
  %2955 = add i64 %2954, 8
  %2956 = inttoptr i64 %2955 to i64*
  store i64* %2956, i64** %2945, align 8
  store i64 %2938, i64* %2953, align 8
  br label %2957

2957:                                             ; preds = %2952, %2942
  %2958 = phi i64* [ %2943, %2942 ], [ %2953, %2952 ]
  %2959 = load i32, i32* %2806, align 8
  %2960 = icmp eq i32 %2959, 0
  %2961 = load i64*, i64** %2809, align 8
  %2962 = load i64, i64* %2961, align 8
  %2963 = load i32, i32* %2812, align 4
  %2964 = add nsw i32 %2963, 1
  store i32 %2964, i32* %2812, align 4
  br i1 %2960, label %2965, label %2975

2965:                                             ; preds = %2957
  %2966 = sext i32 %2963 to i64
  %2967 = add i64 %2962, 11
  %2968 = add i64 %2967, %2966
  %2969 = inttoptr i64 %2968 to i8*
  store i8 123, i8* %2969, align 1
  %2970 = load i32, i32* %2812, align 4
  %2971 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2972 = load i32, i32* %2971, align 8
  %2973 = icmp eq i32 %2970, %2972
  br i1 %2973, label %2974, label %2986

2974:                                             ; preds = %2965
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2805) #7
  br label %2986

2975:                                             ; preds = %2957
  %2976 = shl nsw i32 %2963, 1
  %2977 = sext i32 %2976 to i64
  %2978 = add i64 %2962, 11
  %2979 = add i64 %2978, %2977
  %2980 = inttoptr i64 %2979 to i16*
  store i16 123, i16* %2980, align 2
  %2981 = load i32, i32* %2812, align 4
  %2982 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %2983 = load i32, i32* %2982, align 8
  %2984 = icmp eq i32 %2981, %2983
  br i1 %2984, label %2985, label %2986

2985:                                             ; preds = %2975
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2805) #7
  br label %2986

2986:                                             ; preds = %2985, %2975, %2974, %2965
  %2987 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 6
  %2988 = load i32, i32* %2987, align 8
  %2989 = add nsw i32 %2988, 1
  store i32 %2989, i32* %2987, align 8
  %2990 = load i64, i64* %2958, align 8
  %2991 = add i64 %2990, 11
  %2992 = inttoptr i64 %2991 to i32*
  %2993 = load atomic i32, i32* %2992 acquire, align 4
  %2994 = lshr i32 %2993, 10
  %2995 = and i32 %2994, 1023
  %2996 = zext i32 %2995 to i64
  %2997 = icmp eq i32 %2995, 0
  br i1 %2997, label %2998, label %3001

2998:                                             ; preds = %2986
  %2999 = load i32, i32* %2987, align 8
  %3000 = add nsw i32 %2999, -1
  store i32 %3000, i32* %2987, align 8
  br label %3256

3001:                                             ; preds = %2986
  %3002 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %5, i64 0, i32 0
  br label %3003

3003:                                             ; preds = %3001, %3158
  %3004 = phi i8 [ 0, %3001 ], [ %3159, %3158 ]
  %3005 = phi i64 [ 0, %3001 ], [ %3160, %3158 ]
  %3006 = load i64, i64* %2958, align 8
  %3007 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %3008 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3007, i64 0, i32 0, i32 4
  %3009 = load i64, i64* %3008, align 8
  %3010 = add i64 %3006, 23
  %3011 = inttoptr i64 %3010 to i32*
  %3012 = load i32, i32* %3011, align 4
  %3013 = and i64 %3009, 4294967295
  %3014 = icmp eq i64 %3013, 0
  tail call void @llvm.assume(i1 %3014) #7
  %3015 = zext i32 %3012 to i64
  %3016 = or i64 %3009, %3015
  %3017 = mul nuw nsw i64 %3005, 51539607552
  %3018 = add nuw nsw i64 %3017, 68719476736
  %3019 = lshr exact i64 %3018, 32
  %3020 = add nsw i64 %3019, -1
  %3021 = add i64 %3020, %3016
  %3022 = inttoptr i64 %3021 to i32*
  %3023 = load atomic i32, i32* %3022 monotonic, align 4
  %3024 = zext i32 %3023 to i64
  %3025 = or i64 %3009, %3024
  %3026 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3007, i64 0, i32 31, i32 4
  %3027 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %3026, align 8
  %3028 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %3027, null
  br i1 %3028, label %3032, label %3029

3029:                                             ; preds = %3003
  %3030 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %3027, i64 %3025) #7
  %3031 = load i64, i64* %3030, align 8
  br label %3045

3032:                                             ; preds = %3003
  %3033 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3007, i64 0, i32 31, i32 0
  %3034 = load i64*, i64** %3033, align 8
  %3035 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3007, i64 0, i32 31, i32 1
  %3036 = load i64*, i64** %3035, align 8
  %3037 = icmp eq i64* %3034, %3036
  br i1 %3037, label %3038, label %3040

3038:                                             ; preds = %3032
  %3039 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %3007) #7
  br label %3040

3040:                                             ; preds = %3038, %3032
  %3041 = phi i64* [ %3039, %3038 ], [ %3034, %3032 ]
  %3042 = ptrtoint i64* %3041 to i64
  %3043 = add i64 %3042, 8
  %3044 = inttoptr i64 %3043 to i64*
  store i64* %3044, i64** %3033, align 8
  store i64 %3025, i64* %3041, align 8
  br label %3045

3045:                                             ; preds = %3040, %3029
  %3046 = phi i64 [ %3031, %3029 ], [ %3025, %3040 ]
  %3047 = phi i64* [ %3030, %3029 ], [ %3041, %3040 ]
  %3048 = and i64 %3046, -4294967296
  %3049 = add i64 %3046, -1
  %3050 = inttoptr i64 %3049 to i32*
  %3051 = load atomic i32, i32* %3050 monotonic, align 4
  %3052 = zext i32 %3051 to i64
  %3053 = or i64 %3048, %3052
  %3054 = add i64 %3053, 7
  %3055 = inttoptr i64 %3054 to i16*
  %3056 = load atomic i16, i16* %3055 monotonic, align 2
  %3057 = icmp ult i16 %3056, 64
  br i1 %3057, label %3058, label %3158

3058:                                             ; preds = %3045
  %3059 = load i64, i64* %2958, align 8
  %3060 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %3061 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3060, i64 0, i32 0, i32 4
  %3062 = load i64, i64* %3061, align 8
  %3063 = add i64 %3059, 23
  %3064 = inttoptr i64 %3063 to i32*
  %3065 = load i32, i32* %3064, align 4
  %3066 = and i64 %3062, 4294967295
  %3067 = icmp eq i64 %3066, 0
  tail call void @llvm.assume(i1 %3067) #7
  %3068 = zext i32 %3065 to i64
  %3069 = or i64 %3062, %3068
  %3070 = or i64 %3019, 3
  %3071 = add i64 %3069, %3070
  %3072 = inttoptr i64 %3071 to i32*
  %3073 = load atomic i32, i32* %3072 monotonic, align 4
  %3074 = lshr i32 %3073, 7
  %3075 = and i32 %3073, 32
  %3076 = icmp eq i32 %3075, 0
  br i1 %3076, label %3077, label %3158

3077:                                             ; preds = %3058
  %3078 = and i32 %3073, 4
  %3079 = icmp eq i32 %3078, 0
  br i1 %3079, label %3080, label %3145

3080:                                             ; preds = %3077
  %3081 = load i64, i64* %61, align 8
  %3082 = add i64 %3081, -1
  %3083 = inttoptr i64 %3082 to i32*
  %3084 = load atomic i32, i32* %3083 monotonic, align 4
  %3085 = trunc i64 %3059 to i32
  %3086 = icmp eq i32 %3084, %3085
  br i1 %3086, label %3087, label %3145

3087:                                             ; preds = %3080
  %3088 = and i64 %3059, -4294967296
  %3089 = load atomic i32, i32* %3064 monotonic, align 4
  %3090 = zext i32 %3089 to i64
  %3091 = or i64 %3088, %3090
  %3092 = add i64 %3091, %3070
  %3093 = inttoptr i64 %3092 to i32*
  %3094 = load atomic i32, i32* %3093 monotonic, align 4
  %3095 = ashr i32 %3094, 1
  %3096 = lshr i32 %3095, 19
  %3097 = and i32 %3096, 1023
  %3098 = lshr i32 %3095, 6
  %3099 = trunc i32 %3098 to i8
  %3100 = and i8 %3099, 7
  %3101 = add i64 %3059, 3
  %3102 = inttoptr i64 %3101 to i8*
  %3103 = load atomic i8, i8* %3102 monotonic, align 1
  %3104 = zext i8 %3103 to i32
  %3105 = add i64 %3059, 4
  %3106 = inttoptr i64 %3105 to i8*
  %3107 = load atomic i8, i8* %3106 monotonic, align 1
  %3108 = zext i8 %3107 to i32
  %3109 = sub nsw i32 %3104, %3108
  %3110 = icmp slt i32 %3097, %3109
  br i1 %3110, label %3111, label %3119

3111:                                             ; preds = %3087
  %3112 = load atomic i8, i8* %3106 monotonic, align 1
  %3113 = zext i8 %3112 to i64
  %3114 = shl nuw nsw i64 %3113, 28
  %3115 = load atomic i8, i8* %3106 monotonic, align 1
  %3116 = zext i8 %3115 to i32
  %3117 = add nuw nsw i32 %3097, %3116
  %3118 = shl nuw nsw i32 %3117, 2
  br label %3123

3119:                                             ; preds = %3087
  %3120 = sub nsw i32 %3097, %3109
  %3121 = shl nsw i32 %3120, 2
  %3122 = add nsw i32 %3121, 8
  br label %3123

3123:                                             ; preds = %3119, %3111
  %3124 = phi i32 [ %3118, %3111 ], [ %3122, %3119 ]
  %3125 = phi i64 [ %3114, %3111 ], [ 536870912, %3119 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3002) #7
  store i8 %3100, i8* %3002, align 1
  %3126 = icmp ult i8 %3100, 5
  br i1 %3126, label %3129, label %3127

3127:                                             ; preds = %3123
  %3128 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %5) #7
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i8* %3128) #7
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #14
  unreachable

3129:                                             ; preds = %3123
  %3130 = zext i8 %3100 to i64
  %3131 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZN2v88internal15JsonStringifier10Serialize_ILb1EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_, i64 0, i64 %3130
  %3132 = load i64, i64* %3131, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3002) #7
  %3133 = zext i1 %3110 to i64
  %3134 = shl nuw nsw i64 %3133, 13
  %3135 = sext i32 %3124 to i64
  %3136 = sext i32 %3109 to i64
  %3137 = shl nsw i64 %3136, 16
  %3138 = or i64 %3134, %3137
  %3139 = or i64 %3138, %3135
  %3140 = or i64 %3139, %3125
  %3141 = or i64 %3140, %3132
  %3142 = trunc i32 %3074 to i8
  %3143 = and i8 %3142, 7
  %3144 = tail call i64* @_ZN2v88internal8JSObject14FastPropertyAtENS0_6HandleIS1_EENS0_14RepresentationENS0_10FieldIndexE(i64* %61, i8 %3143, i64 %3141) #7
  br label %3148

3145:                                             ; preds = %3077, %3080
  %3146 = tail call i64* @_ZN2v88internal6Object20GetPropertyOrElementEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %3060, i64* %61, i64* %3047) #7
  %3147 = icmp eq i64* %3146, null
  br i1 %3147, label %3291, label %3148

3148:                                             ; preds = %3145, %3129
  %3149 = phi i64* [ %3144, %3129 ], [ %3146, %3145 ]
  %3150 = and i8 %3004, 1
  %3151 = icmp ne i8 %3150, 0
  %3152 = tail call i32 @_ZN2v88internal15JsonStringifier10Serialize_ILb1EEENS1_6ResultENS0_6HandleINS0_6ObjectEEEbS6_(%"class.v8::internal::JsonStringifier"* %0, i64* %3149, i1 zeroext %3151, i64* %3047) #7
  %3153 = xor i1 %3151, true
  %3154 = icmp eq i32 %3152, 1
  %3155 = and i1 %3154, %3153
  %3156 = select i1 %3155, i8 1, i8 %3004
  %3157 = icmp eq i32 %3152, 2
  br i1 %3157, label %3291, label %3158

3158:                                             ; preds = %3058, %3045, %3148
  %3159 = phi i8 [ %3156, %3148 ], [ %3004, %3058 ], [ %3004, %3045 ]
  %3160 = add nuw nsw i64 %3005, 1
  %3161 = icmp eq i64 %3160, %2996
  br i1 %3161, label %3162, label %3003

3162:                                             ; preds = %3158
  %3163 = load i32, i32* %2987, align 8
  %3164 = add nsw i32 %3163, -1
  store i32 %3164, i32* %2987, align 8
  %3165 = and i8 %3159, 1
  %3166 = icmp eq i8 %3165, 0
  br i1 %3166, label %3256, label %3167

3167:                                             ; preds = %3162
  %3168 = load i16*, i16** %2710, align 8
  %3169 = icmp eq i16* %3168, null
  br i1 %3169, label %3256, label %3170

3170:                                             ; preds = %3167
  %3171 = load i32, i32* %2806, align 8
  %3172 = icmp eq i32 %3171, 0
  %3173 = load i64*, i64** %2809, align 8
  %3174 = load i64, i64* %3173, align 8
  %3175 = load i32, i32* %2812, align 4
  %3176 = add nsw i32 %3175, 1
  store i32 %3176, i32* %2812, align 4
  br i1 %3172, label %3177, label %3187

3177:                                             ; preds = %3170
  %3178 = sext i32 %3175 to i64
  %3179 = add i64 %3174, 11
  %3180 = add i64 %3179, %3178
  %3181 = inttoptr i64 %3180 to i8*
  store i8 10, i8* %3181, align 1
  %3182 = load i32, i32* %2812, align 4
  %3183 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %3184 = load i32, i32* %3183, align 8
  %3185 = icmp eq i32 %3182, %3184
  br i1 %3185, label %3186, label %3198

3186:                                             ; preds = %3177
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2805) #7
  br label %3198

3187:                                             ; preds = %3170
  %3188 = shl nsw i32 %3175, 1
  %3189 = sext i32 %3188 to i64
  %3190 = add i64 %3174, 11
  %3191 = add i64 %3190, %3189
  %3192 = inttoptr i64 %3191 to i16*
  store i16 10, i16* %3192, align 2
  %3193 = load i32, i32* %2812, align 4
  %3194 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %3195 = load i32, i32* %3194, align 8
  %3196 = icmp eq i32 %3193, %3195
  br i1 %3196, label %3197, label %3198

3197:                                             ; preds = %3187
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2805) #7
  br label %3198

3198:                                             ; preds = %3197, %3187, %3186, %3177
  %3199 = load i32, i32* %2987, align 8
  %3200 = icmp sgt i32 %3199, 0
  br i1 %3200, label %3201, label %3256

3201:                                             ; preds = %3198
  %3202 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  br label %3203

3203:                                             ; preds = %3252, %3201
  %3204 = phi i32 [ 0, %3201 ], [ %3253, %3252 ]
  %3205 = load i16*, i16** %2710, align 8
  %3206 = load i32, i32* %2806, align 8
  %3207 = icmp eq i32 %3206, 0
  %3208 = load i16, i16* %3205, align 2
  %3209 = icmp eq i16 %3208, 0
  br i1 %3207, label %3211, label %3210

3210:                                             ; preds = %3203
  br i1 %3209, label %3252, label %3232

3211:                                             ; preds = %3203
  br i1 %3209, label %3252, label %3212

3212:                                             ; preds = %3211, %3229
  %3213 = phi i16 [ %3230, %3229 ], [ %3208, %3211 ]
  %3214 = phi i16* [ %3215, %3229 ], [ %3205, %3211 ]
  %3215 = getelementptr inbounds i16, i16* %3214, i64 1
  %3216 = load i64*, i64** %2809, align 8
  %3217 = load i64, i64* %3216, align 8
  %3218 = load i32, i32* %2812, align 4
  %3219 = add nsw i32 %3218, 1
  store i32 %3219, i32* %2812, align 4
  %3220 = trunc i16 %3213 to i8
  %3221 = sext i32 %3218 to i64
  %3222 = add i64 %3217, 11
  %3223 = add i64 %3222, %3221
  %3224 = inttoptr i64 %3223 to i8*
  store i8 %3220, i8* %3224, align 1
  %3225 = load i32, i32* %2812, align 4
  %3226 = load i32, i32* %3202, align 8
  %3227 = icmp eq i32 %3225, %3226
  br i1 %3227, label %3228, label %3229

3228:                                             ; preds = %3212
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2805) #7
  br label %3229

3229:                                             ; preds = %3228, %3212
  %3230 = load i16, i16* %3215, align 2
  %3231 = icmp eq i16 %3230, 0
  br i1 %3231, label %3252, label %3212

3232:                                             ; preds = %3210, %3249
  %3233 = phi i16 [ %3250, %3249 ], [ %3208, %3210 ]
  %3234 = phi i16* [ %3235, %3249 ], [ %3205, %3210 ]
  %3235 = getelementptr inbounds i16, i16* %3234, i64 1
  %3236 = load i64*, i64** %2809, align 8
  %3237 = load i64, i64* %3236, align 8
  %3238 = load i32, i32* %2812, align 4
  %3239 = add nsw i32 %3238, 1
  store i32 %3239, i32* %2812, align 4
  %3240 = shl nsw i32 %3238, 1
  %3241 = sext i32 %3240 to i64
  %3242 = add i64 %3237, 11
  %3243 = add i64 %3242, %3241
  %3244 = inttoptr i64 %3243 to i16*
  store i16 %3233, i16* %3244, align 2
  %3245 = load i32, i32* %2812, align 4
  %3246 = load i32, i32* %3202, align 8
  %3247 = icmp eq i32 %3245, %3246
  br i1 %3247, label %3248, label %3249

3248:                                             ; preds = %3232
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2805) #7
  br label %3249

3249:                                             ; preds = %3248, %3232
  %3250 = load i16, i16* %3235, align 2
  %3251 = icmp eq i16 %3250, 0
  br i1 %3251, label %3252, label %3232

3252:                                             ; preds = %3249, %3229, %3211, %3210
  %3253 = add nuw nsw i32 %3204, 1
  %3254 = load i32, i32* %2987, align 8
  %3255 = icmp slt i32 %3253, %3254
  br i1 %3255, label %3203, label %3256

3256:                                             ; preds = %3252, %2998, %3167, %3198, %3162
  %3257 = load i32, i32* %2806, align 8
  %3258 = icmp eq i32 %3257, 0
  %3259 = load i64*, i64** %2809, align 8
  %3260 = load i64, i64* %3259, align 8
  %3261 = load i32, i32* %2812, align 4
  %3262 = add nsw i32 %3261, 1
  store i32 %3262, i32* %2812, align 4
  br i1 %3258, label %3263, label %3273

3263:                                             ; preds = %3256
  %3264 = sext i32 %3261 to i64
  %3265 = add i64 %3260, 11
  %3266 = add i64 %3265, %3264
  %3267 = inttoptr i64 %3266 to i8*
  store i8 125, i8* %3267, align 1
  %3268 = load i32, i32* %2812, align 4
  %3269 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %3270 = load i32, i32* %3269, align 8
  %3271 = icmp eq i32 %3268, %3270
  br i1 %3271, label %3272, label %3287

3272:                                             ; preds = %3263
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2805) #7
  br label %3287

3273:                                             ; preds = %3256
  %3274 = shl nsw i32 %3261, 1
  %3275 = sext i32 %3274 to i64
  %3276 = add i64 %3260, 11
  %3277 = add i64 %3276, %3275
  %3278 = inttoptr i64 %3277 to i16*
  store i16 125, i16* %3278, align 2
  %3279 = load i32, i32* %2812, align 4
  %3280 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 1, i32 3
  %3281 = load i32, i32* %3280, align 8
  %3282 = icmp eq i32 %3279, %3281
  br i1 %3282, label %3283, label %3287

3283:                                             ; preds = %3273
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %2805) #7
  br label %3287

3284:                                             ; preds = %2896, %2900, %2912, %2930
  %3285 = tail call i32 @_ZN2v88internal15JsonStringifier23SerializeJSReceiverSlowENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::JsonStringifier"* %0, i64* %61) #7
  %3286 = icmp eq i32 %3285, 1
  br i1 %3286, label %3287, label %3291

3287:                                             ; preds = %3263, %3272, %3273, %3283, %3284
  %3288 = getelementptr inbounds %"class.v8::internal::JsonStringifier", %"class.v8::internal::JsonStringifier"* %0, i64 0, i32 7, i32 0, i32 1
  %3289 = load %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"** %3288, align 8
  %3290 = getelementptr inbounds %"struct.std::__1::pair.1134", %"struct.std::__1::pair.1134"* %3289, i64 -1
  store %"struct.std::__1::pair.1134"* %3290, %"struct.std::__1::pair.1134"** %3288, align 8
  br label %3291

3291:                                             ; preds = %3148, %3145, %3287, %3284, %2884
  %3292 = phi i32 [ 1, %3287 ], [ %3285, %3284 ], [ %2894, %2884 ], [ 2, %3145 ], [ 2, %3148 ]
  %3293 = icmp eq %"class.v8::internal::Isolate"* %2885, null
  br i1 %3293, label %3307, label %3294

3294:                                             ; preds = %3291
  %3295 = inttoptr i64 %2888 to i64*
  %3296 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %2886, i64 0, i32 0
  %3297 = load i64*, i64** %3296, align 8
  store i64 %2888, i64* %2887, align 8
  %3298 = load i32, i32* %2891, align 8
  %3299 = add nsw i32 %3298, -1
  store i32 %3299, i32* %2891, align 8
  %3300 = load i64*, i64** %2889, align 8
  %3301 = icmp eq i64* %3300, %2890
  br i1 %3301, label %3304, label %3302

3302:                                             ; preds = %3294
  store i64* %2890, i64** %2889, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2885) #7
  %3303 = load i64*, i64** %3296, align 8
  br label %3304

3304:                                             ; preds = %3302, %3294
  %3305 = phi i64* [ %3303, %3302 ], [ %3295, %3294 ]
  %3306 = phi i64* [ %2890, %3302 ], [ %3297, %3294 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %3305, i64* %3306) #7
  br label %3307

3307:                                             ; preds = %3504, %3517, %3474, %3486, %3444, %3457, %3414, %3426, %3384, %3397, %3339, %3351, %2667, %3304, %3291, %2271, %2258, %57, %46, %259, %472, %13, %2882, %2666, %2465, %466, %460, %256
  %3308 = phi i32 [ 1, %256 ], [ 1, %2666 ], [ %2883, %2882 ], [ %2466, %2465 ], [ 2, %466 ], [ 1, %460 ], [ 2, %13 ], [ 0, %472 ], [ 0, %259 ], [ 0, %2667 ], [ 2, %46 ], [ 2, %57 ], [ %2259, %2258 ], [ %2259, %2271 ], [ %3292, %3291 ], [ %3292, %3304 ], [ 1, %3351 ], [ 1, %3339 ], [ 1, %3397 ], [ 1, %3384 ], [ 1, %3426 ], [ 1, %3414 ], [ 1, %3457 ], [ 1, %3444 ], [ 1, %3486 ], [ 1, %3474 ], [ 1, %3517 ], [ 1, %3504 ]
  ret i32 %3308

3309:                                             ; preds = %696
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %607) #7
  %3310 = load i32, i32* %614, align 4
  br label %3311

3311:                                             ; preds = %3309, %696
  %3312 = phi i32 [ %3310, %3309 ], [ %705, %696 ]
  %3313 = load i64*, i64** %611, align 8
  %3314 = load i64, i64* %3313, align 8
  %3315 = add nsw i32 %3312, 1
  store i32 %3315, i32* %614, align 4
  %3316 = sext i32 %3312 to i64
  %3317 = add i64 %3314, 11
  %3318 = add i64 %3317, %3316
  %3319 = inttoptr i64 %3318 to i8*
  store i8 108, i8* %3319, align 1
  %3320 = load i32, i32* %614, align 4
  %3321 = load i32, i32* %672, align 8
  %3322 = icmp eq i32 %3320, %3321
  br i1 %3322, label %3323, label %3325

3323:                                             ; preds = %3311
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %607) #7
  %3324 = load i32, i32* %614, align 4
  br label %3325

3325:                                             ; preds = %3323, %3311
  %3326 = phi i32 [ %3324, %3323 ], [ %3320, %3311 ]
  %3327 = load i64*, i64** %611, align 8
  %3328 = load i64, i64* %3327, align 8
  %3329 = add nsw i32 %3326, 1
  store i32 %3329, i32* %614, align 4
  %3330 = sext i32 %3326 to i64
  %3331 = add i64 %3328, 11
  %3332 = add i64 %3331, %3330
  %3333 = inttoptr i64 %3332 to i8*
  store i8 115, i8* %3333, align 1
  %3334 = load i32, i32* %614, align 4
  %3335 = load i32, i32* %672, align 8
  %3336 = icmp eq i32 %3334, %3335
  br i1 %3336, label %3337, label %3339

3337:                                             ; preds = %3325
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %607) #7
  %3338 = load i32, i32* %614, align 4
  br label %3339

3339:                                             ; preds = %3337, %3325
  %3340 = phi i32 [ %3338, %3337 ], [ %3334, %3325 ]
  %3341 = load i64*, i64** %611, align 8
  %3342 = load i64, i64* %3341, align 8
  %3343 = add nsw i32 %3340, 1
  store i32 %3343, i32* %614, align 4
  %3344 = sext i32 %3340 to i64
  %3345 = add i64 %3342, 11
  %3346 = add i64 %3345, %3344
  %3347 = inttoptr i64 %3346 to i8*
  store i8 101, i8* %3347, align 1
  %3348 = load i32, i32* %614, align 4
  %3349 = load i32, i32* %672, align 8
  %3350 = icmp eq i32 %3348, %3349
  br i1 %3350, label %3351, label %3307

3351:                                             ; preds = %3339
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %607) #7
  br label %3307

3352:                                             ; preds = %710
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %607) #7
  %3353 = load i32, i32* %614, align 4
  br label %3354

3354:                                             ; preds = %3352, %710
  %3355 = phi i32 [ %3353, %3352 ], [ %720, %710 ]
  %3356 = load i64*, i64** %611, align 8
  %3357 = load i64, i64* %3356, align 8
  %3358 = add nsw i32 %3355, 1
  store i32 %3358, i32* %614, align 4
  %3359 = shl nsw i32 %3355, 1
  %3360 = sext i32 %3359 to i64
  %3361 = add i64 %3357, 11
  %3362 = add i64 %3361, %3360
  %3363 = inttoptr i64 %3362 to i16*
  store i16 108, i16* %3363, align 2
  %3364 = load i32, i32* %614, align 4
  %3365 = load i32, i32* %672, align 8
  %3366 = icmp eq i32 %3364, %3365
  br i1 %3366, label %3367, label %3369

3367:                                             ; preds = %3354
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %607) #7
  %3368 = load i32, i32* %614, align 4
  br label %3369

3369:                                             ; preds = %3367, %3354
  %3370 = phi i32 [ %3368, %3367 ], [ %3364, %3354 ]
  %3371 = load i64*, i64** %611, align 8
  %3372 = load i64, i64* %3371, align 8
  %3373 = add nsw i32 %3370, 1
  store i32 %3373, i32* %614, align 4
  %3374 = shl nsw i32 %3370, 1
  %3375 = sext i32 %3374 to i64
  %3376 = add i64 %3372, 11
  %3377 = add i64 %3376, %3375
  %3378 = inttoptr i64 %3377 to i16*
  store i16 115, i16* %3378, align 2
  %3379 = load i32, i32* %614, align 4
  %3380 = load i32, i32* %672, align 8
  %3381 = icmp eq i32 %3379, %3380
  br i1 %3381, label %3382, label %3384

3382:                                             ; preds = %3369
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %607) #7
  %3383 = load i32, i32* %614, align 4
  br label %3384

3384:                                             ; preds = %3382, %3369
  %3385 = phi i32 [ %3383, %3382 ], [ %3379, %3369 ]
  %3386 = load i64*, i64** %611, align 8
  %3387 = load i64, i64* %3386, align 8
  %3388 = add nsw i32 %3385, 1
  store i32 %3388, i32* %614, align 4
  %3389 = shl nsw i32 %3385, 1
  %3390 = sext i32 %3389 to i64
  %3391 = add i64 %3387, 11
  %3392 = add i64 %3391, %3390
  %3393 = inttoptr i64 %3392 to i16*
  store i16 101, i16* %3393, align 2
  %3394 = load i32, i32* %614, align 4
  %3395 = load i32, i32* %672, align 8
  %3396 = icmp eq i32 %3394, %3395
  br i1 %3396, label %3397, label %3307

3397:                                             ; preds = %3384
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %607) #7
  br label %3307

3398:                                             ; preds = %941
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %852) #7
  %3399 = load i32, i32* %859, align 4
  br label %3400

3400:                                             ; preds = %3398, %941
  %3401 = phi i32 [ %3399, %3398 ], [ %950, %941 ]
  %3402 = load i64*, i64** %856, align 8
  %3403 = load i64, i64* %3402, align 8
  %3404 = add nsw i32 %3401, 1
  store i32 %3404, i32* %859, align 4
  %3405 = sext i32 %3401 to i64
  %3406 = add i64 %3403, 11
  %3407 = add i64 %3406, %3405
  %3408 = inttoptr i64 %3407 to i8*
  store i8 117, i8* %3408, align 1
  %3409 = load i32, i32* %859, align 4
  %3410 = load i32, i32* %917, align 8
  %3411 = icmp eq i32 %3409, %3410
  br i1 %3411, label %3412, label %3414

3412:                                             ; preds = %3400
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %852) #7
  %3413 = load i32, i32* %859, align 4
  br label %3414

3414:                                             ; preds = %3412, %3400
  %3415 = phi i32 [ %3413, %3412 ], [ %3409, %3400 ]
  %3416 = load i64*, i64** %856, align 8
  %3417 = load i64, i64* %3416, align 8
  %3418 = add nsw i32 %3415, 1
  store i32 %3418, i32* %859, align 4
  %3419 = sext i32 %3415 to i64
  %3420 = add i64 %3417, 11
  %3421 = add i64 %3420, %3419
  %3422 = inttoptr i64 %3421 to i8*
  store i8 101, i8* %3422, align 1
  %3423 = load i32, i32* %859, align 4
  %3424 = load i32, i32* %917, align 8
  %3425 = icmp eq i32 %3423, %3424
  br i1 %3425, label %3426, label %3307

3426:                                             ; preds = %3414
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %852) #7
  br label %3307

3427:                                             ; preds = %955
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %852) #7
  %3428 = load i32, i32* %859, align 4
  br label %3429

3429:                                             ; preds = %3427, %955
  %3430 = phi i32 [ %3428, %3427 ], [ %965, %955 ]
  %3431 = load i64*, i64** %856, align 8
  %3432 = load i64, i64* %3431, align 8
  %3433 = add nsw i32 %3430, 1
  store i32 %3433, i32* %859, align 4
  %3434 = shl nsw i32 %3430, 1
  %3435 = sext i32 %3434 to i64
  %3436 = add i64 %3432, 11
  %3437 = add i64 %3436, %3435
  %3438 = inttoptr i64 %3437 to i16*
  store i16 117, i16* %3438, align 2
  %3439 = load i32, i32* %859, align 4
  %3440 = load i32, i32* %917, align 8
  %3441 = icmp eq i32 %3439, %3440
  br i1 %3441, label %3442, label %3444

3442:                                             ; preds = %3429
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %852) #7
  %3443 = load i32, i32* %859, align 4
  br label %3444

3444:                                             ; preds = %3442, %3429
  %3445 = phi i32 [ %3443, %3442 ], [ %3439, %3429 ]
  %3446 = load i64*, i64** %856, align 8
  %3447 = load i64, i64* %3446, align 8
  %3448 = add nsw i32 %3445, 1
  store i32 %3448, i32* %859, align 4
  %3449 = shl nsw i32 %3445, 1
  %3450 = sext i32 %3449 to i64
  %3451 = add i64 %3447, 11
  %3452 = add i64 %3451, %3450
  %3453 = inttoptr i64 %3452 to i16*
  store i16 101, i16* %3453, align 2
  %3454 = load i32, i32* %859, align 4
  %3455 = load i32, i32* %917, align 8
  %3456 = icmp eq i32 %3454, %3455
  br i1 %3456, label %3457, label %3307

3457:                                             ; preds = %3444
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %852) #7
  br label %3307

3458:                                             ; preds = %1186
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1097) #7
  %3459 = load i32, i32* %1104, align 4
  br label %3460

3460:                                             ; preds = %3458, %1186
  %3461 = phi i32 [ %3459, %3458 ], [ %1195, %1186 ]
  %3462 = load i64*, i64** %1101, align 8
  %3463 = load i64, i64* %3462, align 8
  %3464 = add nsw i32 %3461, 1
  store i32 %3464, i32* %1104, align 4
  %3465 = sext i32 %3461 to i64
  %3466 = add i64 %3463, 11
  %3467 = add i64 %3466, %3465
  %3468 = inttoptr i64 %3467 to i8*
  store i8 108, i8* %3468, align 1
  %3469 = load i32, i32* %1104, align 4
  %3470 = load i32, i32* %1162, align 8
  %3471 = icmp eq i32 %3469, %3470
  br i1 %3471, label %3472, label %3474

3472:                                             ; preds = %3460
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1097) #7
  %3473 = load i32, i32* %1104, align 4
  br label %3474

3474:                                             ; preds = %3472, %3460
  %3475 = phi i32 [ %3473, %3472 ], [ %3469, %3460 ]
  %3476 = load i64*, i64** %1101, align 8
  %3477 = load i64, i64* %3476, align 8
  %3478 = add nsw i32 %3475, 1
  store i32 %3478, i32* %1104, align 4
  %3479 = sext i32 %3475 to i64
  %3480 = add i64 %3477, 11
  %3481 = add i64 %3480, %3479
  %3482 = inttoptr i64 %3481 to i8*
  store i8 108, i8* %3482, align 1
  %3483 = load i32, i32* %1104, align 4
  %3484 = load i32, i32* %1162, align 8
  %3485 = icmp eq i32 %3483, %3484
  br i1 %3485, label %3486, label %3307

3486:                                             ; preds = %3474
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1097) #7
  br label %3307

3487:                                             ; preds = %1200
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1097) #7
  %3488 = load i32, i32* %1104, align 4
  br label %3489

3489:                                             ; preds = %3487, %1200
  %3490 = phi i32 [ %3488, %3487 ], [ %1210, %1200 ]
  %3491 = load i64*, i64** %1101, align 8
  %3492 = load i64, i64* %3491, align 8
  %3493 = add nsw i32 %3490, 1
  store i32 %3493, i32* %1104, align 4
  %3494 = shl nsw i32 %3490, 1
  %3495 = sext i32 %3494 to i64
  %3496 = add i64 %3492, 11
  %3497 = add i64 %3496, %3495
  %3498 = inttoptr i64 %3497 to i16*
  store i16 108, i16* %3498, align 2
  %3499 = load i32, i32* %1104, align 4
  %3500 = load i32, i32* %1162, align 8
  %3501 = icmp eq i32 %3499, %3500
  br i1 %3501, label %3502, label %3504

3502:                                             ; preds = %3489
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1097) #7
  %3503 = load i32, i32* %1104, align 4
  br label %3504

3504:                                             ; preds = %3502, %3489
  %3505 = phi i32 [ %3503, %3502 ], [ %3499, %3489 ]
  %3506 = load i64*, i64** %1101, align 8
  %3507 = load i64, i64* %3506, align 8
  %3508 = add nsw i32 %3505, 1
  store i32 %3508, i32* %1104, align 4
  %3509 = shl nsw i32 %3505, 1
  %3510 = sext i32 %3509 to i64
  %3511 = add i64 %3507, 11
  %3512 = add i64 %3511, %3510
  %3513 = inttoptr i64 %3512 to i16*
  store i16 108, i16* %3513, align 2
  %3514 = load i32, i32* %1104, align 4
  %3515 = load i32, i32* %1162, align 8
  %3516 = icmp eq i32 %3514, %3515
  br i1 %3516, label %3517, label %3307

3517:                                             ; preds = %3504
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1097) #7
  br label %3307

3518:                                             ; preds = %2108
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  %3519 = load i32, i32* %1349, align 4
  br label %3520

3520:                                             ; preds = %3518, %2108
  %3521 = phi i32 [ %3519, %3518 ], [ %2118, %2108 ]
  %3522 = load i64*, i64** %1346, align 8
  %3523 = load i64, i64* %3522, align 8
  %3524 = add nsw i32 %3521, 1
  store i32 %3524, i32* %1349, align 4
  %3525 = shl nsw i32 %3521, 1
  %3526 = sext i32 %3525 to i64
  %3527 = add i64 %3523, 11
  %3528 = add i64 %3527, %3526
  %3529 = inttoptr i64 %3528 to i16*
  store i16 108, i16* %3529, align 2
  %3530 = load i32, i32* %1349, align 4
  %3531 = load i32, i32* %1874, align 8
  %3532 = icmp eq i32 %3530, %3531
  br i1 %3532, label %3533, label %3535

3533:                                             ; preds = %3520
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  %3534 = load i32, i32* %1349, align 4
  br label %3535

3535:                                             ; preds = %3533, %3520
  %3536 = phi i32 [ %3534, %3533 ], [ %3530, %3520 ]
  %3537 = load i64*, i64** %1346, align 8
  %3538 = load i64, i64* %3537, align 8
  %3539 = add nsw i32 %3536, 1
  store i32 %3539, i32* %1349, align 4
  %3540 = shl nsw i32 %3536, 1
  %3541 = sext i32 %3540 to i64
  %3542 = add i64 %3538, 11
  %3543 = add i64 %3542, %3541
  %3544 = inttoptr i64 %3543 to i16*
  store i16 108, i16* %3544, align 2
  %3545 = load i32, i32* %1349, align 4
  %3546 = load i32, i32* %1874, align 8
  %3547 = icmp eq i32 %3545, %3546
  br i1 %3547, label %3548, label %2121

3548:                                             ; preds = %3535
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %2121

3549:                                             ; preds = %2094
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  %3550 = load i32, i32* %1349, align 4
  br label %3551

3551:                                             ; preds = %3549, %2094
  %3552 = phi i32 [ %3550, %3549 ], [ %2103, %2094 ]
  %3553 = load i64*, i64** %1346, align 8
  %3554 = load i64, i64* %3553, align 8
  %3555 = add nsw i32 %3552, 1
  store i32 %3555, i32* %1349, align 4
  %3556 = sext i32 %3552 to i64
  %3557 = add i64 %3554, 11
  %3558 = add i64 %3557, %3556
  %3559 = inttoptr i64 %3558 to i8*
  store i8 108, i8* %3559, align 1
  %3560 = load i32, i32* %1349, align 4
  %3561 = load i32, i32* %1874, align 8
  %3562 = icmp eq i32 %3560, %3561
  br i1 %3562, label %3563, label %3565

3563:                                             ; preds = %3551
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  %3564 = load i32, i32* %1349, align 4
  br label %3565

3565:                                             ; preds = %3563, %3551
  %3566 = phi i32 [ %3564, %3563 ], [ %3560, %3551 ]
  %3567 = load i64*, i64** %1346, align 8
  %3568 = load i64, i64* %3567, align 8
  %3569 = add nsw i32 %3566, 1
  store i32 %3569, i32* %1349, align 4
  %3570 = sext i32 %3566 to i64
  %3571 = add i64 %3568, 11
  %3572 = add i64 %3571, %3570
  %3573 = inttoptr i64 %3572 to i8*
  store i8 108, i8* %3573, align 1
  %3574 = load i32, i32* %1349, align 4
  %3575 = load i32, i32* %1874, align 8
  %3576 = icmp eq i32 %3574, %3575
  br i1 %3576, label %3577, label %2121

3577:                                             ; preds = %3565
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %1342) #7
  br label %2121
}

declare i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #10

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN2v88internal16FlatStringReaderC1EPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::FlatStringReader"*, %"class.v8::internal::Isolate"*, i64*) unnamed_addr #2

declare i8* @_ZN2v88internal20DoubleToRadixCStringEdi(double, i32) local_unnamed_addr #2

declare void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* sret, %"class.v8::internal::String"*, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RelocatableD2Ev(%"class.v8::internal::Relocatable"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::Relocatable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 91
  %9 = bitcast %"class.v8::internal::Relocatable"** %8 to i64*
  store i64 %7, i64* %9, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RelocatableD0Ev(%"class.v8::internal::Relocatable"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::Relocatable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 91
  %9 = bitcast %"class.v8::internal::Relocatable"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Relocatable"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE(%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11Relocatable21PostGarbageCollectionEv(%"class.v8::internal::Relocatable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { alwaysinline norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1073205, i32 2146410443}
!4 = !{!"branch_weights", i32 2146410443, i32 1073205}
!5 = !{!"branch_weights", i32 2000, i32 1}
