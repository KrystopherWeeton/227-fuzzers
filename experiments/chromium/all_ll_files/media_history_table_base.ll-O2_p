; ModuleID = '../../chrome/browser/media/history/media_history_table_base.cc'
source_filename = "../../chrome/browser/media/history/media_history_table_base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media_history::MediaHistoryTableBase" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.1", %"class.base::AtomicFlag", %class.scoped_refptr, %"class.sql::Database"* }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%class.scoped_refptr = type { %"class.base::UpdateableSequencedTaskRunner"* }
%"class.base::UpdateableSequencedTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::basic_string", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.17", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::HistogramBase" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.sql::Statement" = type <{ %class.scoped_refptr.26, i8, i8, [6 x i8] }>
%class.scoped_refptr.26 = type { %"class.sql::Database::StatementRef"* }
%"class.sql::Database::StatementRef" = type <{ %"class.base::RefCounted", [4 x i8], %"class.sql::Database"*, %struct.sqlite3_stmt*, i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.sqlite3_stmt = type opaque
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GURL = type opaque

@_ZTVN13media_history21MediaHistoryTableBaseE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.media_history::MediaHistoryTableBase"*, %class.GURL*)* @_ZN13media_history21MediaHistoryTableBase9DeleteURLERK4GURL to i8*), i8* bitcast (void (%"class.media_history::MediaHistoryTableBase"*)* @_ZN13media_history21MediaHistoryTableBaseD2Ev to i8*), i8* bitcast (void (%"class.media_history::MediaHistoryTableBase"*)* @_ZN13media_history21MediaHistoryTableBaseD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [63 x i8] c"../../chrome/browser/media/history/media_history_table_base.cc\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"protobuf.SerializeToString(&out)\00", align 1

@_ZN13media_history21MediaHistoryTableBaseD1Ev = hidden unnamed_addr alias void (%"class.media_history::MediaHistoryTableBase"*), void (%"class.media_history::MediaHistoryTableBase"*)* @_ZN13media_history21MediaHistoryTableBaseD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.base::UpdateableSequencedTaskRunner"* @_ZN13media_history21MediaHistoryTableBase13GetTaskRunnerEv(%"class.media_history::MediaHistoryTableBase"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.base::UpdateableSequencedTaskRunner"*, %"class.base::UpdateableSequencedTaskRunner"** %2, align 8
  ret %"class.base::UpdateableSequencedTaskRunner"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13media_history21MediaHistoryTableBaseC2E13scoped_refptrIN4base29UpdateableSequencedTaskRunnerEE(%"class.media_history::MediaHistoryTableBase"*, %"class.base::UpdateableSequencedTaskRunner"*) unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.base::UpdateableSequencedTaskRunner"* %1 to i64
  %4 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13media_history21MediaHistoryTableBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 2
  tail call void @_ZN4base10AtomicFlagC1Ev(%"class.base::AtomicFlag"* %6) #11
  %7 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 3
  %8 = bitcast %class.scoped_refptr* %7 to i64*
  store i64 %3, i64* %8, align 8
  %9 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 4
  store %"class.sql::Database"* null, %"class.sql::Database"** %9, align 8
  ret void
}

declare void @_ZN4base10AtomicFlagC1Ev(%"class.base::AtomicFlag"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13media_history21MediaHistoryTableBaseD2Ev(%"class.media_history::MediaHistoryTableBase"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13media_history21MediaHistoryTableBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.base::UpdateableSequencedTaskRunner"*, %"class.base::UpdateableSequencedTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::UpdateableSequencedTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::UpdateableSequencedTaskRunner", %"class.base::UpdateableSequencedTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #11
  br label %14

14:                                               ; preds = %1, %6, %11
  %15 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 2
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %15) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"*) unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN13media_history21MediaHistoryTableBaseD0Ev(%"class.media_history::MediaHistoryTableBase"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13media_history21MediaHistoryTableBase12SetCancelledEv(%"class.media_history::MediaHistoryTableBase"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 2
  tail call void @_ZN4base10AtomicFlag3SetEv(%"class.base::AtomicFlag"* %2) #11
  ret void
}

declare void @_ZN4base10AtomicFlag3SetEv(%"class.base::AtomicFlag"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13media_history21MediaHistoryTableBase10InitializeEPN3sql8DatabaseE(%"class.media_history::MediaHistoryTableBase"*, %"class.sql::Database"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 4
  store %"class.sql::Database"* %1, %"class.sql::Database"** %3, align 8
  %4 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i8, i8* %4 acquire, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = load %"class.sql::Database"*, %"class.sql::Database"** %3, align 8
  %9 = icmp eq %"class.sql::Database"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %7
  %11 = bitcast %"class.media_history::MediaHistoryTableBase"* %0 to i32 (%"class.media_history::MediaHistoryTableBase"*)***
  %12 = load i32 (%"class.media_history::MediaHistoryTableBase"*)**, i32 (%"class.media_history::MediaHistoryTableBase"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.media_history::MediaHistoryTableBase"*)*, i32 (%"class.media_history::MediaHistoryTableBase"*)** %12, i64 3
  %14 = load i32 (%"class.media_history::MediaHistoryTableBase"*)*, i32 (%"class.media_history::MediaHistoryTableBase"*)** %13, align 8
  %15 = tail call i32 %14(%"class.media_history::MediaHistoryTableBase"* %0) #11
  br label %16

16:                                               ; preds = %7, %2, %10
  %17 = phi i32 [ %15, %10 ], [ 1, %7 ], [ 1, %2 ]
  ret i32 %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN13media_history21MediaHistoryTableBase17CanAccessDatabaseEv(%"class.media_history::MediaHistoryTableBase"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 acquire, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 4
  %7 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  %8 = icmp ne %"class.sql::Database"* %7, null
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.sql::Database"* @_ZN13media_history21MediaHistoryTableBase2DBEv(%"class.media_history::MediaHistoryTableBase"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 4
  %3 = load %"class.sql::Database"*, %"class.sql::Database"** %2, align 8
  ret %"class.sql::Database"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13media_history21MediaHistoryTableBase7ResetDBEv(%"class.media_history::MediaHistoryTableBase"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.media_history::MediaHistoryTableBase", %"class.media_history::MediaHistoryTableBase"* %0, i64 0, i32 4
  store %"class.sql::Database"* null, %"class.sql::Database"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13media_history21MediaHistoryTableBase9BindProtoERN3sql9StatementEiRKN6google8protobuf11MessageLiteE(%"class.media_history::MediaHistoryTableBase"* nocapture readnone, %"class.sql::Statement"* dereferenceable(16), i32, %"class.google::protobuf::MessageLite"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #11
  %10 = call zeroext i1 @_ZNK6google8protobuf11MessageLite17SerializeToStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::MessageLite"* %3, %"class.std::__1::basic_string"* nonnull %5) #11
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #11
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br label %14

14:                                               ; preds = %4, %11
  %15 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = load i8*, i8** %8, align 8
  %20 = load i64, i64* %9, align 8
  %21 = zext i8 %17 to i64
  %22 = select i1 %18, i8* %19, i8* %7
  %23 = select i1 %18, i64 %20, i64 %21
  %24 = trunc i64 %23 to i32
  %25 = call zeroext i1 @_ZN3sql9Statement8BindBlobEiPKvi(%"class.sql::Statement"* %1, i32 %2, i8* %22, i32 %24) #11
  %26 = load i8, i8* %16, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %14
  %29 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %14, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

declare zeroext i1 @_ZNK6google8protobuf11MessageLite17SerializeToStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::MessageLite"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

declare zeroext i1 @_ZN3sql9Statement8BindBlobEiPKvi(%"class.sql::Statement"*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13media_history21MediaHistoryTableBase8GetProtoERN3sql9StatementEiRN6google8protobuf11MessageLiteE(%"class.media_history::MediaHistoryTableBase"* nocapture readnone, %"class.sql::Statement"* dereferenceable(16), i32, %"class.google::protobuf::MessageLite"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #11
  %7 = call zeroext i1 @_ZNK3sql9Statement18ColumnBlobAsStringEiPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* %1, i32 %2, %"class.std::__1::basic_string"* nonnull %5) #11
  %8 = call zeroext i1 @_ZN6google8protobuf11MessageLite15ParseFromStringERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::MessageLite"* %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #11
  %9 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %15) #13
  br label %16

16:                                               ; preds = %4, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret i1 %8
}

declare zeroext i1 @_ZNK3sql9Statement18ColumnBlobAsStringEiPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"*, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare zeroext i1 @_ZN6google8protobuf11MessageLite15ParseFromStringERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::MessageLite"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN13media_history21MediaHistoryTableBase9DeleteURLERK4GURL(%"class.media_history::MediaHistoryTableBase"* nocapture readnone, %class.GURL* nocapture readnone) unnamed_addr #9 align 2 {
  ret i1 false
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
