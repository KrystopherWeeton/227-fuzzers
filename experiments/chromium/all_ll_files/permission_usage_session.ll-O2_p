; ModuleID = '../../components/permissions/permission_usage_session.cc'
source_filename = "../../components/permissions/permission_usage_session.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.permissions::PermissionUsageSession" = type <{ %"class.url::Origin", i32, [4 x i8], %"class.base::Time", %"class.base::Time", i8, i8, i8, [5 x i8] }>
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11permissions22PermissionUsageSessioneqERKS0_(%"struct.permissions::PermissionUsageSession"*, %"struct.permissions::PermissionUsageSession"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 7
  %7 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 5
  %9 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 6
  %10 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 7
  %11 = tail call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %7) #3
  br i1 %11, label %12, label %42

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %13, align 4
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %18, label %42

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 3, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 3, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, %20
  br i1 %23, label %24, label %42

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 4, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 4, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, %26
  br i1 %29, label %30, label %42

30:                                               ; preds = %24
  %31 = load i8, i8* %4, align 1, !range !2
  %32 = load i8, i8* %8, align 1, !range !2
  %33 = icmp eq i8 %31, %32
  br i1 %33, label %34, label %42

34:                                               ; preds = %30
  %35 = load i8, i8* %5, align 1, !range !2
  %36 = load i8, i8* %9, align 1, !range !2
  %37 = icmp eq i8 %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = load i8, i8* %6, align 1, !range !2
  %40 = load i8, i8* %10, align 1, !range !2
  %41 = icmp eq i8 %39, %40
  br label %42

42:                                               ; preds = %2, %12, %18, %24, %30, %34, %38
  %43 = phi i1 [ false, %34 ], [ %41, %38 ], [ false, %30 ], [ false, %24 ], [ false, %18 ], [ false, %12 ], [ false, %2 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11permissions22PermissionUsageSessionneERKS0_(%"struct.permissions::PermissionUsageSession"*, %"struct.permissions::PermissionUsageSession"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 7
  %7 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 5
  %9 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 6
  %10 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 7
  %11 = tail call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %7) #3
  br i1 %11, label %12, label %42

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %13, align 4
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %18, label %42

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 3, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 3, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, %20
  br i1 %23, label %24, label %42

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %1, i64 0, i32 4, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 4, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, %26
  br i1 %29, label %30, label %42

30:                                               ; preds = %24
  %31 = load i8, i8* %4, align 1, !range !2
  %32 = load i8, i8* %8, align 1, !range !2
  %33 = icmp eq i8 %31, %32
  br i1 %33, label %34, label %42

34:                                               ; preds = %30
  %35 = load i8, i8* %5, align 1, !range !2
  %36 = load i8, i8* %9, align 1, !range !2
  %37 = icmp eq i8 %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = load i8, i8* %6, align 1, !range !2
  %40 = load i8, i8* %10, align 1, !range !2
  %41 = icmp ne i8 %39, %40
  br label %42

42:                                               ; preds = %2, %12, %18, %24, %30, %34, %38
  %43 = phi i1 [ true, %34 ], [ %41, %38 ], [ true, %30 ], [ true, %24 ], [ true, %18 ], [ true, %12 ], [ true, %2 ]
  ret i1 %43
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11permissions22PermissionUsageSession7IsValidEv(%"struct.permissions::PermissionUsageSession"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.permissions::PermissionUsageSession", %"struct.permissions::PermissionUsageSession"* %0, i64 0, i32 4, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  %13 = icmp sge i64 %11, %7
  %14 = and i1 %13, %12
  ret i1 %14

15:                                               ; preds = %1, %5
  ret i1 false
}

declare zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
