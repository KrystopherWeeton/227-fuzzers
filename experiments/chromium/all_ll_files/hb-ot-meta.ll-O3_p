; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-ot-meta.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-ot-meta.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_face_t = type { %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, %struct.hb_shaper_object_dataset_t, %struct.hb_ot_face_t, %struct.hb_atomic_ptr_t.126 }
%struct.hb_object_header_t = type { %struct.hb_reference_count_t, %struct.hb_atomic_int_t, %struct.hb_atomic_ptr_t }
%struct.hb_reference_count_t = type { %struct.hb_atomic_int_t }
%struct.hb_atomic_ptr_t = type { %struct.hb_user_data_array_t* }
%struct.hb_user_data_array_t = type { %struct.hb_mutex_t, %struct.hb_lockable_set_t }
%struct.hb_mutex_t = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.hb_lockable_set_t = type { %struct.hb_vector_t }
%struct.hb_vector_t = type { i32, i32, %"struct.hb_user_data_array_t::hb_user_data_item_t"* }
%"struct.hb_user_data_array_t::hb_user_data_item_t" = type { %struct.hb_user_data_key_t*, i8*, void (i8*)* }
%struct.hb_user_data_key_t = type { i8 }
%struct.hb_blob_t = type { %struct.hb_object_header_t, i8*, i32, i32, i8*, void (i8*)* }
%struct.hb_atomic_int_t = type { i32 }
%struct.hb_shaper_object_dataset_t = type { %struct.hb_face_t*, %struct.hb_shaper_lazy_loader_t }
%struct.hb_shaper_lazy_loader_t = type { %struct.hb_lazy_loader_t }
%struct.hb_lazy_loader_t = type { %struct.hb_atomic_ptr_t.0 }
%struct.hb_atomic_ptr_t.0 = type { %struct.hb_ot_face_data_t* }
%struct.hb_ot_face_data_t = type opaque
%struct.hb_ot_face_t = type { %struct.hb_face_t*, %struct.hb_table_lazy_loader_t, %struct.hb_face_lazy_loader_t, %struct.hb_table_lazy_loader_t.6, %struct.hb_face_lazy_loader_t.9, %struct.hb_table_lazy_loader_t.13, %struct.hb_face_lazy_loader_t.16, %struct.hb_face_lazy_loader_t.20, %struct.hb_table_lazy_loader_t.24, %struct.hb_face_lazy_loader_t.27, %struct.hb_table_lazy_loader_t.31, %struct.hb_face_lazy_loader_t.34, %struct.hb_face_lazy_loader_t.38, %struct.hb_face_lazy_loader_t.42, %struct.hb_face_lazy_loader_t.46, %struct.hb_table_lazy_loader_t.50, %struct.hb_table_lazy_loader_t.53, %struct.hb_table_lazy_loader_t.56, %struct.hb_face_lazy_loader_t.59, %struct.hb_table_lazy_loader_t.63, %struct.hb_table_lazy_loader_t.66, %struct.hb_face_lazy_loader_t.69, %struct.hb_face_lazy_loader_t.73, %struct.hb_face_lazy_loader_t.77, %struct.hb_table_lazy_loader_t.81, %struct.hb_table_lazy_loader_t.84, %struct.hb_table_lazy_loader_t.87, %struct.hb_table_lazy_loader_t.90, %struct.hb_table_lazy_loader_t.93, %struct.hb_table_lazy_loader_t.96, %struct.hb_table_lazy_loader_t.99, %struct.hb_table_lazy_loader_t.102, %struct.hb_table_lazy_loader_t.105, %struct.hb_table_lazy_loader_t.108, %struct.hb_face_lazy_loader_t.111, %struct.hb_face_lazy_loader_t.115, %struct.hb_face_lazy_loader_t.119, %struct.hb_table_lazy_loader_t.123 }
%struct.hb_table_lazy_loader_t = type { %struct.hb_lazy_loader_t.1 }
%struct.hb_lazy_loader_t.1 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.2 = type { %struct.hb_blob_t* }
%struct.hb_face_lazy_loader_t = type { %struct.hb_lazy_loader_t.3 }
%struct.hb_lazy_loader_t.3 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_atomic_ptr_t.5 = type { %"struct.OT::cmap_accelerator_t"* }
%"struct.OT::cmap_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.6 = type { %struct.hb_lazy_loader_t.7 }
%struct.hb_lazy_loader_t.7 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.9 = type { %struct.hb_lazy_loader_t.10 }
%struct.hb_lazy_loader_t.10 = type { %struct.hb_atomic_ptr_t.12 }
%struct.hb_atomic_ptr_t.12 = type { %"struct.OT::hmtx_accelerator_t"* }
%"struct.OT::hmtx_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.13 = type { %struct.hb_lazy_loader_t.14 }
%struct.hb_lazy_loader_t.14 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.16 = type { %struct.hb_lazy_loader_t.17 }
%struct.hb_lazy_loader_t.17 = type { %struct.hb_atomic_ptr_t.19 }
%struct.hb_atomic_ptr_t.19 = type { %"struct.OT::post_accelerator_t"* }
%"struct.OT::post_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.20 = type { %struct.hb_lazy_loader_t.21 }
%struct.hb_lazy_loader_t.21 = type { %struct.hb_atomic_ptr_t.23 }
%struct.hb_atomic_ptr_t.23 = type { %"struct.OT::name_accelerator_t"* }
%"struct.OT::name_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.24 = type { %struct.hb_lazy_loader_t.25 }
%struct.hb_lazy_loader_t.25 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.27 = type { %struct.hb_lazy_loader_t.28 }
%struct.hb_lazy_loader_t.28 = type { %struct.hb_atomic_ptr_t.30 }
%struct.hb_atomic_ptr_t.30 = type { %"struct.OT::meta_accelerator_t"* }
%"struct.OT::meta_accelerator_t" = type { %"struct.OT::meta::accelerator_t" }
%"struct.OT::meta::accelerator_t" = type { %struct.hb_blob_ptr_t }
%struct.hb_blob_ptr_t = type { %struct.hb_nonnull_ptr_t }
%struct.hb_nonnull_ptr_t = type { %struct.hb_blob_t* }
%struct.hb_table_lazy_loader_t.31 = type { %struct.hb_lazy_loader_t.32 }
%struct.hb_lazy_loader_t.32 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.34 = type { %struct.hb_lazy_loader_t.35 }
%struct.hb_lazy_loader_t.35 = type { %struct.hb_atomic_ptr_t.37 }
%struct.hb_atomic_ptr_t.37 = type { %"struct.OT::vmtx_accelerator_t"* }
%"struct.OT::vmtx_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.38 = type { %struct.hb_lazy_loader_t.39 }
%struct.hb_lazy_loader_t.39 = type { %struct.hb_atomic_ptr_t.41 }
%struct.hb_atomic_ptr_t.41 = type { %"struct.OT::glyf_accelerator_t"* }
%"struct.OT::glyf_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.42 = type { %struct.hb_lazy_loader_t.43 }
%struct.hb_lazy_loader_t.43 = type { %struct.hb_atomic_ptr_t.45 }
%struct.hb_atomic_ptr_t.45 = type { %"struct.OT::cff1_accelerator_t"* }
%"struct.OT::cff1_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.46 = type { %struct.hb_lazy_loader_t.47 }
%struct.hb_lazy_loader_t.47 = type { %struct.hb_atomic_ptr_t.49 }
%struct.hb_atomic_ptr_t.49 = type { %"struct.OT::cff2_accelerator_t"* }
%"struct.OT::cff2_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.50 = type { %struct.hb_lazy_loader_t.51 }
%struct.hb_lazy_loader_t.51 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.53 = type { %struct.hb_lazy_loader_t.54 }
%struct.hb_lazy_loader_t.54 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.56 = type { %struct.hb_lazy_loader_t.57 }
%struct.hb_lazy_loader_t.57 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.59 = type { %struct.hb_lazy_loader_t.60 }
%struct.hb_lazy_loader_t.60 = type { %struct.hb_atomic_ptr_t.62 }
%struct.hb_atomic_ptr_t.62 = type { %"struct.OT::gvar_accelerator_t"* }
%"struct.OT::gvar_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.63 = type { %struct.hb_lazy_loader_t.64 }
%struct.hb_lazy_loader_t.64 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.66 = type { %struct.hb_lazy_loader_t.67 }
%struct.hb_lazy_loader_t.67 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.69 = type { %struct.hb_lazy_loader_t.70 }
%struct.hb_lazy_loader_t.70 = type { %struct.hb_atomic_ptr_t.72 }
%struct.hb_atomic_ptr_t.72 = type { %"struct.OT::GDEF_accelerator_t"* }
%"struct.OT::GDEF_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.73 = type { %struct.hb_lazy_loader_t.74 }
%struct.hb_lazy_loader_t.74 = type { %struct.hb_atomic_ptr_t.76 }
%struct.hb_atomic_ptr_t.76 = type { %"struct.OT::GSUB_accelerator_t"* }
%"struct.OT::GSUB_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.77 = type { %struct.hb_lazy_loader_t.78 }
%struct.hb_lazy_loader_t.78 = type { %struct.hb_atomic_ptr_t.80 }
%struct.hb_atomic_ptr_t.80 = type { %"struct.OT::GPOS_accelerator_t"* }
%"struct.OT::GPOS_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.81 = type { %struct.hb_lazy_loader_t.82 }
%struct.hb_lazy_loader_t.82 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.84 = type { %struct.hb_lazy_loader_t.85 }
%struct.hb_lazy_loader_t.85 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.87 = type { %struct.hb_lazy_loader_t.88 }
%struct.hb_lazy_loader_t.88 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.90 = type { %struct.hb_lazy_loader_t.91 }
%struct.hb_lazy_loader_t.91 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.93 = type { %struct.hb_lazy_loader_t.94 }
%struct.hb_lazy_loader_t.94 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.96 = type { %struct.hb_lazy_loader_t.97 }
%struct.hb_lazy_loader_t.97 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.99 = type { %struct.hb_lazy_loader_t.100 }
%struct.hb_lazy_loader_t.100 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.102 = type { %struct.hb_lazy_loader_t.103 }
%struct.hb_lazy_loader_t.103 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.105 = type { %struct.hb_lazy_loader_t.106 }
%struct.hb_lazy_loader_t.106 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.108 = type { %struct.hb_lazy_loader_t.109 }
%struct.hb_lazy_loader_t.109 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.111 = type { %struct.hb_lazy_loader_t.112 }
%struct.hb_lazy_loader_t.112 = type { %struct.hb_atomic_ptr_t.114 }
%struct.hb_atomic_ptr_t.114 = type { %"struct.OT::CBDT_accelerator_t"* }
%"struct.OT::CBDT_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.115 = type { %struct.hb_lazy_loader_t.116 }
%struct.hb_lazy_loader_t.116 = type { %struct.hb_atomic_ptr_t.118 }
%struct.hb_atomic_ptr_t.118 = type { %"struct.OT::sbix_accelerator_t"* }
%"struct.OT::sbix_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.119 = type { %struct.hb_lazy_loader_t.120 }
%struct.hb_lazy_loader_t.120 = type { %struct.hb_atomic_ptr_t.122 }
%struct.hb_atomic_ptr_t.122 = type { %"struct.OT::SVG_accelerator_t"* }
%"struct.OT::SVG_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.123 = type { %struct.hb_lazy_loader_t.124 }
%struct.hb_lazy_loader_t.124 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.126 = type { %"struct.hb_face_t::plan_node_t"* }
%"struct.hb_face_t::plan_node_t" = type { %struct.hb_shape_plan_t*, %"struct.hb_face_t::plan_node_t"* }
%struct.hb_shape_plan_t = type { %struct.hb_object_header_t, %struct.hb_face_t*, %struct.hb_shape_plan_key_t, %struct.hb_ot_shape_plan_t }
%struct.hb_shape_plan_key_t = type { %struct.hb_segment_properties_t, %struct.hb_feature_t*, i32, %struct.hb_ot_shape_plan_key_t, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)*, i8* }
%struct.hb_segment_properties_t = type { i32, i32, %struct.hb_language_impl_t*, i8*, i8* }
%struct.hb_language_impl_t = type opaque
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.hb_ot_shape_plan_key_t = type { [2 x i32] }
%struct.hb_font_t = type { %struct.hb_object_header_t, %struct.hb_font_t*, %struct.hb_face_t*, i32, i32, i64, i64, i32, i32, float, i32, i32*, float*, %struct.hb_font_funcs_t*, i8*, void (i8*)*, %struct.hb_shaper_object_dataset_t.128 }
%struct.hb_font_funcs_t = type { %struct.hb_object_header_t, %struct.anon, %struct.anon.127, %"union.hb_font_funcs_t::get_t" }
%struct.anon = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.127 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%"union.hb_font_funcs_t::get_t" = type { %"struct.hb_font_funcs_t::get_t::get_funcs_t" }
%"struct.hb_font_funcs_t::get_t::get_funcs_t" = type { i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)* }
%struct.hb_font_extents_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }
%struct.hb_shaper_object_dataset_t.128 = type { %struct.hb_font_t*, %struct.hb_shaper_lazy_loader_t.129 }
%struct.hb_shaper_lazy_loader_t.129 = type { %struct.hb_lazy_loader_t.130 }
%struct.hb_lazy_loader_t.130 = type { %struct.hb_atomic_ptr_t.132 }
%struct.hb_atomic_ptr_t.132 = type { %struct.hb_ot_font_data_t* }
%struct.hb_ot_font_data_t = type opaque
%struct.hb_buffer_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hb_segment_properties_t, i8, i8, i8, i32, i32, i32, i32, %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*, %struct.hb_glyph_position_t*, i32, [2 x [5 x i32]], [2 x i32], i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i8*, void (i8*)* }
%struct.hb_unicode_funcs_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, %struct.anon.133, %struct.anon.134, %struct.anon.135 }
%struct.anon.133 = type { i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i8*)* }
%struct.anon.134 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.135 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%union._hb_var_int_t = type { i32 }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%struct.hb_ot_shape_plan_t = type <{ %struct.hb_segment_properties_t, %struct.hb_ot_complex_shaper_t*, %struct.hb_ot_map_t, %struct.hb_aat_map_t, i8*, i32, i32, i32, i32, i32, i32, i16, [6 x i8] }>
%struct.hb_ot_complex_shaper_t = type opaque
%struct.hb_ot_map_t = type { [2 x i32], [2 x i8], i32, %struct.hb_sorted_vector_t, [2 x %struct.hb_vector_t.137], [2 x %struct.hb_vector_t.138] }
%struct.hb_sorted_vector_t = type { %struct.hb_vector_t.136 }
%struct.hb_vector_t.136 = type { i32, i32, %"struct.hb_ot_map_t::feature_map_t"* }
%"struct.hb_ot_map_t::feature_map_t" = type { i32, [2 x i32], [2 x i32], i32, i32, i32, i8 }
%struct.hb_vector_t.137 = type { i32, i32, %"struct.hb_ot_map_t::lookup_map_t"* }
%"struct.hb_ot_map_t::lookup_map_t" = type { i16, i8, i32 }
%struct.hb_vector_t.138 = type { i32, i32, %"struct.hb_ot_map_t::stage_map_t"* }
%"struct.hb_ot_map_t::stage_map_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_t = type { %struct.hb_vector_t.139 }
%struct.hb_vector_t.139 = type { i32, i32, i32* }
%"struct.OT::meta" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::ArrayOf" }
%"struct.OT::IntType" = type { %struct.BEInt }
%struct.BEInt = type { [4 x i8] }
%"struct.OT::ArrayOf" = type { %"struct.OT::IntType", [1 x %"struct.OT::DataMap"] }
%"struct.OT::DataMap" = type { %"struct.OT::Tag", %"struct.OT::OffsetTo", %"struct.OT::IntType" }
%"struct.OT::Tag" = type { %"struct.OT::IntType" }
%"struct.OT::OffsetTo" = type { %"struct.OT::Offset" }
%"struct.OT::Offset" = type { %"struct.OT::IntType" }
%struct.hb_sanitize_context_t = type <{ %struct.hb_dispatch_context_t, [4 x i8], i8*, i8*, i32, i32, i8, [3 x i8], i32, %struct.hb_blob_t*, i32, i8, [3 x i8] }>
%struct.hb_dispatch_context_t = type { i32 }

$_ZNK2OT4meta13accelerator_t11get_entriesEjPjP16hb_ot_meta_tag_t = comdat any

$_ZNK2OT4meta13accelerator_t15reference_entryEj = comdat any

$_ZNK16hb_lazy_loader_tIN2OT18meta_accelerator_tE21hb_face_lazy_loader_tIS1_Lj9EE9hb_face_tLj9ES1_E3getEv = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4metaEEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT7ArrayOfINS_7DataMapENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS_4metaEEEEbP21hb_sanitize_context_tDpOT_ = comdat any

@_hb_CrapPool = external hidden local_unnamed_addr global [48 x i64], align 16
@_hb_NullPool = external hidden constant [48 x i64], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_ot_meta_get_entry_tags(%struct.hb_face_t*, i32, i32*, i32*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 9, i32 0
  %6 = tail call %"struct.OT::meta_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18meta_accelerator_tE21hb_face_lazy_loader_tIS1_Lj9EE9hb_face_tLj9ES1_E3getEv(%struct.hb_lazy_loader_t.28* %5) #6
  %7 = getelementptr inbounds %"struct.OT::meta_accelerator_t", %"struct.OT::meta_accelerator_t"* %6, i64 0, i32 0
  %8 = tail call i32 @_ZNK2OT4meta13accelerator_t11get_entriesEjPjP16hb_ot_meta_tag_t(%"struct.OT::meta::accelerator_t"* %7, i32 %1, i32* %2, i32* %3)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2OT4meta13accelerator_t11get_entriesEjPjP16hb_ot_meta_tag_t(%"struct.OT::meta::accelerator_t"*, i32, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32* %2, null
  br i1 %5, label %80, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.OT::meta::accelerator_t", %"struct.OT::meta::accelerator_t"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %struct.hb_blob_t*, %struct.hb_blob_t** %7, align 8
  %9 = icmp eq %struct.hb_blob_t* %8, null
  %10 = select i1 %9, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %8
  %11 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %10, i64 0, i32 1
  %12 = bitcast i8** %11 to %"struct.OT::meta"**
  %13 = load %"struct.OT::meta"*, %"struct.OT::meta"** %12, align 8
  %14 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %10, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %15, 16
  %17 = select i1 %16, %"struct.OT::meta"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::meta"*), %"struct.OT::meta"* %13
  %18 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %17, i64 0, i32 3, i32 0, i32 0, i32 0, i64 0
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw i32 %20, 24
  %22 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %17, i64 0, i32 3, i32 0, i32 0, i32 0, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 16
  %26 = or i32 %25, %21
  %27 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %17, i64 0, i32 3, i32 0, i32 0, i32 0, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 8
  %31 = or i32 %26, %30
  %32 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %17, i64 0, i32 3, i32 0, i32 0, i32 0, i64 3
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = or i32 %31, %34
  %36 = tail call i32 @llvm.usub.sat.i32(i32 %35, i32 %1) #6
  %37 = load i32, i32* %2, align 4
  %38 = icmp ugt i32 %36, %37
  %39 = select i1 %38, i32 %37, i32 %36
  store i32 %39, i32* %2, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %80, label %41

41:                                               ; preds = %6
  %42 = zext i32 %1 to i64
  %43 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %17, i64 0, i32 3, i32 1, i64 %42
  %44 = load i32, i32* bitcast ([48 x i64]* @_hb_NullPool to i32*), align 16
  br label %45

45:                                               ; preds = %41, %70
  %46 = phi i32* [ %3, %41 ], [ %76, %70 ]
  %47 = phi i32 [ %39, %41 ], [ %74, %70 ]
  %48 = phi %"struct.OT::DataMap"* [ %43, %41 ], [ %78, %70 ]
  %49 = phi i32 [ %39, %41 ], [ %77, %70 ]
  %50 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw i32 %52, 24
  %54 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 16
  %58 = or i32 %57, %53
  %59 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw nsw i32 %61, 8
  %63 = or i32 %58, %62
  %64 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = or i32 %63, %66
  %68 = icmp eq i32 %47, 0
  br i1 %68, label %69, label %70, !prof !2

69:                                               ; preds = %45
  store i32 %44, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %70

70:                                               ; preds = %45, %69
  %71 = phi i32* [ bitcast ([48 x i64]* @_hb_CrapPool to i32*), %69 ], [ %46, %45 ]
  store i32 %67, i32* %71, align 4
  %72 = icmp ne i32 %47, 0
  %73 = zext i1 %72 to i32
  %74 = sub i32 %47, %73
  %75 = zext i1 %72 to i64
  %76 = getelementptr inbounds i32, i32* %46, i64 %75
  %77 = add i32 %49, -1
  %78 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %48, i64 1
  %79 = icmp eq i32 %77, 0
  br i1 %79, label %80, label %45

80:                                               ; preds = %70, %6, %4
  %81 = getelementptr inbounds %"struct.OT::meta::accelerator_t", %"struct.OT::meta::accelerator_t"* %0, i64 0, i32 0, i32 0, i32 0
  %82 = load %struct.hb_blob_t*, %struct.hb_blob_t** %81, align 8
  %83 = icmp eq %struct.hb_blob_t* %82, null
  %84 = select i1 %83, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %82
  %85 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %84, i64 0, i32 1
  %86 = bitcast i8** %85 to %"struct.OT::meta"**
  %87 = load %"struct.OT::meta"*, %"struct.OT::meta"** %86, align 8
  %88 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %84, i64 0, i32 2
  %89 = load i32, i32* %88, align 8
  %90 = icmp ult i32 %89, 16
  %91 = select i1 %90, %"struct.OT::meta"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::meta"*), %"struct.OT::meta"* %87
  %92 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %91, i64 0, i32 3, i32 0, i32 0, i32 0, i64 0
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = shl nuw i32 %94, 24
  %96 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %91, i64 0, i32 3, i32 0, i32 0, i32 0, i64 1
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = shl nuw nsw i32 %98, 16
  %100 = or i32 %99, %95
  %101 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %91, i64 0, i32 3, i32 0, i32 0, i32 0, i64 2
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = shl nuw nsw i32 %103, 8
  %105 = or i32 %100, %104
  %106 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %91, i64 0, i32 3, i32 0, i32 0, i32 0, i64 3
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = or i32 %105, %108
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_blob_t* @hb_ot_meta_reference_entry(%struct.hb_face_t*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 9, i32 0
  %4 = tail call %"struct.OT::meta_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18meta_accelerator_tE21hb_face_lazy_loader_tIS1_Lj9EE9hb_face_tLj9ES1_E3getEv(%struct.hb_lazy_loader_t.28* %3) #6
  %5 = getelementptr inbounds %"struct.OT::meta_accelerator_t", %"struct.OT::meta_accelerator_t"* %4, i64 0, i32 0
  %6 = tail call %struct.hb_blob_t* @_ZNK2OT4meta13accelerator_t15reference_entryEj(%"struct.OT::meta::accelerator_t"* %5, i32 %1)
  ret %struct.hb_blob_t* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZNK2OT4meta13accelerator_t15reference_entryEj(%"struct.OT::meta::accelerator_t"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.OT::meta::accelerator_t", %"struct.OT::meta::accelerator_t"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %struct.hb_blob_t*, %struct.hb_blob_t** %3, align 8
  %5 = icmp eq %struct.hb_blob_t* %4, null
  %6 = select i1 %5, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %4
  %7 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %6, i64 0, i32 1
  %8 = bitcast i8** %7 to %"struct.OT::meta"**
  %9 = load %"struct.OT::meta"*, %"struct.OT::meta"** %8, align 8
  %10 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %6, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, 16
  %13 = select i1 %12, %"struct.OT::meta"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::meta"*), %"struct.OT::meta"* %9
  %14 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %13, i64 0, i32 3, i32 0, i32 0, i32 0, i64 0
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw i32 %16, 24
  %18 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %13, i64 0, i32 3, i32 0, i32 0, i32 0, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 16
  %22 = or i32 %21, %17
  %23 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %13, i64 0, i32 3, i32 0, i32 0, i32 0, i64 2
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 8
  %27 = or i32 %22, %26
  %28 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %13, i64 0, i32 3, i32 0, i32 0, i32 0, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = or i32 %27, %30
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %62, label %33

33:                                               ; preds = %2
  %34 = zext i32 %31 to i64
  br label %35

35:                                               ; preds = %56, %33
  %36 = phi i64 [ 0, %33 ], [ %57, %56 ]
  %37 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %13, i64 0, i32 3, i32 1, i64 %36, i32 0, i32 0, i32 0, i32 0, i64 0
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = shl nuw i32 %39, 24
  %41 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %13, i64 0, i32 3, i32 1, i64 %36, i32 0, i32 0, i32 0, i32 0, i64 1
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = shl nuw nsw i32 %43, 16
  %45 = or i32 %44, %40
  %46 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %13, i64 0, i32 3, i32 1, i64 %36, i32 0, i32 0, i32 0, i32 0, i64 2
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  %50 = or i32 %45, %49
  %51 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %13, i64 0, i32 3, i32 1, i64 %36, i32 0, i32 0, i32 0, i32 0, i64 3
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = or i32 %50, %53
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %59, label %56

56:                                               ; preds = %35
  %57 = add nuw nsw i64 %36, 1
  %58 = icmp eq i64 %57, %34
  br i1 %58, label %62, label %35

59:                                               ; preds = %35
  %60 = and i64 %36, 4294967295
  %61 = getelementptr inbounds %"struct.OT::meta", %"struct.OT::meta"* %13, i64 0, i32 3, i32 1, i64 %60
  br label %62

62:                                               ; preds = %56, %2, %59
  %63 = phi %"struct.OT::DataMap"* [ %61, %59 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::DataMap"*), %2 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::DataMap"*), %56 ]
  %64 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = shl nuw i32 %66, 24
  %68 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = shl nuw nsw i32 %70, 16
  %72 = or i32 %71, %67
  %73 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 2
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = shl nuw nsw i32 %75, 8
  %77 = or i32 %72, %76
  %78 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 3
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = or i32 %77, %80
  %82 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %63, i64 0, i32 2, i32 0, i32 0, i64 0
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = shl nuw i32 %84, 24
  %86 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %63, i64 0, i32 2, i32 0, i32 0, i64 1
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = shl nuw nsw i32 %88, 16
  %90 = or i32 %89, %85
  %91 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %63, i64 0, i32 2, i32 0, i32 0, i64 2
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = shl nuw nsw i32 %93, 8
  %95 = or i32 %90, %94
  %96 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %63, i64 0, i32 2, i32 0, i32 0, i64 3
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = or i32 %95, %98
  %100 = tail call %struct.hb_blob_t* @hb_blob_create_sub_blob(%struct.hb_blob_t* %4, i32 %81, i32 %99) #6
  ret %struct.hb_blob_t* %100
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.hb_blob_t* @hb_blob_create_sub_blob(%struct.hb_blob_t*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.OT::meta_accelerator_t"* @_ZNK16hb_lazy_loader_tIN2OT18meta_accelerator_tE21hb_face_lazy_loader_tIS1_Lj9EE9hb_face_tLj9ES1_E3getEv(%struct.hb_lazy_loader_t.28*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.hb_sanitize_context_t, align 8
  %3 = getelementptr inbounds %struct.hb_lazy_loader_t.28, %struct.hb_lazy_loader_t.28* %0, i64 -9
  %4 = bitcast %struct.hb_lazy_loader_t.28* %3 to %struct.hb_face_t**
  %5 = bitcast %struct.hb_lazy_loader_t.28* %0 to i64*
  %6 = load atomic i64, i64* %5 acquire, align 8
  %7 = inttoptr i64 %6 to %"struct.OT::meta_accelerator_t"*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %47, !prof !2

9:                                                ; preds = %1
  %10 = bitcast %struct.hb_sanitize_context_t* %2 to i8*
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 2
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 8
  %14 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 9
  %15 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 10
  %16 = bitcast i8** %12 to i8*
  %17 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 11
  br label %18

18:                                               ; preds = %9, %42
  %19 = load %struct.hb_face_t*, %struct.hb_face_t** %4, align 8
  %20 = icmp eq %struct.hb_face_t* %19, null
  br i1 %20, label %47, label %21, !prof !2

21:                                               ; preds = %18
  %22 = call noalias i8* @calloc(i64 1, i64 8) #6
  %23 = bitcast i8* %22 to %"struct.OT::meta_accelerator_t"*
  %24 = icmp eq i8* %22, null
  br i1 %24, label %30, label %25, !prof !2

25:                                               ; preds = %21
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #6
  store i32 0, i32* %11, align 8
  store i32 0, i32* %13, align 4
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %14, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false) #6
  %26 = call i32 @hb_face_get_glyph_count(%struct.hb_face_t* nonnull %19) #6
  store i32 %26, i32* %15, align 8
  store i8 1, i8* %17, align 4
  %27 = call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* nonnull %19, i32 1835365473) #6
  %28 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4metaEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %2, %struct.hb_blob_t* %27) #6
  %29 = bitcast i8* %22 to %struct.hb_blob_t**
  store %struct.hb_blob_t* %28, %struct.hb_blob_t** %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #6
  br label %30

30:                                               ; preds = %21, %25
  %31 = select i1 %24, %"struct.OT::meta_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::meta_accelerator_t"*), %"struct.OT::meta_accelerator_t"* %23, !prof !2
  %32 = ptrtoint %"struct.OT::meta_accelerator_t"* %31 to i64
  %33 = cmpxchg weak i64* %5, i64 0, i64 %32 acq_rel monotonic
  %34 = extractvalue { i64, i1 } %33, 1
  br i1 %34, label %47, label %35, !prof !3

35:                                               ; preds = %30
  br i1 %24, label %42, label %36

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"struct.OT::meta_accelerator_t", %"struct.OT::meta_accelerator_t"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %struct.hb_blob_t*, %struct.hb_blob_t** %37, align 8
  %39 = icmp eq %struct.hb_blob_t* %38, null
  %40 = select i1 %39, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %38
  call void @hb_blob_destroy(%struct.hb_blob_t* %40) #6
  %41 = bitcast %"struct.OT::meta_accelerator_t"* %31 to i8*
  call void @free(i8* %41) #6
  br label %42

42:                                               ; preds = %36, %35
  %43 = load atomic i64, i64* %5 acquire, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %18, label %45, !prof !2

45:                                               ; preds = %42
  %46 = inttoptr i64 %43 to %"struct.OT::meta_accelerator_t"*
  br label %47

47:                                               ; preds = %18, %30, %1, %45
  %48 = phi %"struct.OT::meta_accelerator_t"* [ %46, %45 ], [ %7, %1 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::meta_accelerator_t"*), %18 ], [ %31, %30 ]
  ret %"struct.OT::meta_accelerator_t"* %48
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #3

declare i32 @hb_face_get_glyph_count(%struct.hb_face_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4metaEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.OT::meta"*, align 8
  %4 = alloca %"struct.OT::meta"*, align 8
  %5 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #6
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %5, %struct.hb_blob_t** %6, align 8
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  %13 = bitcast %"struct.OT::meta"** %4 to i8*
  %14 = bitcast %"struct.OT::meta"** %4 to i8**
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %1, i64 0, i32 2
  br label %16

16:                                               ; preds = %123, %2
  %17 = phi %struct.hb_blob_t* [ %5, %2 ], [ %129, %123 ]
  %18 = phi i8 [ 0, %2 ], [ 1, %123 ]
  store i8 %18, i8* %7, align 8
  %19 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** %8, align 8
  %21 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  store i8* %24, i8** %9, align 8
  %25 = icmp ugt i32 %22, 67108862
  br i1 %25, label %32, label %26, !prof !2

26:                                               ; preds = %16
  %27 = shl i32 %22, 6
  %28 = icmp ugt i32 %27, 16384
  %29 = select i1 %28, i32 %27, i32 16384
  %30 = icmp ult i32 %29, 1073741823
  %31 = select i1 %30, i32 %29, i32 1073741823
  br label %32

32:                                               ; preds = %16, %26
  %33 = phi i32 [ %31, %26 ], [ 1073741823, %16 ]
  store i32 %33, i32* %10, align 8
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 8
  %34 = icmp eq i8* %20, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %32
  call void @hb_blob_destroy(%struct.hb_blob_t* %17) #6
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %36 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #6
  br label %144

37:                                               ; preds = %32
  %38 = icmp ult i32 %22, 16
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #6
  br label %138

40:                                               ; preds = %37
  %41 = add nsw i32 %33, -16
  store i32 %41, i32* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #6
  %42 = load i8, i8* %20, align 1
  %43 = zext i8 %42 to i32
  %44 = shl nuw i32 %43, 24
  %45 = getelementptr inbounds i8, i8* %20, i64 1
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = shl nuw nsw i32 %47, 16
  %49 = or i32 %48, %44
  %50 = getelementptr inbounds i8, i8* %20, i64 2
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 8
  %54 = or i32 %49, %53
  %55 = getelementptr inbounds i8, i8* %20, i64 3
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = or i32 %54, %57
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %138, !prof !3

60:                                               ; preds = %40
  %61 = getelementptr inbounds i8, i8* %20, i64 12
  %62 = bitcast i8* %61 to %"struct.OT::ArrayOf"*
  store i8* %20, i8** %14, align 8
  %63 = call zeroext i1 @_ZNK2OT7ArrayOfINS_7DataMapENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS_4metaEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf"* %62, %struct.hb_sanitize_context_t* %0, %"struct.OT::meta"** nonnull dereferenceable(8) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #6
  %64 = load i32, i32* %11, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %63, label %66, label %119

66:                                               ; preds = %60
  %67 = getelementptr inbounds i8, i8* %20, i64 1
  %68 = getelementptr inbounds i8, i8* %20, i64 2
  %69 = getelementptr inbounds i8, i8* %20, i64 3
  %70 = bitcast i8* %61 to %"struct.OT::ArrayOf"*
  br i1 %65, label %71, label %130

71:                                               ; preds = %66
  store i32 0, i32* %11, align 4
  %72 = load i8*, i8** %8, align 8
  %73 = icmp ugt i8* %72, %20
  br i1 %73, label %83, label %74, !prof !2

74:                                               ; preds = %71
  %75 = load i8*, i8** %9, align 8
  %76 = icmp ult i8* %75, %20
  br i1 %76, label %83, label %77, !prof !2

77:                                               ; preds = %74
  %78 = ptrtoint i8* %75 to i64
  %79 = ptrtoint i8* %20 to i64
  %80 = sub i64 %78, %79
  %81 = trunc i64 %80 to i32
  %82 = icmp ult i32 %81, 16
  br i1 %82, label %83, label %85, !prof !2

83:                                               ; preds = %77, %74, %71
  %84 = bitcast %"struct.OT::meta"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #6
  br label %112

85:                                               ; preds = %77
  %86 = load i32, i32* %10, align 8
  %87 = add i32 %86, -16
  store i32 %87, i32* %10, align 8
  %88 = icmp sgt i32 %87, 0
  %89 = bitcast %"struct.OT::meta"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #6
  br i1 %88, label %90, label %112, !prof !3

90:                                               ; preds = %85
  %91 = load i8, i8* %20, align 1
  %92 = zext i8 %91 to i32
  %93 = shl nuw i32 %92, 24
  %94 = load i8, i8* %67, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 16
  %97 = or i32 %96, %93
  %98 = load i8, i8* %68, align 1
  %99 = zext i8 %98 to i32
  %100 = shl nuw nsw i32 %99, 8
  %101 = or i32 %97, %100
  %102 = load i8, i8* %69, align 1
  %103 = zext i8 %102 to i32
  %104 = or i32 %101, %103
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %112, !prof !3

106:                                              ; preds = %90
  %107 = bitcast %"struct.OT::meta"** %3 to i8**
  store i8* %20, i8** %107, align 8
  %108 = call zeroext i1 @_ZNK2OT7ArrayOfINS_7DataMapENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS_4metaEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf"* %70, %struct.hb_sanitize_context_t* %0, %"struct.OT::meta"** nonnull dereferenceable(8) %3) #6
  %109 = xor i1 %108, true
  %110 = load i32, i32* %11, align 4
  %111 = icmp ne i32 %110, 0
  br label %112

112:                                              ; preds = %83, %85, %90, %106
  %113 = phi i1 [ false, %90 ], [ false, %85 ], [ %111, %106 ], [ false, %83 ]
  %114 = phi i8* [ %89, %90 ], [ %89, %85 ], [ %89, %106 ], [ %84, %83 ]
  %115 = phi i1 [ true, %90 ], [ true, %85 ], [ %109, %106 ], [ true, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #6
  %116 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  call void @hb_blob_destroy(%struct.hb_blob_t* %116) #6
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %117 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false) #6
  %118 = or i1 %115, %113
  br i1 %118, label %142, label %133

119:                                              ; preds = %60
  br i1 %65, label %120, label %136

120:                                              ; preds = %119
  %121 = load i8, i8* %7, align 8, !range !4
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %134

123:                                              ; preds = %120
  %124 = call i8* @hb_blob_get_data_writable(%struct.hb_blob_t* %1, i32* null) #6
  store i8* %124, i8** %8, align 8
  %125 = load i32, i32* %15, align 8
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %124, i64 %126
  store i8* %127, i8** %9, align 8
  %128 = icmp eq i8* %124, null
  %129 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br i1 %128, label %139, label %16

130:                                              ; preds = %66
  %131 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  call void @hb_blob_destroy(%struct.hb_blob_t* %131) #6
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %132 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 16, i1 false) #6
  br label %133

133:                                              ; preds = %112, %130
  call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #6
  br label %144

134:                                              ; preds = %120
  %135 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br label %139

136:                                              ; preds = %119
  %137 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br label %139

138:                                              ; preds = %40, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #6
  br label %139

139:                                              ; preds = %123, %134, %136, %138
  %140 = phi %struct.hb_blob_t* [ %17, %138 ], [ %137, %136 ], [ %135, %134 ], [ %129, %123 ]
  call void @hb_blob_destroy(%struct.hb_blob_t* %140) #6
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %141 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 16, i1 false) #6
  br label %142

142:                                              ; preds = %139, %112
  call void @hb_blob_destroy(%struct.hb_blob_t* %1) #6
  %143 = call %struct.hb_blob_t* @hb_blob_get_empty() #6
  br label %144

144:                                              ; preds = %142, %133, %35
  %145 = phi %struct.hb_blob_t* [ %1, %35 ], [ %143, %142 ], [ %1, %133 ]
  ret %struct.hb_blob_t* %145
}

declare %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t*, i32) local_unnamed_addr #2

declare i8* @hb_blob_get_data_writable(%struct.hb_blob_t*, i32*) local_unnamed_addr #2

declare void @hb_blob_make_immutable(%struct.hb_blob_t*) local_unnamed_addr #2

declare void @hb_blob_destroy(%struct.hb_blob_t*) local_unnamed_addr #2

declare %struct.hb_blob_t* @hb_blob_get_empty() local_unnamed_addr #2

declare %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT7ArrayOfINS_7DataMapENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS_4metaEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf"*, %struct.hb_sanitize_context_t*, %"struct.OT::meta"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %165, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %165, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::ArrayOf"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %165, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %165, !prof !5

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 1, i64 0
  %25 = load i8, i8* %4, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw i32 %26, 24
  %28 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 16
  %32 = or i32 %31, %27
  %33 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 8
  %37 = or i32 %32, %36
  %38 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %37, %40
  %42 = icmp ult i32 %41, 357913941
  br i1 %42, label %43, label %165, !prof !5

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %45 = mul i32 %41, 12
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %43
  %48 = icmp ugt i8* %6, %44
  %49 = icmp ult i8* %10, %44
  %50 = or i1 %48, %49
  br i1 %50, label %165, label %51, !prof !6

51:                                               ; preds = %47
  %52 = ptrtoint %"struct.OT::DataMap"* %24 to i64
  %53 = sub i64 %13, %52
  %54 = trunc i64 %53 to i32
  %55 = icmp ugt i32 %45, %54
  br i1 %55, label %165, label %56, !prof !2

56:                                               ; preds = %51
  %57 = sub i32 %21, %45
  store i32 %57, i32* %19, align 8
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %165, !prof !3

59:                                               ; preds = %56
  %60 = load i8, i8* %4, align 1
  %61 = load i8, i8* %28, align 1
  %62 = load i8, i8* %33, align 1
  %63 = load i8, i8* %38, align 1
  %64 = zext i8 %60 to i32
  %65 = shl nuw i32 %64, 24
  %66 = zext i8 %61 to i32
  %67 = shl nuw nsw i32 %66, 16
  %68 = or i32 %67, %65
  %69 = zext i8 %62 to i32
  %70 = shl nuw nsw i32 %69, 8
  %71 = or i32 %68, %70
  %72 = zext i8 %63 to i32
  %73 = or i32 %71, %72
  br label %74

74:                                               ; preds = %59, %43
  %75 = phi i32 [ %73, %59 ], [ %41, %43 ]
  %76 = phi i32 [ %57, %59 ], [ %21, %43 ]
  %77 = icmp eq i32 %75, 0
  br i1 %77, label %165, label %78

78:                                               ; preds = %74
  %79 = bitcast %"struct.OT::meta"** %2 to i8**
  %80 = zext i32 %75 to i64
  br label %81

81:                                               ; preds = %161, %78
  %82 = phi i32 [ %76, %78 ], [ %162, %161 ]
  %83 = phi i64 [ 0, %78 ], [ %163, %161 ]
  %84 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 1, i64 %83
  %85 = load i8*, i8** %79, align 8
  %86 = getelementptr inbounds %"struct.OT::DataMap", %"struct.OT::DataMap"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %87 = icmp ugt i8* %6, %86
  %88 = icmp ult i8* %10, %86
  %89 = or i1 %87, %88
  br i1 %89, label %165, label %90, !prof !6

90:                                               ; preds = %81
  %91 = ptrtoint %"struct.OT::DataMap"* %84 to i64
  %92 = sub i64 %13, %91
  %93 = trunc i64 %92 to i32
  %94 = icmp ult i32 %93, 12
  br i1 %94, label %165, label %95, !prof !2

95:                                               ; preds = %90
  %96 = add i32 %82, -12
  store i32 %96, i32* %19, align 8
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %98, label %165, !prof !3

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 1, i64 %83, i32 1
  %100 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %101 = icmp ugt i8* %6, %100
  %102 = icmp ult i8* %10, %100
  %103 = or i1 %101, %102
  br i1 %103, label %165, label %104, !prof !6

104:                                              ; preds = %98
  %105 = ptrtoint %"struct.OT::OffsetTo"* %99 to i64
  %106 = sub i64 %13, %105
  %107 = trunc i64 %106 to i32
  %108 = icmp ult i32 %107, 4
  br i1 %108, label %165, label %109, !prof !2

109:                                              ; preds = %104
  %110 = add i32 %82, -16
  store i32 %110, i32* %19, align 8
  %111 = icmp sgt i32 %110, 0
  br i1 %111, label %112, label %165, !prof !5

112:                                              ; preds = %109
  %113 = load i8, i8* %100, align 1
  %114 = zext i8 %113 to i64
  %115 = shl nuw nsw i64 %114, 24
  %116 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 1, i64 %83, i32 1, i32 0, i32 0, i32 0, i32 0, i64 1
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = shl nuw nsw i64 %118, 16
  %120 = or i64 %119, %115
  %121 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 1, i64 %83, i32 1, i32 0, i32 0, i32 0, i32 0, i64 2
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i64
  %124 = shl nuw nsw i64 %123, 8
  %125 = or i64 %120, %124
  %126 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 1, i64 %83, i32 1, i32 0, i32 0, i32 0, i32 0, i64 3
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i64
  %129 = or i64 %125, %128
  %130 = getelementptr inbounds i8, i8* %85, i64 %129
  %131 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 1, i64 %83, i32 2, i32 0, i32 0, i64 0
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = shl nuw i32 %133, 24
  %135 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 1, i64 %83, i32 2, i32 0, i32 0, i64 1
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = shl nuw nsw i32 %137, 16
  %139 = or i32 %138, %134
  %140 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 1, i64 %83, i32 2, i32 0, i32 0, i64 2
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = shl nuw nsw i32 %142, 8
  %144 = or i32 %139, %143
  %145 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 1, i64 %83, i32 2, i32 0, i32 0, i64 3
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = or i32 %144, %147
  switch i32 %148, label %149 [
    i32 -1, label %165
    i32 0, label %161
  ], !prof !7

149:                                              ; preds = %112
  %150 = icmp ugt i8* %6, %130
  %151 = icmp ult i8* %10, %130
  %152 = or i1 %150, %151
  br i1 %152, label %165, label %153, !prof !6

153:                                              ; preds = %149
  %154 = ptrtoint i8* %130 to i64
  %155 = sub i64 %13, %154
  %156 = trunc i64 %155 to i32
  %157 = icmp ugt i32 %148, %156
  br i1 %157, label %165, label %158, !prof !2

158:                                              ; preds = %153
  %159 = sub i32 %110, %148
  store i32 %159, i32* %19, align 8
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %161, label %165, !prof !3

161:                                              ; preds = %112, %158
  %162 = phi i32 [ %110, %112 ], [ %159, %158 ]
  %163 = add nuw nsw i64 %83, 1
  %164 = icmp eq i64 %163, %80
  br i1 %164, label %165, label %81

165:                                              ; preds = %95, %90, %81, %109, %104, %98, %158, %153, %149, %112, %161, %74, %47, %51, %23, %3, %8, %12, %18, %56
  %166 = phi i1 [ false, %56 ], [ false, %18 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ false, %23 ], [ false, %51 ], [ false, %47 ], [ true, %74 ], [ true, %161 ], [ false, %95 ], [ false, %90 ], [ false, %81 ], [ false, %109 ], [ false, %104 ], [ false, %98 ], [ false, %158 ], [ false, %153 ], [ false, %149 ], [ false, %112 ]
  ret i1 %166
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
!6 = !{!"branch_weights", i32 4001, i32 4000000}
!7 = !{!"branch_weights", i32 2146410443, i32 2146410, i32 2146410443}
