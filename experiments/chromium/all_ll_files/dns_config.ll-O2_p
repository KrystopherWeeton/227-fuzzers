; ModuleID = '../../net/dns/dns_config.cc'
source_filename = "../../net/dns/dns_config.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::DnsConfig" = type { %"class.std::__1::vector", i8, %"class.std::__1::basic_string", %"class.std::__1::vector.6", %"class.std::__1::unordered_map", i8, i8, i32, %"class.base::TimeDelta", i32, i32, i8, i8, %"class.std::__1::vector.31", i32, i8, %"class.std::__1::vector.6" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::IPEndPoint"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.28", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14", %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { float }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"*, %"class.std::__1::__compressed_pair.33" }
%"struct.net::DnsOverHttpsServerConfig" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.net::DnsOverHttpsServerConfig"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.69" }
%"struct.std::__1::pair.69" = type { %"struct.std::__1::pair.70", %"class.net::IPAddress", [7 x i8] }
%"struct.std::__1::pair.70" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.38" }
%"union.absl::variant_internal::DestructibleUnionImpl.38" = type { %"union.absl::variant_internal::DestructibleUnionImpl.39" }
%"union.absl::variant_internal::DestructibleUnionImpl.39" = type { %"union.absl::variant_internal::DestructibleUnionImpl.40" }
%"union.absl::variant_internal::DestructibleUnionImpl.40" = type { %"union.absl::variant_internal::DestructibleUnionImpl.41" }
%"union.absl::variant_internal::DestructibleUnionImpl.41" = type { %"class.std::__1::basic_string" }

$_ZNSt3__1eqINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS8_9IPAddressENS8_15DnsHostsKeyHashENS_8equal_toISA_EENS5_INS1_IKSA_SB_EEEEEEbRKNS_13unordered_mapIT_T0_T1_T2_T3_EESQ_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE25__emplace_unique_key_argsISB_JRKNS2_IKSB_SC_EEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeISD_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEEEEvT_SU_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE19__node_insert_multiEPNS_11__hash_nodeISD_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE27__node_insert_multi_prepareEmRSD_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE15__emplace_multiIJRKNS2_IKSB_SC_EEEEENS_15__hash_iteratorIPNS_11__hash_nodeISD_PvEEEEDpOT_ = comdat any

$_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE13__move_assignERSM_NS_17integral_constantIbLb1EEE = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE4findISB_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEERKT_ = comdat any

@.str = private unnamed_addr constant [12 x i8] c"nameservers\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"dns_over_tls_active\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"dns_over_tls_hostname\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"search\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"unhandled_options\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"append_to_multi_label_name\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"ndots\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"attempts\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"doh_attempts\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"rotate\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"use_local_ipv6\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"num_hosts\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"server_template\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"use_post\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"doh_servers\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"secure_dns_mode\00", align 1
@.str.17 = private unnamed_addr constant [29 x i8] c"allow_dns_over_https_upgrade\00", align 1
@.str.18 = private unnamed_addr constant [27 x i8] c"disabled_upgrade_providers\00", align 1

@_ZN3net9DnsConfigC1Ev = hidden unnamed_addr alias void (%"struct.net::DnsConfig"*), void (%"struct.net::DnsConfig"*)* @_ZN3net9DnsConfigC2Ev
@_ZN3net9DnsConfigC1ERKS0_ = hidden unnamed_addr alias void (%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"*), void (%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"*)* @_ZN3net9DnsConfigC2ERKS0_
@_ZN3net9DnsConfigC1EOS0_ = hidden unnamed_addr alias void (%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"*), void (%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"*)* @_ZN3net9DnsConfigC2EOS0_
@_ZN3net9DnsConfigC1ENSt3__16vectorINS_10IPEndPointENS1_9allocatorIS3_EEEE = hidden unnamed_addr alias void (%"struct.net::DnsConfig"*, %"class.std::__1::vector"*), void (%"struct.net::DnsConfig"*, %"class.std::__1::vector"*)* @_ZN3net9DnsConfigC2ENSt3__16vectorINS_10IPEndPointENS1_9allocatorIS3_EEEE
@_ZN3net9DnsConfigD1Ev = hidden unnamed_addr alias void (%"struct.net::DnsConfig"*), void (%"struct.net::DnsConfig"*)* @_ZN3net9DnsConfigD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9DnsConfigC2Ev(%"struct.net::DnsConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0, i32 3
  %4 = bitcast %"class.std::__1::__compressed_pair.28"* %3 to i32*
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 80, i1 false) #10
  %6 = bitcast %"struct.net::DnsConfig"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 25, i1 false)
  store i32 1065353216, i32* %4, align 4
  %7 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 5
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 6
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 7
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 8, i32 0
  store i64 1000000, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 9
  store i32 2, i32* %11, align 8
  %12 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 10
  store i32 1, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 11
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 12
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13
  %16 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16
  %17 = bitcast %"class.std::__1::vector.6"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10
  %18 = bitcast %"class.std::__1::vector.31"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 29, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9DnsConfigC2ENSt3__16vectorINS_10IPEndPointENS1_9allocatorIS3_EEEE(%"struct.net::DnsConfig"* nocapture, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::DnsConfig"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = bitcast %"class.std::__1::vector"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.net::DnsConfig"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.net::IPEndPoint"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.net::IPEndPoint"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.net::IPEndPoint"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::IPEndPoint"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10
  %18 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 1
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0, i32 3
  %21 = bitcast %"class.std::__1::__compressed_pair.28"* %20 to i32*
  %22 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 80, i1 false)
  store i32 1065353216, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 5
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 6
  store i8 1, i8* %24, align 1
  %25 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 7
  store i32 1, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 8, i32 0
  store i64 1000000, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 9
  store i32 2, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 10
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 11
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 12
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13
  %32 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16
  %33 = bitcast %"class.std::__1::vector.6"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #10
  %34 = bitcast %"class.std::__1::vector.31"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 29, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9DnsConfigC2ERKS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* nocapture readonly dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::DnsConfig"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.net::IPEndPoint"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.net::DnsConfig"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 20
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %40, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 922337203685477580
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"struct.net::DnsConfig"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #11
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #12
  %18 = bitcast i8* %17 to %"class.net::IPEndPoint"*
  %19 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.net::IPEndPoint"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"struct.net::DnsConfig"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %18, i64 %10
  %23 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.net::IPEndPoint"* %22, %"class.net::IPEndPoint"** %23, align 8
  %24 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %24, align 8
  %26 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %4, align 8
  %27 = bitcast %"class.net::IPEndPoint"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.net::IPEndPoint"* %25, %26
  br i1 %29, label %38, label %30

30:                                               ; preds = %16, %30
  %31 = phi %"class.net::IPEndPoint"* [ %34, %30 ], [ %18, %16 ]
  %32 = phi %"class.net::IPEndPoint"* [ %33, %30 ], [ %25, %16 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %31, %"class.net::IPEndPoint"* dereferenceable(20) %32) #10
  %33 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %32, i64 1
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %31, i64 1
  %35 = icmp eq %"class.net::IPEndPoint"* %33, %26
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.net::IPEndPoint"* %34 to i64
  br label %38

38:                                               ; preds = %36, %16
  %39 = phi i64 [ %28, %16 ], [ %37, %36 ]
  store i64 %39, i64* %27, align 8
  br label %40

40:                                               ; preds = %2, %38
  %41 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 1
  %43 = load i8, i8* %42, align 8, !range !2
  store i8 %43, i8* %41, align 8
  %44 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 2
  %45 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 2
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %40
  %51 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %52 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 24, i1 false) #10
  br label %58

53:                                               ; preds = %40
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %44, i8* %55, i64 %57) #10
  br label %58

58:                                               ; preds = %50, %53
  %59 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3
  %60 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3
  %61 = bitcast %"class.std::__1::vector.6"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #10
  %62 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3, i32 0, i32 1
  %63 = bitcast %"class.std::__1::basic_string"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.std::__1::vector.6"* %60 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %64, %66
  %68 = sdiv exact i64 %67, 24
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %111, label %70

70:                                               ; preds = %58
  %71 = icmp ugt i64 %68, 768614336404564650
  br i1 %71, label %72, label %74

72:                                               ; preds = %70
  %73 = bitcast %"class.std::__1::vector.6"* %59 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %73) #11
  unreachable

74:                                               ; preds = %70
  %75 = tail call i8* @_Znwm(i64 %67) #12
  %76 = bitcast i8* %75 to %"class.std::__1::basic_string"*
  %77 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3, i32 0, i32 1
  %78 = bitcast %"class.std::__1::basic_string"** %77 to i8**
  store i8* %75, i8** %78, align 8
  %79 = bitcast %"class.std::__1::vector.6"* %59 to i8**
  store i8* %75, i8** %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 %68
  %81 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %80, %"class.std::__1::basic_string"** %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %60, i64 0, i32 0, i32 0
  %83 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %82, align 8
  %84 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %62, align 8
  %85 = bitcast %"class.std::__1::basic_string"** %77 to i64*
  %86 = ptrtoint i8* %75 to i64
  %87 = icmp eq %"class.std::__1::basic_string"* %83, %84
  br i1 %87, label %109, label %88

88:                                               ; preds = %74, %103
  %89 = phi %"class.std::__1::basic_string"* [ %105, %103 ], [ %76, %74 ]
  %90 = phi %"class.std::__1::basic_string"* [ %104, %103 ], [ %83, %74 ]
  %91 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %88
  %96 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %97 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 24, i1 false) #10
  br label %103

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %89, i8* %100, i64 %102) #10
  br label %103

103:                                              ; preds = %98, %95
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 1
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 1
  %106 = icmp eq %"class.std::__1::basic_string"* %104, %84
  br i1 %106, label %107, label %88

107:                                              ; preds = %103
  %108 = ptrtoint %"class.std::__1::basic_string"* %105 to i64
  br label %109

109:                                              ; preds = %107, %74
  %110 = phi i64 [ %86, %74 ], [ %108, %107 ]
  store i64 %110, i64* %85, align 8
  br label %111

111:                                              ; preds = %58, %109
  %112 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4
  %113 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %112, i64 0, i32 0
  %114 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0, i32 3
  %115 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4, i32 0, i32 3
  %116 = bitcast %"class.std::__1::__compressed_pair.28"* %115 to i32*
  %117 = bitcast %"class.std::__1::__compressed_pair.28"* %114 to i32*
  %118 = bitcast %"class.std::__1::unordered_map"* %112 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 32, i1 false) #10
  %119 = load i32, i32* %116, align 8
  store i32 %119, i32* %117, align 8
  %120 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %121 = load i64, i64* %120, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE6rehashEm(%"class.std::__1::__hash_table"* %113, i64 %121) #10
  %122 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %122, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %124, label %136, label %125

125:                                              ; preds = %111
  %126 = ptrtoint %"struct.std::__1::__hash_node_base"* %123 to i64
  br label %127

127:                                              ; preds = %127, %125
  %128 = phi i64 [ %126, %125 ], [ %134, %127 ]
  %129 = inttoptr i64 %128 to %"struct.std::__1::__hash_node"*
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %129, i64 0, i32 2, i32 0
  %131 = getelementptr inbounds %"struct.std::__1::pair.69", %"struct.std::__1::pair.69"* %130, i64 0, i32 0
  %132 = tail call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE25__emplace_unique_key_argsISB_JRKNS2_IKSB_SC_EEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeISD_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %113, %"struct.std::__1::pair.70"* dereferenceable(32) %131, %"struct.std::__1::pair.69"* dereferenceable(56) %130) #10
  %133 = inttoptr i64 %128 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %127

136:                                              ; preds = %127, %111
  %137 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 5
  %138 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 26, i1 false)
  %139 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13
  %140 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13
  %141 = bitcast %"class.std::__1::vector.31"* %139 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 24, i1 false) #10
  %142 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13, i32 0, i32 1
  %143 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.std::__1::vector.31"* %140 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = sub i64 %144, %146
  %148 = ashr exact i64 %147, 5
  %149 = icmp eq i64 %147, 0
  br i1 %149, label %195, label %150

150:                                              ; preds = %136
  %151 = icmp ugt i64 %148, 576460752303423487
  br i1 %151, label %152, label %154

152:                                              ; preds = %150
  %153 = bitcast %"class.std::__1::vector.31"* %139 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %153) #11
  unreachable

154:                                              ; preds = %150
  %155 = tail call i8* @_Znwm(i64 %147) #12
  %156 = bitcast i8* %155 to %"struct.net::DnsOverHttpsServerConfig"*
  %157 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13, i32 0, i32 1
  %158 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %157 to i8**
  store i8* %155, i8** %158, align 8
  %159 = bitcast %"class.std::__1::vector.31"* %139 to i8**
  store i8* %155, i8** %159, align 8
  %160 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %156, i64 %148
  %161 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  store %"struct.net::DnsOverHttpsServerConfig"* %160, %"struct.net::DnsOverHttpsServerConfig"** %161, align 8
  %162 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %140, i64 0, i32 0, i32 0
  %163 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %162, align 8
  %164 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %142, align 8
  %165 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %157 to i64*
  %166 = ptrtoint i8* %155 to i64
  %167 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %163, %164
  br i1 %167, label %193, label %168

168:                                              ; preds = %154, %184
  %169 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %189, %184 ], [ %156, %154 ]
  %170 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %188, %184 ], [ %163, %154 ]
  %171 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %168
  %176 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %169 to i8*
  %177 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %170 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* align 8 %177, i64 24, i1 false) #10
  br label %184

178:                                              ; preds = %168
  %179 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %169, i64 0, i32 0
  %180 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load i8*, i8** %180, align 8
  %182 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %183 = load i64, i64* %182, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %179, i8* %181, i64 %183) #10
  br label %184

184:                                              ; preds = %178, %175
  %185 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %169, i64 0, i32 1
  %186 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %170, i64 0, i32 1
  %187 = load i8, i8* %186, align 8, !range !2
  store i8 %187, i8* %185, align 8
  %188 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %170, i64 1
  %189 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %169, i64 1
  %190 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %188, %164
  br i1 %190, label %191, label %168

191:                                              ; preds = %184
  %192 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %189 to i64
  br label %193

193:                                              ; preds = %191, %154
  %194 = phi i64 [ %166, %154 ], [ %192, %191 ]
  store i64 %194, i64* %165, align 8
  br label %195

195:                                              ; preds = %136, %193
  %196 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 14
  %197 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 14
  %198 = bitcast i32* %196 to i8*
  %199 = bitcast i32* %197 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %198, i8* align 8 %199, i64 5, i1 false)
  %200 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16
  %201 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16
  %202 = bitcast %"class.std::__1::vector.6"* %200 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %202, i8 0, i64 24, i1 false) #10
  %203 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16, i32 0, i32 1
  %204 = bitcast %"class.std::__1::basic_string"** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.std::__1::vector.6"* %201 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = sub i64 %205, %207
  %209 = sdiv exact i64 %208, 24
  %210 = icmp eq i64 %208, 0
  br i1 %210, label %252, label %211

211:                                              ; preds = %195
  %212 = icmp ugt i64 %209, 768614336404564650
  br i1 %212, label %213, label %215

213:                                              ; preds = %211
  %214 = bitcast %"class.std::__1::vector.6"* %200 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %214) #11
  unreachable

215:                                              ; preds = %211
  %216 = tail call i8* @_Znwm(i64 %208) #12
  %217 = bitcast i8* %216 to %"class.std::__1::basic_string"*
  %218 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16, i32 0, i32 1
  %219 = bitcast %"class.std::__1::basic_string"** %218 to i8**
  store i8* %216, i8** %219, align 8
  %220 = bitcast %"class.std::__1::vector.6"* %200 to i8**
  store i8* %216, i8** %220, align 8
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %217, i64 %209
  %222 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %221, %"class.std::__1::basic_string"** %222, align 8
  %223 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %201, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %223, align 8
  %225 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %203, align 8
  %226 = bitcast %"class.std::__1::basic_string"** %218 to i64*
  %227 = ptrtoint i8* %216 to i64
  %228 = icmp eq %"class.std::__1::basic_string"* %224, %225
  br i1 %228, label %250, label %229

229:                                              ; preds = %215, %244
  %230 = phi %"class.std::__1::basic_string"* [ %246, %244 ], [ %217, %215 ]
  %231 = phi %"class.std::__1::basic_string"* [ %245, %244 ], [ %224, %215 ]
  %232 = bitcast %"class.std::__1::basic_string"* %231 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %233 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %232, i64 0, i32 1, i32 0
  %234 = load i8, i8* %233, align 1
  %235 = icmp slt i8 %234, 0
  br i1 %235, label %239, label %236

236:                                              ; preds = %229
  %237 = bitcast %"class.std::__1::basic_string"* %230 to i8*
  %238 = bitcast %"class.std::__1::basic_string"* %231 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %237, i8* align 8 %238, i64 24, i1 false) #10
  br label %244

239:                                              ; preds = %229
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %231, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  %242 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %231, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %243 = load i64, i64* %242, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %230, i8* %241, i64 %243) #10
  br label %244

244:                                              ; preds = %239, %236
  %245 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %231, i64 1
  %246 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %230, i64 1
  %247 = icmp eq %"class.std::__1::basic_string"* %245, %225
  br i1 %247, label %248, label %229

248:                                              ; preds = %244
  %249 = ptrtoint %"class.std::__1::basic_string"* %246 to i64
  br label %250

250:                                              ; preds = %248, %215
  %251 = phi i64 [ %227, %215 ], [ %249, %248 ]
  store i64 %251, i64* %226, align 8
  br label %252

252:                                              ; preds = %195, %250
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9DnsConfigC2EOS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* nocapture dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::DnsConfig"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = bitcast %"struct.net::DnsConfig"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.net::DnsConfig"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.net::IPEndPoint"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.net::IPEndPoint"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.net::IPEndPoint"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::IPEndPoint"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.net::DnsConfig"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10
  %18 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 1
  %20 = load i8, i8* %19, align 8, !range !2
  store i8 %20, i8* %18, align 8
  %21 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 2
  %23 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #10
  %25 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3
  %26 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3
  %27 = bitcast %"class.std::__1::vector.6"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #10
  %28 = bitcast %"class.std::__1::vector.6"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.6"* %25 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string"** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.std::__1::basic_string"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"class.std::__1::basic_string"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast %"class.std::__1::vector.6"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #10
  %42 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4
  %43 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4
  %44 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unordered_map"* %43 to i64*
  %46 = load i64, i64* %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %44, align 8
  %47 = bitcast %"class.std::__1::unordered_map"* %42 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %50 = load i64, i64* %48, align 8
  store i64 %50, i64* %49, align 8
  store i64 0, i64* %48, align 8
  %51 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0, i32 1
  %52 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4, i32 0, i32 1
  %53 = bitcast %"class.std::__1::__compressed_pair.21"* %52 to i64*
  %54 = bitcast %"class.std::__1::__compressed_pair.21"* %51 to i64*
  %55 = load i64, i64* %53, align 8
  store i64 %55, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0, i32 3
  %60 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4, i32 0, i32 3
  %61 = bitcast %"class.std::__1::__compressed_pair.28"* %60 to i32*
  %62 = bitcast %"class.std::__1::__compressed_pair.28"* %59 to i32*
  %63 = load i32, i32* %61, align 4
  store i32 %63, i32* %62, align 8
  %64 = icmp eq i64 %58, 0
  br i1 %64, label %87, label %65

65:                                               ; preds = %2
  %66 = inttoptr i64 %55 to %"struct.std::__1::__hash_node_base"*
  %67 = getelementptr inbounds %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.21"* %51, i64 0, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 1
  %69 = bitcast %"struct.std::__1::__hash_node_base"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = load i64, i64* %49, align 8
  %72 = tail call i64 @llvm.ctpop.i64(i64 %71) #10, !range !3
  %73 = icmp ugt i64 %72, 1
  br i1 %73, label %77, label %74

74:                                               ; preds = %65
  %75 = add i64 %71, -1
  %76 = and i64 %75, %70
  br label %81

77:                                               ; preds = %65
  %78 = icmp ult i64 %70, %71
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = urem i64 %70, %71
  br label %81

81:                                               ; preds = %79, %77, %74
  %82 = phi i64 [ %76, %74 ], [ %80, %79 ], [ %70, %77 ]
  %83 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %83, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %84, i64 %82
  store %"struct.std::__1::__hash_node_base"* %67, %"struct.std::__1::__hash_node_base"** %85, align 8
  %86 = bitcast %"class.std::__1::__compressed_pair.21"* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #10
  br label %87

87:                                               ; preds = %2, %81
  %88 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 5
  %89 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 26, i1 false)
  %90 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13
  %91 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13
  %92 = bitcast %"class.std::__1::vector.31"* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 24, i1 false) #10
  %93 = bitcast %"class.std::__1::vector.31"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.std::__1::vector.31"* %90 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13, i32 0, i32 1
  %97 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13, i32 0, i32 1
  %100 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %102 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %104 to i64*
  store i64 %103, i64* %105, align 8
  %106 = bitcast %"class.std::__1::vector.31"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false) #10
  %107 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 14
  %108 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 14
  %109 = bitcast i32* %107 to i8*
  %110 = bitcast i32* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 5, i1 false)
  %111 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16
  %112 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16
  %113 = bitcast %"class.std::__1::vector.6"* %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 24, i1 false) #10
  %114 = bitcast %"class.std::__1::vector.6"* %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.std::__1::vector.6"* %111 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16, i32 0, i32 1
  %118 = bitcast %"class.std::__1::basic_string"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16, i32 0, i32 1
  %121 = bitcast %"class.std::__1::basic_string"** %120 to i64*
  store i64 %119, i64* %121, align 8
  %122 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %123 = bitcast %"class.std::__1::basic_string"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %126 = bitcast %"class.std::__1::basic_string"** %125 to i64*
  store i64 %124, i64* %126, align 8
  %127 = bitcast %"class.std::__1::vector.6"* %112 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9DnsConfigD2Ev(%"struct.net::DnsConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16
  %3 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.6"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %1, %26
  %29 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13
  %30 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %29, i64 0, i32 0, i32 0
  %31 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %30, align 8
  %32 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %31, null
  br i1 %32, label %55, label %33

33:                                               ; preds = %28
  %34 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %31 to i8*
  %35 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13, i32 0, i32 1
  %36 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %35, align 8
  %37 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %36, %31
  br i1 %37, label %53, label %38

38:                                               ; preds = %33, %48
  %39 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %40, %48 ], [ %36, %33 ]
  %40 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %39, i64 -1
  %41 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %45, %38
  %49 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %40, %31
  br i1 %49, label %50, label %38

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::vector.31"* %29 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %33
  %54 = phi i8* [ %52, %50 ], [ %34, %33 ]
  store %"struct.net::DnsOverHttpsServerConfig"* %31, %"struct.net::DnsOverHttpsServerConfig"** %35, align 8
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %28, %53
  %56 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %76, label %59

59:                                               ; preds = %55, %73
  %60 = phi %"struct.std::__1::__hash_node_base"* [ %62, %73 ], [ %57, %55 ]
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %60, i64 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %60, i64 2
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %60, i64 6
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %65) #10
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %59
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i8**
  %72 = load i8*, i8** %71, align 8
  tail call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %70, %59
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i8*
  tail call void @_ZdlPv(i8* %74) #12
  %75 = icmp eq %"struct.std::__1::__hash_node_base"* %62, null
  br i1 %75, label %76, label %59

76:                                               ; preds = %73, %55
  %77 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %77, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %77, align 8
  %79 = icmp eq %"struct.std::__1::__hash_node_base"** %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = bitcast %"struct.std::__1::__hash_node_base"** %78 to i8*
  tail call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %76, %80
  %83 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3
  %84 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %83, i64 0, i32 0, i32 0
  %85 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %84, align 8
  %86 = icmp eq %"class.std::__1::basic_string"* %85, null
  br i1 %86, label %109, label %87

87:                                               ; preds = %82
  %88 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  %89 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3, i32 0, i32 1
  %90 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %89, align 8
  %91 = icmp eq %"class.std::__1::basic_string"* %90, %85
  br i1 %91, label %107, label %92

92:                                               ; preds = %87, %102
  %93 = phi %"class.std::__1::basic_string"* [ %94, %102 ], [ %90, %87 ]
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 -1
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  tail call void @_ZdlPv(i8* %101) #12
  br label %102

102:                                              ; preds = %99, %92
  %103 = icmp eq %"class.std::__1::basic_string"* %94, %85
  br i1 %103, label %104, label %92

104:                                              ; preds = %102
  %105 = bitcast %"class.std::__1::vector.6"* %83 to i8**
  %106 = load i8*, i8** %105, align 8
  br label %107

107:                                              ; preds = %104, %87
  %108 = phi i8* [ %106, %104 ], [ %88, %87 ]
  store %"class.std::__1::basic_string"* %85, %"class.std::__1::basic_string"** %89, align 8
  tail call void @_ZdlPv(i8* %108) #12
  br label %109

109:                                              ; preds = %82, %107
  %110 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 2
  %111 = bitcast %"class.std::__1::basic_string"* %110 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  tail call void @_ZdlPv(i8* %117) #12
  br label %118

118:                                              ; preds = %109, %115
  %119 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %119, align 8
  %121 = icmp eq %"class.net::IPEndPoint"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0, i32 0, i32 1
  %124 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %123, align 8
  %125 = icmp eq %"class.net::IPEndPoint"* %124, %120
  br i1 %125, label %132, label %126

126:                                              ; preds = %122, %126
  %127 = phi %"class.net::IPEndPoint"* [ %128, %126 ], [ %124, %122 ]
  %128 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %127, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %128) #10
  %129 = icmp eq %"class.net::IPEndPoint"* %128, %120
  br i1 %129, label %130, label %126

130:                                              ; preds = %126
  %131 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %119, align 8
  br label %132

132:                                              ; preds = %130, %122
  %133 = phi %"class.net::IPEndPoint"* [ %131, %130 ], [ %120, %122 ]
  store %"class.net::IPEndPoint"* %120, %"class.net::IPEndPoint"** %123, align 8
  %134 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %134) #12
  br label %135

135:                                              ; preds = %118, %132
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(208) %"struct.net::DnsConfig"* @_ZN3net9DnsConfigaSERKS0_(%"struct.net::DnsConfig"* returned, %"struct.net::DnsConfig"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.net::DnsConfig"* %0, %1
  br i1 %3, label %43, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %6, align 8
  %8 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %8, align 8
  tail call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %5, %"class.net::IPEndPoint"* %7, %"class.net::IPEndPoint"* %9) #10
  %10 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 1
  store i8 %11, i8* %12, align 8
  %13 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 2
  %15 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %18, label %33, label %23

23:                                               ; preds = %4
  br i1 %22, label %27, label %24

24:                                               ; preds = %23
  %25 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #10
  br label %53

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %13, i8* %29, i64 %31) #10
  br label %53

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %39 = zext i8 %21 to i64
  %40 = select i1 %22, i8* %35, i8* %38
  %41 = select i1 %22, i64 %37, i64 %39
  %42 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %13, i8* %40, i64 %41) #10
  br label %53

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 1
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 1
  store i8 %45, i8* %46, align 8
  %47 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 5
  %48 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 26, i1 false)
  %49 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 14
  %50 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 14
  %51 = bitcast i32* %49 to i8*
  %52 = bitcast i32* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 5, i1 false)
  br label %83

53:                                               ; preds = %24, %27, %33
  %54 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3
  %55 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3, i32 0, i32 0
  %56 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %55, align 8
  %57 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3, i32 0, i32 1
  %58 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %57, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.6"* %54, %"class.std::__1::basic_string"* %56, %"class.std::__1::basic_string"* %58) #10
  %59 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0
  %60 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4, i32 0, i32 3, i32 0, i32 0
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0, i32 3, i32 0, i32 0
  %64 = bitcast float* %63 to i32*
  store i32 %62, i32* %64, align 4
  %65 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %65, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEEEEvT_SU_(%"class.std::__1::__hash_table"* %59, %"struct.std::__1::__hash_node_base"* %66, %"struct.std::__1::__hash_node_base"* null) #10
  %67 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 5
  %68 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 26, i1 false)
  %69 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13
  %70 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13, i32 0, i32 0
  %71 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %70, align 8
  %72 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13, i32 0, i32 1
  %73 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %72, align 8
  tail call void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.31"* %69, %"struct.net::DnsOverHttpsServerConfig"* %71, %"struct.net::DnsOverHttpsServerConfig"* %73) #10
  %74 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 14
  %75 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 14
  %76 = bitcast i32* %74 to i8*
  %77 = bitcast i32* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 5, i1 false)
  %78 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16
  %79 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16, i32 0, i32 0
  %80 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %79, align 8
  %81 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16, i32 0, i32 1
  %82 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %81, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.6"* %78, %"class.std::__1::basic_string"* %80, %"class.std::__1::basic_string"* %82) #10
  br label %83

83:                                               ; preds = %43, %53
  ret %"struct.net::DnsConfig"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(208) %"struct.net::DnsConfig"* @_ZN3net9DnsConfigaSEOS0_(%"struct.net::DnsConfig"* returned, %"struct.net::DnsConfig"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  %5 = icmp eq %"class.net::IPEndPoint"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %7, align 8
  %9 = icmp eq %"class.net::IPEndPoint"* %8, %4
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.net::IPEndPoint"* [ %12, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %11, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %12) #10
  %13 = icmp eq %"class.net::IPEndPoint"* %12, %4
  br i1 %13, label %14, label %10

14:                                               ; preds = %10
  %15 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  br label %16

16:                                               ; preds = %14, %6
  %17 = phi %"class.net::IPEndPoint"* [ %15, %14 ], [ %4, %6 ]
  store %"class.net::IPEndPoint"* %4, %"class.net::IPEndPoint"** %7, align 8
  %18 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %18) #12
  %19 = bitcast %"struct.net::DnsConfig"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #10
  br label %20

20:                                               ; preds = %2, %16
  %21 = bitcast %"struct.net::DnsConfig"* %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"struct.net::DnsConfig"* %0 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.net::IPEndPoint"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.net::IPEndPoint"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.net::IPEndPoint"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.net::IPEndPoint"** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"struct.net::DnsConfig"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #10
  %35 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 1
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 1
  store i8 %36, i8* %37, align 8
  %38 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 2
  %39 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 2
  %40 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %20
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #12
  br label %47

47:                                               ; preds = %20, %44
  %48 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %49 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #10
  %50 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 0, i8* %51, align 1
  store i8 0, i8* %49, align 1
  %52 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3
  %53 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3
  %54 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %52, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %54, align 8
  %56 = icmp eq %"class.std::__1::basic_string"* %55, null
  br i1 %56, label %80, label %57

57:                                               ; preds = %47
  %58 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %59 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3, i32 0, i32 1
  %60 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %59, align 8
  %61 = icmp eq %"class.std::__1::basic_string"* %60, %55
  br i1 %61, label %77, label %62

62:                                               ; preds = %57, %72
  %63 = phi %"class.std::__1::basic_string"* [ %64, %72 ], [ %60, %57 ]
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 -1
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %69, %62
  %73 = icmp eq %"class.std::__1::basic_string"* %64, %55
  br i1 %73, label %74, label %62

74:                                               ; preds = %72
  %75 = bitcast %"class.std::__1::vector.6"* %52 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %74, %57
  %78 = phi i8* [ %76, %74 ], [ %58, %57 ]
  store %"class.std::__1::basic_string"* %55, %"class.std::__1::basic_string"** %59, align 8
  tail call void @_ZdlPv(i8* %78) #12
  %79 = bitcast %"class.std::__1::vector.6"* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #10
  br label %80

80:                                               ; preds = %47, %77
  %81 = bitcast %"class.std::__1::vector.6"* %53 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.std::__1::vector.6"* %52 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3, i32 0, i32 1
  %85 = bitcast %"class.std::__1::basic_string"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3, i32 0, i32 1
  %88 = bitcast %"class.std::__1::basic_string"** %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %90 = bitcast %"class.std::__1::basic_string"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast %"class.std::__1::basic_string"** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = bitcast %"class.std::__1::vector.6"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #10
  %95 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4, i32 0
  %96 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE13__move_assignERSM_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table"* %96, %"class.std::__1::__hash_table"* dereferenceable(40) %95) #10
  %97 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 5
  %98 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 26, i1 false)
  %99 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13
  %100 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13
  %101 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %99, i64 0, i32 0, i32 0
  %102 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %101, align 8
  %103 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %102, null
  br i1 %103, label %127, label %104

104:                                              ; preds = %80
  %105 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %102 to i8*
  %106 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13, i32 0, i32 1
  %107 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %106, align 8
  %108 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %107, %102
  br i1 %108, label %124, label %109

109:                                              ; preds = %104, %119
  %110 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %111, %119 ], [ %107, %104 ]
  %111 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %110, i64 -1
  %112 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %111 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  tail call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %116, %109
  %120 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %111, %102
  br i1 %120, label %121, label %109

121:                                              ; preds = %119
  %122 = bitcast %"class.std::__1::vector.31"* %99 to i8**
  %123 = load i8*, i8** %122, align 8
  br label %124

124:                                              ; preds = %121, %104
  %125 = phi i8* [ %123, %121 ], [ %105, %104 ]
  store %"struct.net::DnsOverHttpsServerConfig"* %102, %"struct.net::DnsOverHttpsServerConfig"** %106, align 8
  tail call void @_ZdlPv(i8* %125) #12
  %126 = bitcast %"class.std::__1::vector.31"* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #10
  br label %127

127:                                              ; preds = %80, %124
  %128 = bitcast %"class.std::__1::vector.31"* %100 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::vector.31"* %99 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13, i32 0, i32 1
  %132 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13, i32 0, i32 1
  %135 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %137 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %140 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = bitcast %"class.std::__1::vector.31"* %100 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 24, i1 false) #10
  %142 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 14
  %143 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 14
  %144 = bitcast i32* %142 to i8*
  %145 = bitcast i32* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 5, i1 false)
  %146 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16
  %147 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16
  %148 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %146, i64 0, i32 0, i32 0
  %149 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %148, align 8
  %150 = icmp eq %"class.std::__1::basic_string"* %149, null
  br i1 %150, label %174, label %151

151:                                              ; preds = %127
  %152 = bitcast %"class.std::__1::basic_string"* %149 to i8*
  %153 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16, i32 0, i32 1
  %154 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %153, align 8
  %155 = icmp eq %"class.std::__1::basic_string"* %154, %149
  br i1 %155, label %171, label %156

156:                                              ; preds = %151, %166
  %157 = phi %"class.std::__1::basic_string"* [ %158, %166 ], [ %154, %151 ]
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %157, i64 -1
  %159 = bitcast %"class.std::__1::basic_string"* %158 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  tail call void @_ZdlPv(i8* %165) #12
  br label %166

166:                                              ; preds = %163, %156
  %167 = icmp eq %"class.std::__1::basic_string"* %158, %149
  br i1 %167, label %168, label %156

168:                                              ; preds = %166
  %169 = bitcast %"class.std::__1::vector.6"* %146 to i8**
  %170 = load i8*, i8** %169, align 8
  br label %171

171:                                              ; preds = %168, %151
  %172 = phi i8* [ %170, %168 ], [ %152, %151 ]
  store %"class.std::__1::basic_string"* %149, %"class.std::__1::basic_string"** %153, align 8
  tail call void @_ZdlPv(i8* %172) #12
  %173 = bitcast %"class.std::__1::vector.6"* %146 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 24, i1 false) #10
  br label %174

174:                                              ; preds = %127, %171
  %175 = bitcast %"class.std::__1::vector.6"* %147 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"class.std::__1::vector.6"* %146 to i64*
  store i64 %176, i64* %177, align 8
  %178 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16, i32 0, i32 1
  %179 = bitcast %"class.std::__1::basic_string"** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16, i32 0, i32 1
  %182 = bitcast %"class.std::__1::basic_string"** %181 to i64*
  store i64 %180, i64* %182, align 8
  %183 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %184 = bitcast %"class.std::__1::basic_string"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %187 = bitcast %"class.std::__1::basic_string"** %186 to i64*
  store i64 %185, i64* %187, align 8
  %188 = bitcast %"class.std::__1::vector.6"* %147 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 24, i1 false) #10
  ret %"struct.net::DnsConfig"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net9DnsConfig6EqualsERKS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK3net9DnsConfig17EqualsIgnoreHostsERKS0_(%"struct.net::DnsConfig"* %0, %"struct.net::DnsConfig"* dereferenceable(208) %1)
  br i1 %3, label %4, label %8

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4
  %7 = tail call zeroext i1 @_ZNSt3__1eqINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS8_9IPAddressENS8_15DnsHostsKeyHashENS_8equal_toISA_EENS5_INS1_IKSA_SB_EEEEEEbRKNS_13unordered_mapIT_T0_T1_T2_T3_EESQ_(%"class.std::__1::unordered_map"* dereferenceable(40) %5, %"class.std::__1::unordered_map"* dereferenceable(40) %6)
  br label %8

8:                                                ; preds = %4, %2
  %9 = phi i1 [ false, %2 ], [ %7, %4 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net9DnsConfig17EqualsIgnoreHostsERKS0_(%"struct.net::DnsConfig"* nocapture readonly, %"struct.net::DnsConfig"* nocapture readonly dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.net::IPEndPoint"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.net::DnsConfig"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.net::IPEndPoint"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.net::DnsConfig"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %8, %14
  %16 = inttoptr i64 %7 to %"class.net::IPEndPoint"*
  %17 = inttoptr i64 %5 to %"class.net::IPEndPoint"*
  br i1 %15, label %18, label %334

18:                                               ; preds = %2
  %19 = icmp eq %"class.net::IPEndPoint"* %16, %17
  br i1 %19, label %30, label %20

20:                                               ; preds = %18
  %21 = inttoptr i64 %13 to %"class.net::IPEndPoint"*
  br label %22

22:                                               ; preds = %20, %26
  %23 = phi %"class.net::IPEndPoint"* [ %28, %26 ], [ %21, %20 ]
  %24 = phi %"class.net::IPEndPoint"* [ %27, %26 ], [ %16, %20 ]
  %25 = tail call zeroext i1 @_ZNK3net10IPEndPointeqERKS0_(%"class.net::IPEndPoint"* %24, %"class.net::IPEndPoint"* dereferenceable(20) %23) #10
  br i1 %25, label %26, label %334

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %24, i64 1
  %28 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %23, i64 1
  %29 = icmp eq %"class.net::IPEndPoint"* %27, %17
  br i1 %29, label %30, label %22

30:                                               ; preds = %26, %18
  %31 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %32, %34
  br i1 %35, label %36, label %334

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 2
  %38 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 2
  %39 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %41 to i64
  %46 = select i1 %42, i64 %44, i64 %45
  %47 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %49 to i64
  %54 = select i1 %50, i64 %52, i64 %53
  %55 = icmp eq i64 %46, %54
  br i1 %55, label %56, label %334

56:                                               ; preds = %36
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %60 = select i1 %42, i8* %58, i8* %59
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %64 = select i1 %50, i8* %62, i8* %63
  %65 = icmp eq i64 %46, 0
  br i1 %42, label %72, label %66

66:                                               ; preds = %56
  br i1 %65, label %88, label %67

67:                                               ; preds = %66
  %68 = ptrtoint i8* %58 to i64
  %69 = trunc i64 %68 to i8
  %70 = load i8, i8* %64, align 1
  %71 = icmp eq i8 %70, %69
  br i1 %71, label %73, label %334

72:                                               ; preds = %56
  br i1 %65, label %88, label %85

73:                                               ; preds = %67, %80
  %74 = phi i64 [ %77, %80 ], [ %45, %67 ]
  %75 = phi i8* [ %78, %80 ], [ %59, %67 ]
  %76 = phi i8* [ %81, %80 ], [ %64, %67 ]
  %77 = add i64 %74, -1
  %78 = getelementptr inbounds i8, i8* %75, i64 1
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %88, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds i8, i8* %76, i64 1
  %82 = load i8, i8* %78, align 1
  %83 = load i8, i8* %81, align 1
  %84 = icmp eq i8 %82, %83
  br i1 %84, label %73, label %334

85:                                               ; preds = %72
  %86 = tail call i32 @bcmp(i8* %60, i8* %64, i64 %46) #10
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %334

88:                                               ; preds = %73, %66, %72, %85
  %89 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3
  %90 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3
  %91 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3, i32 0, i32 1
  %92 = bitcast %"class.std::__1::basic_string"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.std::__1::vector.6"* %89 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3, i32 0, i32 1
  %98 = bitcast %"class.std::__1::basic_string"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::vector.6"* %90 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %99, %101
  %103 = icmp eq i64 %96, %102
  %104 = inttoptr i64 %95 to %"class.std::__1::basic_string"*
  %105 = inttoptr i64 %93 to %"class.std::__1::basic_string"*
  br i1 %103, label %106, label %334

106:                                              ; preds = %88
  %107 = icmp eq %"class.std::__1::basic_string"* %104, %105
  br i1 %107, label %166, label %108

108:                                              ; preds = %106
  %109 = inttoptr i64 %101 to %"class.std::__1::basic_string"*
  br label %110

110:                                              ; preds = %108, %162
  %111 = phi %"class.std::__1::basic_string"* [ %164, %162 ], [ %109, %108 ]
  %112 = phi %"class.std::__1::basic_string"* [ %163, %162 ], [ %104, %108 ]
  %113 = bitcast %"class.std::__1::basic_string"* %112 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = zext i8 %115 to i64
  %120 = select i1 %116, i64 %118, i64 %119
  %121 = bitcast %"class.std::__1::basic_string"* %111 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = zext i8 %123 to i64
  %128 = select i1 %124, i64 %126, i64 %127
  %129 = icmp eq i64 %120, %128
  br i1 %129, label %130, label %334

130:                                              ; preds = %110
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = bitcast %"class.std::__1::basic_string"* %112 to i8*
  %134 = select i1 %116, i8* %132, i8* %133
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = bitcast %"class.std::__1::basic_string"* %111 to i8*
  %138 = select i1 %124, i8* %136, i8* %137
  %139 = icmp eq i64 %120, 0
  br i1 %116, label %146, label %140

140:                                              ; preds = %130
  br i1 %139, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %132 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %138, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %334

146:                                              ; preds = %130
  br i1 %139, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %119, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %133, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %138, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %334

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %134, i8* %138, i64 %120) #10
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %334

162:                                              ; preds = %147, %159, %146, %140
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %112, i64 1
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %111, i64 1
  %165 = icmp eq %"class.std::__1::basic_string"* %163, %105
  br i1 %165, label %166, label %110

166:                                              ; preds = %162, %106
  %167 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 5
  %168 = load i8, i8* %167, align 8, !range !2
  %169 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 5
  %170 = load i8, i8* %169, align 8, !range !2
  %171 = icmp eq i8 %168, %170
  br i1 %171, label %172, label %334

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 6
  %174 = load i8, i8* %173, align 1, !range !2
  %175 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 6
  %176 = load i8, i8* %175, align 1, !range !2
  %177 = icmp eq i8 %174, %176
  br i1 %177, label %178, label %334

178:                                              ; preds = %172
  %179 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 7
  %180 = load i32, i32* %179, align 4
  %181 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 7
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %180, %182
  br i1 %183, label %184, label %334

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 8, i32 0
  %186 = load i64, i64* %185, align 8
  %187 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 8, i32 0
  %188 = load i64, i64* %187, align 8
  %189 = icmp eq i64 %188, %186
  br i1 %189, label %190, label %334

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 9
  %192 = load i32, i32* %191, align 8
  %193 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 9
  %194 = load i32, i32* %193, align 8
  %195 = icmp eq i32 %192, %194
  br i1 %195, label %196, label %334

196:                                              ; preds = %190
  %197 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 10
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 10
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %198, %200
  br i1 %201, label %202, label %334

202:                                              ; preds = %196
  %203 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 11
  %204 = load i8, i8* %203, align 8, !range !2
  %205 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 11
  %206 = load i8, i8* %205, align 8, !range !2
  %207 = icmp eq i8 %204, %206
  br i1 %207, label %208, label %334

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 12
  %210 = load i8, i8* %209, align 1, !range !2
  %211 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 12
  %212 = load i8, i8* %211, align 1, !range !2
  %213 = icmp eq i8 %210, %212
  br i1 %213, label %214, label %334

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13
  %216 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13
  %217 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13, i32 0, i32 1
  %218 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = bitcast %"class.std::__1::vector.31"* %215 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = sub i64 %219, %221
  %223 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13, i32 0, i32 1
  %224 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.std::__1::vector.31"* %216 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = sub i64 %225, %227
  %229 = icmp eq i64 %222, %228
  %230 = inttoptr i64 %221 to %"struct.net::DnsOverHttpsServerConfig"*
  %231 = inttoptr i64 %219 to %"struct.net::DnsOverHttpsServerConfig"*
  br i1 %229, label %232, label %334

232:                                              ; preds = %214
  %233 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %230, %231
  br i1 %233, label %244, label %234

234:                                              ; preds = %232
  %235 = inttoptr i64 %227 to %"struct.net::DnsOverHttpsServerConfig"*
  br label %236

236:                                              ; preds = %234, %240
  %237 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %242, %240 ], [ %235, %234 ]
  %238 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %241, %240 ], [ %230, %234 ]
  %239 = tail call zeroext i1 @_ZNK3net24DnsOverHttpsServerConfigeqERKS0_(%"struct.net::DnsOverHttpsServerConfig"* %238, %"struct.net::DnsOverHttpsServerConfig"* dereferenceable(32) %237) #10
  br i1 %239, label %240, label %334

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %238, i64 1
  %242 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %237, i64 1
  %243 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %241, %231
  br i1 %243, label %244, label %236

244:                                              ; preds = %240, %232
  %245 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 14
  %246 = load i32, i32* %245, align 8
  %247 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 14
  %248 = load i32, i32* %247, align 8
  %249 = icmp eq i32 %246, %248
  br i1 %249, label %250, label %334

250:                                              ; preds = %244
  %251 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 15
  %252 = load i8, i8* %251, align 4, !range !2
  %253 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 15
  %254 = load i8, i8* %253, align 4, !range !2
  %255 = icmp eq i8 %252, %254
  br i1 %255, label %256, label %334

256:                                              ; preds = %250
  %257 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16
  %258 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16
  %259 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16, i32 0, i32 1
  %260 = bitcast %"class.std::__1::basic_string"** %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = bitcast %"class.std::__1::vector.6"* %257 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = sub i64 %261, %263
  %265 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16, i32 0, i32 1
  %266 = bitcast %"class.std::__1::basic_string"** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"class.std::__1::vector.6"* %258 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = sub i64 %267, %269
  %271 = icmp eq i64 %264, %270
  %272 = inttoptr i64 %263 to %"class.std::__1::basic_string"*
  %273 = inttoptr i64 %261 to %"class.std::__1::basic_string"*
  br i1 %271, label %274, label %334

274:                                              ; preds = %256
  %275 = icmp eq %"class.std::__1::basic_string"* %272, %273
  br i1 %275, label %334, label %276

276:                                              ; preds = %274
  %277 = inttoptr i64 %269 to %"class.std::__1::basic_string"*
  br label %278

278:                                              ; preds = %276, %330
  %279 = phi %"class.std::__1::basic_string"* [ %332, %330 ], [ %277, %276 ]
  %280 = phi %"class.std::__1::basic_string"* [ %331, %330 ], [ %272, %276 ]
  %281 = bitcast %"class.std::__1::basic_string"* %280 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  %283 = load i8, i8* %282, align 1
  %284 = icmp slt i8 %283, 0
  %285 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %280, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %286 = load i64, i64* %285, align 8
  %287 = zext i8 %283 to i64
  %288 = select i1 %284, i64 %286, i64 %287
  %289 = bitcast %"class.std::__1::basic_string"* %279 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %290 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %289, i64 0, i32 1, i32 0
  %291 = load i8, i8* %290, align 1
  %292 = icmp slt i8 %291, 0
  %293 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %279, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %294 = load i64, i64* %293, align 8
  %295 = zext i8 %291 to i64
  %296 = select i1 %292, i64 %294, i64 %295
  %297 = icmp eq i64 %288, %296
  br i1 %297, label %298, label %334

298:                                              ; preds = %278
  %299 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %280, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = load i8*, i8** %299, align 8
  %301 = bitcast %"class.std::__1::basic_string"* %280 to i8*
  %302 = select i1 %284, i8* %300, i8* %301
  %303 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %279, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load i8*, i8** %303, align 8
  %305 = bitcast %"class.std::__1::basic_string"* %279 to i8*
  %306 = select i1 %292, i8* %304, i8* %305
  %307 = icmp eq i64 %288, 0
  br i1 %284, label %314, label %308

308:                                              ; preds = %298
  br i1 %307, label %330, label %309

309:                                              ; preds = %308
  %310 = ptrtoint i8* %300 to i64
  %311 = trunc i64 %310 to i8
  %312 = load i8, i8* %306, align 1
  %313 = icmp eq i8 %312, %311
  br i1 %313, label %315, label %334

314:                                              ; preds = %298
  br i1 %307, label %330, label %327

315:                                              ; preds = %309, %322
  %316 = phi i64 [ %319, %322 ], [ %287, %309 ]
  %317 = phi i8* [ %320, %322 ], [ %301, %309 ]
  %318 = phi i8* [ %323, %322 ], [ %306, %309 ]
  %319 = add i64 %316, -1
  %320 = getelementptr inbounds i8, i8* %317, i64 1
  %321 = icmp eq i64 %319, 0
  br i1 %321, label %330, label %322

322:                                              ; preds = %315
  %323 = getelementptr inbounds i8, i8* %318, i64 1
  %324 = load i8, i8* %320, align 1
  %325 = load i8, i8* %323, align 1
  %326 = icmp eq i8 %324, %325
  br i1 %326, label %315, label %334

327:                                              ; preds = %314
  %328 = tail call i32 @bcmp(i8* %302, i8* %306, i64 %288) #10
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %334

330:                                              ; preds = %315, %327, %314, %308
  %331 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %280, i64 1
  %332 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %279, i64 1
  %333 = icmp eq %"class.std::__1::basic_string"* %331, %273
  br i1 %333, label %334, label %278

334:                                              ; preds = %22, %80, %110, %159, %141, %154, %236, %330, %327, %309, %278, %322, %67, %88, %36, %274, %256, %214, %2, %250, %244, %208, %202, %196, %190, %184, %178, %172, %166, %85, %30
  %335 = phi i1 [ false, %250 ], [ false, %244 ], [ false, %208 ], [ false, %202 ], [ false, %196 ], [ false, %190 ], [ false, %184 ], [ false, %178 ], [ false, %172 ], [ false, %166 ], [ false, %85 ], [ false, %30 ], [ false, %2 ], [ false, %214 ], [ false, %256 ], [ true, %274 ], [ false, %36 ], [ false, %88 ], [ false, %67 ], [ false, %322 ], [ true, %330 ], [ false, %278 ], [ false, %327 ], [ false, %309 ], [ false, %236 ], [ false, %154 ], [ false, %141 ], [ false, %159 ], [ false, %110 ], [ false, %80 ], [ false, %22 ]
  ret i1 %335
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__1eqINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS8_9IPAddressENS8_15DnsHostsKeyHashENS_8equal_toISA_EENS5_INS1_IKSA_SB_EEEEEEbRKNS_13unordered_mapIT_T0_T1_T2_T3_EESQ_(%"class.std::__1::unordered_map"* dereferenceable(40), %"class.std::__1::unordered_map"* dereferenceable(40)) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %90

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"struct.std::__1::__hash_node_base"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %90, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0
  br label %15

15:                                               ; preds = %13, %86
  %16 = phi i64 [ %11, %13 ], [ %88, %86 ]
  %17 = inttoptr i64 %16 to %"struct.std::__1::__hash_node"*
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %17, i64 0, i32 2, i32 0
  %19 = getelementptr inbounds %"struct.std::__1::pair.69", %"struct.std::__1::pair.69"* %18, i64 0, i32 0
  %20 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE4findISB_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEERKT_(%"class.std::__1::__hash_table"* %14, %"struct.std::__1::pair.70"* dereferenceable(32) %19) #10
  %21 = icmp eq %"struct.std::__1::__hash_node_base"* %20, null
  br i1 %21, label %90, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 2
  %24 = bitcast %"struct.std::__1::pair.69"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = bitcast %"struct.std::__1::__hash_node_base"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 3
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %34 to i64
  %40 = select i1 %35, i64 %38, i64 %39
  %41 = icmp eq i64 %31, %40
  br i1 %41, label %42, label %90

42:                                               ; preds = %22
  %43 = getelementptr inbounds %"struct.std::__1::pair.69", %"struct.std::__1::pair.69"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"struct.std::__1::pair.69"* %18 to i8*
  %46 = select i1 %27, i8* %44, i8* %45
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %23 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %23 to i8*
  %50 = select i1 %35, i8* %48, i8* %49
  %51 = icmp eq i64 %31, 0
  br i1 %27, label %58, label %52

52:                                               ; preds = %42
  br i1 %51, label %74, label %53

53:                                               ; preds = %52
  %54 = ptrtoint i8* %44 to i64
  %55 = trunc i64 %54 to i8
  %56 = load i8, i8* %50, align 1
  %57 = icmp eq i8 %56, %55
  br i1 %57, label %59, label %90

58:                                               ; preds = %42
  br i1 %51, label %74, label %71

59:                                               ; preds = %53, %66
  %60 = phi i64 [ %63, %66 ], [ %30, %53 ]
  %61 = phi i8* [ %64, %66 ], [ %45, %53 ]
  %62 = phi i8* [ %67, %66 ], [ %50, %53 ]
  %63 = add i64 %60, -1
  %64 = getelementptr inbounds i8, i8* %61, i64 1
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %74, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds i8, i8* %62, i64 1
  %68 = load i8, i8* %64, align 1
  %69 = load i8, i8* %67, align 1
  %70 = icmp eq i8 %68, %69
  br i1 %70, label %59, label %90

71:                                               ; preds = %58
  %72 = tail call i32 @bcmp(i8* %46, i8* %50, i64 %31) #10
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %90

74:                                               ; preds = %59, %71, %58, %52
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %17, i64 0, i32 2, i32 0, i32 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 5
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %76, %79
  br i1 %80, label %81, label %90

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %17, i64 0, i32 2, i32 0, i32 1
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 6
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to %"class.net::IPAddress"*
  %85 = tail call zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"* %82, %"class.net::IPAddress"* dereferenceable(17) %84) #10
  br i1 %85, label %86, label %90

86:                                               ; preds = %81
  %87 = inttoptr i64 %16 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %15

90:                                               ; preds = %15, %81, %74, %71, %22, %53, %86, %66, %8, %2
  %91 = phi i1 [ false, %2 ], [ true, %8 ], [ false, %66 ], [ false, %15 ], [ false, %81 ], [ false, %74 ], [ false, %71 ], [ false, %22 ], [ false, %53 ], [ true, %86 ]
  ret i1 %91
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net9DnsConfigeqERKS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK3net9DnsConfig17EqualsIgnoreHostsERKS0_(%"struct.net::DnsConfig"* %0, %"struct.net::DnsConfig"* dereferenceable(208) %1) #10
  br i1 %3, label %4, label %8

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4
  %7 = tail call zeroext i1 @_ZNSt3__1eqINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS8_9IPAddressENS8_15DnsHostsKeyHashENS_8equal_toISA_EENS5_INS1_IKSA_SB_EEEEEEbRKNS_13unordered_mapIT_T0_T1_T2_T3_EESQ_(%"class.std::__1::unordered_map"* dereferenceable(40) %5, %"class.std::__1::unordered_map"* dereferenceable(40) %6) #10
  br label %8

8:                                                ; preds = %2, %4
  %9 = phi i1 [ false, %2 ], [ %7, %4 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net9DnsConfigneERKS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK3net9DnsConfig17EqualsIgnoreHostsERKS0_(%"struct.net::DnsConfig"* %0, %"struct.net::DnsConfig"* dereferenceable(208) %1) #10
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4
  %7 = tail call zeroext i1 @_ZNSt3__1eqINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS8_9IPAddressENS8_15DnsHostsKeyHashENS_8equal_toISA_EENS5_INS1_IKSA_SB_EEEEEEbRKNS_13unordered_mapIT_T0_T1_T2_T3_EESQ_(%"class.std::__1::unordered_map"* dereferenceable(40) %5, %"class.std::__1::unordered_map"* dereferenceable(40) %6) #10
  %8 = xor i1 %7, true
  br label %9

9:                                                ; preds = %2, %4
  %10 = phi i1 [ true, %2 ], [ %8, %4 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9DnsConfig15CopyIgnoreHostsERKS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.net::DnsConfig"* %0, %1
  br i1 %3, label %43, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %6, align 8
  %8 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %8, align 8
  tail call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %5, %"class.net::IPEndPoint"* %7, %"class.net::IPEndPoint"* %9) #10
  %10 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 1
  store i8 %11, i8* %12, align 8
  %13 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 2
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %18, label %33, label %23

23:                                               ; preds = %4
  br i1 %22, label %27, label %24

24:                                               ; preds = %23
  %25 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #10
  br label %47

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %14, i8* %29, i64 %31) #10
  br label %47

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %39 = zext i8 %21 to i64
  %40 = select i1 %22, i8* %35, i8* %38
  %41 = select i1 %22, i64 %37, i64 %39
  %42 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %14, i8* %40, i64 %41) #10
  br label %47

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 1
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 1
  store i8 %45, i8* %46, align 8
  br label %53

47:                                               ; preds = %24, %27, %33
  %48 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3
  %49 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3, i32 0, i32 0
  %50 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %49, align 8
  %51 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3, i32 0, i32 1
  %52 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %51, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.6"* %48, %"class.std::__1::basic_string"* %50, %"class.std::__1::basic_string"* %52) #10
  br label %53

53:                                               ; preds = %43, %47
  %54 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 5
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 5
  store i8 %55, i8* %56, align 8
  %57 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 6
  %58 = load i8, i8* %57, align 1, !range !2
  %59 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 6
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 7
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 7
  store i32 %61, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 8, i32 0
  %64 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 8, i32 0
  %65 = load i64, i64* %63, align 8
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 9
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 9
  store i32 %67, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 10
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 10
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 11
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 11
  store i8 %73, i8* %74, align 8
  %75 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 12
  %76 = load i8, i8* %75, align 1, !range !2
  %77 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 12
  store i8 %76, i8* %77, align 1
  br i1 %3, label %95, label %78

78:                                               ; preds = %53
  %79 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13
  %80 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13, i32 0, i32 0
  %81 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %80, align 8
  %82 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13, i32 0, i32 1
  %83 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %82, align 8
  tail call void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.31"* %79, %"struct.net::DnsOverHttpsServerConfig"* %81, %"struct.net::DnsOverHttpsServerConfig"* %83) #10
  %84 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 14
  %85 = load i32, i32* %84, align 8
  %86 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 14
  store i32 %85, i32* %86, align 8
  %87 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 15
  %88 = load i8, i8* %87, align 4, !range !2
  %89 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 15
  store i8 %88, i8* %89, align 4
  %90 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16
  %91 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16, i32 0, i32 0
  %92 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %91, align 8
  %93 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16, i32 0, i32 1
  %94 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %93, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.6"* %90, %"class.std::__1::basic_string"* %92, %"class.std::__1::basic_string"* %94) #10
  br label %102

95:                                               ; preds = %53
  %96 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 14
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 14
  store i32 %97, i32* %98, align 8
  %99 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 15
  %100 = load i8, i8* %99, align 4, !range !2
  %101 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 15
  store i8 %100, i8* %101, align 4
  br label %102

102:                                              ; preds = %95, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net9DnsConfig7ToValueEv(%"class.base::Value"* noalias sret, %"struct.net::DnsConfig"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::Value", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = alloca %"class.base::Value", align 8
  %8 = alloca %"class.base::Value", align 8
  %9 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #10
  %10 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #10
  %11 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %3, i8 zeroext 7) #10
  %12 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %12, align 8
  %14 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %14, align 8
  %16 = icmp eq %"class.net::IPEndPoint"* %13, %15
  br i1 %16, label %22, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %49

22:                                               ; preds = %55, %2
  %23 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %3) #10
  %24 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp ne i8 %25, 0
  %27 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 19, i1 zeroext %26) #10
  %28 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 2
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %36 = select i1 %32, i8* %34, i8* %35
  %37 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %31 to i64
  %40 = select i1 %32, i64 %38, i64 %39
  %41 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i64 21, i8* %36, i64 %40) #10
  %42 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #10
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %5, i8 zeroext 7) #10
  %43 = call dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"* nonnull %3, %"class.base::Value"* nonnull dereferenceable(32) %5) #10
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #10
  %44 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3, i32 0, i32 0
  %45 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %44, align 8
  %46 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 3, i32 0, i32 1
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  %48 = icmp eq %"class.std::__1::basic_string"* %45, %47
  br i1 %48, label %58, label %112

49:                                               ; preds = %17, %55
  %50 = phi %"class.net::IPEndPoint"* [ %13, %17 ], [ %56, %55 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  call void @_ZNK3net10IPEndPoint8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.net::IPEndPoint"* %50) #10
  call void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #10
  %51 = load i8, i8* %20, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %49, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  %56 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %50, i64 1
  %57 = icmp eq %"class.net::IPEndPoint"* %56, %15
  br i1 %57, label %22, label %49

58:                                               ; preds = %112, %22
  %59 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %3) #10
  %60 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 5
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp ne i8 %61, 0
  %63 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i64 17, i1 zeroext %62) #10
  %64 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 6
  %65 = load i8, i8* %64, align 1, !range !2
  %66 = icmp ne i8 %65, 0
  %67 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i64 26, i1 zeroext %66) #10
  %68 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 7
  %69 = load i32, i32* %68, align 4
  %70 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i64 5, i32 %69) #10
  %71 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 8, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, -9223372036854775807
  %74 = icmp ult i64 %73, 2
  br i1 %74, label %78, label %75

75:                                               ; preds = %58
  %76 = sitofp i64 %72 to double
  %77 = fdiv double %76, 1.000000e+06
  br label %81

78:                                               ; preds = %58
  %79 = icmp slt i64 %72, 0
  %80 = select i1 %79, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %81

81:                                               ; preds = %75, %78
  %82 = phi double [ %80, %78 ], [ %77, %75 ]
  %83 = call %"class.base::Value"* @_ZN4base5Value12SetDoubleKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::Value"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 7, double %82) #10
  %84 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 9
  %85 = load i32, i32* %84, align 8
  %86 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i64 8, i32 %85) #10
  %87 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 10
  %88 = load i32, i32* %87, align 4
  %89 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i64 12, i32 %88) #10
  %90 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 11
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp ne i8 %91, 0
  %93 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i64 6, i1 zeroext %92) #10
  %94 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 12
  %95 = load i8, i8* %94, align 1, !range !2
  %96 = icmp ne i8 %95, 0
  %97 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i64 14, i1 zeroext %96) #10
  %98 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = trunc i64 %99 to i32
  %101 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i64 9, i32 %100) #10
  %102 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #10
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %6, i8 zeroext 7) #10
  %103 = call dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"* nonnull %3, %"class.base::Value"* nonnull dereferenceable(32) %6) #10
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #10
  %104 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13, i32 0, i32 0
  %105 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %104, align 8
  %106 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13, i32 0, i32 1
  %107 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %106, align 8
  %108 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %105, %107
  br i1 %108, label %128, label %109

109:                                              ; preds = %81
  %110 = bitcast %"class.base::Value"* %7 to i8*
  %111 = bitcast %"class.base::Value"* %7 to i8*
  br label %144

112:                                              ; preds = %22, %112
  %113 = phi %"class.std::__1::basic_string"* [ %126, %112 ], [ %45, %22 ]
  %114 = bitcast %"class.std::__1::basic_string"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  %120 = bitcast %"class.std::__1::basic_string"* %113 to i8*
  %121 = select i1 %117, i8* %119, i8* %120
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = zext i8 %116 to i64
  %125 = select i1 %117, i64 %123, i64 %124
  call void @_ZN4base5Value6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %3, i8* %121, i64 %125) #10
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 1
  %127 = icmp eq %"class.std::__1::basic_string"* %126, %47
  br i1 %127, label %58, label %112

128:                                              ; preds = %144, %81
  %129 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %3) #10
  %130 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 14
  %131 = load i32, i32* %130, align 8
  %132 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i64 15, i32 %131) #10
  %133 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 15
  %134 = load i8, i8* %133, align 4, !range !2
  %135 = icmp ne i8 %134, 0
  %136 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0), i64 28, i1 zeroext %135) #10
  %137 = bitcast %"class.base::Value"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %137) #10
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %8, i8 zeroext 7) #10
  %138 = call dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"* nonnull %3, %"class.base::Value"* nonnull dereferenceable(32) %8) #10
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %137) #10
  %139 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16, i32 0, i32 0
  %140 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %139, align 8
  %141 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 16, i32 0, i32 1
  %142 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %141, align 8
  %143 = icmp eq %"class.std::__1::basic_string"* %140, %142
  br i1 %143, label %165, label %167

144:                                              ; preds = %109, %144
  %145 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %105, %109 ], [ %163, %144 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %110) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %7, i8 zeroext 6) #10
  %146 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %145 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  %150 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %145 to i8*
  %153 = select i1 %149, i8* %151, i8* %152
  %154 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %155 = load i64, i64* %154, align 8
  %156 = zext i8 %148 to i64
  %157 = select i1 %149, i64 %155, i64 %156
  %158 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i64 15, i8* %153, i64 %157) #10
  %159 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %145, i64 0, i32 1
  %160 = load i8, i8* %159, align 8, !range !2
  %161 = icmp ne i8 %160, 0
  %162 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i64 8, i1 zeroext %161) #10
  call void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"* nonnull %3, %"class.base::Value"* nonnull dereferenceable(32) %7) #10
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %110) #10
  %163 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %145, i64 1
  %164 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %163, %107
  br i1 %164, label %128, label %144

165:                                              ; preds = %167, %128
  %166 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %3) #10
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #10
  ret void

167:                                              ; preds = %128, %167
  %168 = phi %"class.std::__1::basic_string"* [ %181, %167 ], [ %140, %128 ]
  %169 = bitcast %"class.std::__1::basic_string"* %168 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %169, i64 0, i32 1, i32 0
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  %175 = bitcast %"class.std::__1::basic_string"* %168 to i8*
  %176 = select i1 %172, i8* %174, i8* %175
  %177 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %178 = load i64, i64* %177, align 8
  %179 = zext i8 %171 to i64
  %180 = select i1 %172, i64 %178, i64 %179
  call void @_ZN4base5Value6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %3, i8* %176, i64 %180) #10
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 1
  %182 = icmp eq %"class.std::__1::basic_string"* %181, %142
  br i1 %182, label %165, label %167
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK3net10IPEndPoint8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.net::IPEndPoint"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"*, i8*, i64, i1 zeroext) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"*, i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

declare void @_ZN4base5Value6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value12SetDoubleKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::Value"*, i8*, i64, double) local_unnamed_addr #2

declare void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %188, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #11
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !4

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %196, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %196, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %182
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %186, %182 ]
  %81 = phi i64 [ %71, %77 ], [ %184, %182 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %183, %182 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %182, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %105 = bitcast %"struct.std::__1::__hash_node_base"* %104 to i64*
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i8**
  %107 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i8*
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 5
  %109 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i32*
  br label %111

110:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %182

111:                                              ; preds = %100, %163
  %112 = phi %"struct.std::__1::__hash_node_base"* [ %114, %163 ], [ %80, %100 ]
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %112, i64 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base"* %114, null
  br i1 %115, label %169, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 2
  %118 = load i8, i8* %103, align 1
  %119 = icmp slt i8 %118, 0
  %120 = load i64, i64* %105, align 8
  %121 = zext i8 %118 to i64
  %122 = select i1 %119, i64 %120, i64 %121
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %117 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %122, %131
  br i1 %132, label %133, label %169

133:                                              ; preds = %116
  %134 = load i8*, i8** %106, align 8
  %135 = select i1 %119, i8* %134, i8* %107
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  %140 = icmp eq i64 %122, 0
  br i1 %119, label %147, label %141

141:                                              ; preds = %133
  br i1 %140, label %163, label %142

142:                                              ; preds = %141
  %143 = ptrtoint i8* %134 to i64
  %144 = trunc i64 %143 to i8
  %145 = load i8, i8* %139, align 1
  %146 = icmp eq i8 %145, %144
  br i1 %146, label %148, label %169

147:                                              ; preds = %133
  br i1 %140, label %163, label %160

148:                                              ; preds = %142, %155
  %149 = phi i64 [ %152, %155 ], [ %121, %142 ]
  %150 = phi i8* [ %153, %155 ], [ %107, %142 ]
  %151 = phi i8* [ %156, %155 ], [ %139, %142 ]
  %152 = add i64 %149, -1
  %153 = getelementptr inbounds i8, i8* %150, i64 1
  %154 = icmp eq i64 %152, 0
  br i1 %154, label %163, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds i8, i8* %151, i64 1
  %157 = load i8, i8* %153, align 1
  %158 = load i8, i8* %156, align 1
  %159 = icmp eq i8 %157, %158
  br i1 %159, label %148, label %169

160:                                              ; preds = %147
  %161 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %122) #10
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %169

163:                                              ; preds = %148, %141, %147, %160
  %164 = load i32, i32* %109, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 5
  %166 = bitcast %"struct.std::__1::__hash_node_base"* %165 to i32*
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %164, %167
  br i1 %168, label %111, label %169

169:                                              ; preds = %142, %116, %160, %111, %163, %155
  %170 = ptrtoint %"struct.std::__1::__hash_node_base"* %114 to i64
  %171 = bitcast %"struct.std::__1::__hash_node_base"* %112 to i64*
  %172 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %170, i64* %172, align 8
  %173 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %173, i64 %93
  %175 = bitcast %"struct.std::__1::__hash_node_base"** %174 to i64**
  %176 = load i64*, i64** %175, align 8
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %171, align 8
  %178 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %178, i64 %93
  %180 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %179, align 8
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %180, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %181, align 8
  br label %182

182:                                              ; preds = %92, %169, %110
  %183 = phi %"struct.std::__1::__hash_node_base"* [ %80, %110 ], [ %82, %169 ], [ %80, %92 ]
  %184 = phi i64 [ %93, %110 ], [ %81, %169 ], [ %81, %92 ]
  %185 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %183, i64 0, i32 0
  %186 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %185, align 8
  %187 = icmp eq %"struct.std::__1::__hash_node_base"* %186, null
  br i1 %187, label %196, label %79

188:                                              ; preds = %2
  %189 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %190 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %189, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %189, align 8
  %191 = icmp eq %"struct.std::__1::__hash_node_base"** %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %188
  %193 = bitcast %"struct.std::__1::__hash_node_base"** %190 to i8*
  tail call void @_ZdlPv(i8* %193) #12
  br label %194

194:                                              ; preds = %188, %192
  %195 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %195, align 8
  br label %196

196:                                              ; preds = %182, %70, %35, %194
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE25__emplace_unique_key_argsISB_JRKNS2_IKSB_SC_EEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeISD_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"struct.std::__1::pair.70"* dereferenceable(32), %"struct.std::__1::pair.69"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"struct.std::__1::pair.70"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"struct.std::__1::pair.70"* %1 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  %12 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %85, label %17

17:                                               ; preds = %3
  %18 = add i64 %15, -1
  %19 = and i64 %15, 7
  %20 = icmp ult i64 %18, 7
  br i1 %20, label %69, label %21

21:                                               ; preds = %17
  %22 = sub i64 %15, %19
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i64 [ 0, %21 ], [ %65, %23 ]
  %25 = phi i8* [ %11, %21 ], [ %66, %23 ]
  %26 = phi i64 [ %22, %21 ], [ %67, %23 ]
  %27 = load i8, i8* %25, align 1
  %28 = mul i64 %24, 131
  %29 = sext i8 %27 to i64
  %30 = add i64 %28, %29
  %31 = getelementptr inbounds i8, i8* %25, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = mul i64 %30, 131
  %34 = sext i8 %32 to i64
  %35 = add i64 %33, %34
  %36 = getelementptr inbounds i8, i8* %25, i64 2
  %37 = load i8, i8* %36, align 1
  %38 = mul i64 %35, 131
  %39 = sext i8 %37 to i64
  %40 = add i64 %38, %39
  %41 = getelementptr inbounds i8, i8* %25, i64 3
  %42 = load i8, i8* %41, align 1
  %43 = mul i64 %40, 131
  %44 = sext i8 %42 to i64
  %45 = add i64 %43, %44
  %46 = getelementptr inbounds i8, i8* %25, i64 4
  %47 = load i8, i8* %46, align 1
  %48 = mul i64 %45, 131
  %49 = sext i8 %47 to i64
  %50 = add i64 %48, %49
  %51 = getelementptr inbounds i8, i8* %25, i64 5
  %52 = load i8, i8* %51, align 1
  %53 = mul i64 %50, 131
  %54 = sext i8 %52 to i64
  %55 = add i64 %53, %54
  %56 = getelementptr inbounds i8, i8* %25, i64 6
  %57 = load i8, i8* %56, align 1
  %58 = mul i64 %55, 131
  %59 = sext i8 %57 to i64
  %60 = add i64 %58, %59
  %61 = getelementptr inbounds i8, i8* %25, i64 7
  %62 = load i8, i8* %61, align 1
  %63 = mul i64 %60, 131
  %64 = sext i8 %62 to i64
  %65 = add i64 %63, %64
  %66 = getelementptr inbounds i8, i8* %25, i64 8
  %67 = add i64 %26, -8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %23

69:                                               ; preds = %23, %17
  %70 = phi i64 [ undef, %17 ], [ %65, %23 ]
  %71 = phi i64 [ 0, %17 ], [ %65, %23 ]
  %72 = phi i8* [ %11, %17 ], [ %66, %23 ]
  %73 = icmp eq i64 %19, 0
  br i1 %73, label %85, label %74

74:                                               ; preds = %69, %74
  %75 = phi i64 [ %81, %74 ], [ %71, %69 ]
  %76 = phi i8* [ %82, %74 ], [ %72, %69 ]
  %77 = phi i64 [ %83, %74 ], [ %19, %69 ]
  %78 = load i8, i8* %76, align 1
  %79 = mul i64 %75, 131
  %80 = sext i8 %78 to i64
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 1
  %83 = add i64 %77, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %74, !llvm.loop !6

85:                                               ; preds = %69, %74, %3
  %86 = phi i64 [ 0, %3 ], [ %70, %69 ], [ %81, %74 ]
  %87 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %1, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = zext i32 %88 to i64
  %90 = add i64 %86, %89
  %91 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %181, label %94

94:                                               ; preds = %85
  %95 = tail call i64 @llvm.ctpop.i64(i64 %92) #10, !range !3
  %96 = icmp ugt i64 %95, 1
  br i1 %96, label %100, label %97

97:                                               ; preds = %94
  %98 = add i64 %92, -1
  %99 = and i64 %98, %90
  br label %104

100:                                              ; preds = %94
  %101 = icmp ult i64 %90, %92
  br i1 %101, label %104, label %102

102:                                              ; preds = %100
  %103 = urem i64 %90, %92
  br label %104

104:                                              ; preds = %97, %100, %102
  %105 = phi i64 [ %99, %97 ], [ %103, %102 ], [ %90, %100 ]
  %106 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %106, align 8
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %107, i64 %105
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %181, label %111

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %109, i64 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base"* %113, null
  br i1 %114, label %181, label %115

115:                                              ; preds = %111
  %116 = add i64 %92, -1
  br label %117

117:                                              ; preds = %115, %177
  %118 = phi %"struct.std::__1::__hash_node_base"* [ %113, %115 ], [ %179, %177 ]
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %118, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = icmp eq i64 %121, %90
  br i1 %122, label %133, label %123

123:                                              ; preds = %117
  br i1 %96, label %126, label %124

124:                                              ; preds = %123
  %125 = and i64 %121, %116
  br label %130

126:                                              ; preds = %123
  %127 = icmp ult i64 %121, %92
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %121, %92
  br label %130

130:                                              ; preds = %124, %126, %128
  %131 = phi i64 [ %125, %124 ], [ %129, %128 ], [ %121, %126 ]
  %132 = icmp eq i64 %131, %105
  br i1 %132, label %133, label %181

133:                                              ; preds = %117, %130
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %118, i64 2
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %118, i64 3
  %140 = bitcast %"struct.std::__1::__hash_node_base"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = zext i8 %137 to i64
  %143 = select i1 %138, i64 %141, i64 %142
  %144 = icmp eq i64 %143, %15
  br i1 %144, label %145, label %177

145:                                              ; preds = %133
  %146 = bitcast %"struct.std::__1::__hash_node_base"* %134 to i8**
  %147 = load i8*, i8** %146, align 8
  %148 = bitcast %"struct.std::__1::__hash_node_base"* %134 to i8*
  %149 = select i1 %138, i8* %147, i8* %148
  br i1 %138, label %156, label %150

150:                                              ; preds = %145
  br i1 %16, label %172, label %151

151:                                              ; preds = %150
  %152 = ptrtoint i8* %147 to i64
  %153 = trunc i64 %152 to i8
  %154 = load i8, i8* %11, align 1
  %155 = icmp eq i8 %154, %153
  br i1 %155, label %157, label %177

156:                                              ; preds = %145
  br i1 %16, label %172, label %169

157:                                              ; preds = %151, %164
  %158 = phi i64 [ %161, %164 ], [ %142, %151 ]
  %159 = phi i8* [ %162, %164 ], [ %148, %151 ]
  %160 = phi i8* [ %165, %164 ], [ %11, %151 ]
  %161 = add i64 %158, -1
  %162 = getelementptr inbounds i8, i8* %159, i64 1
  %163 = icmp eq i64 %161, 0
  br i1 %163, label %172, label %164

164:                                              ; preds = %157
  %165 = getelementptr inbounds i8, i8* %160, i64 1
  %166 = load i8, i8* %162, align 1
  %167 = load i8, i8* %165, align 1
  %168 = icmp eq i8 %166, %167
  br i1 %168, label %157, label %177

169:                                              ; preds = %156
  %170 = tail call i32 @bcmp(i8* %149, i8* %11, i64 %15) #10
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %177

172:                                              ; preds = %157, %169, %156, %150
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %118, i64 5
  %174 = bitcast %"struct.std::__1::__hash_node_base"* %173 to i32*
  %175 = load i32, i32* %174, align 8
  %176 = icmp eq i32 %175, %88
  br i1 %176, label %286, label %177

177:                                              ; preds = %164, %169, %151, %133, %172
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %118, i64 0, i32 0
  %179 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %178, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base"* %179, null
  br i1 %180, label %181, label %117

181:                                              ; preds = %130, %177, %111, %104, %85
  %182 = phi i64 [ %105, %104 ], [ -6148914691236517206, %85 ], [ %105, %111 ], [ %105, %177 ], [ %105, %130 ]
  %183 = tail call i8* @_Znwm(i64 72) #12, !noalias !7
  %184 = getelementptr inbounds i8, i8* %183, i64 16
  %185 = bitcast %"struct.std::__1::pair.69"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %186 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %185, i64 0, i32 1, i32 0
  %187 = load i8, i8* %186, align 1, !noalias !7
  %188 = icmp slt i8 %187, 0
  br i1 %188, label %191, label %189

189:                                              ; preds = %181
  %190 = bitcast %"struct.std::__1::pair.69"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* align 8 %190, i64 24, i1 false) #10, !noalias !7
  br label %197

191:                                              ; preds = %181
  %192 = bitcast i8* %184 to %"class.std::__1::basic_string"*
  %193 = getelementptr inbounds %"struct.std::__1::pair.69", %"struct.std::__1::pair.69"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8, !noalias !7
  %195 = getelementptr inbounds %"struct.std::__1::pair.69", %"struct.std::__1::pair.69"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %196 = load i64, i64* %195, align 8, !noalias !7
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %192, i8* %194, i64 %196) #10, !noalias !7
  br label %197

197:                                              ; preds = %189, %191
  %198 = getelementptr inbounds i8, i8* %183, i64 40
  %199 = bitcast i8* %198 to i32*
  %200 = getelementptr inbounds %"struct.std::__1::pair.69", %"struct.std::__1::pair.69"* %2, i64 0, i32 0, i32 1
  %201 = load i32, i32* %200, align 8, !noalias !7
  store i32 %201, i32* %199, align 8, !noalias !7
  %202 = getelementptr inbounds i8, i8* %183, i64 48
  %203 = bitcast i8* %202 to %"class.net::IPAddress"*
  %204 = getelementptr inbounds %"struct.std::__1::pair.69", %"struct.std::__1::pair.69"* %2, i64 0, i32 1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %203, %"class.net::IPAddress"* dereferenceable(17) %204) #10, !noalias !7
  %205 = getelementptr inbounds i8, i8* %183, i64 8
  %206 = bitcast i8* %205 to i64*
  store i64 %90, i64* %206, align 8, !noalias !7
  %207 = bitcast i8* %183 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %207, align 8, !noalias !7
  %208 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %209 = load i64, i64* %208, align 8
  %210 = add i64 %209, 1
  %211 = uitofp i64 %210 to float
  %212 = uitofp i64 %92 to float
  %213 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %214 = load float, float* %213, align 4
  %215 = fmul float %214, %212
  %216 = fcmp olt float %215, %211
  %217 = or i1 %93, %216
  br i1 %217, label %218, label %241

218:                                              ; preds = %197
  %219 = shl i64 %92, 1
  %220 = icmp ult i64 %92, 3
  %221 = tail call i64 @llvm.ctpop.i64(i64 %92) #10, !range !3
  %222 = icmp ugt i64 %221, 1
  %223 = or i1 %220, %222
  %224 = zext i1 %223 to i64
  %225 = or i64 %219, %224
  %226 = fdiv float %211, %214
  %227 = tail call float @llvm.ceil.f32(float %226) #10
  %228 = fptoui float %227 to i64
  %229 = icmp ult i64 %225, %228
  %230 = select i1 %229, i64 %228, i64 %225
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %230)
  %231 = load i64, i64* %91, align 8
  %232 = tail call i64 @llvm.ctpop.i64(i64 %231) #10, !range !3
  %233 = icmp ugt i64 %232, 1
  br i1 %233, label %237, label %234

234:                                              ; preds = %218
  %235 = add i64 %231, -1
  %236 = and i64 %235, %90
  br label %241

237:                                              ; preds = %218
  %238 = icmp ult i64 %90, %231
  br i1 %238, label %241, label %239

239:                                              ; preds = %237
  %240 = urem i64 %90, %231
  br label %241

241:                                              ; preds = %239, %237, %234, %197
  %242 = phi i64 [ %92, %197 ], [ %231, %234 ], [ %231, %237 ], [ %231, %239 ]
  %243 = phi i64 [ %182, %197 ], [ %236, %234 ], [ %90, %237 ], [ %240, %239 ]
  %244 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %245 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %244, align 8
  %246 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %245, i64 %243
  %247 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %246, align 8
  %248 = icmp eq %"struct.std::__1::__hash_node_base"* %247, null
  br i1 %248, label %249, label %275

249:                                              ; preds = %241
  %250 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %251 = bitcast %"struct.std::__1::__hash_node_base"* %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast i8* %183 to i64*
  store i64 %252, i64* %253, align 8
  %254 = bitcast %"struct.std::__1::__hash_node_base"* %250 to i8**
  store i8* %183, i8** %254, align 8
  store %"struct.std::__1::__hash_node_base"* %250, %"struct.std::__1::__hash_node_base"** %246, align 8
  %255 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %207, align 8
  %256 = icmp eq %"struct.std::__1::__hash_node_base"* %255, null
  br i1 %256, label %282, label %257

257:                                              ; preds = %249
  %258 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %255, i64 1
  %259 = bitcast %"struct.std::__1::__hash_node_base"* %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = tail call i64 @llvm.ctpop.i64(i64 %242) #10, !range !3
  %262 = icmp ugt i64 %261, 1
  br i1 %262, label %266, label %263

263:                                              ; preds = %257
  %264 = add i64 %242, -1
  %265 = and i64 %260, %264
  br label %270

266:                                              ; preds = %257
  %267 = icmp ult i64 %260, %242
  br i1 %267, label %270, label %268

268:                                              ; preds = %266
  %269 = urem i64 %260, %242
  br label %270

270:                                              ; preds = %263, %266, %268
  %271 = phi i64 [ %265, %263 ], [ %269, %268 ], [ %260, %266 ]
  %272 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %244, align 8
  %273 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %272, i64 %271
  %274 = bitcast %"struct.std::__1::__hash_node_base"** %273 to i8**
  br label %280

275:                                              ; preds = %241
  %276 = bitcast %"struct.std::__1::__hash_node_base"* %247 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = bitcast i8* %183 to i64*
  store i64 %277, i64* %278, align 8
  %279 = bitcast %"struct.std::__1::__hash_node_base"* %247 to i8**
  br label %280

280:                                              ; preds = %270, %275
  %281 = phi i8** [ %279, %275 ], [ %274, %270 ]
  store i8* %183, i8** %281, align 8
  br label %282

282:                                              ; preds = %280, %249
  %283 = bitcast i8* %183 to %"struct.std::__1::__hash_node_base"*
  %284 = load i64, i64* %208, align 8
  %285 = add i64 %284, 1
  store i64 %285, i64* %208, align 8
  br label %286

286:                                              ; preds = %172, %282
  %287 = phi i8 [ 1, %282 ], [ 0, %172 ]
  %288 = phi %"struct.std::__1::__hash_node_base"* [ %283, %282 ], [ %118, %172 ]
  %289 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %288, 0
  %290 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %289, i8 %287, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %290
}

declare void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.net::IPEndPoint"* %2 to i64
  %5 = ptrtoint %"class.net::IPEndPoint"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 20
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.net::IPEndPoint"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 20
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.net::IPEndPoint"*
  br i1 %15, label %58, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.net::IPEndPoint"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 20
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 %22
  %25 = select i1 %23, %"class.net::IPEndPoint"* %24, %"class.net::IPEndPoint"* %2
  %26 = ptrtoint %"class.net::IPEndPoint"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 20
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %32 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %31, i8* align 2 %32, i64 %27, i1 false) #10
  br label %33

33:                                               ; preds = %17, %30
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %16, i64 %28
  br i1 %23, label %35, label %50

35:                                               ; preds = %33
  %36 = load i64, i64* %19, align 8
  %37 = icmp eq %"class.net::IPEndPoint"* %25, %2
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = inttoptr i64 %36 to %"class.net::IPEndPoint"*
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi %"class.net::IPEndPoint"* [ %44, %40 ], [ %39, %38 ]
  %42 = phi %"class.net::IPEndPoint"* [ %43, %40 ], [ %24, %38 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %41, %"class.net::IPEndPoint"* dereferenceable(20) %42) #10
  %43 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %42, i64 1
  %44 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %41, i64 1
  %45 = icmp eq %"class.net::IPEndPoint"* %43, %2
  br i1 %45, label %46, label %40

46:                                               ; preds = %40
  %47 = ptrtoint %"class.net::IPEndPoint"* %44 to i64
  br label %48

48:                                               ; preds = %35, %46
  %49 = phi i64 [ %36, %35 ], [ %47, %46 ]
  store i64 %49, i64* %19, align 8
  br label %109

50:                                               ; preds = %33
  %51 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %18, align 8
  %52 = icmp eq %"class.net::IPEndPoint"* %51, %34
  br i1 %52, label %57, label %53

53:                                               ; preds = %50, %53
  %54 = phi %"class.net::IPEndPoint"* [ %55, %53 ], [ %51, %50 ]
  %55 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %54, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %55) #10
  %56 = icmp eq %"class.net::IPEndPoint"* %55, %34
  br i1 %56, label %57, label %53

57:                                               ; preds = %53, %50
  store %"class.net::IPEndPoint"* %34, %"class.net::IPEndPoint"** %18, align 8
  br label %109

58:                                               ; preds = %3
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %75, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %63 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %62, align 8
  %64 = icmp eq %"class.net::IPEndPoint"* %63, %16
  br i1 %64, label %71, label %65

65:                                               ; preds = %61, %65
  %66 = phi %"class.net::IPEndPoint"* [ %67, %65 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %66, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %67) #10
  %68 = icmp eq %"class.net::IPEndPoint"* %67, %16
  br i1 %68, label %69, label %65

69:                                               ; preds = %65
  %70 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %59, align 8
  br label %71

71:                                               ; preds = %69, %61
  %72 = phi %"class.net::IPEndPoint"* [ %70, %69 ], [ %16, %61 ]
  store %"class.net::IPEndPoint"* %16, %"class.net::IPEndPoint"** %62, align 8
  %73 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %73) #12
  %74 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #10
  br label %75

75:                                               ; preds = %58, %71
  %76 = phi i64 [ %10, %58 ], [ 0, %71 ]
  %77 = icmp ugt i64 %7, 922337203685477580
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %79) #11
  unreachable

80:                                               ; preds = %75
  %81 = sdiv exact i64 %76, 20
  %82 = icmp ult i64 %81, 461168601842738790
  br i1 %82, label %83, label %87

83:                                               ; preds = %80
  %84 = shl nsw i64 %81, 1
  %85 = icmp ult i64 %84, %7
  %86 = select i1 %85, i64 %7, i64 %84
  br label %87

87:                                               ; preds = %83, %80
  %88 = phi i64 [ %86, %83 ], [ 922337203685477580, %80 ]
  %89 = mul i64 %88, 20
  %90 = tail call i8* @_Znwm(i64 %89) #12
  %91 = bitcast i8* %90 to %"class.net::IPEndPoint"*
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %93 = bitcast %"class.net::IPEndPoint"** %92 to i8**
  store i8* %90, i8** %93, align 8
  %94 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %90, i8** %94, align 8
  %95 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %91, i64 %88
  store %"class.net::IPEndPoint"* %95, %"class.net::IPEndPoint"** %8, align 8
  %96 = bitcast %"class.net::IPEndPoint"** %92 to i64*
  %97 = ptrtoint i8* %90 to i64
  %98 = icmp eq %"class.net::IPEndPoint"* %1, %2
  br i1 %98, label %107, label %99

99:                                               ; preds = %87, %99
  %100 = phi %"class.net::IPEndPoint"* [ %103, %99 ], [ %91, %87 ]
  %101 = phi %"class.net::IPEndPoint"* [ %102, %99 ], [ %1, %87 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %100, %"class.net::IPEndPoint"* dereferenceable(20) %101) #10
  %102 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %101, i64 1
  %103 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %100, i64 1
  %104 = icmp eq %"class.net::IPEndPoint"* %102, %2
  br i1 %104, label %105, label %99

105:                                              ; preds = %99
  %106 = ptrtoint %"class.net::IPEndPoint"* %103 to i64
  br label %107

107:                                              ; preds = %87, %105
  %108 = phi i64 [ %97, %87 ], [ %106, %105 ]
  store i64 %108, i64* %96, align 8
  br label %109

109:                                              ; preds = %48, %57, %107
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.6"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %110, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %60
  %28 = phi %"class.std::__1::basic_string"* [ %62, %60 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::basic_string"* %28, %29
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #10
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %46, i64 %48) #10
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %57, i64 %58) #10
  br label %60

60:                                               ; preds = %50, %44, %41, %27
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %60, %17
  %65 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %62, %60 ]
  br i1 %23, label %66, label %94

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %68, label %92, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"class.std::__1::basic_string"*
  br label %71

71:                                               ; preds = %86, %69
  %72 = phi %"class.std::__1::basic_string"* [ %88, %86 ], [ %70, %69 ]
  %73 = phi %"class.std::__1::basic_string"* [ %87, %86 ], [ %24, %69 ]
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #10
  br label %86

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %83, i64 %85) #10
  br label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %89 = icmp eq %"class.std::__1::basic_string"* %87, %2
  br i1 %89, label %90, label %71

90:                                               ; preds = %86
  %91 = ptrtoint %"class.std::__1::basic_string"* %88 to i64
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i64 [ %67, %66 ], [ %91, %90 ]
  store i64 %93, i64* %19, align 8
  br label %182

94:                                               ; preds = %64
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %65
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %65
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %94
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %18, align 8
  br label %182

110:                                              ; preds = %3
  %111 = icmp eq i64 %12, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %12 to i8*
  %114 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %114, align 8
  %116 = icmp eq %"class.std::__1::basic_string"* %115, %16
  br i1 %116, label %132, label %117

117:                                              ; preds = %112, %127
  %118 = phi %"class.std::__1::basic_string"* [ %119, %127 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 -1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #12
  br label %127

127:                                              ; preds = %124, %117
  %128 = icmp eq %"class.std::__1::basic_string"* %119, %16
  br i1 %128, label %129, label %117

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector.6"* %0 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %112
  %133 = phi i8* [ %131, %129 ], [ %113, %112 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %114, align 8
  tail call void @_ZdlPv(i8* %133) #12
  %134 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #10
  br label %135

135:                                              ; preds = %110, %132
  %136 = phi i64 [ %10, %110 ], [ 0, %132 ]
  %137 = icmp ugt i64 %7, 768614336404564650
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #11
  unreachable

140:                                              ; preds = %135
  %141 = sdiv exact i64 %136, 24
  %142 = icmp ult i64 %141, 384307168202282325
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = shl nsw i64 %141, 1
  %145 = icmp ult i64 %144, %7
  %146 = select i1 %145, i64 %7, i64 %144
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i64 [ %146, %143 ], [ 768614336404564650, %140 ]
  %149 = mul i64 %148, 24
  %150 = tail call i8* @_Znwm(i64 %149) #12
  %151 = bitcast i8* %150 to %"class.std::__1::basic_string"*
  %152 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"** %152 to i8**
  store i8* %150, i8** %153, align 8
  %154 = bitcast %"class.std::__1::vector.6"* %0 to i8**
  store i8* %150, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 %148
  store %"class.std::__1::basic_string"* %155, %"class.std::__1::basic_string"** %8, align 8
  %156 = bitcast %"class.std::__1::basic_string"** %152 to i64*
  %157 = ptrtoint i8* %150 to i64
  %158 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %158, label %180, label %159

159:                                              ; preds = %147, %174
  %160 = phi %"class.std::__1::basic_string"* [ %176, %174 ], [ %151, %147 ]
  %161 = phi %"class.std::__1::basic_string"* [ %175, %174 ], [ %1, %147 ]
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false) #10
  br label %174

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %160, i8* %171, i64 %173) #10
  br label %174

174:                                              ; preds = %169, %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 1
  %177 = icmp eq %"class.std::__1::basic_string"* %175, %2
  br i1 %177, label %178, label %159

178:                                              ; preds = %174
  %179 = ptrtoint %"class.std::__1::basic_string"* %176 to i64
  br label %180

180:                                              ; preds = %147, %178
  %181 = phi i64 [ %157, %147 ], [ %179, %178 ]
  store i64 %181, i64* %156, align 8
  br label %182

182:                                              ; preds = %92, %109, %180
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEEEEvT_SU_(%"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::__hash_node_base"* %1 to i64
  %5 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %121, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = add i64 %6, -1
  %11 = and i64 %6, 3
  %12 = icmp ult i64 %10, 3
  br i1 %12, label %32, label %13

13:                                               ; preds = %8
  %14 = sub i64 %6, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %29, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %30, %15 ]
  %18 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %9, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %18, i64 %16
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %19, align 8
  %20 = or i64 %16, 1
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %9, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %20
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  %23 = or i64 %16, 2
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %9, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %23
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %25, align 8
  %26 = or i64 %16, 3
  %27 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %9, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, i64 %26
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %28, align 8
  %29 = add nuw i64 %16, 4
  %30 = add i64 %17, -4
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %15

32:                                               ; preds = %15, %8
  %33 = phi i64 [ 0, %8 ], [ %29, %15 ]
  %34 = icmp eq i64 %11, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %32, %35
  %36 = phi i64 [ %40, %35 ], [ %33, %32 ]
  %37 = phi i64 [ %41, %35 ], [ %11, %32 ]
  %38 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %9, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, i64 %36
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %39, align 8
  %40 = add nuw i64 %36, 1
  %41 = add i64 %37, -1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %35, !llvm.loop !10

43:                                               ; preds = %35, %32
  %44 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"* %46, null
  br i1 %47, label %121, label %48

48:                                               ; preds = %43, %90
  %49 = phi %"struct.std::__1::__hash_node_base"* [ %99, %90 ], [ %46, %43 ]
  %50 = phi i64 [ %102, %90 ], [ %4, %43 ]
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %49 to %"struct.std::__1::__hash_node"*
  %52 = inttoptr i64 %50 to %"struct.std::__1::__hash_node_base"*
  %53 = icmp eq %"struct.std::__1::__hash_node_base"* %52, %2
  br i1 %53, label %104, label %54

54:                                               ; preds = %48
  %55 = inttoptr i64 %50 to %"struct.std::__1::__hash_node"*
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %55, i64 0, i32 2
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 2
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %57 to %"struct.std::__1::__hash_value_type"*
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %57 to %"class.std::__1::basic_string"*
  %60 = icmp eq %"struct.std::__1::__hash_value_type"* %56, %58
  br i1 %60, label %90, label %61

61:                                               ; preds = %54
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  %66 = bitcast %"struct.std::__1::__hash_value_type"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %65, label %80, label %70

70:                                               ; preds = %61
  br i1 %69, label %74, label %71

71:                                               ; preds = %70
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %57 to i8*
  %73 = bitcast %"struct.std::__1::__hash_value_type"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 24, i1 false) #10
  br label %90

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %59, i8* %76, i64 %78) #10
  br label %90

80:                                               ; preds = %61
  %81 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"struct.std::__1::__hash_value_type"* %56 to i8*
  %86 = zext i8 %68 to i64
  %87 = select i1 %69, i8* %82, i8* %85
  %88 = select i1 %69, i64 %84, i64 %86
  %89 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %59, i8* %87, i64 %88) #10
  br label %90

90:                                               ; preds = %54, %71, %74, %80
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %55, i64 0, i32 2, i32 0, i32 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 5
  %94 = bitcast %"struct.std::__1::__hash_node_base"* %93 to i32*
  store i32 %92, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 6
  %96 = bitcast %"struct.std::__1::__hash_node_base"* %95 to i8*
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %55, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %97, i64 17, i1 false) #10
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %98, align 8
  %100 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE19__node_insert_multiEPNS_11__hash_nodeISD_PvEE(%"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node"* %51)
  %101 = inttoptr i64 %50 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %99, null
  br i1 %103, label %121, label %48

104:                                              ; preds = %48, %118
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %118 ], [ %49, %48 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 2
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 6
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %110) #10
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %104
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8**
  %117 = load i8*, i8** %116, align 8
  tail call void @_ZdlPv(i8* %117) #12
  br label %118

118:                                              ; preds = %115, %104
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  tail call void @_ZdlPv(i8* %119) #12
  %120 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %120, label %121, label %104

121:                                              ; preds = %90, %118, %43, %3
  %122 = phi i64 [ %4, %3 ], [ %4, %43 ], [ %50, %118 ], [ %102, %90 ]
  %123 = inttoptr i64 %122 to %"struct.std::__1::__hash_node_base"*
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, %2
  br i1 %124, label %134, label %125

125:                                              ; preds = %121, %125
  %126 = phi i64 [ %131, %125 ], [ %122, %121 ]
  %127 = inttoptr i64 %126 to %"struct.std::__1::__hash_node"*
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %127, i64 0, i32 2, i32 0
  %129 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE15__emplace_multiIJRKNS2_IKSB_SC_EEEEENS_15__hash_iteratorIPNS_11__hash_nodeISD_PvEEEEDpOT_(%"class.std::__1::__hash_table"* %0, %"struct.std::__1::pair.69"* dereferenceable(56) %128) #10
  %130 = inttoptr i64 %126 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = inttoptr i64 %131 to %"struct.std::__1::__hash_node_base"*
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, %2
  br i1 %133, label %134, label %125

134:                                              ; preds = %125, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE19__node_insert_multiEPNS_11__hash_nodeISD_PvEE(%"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 2
  %4 = bitcast %"struct.std::__1::__hash_value_type"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_value_type"* %3 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %85, label %17

17:                                               ; preds = %2
  %18 = add i64 %15, -1
  %19 = and i64 %15, 7
  %20 = icmp ult i64 %18, 7
  br i1 %20, label %69, label %21

21:                                               ; preds = %17
  %22 = sub i64 %15, %19
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i64 [ 0, %21 ], [ %65, %23 ]
  %25 = phi i8* [ %11, %21 ], [ %66, %23 ]
  %26 = phi i64 [ %22, %21 ], [ %67, %23 ]
  %27 = load i8, i8* %25, align 1
  %28 = mul i64 %24, 131
  %29 = sext i8 %27 to i64
  %30 = add i64 %28, %29
  %31 = getelementptr inbounds i8, i8* %25, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = mul i64 %30, 131
  %34 = sext i8 %32 to i64
  %35 = add i64 %33, %34
  %36 = getelementptr inbounds i8, i8* %25, i64 2
  %37 = load i8, i8* %36, align 1
  %38 = mul i64 %35, 131
  %39 = sext i8 %37 to i64
  %40 = add i64 %38, %39
  %41 = getelementptr inbounds i8, i8* %25, i64 3
  %42 = load i8, i8* %41, align 1
  %43 = mul i64 %40, 131
  %44 = sext i8 %42 to i64
  %45 = add i64 %43, %44
  %46 = getelementptr inbounds i8, i8* %25, i64 4
  %47 = load i8, i8* %46, align 1
  %48 = mul i64 %45, 131
  %49 = sext i8 %47 to i64
  %50 = add i64 %48, %49
  %51 = getelementptr inbounds i8, i8* %25, i64 5
  %52 = load i8, i8* %51, align 1
  %53 = mul i64 %50, 131
  %54 = sext i8 %52 to i64
  %55 = add i64 %53, %54
  %56 = getelementptr inbounds i8, i8* %25, i64 6
  %57 = load i8, i8* %56, align 1
  %58 = mul i64 %55, 131
  %59 = sext i8 %57 to i64
  %60 = add i64 %58, %59
  %61 = getelementptr inbounds i8, i8* %25, i64 7
  %62 = load i8, i8* %61, align 1
  %63 = mul i64 %60, 131
  %64 = sext i8 %62 to i64
  %65 = add i64 %63, %64
  %66 = getelementptr inbounds i8, i8* %25, i64 8
  %67 = add i64 %26, -8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %23

69:                                               ; preds = %23, %17
  %70 = phi i64 [ undef, %17 ], [ %65, %23 ]
  %71 = phi i64 [ 0, %17 ], [ %65, %23 ]
  %72 = phi i8* [ %11, %17 ], [ %66, %23 ]
  %73 = icmp eq i64 %19, 0
  br i1 %73, label %85, label %74

74:                                               ; preds = %69, %74
  %75 = phi i64 [ %81, %74 ], [ %71, %69 ]
  %76 = phi i8* [ %82, %74 ], [ %72, %69 ]
  %77 = phi i64 [ %83, %74 ], [ %19, %69 ]
  %78 = load i8, i8* %76, align 1
  %79 = mul i64 %75, 131
  %80 = sext i8 %78 to i64
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 1
  %83 = add i64 %77, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %74, !llvm.loop !11

85:                                               ; preds = %69, %74, %2
  %86 = phi i64 [ 0, %2 ], [ %70, %69 ], [ %81, %74 ]
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = zext i32 %88 to i64
  %90 = add i64 %86, %89
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 1
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 0
  %93 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE27__node_insert_multi_prepareEmRSD_(%"class.std::__1::__hash_table"* %0, i64 %90, %"struct.std::__1::__hash_value_type"* dereferenceable(56) %3)
  %94 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = load i64, i64* %91, align 8
  %97 = tail call i64 @llvm.ctpop.i64(i64 %95) #10, !range !3
  %98 = icmp ugt i64 %97, 1
  br i1 %98, label %102, label %99

99:                                               ; preds = %85
  %100 = add i64 %95, -1
  %101 = and i64 %100, %96
  br label %106

102:                                              ; preds = %85
  %103 = icmp ult i64 %96, %95
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  %105 = urem i64 %96, %95
  br label %106

106:                                              ; preds = %104, %102, %99
  %107 = phi i64 [ %101, %99 ], [ %105, %104 ], [ %96, %102 ]
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %93, null
  br i1 %108, label %109, label %136

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %110, i64 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 0, i32 0
  %115 = bitcast %"struct.std::__1::__hash_node"* %1 to i64*
  store i64 %113, i64* %115, align 8
  store %"struct.std::__1::__hash_node_base"* %92, %"struct.std::__1::__hash_node_base"** %111, align 8
  %116 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %117, i64 %107
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base"* %119, null
  br i1 %120, label %162, label %121

121:                                              ; preds = %109
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 1
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  br i1 %98, label %128, label %125

125:                                              ; preds = %121
  %126 = add i64 %95, -1
  %127 = and i64 %124, %126
  br label %132

128:                                              ; preds = %121
  %129 = icmp ult i64 %124, %95
  br i1 %129, label %132, label %130

130:                                              ; preds = %128
  %131 = urem i64 %124, %95
  br label %132

132:                                              ; preds = %130, %128, %125
  %133 = phi i64 [ %127, %125 ], [ %131, %130 ], [ %124, %128 ]
  %134 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %116, align 8
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %134, i64 %133
  store %"struct.std::__1::__hash_node_base"* %92, %"struct.std::__1::__hash_node_base"** %135, align 8
  br label %162

136:                                              ; preds = %106
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 0, i32 0
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %93 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 0, i32 0
  %141 = bitcast %"struct.std::__1::__hash_node"* %1 to i64*
  store i64 %139, i64* %141, align 8
  store %"struct.std::__1::__hash_node_base"* %92, %"struct.std::__1::__hash_node_base"** %137, align 8
  %142 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %140, align 8
  %143 = icmp eq %"struct.std::__1::__hash_node_base"* %142, null
  br i1 %143, label %162, label %144

144:                                              ; preds = %136
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %142, i64 1
  %146 = bitcast %"struct.std::__1::__hash_node_base"* %145 to i64*
  %147 = load i64, i64* %146, align 8
  br i1 %98, label %151, label %148

148:                                              ; preds = %144
  %149 = add i64 %95, -1
  %150 = and i64 %147, %149
  br label %155

151:                                              ; preds = %144
  %152 = icmp ult i64 %147, %95
  br i1 %152, label %155, label %153

153:                                              ; preds = %151
  %154 = urem i64 %147, %95
  br label %155

155:                                              ; preds = %153, %151, %148
  %156 = phi i64 [ %150, %148 ], [ %154, %153 ], [ %147, %151 ]
  %157 = icmp eq i64 %156, %107
  br i1 %157, label %162, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %159, align 8
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %160, i64 %156
  store %"struct.std::__1::__hash_node_base"* %92, %"struct.std::__1::__hash_node_base"** %161, align 8
  br label %162

162:                                              ; preds = %109, %132, %136, %155, %158
  %163 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %164 = load i64, i64* %163, align 8
  %165 = add i64 %164, 1
  store i64 %165, i64* %163, align 8
  ret %"struct.std::__1::__hash_node_base"* %92
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE27__node_insert_multi_prepareEmRSD_(%"class.std::__1::__hash_table"*, i64, %"struct.std::__1::__hash_value_type"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  %9 = uitofp i64 %8 to float
  %10 = uitofp i64 %5 to float
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, %10
  %14 = fcmp olt float %13, %9
  %15 = icmp eq i64 %5, 0
  %16 = or i1 %15, %14
  br i1 %16, label %17, label %31

17:                                               ; preds = %3
  %18 = shl i64 %5, 1
  %19 = icmp ult i64 %5, 3
  %20 = tail call i64 @llvm.ctpop.i64(i64 %5) #10, !range !3
  %21 = icmp ugt i64 %20, 1
  %22 = or i1 %19, %21
  %23 = zext i1 %22 to i64
  %24 = or i64 %18, %23
  %25 = fdiv float %9, %12
  %26 = tail call float @llvm.ceil.f32(float %25) #10
  %27 = fptoui float %26 to i64
  %28 = icmp ult i64 %24, %27
  %29 = select i1 %28, i64 %27, i64 %24
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %29)
  %30 = load i64, i64* %4, align 8
  br label %31

31:                                               ; preds = %3, %17
  %32 = phi i64 [ %30, %17 ], [ %5, %3 ]
  %33 = tail call i64 @llvm.ctpop.i64(i64 %32) #10, !range !3
  %34 = icmp ugt i64 %33, 1
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = add i64 %32, -1
  %37 = and i64 %36, %1
  br label %42

38:                                               ; preds = %31
  %39 = icmp ugt i64 %32, %1
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %1, %32
  br label %42

42:                                               ; preds = %35, %38, %40
  %43 = phi i64 [ %37, %35 ], [ %41, %40 ], [ %1, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, i64 %43
  %47 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base"* %47, null
  br i1 %48, label %140, label %49

49:                                               ; preds = %42
  %50 = add i64 %32, -1
  %51 = bitcast %"struct.std::__1::__hash_value_type"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = zext i8 %53 to i64
  %57 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast %"struct.std::__1::__hash_value_type"* %2 to i8*
  %59 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %2, i64 0, i32 0, i32 0, i32 1
  br label %60

60:                                               ; preds = %49, %134
  %61 = phi %"struct.std::__1::__hash_node_base"* [ %64, %134 ], [ %47, %49 ]
  %62 = phi i8 [ %139, %134 ], [ 0, %49 ]
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %61, i64 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base"* %64, null
  br i1 %65, label %140, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %64, i64 1
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  br i1 %34, label %72, label %70

70:                                               ; preds = %66
  %71 = and i64 %69, %50
  br label %76

72:                                               ; preds = %66
  %73 = icmp ult i64 %69, %32
  br i1 %73, label %76, label %74

74:                                               ; preds = %72
  %75 = urem i64 %69, %32
  br label %76

76:                                               ; preds = %70, %72, %74
  %77 = phi i64 [ %71, %70 ], [ %75, %74 ], [ %69, %72 ]
  %78 = icmp eq i64 %77, %43
  br i1 %78, label %79, label %140

79:                                               ; preds = %76
  %80 = and i8 %62, 1
  %81 = icmp eq i8 %80, 0
  %82 = zext i8 %80 to i32
  %83 = icmp eq i64 %69, %1
  br i1 %83, label %84, label %134

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %64, i64 2
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %64, i64 3
  %91 = bitcast %"struct.std::__1::__hash_node_base"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = zext i8 %88 to i64
  %94 = select i1 %89, i64 %92, i64 %93
  %95 = load i64, i64* %55, align 8
  %96 = select i1 %54, i64 %95, i64 %56
  %97 = icmp eq i64 %94, %96
  br i1 %97, label %98, label %134

98:                                               ; preds = %84
  %99 = bitcast %"struct.std::__1::__hash_node_base"* %85 to i8**
  %100 = load i8*, i8** %99, align 8
  %101 = bitcast %"struct.std::__1::__hash_node_base"* %85 to i8*
  %102 = select i1 %89, i8* %100, i8* %101
  %103 = load i8*, i8** %57, align 8
  %104 = select i1 %54, i8* %103, i8* %58
  %105 = icmp eq i64 %94, 0
  br i1 %89, label %112, label %106

106:                                              ; preds = %98
  br i1 %105, label %128, label %107

107:                                              ; preds = %106
  %108 = ptrtoint i8* %100 to i64
  %109 = trunc i64 %108 to i8
  %110 = load i8, i8* %104, align 1
  %111 = icmp eq i8 %110, %109
  br i1 %111, label %113, label %134

112:                                              ; preds = %98
  br i1 %105, label %128, label %125

113:                                              ; preds = %107, %120
  %114 = phi i64 [ %117, %120 ], [ %93, %107 ]
  %115 = phi i8* [ %118, %120 ], [ %101, %107 ]
  %116 = phi i8* [ %121, %120 ], [ %104, %107 ]
  %117 = add i64 %114, -1
  %118 = getelementptr inbounds i8, i8* %115, i64 1
  %119 = icmp eq i64 %117, 0
  br i1 %119, label %128, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds i8, i8* %116, i64 1
  %122 = load i8, i8* %118, align 1
  %123 = load i8, i8* %121, align 1
  %124 = icmp eq i8 %122, %123
  br i1 %124, label %113, label %134

125:                                              ; preds = %112
  %126 = tail call i32 @bcmp(i8* %102, i8* %104, i64 %94) #10
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %134

128:                                              ; preds = %113, %125, %112, %106
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %64, i64 5
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i32*
  %131 = load i32, i32* %130, align 8
  %132 = load i32, i32* %59, align 8
  %133 = icmp eq i32 %131, %132
  br label %134

134:                                              ; preds = %120, %128, %125, %107, %84, %79
  %135 = phi i1 [ false, %79 ], [ false, %125 ], [ %133, %128 ], [ false, %84 ], [ false, %107 ], [ false, %120 ]
  %136 = zext i1 %135 to i32
  %137 = icmp eq i32 %82, %136
  %138 = or i1 %81, %137
  %139 = select i1 %137, i8 %62, i8 1
  br i1 %138, label %60, label %140

140:                                              ; preds = %134, %60, %76, %42
  %141 = phi %"struct.std::__1::__hash_node_base"* [ null, %42 ], [ %61, %76 ], [ %61, %60 ], [ %61, %134 ]
  ret %"struct.std::__1::__hash_node_base"* %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE15__emplace_multiIJRKNS2_IKSB_SC_EEEEENS_15__hash_iteratorIPNS_11__hash_nodeISD_PvEEEEDpOT_(%"class.std::__1::__hash_table"*, %"struct.std::__1::pair.69"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 72) #12, !noalias !12
  %4 = getelementptr inbounds i8, i8* %3, i64 16
  %5 = bitcast %"struct.std::__1::pair.69"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1, !noalias !12
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = bitcast %"struct.std::__1::pair.69"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %10, i64 24, i1 false) #10, !noalias !12
  br label %17

11:                                               ; preds = %2
  %12 = bitcast i8* %4 to %"class.std::__1::basic_string"*
  %13 = getelementptr inbounds %"struct.std::__1::pair.69", %"struct.std::__1::pair.69"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !noalias !12
  %15 = getelementptr inbounds %"struct.std::__1::pair.69", %"struct.std::__1::pair.69"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !noalias !12
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %12, i8* %14, i64 %16) #10, !noalias !12
  br label %17

17:                                               ; preds = %11, %9
  %18 = getelementptr inbounds i8, i8* %3, i64 40
  %19 = bitcast i8* %18 to i32*
  %20 = getelementptr inbounds %"struct.std::__1::pair.69", %"struct.std::__1::pair.69"* %1, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8, !noalias !12
  store i32 %21, i32* %19, align 8, !noalias !12
  %22 = getelementptr inbounds i8, i8* %3, i64 48
  %23 = bitcast i8* %22 to %"class.net::IPAddress"*
  %24 = getelementptr inbounds %"struct.std::__1::pair.69", %"struct.std::__1::pair.69"* %1, i64 0, i32 1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %23, %"class.net::IPAddress"* dereferenceable(17) %24) #10, !noalias !12
  %25 = getelementptr inbounds i8, i8* %3, i64 39
  %26 = load i8, i8* %25, align 1, !noalias !12
  %27 = icmp slt i8 %26, 0
  %28 = bitcast i8* %4 to i8**
  %29 = load i8*, i8** %28, align 8, !noalias !12
  %30 = select i1 %27, i8* %29, i8* %4
  %31 = getelementptr inbounds i8, i8* %3, i64 24
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8, !noalias !12
  %34 = zext i8 %26 to i64
  %35 = select i1 %27, i64 %33, i64 %34
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %105, label %37

37:                                               ; preds = %17
  %38 = add i64 %35, -1
  %39 = and i64 %35, 7
  %40 = icmp ult i64 %38, 7
  br i1 %40, label %89, label %41

41:                                               ; preds = %37
  %42 = sub i64 %35, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %85, %43 ]
  %45 = phi i8* [ %30, %41 ], [ %86, %43 ]
  %46 = phi i64 [ %42, %41 ], [ %87, %43 ]
  %47 = load i8, i8* %45, align 1, !noalias !12
  %48 = mul i64 %44, 131
  %49 = sext i8 %47 to i64
  %50 = add i64 %48, %49
  %51 = getelementptr inbounds i8, i8* %45, i64 1
  %52 = load i8, i8* %51, align 1, !noalias !12
  %53 = mul i64 %50, 131
  %54 = sext i8 %52 to i64
  %55 = add i64 %53, %54
  %56 = getelementptr inbounds i8, i8* %45, i64 2
  %57 = load i8, i8* %56, align 1, !noalias !12
  %58 = mul i64 %55, 131
  %59 = sext i8 %57 to i64
  %60 = add i64 %58, %59
  %61 = getelementptr inbounds i8, i8* %45, i64 3
  %62 = load i8, i8* %61, align 1, !noalias !12
  %63 = mul i64 %60, 131
  %64 = sext i8 %62 to i64
  %65 = add i64 %63, %64
  %66 = getelementptr inbounds i8, i8* %45, i64 4
  %67 = load i8, i8* %66, align 1, !noalias !12
  %68 = mul i64 %65, 131
  %69 = sext i8 %67 to i64
  %70 = add i64 %68, %69
  %71 = getelementptr inbounds i8, i8* %45, i64 5
  %72 = load i8, i8* %71, align 1, !noalias !12
  %73 = mul i64 %70, 131
  %74 = sext i8 %72 to i64
  %75 = add i64 %73, %74
  %76 = getelementptr inbounds i8, i8* %45, i64 6
  %77 = load i8, i8* %76, align 1, !noalias !12
  %78 = mul i64 %75, 131
  %79 = sext i8 %77 to i64
  %80 = add i64 %78, %79
  %81 = getelementptr inbounds i8, i8* %45, i64 7
  %82 = load i8, i8* %81, align 1, !noalias !12
  %83 = mul i64 %80, 131
  %84 = sext i8 %82 to i64
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %45, i64 8
  %87 = add i64 %46, -8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %43

89:                                               ; preds = %43, %37
  %90 = phi i64 [ undef, %37 ], [ %85, %43 ]
  %91 = phi i64 [ 0, %37 ], [ %85, %43 ]
  %92 = phi i8* [ %30, %37 ], [ %86, %43 ]
  %93 = icmp eq i64 %39, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %89, %94
  %95 = phi i64 [ %101, %94 ], [ %91, %89 ]
  %96 = phi i8* [ %102, %94 ], [ %92, %89 ]
  %97 = phi i64 [ %103, %94 ], [ %39, %89 ]
  %98 = load i8, i8* %96, align 1, !noalias !12
  %99 = mul i64 %95, 131
  %100 = sext i8 %98 to i64
  %101 = add i64 %99, %100
  %102 = getelementptr inbounds i8, i8* %96, i64 1
  %103 = add i64 %97, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %94, !llvm.loop !15

105:                                              ; preds = %89, %94, %17
  %106 = phi i64 [ 0, %17 ], [ %90, %89 ], [ %101, %94 ]
  %107 = load i32, i32* %19, align 8, !noalias !12
  %108 = zext i32 %107 to i64
  %109 = add i64 %106, %108
  %110 = getelementptr inbounds i8, i8* %3, i64 8
  %111 = bitcast i8* %110 to i64*
  store i64 %109, i64* %111, align 8, !noalias !12
  %112 = bitcast i8* %3 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %112, align 8, !noalias !12
  %113 = bitcast i8* %3 to %"struct.std::__1::__hash_node"*
  %114 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE19__node_insert_multiEPNS_11__hash_nodeISD_PvEE(%"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node"* nonnull %113)
  ret %"struct.std::__1::__hash_node_base"* %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.31"*, %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %2 to i64
  %5 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 5
  %8 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.31"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 5
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.net::DnsOverHttpsServerConfig"*
  br i1 %15, label %118, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 5
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %1, i64 %22
  %25 = select i1 %23, %"struct.net::DnsOverHttpsServerConfig"* %24, %"struct.net::DnsOverHttpsServerConfig"* %2
  %26 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %25, %1
  br i1 %26, label %68, label %27

27:                                               ; preds = %17, %61
  %28 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %66, %61 ], [ %16, %17 ]
  %29 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %65, %61 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %28, i64 0, i32 0
  %31 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %28, %29
  br i1 %31, label %61, label %32

32:                                               ; preds = %27
  %33 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %36, label %51, label %41

41:                                               ; preds = %32
  br i1 %40, label %45, label %42

42:                                               ; preds = %41
  %43 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %28 to i8*
  %44 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #10
  br label %61

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %47, i64 %49) #10
  br label %61

51:                                               ; preds = %32
  %52 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %29 to i8*
  %57 = zext i8 %39 to i64
  %58 = select i1 %40, i8* %53, i8* %56
  %59 = select i1 %40, i64 %55, i64 %57
  %60 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %58, i64 %59) #10
  br label %61

61:                                               ; preds = %51, %45, %42, %27
  %62 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %29, i64 0, i32 1
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %28, i64 0, i32 1
  store i8 %63, i8* %64, align 8
  %65 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %29, i64 1
  %66 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %28, i64 1
  %67 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %65, %25
  br i1 %67, label %68, label %27

68:                                               ; preds = %61, %17
  %69 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %16, %17 ], [ %66, %61 ]
  br i1 %23, label %70, label %102

70:                                               ; preds = %68
  %71 = load i64, i64* %19, align 8
  %72 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %25, %2
  br i1 %72, label %100, label %73

73:                                               ; preds = %70
  %74 = inttoptr i64 %71 to %"struct.net::DnsOverHttpsServerConfig"*
  br label %75

75:                                               ; preds = %91, %73
  %76 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %96, %91 ], [ %74, %73 ]
  %77 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %95, %91 ], [ %24, %73 ]
  %78 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %75
  %83 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %76 to i8*
  %84 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #10
  br label %91

85:                                               ; preds = %75
  %86 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %76, i64 0, i32 0
  %87 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %86, i8* %88, i64 %90) #10
  br label %91

91:                                               ; preds = %85, %82
  %92 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %76, i64 0, i32 1
  %93 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %77, i64 0, i32 1
  %94 = load i8, i8* %93, align 8, !range !2
  store i8 %94, i8* %92, align 8
  %95 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %77, i64 1
  %96 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %76, i64 1
  %97 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %95, %2
  br i1 %97, label %98, label %75

98:                                               ; preds = %91
  %99 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %96 to i64
  br label %100

100:                                              ; preds = %70, %98
  %101 = phi i64 [ %71, %70 ], [ %99, %98 ]
  store i64 %101, i64* %19, align 8
  br label %197

102:                                              ; preds = %68
  %103 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %18, align 8
  %104 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %103, %69
  br i1 %104, label %117, label %105

105:                                              ; preds = %102, %115
  %106 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %107, %115 ], [ %103, %102 ]
  %107 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %106, i64 -1
  %108 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %107 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  tail call void @_ZdlPv(i8* %114) #12
  br label %115

115:                                              ; preds = %112, %105
  %116 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %107, %69
  br i1 %116, label %117, label %105

117:                                              ; preds = %115, %102
  store %"struct.net::DnsOverHttpsServerConfig"* %69, %"struct.net::DnsOverHttpsServerConfig"** %18, align 8
  br label %197

118:                                              ; preds = %3
  %119 = icmp eq i64 %12, 0
  br i1 %119, label %143, label %120

120:                                              ; preds = %118
  %121 = inttoptr i64 %12 to i8*
  %122 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 1
  %123 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %122, align 8
  %124 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %123, %16
  br i1 %124, label %140, label %125

125:                                              ; preds = %120, %135
  %126 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %127, %135 ], [ %123, %120 ]
  %127 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %126, i64 -1
  %128 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %127 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  tail call void @_ZdlPv(i8* %134) #12
  br label %135

135:                                              ; preds = %132, %125
  %136 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %127, %16
  br i1 %136, label %137, label %125

137:                                              ; preds = %135
  %138 = bitcast %"class.std::__1::vector.31"* %0 to i8**
  %139 = load i8*, i8** %138, align 8
  br label %140

140:                                              ; preds = %137, %120
  %141 = phi i8* [ %139, %137 ], [ %121, %120 ]
  store %"struct.net::DnsOverHttpsServerConfig"* %16, %"struct.net::DnsOverHttpsServerConfig"** %122, align 8
  tail call void @_ZdlPv(i8* %141) #12
  %142 = bitcast %"class.std::__1::vector.31"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #10
  br label %143

143:                                              ; preds = %118, %140
  %144 = phi i64 [ %10, %118 ], [ 0, %140 ]
  %145 = icmp ugt i64 %7, 576460752303423487
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = bitcast %"class.std::__1::vector.31"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #11
  unreachable

148:                                              ; preds = %143
  %149 = ashr exact i64 %144, 5
  %150 = icmp ult i64 %149, 288230376151711743
  br i1 %150, label %151, label %158

151:                                              ; preds = %148
  %152 = ashr exact i64 %144, 4
  %153 = icmp ult i64 %152, %7
  br i1 %153, label %158, label %154

154:                                              ; preds = %151
  %155 = icmp ugt i64 %152, 576460752303423487
  br i1 %155, label %156, label %158

156:                                              ; preds = %154
  %157 = bitcast %"class.std::__1::vector.31"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %157) #11
  unreachable

158:                                              ; preds = %151, %148, %154
  %159 = phi i64 [ %152, %154 ], [ 576460752303423487, %148 ], [ %7, %151 ]
  %160 = shl i64 %159, 5
  %161 = tail call i8* @_Znwm(i64 %160) #12
  %162 = bitcast i8* %161 to %"struct.net::DnsOverHttpsServerConfig"*
  %163 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 1
  %164 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %163 to i8**
  store i8* %161, i8** %164, align 8
  %165 = bitcast %"class.std::__1::vector.31"* %0 to i8**
  store i8* %161, i8** %165, align 8
  %166 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %162, i64 %159
  store %"struct.net::DnsOverHttpsServerConfig"* %166, %"struct.net::DnsOverHttpsServerConfig"** %8, align 8
  %167 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %163 to i64*
  %168 = ptrtoint i8* %161 to i64
  %169 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %1, %2
  br i1 %169, label %195, label %170

170:                                              ; preds = %158, %186
  %171 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %191, %186 ], [ %162, %158 ]
  %172 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %190, %186 ], [ %1, %158 ]
  %173 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %172 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %170
  %178 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %171 to i8*
  %179 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %179, i64 24, i1 false) #10
  br label %186

180:                                              ; preds = %170
  %181 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %171, i64 0, i32 0
  %182 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %185 = load i64, i64* %184, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %181, i8* %183, i64 %185) #10
  br label %186

186:                                              ; preds = %180, %177
  %187 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %171, i64 0, i32 1
  %188 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %172, i64 0, i32 1
  %189 = load i8, i8* %188, align 8, !range !2
  store i8 %189, i8* %187, align 8
  %190 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %172, i64 1
  %191 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %171, i64 1
  %192 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %190, %2
  br i1 %192, label %193, label %170

193:                                              ; preds = %186
  %194 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %191 to i64
  br label %195

195:                                              ; preds = %158, %193
  %196 = phi i64 [ %168, %158 ], [ %194, %193 ]
  store i64 %196, i64* %167, align 8
  br label %197

197:                                              ; preds = %100, %117, %195
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE13__move_assignERSM_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table"*, %"class.std::__1::__hash_table"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %67, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %7, align 8
  %9 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %6, %24
  %11 = phi %"struct.std::__1::__hash_node_base"* [ %13, %24 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %11, i64 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %11, i64 2
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %11, i64 6
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %15 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %16) #10
  %17 = bitcast %"struct.std::__1::__hash_node_base"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %10
  %22 = bitcast %"struct.std::__1::__hash_node_base"* %14 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %21, %10
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %11 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %13, null
  br i1 %26, label %27, label %10

27:                                               ; preds = %24, %6
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %7, align 8
  %28 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %49, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = add i64 %29, -1
  %34 = and i64 %29, 3
  %35 = icmp ult i64 %33, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = sub i64 %29, %34
  br label %50

38:                                               ; preds = %50, %31
  %39 = phi i64 [ 0, %31 ], [ %64, %50 ]
  %40 = icmp eq i64 %34, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %38, %41
  %42 = phi i64 [ %46, %41 ], [ %39, %38 ]
  %43 = phi i64 [ %47, %41 ], [ %34, %38 ]
  %44 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, i64 %42
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %45, align 8
  %46 = add nuw i64 %42, 1
  %47 = add i64 %43, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %41, !llvm.loop !16

49:                                               ; preds = %38, %41, %27
  store i64 0, i64* %3, align 8
  br label %67

50:                                               ; preds = %50, %36
  %51 = phi i64 [ 0, %36 ], [ %64, %50 ]
  %52 = phi i64 [ %37, %36 ], [ %65, %50 ]
  %53 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %54, align 8
  %55 = or i64 %51, 1
  %56 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %57, align 8
  %58 = or i64 %51, 2
  %59 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %60, align 8
  %61 = or i64 %51, 3
  %62 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %62, i64 %61
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %63, align 8
  %64 = add nuw i64 %51, 4
  %65 = add i64 %52, -4
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %38, label %50

67:                                               ; preds = %2, %49
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.std::__1::__hash_table"* %1 to i64*
  %70 = load i64, i64* %69, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %68, align 8
  %71 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %71, align 8
  %73 = bitcast %"class.std::__1::__hash_table"* %0 to i64*
  store i64 %70, i64* %73, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base"** %72, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %67
  %76 = bitcast %"struct.std::__1::__hash_node_base"** %72 to i8*
  tail call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %67, %75
  %78 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %79, i64* %80, align 8
  store i64 0, i64* %78, align 8
  %81 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  store i64 %82, i64* %3, align 8
  %83 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 3, i32 0, i32 0
  %84 = bitcast float* %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = bitcast float* %86 to i32*
  store i32 %85, i32* %87, align 4
  %88 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1, i32 0, i32 0
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = icmp eq i64 %82, 0
  br i1 %93, label %114, label %94

94:                                               ; preds = %77
  %95 = inttoptr i64 %90 to %"struct.std::__1::__hash_node_base"*
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %95, i64 1
  %97 = bitcast %"struct.std::__1::__hash_node_base"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = load i64, i64* %80, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #10, !range !3
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %94
  %103 = add i64 %99, -1
  %104 = and i64 %103, %98
  br label %109

105:                                              ; preds = %94
  %106 = icmp ult i64 %98, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %98, %99
  br label %109

109:                                              ; preds = %102, %105, %107
  %110 = phi i64 [ %104, %102 ], [ %108, %107 ], [ %98, %105 ]
  %111 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %71, align 8
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %111, i64 %110
  store %"struct.std::__1::__hash_node_base"* %91, %"struct.std::__1::__hash_node_base"** %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false)
  br label %114

114:                                              ; preds = %77, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE4findISB_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"struct.std::__1::pair.70"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.std::__1::pair.70"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"struct.std::__1::pair.70"* %1 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %5 to i64
  %14 = select i1 %6, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %84, label %16

16:                                               ; preds = %2
  %17 = add i64 %14, -1
  %18 = and i64 %14, 7
  %19 = icmp ult i64 %17, 7
  br i1 %19, label %68, label %20

20:                                               ; preds = %16
  %21 = sub i64 %14, %18
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ 0, %20 ], [ %64, %22 ]
  %24 = phi i8* [ %10, %20 ], [ %65, %22 ]
  %25 = phi i64 [ %21, %20 ], [ %66, %22 ]
  %26 = load i8, i8* %24, align 1
  %27 = mul i64 %23, 131
  %28 = sext i8 %26 to i64
  %29 = add i64 %27, %28
  %30 = getelementptr inbounds i8, i8* %24, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = mul i64 %29, 131
  %33 = sext i8 %31 to i64
  %34 = add i64 %32, %33
  %35 = getelementptr inbounds i8, i8* %24, i64 2
  %36 = load i8, i8* %35, align 1
  %37 = mul i64 %34, 131
  %38 = sext i8 %36 to i64
  %39 = add i64 %37, %38
  %40 = getelementptr inbounds i8, i8* %24, i64 3
  %41 = load i8, i8* %40, align 1
  %42 = mul i64 %39, 131
  %43 = sext i8 %41 to i64
  %44 = add i64 %42, %43
  %45 = getelementptr inbounds i8, i8* %24, i64 4
  %46 = load i8, i8* %45, align 1
  %47 = mul i64 %44, 131
  %48 = sext i8 %46 to i64
  %49 = add i64 %47, %48
  %50 = getelementptr inbounds i8, i8* %24, i64 5
  %51 = load i8, i8* %50, align 1
  %52 = mul i64 %49, 131
  %53 = sext i8 %51 to i64
  %54 = add i64 %52, %53
  %55 = getelementptr inbounds i8, i8* %24, i64 6
  %56 = load i8, i8* %55, align 1
  %57 = mul i64 %54, 131
  %58 = sext i8 %56 to i64
  %59 = add i64 %57, %58
  %60 = getelementptr inbounds i8, i8* %24, i64 7
  %61 = load i8, i8* %60, align 1
  %62 = mul i64 %59, 131
  %63 = sext i8 %61 to i64
  %64 = add i64 %62, %63
  %65 = getelementptr inbounds i8, i8* %24, i64 8
  %66 = add i64 %25, -8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %22

68:                                               ; preds = %22, %16
  %69 = phi i64 [ undef, %16 ], [ %64, %22 ]
  %70 = phi i64 [ 0, %16 ], [ %64, %22 ]
  %71 = phi i8* [ %10, %16 ], [ %65, %22 ]
  %72 = icmp eq i64 %18, 0
  br i1 %72, label %84, label %73

73:                                               ; preds = %68, %73
  %74 = phi i64 [ %80, %73 ], [ %70, %68 ]
  %75 = phi i8* [ %81, %73 ], [ %71, %68 ]
  %76 = phi i64 [ %82, %73 ], [ %18, %68 ]
  %77 = load i8, i8* %75, align 1
  %78 = mul i64 %74, 131
  %79 = sext i8 %77 to i64
  %80 = add i64 %78, %79
  %81 = getelementptr inbounds i8, i8* %75, i64 1
  %82 = add i64 %76, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %73, !llvm.loop !17

84:                                               ; preds = %68, %73, %2
  %85 = phi i64 [ 0, %2 ], [ %69, %68 ], [ %80, %73 ]
  %86 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %1, i64 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = zext i32 %87 to i64
  %89 = add i64 %85, %88
  %90 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %180, label %93

93:                                               ; preds = %84
  %94 = tail call i64 @llvm.ctpop.i64(i64 %91) #10, !range !3
  %95 = icmp ugt i64 %94, 1
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = add i64 %91, -1
  %98 = and i64 %97, %89
  br label %103

99:                                               ; preds = %93
  %100 = icmp ult i64 %89, %91
  br i1 %100, label %103, label %101

101:                                              ; preds = %99
  %102 = urem i64 %89, %91
  br label %103

103:                                              ; preds = %96, %99, %101
  %104 = phi i64 [ %98, %96 ], [ %102, %101 ], [ %89, %99 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base"* %108, null
  br i1 %109, label %180, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %108, i64 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %111, align 8
  %113 = icmp eq %"struct.std::__1::__hash_node_base"* %112, null
  br i1 %113, label %180, label %114

114:                                              ; preds = %110
  %115 = add i64 %91, -1
  br label %116

116:                                              ; preds = %114, %176
  %117 = phi %"struct.std::__1::__hash_node_base"* [ %112, %114 ], [ %178, %176 ]
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %89, %120
  br i1 %121, label %132, label %122

122:                                              ; preds = %116
  br i1 %95, label %125, label %123

123:                                              ; preds = %122
  %124 = and i64 %120, %115
  br label %129

125:                                              ; preds = %122
  %126 = icmp ult i64 %120, %91
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %120, %91
  br label %129

129:                                              ; preds = %123, %125, %127
  %130 = phi i64 [ %124, %123 ], [ %128, %127 ], [ %120, %125 ]
  %131 = icmp eq i64 %130, %104
  br i1 %131, label %176, label %180

132:                                              ; preds = %116
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 2
  %134 = bitcast %"struct.std::__1::__hash_node_base"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 3
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = zext i8 %136 to i64
  %142 = select i1 %137, i64 %140, i64 %141
  %143 = icmp eq i64 %142, %14
  br i1 %143, label %144, label %176

144:                                              ; preds = %132
  %145 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i8**
  %146 = load i8*, i8** %145, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i8*
  %148 = select i1 %137, i8* %146, i8* %147
  br i1 %137, label %155, label %149

149:                                              ; preds = %144
  br i1 %15, label %171, label %150

150:                                              ; preds = %149
  %151 = ptrtoint i8* %146 to i64
  %152 = trunc i64 %151 to i8
  %153 = load i8, i8* %10, align 1
  %154 = icmp eq i8 %153, %152
  br i1 %154, label %156, label %176

155:                                              ; preds = %144
  br i1 %15, label %171, label %168

156:                                              ; preds = %150, %163
  %157 = phi i64 [ %160, %163 ], [ %141, %150 ]
  %158 = phi i8* [ %161, %163 ], [ %147, %150 ]
  %159 = phi i8* [ %164, %163 ], [ %10, %150 ]
  %160 = add i64 %157, -1
  %161 = getelementptr inbounds i8, i8* %158, i64 1
  %162 = icmp eq i64 %160, 0
  br i1 %162, label %171, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds i8, i8* %159, i64 1
  %165 = load i8, i8* %161, align 1
  %166 = load i8, i8* %164, align 1
  %167 = icmp eq i8 %165, %166
  br i1 %167, label %156, label %176

168:                                              ; preds = %155
  %169 = tail call i32 @bcmp(i8* %148, i8* %10, i64 %14) #10
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %176

171:                                              ; preds = %156, %149, %155, %168
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 5
  %173 = bitcast %"struct.std::__1::__hash_node_base"* %172 to i32*
  %174 = load i32, i32* %173, align 8
  %175 = icmp eq i32 %174, %87
  br i1 %175, label %180, label %176

176:                                              ; preds = %163, %150, %132, %168, %129, %171
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 0, i32 0
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = icmp eq %"struct.std::__1::__hash_node_base"* %178, null
  br i1 %179, label %180, label %116

180:                                              ; preds = %171, %176, %129, %110, %84, %103
  %181 = phi %"struct.std::__1::__hash_node_base"* [ null, %103 ], [ null, %84 ], [ null, %110 ], [ %117, %171 ], [ null, %176 ], [ null, %129 ]
  ret %"struct.std::__1::__hash_node_base"* %181
}

declare zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net10IPEndPointeqERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net24DnsOverHttpsServerConfigeqERKS0_(%"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE21__construct_node_hashIRKNS2_IKSB_SC_EEJEEENS_10unique_ptrINS_11__hash_nodeISD_PvEENS_22__hash_node_destructorINS6_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE21__construct_node_hashIRKNS2_IKSB_SC_EEJEEENS_10unique_ptrINS_11__hash_nodeISD_PvEENS_22__hash_node_destructorINS6_ISV_EEEEEEmOT_DpOT0_"}
!10 = distinct !{!10, !5}
!11 = distinct !{!11, !5}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE16__construct_nodeIJRKNS2_IKSB_SC_EEEEENS_10unique_ptrINS_11__hash_nodeISD_PvEENS_22__hash_node_destructorINS6_ISV_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE16__construct_nodeIJRKNS2_IKSB_SC_EEEEENS_10unique_ptrINS_11__hash_nodeISD_PvEENS_22__hash_node_destructorINS6_ISV_EEEEEEDpOT_"}
!15 = distinct !{!15, !5}
!16 = distinct !{!16, !5}
!17 = distinct !{!17, !5}
