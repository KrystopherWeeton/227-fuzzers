; ModuleID = '../../third_party/ffmpeg/libavcodec/pthread_slice.c'
source_filename = "../../third_party/ffmpeg/libavcodec/pthread_slice.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, {}*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type { i32, i32, %struct.AVFrame*, %struct.AVBufferRef*, i8*, %struct.DecodeSimpleContext, %struct.AVBSFContext*, %struct.AVPacket*, %struct.AVFifoBuffer*, i8*, i32, i8*, %struct.EncodeSimpleContext, i32, i8*, i32, %struct.AVPacket*, %struct.AVFrame*, i32, i32, i64, i64, %struct.AVFrame*, %struct.AVPacket*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.DecodeSimpleContext = type { %struct.AVPacket* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVFifoBuffer = type { i8*, i8*, i8*, i8*, i32, i32 }
%struct.EncodeSimpleContext = type { %struct.AVFrame* }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.SliceThreadContext = type { %struct.AVSliceThread*, i32 (%struct.AVCodecContext*, i8*)*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i32 (%struct.AVCodecContext*)*, i8*, i32*, i32, i32*, i32, i32, %union.pthread_cond_t*, %union.pthread_mutex_t* }
%struct.AVSliceThread = type opaque
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_mutexattr_t = type { i32 }
%union.pthread_condattr_t = type { i32 }

@.str = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"p->thread_count == avctx->thread_count\00", align 1
@.str.2 = private unnamed_addr constant [52 x i8] c"../../third_party/ffmpeg/libavcodec/pthread_slice.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_slice_thread_free(%struct.AVCodecContext* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 7
  %3 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %2, align 8
  %4 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 4
  %5 = bitcast i8** %4 to %struct.SliceThreadContext**
  %6 = load %struct.SliceThreadContext*, %struct.SliceThreadContext** %5, align 8
  %7 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %6, i64 0, i32 0
  tail call void @avpriv_slicethread_free(%struct.AVSliceThread** %7) #5
  %8 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %6, i64 0, i32 9
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %26

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %6, i64 0, i32 11
  %13 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %6, i64 0, i32 10
  br label %14

14:                                               ; preds = %11, %14
  %15 = phi i64 [ 0, %11 ], [ %22, %14 ]
  %16 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** %12, align 8
  %17 = getelementptr inbounds %union.pthread_mutex_t, %union.pthread_mutex_t* %16, i64 %15
  %18 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %17) #5
  %19 = load %union.pthread_cond_t*, %union.pthread_cond_t** %13, align 8
  %20 = getelementptr inbounds %union.pthread_cond_t, %union.pthread_cond_t* %19, i64 %15
  %21 = tail call i32 @pthread_cond_destroy(%union.pthread_cond_t* %20) #5
  %22 = add nuw nsw i64 %15, 1
  %23 = load i32, i32* %8, align 4
  %24 = sext i32 %23 to i64
  %25 = icmp slt i64 %22, %24
  br i1 %25, label %14, label %26

26:                                               ; preds = %14, %1
  %27 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %6, i64 0, i32 7
  %28 = bitcast i32** %27 to i8*
  tail call void @av_freep(i8* %28) #5
  %29 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %6, i64 0, i32 11
  %30 = bitcast %union.pthread_mutex_t** %29 to i8*
  tail call void @av_freep(i8* %30) #5
  %31 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %6, i64 0, i32 10
  %32 = bitcast %union.pthread_cond_t** %31 to i8*
  tail call void @av_freep(i8* %32) #5
  %33 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %2, align 8
  %34 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %33, i64 0, i32 4
  %35 = bitcast i8** %34 to i8*
  tail call void @av_freep(i8* %35) #5
  ret void
}

declare void @avpriv_slicethread_free(%struct.AVSliceThread**) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_cond_destroy(%union.pthread_cond_t*) local_unnamed_addr #2

declare void @av_freep(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_slice_thread_execute_with_mainfunc(%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i32 (%struct.AVCodecContext*)*, i8*, i32*, i32) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 7
  %8 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %7, align 8
  %9 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %8, i64 0, i32 4
  %10 = bitcast i8** %9 to %struct.SliceThreadContext**
  %11 = load %struct.SliceThreadContext*, %struct.SliceThreadContext** %10, align 8
  %12 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %11, i64 0, i32 2
  store i32 (%struct.AVCodecContext*, i8*, i32, i32)* %1, i32 (%struct.AVCodecContext*, i8*, i32, i32)** %12, align 8
  %13 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %11, i64 0, i32 3
  store i32 (%struct.AVCodecContext*)* %2, i32 (%struct.AVCodecContext*)** %13, align 8
  %14 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %7, align 8
  %15 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %14, i64 0, i32 4
  %16 = bitcast i8** %15 to %struct.SliceThreadContext**
  %17 = load %struct.SliceThreadContext*, %struct.SliceThreadContext** %16, align 8
  %18 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 148
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %6
  %23 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 146
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %24, 2
  br i1 %25, label %26, label %28

26:                                               ; preds = %22, %6
  %27 = tail call i32 @avcodec_default_execute(%struct.AVCodecContext* %0, i32 (%struct.AVCodecContext*, i8*)* null, i8* %3, i32* %4, i32 %5, i32 0) #5
  br label %41

28:                                               ; preds = %22
  %29 = icmp slt i32 %5, 1
  br i1 %29, label %41, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %17, i64 0, i32 6
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %17, i64 0, i32 4
  store i8* %3, i8** %32, align 8
  %33 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %17, i64 0, i32 1
  store i32 (%struct.AVCodecContext*, i8*)* null, i32 (%struct.AVCodecContext*, i8*)** %33, align 8
  %34 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %17, i64 0, i32 5
  store i32* %4, i32** %34, align 8
  %35 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %17, i64 0, i32 0
  %36 = load %struct.AVSliceThread*, %struct.AVSliceThread** %35, align 8
  %37 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %17, i64 0, i32 3
  %38 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %37, align 8
  %39 = icmp ne i32 (%struct.AVCodecContext*)* %38, null
  %40 = zext i1 %39 to i32
  tail call void @avpriv_slicethread_execute(%struct.AVSliceThread* %36, i32 %5, i32 %40) #5
  br label %41

41:                                               ; preds = %26, %28, %30
  %42 = phi i32 [ %27, %26 ], [ 0, %30 ], [ 0, %28 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @thread_execute(%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32) #0 {
  %7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 7
  %8 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %7, align 8
  %9 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %8, i64 0, i32 4
  %10 = bitcast i8** %9 to %struct.SliceThreadContext**
  %11 = load %struct.SliceThreadContext*, %struct.SliceThreadContext** %10, align 8
  %12 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 148
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 146
  %18 = load i32, i32* %17, align 8
  %19 = icmp slt i32 %18, 2
  br i1 %19, label %20, label %22

20:                                               ; preds = %6, %16
  %21 = tail call i32 @avcodec_default_execute(%struct.AVCodecContext* %0, i32 (%struct.AVCodecContext*, i8*)* %1, i8* %2, i32* %3, i32 %4, i32 %5) #5
  br label %35

22:                                               ; preds = %16
  %23 = icmp slt i32 %4, 1
  br i1 %23, label %35, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %11, i64 0, i32 6
  store i32 %5, i32* %25, align 8
  %26 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %11, i64 0, i32 4
  store i8* %2, i8** %26, align 8
  %27 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %11, i64 0, i32 1
  store i32 (%struct.AVCodecContext*, i8*)* %1, i32 (%struct.AVCodecContext*, i8*)** %27, align 8
  %28 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %11, i64 0, i32 5
  store i32* %3, i32** %28, align 8
  %29 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %11, i64 0, i32 0
  %30 = load %struct.AVSliceThread*, %struct.AVSliceThread** %29, align 8
  %31 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %11, i64 0, i32 3
  %32 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %31, align 8
  %33 = icmp ne i32 (%struct.AVCodecContext*)* %32, null
  %34 = zext i1 %33 to i32
  tail call void @avpriv_slicethread_execute(%struct.AVSliceThread* %30, i32 %4, i32 %34) #5
  br label %35

35:                                               ; preds = %22, %24, %20
  %36 = phi i32 [ %21, %20 ], [ 0, %24 ], [ 0, %22 ]
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_slice_thread_init(%struct.AVCodecContext*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 146
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 3
  %5 = load %struct.AVCodec*, %struct.AVCodec** %4, align 8
  %6 = tail call i32 @av_codec_is_encoder(%struct.AVCodec* %5) #5
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 2800
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  store i32 1, i32* %2, align 8
  br label %41

17:                                               ; preds = %1, %12, %8
  %18 = icmp eq i32 %3, 0
  br i1 %18, label %19, label %38

19:                                               ; preds = %17
  %20 = tail call i32 @av_cpu_count() #5
  %21 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 21
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = add nsw i32 %22, 15
  %26 = sdiv i32 %25, 16
  %27 = icmp sgt i32 %20, %26
  %28 = select i1 %27, i32 %26, i32 %20
  br label %29

29:                                               ; preds = %19, %24
  %30 = phi i32 [ %28, %24 ], [ %20, %19 ]
  %31 = icmp sgt i32 %30, 1
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  %33 = icmp slt i32 %30, 15
  %34 = select i1 %33, i32 %30, i32 15
  %35 = add nuw nsw i32 %34, 1
  br label %36

36:                                               ; preds = %29, %32
  %37 = phi i32 [ %35, %32 ], [ 1, %29 ]
  store i32 %37, i32* %2, align 8
  br label %38

38:                                               ; preds = %17, %36
  %39 = phi i32 [ %3, %17 ], [ %37, %36 ]
  %40 = icmp slt i32 %39, 2
  br i1 %40, label %41, label %43

41:                                               ; preds = %16, %38
  %42 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 148
  store i32 0, i32* %42, align 8
  br label %69

43:                                               ; preds = %38
  %44 = tail call noalias i8* @av_mallocz(i64 88) #5
  %45 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 7
  %46 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %45, align 8
  %47 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %46, i64 0, i32 4
  store i8* %44, i8** %47, align 8
  %48 = icmp eq i8* %44, null
  br i1 %48, label %61, label %49

49:                                               ; preds = %43
  %50 = load %struct.AVCodec*, %struct.AVCodec** %4, align 8
  %51 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %50, i64 0, i32 27
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 32
  %54 = icmp eq i32 %53, 0
  %55 = select i1 %54, void (i8*)* null, void (i8*)* @main_function
  %56 = bitcast i8* %44 to %struct.AVSliceThread**
  %57 = bitcast %struct.AVCodecContext* %0 to i8*
  %58 = tail call i32 @avpriv_slicethread_create(%struct.AVSliceThread** nonnull %56, i8* %57, void (i8*, i32, i32, i32, i32)* nonnull @worker_func, void (i8*)* %55, i32 %39) #5
  %59 = icmp slt i32 %58, 2
  br i1 %59, label %60, label %66

60:                                               ; preds = %49
  tail call void @avpriv_slicethread_free(%struct.AVSliceThread** nonnull %56) #5
  br label %61

61:                                               ; preds = %43, %60
  %62 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %45, align 8
  %63 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %62, i64 0, i32 4
  %64 = bitcast i8** %63 to i8*
  tail call void @av_freep(i8* %64) #5
  store i32 1, i32* %2, align 8
  %65 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 148
  store i32 0, i32* %65, align 8
  br label %69

66:                                               ; preds = %49
  store i32 %58, i32* %2, align 8
  %67 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 150
  store i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)* @thread_execute, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)** %67, align 8
  %68 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 151
  store i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)* @thread_execute2, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)** %68, align 8
  br label %69

69:                                               ; preds = %66, %61, %41
  ret i32 0
}

declare i32 @av_codec_is_encoder(%struct.AVCodec*) local_unnamed_addr #1

declare i32 @av_cpu_count() local_unnamed_addr #1

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @main_function(i8*) #0 {
  %2 = bitcast i8* %0 to %struct.AVCodecContext*
  %3 = getelementptr inbounds i8, i8* %0, i64 40
  %4 = bitcast i8* %3 to %struct.AVCodecInternal**
  %5 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %4, align 8
  %6 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %5, i64 0, i32 4
  %7 = bitcast i8** %6 to %struct.SliceThreadContext**
  %8 = load %struct.SliceThreadContext*, %struct.SliceThreadContext** %7, align 8
  %9 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %8, i64 0, i32 3
  %10 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %9, align 8
  %11 = tail call i32 %10(%struct.AVCodecContext* %2) #5
  ret void
}

declare i32 @avpriv_slicethread_create(%struct.AVSliceThread**, i8*, void (i8*, i32, i32, i32, i32)*, void (i8*)*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @worker_func(i8*, i32, i32, i32, i32) #0 {
  %6 = bitcast i8* %0 to %struct.AVCodecContext*
  %7 = getelementptr inbounds i8, i8* %0, i64 40
  %8 = bitcast i8* %7 to %struct.AVCodecInternal**
  %9 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %8, align 8
  %10 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %9, i64 0, i32 4
  %11 = bitcast i8** %10 to %struct.SliceThreadContext**
  %12 = load %struct.SliceThreadContext*, %struct.SliceThreadContext** %11, align 8
  %13 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %12, i64 0, i32 1
  %14 = load i32 (%struct.AVCodecContext*, i8*)*, i32 (%struct.AVCodecContext*, i8*)** %13, align 8
  %15 = icmp eq i32 (%struct.AVCodecContext*, i8*)* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %12, i64 0, i32 4
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %12, i64 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = mul nsw i32 %20, %1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %18, i64 %22
  %24 = tail call i32 %14(%struct.AVCodecContext* %6, i8* %23) #5
  br label %31

25:                                               ; preds = %5
  %26 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %12, i64 0, i32 2
  %27 = load i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i32 (%struct.AVCodecContext*, i8*, i32, i32)** %26, align 8
  %28 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %12, i64 0, i32 4
  %29 = load i8*, i8** %28, align 8
  %30 = tail call i32 %27(%struct.AVCodecContext* %6, i8* %29, i32 %1, i32 %2) #5
  br label %31

31:                                               ; preds = %25, %16
  %32 = phi i32 [ %24, %16 ], [ %30, %25 ]
  %33 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %12, i64 0, i32 5
  %34 = load i32*, i32** %33, align 8
  %35 = icmp eq i32* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = sext i32 %1 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  store i32 %32, i32* %38, align 4
  br label %39

39:                                               ; preds = %31, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @thread_execute2(%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32) #0 {
  %6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 7
  %7 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %6, align 8
  %8 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %7, i64 0, i32 4
  %9 = bitcast i8** %8 to %struct.SliceThreadContext**
  %10 = load %struct.SliceThreadContext*, %struct.SliceThreadContext** %9, align 8
  %11 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %10, i64 0, i32 2
  store i32 (%struct.AVCodecContext*, i8*, i32, i32)* %1, i32 (%struct.AVCodecContext*, i8*, i32, i32)** %11, align 8
  %12 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %6, align 8
  %13 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %12, i64 0, i32 4
  %14 = bitcast i8** %13 to %struct.SliceThreadContext**
  %15 = load %struct.SliceThreadContext*, %struct.SliceThreadContext** %14, align 8
  %16 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 148
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 146
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 2
  br i1 %23, label %24, label %26

24:                                               ; preds = %20, %5
  %25 = tail call i32 @avcodec_default_execute(%struct.AVCodecContext* %0, i32 (%struct.AVCodecContext*, i8*)* null, i8* %2, i32* %3, i32 %4, i32 0) #5
  br label %39

26:                                               ; preds = %20
  %27 = icmp slt i32 %4, 1
  br i1 %27, label %39, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %15, i64 0, i32 6
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %15, i64 0, i32 4
  store i8* %2, i8** %30, align 8
  %31 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %15, i64 0, i32 1
  store i32 (%struct.AVCodecContext*, i8*)* null, i32 (%struct.AVCodecContext*, i8*)** %31, align 8
  %32 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %15, i64 0, i32 5
  store i32* %3, i32** %32, align 8
  %33 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %15, i64 0, i32 0
  %34 = load %struct.AVSliceThread*, %struct.AVSliceThread** %33, align 8
  %35 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %15, i64 0, i32 3
  %36 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %35, align 8
  %37 = icmp ne i32 (%struct.AVCodecContext*)* %36, null
  %38 = zext i1 %37 to i32
  tail call void @avpriv_slicethread_execute(%struct.AVSliceThread* %34, i32 %4, i32 %38) #5
  br label %39

39:                                               ; preds = %24, %26, %28
  %40 = phi i32 [ %25, %24 ], [ 0, %28 ], [ 0, %26 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_thread_report_progress2(%struct.AVCodecContext* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 7
  %6 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %7 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %6, i64 0, i32 4
  %8 = bitcast i8** %7 to %struct.SliceThreadContext**
  %9 = load %struct.SliceThreadContext*, %struct.SliceThreadContext** %8, align 8
  %10 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %9, i64 0, i32 7
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %9, i64 0, i32 11
  %13 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** %12, align 8
  %14 = sext i32 %2 to i64
  %15 = getelementptr inbounds %union.pthread_mutex_t, %union.pthread_mutex_t* %13, i64 %14
  %16 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %15) #5
  %17 = sext i32 %1 to i64
  %18 = getelementptr inbounds i32, i32* %11, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, %3
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %9, i64 0, i32 10
  %22 = load %union.pthread_cond_t*, %union.pthread_cond_t** %21, align 8
  %23 = getelementptr inbounds %union.pthread_cond_t, %union.pthread_cond_t* %22, i64 %14
  %24 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %23) #5
  %25 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** %12, align 8
  %26 = getelementptr inbounds %union.pthread_mutex_t, %union.pthread_mutex_t* %25, i64 %14
  %27 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %26) #5
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_cond_signal(%union.pthread_cond_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_thread_await_progress2(%struct.AVCodecContext* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 7
  %6 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %5, align 8
  %7 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %6, i64 0, i32 4
  %8 = bitcast i8** %7 to %struct.SliceThreadContext**
  %9 = load %struct.SliceThreadContext*, %struct.SliceThreadContext** %8, align 8
  %10 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %9, i64 0, i32 7
  %11 = load i32*, i32** %10, align 8
  %12 = icmp ne i32* %11, null
  %13 = icmp ne i32 %1, 0
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %53

15:                                               ; preds = %4
  %16 = icmp eq i32 %2, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %9, i64 0, i32 9
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i32 [ %19, %17 ], [ %2, %15 ]
  %22 = add nsw i32 %21, -1
  %23 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %9, i64 0, i32 11
  %24 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** %23, align 8
  %25 = sext i32 %22 to i64
  %26 = getelementptr inbounds %union.pthread_mutex_t, %union.pthread_mutex_t* %24, i64 %25
  %27 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %26) #5
  %28 = add nsw i32 %1, -1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %11, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %1 to i64
  %33 = getelementptr inbounds i32, i32* %11, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = sub nsw i32 %31, %34
  %36 = icmp slt i32 %35, %3
  br i1 %36, label %37, label %49

37:                                               ; preds = %20
  %38 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %9, i64 0, i32 10
  br label %39

39:                                               ; preds = %37, %39
  %40 = load %union.pthread_cond_t*, %union.pthread_cond_t** %38, align 8
  %41 = getelementptr inbounds %union.pthread_cond_t, %union.pthread_cond_t* %40, i64 %25
  %42 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** %23, align 8
  %43 = getelementptr inbounds %union.pthread_mutex_t, %union.pthread_mutex_t* %42, i64 %25
  %44 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %41, %union.pthread_mutex_t* %43) #5
  %45 = load i32, i32* %30, align 4
  %46 = load i32, i32* %33, align 4
  %47 = sub nsw i32 %45, %46
  %48 = icmp slt i32 %47, %3
  br i1 %48, label %39, label %49

49:                                               ; preds = %39, %20
  %50 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** %23, align 8
  %51 = getelementptr inbounds %union.pthread_mutex_t, %union.pthread_mutex_t* %50, i64 %25
  %52 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %51) #5
  br label %53

53:                                               ; preds = %4, %49
  ret void
}

declare i32 @pthread_cond_wait(%union.pthread_cond_t*, %union.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_alloc_entries(%struct.AVCodecContext* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 148
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 2
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 7
  %9 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %8, align 8
  %10 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %9, i64 0, i32 4
  %11 = bitcast i8** %10 to %struct.SliceThreadContext**
  %12 = load %struct.SliceThreadContext*, %struct.SliceThreadContext** %11, align 8
  %13 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %12, i64 0, i32 7
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %12, i64 0, i32 9
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 146
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %23, label %22

22:                                               ; preds = %16
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0), i32 209) #5
  tail call void @abort() #6
  unreachable

23:                                               ; preds = %16
  %24 = bitcast i32** %13 to i8*
  tail call void @av_freep(i8* %24) #5
  br label %25

25:                                               ; preds = %7, %23
  %26 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 146
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %12, i64 0, i32 9
  store i32 %27, i32* %28, align 4
  %29 = sext i32 %1 to i64
  %30 = tail call i8* @av_mallocz_array(i64 %29, i64 4) #5
  %31 = bitcast i32** %13 to i8**
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %12, i64 0, i32 11
  %33 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** %32, align 8
  %34 = icmp eq %union.pthread_mutex_t* %33, null
  %35 = bitcast i8* %30 to i32*
  br i1 %34, label %36, label %47

36:                                               ; preds = %25
  %37 = load i32, i32* %28, align 4
  %38 = sext i32 %37 to i64
  %39 = tail call i8* @av_malloc_array(i64 %38, i64 40) #5
  %40 = bitcast %union.pthread_mutex_t** %32 to i8**
  store i8* %39, i8** %40, align 8
  %41 = load i32, i32* %28, align 4
  %42 = sext i32 %41 to i64
  %43 = tail call i8* @av_malloc_array(i64 %42, i64 48) #5
  %44 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %12, i64 0, i32 10
  %45 = bitcast %union.pthread_cond_t** %44 to i8**
  store i8* %43, i8** %45, align 8
  %46 = load i32*, i32** %13, align 8
  br label %47

47:                                               ; preds = %25, %36
  %48 = phi i32* [ %35, %25 ], [ %46, %36 ]
  %49 = icmp eq i32* %48, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %47
  %51 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** %32, align 8
  %52 = icmp eq %union.pthread_mutex_t* %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %12, i64 0, i32 10
  %55 = load %union.pthread_cond_t*, %union.pthread_cond_t** %54, align 8
  %56 = icmp eq %union.pthread_cond_t* %55, null
  br i1 %56, label %57, label %62

57:                                               ; preds = %53, %50, %47
  %58 = bitcast i32** %13 to i8*
  tail call void @av_freep(i8* %58) #5
  %59 = bitcast %union.pthread_mutex_t** %32 to i8*
  tail call void @av_freep(i8* %59) #5
  %60 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %12, i64 0, i32 10
  %61 = bitcast %union.pthread_cond_t** %60 to i8*
  tail call void @av_freep(i8* %61) #5
  br label %84

62:                                               ; preds = %53
  %63 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %12, i64 0, i32 8
  store i32 %1, i32* %63, align 8
  %64 = load i32, i32* %28, align 4
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %84

66:                                               ; preds = %62
  %67 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* nonnull %51, %union.pthread_mutexattr_t* null) #5
  %68 = load %union.pthread_cond_t*, %union.pthread_cond_t** %54, align 8
  %69 = tail call i32 @pthread_cond_init(%union.pthread_cond_t* %68, %union.pthread_condattr_t* null) #5
  %70 = load i32, i32* %28, align 4
  %71 = icmp sgt i32 %70, 1
  br i1 %71, label %72, label %84

72:                                               ; preds = %66, %72
  %73 = phi i64 [ %80, %72 ], [ 1, %66 ]
  %74 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** %32, align 8
  %75 = getelementptr inbounds %union.pthread_mutex_t, %union.pthread_mutex_t* %74, i64 %73
  %76 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* %75, %union.pthread_mutexattr_t* null) #5
  %77 = load %union.pthread_cond_t*, %union.pthread_cond_t** %54, align 8
  %78 = getelementptr inbounds %union.pthread_cond_t, %union.pthread_cond_t* %77, i64 %73
  %79 = tail call i32 @pthread_cond_init(%union.pthread_cond_t* %78, %union.pthread_condattr_t* null) #5
  %80 = add nuw nsw i64 %73, 1
  %81 = load i32, i32* %28, align 4
  %82 = sext i32 %81 to i64
  %83 = icmp slt i64 %80, %82
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %66, %62, %2, %57
  %85 = phi i32 [ -12, %57 ], [ 0, %2 ], [ 0, %62 ], [ 0, %66 ], [ 0, %72 ]
  ret i32 %85
}

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #3

declare i8* @av_mallocz_array(i64, i64) local_unnamed_addr #1

declare i8* @av_malloc_array(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_cond_init(%union.pthread_cond_t*, %union.pthread_condattr_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_reset_entries(%struct.AVCodecContext* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i64 0, i32 7
  %3 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %2, align 8
  %4 = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %3, i64 0, i32 4
  %5 = bitcast i8** %4 to %struct.SliceThreadContext**
  %6 = load %struct.SliceThreadContext*, %struct.SliceThreadContext** %5, align 8
  %7 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %6, i64 0, i32 7
  %8 = bitcast i32** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.SliceThreadContext, %struct.SliceThreadContext* %6, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = shl nsw i64 %12, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 %13, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare i32 @avcodec_default_execute(%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32) local_unnamed_addr #1

declare void @avpriv_slicethread_execute(%struct.AVSliceThread*, i32, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
