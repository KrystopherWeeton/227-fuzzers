; ModuleID = '../../third_party/swiftshader/src/OpenGL/compiler/parseConst.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/compiler/parseConst.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.TConstTraverser = type { %class.TIntermTraverser, i8, i64, %class.ConstantUnion*, %class.TType, i32, i8, %class.TInfoSink*, i64, i8, i32 }
%class.TIntermTraverser = type { i32 (...)**, i8, i8, i8, i8, i32, %class.TVector, %"class.std::__1::vector.6" }
%class.TVector = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.TIntermNode**, %class.TIntermNode**, %"class.std::__1::__compressed_pair" }
%class.TIntermNode = type { i32 (...)**, %struct.TSourceLoc }
%struct.TSourceLoc = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.TIntermNode** }
%"struct.std::__1::__compressed_pair_elem.0" = type { %class.pool_allocator }
%class.pool_allocator = type { %class.TPoolAllocator* }
%class.TPoolAllocator = type { i64, i64, i64, i64, i64, %"struct.TPoolAllocator::tHeader"*, %"struct.TPoolAllocator::tHeader"*, %"class.std::__1::vector.1", i32, i64 }
%"struct.TPoolAllocator::tHeader" = type { %"struct.TPoolAllocator::tHeader"*, i64 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"*, %"class.std::__1::__compressed_pair.3" }
%"struct.TPoolAllocator::tAllocState" = type { i64, %"struct.TPoolAllocator::tHeader"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.TPoolAllocator::tAllocState"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.19" }
%"struct.TIntermTraverser::ParentBlock" = type { %class.TIntermAggregate*, i64 }
%class.TIntermAggregate = type <{ %class.TIntermOperator.base, [4 x i8], %class.TVector, %"class.std::__1::basic_string", i8, i8, i8, i8, %struct.TSourceLoc, [4 x i8] }>
%class.TIntermOperator.base = type <{ %class.TIntermTyped, i32 }>
%class.TIntermTyped = type { %class.TIntermNode, %class.TType }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.pool_allocator.11 }
%class.pool_allocator.11 = type { %class.TPoolAllocator* }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.TIntermTraverser::ParentBlock"* }
%class.ConstantUnion = type <{ %union.anon.24, i8, [3 x i8] }>
%union.anon.24 = type { i32 }
%class.TType = type { i8, i8, i8, i8, i8, i8, i32, i32, %class.TType*, %class.TInterfaceBlock*, %struct.TLayoutQualifier, %class.TStructure*, %"class.std::__1::basic_string"* }
%class.TInterfaceBlock = type <{ %class.TFieldListCollection, %"class.std::__1::basic_string"*, i32, i32, i32, [4 x i8] }>
%class.TFieldListCollection = type { i32 (...)**, %"class.std::__1::basic_string"*, %class.TVector.12*, %"class.std::__1::basic_string", i64 }
%class.TVector.12 = type { %"class.std::__1::vector.13" }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %class.TField**, %class.TField**, %"class.std::__1::__compressed_pair.15" }
%class.TField = type { %class.TType*, %"class.std::__1::basic_string"*, %struct.TSourceLoc }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16", %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.TField** }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.pool_allocator.18 }
%class.pool_allocator.18 = type { %class.TPoolAllocator* }
%struct.TLayoutQualifier = type { i32, i32, i32 }
%class.TStructure = type <{ %class.TFieldListCollection, i32, i32, i8, [7 x i8] }>
%class.TInfoSink = type { %class.TInfoSinkBase, %class.TInfoSinkBase, %class.TInfoSinkBase }
%class.TInfoSinkBase = type { %"class.std::__1::basic_string.25" }
%"class.std::__1::basic_string.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.28 }
%union.anon.28 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.TIntermSymbol = type { %class.TIntermTyped, i32, %"class.std::__1::basic_string" }
%class.TIntermBinary = type { %class.TIntermOperator.base, %class.TIntermTyped*, %class.TIntermTyped* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.TIntermUnary = type { %class.TIntermOperator.base, %class.TIntermTyped* }
%class.TIntermOperator = type <{ %class.TIntermTyped, i32, [4 x i8] }>
%class.TIntermConstantUnion = type { %class.TIntermTyped, %class.ConstantUnion* }
%class.TIntermSelection = type { %class.TIntermTyped, %class.TIntermTyped*, %class.TIntermNode*, %class.TIntermNode* }
%class.TIntermLoop = type <{ %class.TIntermNode, i32, [4 x i8], %class.TIntermNode*, %class.TIntermTyped*, %class.TIntermTyped*, %class.TIntermNode*, i8, [7 x i8] }>
%class.TIntermBranch = type { %class.TIntermNode, i32, %class.TIntermTyped* }
%class.TIntermediate = type { %class.TInfoSink* }
%class.TIntermSwitch = type { %class.TIntermNode, %class.TIntermTyped*, %class.TIntermAggregate* }
%class.TIntermCase = type { %class.TIntermNode, %class.TIntermTyped* }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN13ConstantUnion4castE10TBasicTypeRKS_ = comdat any

$_ZN15TConstTraverserD0Ev = comdat any

$_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch = comdat any

$_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase = comdat any

$_ZNK5TType14getElementSizeEv = comdat any

$_ZN16TIntermTraverserD2Ev = comdat any

$_ZN16TIntermTraverserD0Ev = comdat any

$_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol = comdat any

$_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion = comdat any

$_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary = comdat any

$_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary = comdat any

$_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection = comdat any

$_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate = comdat any

$_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop = comdat any

$_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE21__grow_by_and_replaceEmmmmmmPKc = comdat any

$_ZTV16TIntermTraverser = comdat any

@.str = private unnamed_addr constant [42 x i8] c"Symbol Node found in constant constructor\00", align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"'constructor' : assigning non-constant to \00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"Binary Node found in constant constructor\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"Selection Node found in constant constructor\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"Loop Node found in constant constructor\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"Branch Node found in constant constructor\00", align 1
@_ZTV15TConstTraverser = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TIntermTraverser*)* @_ZN16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%class.TConstTraverser*)* @_ZN15TConstTraverserD0Ev to i8*), i8* bitcast (void (%class.TConstTraverser*, %class.TIntermSymbol*)* @_ZN15TConstTraverser11visitSymbolEP13TIntermSymbol to i8*), i8* bitcast (void (%class.TConstTraverser*, %class.TIntermConstantUnion*)* @_ZN15TConstTraverser18visitConstantUnionEP20TIntermConstantUnion to i8*), i8* bitcast (i1 (%class.TConstTraverser*, i32, %class.TIntermBinary*)* @_ZN15TConstTraverser11visitBinaryE5VisitP13TIntermBinary to i8*), i8* bitcast (i1 (%class.TConstTraverser*, i32, %class.TIntermUnary*)* @_ZN15TConstTraverser10visitUnaryE5VisitP12TIntermUnary to i8*), i8* bitcast (i1 (%class.TConstTraverser*, i32, %class.TIntermSelection*)* @_ZN15TConstTraverser14visitSelectionE5VisitP16TIntermSelection to i8*), i8* bitcast (i1 (%class.TConstTraverser*, i32, %class.TIntermAggregate*)* @_ZN15TConstTraverser14visitAggregateE5VisitP16TIntermAggregate to i8*), i8* bitcast (i1 (%class.TConstTraverser*, i32, %class.TIntermLoop*)* @_ZN15TConstTraverser9visitLoopE5VisitP11TIntermLoop to i8*), i8* bitcast (i1 (%class.TConstTraverser*, i32, %class.TIntermBranch*)* @_ZN15TConstTraverser11visitBranchE5VisitP13TIntermBranch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSwitch*)* @_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermCase*)* @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase to i8*)] }, align 8
@_ZTV16TIntermTraverser = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TIntermTraverser*)* @_ZN16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%class.TIntermTraverser*)* @_ZN16TIntermTraverserD0Ev to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermSymbol*)* @_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermConstantUnion*)* @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBinary*)* @_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermUnary*)* @_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSelection*)* @_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermAggregate*)* @_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermLoop*)* @_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBranch*)* @_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSwitch*)* @_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermCase*)* @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase to i8*)] }, comdat, align 8

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN15TConstTraverser11visitSymbolEP13TIntermSymbol(%class.TConstTraverser* nocapture readonly, %class.TIntermSymbol* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 7
  %4 = load %class.TInfoSink*, %class.TInfoSink** %3, align 8
  %5 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %4, i64 0, i32 0
  %6 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %struct.TSourceLoc* %6 to i64*
  %8 = load i64, i64* %7, align 4
  %9 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 0, i32 0, i32 1, i32 2
  %10 = bitcast i32* %9 to i64*
  %11 = load i64, i64* %10, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %5, i32 4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i64 %8, i64 %11) #6
  ret void
}

; Function Attrs: optsize
declare void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase*, i32, i8*, i64, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN15TConstTraverser11visitBinaryE5VisitP13TIntermBinary(%class.TConstTraverser*, i32, %class.TIntermBinary* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 1, i32 2
  %7 = load i8, i8* %6, align 2
  %8 = icmp eq i8 %7, 2
  br i1 %8, label %45, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #6
  store %class.TPoolAllocator* %13, %class.TPoolAllocator** %12, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #7
  %14 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i64 42) #6
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #7
  %16 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 4
  call void @_ZNK5TType17getCompleteStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %class.TType* %16) #6
  %17 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %19 to i64
  %26 = select i1 %20, i8* %22, i8* %15
  %27 = select i1 %20, i64 %24, i64 %25
  %28 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %26, i64 %27) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #7
  %29 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 7
  %30 = load %class.TInfoSink*, %class.TInfoSink** %29, align 8
  %31 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %30, i64 0, i32 0
  %32 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = load i8*, i8** %11, align 8
  %37 = select i1 %35, i8* %36, i8* %10
  %38 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %struct.TSourceLoc* %38 to i64*
  %40 = load i64, i64* %39, align 4
  %41 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2
  %42 = bitcast i32* %41 to i64*
  %43 = load i64, i64* %42, align 4
  call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %31, i32 3, i8* %37, i64 %40, i64 %43) #6
  %44 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 1
  store i8 1, i8* %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #7
  br label %55

45:                                               ; preds = %3
  %46 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 7
  %47 = load %class.TInfoSink*, %class.TInfoSink** %46, align 8
  %48 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %47, i64 0, i32 0
  %49 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %struct.TSourceLoc* %49 to i64*
  %51 = load i64, i64* %50, align 4
  %52 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2
  %53 = bitcast i32* %52 to i64*
  %54 = load i64, i64* %53, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %48, i32 4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i64 %51, i64 %54) #6
  br label %55

55:                                               ; preds = %45, %9
  ret i1 false
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: optsize
declare void @_ZNK5TType17getCompleteStringEv(%"class.std::__1::basic_string"* sret, %class.TType*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN15TConstTraverser10visitUnaryE5VisitP12TIntermUnary(%class.TConstTraverser*, i32, %class.TIntermUnary* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #6
  store %class.TPoolAllocator* %9, %class.TPoolAllocator** %8, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #7
  %10 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i64 42) #6
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #7
  %12 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 4
  call void @_ZNK5TType17getCompleteStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %class.TType* %12) #6
  %13 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %15 to i64
  %22 = select i1 %16, i8* %18, i8* %11
  %23 = select i1 %16, i64 %20, i64 %21
  %24 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %22, i64 %23) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #7
  %25 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 7
  %26 = load %class.TInfoSink*, %class.TInfoSink** %25, align 8
  %27 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %26, i64 0, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = load i8*, i8** %7, align 8
  %33 = select i1 %31, i8* %32, i8* %6
  %34 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %struct.TSourceLoc* %34 to i64*
  %36 = load i64, i64* %35, align 4
  %37 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2
  %38 = bitcast i32* %37 to i64*
  %39 = load i64, i64* %38, align 4
  call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %27, i32 3, i8* %33, i64 %36, i64 %39) #6
  %40 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 1
  store i8 1, i8* %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #7
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN15TConstTraverser14visitAggregateE5VisitP16TIntermAggregate(%class.TConstTraverser*, i32, %class.TIntermAggregate*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %class.TIntermAggregate* %2 to %class.TIntermOperator*
  %7 = tail call zeroext i1 @_ZNK15TIntermOperator13isConstructorEv(%class.TIntermOperator* %6) #6
  br i1 %7, label %48, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 28
  br i1 %11, label %48, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #6
  store %class.TPoolAllocator* %16, %class.TPoolAllocator** %15, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #7
  %17 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i64 42) #6
  %18 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #7
  %19 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 4
  call void @_ZNK5TType17getCompleteStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %class.TType* %19) #6
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %22 to i64
  %29 = select i1 %23, i8* %25, i8* %18
  %30 = select i1 %23, i64 %27, i64 %28
  %31 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %29, i64 %30) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #7
  %32 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 7
  %33 = load %class.TInfoSink*, %class.TInfoSink** %32, align 8
  %34 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %33, i64 0, i32 0
  %35 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = load i8*, i8** %14, align 8
  %40 = select i1 %38, i8* %39, i8* %13
  %41 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast %struct.TSourceLoc* %41 to i64*
  %43 = load i64, i64* %42, align 4
  %44 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2
  %45 = bitcast i32* %44 to i64*
  %46 = load i64, i64* %45, align 4
  call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %34, i32 3, i8* %40, i64 %43, i64 %46) #6
  %47 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 1
  store i8 1, i8* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #7
  br label %134

48:                                               ; preds = %8, %3
  %49 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 2, i32 0
  %50 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %51 = bitcast %class.TIntermNode*** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector"* %49 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = ashr exact i64 %55, 3
  switch i64 %56, label %104 [
    i64 0, label %57
    i64 1, label %59
  ]

57:                                               ; preds = %48
  %58 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 1
  store i8 1, i8* %58, align 8
  br label %134

59:                                               ; preds = %48
  %60 = inttoptr i64 %54 to %class.TIntermNode**
  %61 = load %class.TIntermNode*, %class.TIntermNode** %60, align 8
  %62 = bitcast %class.TIntermNode* %61 to %class.TIntermTyped* (%class.TIntermNode*)***
  %63 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %62, align 8
  %64 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %63, i64 1
  %65 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %64, align 8
  %66 = tail call %class.TIntermTyped* %65(%class.TIntermNode* %61) #6
  %67 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %66, i64 0, i32 0
  %68 = bitcast %class.TIntermTyped* %66 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %69 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %68, align 8
  %70 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %69, i64 2
  %71 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %70, align 8
  %72 = tail call %class.TIntermConstantUnion* %71(%class.TIntermNode* %67) #6
  %73 = icmp eq %class.TIntermConstantUnion* %72, null
  br i1 %73, label %104, label %74

74:                                               ; preds = %59
  %75 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 6
  store i8 1, i8* %75, align 4
  %76 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 5
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1
  %80 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 5
  %81 = load i8, i8* %80, align 1, !range !2
  %82 = icmp eq i8 %81, 0
  %83 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %79) #6
  br i1 %82, label %93, label %84

84:                                               ; preds = %74
  %85 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 6
  %86 = load i32, i32* %85, align 8
  %87 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 7
  %88 = load i32, i32* %87, align 4
  %89 = icmp slt i32 %86, %88
  %90 = select i1 %89, i32 %88, i32 %86
  %91 = sext i32 %90 to i64
  %92 = mul i64 %83, %91
  br label %93

93:                                               ; preds = %74, %84
  %94 = phi i64 [ %92, %84 ], [ %83, %74 ]
  %95 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 8
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 4
  %97 = load i8, i8* %96, align 4
  %98 = icmp ugt i8 %97, 1
  br i1 %98, label %99, label %104

99:                                               ; preds = %93
  %100 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 9
  store i8 1, i8* %100, align 8
  %101 = load i8, i8* %96, align 4
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 10
  store i32 %102, i32* %103, align 4
  br label %104

104:                                              ; preds = %59, %48, %93, %99
  %105 = phi i1 [ true, %93 ], [ true, %99 ], [ false, %59 ], [ false, %48 ]
  %106 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %49, i64 0, i32 0, i32 0
  %107 = load %class.TIntermNode**, %class.TIntermNode*** %106, align 8
  %108 = load %class.TIntermNode**, %class.TIntermNode*** %50, align 8
  %109 = icmp eq %class.TIntermNode** %107, %108
  br i1 %109, label %114, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 1
  %112 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 2
  %113 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 0
  br label %115

114:                                              ; preds = %120, %104
  br i1 %105, label %128, label %134

115:                                              ; preds = %110, %120
  %116 = phi %class.TIntermNode** [ %107, %110 ], [ %125, %120 ]
  %117 = load i32, i32* %111, align 8
  %118 = icmp eq i32 %117, 28
  br i1 %118, label %119, label %120

119:                                              ; preds = %115
  store i64 0, i64* %112, align 8
  br label %120

120:                                              ; preds = %119, %115
  %121 = load %class.TIntermNode*, %class.TIntermNode** %116, align 8
  %122 = bitcast %class.TIntermNode* %121 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %123 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %122, align 8
  %124 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %123, align 8
  tail call void %124(%class.TIntermNode* %121, %class.TIntermTraverser* %113) #6
  %125 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %116, i64 1
  %126 = load %class.TIntermNode**, %class.TIntermNode*** %50, align 8
  %127 = icmp eq %class.TIntermNode** %125, %126
  br i1 %127, label %114, label %115

128:                                              ; preds = %114
  %129 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 6
  store i8 0, i8* %129, align 4
  %130 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 5
  store i32 0, i32* %130, align 8
  %131 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 8
  store i64 0, i64* %131, align 8
  %132 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 9
  store i8 0, i8* %132, align 8
  %133 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 10
  store i32 0, i32* %133, align 4
  br label %134

134:                                              ; preds = %114, %128, %57, %12
  ret i1 false
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK15TIntermOperator13isConstructorEv(%class.TIntermOperator*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN15TConstTraverser14visitSelectionE5VisitP16TIntermSelection(%class.TConstTraverser* nocapture, i32, %class.TIntermSelection* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 7
  %5 = load %class.TInfoSink*, %class.TInfoSink** %4, align 8
  %6 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %5, i64 0, i32 0
  %7 = getelementptr inbounds %class.TIntermSelection, %class.TIntermSelection* %2, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %struct.TSourceLoc* %7 to i64*
  %9 = load i64, i64* %8, align 4
  %10 = getelementptr inbounds %class.TIntermSelection, %class.TIntermSelection* %2, i64 0, i32 0, i32 0, i32 1, i32 2
  %11 = bitcast i32* %10 to i64*
  %12 = load i64, i64* %11, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %6, i32 4, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i64 %9, i64 %12) #6
  %13 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 1
  store i8 1, i8* %13, align 8
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN15TConstTraverser18visitConstantUnionEP20TIntermConstantUnion(%class.TConstTraverser*, %class.TIntermConstantUnion*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %1, i64 0, i32 1
  %4 = load %class.ConstantUnion*, %class.ConstantUnion** %3, align 8
  %5 = icmp eq %class.ConstantUnion* %4, null
  br i1 %5, label %67, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 3
  %8 = load %class.ConstantUnion*, %class.ConstantUnion** %7, align 8
  %9 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 4
  %10 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 4, i32 5
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %9) #6
  br i1 %12, label %23, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 4, i32 6
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 4, i32 7
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %16, %18
  %20 = select i1 %19, i32 %18, i32 %16
  %21 = sext i32 %20 to i64
  %22 = mul i64 %13, %21
  br label %23

23:                                               ; preds = %6, %14
  %24 = phi i64 [ %22, %14 ], [ %13, %6 ]
  %25 = getelementptr inbounds %class.TType, %class.TType* %9, i64 0, i32 0
  %26 = load i8, i8* %25, align 8
  %27 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %28, %24
  br i1 %29, label %30, label %67

30:                                               ; preds = %23
  %31 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 6
  %32 = load i8, i8* %31, align 4, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %68

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %1, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %1, i64 0, i32 0, i32 1, i32 5
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  %39 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %35) #6
  br i1 %38, label %49, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %1, i64 0, i32 0, i32 1, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %1, i64 0, i32 0, i32 1, i32 7
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %42, %44
  %46 = select i1 %45, i32 %44, i32 %42
  %47 = sext i32 %46 to i64
  %48 = mul i64 %39, %47
  br label %49

49:                                               ; preds = %34, %40
  %50 = phi i64 [ %48, %40 ], [ %39, %34 ]
  %51 = load %class.ConstantUnion*, %class.ConstantUnion** %3, align 8
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %67, label %53

53:                                               ; preds = %49
  %54 = load i64, i64* %27, align 8
  br label %55

55:                                               ; preds = %59, %53
  %56 = phi i64 [ %64, %59 ], [ %54, %53 ]
  %57 = phi i64 [ %65, %59 ], [ 0, %53 ]
  %58 = icmp ult i64 %56, %24
  br i1 %58, label %59, label %67

59:                                               ; preds = %55
  %60 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %8, i64 %56
  %61 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %51, i64 %57
  %62 = tail call zeroext i1 @_ZN13ConstantUnion4castE10TBasicTypeRKS_(%class.ConstantUnion* %60, i8 zeroext %26, %class.ConstantUnion* dereferenceable(8) %61) #8
  %63 = load i64, i64* %27, align 8
  %64 = add i64 %63, 1
  store i64 %64, i64* %27, align 8
  %65 = add nuw i64 %57, 1
  %66 = icmp eq i64 %65, %50
  br i1 %66, label %67, label %55

67:                                               ; preds = %134, %108, %55, %59, %49, %77, %83, %2, %23
  ret void

68:                                               ; preds = %30
  %69 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 8
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, %28
  %72 = load %class.ConstantUnion*, %class.ConstantUnion** %3, align 8
  %73 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 9
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = icmp ult i64 %28, %71
  br i1 %75, label %83, label %77

77:                                               ; preds = %68
  br i1 %76, label %78, label %67

78:                                               ; preds = %77
  %79 = shl i64 %28, 32
  %80 = ashr exact i64 %79, 32
  %81 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 10
  %82 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %1, i64 0, i32 0, i32 1
  br label %117

83:                                               ; preds = %68
  br i1 %76, label %84, label %67

84:                                               ; preds = %83
  %85 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %1, i64 0, i32 0, i32 1
  %86 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %1, i64 0, i32 0, i32 1, i32 5
  %87 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %1, i64 0, i32 0, i32 1, i32 6
  %88 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %1, i64 0, i32 0, i32 1, i32 7
  br label %89

89:                                               ; preds = %84, %108
  %90 = phi i64 [ %28, %84 ], [ %113, %108 ]
  %91 = phi i32 [ 0, %84 ], [ %112, %108 ]
  %92 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %8, i64 %90
  %93 = zext i32 %91 to i64
  %94 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %72, i64 %93
  %95 = tail call zeroext i1 @_ZN13ConstantUnion4castE10TBasicTypeRKS_(%class.ConstantUnion* %92, i8 zeroext %26, %class.ConstantUnion* dereferenceable(8) %94) #8
  %96 = load i64, i64* %27, align 8
  %97 = add i64 %96, 1
  store i64 %97, i64* %27, align 8
  %98 = load i8, i8* %86, align 1, !range !2
  %99 = icmp eq i8 %98, 0
  %100 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %85) #6
  br i1 %99, label %108, label %101

101:                                              ; preds = %89
  %102 = load i32, i32* %87, align 8
  %103 = load i32, i32* %88, align 4
  %104 = icmp slt i32 %102, %103
  %105 = select i1 %104, i32 %103, i32 %102
  %106 = sext i32 %105 to i64
  %107 = mul i64 %100, %106
  br label %108

108:                                              ; preds = %89, %101
  %109 = phi i64 [ %107, %101 ], [ %100, %89 ]
  %110 = icmp ugt i64 %109, 1
  %111 = zext i1 %110 to i32
  %112 = add nuw nsw i32 %91, %111
  %113 = add nuw i64 %90, 1
  %114 = icmp ult i64 %113, %71
  %115 = icmp ult i64 %113, %24
  %116 = and i1 %114, %115
  br i1 %116, label %89, label %67

117:                                              ; preds = %78, %134
  %118 = phi i64 [ %28, %78 ], [ %138, %134 ]
  %119 = icmp eq i64 %118, %80
  br i1 %119, label %127, label %120

120:                                              ; preds = %117
  %121 = sub i64 %118, %80
  %122 = load i32, i32* %81, align 4
  %123 = add nsw i32 %122, 1
  %124 = sext i32 %123 to i64
  %125 = urem i64 %121, %124
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %120, %117
  %128 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %8, i64 %118
  %129 = tail call zeroext i1 @_ZN13ConstantUnion4castE10TBasicTypeRKS_(%class.ConstantUnion* %128, i8 zeroext %26, %class.ConstantUnion* dereferenceable(8) %72) #8
  br label %134

130:                                              ; preds = %120
  %131 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %8, i64 %118
  %132 = bitcast %class.ConstantUnion* %131 to float*
  store float 0.000000e+00, float* %132, align 4
  %133 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %8, i64 %118, i32 1
  store i8 1, i8* %133, align 4
  br label %134

134:                                              ; preds = %130, %127
  %135 = load i64, i64* %27, align 8
  %136 = add i64 %135, 1
  store i64 %136, i64* %27, align 8
  %137 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %82) #6
  %138 = add nuw i64 %118, 1
  %139 = icmp ult i64 %138, %71
  %140 = icmp ult i64 %138, %24
  %141 = and i1 %139, %140
  br i1 %141, label %117, label %67
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN13ConstantUnion4castE10TBasicTypeRKS_(%class.ConstantUnion*, i8 zeroext, %class.ConstantUnion* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  switch i8 %1, label %133 [
    i8 1, label %4
    i8 2, label %31
    i8 3, label %56
    i8 4, label %81
    i8 37, label %110
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  switch i8 %6, label %133 [
    i8 2, label %7
    i8 3, label %13
    i8 4, label %19
    i8 1, label %26
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to float
  %11 = bitcast %class.ConstantUnion* %0 to float*
  store float %10, float* %11, align 4
  %12 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 1, i8* %12, align 4
  br label %133

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = uitofp i32 %15 to float
  %17 = bitcast %class.ConstantUnion* %0 to float*
  store float %16, float* %17, align 4
  %18 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 1, i8* %18, align 4
  br label %133

19:                                               ; preds = %4
  %20 = bitcast %class.ConstantUnion* %2 to i8*
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = icmp ne i8 %21, 0
  %23 = uitofp i1 %22 to float
  %24 = bitcast %class.ConstantUnion* %0 to float*
  store float %23, float* %24, align 4
  %25 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 1, i8* %25, align 4
  br label %133

26:                                               ; preds = %4
  %27 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 1, i8* %30, align 4
  br label %133

31:                                               ; preds = %3
  %32 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 1
  %33 = load i8, i8* %32, align 4
  switch i8 %33, label %133 [
    i8 2, label %34
    i8 3, label %39
    i8 4, label %44
    i8 1, label %50
  ]

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 2, i8* %38, align 4
  br label %133

39:                                               ; preds = %31
  %40 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 2, i8* %43, align 4
  br label %133

44:                                               ; preds = %31
  %45 = bitcast %class.ConstantUnion* %2 to i8*
  %46 = load i8, i8* %45, align 4, !range !2
  %47 = zext i8 %46 to i32
  %48 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 2, i8* %49, align 4
  br label %133

50:                                               ; preds = %31
  %51 = bitcast %class.ConstantUnion* %2 to float*
  %52 = load float, float* %51, align 4
  %53 = fptosi float %52 to i32
  %54 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 2, i8* %55, align 4
  br label %133

56:                                               ; preds = %3
  %57 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 1
  %58 = load i8, i8* %57, align 4
  switch i8 %58, label %133 [
    i8 2, label %59
    i8 3, label %64
    i8 4, label %69
    i8 1, label %75
  ]

59:                                               ; preds = %56
  %60 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  store i32 %61, i32* %62, align 4
  %63 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 3, i8* %63, align 4
  br label %133

64:                                               ; preds = %56
  %65 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 3, i8* %68, align 4
  br label %133

69:                                               ; preds = %56
  %70 = bitcast %class.ConstantUnion* %2 to i8*
  %71 = load i8, i8* %70, align 4, !range !2
  %72 = zext i8 %71 to i32
  %73 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  store i32 %72, i32* %73, align 4
  %74 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 3, i8* %74, align 4
  br label %133

75:                                               ; preds = %56
  %76 = bitcast %class.ConstantUnion* %2 to float*
  %77 = load float, float* %76, align 4
  %78 = fptoui float %77 to i32
  %79 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  store i32 %78, i32* %79, align 4
  %80 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 3, i8* %80, align 4
  br label %133

81:                                               ; preds = %3
  %82 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 1
  %83 = load i8, i8* %82, align 4
  switch i8 %83, label %133 [
    i8 2, label %84
    i8 3, label %91
    i8 4, label %98
    i8 1, label %103
  ]

84:                                               ; preds = %81
  %85 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp ne i32 %86, 0
  %88 = zext i1 %87 to i8
  %89 = bitcast %class.ConstantUnion* %0 to i8*
  store i8 %88, i8* %89, align 4
  %90 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 4, i8* %90, align 4
  br label %133

91:                                               ; preds = %81
  %92 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp ne i32 %93, 0
  %95 = zext i1 %94 to i8
  %96 = bitcast %class.ConstantUnion* %0 to i8*
  store i8 %95, i8* %96, align 4
  %97 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 4, i8* %97, align 4
  br label %133

98:                                               ; preds = %81
  %99 = bitcast %class.ConstantUnion* %2 to i8*
  %100 = load i8, i8* %99, align 4, !range !2
  %101 = bitcast %class.ConstantUnion* %0 to i8*
  store i8 %100, i8* %101, align 4
  %102 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 4, i8* %102, align 4
  br label %133

103:                                              ; preds = %81
  %104 = bitcast %class.ConstantUnion* %2 to float*
  %105 = load float, float* %104, align 4
  %106 = fcmp une float %105, 0.000000e+00
  %107 = zext i1 %106 to i8
  %108 = bitcast %class.ConstantUnion* %0 to i8*
  store i8 %107, i8* %108, align 4
  %109 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 4, i8* %109, align 4
  br label %133

110:                                              ; preds = %3
  %111 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 1
  %112 = load i8, i8* %111, align 4
  switch i8 %112, label %133 [
    i8 2, label %113
    i8 3, label %118
    i8 4, label %123
    i8 1, label %128
  ]

113:                                              ; preds = %110
  %114 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  store i32 %115, i32* %116, align 4
  %117 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 2, i8* %117, align 4
  br label %133

118:                                              ; preds = %110
  %119 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  store i32 %120, i32* %121, align 4
  %122 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 3, i8* %122, align 4
  br label %133

123:                                              ; preds = %110
  %124 = bitcast %class.ConstantUnion* %2 to i8*
  %125 = load i8, i8* %124, align 4, !range !2
  %126 = bitcast %class.ConstantUnion* %0 to i8*
  store i8 %125, i8* %126, align 4
  %127 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 4, i8* %127, align 4
  br label %133

128:                                              ; preds = %110
  %129 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %2, i64 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 0, i32 0
  store i32 %130, i32* %131, align 4
  %132 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %0, i64 0, i32 1
  store i8 1, i8* %132, align 4
  br label %133

133:                                              ; preds = %26, %19, %13, %7, %50, %44, %39, %34, %75, %69, %64, %59, %103, %98, %91, %84, %128, %123, %118, %113, %3, %110, %81, %56, %31, %4
  %134 = phi i1 [ false, %4 ], [ false, %31 ], [ false, %56 ], [ false, %81 ], [ false, %110 ], [ false, %3 ], [ true, %113 ], [ true, %118 ], [ true, %123 ], [ true, %128 ], [ true, %84 ], [ true, %91 ], [ true, %98 ], [ true, %103 ], [ true, %59 ], [ true, %64 ], [ true, %69 ], [ true, %75 ], [ true, %34 ], [ true, %39 ], [ true, %44 ], [ true, %50 ], [ true, %7 ], [ true, %13 ], [ true, %19 ], [ true, %26 ]
  ret i1 %134
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN15TConstTraverser9visitLoopE5VisitP11TIntermLoop(%class.TConstTraverser* nocapture, i32, %class.TIntermLoop* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 7
  %5 = load %class.TInfoSink*, %class.TInfoSink** %4, align 8
  %6 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %5, i64 0, i32 0
  %7 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %2, i64 0, i32 0, i32 1
  %8 = bitcast %struct.TSourceLoc* %7 to i64*
  %9 = load i64, i64* %8, align 4
  %10 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %2, i64 0, i32 0, i32 1, i32 2
  %11 = bitcast i32* %10 to i64*
  %12 = load i64, i64* %11, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %6, i32 4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i64 %9, i64 %12) #6
  %13 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 1
  store i8 1, i8* %13, align 8
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN15TConstTraverser11visitBranchE5VisitP13TIntermBranch(%class.TConstTraverser* nocapture, i32, %class.TIntermBranch* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 7
  %5 = load %class.TInfoSink*, %class.TInfoSink** %4, align 8
  %6 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %5, i64 0, i32 0
  %7 = getelementptr inbounds %class.TIntermBranch, %class.TIntermBranch* %2, i64 0, i32 0, i32 1
  %8 = bitcast %struct.TSourceLoc* %7 to i64*
  %9 = load i64, i64* %8, align 4
  %10 = getelementptr inbounds %class.TIntermBranch, %class.TIntermBranch* %2, i64 0, i32 0, i32 1, i32 2
  %11 = bitcast i32* %10 to i64*
  %12 = load i64, i64* %11, align 4
  tail call void @_ZN13TInfoSinkBase7messageE11TPrefixTypePKc10TSourceLoc(%class.TInfoSinkBase* %6, i32 4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i64 %9, i64 %12) #6
  %13 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 1
  store i8 1, i8* %13, align 8
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN13TIntermediate14parseConstTreeERK10TSourceLocP11TIntermNodeP13ConstantUnion9TOperator5TTypeb(%class.TIntermediate* nocapture readonly, %struct.TSourceLoc* nocapture readnone dereferenceable(16), %class.TIntermNode*, %class.ConstantUnion*, i32, %class.TType* nocapture readonly byval(%class.TType) align 8, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.TConstTraverser, align 8
  %9 = icmp eq %class.TIntermNode* %2, null
  br i1 %9, label %57, label %10

10:                                               ; preds = %7
  %11 = bitcast %class.TConstTraverser* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %11) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 192, i1 false)
  %12 = bitcast %class.TIntermediate* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = zext i1 %6 to i8
  %15 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 0, i32 1
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 0, i32 6, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %17, i8 0, i64 31, i1 false) #7
  %19 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #6
  store %class.TPoolAllocator* %19, %class.TPoolAllocator** %18, align 8
  %20 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 0, i32 7
  %21 = bitcast %"class.std::__1::vector.6"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV15TConstTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %22 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 1
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 2
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 3
  store %class.ConstantUnion* %3, %class.ConstantUnion** %24, align 8
  %25 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 4, i32 0
  %26 = getelementptr inbounds %class.TType, %class.TType* %5, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* nonnull align 8 %26, i64 64, i1 false) #7
  %27 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 5
  store i32 %4, i32* %27, align 8
  %28 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 6
  store i8 %14, i8* %28, align 4
  %29 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 7
  %30 = bitcast %class.TInfoSink** %29 to i64*
  store i64 %13, i64* %30, align 8
  %31 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 8
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 9
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 10
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 0
  %35 = bitcast %class.TIntermNode* %2 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %36 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %35, align 8
  %37 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %36, align 8
  call void %37(%class.TIntermNode* nonnull %2, %class.TIntermTraverser* nonnull %34) #6
  %38 = load i8, i8* %22, align 8, !range !2
  %39 = icmp ne i8 %38, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %40 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 0, i32 7, i32 0, i32 0
  %41 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %40, align 8
  %42 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %10
  %44 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %41 to i64
  %45 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 0, i32 7, i32 0, i32 1
  %46 = bitcast %"struct.TIntermTraverser::ParentBlock"** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = bitcast %"struct.TIntermTraverser::ParentBlock"* %41 to i8*
  call void @_ZdlPv(i8* %47) #9
  br label %48

48:                                               ; preds = %43, %10
  %49 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %50 = load %class.TIntermNode**, %class.TIntermNode*** %49, align 8
  %51 = icmp eq %class.TIntermNode** %50, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = ptrtoint %class.TIntermNode** %50 to i64
  %54 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %8, i64 0, i32 0, i32 6, i32 0, i32 0, i32 1
  %55 = bitcast %class.TIntermNode*** %54 to i64*
  store i64 %53, i64* %55, align 8
  br label %56

56:                                               ; preds = %48, %52
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %11) #7
  br label %57

57:                                               ; preds = %7, %56
  %58 = phi i1 [ %39, %56 ], [ false, %7 ]
  ret i1 %58
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN15TConstTraverserD0Ev(%class.TConstTraverser*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %4 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %3, align 8
  %5 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %4 to i64
  %8 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 0, i32 7, i32 0, i32 1
  %9 = bitcast %"struct.TIntermTraverser::ParentBlock"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.TIntermTraverser::ParentBlock"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %14 = icmp eq %class.TIntermNode** %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %class.TIntermNode** %13 to i64
  %17 = getelementptr inbounds %class.TConstTraverser, %class.TConstTraverser* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 1
  %18 = bitcast %class.TIntermNode*** %17 to i64*
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch(%class.TIntermTraverser*, i32, %class.TIntermSwitch*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase(%class.TIntermTraverser*, i32, %class.TIntermCase*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNK5TType14getElementSizeEv(%class.TType*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  switch i8 %3, label %15 [
    i8 37, label %4
    i8 38, label %6
  ]

4:                                                ; preds = %1
  %5 = tail call i64 @_ZNK5TType13getStructSizeEv(%class.TType* %0) #6
  br label %25

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 9
  %8 = bitcast %class.TInterfaceBlock** %7 to %class.TFieldListCollection**
  %9 = load %class.TFieldListCollection*, %class.TFieldListCollection** %8, align 8
  %10 = getelementptr inbounds %class.TFieldListCollection, %class.TFieldListCollection* %9, i64 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %6
  %14 = tail call i64 @_ZNK20TFieldListCollection19calculateObjectSizeEv(%class.TFieldListCollection* %9) #6
  store i64 %14, i64* %10, align 8
  br label %25

15:                                               ; preds = %1
  %16 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %17 = load i8, i8* %16, align 4
  %18 = icmp ugt i8 %17, 1
  %19 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  br i1 %18, label %22, label %25

22:                                               ; preds = %15
  %23 = zext i8 %17 to i64
  %24 = mul nuw nsw i64 %21, %23
  br label %25

25:                                               ; preds = %13, %6, %15, %22, %4
  %26 = phi i64 [ %5, %4 ], [ %24, %22 ], [ %21, %15 ], [ %14, %13 ], [ %11, %6 ]
  ret i64 %26
}

; Function Attrs: optsize
declare i64 @_ZNK5TType13getStructSizeEv(%class.TType*) local_unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZNK20TFieldListCollection19calculateObjectSizeEv(%class.TFieldListCollection*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverserD2Ev(%class.TIntermTraverser*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %3, align 8
  %5 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %4 to i64
  %8 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 1
  %9 = bitcast %"struct.TIntermTraverser::ParentBlock"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.TIntermTraverser::ParentBlock"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %14 = icmp eq %class.TIntermNode** %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %class.TIntermNode** %13 to i64
  %17 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %18 = bitcast %class.TIntermNode*** %17 to i64*
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverserD0Ev(%class.TIntermTraverser*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %3, align 8
  %5 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %4 to i64
  %8 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 1
  %9 = bitcast %"struct.TIntermTraverser::ParentBlock"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.TIntermTraverser::ParentBlock"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %14 = icmp eq %class.TIntermNode** %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %class.TIntermNode** %13 to i64
  %17 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %18 = bitcast %class.TIntermNode*** %17 to i64*
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol(%class.TIntermTraverser*, %class.TIntermSymbol*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion(%class.TIntermTraverser*, %class.TIntermConstantUnion*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary(%class.TIntermTraverser*, i32, %class.TIntermBinary*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary(%class.TIntermTraverser*, i32, %class.TIntermUnary*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection(%class.TIntermTraverser*, i32, %class.TIntermSelection*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate(%class.TIntermTraverser*, i32, %class.TIntermAggregate*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop(%class.TIntermTraverser*, i32, %class.TIntermLoop*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch(%class.TIntermTraverser*, i32, %class.TIntermBranch*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: optsize
declare %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 9223372036854775807
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  br label %17

15:                                               ; preds = %3
  %16 = zext i8 %6 to i64
  br label %17

17:                                               ; preds = %8, %15
  %18 = phi i64 [ %12, %8 ], [ 22, %15 ]
  %19 = phi i64 [ %14, %8 ], [ %16, %15 ]
  %20 = sub i64 %18, %19
  %21 = icmp ult i64 %20, %2
  br i1 %21, label %42, label %22

22:                                               ; preds = %17
  %23 = icmp eq i64 %2, 0
  br i1 %23, label %45, label %24

24:                                               ; preds = %22
  br i1 %7, label %25, label %28

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  br label %30

28:                                               ; preds = %24
  %29 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %30

30:                                               ; preds = %25, %28
  %31 = phi i8* [ %27, %25 ], [ %29, %28 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %1, i64 %2, i1 false) #7
  %33 = add i64 %19, %2
  %34 = load i8, i8* %5, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %37, align 8
  br label %40

38:                                               ; preds = %30
  %39 = trunc i64 %33 to i8
  store i8 %39, i8* %5, align 1
  br label %40

40:                                               ; preds = %36, %38
  %41 = getelementptr inbounds i8, i8* %31, i64 %33
  store i8 0, i8* %41, align 1
  br label %45

42:                                               ; preds = %17
  %43 = add i64 %19, %2
  %44 = sub i64 %43, %18
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE21__grow_by_and_replaceEmmmmmmPKc(%"class.std::__1::basic_string"* %0, i64 %18, i64 %44, i64 %19, i64 %19, i64 0, i64 %2, i8* %1) #8
  br label %45

45:                                               ; preds = %22, %40, %42
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE21__grow_by_and_replaceEmmmmmmPKc(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i8*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 -18, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #10
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i8* [ %20, %18 ], [ %22, %21 ]
  %25 = icmp ult i64 %1, 9223372036854775783
  br i1 %25, label %26, label %35

26:                                               ; preds = %23
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 23
  br i1 %31, label %35, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 16
  %34 = and i64 %33, -16
  br label %35

35:                                               ; preds = %23, %32, %26
  %36 = phi i64 [ %34, %32 ], [ 23, %26 ], [ -17, %23 ]
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %class.TPoolAllocator*, %class.TPoolAllocator** %37, align 8
  %39 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %38, i64 %36) #6
  %40 = icmp eq i64 %4, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %35
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %24, i64 %4, i1 false) #7
  br label %42

42:                                               ; preds = %35, %41
  %43 = icmp eq i64 %6, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds i8, i8* %39, i64 %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %7, i64 %6, i1 false) #7
  br label %46

46:                                               ; preds = %42, %44
  %47 = sub i64 %3, %5
  %48 = sub i64 %47, %4
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds i8, i8* %39, i64 %4
  %52 = getelementptr inbounds i8, i8* %51, i64 %6
  %53 = getelementptr inbounds i8, i8* %24, i64 %4
  %54 = getelementptr inbounds i8, i8* %53, i64 %5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %54, i64 %48, i1 false) #7
  br label %55

55:                                               ; preds = %50, %46
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %56, align 8
  %57 = or i64 %36, -9223372036854775808
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %57, i64* %58, align 8
  %59 = add i64 %47, %6
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %39, i64 %59
  store i8 0, i8* %61, align 1
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: optsize
declare i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator*, i64) local_unnamed_addr #1

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind optsize }
attributes #7 = { nounwind }
attributes #8 = { optsize }
attributes #9 = { builtin nounwind optsize }
attributes #10 = { noreturn nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
