; ModuleID = '../../third_party/skia/src/gpu/vk/GrVkMSAALoadManager.cpp'
source_filename = "../../third_party/skia/src/gpu/vk/GrVkMSAALoadManager.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrVkMSAALoadManager = type { %struct.VkShaderModule_T*, %struct.VkShaderModule_T*, [2 x %struct.VkPipelineShaderStageCreateInfo], %struct.VkPipelineLayout_T* }
%struct.VkShaderModule_T = type opaque
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineLayout_T = type opaque
%class.GrVkGpu = type { %class.GrGpu, %class.sk_sp.193, %class.sk_sp.337, %class.sk_sp.338, i8, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %class.GrVkResourceProvider, %class.GrStagingBufferManager, %class.GrVkMSAALoadManager, %class.GrVkCommandPool*, %class.GrVkPrimaryCommandBuffer*, %class.SkSTArray.436, %class.SkSTArray.436, %class.SkTArray.439, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceMemoryProperties, i8, i8, %"class.std::__1::unique_ptr.446" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.1, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.1 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.41", %"class.std::__1::shared_ptr.41", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.43", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.49" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.13", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.15" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.40"* }
%"class.std::__1::vector.40" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.41" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.41", %"class.std::__1::vector.452", i8, %"class.std::__1::vector.460", %"class.std::__1::forward_list", %class.SkTHashMap.473, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.452" = type { %"class.std::__1::__vector_base.453" }
%"class.std::__1::__vector_base.453" = type { %"class.std::__1::unique_ptr.454"*, %"class.std::__1::unique_ptr.454"*, %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.std::__1::unique_ptr.454"* }
%"class.std::__1::vector.460" = type { %"class.std::__1::__vector_base.461" }
%"class.std::__1::__vector_base.461" = type { %"class.std::__1::unique_ptr.462"*, %"class.std::__1::unique_ptr.462"*, %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.std::__1::unique_ptr.462"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.473 = type { %class.SkTHashTable.474 }
%class.SkTHashTable.474 = type { i32, i32, %class.SkAutoTArray.475 }
%class.SkAutoTArray.475 = type { %"class.std::__1::unique_ptr.476" }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.522" }
%"struct.std::__1::pair.522" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.41", %"class.std::__1::shared_ptr.42" }
%"class.std::__1::shared_ptr.42" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.21", %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.37", [4 x i8] }>
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23", %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i64 }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { i64*, i64*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i64* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %class.sk_sp.123, %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.167", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.186" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.60", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.59 }
%class.sk_sp.59 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.70, %class.SkTArray.79, %class.SkTArray.81, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.63"*, i64 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.81, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.82 }
%class.sk_sp.82 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.64" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.70 = type { %class.SkTHashTable.71 }
%class.SkTHashTable.71 = type { i32, i32, %class.SkAutoTArray.72 }
%class.SkAutoTArray.72 = type { %"class.std::__1::unique_ptr.73" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.505" }
%"struct.std::__1::pair.505" = type { i32, %class.SkTArray.506* }
%class.SkTArray.506 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.79 = type { %"class.std::__1::unique_ptr.80"*, i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.506, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.81 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.95 }
%class.SkFibBlockSizes.95 = type { i32 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.123 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.137, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.155, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.127, [4 x i8] }>
%union.anon.127 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.128, i8* }
%class.sk_sp.128 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.129 }
%class.SkTHashTable.129 = type { i32, i32, %class.SkAutoTArray.130 }
%class.SkAutoTArray.130 = type { %"class.std::__1::unique_ptr.131" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.137 = type { %class.SkTHashTable.138 }
%class.SkTHashTable.138 = type { i32, i32, %class.SkAutoTArray.139 }
%class.SkAutoTArray.139 = type { %"class.std::__1::unique_ptr.140" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.146, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.146 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.147" }
%"struct.std::__1::atomic.147" = type { %"struct.std::__1::__atomic_base.148" }
%"struct.std::__1::__atomic_base.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__cxx_atomic_impl.150" }
%"struct.std::__1::__cxx_atomic_impl.150" = type { %"struct.std::__1::__cxx_atomic_base_impl.151" }
%"struct.std::__1::__cxx_atomic_base_impl.151" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.152, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.152 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.153 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.153 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.154, void (i8*)*, i8* }
%class.SkNVRefCnt.154 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.155 = type { %class.SkTHashTable.156 }
%class.SkTHashTable.156 = type { i32, i32, %class.SkAutoTArray.157 }
%class.SkAutoTArray.157 = type { %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp, %class.sk_sp.170, %class.sk_sp.170 }
%class.sk_sp.170 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.192 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.192 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%class.sk_sp.193 = type { %struct.GrVkInterface* }
%struct.GrVkInterface = type { %class.SkRefCnt.base, %"struct.GrVkInterface::Functions" }
%"struct.GrVkInterface::Functions" = type { %"class.GrVkInterface::VkPtr", %"class.GrVkInterface::VkPtr.194", %"class.GrVkInterface::VkPtr.195", %"class.GrVkInterface::VkPtr.196", %"class.GrVkInterface::VkPtr.197", %"class.GrVkInterface::VkPtr.198", %"class.GrVkInterface::VkPtr.199", %"class.GrVkInterface::VkPtr.200", %"class.GrVkInterface::VkPtr.201", %"class.GrVkInterface::VkPtr.202", %"class.GrVkInterface::VkPtr.203", %"class.GrVkInterface::VkPtr.204", %"class.GrVkInterface::VkPtr.205", %"class.GrVkInterface::VkPtr.206", %"class.GrVkInterface::VkPtr.207", %"class.GrVkInterface::VkPtr.208", %"class.GrVkInterface::VkPtr.209", %"class.GrVkInterface::VkPtr.210", %"class.GrVkInterface::VkPtr.211", %"class.GrVkInterface::VkPtr.212", %"class.GrVkInterface::VkPtr.213", %"class.GrVkInterface::VkPtr.214", %"class.GrVkInterface::VkPtr.215", %"class.GrVkInterface::VkPtr.216", %"class.GrVkInterface::VkPtr.216", %"class.GrVkInterface::VkPtr.217", %"class.GrVkInterface::VkPtr.218", %"class.GrVkInterface::VkPtr.219", %"class.GrVkInterface::VkPtr.220", %"class.GrVkInterface::VkPtr.221", %"class.GrVkInterface::VkPtr.222", %"class.GrVkInterface::VkPtr.223", %"class.GrVkInterface::VkPtr.224", %"class.GrVkInterface::VkPtr.225", %"class.GrVkInterface::VkPtr.226", %"class.GrVkInterface::VkPtr.227", %"class.GrVkInterface::VkPtr.228", %"class.GrVkInterface::VkPtr.229", %"class.GrVkInterface::VkPtr.230", %"class.GrVkInterface::VkPtr.231", %"class.GrVkInterface::VkPtr.232", %"class.GrVkInterface::VkPtr.233", %"class.GrVkInterface::VkPtr.234", %"class.GrVkInterface::VkPtr.234", %"class.GrVkInterface::VkPtr.234", %"class.GrVkInterface::VkPtr.235", %"class.GrVkInterface::VkPtr.236", %"class.GrVkInterface::VkPtr.237", %"class.GrVkInterface::VkPtr.238", %"class.GrVkInterface::VkPtr.239", %"class.GrVkInterface::VkPtr.240", %"class.GrVkInterface::VkPtr.241", %"class.GrVkInterface::VkPtr.242", %"class.GrVkInterface::VkPtr.243", %"class.GrVkInterface::VkPtr.244", %"class.GrVkInterface::VkPtr.245", %"class.GrVkInterface::VkPtr.246", %"class.GrVkInterface::VkPtr.247", %"class.GrVkInterface::VkPtr.248", %"class.GrVkInterface::VkPtr.249", %"class.GrVkInterface::VkPtr.250", %"class.GrVkInterface::VkPtr.251", %"class.GrVkInterface::VkPtr.252", %"class.GrVkInterface::VkPtr.253", %"class.GrVkInterface::VkPtr.254", %"class.GrVkInterface::VkPtr.255", %"class.GrVkInterface::VkPtr.256", %"class.GrVkInterface::VkPtr.257", %"class.GrVkInterface::VkPtr.258", %"class.GrVkInterface::VkPtr.259", %"class.GrVkInterface::VkPtr.260", %"class.GrVkInterface::VkPtr.261", %"class.GrVkInterface::VkPtr.262", %"class.GrVkInterface::VkPtr.263", %"class.GrVkInterface::VkPtr.264", %"class.GrVkInterface::VkPtr.265", %"class.GrVkInterface::VkPtr.266", %"class.GrVkInterface::VkPtr.267", %"class.GrVkInterface::VkPtr.268", %"class.GrVkInterface::VkPtr.269", %"class.GrVkInterface::VkPtr.270", %"class.GrVkInterface::VkPtr.271", %"class.GrVkInterface::VkPtr.272", %"class.GrVkInterface::VkPtr.273", %"class.GrVkInterface::VkPtr.274", %"class.GrVkInterface::VkPtr.275", %"class.GrVkInterface::VkPtr.276", %"class.GrVkInterface::VkPtr.277", %"class.GrVkInterface::VkPtr.278", %"class.GrVkInterface::VkPtr.279", %"class.GrVkInterface::VkPtr.280", %"class.GrVkInterface::VkPtr.281", %"class.GrVkInterface::VkPtr.282", %"class.GrVkInterface::VkPtr.283", %"class.GrVkInterface::VkPtr.284", %"class.GrVkInterface::VkPtr.285", %"class.GrVkInterface::VkPtr.286", %"class.GrVkInterface::VkPtr.287", %"class.GrVkInterface::VkPtr.288", %"class.GrVkInterface::VkPtr.288", %"class.GrVkInterface::VkPtr.288", %"class.GrVkInterface::VkPtr.289", %"class.GrVkInterface::VkPtr.290", %"class.GrVkInterface::VkPtr.291", %"class.GrVkInterface::VkPtr.292", %"class.GrVkInterface::VkPtr.293", %"class.GrVkInterface::VkPtr.294", %"class.GrVkInterface::VkPtr.294", %"class.GrVkInterface::VkPtr.295", %"class.GrVkInterface::VkPtr.296", %"class.GrVkInterface::VkPtr.297", %"class.GrVkInterface::VkPtr.298", %"class.GrVkInterface::VkPtr.299", %"class.GrVkInterface::VkPtr.300", %"class.GrVkInterface::VkPtr.301", %"class.GrVkInterface::VkPtr.302", %"class.GrVkInterface::VkPtr.303", %"class.GrVkInterface::VkPtr.304", %"class.GrVkInterface::VkPtr.305", %"class.GrVkInterface::VkPtr.306", %"class.GrVkInterface::VkPtr.307", %"class.GrVkInterface::VkPtr.308", %"class.GrVkInterface::VkPtr.308", %"class.GrVkInterface::VkPtr.309", %"class.GrVkInterface::VkPtr.310", %"class.GrVkInterface::VkPtr.311", %"class.GrVkInterface::VkPtr.312", %"class.GrVkInterface::VkPtr.311", %"class.GrVkInterface::VkPtr.313", %"class.GrVkInterface::VkPtr.314", %"class.GrVkInterface::VkPtr.315", %"class.GrVkInterface::VkPtr.316", %"class.GrVkInterface::VkPtr.317", %"class.GrVkInterface::VkPtr.318", %"class.GrVkInterface::VkPtr.319", %"class.GrVkInterface::VkPtr.320", %"class.GrVkInterface::VkPtr.321", %"class.GrVkInterface::VkPtr.322", %"class.GrVkInterface::VkPtr.323", %"class.GrVkInterface::VkPtr.324", %"class.GrVkInterface::VkPtr.325", %"class.GrVkInterface::VkPtr.326", %"class.GrVkInterface::VkPtr.327", %"class.GrVkInterface::VkPtr.328", %"class.GrVkInterface::VkPtr.329", %"class.GrVkInterface::VkPtr.330", %"class.GrVkInterface::VkPtr.331", %"class.GrVkInterface::VkPtr.332", %"class.GrVkInterface::VkPtr.333", %"class.GrVkInterface::VkPtr.334", %"class.GrVkInterface::VkPtr.335", %"class.GrVkInterface::VkPtr.336" }
%"class.GrVkInterface::VkPtr" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkInstance_T = type opaque
%"class.GrVkInterface::VkPtr.194" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.195" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.GrVkInterface::VkPtr.196" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.197" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.198" = type { i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.199" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.GrVkInterface::VkPtr.200" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.201" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%"class.GrVkInterface::VkPtr.202" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.GrVkInterface::VkPtr.203" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.204" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.GrVkInterface::VkPtr.205" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.GrVkInterface::VkPtr.206" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.GrVkInterface::VkPtr.207" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.GrVkInterface::VkPtr.208" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.GrVkInterface::VkPtr.209" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkCommandBuffer_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkFence_T = type opaque
%"class.GrVkInterface::VkPtr.210" = type { i32 (%struct.VkQueue_T*)* }
%"class.GrVkInterface::VkPtr.211" = type { i32 (%struct.VkDevice_T*)* }
%"class.GrVkInterface::VkPtr.212" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.GrVkInterface::VkPtr.213" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.214" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.GrVkInterface::VkPtr.215" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.GrVkInterface::VkPtr.216" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.GrVkInterface::VkPtr.217" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)* }
%"class.GrVkInterface::VkPtr.218" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.GrVkInterface::VkPtr.219" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkImage_T = type opaque
%"class.GrVkInterface::VkPtr.220" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.GrVkInterface::VkPtr.221" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.GrVkInterface::VkPtr.222" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)* }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%"class.GrVkInterface::VkPtr.223" = type { void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)* }
%"class.GrVkInterface::VkPtr.224" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)* }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.225" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.226" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.227" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.GrVkInterface::VkPtr.228" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.GrVkInterface::VkPtr.229" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.GrVkInterface::VkPtr.230" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.231" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.232" = type { i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)* }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkEvent_T = type opaque
%"class.GrVkInterface::VkPtr.233" = type { void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.234" = type { i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)* }
%"class.GrVkInterface::VkPtr.235" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)* }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkQueryPool_T = type opaque
%"class.GrVkInterface::VkPtr.236" = type { void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.237" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)* }
%"class.GrVkInterface::VkPtr.238" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.239" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.240" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%"class.GrVkInterface::VkPtr.241" = type { void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.242" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.GrVkInterface::VkPtr.243" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.244" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.GrVkInterface::VkPtr.245" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.GrVkInterface::VkPtr.246" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.247" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%"class.GrVkInterface::VkPtr.248" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.249" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)* }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineCache_T = type opaque
%"class.GrVkInterface::VkPtr.250" = type { void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.251" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)* }
%"class.GrVkInterface::VkPtr.252" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)* }
%"class.GrVkInterface::VkPtr.253" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkRenderPass_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.GrVkInterface::VkPtr.254" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%"class.GrVkInterface::VkPtr.255" = type { void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.256" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkPushConstantRange = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.257" = type { void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.258" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSampler_T = type opaque
%"class.GrVkInterface::VkPtr.259" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.260" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%"class.GrVkInterface::VkPtr.261" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.262" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorPool_T = type opaque
%"class.GrVkInterface::VkPtr.263" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.264" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.265" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorSet_T = type opaque
%"class.GrVkInterface::VkPtr.266" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.GrVkInterface::VkPtr.267" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.268" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkFramebuffer_T = type opaque
%"class.GrVkInterface::VkPtr.269" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.270" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.271" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.272" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)* }
%"class.GrVkInterface::VkPtr.273" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%"class.GrVkInterface::VkPtr.274" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.275" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.276" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%"class.GrVkInterface::VkPtr.277" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.278" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.279" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.280" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.281" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)* }
%"class.GrVkInterface::VkPtr.282" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)* }
%"class.GrVkInterface::VkPtr.283" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)* }
%"class.GrVkInterface::VkPtr.284" = type { void (%struct.VkCommandBuffer_T*, float)* }
%"class.GrVkInterface::VkPtr.285" = type { void (%struct.VkCommandBuffer_T*, float, float, float)* }
%"class.GrVkInterface::VkPtr.286" = type { void (%struct.VkCommandBuffer_T*, float*)* }
%"class.GrVkInterface::VkPtr.287" = type { void (%struct.VkCommandBuffer_T*, float, float)* }
%"class.GrVkInterface::VkPtr.288" = type { void (%struct.VkCommandBuffer_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.289" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)* }
%"class.GrVkInterface::VkPtr.290" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)* }
%"class.GrVkInterface::VkPtr.291" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)* }
%"class.GrVkInterface::VkPtr.292" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.293" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.294" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)* }
%"class.GrVkInterface::VkPtr.295" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.296" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)* }
%"class.GrVkInterface::VkPtr.297" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.GrVkInterface::VkPtr.298" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)* }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.299" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)* }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%"class.GrVkInterface::VkPtr.300" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.301" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)* }
%"class.GrVkInterface::VkPtr.302" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)* }
%"class.GrVkInterface::VkPtr.303" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.304" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)* }
%union.VkClearColorValue = type { [4 x float] }
%"class.GrVkInterface::VkPtr.305" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)* }
%struct.VkClearDepthStencilValue = type { float, i32 }
%"class.GrVkInterface::VkPtr.306" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)* }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%"class.GrVkInterface::VkPtr.307" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)* }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.308" = type { void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)* }
%"class.GrVkInterface::VkPtr.309" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%"class.GrVkInterface::VkPtr.310" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%"class.GrVkInterface::VkPtr.312" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.311" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.313" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.314" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.315" = type { void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)* }
%"class.GrVkInterface::VkPtr.316" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%"class.GrVkInterface::VkPtr.317" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.318" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.319" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.320" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.GrVkInterface::VkPtr.321" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.GrVkInterface::VkPtr.322" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.GrVkInterface::VkPtr.323" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%"class.GrVkInterface::VkPtr.324" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%"class.GrVkInterface::VkPtr.325" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.GrVkInterface::VkPtr.326" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%"class.GrVkInterface::VkPtr.327" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.GrVkInterface::VkPtr.328" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%"class.GrVkInterface::VkPtr.329" = type { void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)* }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%"class.GrVkInterface::VkPtr.330" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.331" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.332" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.333" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)* }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.334" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.335" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)* }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%struct.VkSamplerYcbcrConversion_T = type opaque
%"class.GrVkInterface::VkPtr.336" = type { void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)* }
%class.sk_sp.337 = type { %class.GrVkMemoryAllocator* }
%class.GrVkMemoryAllocator = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.338 = type { %class.GrVkCaps* }
%class.GrVkCaps = type <{ %class.GrCaps.base, i8, [22 x %"struct.GrVkCaps::FormatInfo"], [31 x i32], i32, %class.SkSTArray.346, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.1, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%"struct.GrVkCaps::FormatInfo" = type <{ i16, i16, [4 x i8], %class.SkTDArray.339, %"class.std::__1::unique_ptr.340", i32, [4 x i8] }>
%class.SkTDArray.339 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"struct.GrVkCaps::ColorTypeInfo"* }
%"struct.GrVkCaps::ColorTypeInfo" = type { i32, i32, i32, %class.GrSwizzle, %class.GrSwizzle }
%class.GrSwizzle = type { i16 }
%class.SkSTArray.346 = type { %class.SkAlignedSTStorage.347, %class.SkTArray.348 }
%class.SkAlignedSTStorage.347 = type { [48 x i8] }
%class.SkTArray.348 = type { %struct.GrVkYcbcrConversionInfo*, i64 }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.GrVkResourceProvider = type { %class.GrVkGpu*, %struct.VkPipelineCache_T*, %class.SkTArray.349, %class.SkSTArray.351, %class.SkTArray.357, %class.SkSTArray.358, %class.SkMutex, %class.SkSTArray.358, %class.SkTDynamicHash.361, %class.SkTDynamicHash.370, %class.sk_sp.379, %class.SkSTArray.388, %class.GrResourceHandle, %class.GrResourceHandle }
%class.SkTArray.349 = type { %"struct.GrVkResourceProvider::MSAALoadPipeline"*, i64 }
%"struct.GrVkResourceProvider::MSAALoadPipeline" = type { %class.sk_sp.350, %class.GrVkRenderPass* }
%class.sk_sp.350 = type { %class.GrVkPipeline* }
%class.GrVkPipeline = type { %class.GrVkManagedResource, %struct.VkPipeline_T*, %struct.VkPipelineLayout_T* }
%class.GrVkManagedResource = type { %class.GrManagedResource.base, %class.GrVkGpu* }
%class.GrManagedResource.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.GrVkRenderPass = type <{ %class.GrVkManagedResource, %struct.VkRenderPass_T*, i32, %"struct.GrVkRenderPass::AttachmentsDescriptor", i32, i32, %struct.VkExtent2D, i32, i32, i32, [4 x i8] }>
%"struct.GrVkRenderPass::AttachmentsDescriptor" = type { %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", i32 }
%"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc" = type { i32, i32, %"struct.GrVkRenderPass::LoadStoreOps" }
%"struct.GrVkRenderPass::LoadStoreOps" = type { i32, i32 }
%class.SkSTArray.351 = type { %class.SkAlignedSTStorage.352, %class.SkTArray.353 }
%class.SkAlignedSTStorage.352 = type { [224 x i8] }
%class.SkTArray.353 = type { %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, i64 }
%"class.GrVkResourceProvider::CompatibleRenderPassSet" = type <{ %class.SkSTArray.354, i32, [4 x i8] }>
%class.SkSTArray.354 = type { %class.SkAlignedSTStorage.355, %class.SkTArray.356 }
%class.SkAlignedSTStorage.355 = type { [32 x i8] }
%class.SkTArray.356 = type { %class.GrVkRenderPass**, i64 }
%class.SkTArray.357 = type { %class.GrVkRenderPass**, i64 }
%class.SkSTArray.358 = type { %class.SkAlignedSTStorage.359, %class.SkTArray.360 }
%class.SkAlignedSTStorage.359 = type { [32 x i8] }
%class.SkTArray.360 = type { %class.GrVkCommandPool**, i64 }
%class.SkTDynamicHash.361 = type { %class.SkTHashTable.362 }
%class.SkTHashTable.362 = type { i32, i32, %class.SkAutoTArray.363 }
%class.SkAutoTArray.363 = type { %"class.std::__1::unique_ptr.364" }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.370 = type { %class.SkTHashTable.371 }
%class.SkTHashTable.371 = type { i32, i32, %class.SkAutoTArray.372 }
%class.SkAutoTArray.372 = type { %"class.std::__1::unique_ptr.373" }
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot" = type opaque
%class.sk_sp.379 = type { %"class.GrVkResourceProvider::PipelineStateCache"* }
%"class.GrVkResourceProvider::PipelineStateCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache, %class.GrVkGpu* }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.380, %class.SkTInternalLList }
%class.SkTHashTable.380 = type { i32, i32, %class.SkAutoTArray.381 }
%class.SkAutoTArray.381 = type { %"class.std::__1::unique_ptr.382" }
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"*, %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"* }
%"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry" = type opaque
%class.SkSTArray.388 = type { %class.SkAlignedSTStorage.389, %class.SkTArray.390 }
%class.SkAlignedSTStorage.389 = type { [32 x i8] }
%class.SkTArray.390 = type { %"class.std::__1::unique_ptr.391"*, i64 }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %class.GrVkDescriptorSetManager* }
%class.GrVkDescriptorSetManager = type { %"struct.GrVkDescriptorSetManager::DescriptorPoolManager", %class.SkTArray.394, %class.SkSTArray.395, %class.SkSTArray.398 }
%"struct.GrVkDescriptorSetManager::DescriptorPoolManager" = type { %struct.VkDescriptorSetLayout_T*, i32, i32, i32, i32, %class.GrVkDescriptorPool* }
%class.GrVkDescriptorPool = type { %class.GrVkManagedResource, i32, i32, %struct.VkDescriptorPool_T* }
%class.SkTArray.394 = type { %class.GrVkDescriptorSet**, i64 }
%class.GrVkDescriptorSet = type <{ %class.GrVkRecycledResource, %struct.VkDescriptorSet_T*, %class.GrVkDescriptorPool*, %class.GrResourceHandle, [4 x i8] }>
%class.GrVkRecycledResource = type { %class.GrRecycledResource.base, %class.GrVkGpu* }
%class.GrRecycledResource.base = type { %class.GrManagedResource.base }
%class.SkSTArray.395 = type { %class.SkAlignedSTStorage.396, %class.SkTArray.397 }
%class.SkAlignedSTStorage.396 = type { [16 x i8] }
%class.SkTArray.397 = type { i32*, i64 }
%class.SkSTArray.398 = type { %class.SkAlignedSTStorage.399, %class.SkTArray.400 }
%class.SkAlignedSTStorage.399 = type { [32 x i8] }
%class.SkTArray.400 = type { %class.GrVkSampler**, i64 }
%class.GrVkSampler = type <{ %class.GrVkManagedResource, %struct.VkSampler_T*, %class.GrVkSamplerYcbcrConversion*, %"struct.GrVkSampler::Key", i32, [4 x i8] }>
%class.GrVkSamplerYcbcrConversion = type { %class.GrVkManagedResource, %struct.VkSamplerYcbcrConversion_T*, %"struct.GrVkSamplerYcbcrConversion::Key" }
%"struct.GrVkSamplerYcbcrConversion::Key" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.GrVkSampler::Key" = type { i8, [7 x i8], %"struct.GrVkSamplerYcbcrConversion::Key" }
%class.GrResourceHandle = type { i32 }
%class.GrStagingBufferManager = type { %"class.std::__1::vector.404", %class.GrGpu* }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { %"struct.GrStagingBufferManager::StagingBuffer"*, %"struct.GrStagingBufferManager::StagingBuffer"*, %"class.std::__1::__compressed_pair.407" }
%"struct.GrStagingBufferManager::StagingBuffer" = type { %class.sk_sp.406, i8*, i64 }
%class.sk_sp.406 = type { %class.GrGpuBuffer* }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"struct.GrStagingBufferManager::StagingBuffer"* }
%class.GrVkCommandPool = type opaque
%class.GrVkPrimaryCommandBuffer = type { %class.GrVkCommandBuffer.base, %class.SkTArray.433, %struct.VkFence_T*, %class.SkTArray.435 }
%class.GrVkCommandBuffer.base = type <{ i32 (...)**, %class.SkSTArray.412, %class.SkSTArray.416, %class.SkSTArray.419, %class.SkSTArray.423, i8, i8, [6 x i8], %class.GrVkRenderPass*, %struct.VkCommandBuffer_T*, [2 x %struct.VkBuffer_T*], %struct.VkBuffer_T*, %struct.VkViewport, %struct.VkRect2D, [4 x float], %class.SkSTArray.427, %class.SkSTArray.430, i8, [3 x i8], i32, i32, i8 }>
%class.SkSTArray.412 = type { %class.SkAlignedSTStorage.413, %class.SkTArray.414 }
%class.SkAlignedSTStorage.413 = type { [256 x i8] }
%class.SkTArray.414 = type { %class.sk_sp.415*, i64 }
%class.sk_sp.415 = type { %class.GrManagedResource* }
%class.GrManagedResource = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkSTArray.416 = type { %class.SkAlignedSTStorage.417, %class.SkTArray.418 }
%class.SkAlignedSTStorage.417 = type { [256 x i8] }
%class.SkTArray.418 = type { %class.gr_sp*, i64 }
%class.gr_sp = type { %class.GrRecycledResource* }
%class.GrRecycledResource = type { %class.GrManagedResource.base, [4 x i8] }
%class.SkSTArray.419 = type { %class.SkAlignedSTStorage.420, %class.SkTArray.421 }
%class.SkAlignedSTStorage.420 = type { [128 x i8] }
%class.SkTArray.421 = type { %class.sk_sp.422*, i64 }
%class.sk_sp.422 = type { %class.GrBuffer* }
%class.SkSTArray.423 = type { %class.SkAlignedSTStorage.424, %class.SkTArray.425 }
%class.SkAlignedSTStorage.424 = type { [128 x i8] }
%class.SkTArray.425 = type { %class.gr_sp.426*, i64 }
%class.gr_sp.426 = type { %class.GrSurface* }
%class.SkSTArray.427 = type { %class.SkAlignedSTStorage.428, %class.SkTArray.429 }
%class.SkAlignedSTStorage.428 = type { [56 x i8] }
%class.SkTArray.429 = type { %struct.VkBufferMemoryBarrier*, i64 }
%class.SkSTArray.430 = type { %class.SkAlignedSTStorage.431, %class.SkTArray.432 }
%class.SkAlignedSTStorage.431 = type { [144 x i8] }
%class.SkTArray.432 = type { %struct.VkImageMemoryBarrier*, i64 }
%class.SkTArray.433 = type { %"class.std::__1::unique_ptr.434"*, i64 }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %class.GrVkSecondaryCommandBuffer* }
%class.GrVkSecondaryCommandBuffer = type { %class.GrVkCommandBuffer.base, [3 x i8] }
%class.SkTArray.435 = type { %class.sk_sp.153*, i64 }
%class.SkSTArray.436 = type { %class.SkAlignedSTStorage.437, %class.SkTArray.438 }
%class.SkAlignedSTStorage.437 = type { [8 x i8] }
%class.SkTArray.438 = type { %"class.GrVkSemaphore::Resource"**, i64 }
%"class.GrVkSemaphore::Resource" = type <{ %class.GrVkManagedResource, %struct.VkSemaphore_T*, i8, i8, i8, [5 x i8] }>
%class.SkTArray.439 = type { %"class.std::__1::unique_ptr.440"*, i64 }
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.SkDrawable::GpuDrawHandler"* }
%"class.SkDrawable::GpuDrawHandler" = type { i32 (...)** }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %class.GrVkOpsRenderPass* }
%class.GrVkOpsRenderPass = type opaque
%"class.skia::tracing_internals::ScopedTracer" = type { %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data" }
%"struct.skia::tracing_internals::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%class.SkEventTracer = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GrVkCommandBuffer = type <{ i32 (...)**, %class.SkSTArray.412, %class.SkSTArray.416, %class.SkSTArray.419, %class.SkSTArray.423, i8, i8, [6 x i8], %class.GrVkRenderPass*, %struct.VkCommandBuffer_T*, [2 x %struct.VkBuffer_T*], %struct.VkBuffer_T*, %struct.VkViewport, %struct.VkRect2D, [4 x float], %class.SkSTArray.427, %class.SkSTArray.430, i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%class.GrAttachment = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%class.GrVkAttachment = type { %class.GrAttachment.base, %class.GrVkImage, %class.sk_sp.498, %class.sk_sp.498, %class.gr_sp.499, %class.gr_sp.499 }
%class.GrAttachment.base = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8 }>
%class.GrVkImage = type { i32 (...)**, %struct.GrVkImageInfo, i32, %class.sk_sp.487, i8, %"class.GrVkImage::Resource"* }
%struct.GrVkImageInfo = type <{ %struct.VkImage_T*, %struct.GrVkAlloc, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>
%struct.GrVkAlloc = type <{ %struct.VkDeviceMemory_T*, i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%class.sk_sp.487 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type { %class.SkRefCnt.base, %class.GrBackendSurfaceMutableState, [4 x i8] }
%class.GrBackendSurfaceMutableState = type <{ %union.anon.488, i32, i8, [3 x i8] }>
%union.anon.488 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.489", %"struct.std::__1::atomic.493" }
%"struct.std::__1::atomic.489" = type { %"struct.std::__1::__atomic_base.490" }
%"struct.std::__1::__atomic_base.490" = type { %"struct.std::__1::__cxx_atomic_impl.491" }
%"struct.std::__1::__cxx_atomic_impl.491" = type { %"struct.std::__1::__cxx_atomic_base_impl.492" }
%"struct.std::__1::__cxx_atomic_base_impl.492" = type { i32 }
%"struct.std::__1::atomic.493" = type { %"struct.std::__1::__atomic_base.494" }
%"struct.std::__1::__atomic_base.494" = type { %"struct.std::__1::__atomic_base.495" }
%"struct.std::__1::__atomic_base.495" = type { %"struct.std::__1::__cxx_atomic_impl.496" }
%"struct.std::__1::__cxx_atomic_impl.496" = type { %"struct.std::__1::__cxx_atomic_base_impl.497" }
%"struct.std::__1::__cxx_atomic_base_impl.497" = type { i32 }
%"class.GrVkImage::Resource" = type <{ %class.GrTextureResource, %class.GrVkGpu*, %struct.VkImage_T*, %struct.GrVkAlloc, i32, [4 x i8] }>
%class.GrTextureResource = type { %class.GrManagedResource.base, %class.sk_sp.153 }
%class.sk_sp.498 = type { %class.GrVkImageView* }
%class.GrVkImageView = type { %class.GrVkManagedResource, %struct.VkImageView_T*, %class.GrVkSamplerYcbcrConversion* }
%class.gr_sp.499 = type { %class.GrVkDescriptorSet* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.GrVkBuffer = type { %class.GrGpuBuffer, %struct.VkBuffer_T*, %struct.GrVkAlloc, %class.GrVkDescriptorSet* }

$_ZN8SkTArrayI5sk_spIK8GrBufferELb0EE12checkReallocEiNS4_11ReallocTypeE = comdat any

$_ZN8SkTArrayI5gr_spIK18GrRecycledResourceXadL_ZNK17GrManagedResource3refEvEEXadL_ZNKS1_7recycleEvEEELb0EE12checkReallocEiNS5_11ReallocTypeE = comdat any

@.str = private unnamed_addr constant [25 x i8] c"disabled-by-default-skia\00", align 1
@__PRETTY_FUNCTION__._ZN19GrVkMSAALoadManager21createMSAALoadProgramEP7GrVkGpu = private unnamed_addr constant [59 x i8] c"bool GrVkMSAALoadManager::createMSAALoadProgram(GrVkGpu *)\00", align 1
@.str.1 = private unnamed_addr constant [363 x i8] c"#extension GL_ARB_separate_shader_objects : enable\0A#extension GL_ARB_shading_language_420pack : enable\0Alayout(set = 0, binding = 0) uniform vertexUniformBuffer {half4 uPosXform;};// MSAA Load Program VS\0Avoid main() {float2 position = float2(sk_VertexID >> 1, sk_VertexID & 1);sk_Position.xy = position * uPosXform.xy + uPosXform.zw;sk_Position.zw = half2(0, 1);}\00", align 1
@.str.2 = private unnamed_addr constant [262 x i8] c"#extension GL_ARB_separate_shader_objects : enable\0A#extension GL_ARB_shading_language_420pack : enable\0Alayout(input_attachment_index = 0, set = 2, binding = 0) uniform subpassInput uInput;// MSAA Load Program FS\0Avoid main() {sk_FragColor = subpassLoad(uInput);}\00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c"../../third_party/skia/src/gpu/vk/GrVkMSAALoadManager.cpp\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"Failed to create copy program.\0A\00", align 1
@_ZZN19GrVkMSAALoadManager21createMSAALoadProgramEP7GrVkGpuE27trace_event_unique_atomic31.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN19GrVkMSAALoadManagerC1Ev = hidden unnamed_addr alias void (%class.GrVkMSAALoadManager*), void (%class.GrVkMSAALoadManager*)* @_ZN19GrVkMSAALoadManagerC2Ev
@_ZN19GrVkMSAALoadManagerD1Ev = hidden unnamed_addr alias void (%class.GrVkMSAALoadManager*), void (%class.GrVkMSAALoadManager*)* @_ZN19GrVkMSAALoadManagerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN19GrVkMSAALoadManagerC2Ev(%class.GrVkMSAALoadManager* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 3
  store %struct.VkPipelineLayout_T* null, %struct.VkPipelineLayout_T** %2, align 8
  %3 = bitcast %class.GrVkMSAALoadManager* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN19GrVkMSAALoadManagerD2Ev(%class.GrVkMSAALoadManager* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19GrVkMSAALoadManager21createMSAALoadProgramEP7GrVkGpu(%class.GrVkMSAALoadManager*, %class.GrVkGpu*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"struct.SkSL::ProgramSettings", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"struct.SkSL::Program::Inputs", align 1
  %9 = alloca [3 x %struct.VkDescriptorSetLayout_T*], align 16
  %10 = alloca %class.GrResourceHandle, align 4
  %11 = alloca %struct.VkPipelineLayoutCreateInfo, align 8
  %12 = load atomic i64, i64* @_ZZN19GrVkMSAALoadManager21createMSAALoadProgramEP7GrVkGpuE27trace_event_unique_atomic31.0.0 monotonic, align 8
  %13 = inttoptr i64 %12 to i8*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %2
  %16 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #6
  %17 = bitcast %class.SkEventTracer* %16 to i8* (%class.SkEventTracer*, i8*)***
  %18 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %17, align 8
  %19 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %18, i64 2
  %20 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %19, align 8
  %21 = tail call i8* %20(%class.SkEventTracer* %16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #6
  %22 = ptrtoint i8* %21 to i64
  store atomic i64 %22, i64* @_ZZN19GrVkMSAALoadManager21createMSAALoadProgramEP7GrVkGpuE27trace_event_unique_atomic31.0.0 monotonic, align 8
  br label %23

23:                                               ; preds = %2, %15
  %24 = phi i8* [ %13, %2 ], [ %21, %15 ]
  %25 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #6
  %26 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 0
  %27 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 1
  %29 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %31 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %26, align 8
  %32 = load i8, i8* %24, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %23
  %36 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #6
  %37 = bitcast %class.SkEventTracer* %36 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %38 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %37, align 8
  %39 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %38, i64 4
  %40 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %39, align 8
  %41 = tail call i64 %40(%class.SkEventTracer* %36, i8 signext 88, i8* %24, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN19GrVkMSAALoadManager21createMSAALoadProgramEP7GrVkGpu, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #6
  %42 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %43 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %42, i64 0, i32 0
  store i8* %24, i8** %43, align 8
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN19GrVkMSAALoadManager21createMSAALoadProgramEP7GrVkGpu, i64 0, i64 0), i8** %28, align 8
  store i64 %41, i64* %29, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %42, %"struct.skia::tracing_internals::ScopedTracer::Data"** %26, align 8
  br label %44

44:                                               ; preds = %23, %35
  %45 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #6
  %46 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #6
  %47 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0
  %48 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %47, i8* getelementptr inbounds ([363 x i8], [363 x i8]* @.str.1, i64 0, i64 0)) #6
  %49 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #6
  %50 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 24, i1 false) #6
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0
  %52 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %51, i8* getelementptr inbounds ([262 x i8], [262 x i8]* @.str.2, i64 0, i64 0)) #6
  %53 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %53) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 48, i1 false)
  store i8 0, i8* %53, align 8
  %54 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 1
  store i8 0, i8* %54, align 1
  %55 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 2
  store i8 1, i8* %55, align 2
  %56 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 3
  store i8 0, i8* %56, align 1
  %57 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 4
  store i8 0, i8* %57, align 4
  %58 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 5
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, <4 x i32>* %59, align 8
  %60 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 9
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 10
  store i8 1, i8* %61, align 4
  %62 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 11
  store i8 1, i8* %62, align 1
  %63 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 12
  store i8 1, i8* %63, align 2
  %64 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 13
  store i32 50, i32* %64, align 8
  %65 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 14
  store i8 0, i8* %65, align 4
  %66 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 15
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 16
  store i8 1, i8* %67, align 2
  %68 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 17
  store i8 0, i8* %68, align 1
  %69 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 18
  store i8 0, i8* %69, align 8
  %70 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 19
  store i8 1, i8* %70, align 1
  %71 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 20
  store i8 1, i8* %71, align 2
  %72 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 21
  store i8 0, i8* %72, align 1
  %73 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %6, i64 0, i32 22
  store %"class.std::__1::vector.40"* null, %"class.std::__1::vector.40"** %73, align 8
  %74 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #6
  %75 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #6
  %76 = getelementptr inbounds %"struct.SkSL::Program::Inputs", %"struct.SkSL::Program::Inputs"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %76) #6
  store i8 -86, i8* %76, align 1
  %77 = getelementptr inbounds %"struct.SkSL::Program::Inputs", %"struct.SkSL::Program::Inputs"* %8, i64 0, i32 1
  store i8 -86, i8* %77, align 1
  %78 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 0
  %79 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 2, i64 0
  %80 = call zeroext i1 @_Z23GrCompileVkShaderModuleP7GrVkGpuRKN4SkSL6StringE21VkShaderStageFlagBitsPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfoRKNS1_15ProgramSettingsEPS2_PNS1_7Program6InputsE(%class.GrVkGpu* %1, %"class.SkSL::String"* nonnull dereferenceable(24) %4, i32 1, %struct.VkShaderModule_T** %78, %struct.VkPipelineShaderStageCreateInfo* %79, %"struct.SkSL::ProgramSettings"* nonnull dereferenceable(56) %6, %"class.SkSL::String"* nonnull %7, %"struct.SkSL::Program::Inputs"* nonnull %8) #6
  br i1 %80, label %113, label %81

81:                                               ; preds = %44
  %82 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %78, align 8
  %83 = icmp eq %struct.VkShaderModule_T* %82, null
  br i1 %83, label %91, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 1, i32 0
  %86 = load %struct.GrVkInterface*, %struct.GrVkInterface** %85, align 8
  %87 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %86, i64 0, i32 1, i32 58, i32 0
  %88 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %87, align 8
  %89 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 6
  %90 = load %struct.VkDevice_T*, %struct.VkDevice_T** %89, align 8
  call void %88(%struct.VkDevice_T* %90, %struct.VkShaderModule_T* nonnull %82, %struct.VkAllocationCallbacks* null) #6
  store %struct.VkShaderModule_T* null, %struct.VkShaderModule_T** %78, align 8
  br label %91

91:                                               ; preds = %84, %81
  %92 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 1
  %93 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %92, align 8
  %94 = icmp eq %struct.VkShaderModule_T* %93, null
  br i1 %94, label %102, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 1, i32 0
  %97 = load %struct.GrVkInterface*, %struct.GrVkInterface** %96, align 8
  %98 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %97, i64 0, i32 1, i32 58, i32 0
  %99 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %98, align 8
  %100 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 6
  %101 = load %struct.VkDevice_T*, %struct.VkDevice_T** %100, align 8
  call void %99(%struct.VkDevice_T* %101, %struct.VkShaderModule_T* nonnull %93, %struct.VkAllocationCallbacks* null) #6
  store %struct.VkShaderModule_T* null, %struct.VkShaderModule_T** %92, align 8
  br label %102

102:                                              ; preds = %95, %91
  %103 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 3
  %104 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %103, align 8
  %105 = icmp eq %struct.VkPipelineLayout_T* %104, null
  br i1 %105, label %202, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 1, i32 0
  %108 = load %struct.GrVkInterface*, %struct.GrVkInterface** %107, align 8
  %109 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %108, i64 0, i32 1, i32 67, i32 0
  %110 = load void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)** %109, align 8
  %111 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 6
  %112 = load %struct.VkDevice_T*, %struct.VkDevice_T** %111, align 8
  call void %110(%struct.VkDevice_T* %112, %struct.VkPipelineLayout_T* nonnull %104, %struct.VkAllocationCallbacks* null) #6
  store %struct.VkPipelineLayout_T* null, %struct.VkPipelineLayout_T** %103, align 8
  br label %202

113:                                              ; preds = %44
  %114 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 1
  %115 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 2, i64 1
  %116 = call zeroext i1 @_Z23GrCompileVkShaderModuleP7GrVkGpuRKN4SkSL6StringE21VkShaderStageFlagBitsPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfoRKNS1_15ProgramSettingsEPS2_PNS1_7Program6InputsE(%class.GrVkGpu* %1, %"class.SkSL::String"* nonnull dereferenceable(24) %5, i32 16, %struct.VkShaderModule_T** %114, %struct.VkPipelineShaderStageCreateInfo* %115, %"struct.SkSL::ProgramSettings"* nonnull dereferenceable(56) %6, %"class.SkSL::String"* nonnull %7, %"struct.SkSL::Program::Inputs"* nonnull %8) #6
  br i1 %116, label %148, label %117

117:                                              ; preds = %113
  %118 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %78, align 8
  %119 = icmp eq %struct.VkShaderModule_T* %118, null
  br i1 %119, label %127, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 1, i32 0
  %122 = load %struct.GrVkInterface*, %struct.GrVkInterface** %121, align 8
  %123 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %122, i64 0, i32 1, i32 58, i32 0
  %124 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %123, align 8
  %125 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 6
  %126 = load %struct.VkDevice_T*, %struct.VkDevice_T** %125, align 8
  call void %124(%struct.VkDevice_T* %126, %struct.VkShaderModule_T* nonnull %118, %struct.VkAllocationCallbacks* null) #6
  store %struct.VkShaderModule_T* null, %struct.VkShaderModule_T** %78, align 8
  br label %127

127:                                              ; preds = %120, %117
  %128 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %114, align 8
  %129 = icmp eq %struct.VkShaderModule_T* %128, null
  br i1 %129, label %137, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 1, i32 0
  %132 = load %struct.GrVkInterface*, %struct.GrVkInterface** %131, align 8
  %133 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %132, i64 0, i32 1, i32 58, i32 0
  %134 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %133, align 8
  %135 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 6
  %136 = load %struct.VkDevice_T*, %struct.VkDevice_T** %135, align 8
  call void %134(%struct.VkDevice_T* %136, %struct.VkShaderModule_T* nonnull %128, %struct.VkAllocationCallbacks* null) #6
  store %struct.VkShaderModule_T* null, %struct.VkShaderModule_T** %114, align 8
  br label %137

137:                                              ; preds = %130, %127
  %138 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 3
  %139 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %138, align 8
  %140 = icmp eq %struct.VkPipelineLayout_T* %139, null
  br i1 %140, label %202, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 1, i32 0
  %143 = load %struct.GrVkInterface*, %struct.GrVkInterface** %142, align 8
  %144 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %143, i64 0, i32 1, i32 67, i32 0
  %145 = load void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)** %144, align 8
  %146 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 6
  %147 = load %struct.VkDevice_T*, %struct.VkDevice_T** %146, align 8
  call void %145(%struct.VkDevice_T* %147, %struct.VkPipelineLayout_T* nonnull %139, %struct.VkAllocationCallbacks* null) #6
  store %struct.VkPipelineLayout_T* null, %struct.VkPipelineLayout_T** %138, align 8
  br label %202

148:                                              ; preds = %113
  %149 = bitcast [3 x %struct.VkDescriptorSetLayout_T*]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #6
  %150 = getelementptr inbounds [3 x %struct.VkDescriptorSetLayout_T*], [3 x %struct.VkDescriptorSetLayout_T*]* %9, i64 0, i64 0
  %151 = getelementptr inbounds [3 x %struct.VkDescriptorSetLayout_T*], [3 x %struct.VkDescriptorSetLayout_T*]* %9, i64 0, i64 1
  %152 = getelementptr inbounds [3 x %struct.VkDescriptorSetLayout_T*], [3 x %struct.VkDescriptorSetLayout_T*]* %9, i64 0, i64 2
  %153 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 9
  %154 = call %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider18getUniformDSLayoutEv(%class.GrVkResourceProvider* %153) #6
  store %struct.VkDescriptorSetLayout_T* %154, %struct.VkDescriptorSetLayout_T** %150, align 16
  %155 = bitcast %class.GrResourceHandle* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %155) #6
  %156 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %10, i64 0, i32 0
  store i32 -1, i32* %156, align 4
  call void @_ZN20GrVkResourceProvider33getZeroSamplerDescriptorSetHandleEP16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider* %153, %class.GrResourceHandle* nonnull %10) #6
  %157 = call %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider18getSamplerDSLayoutERK16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider* %153, %class.GrResourceHandle* nonnull dereferenceable(4) %10) #6
  store %struct.VkDescriptorSetLayout_T* %157, %struct.VkDescriptorSetLayout_T** %151, align 8
  %158 = call %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider16getInputDSLayoutEv(%class.GrVkResourceProvider* %153) #6
  store %struct.VkDescriptorSetLayout_T* %158, %struct.VkDescriptorSetLayout_T** %152, align 16
  %159 = bitcast %struct.VkPipelineLayoutCreateInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %159) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 -86, i64 40, i1 false)
  %160 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %11, i64 0, i32 0
  store i32 30, i32* %160, align 8
  %161 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %11, i64 0, i32 1
  store i8* null, i8** %161, align 8
  %162 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %11, i64 0, i32 2
  store i32 0, i32* %162, align 8
  %163 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %11, i64 0, i32 3
  store i32 3, i32* %163, align 4
  %164 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %11, i64 0, i32 4
  store %struct.VkDescriptorSetLayout_T** %150, %struct.VkDescriptorSetLayout_T*** %164, align 8
  %165 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %11, i64 0, i32 5
  store i32 0, i32* %165, align 8
  %166 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %11, i64 0, i32 6
  store %struct.VkPushConstantRange* null, %struct.VkPushConstantRange** %166, align 8
  %167 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 1, i32 0
  %168 = load %struct.GrVkInterface*, %struct.GrVkInterface** %167, align 8
  %169 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %168, i64 0, i32 1, i32 66, i32 0
  %170 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)** %169, align 8
  %171 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 6
  %172 = load %struct.VkDevice_T*, %struct.VkDevice_T** %171, align 8
  %173 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 3
  %174 = call i32 %170(%struct.VkDevice_T* %172, %struct.VkPipelineLayoutCreateInfo* nonnull %11, %struct.VkAllocationCallbacks* null, %struct.VkPipelineLayout_T** %173) #6
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %200, label %176

176:                                              ; preds = %148
  %177 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %78, align 8
  %178 = icmp eq %struct.VkShaderModule_T* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %176
  %180 = load %struct.GrVkInterface*, %struct.GrVkInterface** %167, align 8
  %181 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %180, i64 0, i32 1, i32 58, i32 0
  %182 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %181, align 8
  %183 = load %struct.VkDevice_T*, %struct.VkDevice_T** %171, align 8
  call void %182(%struct.VkDevice_T* %183, %struct.VkShaderModule_T* nonnull %177, %struct.VkAllocationCallbacks* null) #6
  store %struct.VkShaderModule_T* null, %struct.VkShaderModule_T** %78, align 8
  br label %184

184:                                              ; preds = %179, %176
  %185 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %114, align 8
  %186 = icmp eq %struct.VkShaderModule_T* %185, null
  br i1 %186, label %192, label %187

187:                                              ; preds = %184
  %188 = load %struct.GrVkInterface*, %struct.GrVkInterface** %167, align 8
  %189 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %188, i64 0, i32 1, i32 58, i32 0
  %190 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %189, align 8
  %191 = load %struct.VkDevice_T*, %struct.VkDevice_T** %171, align 8
  call void %190(%struct.VkDevice_T* %191, %struct.VkShaderModule_T* nonnull %185, %struct.VkAllocationCallbacks* null) #6
  store %struct.VkShaderModule_T* null, %struct.VkShaderModule_T** %114, align 8
  br label %192

192:                                              ; preds = %187, %184
  %193 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %173, align 8
  %194 = icmp eq %struct.VkPipelineLayout_T* %193, null
  br i1 %194, label %200, label %195

195:                                              ; preds = %192
  %196 = load %struct.GrVkInterface*, %struct.GrVkInterface** %167, align 8
  %197 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %196, i64 0, i32 1, i32 67, i32 0
  %198 = load void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)** %197, align 8
  %199 = load %struct.VkDevice_T*, %struct.VkDevice_T** %171, align 8
  call void %198(%struct.VkDevice_T* %199, %struct.VkPipelineLayout_T* nonnull %193, %struct.VkAllocationCallbacks* null) #6
  store %struct.VkPipelineLayout_T* null, %struct.VkPipelineLayout_T** %173, align 8
  br label %200

200:                                              ; preds = %195, %192, %148
  %201 = phi i1 [ true, %148 ], [ false, %192 ], [ false, %195 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %159) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %155) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #6
  br label %202

202:                                              ; preds = %141, %137, %106, %102, %200
  %203 = phi i1 [ %201, %200 ], [ false, %102 ], [ false, %106 ], [ false, %137 ], [ false, %141 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %76) #6
  %204 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %204, i64 0, i32 1, i32 0
  %206 = load i8, i8* %205, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %202
  %209 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %209) #7
  br label %210

210:                                              ; preds = %202, %208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %53) #6
  %211 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %217

215:                                              ; preds = %210
  %216 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %216) #7
  br label %217

217:                                              ; preds = %210, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #6
  %218 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %219 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %218, i64 0, i32 1, i32 0
  %220 = load i8, i8* %219, align 1
  %221 = icmp slt i8 %220, 0
  br i1 %221, label %222, label %224

222:                                              ; preds = %217
  %223 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %223) #7
  br label %224

224:                                              ; preds = %217, %222
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #6
  %225 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %26, align 8
  %226 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %225, null
  br i1 %226, label %240, label %227

227:                                              ; preds = %224
  %228 = load i8*, i8** %27, align 8
  %229 = load i8, i8* %228, align 1
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %240, label %231

231:                                              ; preds = %227
  %232 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #6
  %233 = load i8*, i8** %27, align 8
  %234 = load i8*, i8** %28, align 8
  %235 = load i64, i64* %29, align 8
  %236 = bitcast %class.SkEventTracer* %232 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %237 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %236, align 8
  %238 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %237, i64 5
  %239 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %238, align 8
  call void %239(%class.SkEventTracer* %232, i8* %233, i8* %234, i64 %235) #6
  br label %240

240:                                              ; preds = %224, %227, %231
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #6
  ret i1 %203
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare zeroext i1 @_Z23GrCompileVkShaderModuleP7GrVkGpuRKN4SkSL6StringE21VkShaderStageFlagBitsPP16VkShaderModule_TP31VkPipelineShaderStageCreateInfoRKNS1_15ProgramSettingsEPS2_PNS1_7Program6InputsE(%class.GrVkGpu*, %"class.SkSL::String"* dereferenceable(24), i32, %struct.VkShaderModule_T**, %struct.VkPipelineShaderStageCreateInfo*, %"struct.SkSL::ProgramSettings"* dereferenceable(56), %"class.SkSL::String"*, %"struct.SkSL::Program::Inputs"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrVkMSAALoadManager16destroyResourcesEP7GrVkGpu(%class.GrVkMSAALoadManager* nocapture, %class.GrVkGpu* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 0
  %4 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %3, align 8
  %5 = icmp eq %struct.VkShaderModule_T* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 1, i32 0
  %8 = load %struct.GrVkInterface*, %struct.GrVkInterface** %7, align 8
  %9 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %8, i64 0, i32 1, i32 58, i32 0
  %10 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %9, align 8
  %11 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 6
  %12 = load %struct.VkDevice_T*, %struct.VkDevice_T** %11, align 8
  tail call void %10(%struct.VkDevice_T* %12, %struct.VkShaderModule_T* nonnull %4, %struct.VkAllocationCallbacks* null) #6
  store %struct.VkShaderModule_T* null, %struct.VkShaderModule_T** %3, align 8
  br label %13

13:                                               ; preds = %2, %6
  %14 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 1
  %15 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %14, align 8
  %16 = icmp eq %struct.VkShaderModule_T* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 1, i32 0
  %19 = load %struct.GrVkInterface*, %struct.GrVkInterface** %18, align 8
  %20 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %19, i64 0, i32 1, i32 58, i32 0
  %21 = load void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)** %20, align 8
  %22 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 6
  %23 = load %struct.VkDevice_T*, %struct.VkDevice_T** %22, align 8
  tail call void %21(%struct.VkDevice_T* %23, %struct.VkShaderModule_T* nonnull %15, %struct.VkAllocationCallbacks* null) #6
  store %struct.VkShaderModule_T* null, %struct.VkShaderModule_T** %14, align 8
  br label %24

24:                                               ; preds = %13, %17
  %25 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 3
  %26 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %25, align 8
  %27 = icmp eq %struct.VkPipelineLayout_T* %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 1, i32 0
  %30 = load %struct.GrVkInterface*, %struct.GrVkInterface** %29, align 8
  %31 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %30, i64 0, i32 1, i32 67, i32 0
  %32 = load void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)** %31, align 8
  %33 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 6
  %34 = load %struct.VkDevice_T*, %struct.VkDevice_T** %33, align 8
  tail call void %32(%struct.VkDevice_T* %34, %struct.VkPipelineLayout_T* nonnull %26, %struct.VkAllocationCallbacks* null) #6
  store %struct.VkPipelineLayout_T* null, %struct.VkPipelineLayout_T** %25, align 8
  br label %35

35:                                               ; preds = %24, %28
  ret void
}

declare %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider18getUniformDSLayoutEv(%class.GrVkResourceProvider*) local_unnamed_addr #4

declare void @_ZN20GrVkResourceProvider33getZeroSamplerDescriptorSetHandleEP16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider*, %class.GrResourceHandle*) local_unnamed_addr #4

declare %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider18getSamplerDSLayoutERK16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider*, %class.GrResourceHandle* dereferenceable(4)) local_unnamed_addr #4

declare %struct.VkDescriptorSetLayout_T* @_ZNK20GrVkResourceProvider16getInputDSLayoutEv(%class.GrVkResourceProvider*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19GrVkMSAALoadManager19loadMSAAFromResolveEP7GrVkGpuP17GrVkCommandBufferRK14GrVkRenderPassP12GrAttachmentP14GrVkAttachmentRK7SkIRect(%class.GrVkMSAALoadManager*, %class.GrVkGpu*, %class.GrVkCommandBuffer*, %class.GrVkRenderPass* dereferenceable(120), %class.GrAttachment* readonly, %class.GrVkAttachment*, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %8 = alloca %class.sk_sp.350, align 8
  %9 = alloca %class.sk_sp.350, align 8
  %10 = alloca %struct.VkViewport, align 4
  %11 = alloca %struct.VkRect2D, align 4
  %12 = alloca [4 x float], align 16
  %13 = alloca %class.sk_sp.406, align 8
  %14 = alloca %class.gr_sp.499, align 8
  %15 = icmp eq %class.GrAttachment* %4, null
  %16 = icmp eq %class.GrVkAttachment* %5, null
  %17 = or i1 %15, %16
  br i1 %17, label %238, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %5, i64 0, i32 1, i32 1, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = trunc i32 %20 to i8
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %238

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 0
  %25 = load %struct.VkShaderModule_T*, %struct.VkShaderModule_T** %24, align 8
  %26 = icmp eq %struct.VkShaderModule_T* %25, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = tail call zeroext i1 @_ZN19GrVkMSAALoadManager21createMSAALoadProgramEP7GrVkGpu(%class.GrVkMSAALoadManager* %0, %class.GrVkGpu* %1)
  br i1 %28, label %30, label %29

29:                                               ; preds = %27
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), i32 137, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0)) #6
  br label %238

30:                                               ; preds = %27, %23
  %31 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 9
  %32 = bitcast %class.sk_sp.350* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  %33 = getelementptr inbounds %class.sk_sp.350, %class.sk_sp.350* %8, i64 0, i32 0
  store %class.GrVkPipeline* inttoptr (i64 -6148914691236517206 to %class.GrVkPipeline*), %class.GrVkPipeline** %33, align 8
  %34 = getelementptr inbounds %class.GrAttachment, %class.GrAttachment* %4, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 2, i64 0
  %37 = getelementptr inbounds %class.GrVkMSAALoadManager, %class.GrVkMSAALoadManager* %0, i64 0, i32 3
  %38 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %37, align 8
  call void @_ZN20GrVkResourceProvider28findOrCreateMSAALoadPipelineERK14GrVkRenderPassiP31VkPipelineShaderStageCreateInfoP18VkPipelineLayout_T(%class.sk_sp.350* nonnull sret %8, %class.GrVkResourceProvider* %31, %class.GrVkRenderPass* dereferenceable(120) %3, i32 %35, %struct.VkPipelineShaderStageCreateInfo* %36, %struct.VkPipelineLayout_T* %38) #6
  %39 = load %class.GrVkPipeline*, %class.GrVkPipeline** %33, align 8
  %40 = icmp eq %class.GrVkPipeline* %39, null
  br i1 %40, label %236, label %41

41:                                               ; preds = %30
  %42 = ptrtoint %class.GrVkPipeline* %39 to i64
  store %class.GrVkPipeline* null, %class.GrVkPipeline** %33, align 8
  %43 = bitcast %class.sk_sp.350* %9 to i64*
  store i64 %42, i64* %43, align 8
  call void @_ZN17GrVkCommandBuffer12bindPipelineEPK7GrVkGpu5sk_spIK12GrVkPipelineE(%class.GrVkCommandBuffer* %2, %class.GrVkGpu* %1, %class.sk_sp.350* nonnull %9) #6
  %44 = getelementptr inbounds %class.sk_sp.350, %class.sk_sp.350* %9, i64 0, i32 0
  %45 = load %class.GrVkPipeline*, %class.GrVkPipeline** %44, align 8
  %46 = icmp eq %class.GrVkPipeline* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %41
  %48 = bitcast %class.GrVkPipeline* %45 to %class.GrManagedResource*
  %49 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %60

52:                                               ; preds = %47
  %53 = bitcast %class.GrVkPipeline* %45 to void (%class.GrManagedResource*)***
  %54 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %54, i64 4
  %56 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %55, align 8
  call void %56(%class.GrManagedResource* nonnull %48) #6
  %57 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %53, align 8
  %58 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %57, i64 1
  %59 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %58, align 8
  call void %59(%class.GrManagedResource* nonnull %48) #6
  br label %60

60:                                               ; preds = %41, %47, %52
  %61 = bitcast %struct.VkViewport* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #6
  %62 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %10, i64 0, i32 0
  %63 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %10, i64 0, i32 1
  %64 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %10, i64 0, i32 2
  %65 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %10, i64 0, i32 3
  %66 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %10, i64 0, i32 4
  %67 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %10, i64 0, i32 5
  store float 0.000000e+00, float* %62, align 4
  store float 0.000000e+00, float* %63, align 4
  %68 = getelementptr inbounds %class.GrAttachment, %class.GrAttachment* %4, i64 0, i32 0, i32 1, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = sitofp i32 %69 to float
  store float %70, float* %64, align 4
  %71 = getelementptr inbounds %class.GrAttachment, %class.GrAttachment* %4, i64 0, i32 0, i32 1, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = sitofp i32 %72 to float
  store float %73, float* %65, align 4
  store float 0.000000e+00, float* %66, align 4
  store float 1.000000e+00, float* %67, align 4
  call void @_ZN17GrVkCommandBuffer11setViewportEPK7GrVkGpujjPK10VkViewport(%class.GrVkCommandBuffer* %2, %class.GrVkGpu* %1, i32 0, i32 1, %struct.VkViewport* nonnull %10) #6
  %74 = bitcast %struct.VkRect2D* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #6
  %75 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %11, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %11, i64 0, i32 0, i32 1
  %77 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %11, i64 0, i32 1, i32 0
  %78 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %11, i64 0, i32 1, i32 1
  %79 = load i32, i32* %68, align 4
  store i32 %79, i32* %77, align 4
  %80 = load i32, i32* %71, align 4
  store i32 %80, i32* %78, align 4
  store i32 0, i32* %75, align 4
  store i32 0, i32* %76, align 4
  call void @_ZN17GrVkCommandBuffer10setScissorEPK7GrVkGpujjPK8VkRect2D(%class.GrVkCommandBuffer* %2, %class.GrVkGpu* %1, i32 0, i32 1, %struct.VkRect2D* nonnull %11) #6
  %81 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = load i32, i32* %68, align 4
  %90 = load i32, i32* %71, align 4
  %91 = sitofp i32 %84 to float
  %92 = fmul float %91, 2.000000e+00
  %93 = sitofp i32 %89 to float
  %94 = fdiv float %92, %93
  %95 = fadd float %94, -1.000000e+00
  %96 = sitofp i32 %82 to float
  %97 = fmul float %96, 2.000000e+00
  %98 = fdiv float %97, %93
  %99 = fadd float %98, -1.000000e+00
  %100 = sitofp i32 %88 to float
  %101 = fmul float %100, 2.000000e+00
  %102 = sitofp i32 %90 to float
  %103 = fdiv float %101, %102
  %104 = fadd float %103, -1.000000e+00
  %105 = sitofp i32 %86 to float
  %106 = fmul float %105, 2.000000e+00
  %107 = fdiv float %106, %102
  %108 = fadd float %107, -1.000000e+00
  %109 = bitcast [4 x float]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #6
  %110 = getelementptr inbounds [4 x float], [4 x float]* %12, i64 0, i64 0
  %111 = getelementptr inbounds [4 x float], [4 x float]* %12, i64 0, i64 1
  %112 = getelementptr inbounds [4 x float], [4 x float]* %12, i64 0, i64 2
  %113 = getelementptr inbounds [4 x float], [4 x float]* %12, i64 0, i64 3
  %114 = fsub float %99, %95
  store float %114, float* %110, align 16
  %115 = fsub float %108, %104
  store float %115, float* %111, align 4
  store float %95, float* %112, align 8
  store float %104, float* %113, align 4
  %116 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 0, i32 5
  %117 = load %class.GrDirectContext*, %class.GrDirectContext** %116, align 8
  %118 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %117, i64 0, i32 6, i32 0, i32 0, i32 0
  %119 = load %class.GrResourceProvider*, %class.GrResourceProvider** %118, align 8
  %120 = bitcast %class.sk_sp.406* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #6
  %121 = getelementptr inbounds %class.sk_sp.406, %class.sk_sp.406* %13, i64 0, i32 0
  store %class.GrGpuBuffer* inttoptr (i64 -6148914691236517206 to %class.GrGpuBuffer*), %class.GrGpuBuffer** %121, align 8
  call void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.406* nonnull sret %13, %class.GrResourceProvider* %119, i64 16, i32 5, i32 0, i8* nonnull %109) #6
  %122 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %121, align 8
  %123 = icmp eq %class.GrGpuBuffer* %122, null
  br i1 %123, label %219, label %124

124:                                              ; preds = %60
  %125 = bitcast %class.GrGpuBuffer* %122 to %class.GrVkBuffer*
  %126 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %37, align 8
  %127 = call %struct.VkDescriptorSet_T** @_ZNK10GrVkBuffer20uniformDescriptorSetEv(%class.GrVkBuffer* nonnull %125) #6
  call void @_ZN17GrVkCommandBuffer18bindDescriptorSetsEPK7GrVkGpuP18VkPipelineLayout_TjjPKP17VkDescriptorSet_TjPKj(%class.GrVkCommandBuffer* %2, %class.GrVkGpu* %1, %struct.VkPipelineLayout_T* %126, i32 0, i32 1, %struct.VkDescriptorSet_T** %127, i32 0, i32* null) #6
  %128 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %121, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %121, align 8
  %129 = icmp eq %class.GrGpuBuffer* %128, null
  %130 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %128, i64 0, i32 1
  %131 = ptrtoint %class.GrBuffer* %130 to i64
  %132 = select i1 %129, i64 0, i64 %131
  %133 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %2, i64 0, i32 3, i32 0, i32 0, i64 128
  %134 = bitcast i8* %133 to %class.SkTArray.421*
  call void @_ZN8SkTArrayI5sk_spIK8GrBufferELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.421* %134, i32 1, i32 1) #6
  %135 = bitcast i8* %133 to %class.sk_sp.422**
  %136 = load %class.sk_sp.422*, %class.sk_sp.422** %135, align 8
  %137 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %2, i64 0, i32 3, i32 0, i32 0, i64 136
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = lshr i64 %139, 1
  %141 = and i64 %140, 2147483647
  %142 = getelementptr inbounds %class.sk_sp.422, %class.sk_sp.422* %136, i64 %141
  %143 = add i64 %139, 2
  %144 = and i64 %143, 4294967294
  %145 = and i64 %139, -4294967295
  %146 = or i64 %144, %145
  store i64 %146, i64* %138, align 8
  %147 = bitcast %class.sk_sp.422* %142 to i64*
  store i64 %132, i64* %147, align 8
  %148 = bitcast %class.gr_sp.499* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #6
  %149 = getelementptr inbounds %class.gr_sp.499, %class.gr_sp.499* %14, i64 0, i32 0
  store %class.GrVkDescriptorSet* inttoptr (i64 -6148914691236517206 to %class.GrVkDescriptorSet*), %class.GrVkDescriptorSet** %149, align 8
  call void @_ZN14GrVkAttachment23inputDescSetForMSAALoadEP7GrVkGpu(%class.gr_sp.499* nonnull sret %14, %class.GrVkAttachment* nonnull %5, %class.GrVkGpu* %1) #6
  %150 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %149, align 8
  %151 = icmp eq %class.GrVkDescriptorSet* %150, null
  br i1 %151, label %207, label %152

152:                                              ; preds = %124
  %153 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %37, align 8
  %154 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %150, i64 0, i32 1
  call void @_ZN17GrVkCommandBuffer18bindDescriptorSetsEPK7GrVkGpuP18VkPipelineLayout_TjjPKP17VkDescriptorSet_TjPKj(%class.GrVkCommandBuffer* %2, %class.GrVkGpu* %1, %struct.VkPipelineLayout_T* %153, i32 2, i32 1, %struct.VkDescriptorSet_T** %154, i32 0, i32* null) #6
  %155 = bitcast %class.gr_sp.499* %14 to %class.GrRecycledResource**
  %156 = load %class.GrRecycledResource*, %class.GrRecycledResource** %155, align 8
  %157 = icmp eq %class.GrRecycledResource* %156, null
  br i1 %157, label %161, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %class.GrRecycledResource, %class.GrRecycledResource* %156, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = atomicrmw add i32* %159, i32 1 monotonic
  br label %161

161:                                              ; preds = %152, %158
  %162 = ptrtoint %class.GrRecycledResource* %156 to i64
  %163 = bitcast %class.GrRecycledResource* %156 to %class.GrManagedResource*
  %164 = bitcast %class.GrRecycledResource* %156 to void (%class.GrManagedResource*)***
  %165 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %164, align 8
  %166 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %165, i64 2
  %167 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %166, align 8
  call void %167(%class.GrManagedResource* %163) #6
  %168 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %2, i64 0, i32 2, i32 0, i32 0, i64 256
  %169 = bitcast i8* %168 to %class.SkTArray.418*
  call void @_ZN8SkTArrayI5gr_spIK18GrRecycledResourceXadL_ZNK17GrManagedResource3refEvEEXadL_ZNKS1_7recycleEvEEELb0EE12checkReallocEiNS5_11ReallocTypeE(%class.SkTArray.418* %169, i32 1, i32 1) #6
  %170 = bitcast i8* %168 to %class.gr_sp**
  %171 = load %class.gr_sp*, %class.gr_sp** %170, align 8
  %172 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %2, i64 0, i32 2, i32 0, i32 0, i64 264
  %173 = bitcast i8* %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = lshr i64 %174, 1
  %176 = and i64 %175, 2147483647
  %177 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %171, i64 %176
  %178 = add i64 %174, 2
  %179 = and i64 %178, 4294967294
  %180 = and i64 %174, -4294967295
  %181 = or i64 %179, %180
  store i64 %181, i64* %173, align 8
  %182 = bitcast %class.gr_sp* %177 to i64*
  store i64 %162, i64* %182, align 8
  call void @_ZN17GrVkCommandBuffer4drawEPK7GrVkGpujjjj(%class.GrVkCommandBuffer* %2, %class.GrVkGpu* %1, i32 4, i32 1, i32 0, i32 0) #6
  %183 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %149, align 8
  %184 = icmp eq %class.GrVkDescriptorSet* %183, null
  br i1 %184, label %207, label %185

185:                                              ; preds = %161
  %186 = bitcast %class.GrVkDescriptorSet* %183 to %class.GrManagedResource*
  %187 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %183, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 acquire, align 4
  %189 = icmp eq i32 %188, 1
  br i1 %189, label %190, label %196

190:                                              ; preds = %185
  %191 = bitcast %class.GrVkDescriptorSet* %183 to %class.GrRecycledResource*
  %192 = bitcast %class.GrVkDescriptorSet* %183 to void (%class.GrRecycledResource*)***
  %193 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %192, align 8
  %194 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %193, i64 5
  %195 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %194, align 8
  call void %195(%class.GrRecycledResource* nonnull %191) #6
  br label %207

196:                                              ; preds = %185
  %197 = atomicrmw add i32* %187, i32 -1 acq_rel
  %198 = icmp eq i32 %197, 1
  br i1 %198, label %199, label %207

199:                                              ; preds = %196
  %200 = bitcast %class.GrVkDescriptorSet* %183 to void (%class.GrManagedResource*)***
  %201 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %200, align 8
  %202 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %201, i64 4
  %203 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %202, align 8
  call void %203(%class.GrManagedResource* nonnull %186) #6
  %204 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %200, align 8
  %205 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %204, i64 1
  %206 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %205, align 8
  call void %206(%class.GrManagedResource* nonnull %186) #6
  br label %207

207:                                              ; preds = %124, %199, %196, %190, %161
  %208 = phi i1 [ true, %161 ], [ true, %190 ], [ true, %196 ], [ true, %199 ], [ false, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #6
  %209 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %121, align 8
  %210 = icmp eq %class.GrGpuBuffer* %209, null
  br i1 %210, label %219, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %209, i64 0, i32 0, i32 1
  %213 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %212, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = atomicrmw add i32* %213, i32 -1 acq_rel
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %216, label %219

216:                                              ; preds = %211
  %217 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %212, i64 -1
  %218 = bitcast %class.GrIORef* %217 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %218, i32 0) #6
  br label %219

219:                                              ; preds = %60, %216, %211, %207
  %220 = phi i1 [ %208, %207 ], [ %208, %211 ], [ %208, %216 ], [ false, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #6
  %221 = load %class.GrVkPipeline*, %class.GrVkPipeline** %33, align 8
  %222 = icmp eq %class.GrVkPipeline* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = bitcast %class.GrVkPipeline* %221 to %class.GrManagedResource*
  %225 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %221, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = atomicrmw add i32* %225, i32 -1 acq_rel
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %236

228:                                              ; preds = %223
  %229 = bitcast %class.GrVkPipeline* %221 to void (%class.GrManagedResource*)***
  %230 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %229, align 8
  %231 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %230, i64 4
  %232 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %231, align 8
  call void %232(%class.GrManagedResource* nonnull %224) #6
  %233 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %229, align 8
  %234 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %233, i64 1
  %235 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %234, align 8
  call void %235(%class.GrManagedResource* nonnull %224) #6
  br label %236

236:                                              ; preds = %30, %219, %223, %228
  %237 = phi i1 [ %220, %219 ], [ %220, %223 ], [ %220, %228 ], [ false, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  br label %238

238:                                              ; preds = %18, %7, %236, %29
  %239 = phi i1 [ %237, %236 ], [ false, %29 ], [ false, %7 ], [ false, %18 ]
  ret i1 %239
}

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #4

declare void @_ZN20GrVkResourceProvider28findOrCreateMSAALoadPipelineERK14GrVkRenderPassiP31VkPipelineShaderStageCreateInfoP18VkPipelineLayout_T(%class.sk_sp.350* sret, %class.GrVkResourceProvider*, %class.GrVkRenderPass* dereferenceable(120), i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineLayout_T*) local_unnamed_addr #4

declare void @_ZN17GrVkCommandBuffer12bindPipelineEPK7GrVkGpu5sk_spIK12GrVkPipelineE(%class.GrVkCommandBuffer*, %class.GrVkGpu*, %class.sk_sp.350*) local_unnamed_addr #4

declare void @_ZN17GrVkCommandBuffer11setViewportEPK7GrVkGpujjPK10VkViewport(%class.GrVkCommandBuffer*, %class.GrVkGpu*, i32, i32, %struct.VkViewport*) local_unnamed_addr #4

declare void @_ZN17GrVkCommandBuffer10setScissorEPK7GrVkGpujjPK8VkRect2D(%class.GrVkCommandBuffer*, %class.GrVkGpu*, i32, i32, %struct.VkRect2D*) local_unnamed_addr #4

declare void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.406* sret, %class.GrResourceProvider*, i64, i32, i32, i8*) local_unnamed_addr #4

declare void @_ZN17GrVkCommandBuffer18bindDescriptorSetsEPK7GrVkGpuP18VkPipelineLayout_TjjPKP17VkDescriptorSet_TjPKj(%class.GrVkCommandBuffer*, %class.GrVkGpu*, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*) local_unnamed_addr #4

declare %struct.VkDescriptorSet_T** @_ZNK10GrVkBuffer20uniformDescriptorSetEv(%class.GrVkBuffer*) local_unnamed_addr #4

declare void @_ZN14GrVkAttachment23inputDescSetForMSAALoadEP7GrVkGpu(%class.gr_sp.499* sret, %class.GrVkAttachment*, %class.GrVkGpu*) local_unnamed_addr #4

declare void @_ZN17GrVkCommandBuffer4drawEPK7GrVkGpujjjj(%class.GrVkCommandBuffer*, %class.GrVkGpu*, i32, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5sk_spIK8GrBufferELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.421*, i32, i32) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.421, %class.SkTArray.421* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #6
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.421, %class.SkTArray.421* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.sk_sp.422*, %class.sk_sp.422** %49, align 8
  %55 = getelementptr inbounds %class.sk_sp.422, %class.sk_sp.422* %54, i64 %51
  %56 = getelementptr inbounds %class.sk_sp.422, %class.sk_sp.422* %55, i64 0, i32 0
  %57 = bitcast %class.sk_sp.422* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.sk_sp.422*, %class.sk_sp.422** %49, align 8
  %61 = getelementptr inbounds %class.sk_sp.422, %class.sk_sp.422* %60, i64 %51, i32 0
  %62 = load %class.GrBuffer*, %class.GrBuffer** %61, align 8
  %63 = icmp eq %class.GrBuffer* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %class.GrBuffer* %62 to void (%class.GrBuffer*)***
  %66 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %66, i64 3
  %68 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %67, align 8
  tail call void %68(%class.GrBuffer* nonnull %62) #6
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.421* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #6
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5gr_spIK18GrRecycledResourceXadL_ZNK17GrManagedResource3refEvEEXadL_ZNKS1_7recycleEvEEELb0EE12checkReallocEiNS5_11ReallocTypeE(%class.SkTArray.418*, i32, i32) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.418, %class.SkTArray.418* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %103

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %103, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #6
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %91, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.418, %class.SkTArray.418* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %85, %48
  %51 = phi i64 [ 0, %48 ], [ %86, %85 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.gr_sp*, %class.gr_sp** %49, align 8
  %55 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %54, i64 %51
  %56 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %55, i64 0, i32 0
  %57 = bitcast %class.gr_sp* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.GrRecycledResource* null, %class.GrRecycledResource** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.gr_sp*, %class.gr_sp** %49, align 8
  %61 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %60, i64 %51, i32 0
  %62 = load %class.GrRecycledResource*, %class.GrRecycledResource** %61, align 8
  %63 = icmp eq %class.GrRecycledResource* %62, null
  br i1 %63, label %85, label %64

64:                                               ; preds = %50
  %65 = bitcast %class.GrRecycledResource* %62 to %class.GrManagedResource*
  %66 = getelementptr inbounds %class.GrRecycledResource, %class.GrRecycledResource* %62, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 acquire, align 4
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = bitcast %class.GrRecycledResource* %62 to void (%class.GrRecycledResource*)***
  %71 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %71, i64 5
  %73 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %72, align 8
  tail call void %73(%class.GrRecycledResource* nonnull %62) #6
  br label %85

74:                                               ; preds = %64
  %75 = atomicrmw add i32* %66, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %85

77:                                               ; preds = %74
  %78 = bitcast %class.GrRecycledResource* %62 to void (%class.GrManagedResource*)***
  %79 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %79, i64 4
  %81 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %80, align 8
  tail call void %81(%class.GrManagedResource* nonnull %65) #6
  %82 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %78, align 8
  %83 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %82, i64 1
  %84 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %83, align 8
  tail call void %84(%class.GrManagedResource* nonnull %65) #6
  br label %85

85:                                               ; preds = %77, %74, %69, %50
  %86 = add nuw nsw i64 %51, 1
  %87 = load i64, i64* %4, align 8
  %88 = lshr i64 %87, 1
  %89 = and i64 %88, 2147483647
  %90 = icmp ult i64 %86, %89
  br i1 %90, label %50, label %91

91:                                               ; preds = %85, %35
  %92 = phi i64 [ %45, %35 ], [ %87, %85 ]
  %93 = and i64 %92, 1
  %94 = icmp eq i64 %93, 0
  %95 = bitcast %class.SkTArray.418* %0 to i8**
  br i1 %94, label %99, label %96

96:                                               ; preds = %91
  %97 = load i8*, i8** %95, align 8
  tail call void @_Z7sk_freePv(i8* %97) #6
  %98 = load i64, i64* %4, align 8
  br label %99

99:                                               ; preds = %91, %96
  %100 = phi i64 [ %98, %96 ], [ %92, %91 ]
  store i8* %44, i8** %95, align 8
  %101 = and i64 %100, -4294967298
  %102 = or i64 %101, 1
  store i64 %102, i64* %4, align 8
  br label %103

103:                                              ; preds = %99, %32, %21
  ret void
}

declare void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
