; ModuleID = '../../media/mojo/services/mojo_media_client.cc'
source_filename = "../../media/mojo/services/mojo_media_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::MojoMediaClient" = type { i32 (...)** }
%"class.media::AudioDecoder" = type { %"class.media::Decoder" }
%"class.media::Decoder" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.2" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::vector.38" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"*, %"class.std::__1::__compressed_pair.40" }
%"struct.media::SupportedVideoDecoderConfig" = type <{ i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, i8, [2 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.media::SupportedVideoDecoderConfig"* }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::pair"* }
%"class.media::VideoDecoder" = type { %"class.media::Decoder" }
%"class.media::MediaLog" = type { i32 (...)**, %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"struct.media::MediaLog::ParentLogRecord"* }
%"struct.media::MediaLog::ParentLogRecord" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.12", i32, %"class.base::Lock", %"class.media::MediaLog"* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.13" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.media::mojom::CommandBufferId"* }
%"class.media::mojom::CommandBufferId" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.20", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.20" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.media::Renderer" = type { i32 (...)** }
%"class.media::mojom::FrameInterfaceFactory" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.media::CdmFactory" = type { i32 (...)** }

@_ZTVN5media15MojoMediaClientE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::MojoMediaClient"*)* @_ZN5media15MojoMediaClientD2Ev to i8*), i8* bitcast (void (%"class.media::MojoMediaClient"*)* @_ZN5media15MojoMediaClientD0Ev to i8*), i8* bitcast (void (%"class.media::MojoMediaClient"*)* @_ZN5media15MojoMediaClient10InitializeEv to i8*), i8* bitcast (%"class.media::AudioDecoder"* (%"class.media::MojoMediaClient"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5media15MojoMediaClient18CreateAudioDecoderE13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i8*), i8* bitcast (void (%"class.base::flat_map"*, %"class.media::MojoMediaClient"*)* @_ZN5media15MojoMediaClient31GetSupportedVideoDecoderConfigsEv to i8*), i8* bitcast (%"class.media::VideoDecoder"* (%"class.media::MojoMediaClient"*, %"class.base::SingleThreadTaskRunner"*, %"class.media::MediaLog"*, %"class.mojo::StructPtr"*, i32, %"class.base::RepeatingCallback"*, %"class.gfx::ColorSpace"*)* @_ZN5media15MojoMediaClient18CreateVideoDecoderE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_8MediaLogEN4mojo9StructPtrINS_5mojom15CommandBufferIdEEENS_26VideoDecoderImplementationENS2_17RepeatingCallbackIFvbNSD_IFvRKNS_11OverlayInfoEEEEEEERKN3gfx10ColorSpaceE to i8*), i8* bitcast (%"class.media::Renderer"* (%"class.media::MojoMediaClient"*, %"class.media::mojom::FrameInterfaceFactory"*, %"class.base::SingleThreadTaskRunner"*, %"class.media::MediaLog"*, %"class.std::__1::basic_string"*)* @_ZN5media15MojoMediaClient14CreateRendererEPNS_5mojom21FrameInterfaceFactoryE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_8MediaLogERKNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE to i8*), i8* bitcast (%"class.media::CdmFactory"* (%"class.media::MojoMediaClient"*, %"class.media::mojom::FrameInterfaceFactory"*)* @_ZN5media15MojoMediaClient16CreateCdmFactoryEPNS_5mojom21FrameInterfaceFactoryE to i8*)] }, align 8

@_ZN5media15MojoMediaClientC1Ev = hidden unnamed_addr alias void (%"class.media::MojoMediaClient"*), void (%"class.media::MojoMediaClient"*)* @_ZN5media15MojoMediaClientC2Ev
@_ZN5media15MojoMediaClientD1Ev = hidden unnamed_addr alias void (%"class.media::MojoMediaClient"*), void (%"class.media::MojoMediaClient"*)* @_ZN5media15MojoMediaClientD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media15MojoMediaClientC2Ev(%"class.media::MojoMediaClient"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::MojoMediaClient", %"class.media::MojoMediaClient"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5media15MojoMediaClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media15MojoMediaClientD2Ev(%"class.media::MojoMediaClient"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15MojoMediaClientD0Ev(%"class.media::MojoMediaClient"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.media::MojoMediaClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media15MojoMediaClient10InitializeEv(%"class.media::MojoMediaClient"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::AudioDecoder"* @_ZN5media15MojoMediaClient18CreateAudioDecoderE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.media::MojoMediaClient"* nocapture readnone, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #2 align 2 {
  %3 = icmp eq %"class.base::SingleThreadTaskRunner"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %5, i64 -2
  %11 = bitcast %"class.base::RefCountedThreadSafe"* %10 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %11) #7
  br label %12

12:                                               ; preds = %2, %4, %9
  ret %"class.media::AudioDecoder"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15MojoMediaClient31GetSupportedVideoDecoderConfigsEv(%"class.base::flat_map"* noalias nocapture sret, %"class.media::MojoMediaClient"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.base::flat_map"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VideoDecoder"* @_ZN5media15MojoMediaClient18CreateVideoDecoderE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_8MediaLogEN4mojo9StructPtrINS_5mojom15CommandBufferIdEEENS_26VideoDecoderImplementationENS2_17RepeatingCallbackIFvbNSD_IFvRKNS_11OverlayInfoEEEEEEERKN3gfx10ColorSpaceE(%"class.media::MojoMediaClient"* nocapture readnone, %"class.base::SingleThreadTaskRunner"*, %"class.media::MediaLog"* nocapture readnone, %"class.mojo::StructPtr"* nocapture readnone, i32, %"class.base::RepeatingCallback"* nocapture readnone, %"class.gfx::ColorSpace"* nocapture readnone dereferenceable(68)) unnamed_addr #2 align 2 {
  %8 = icmp eq %"class.base::SingleThreadTaskRunner"* %1, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 -2
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %15 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %16) #7
  br label %17

17:                                               ; preds = %7, %9, %14
  ret %"class.media::VideoDecoder"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::Renderer"* @_ZN5media15MojoMediaClient14CreateRendererEPNS_5mojom21FrameInterfaceFactoryE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_8MediaLogERKNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE(%"class.media::MojoMediaClient"* nocapture readnone, %"class.media::mojom::FrameInterfaceFactory"* nocapture readnone, %"class.base::SingleThreadTaskRunner"*, %"class.media::MediaLog"* nocapture readnone, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24)) unnamed_addr #2 align 2 {
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %14) #7
  br label %15

15:                                               ; preds = %5, %7, %12
  ret %"class.media::Renderer"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.media::CdmFactory"* @_ZN5media15MojoMediaClient16CreateCdmFactoryEPNS_5mojom21FrameInterfaceFactoryE(%"class.media::MojoMediaClient"* nocapture readnone, %"class.media::mojom::FrameInterfaceFactory"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.media::CdmFactory"* null
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
