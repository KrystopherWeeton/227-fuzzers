; ModuleID = '../../third_party/opus/src/src/opus_decoder.c'
source_filename = "../../third_party/opus/src/src/opus_decoder.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.OpusDecoder = type { i32, i32, i32, i32, %struct.silk_DecControlStruct, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x float], i32 }
%struct.silk_DecControlStruct = type { i32, i32, i32, i32, i32, i32 }
%struct.OpusCustomDecoder = type opaque
%struct.ec_ctx = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.OpusCustomMode = type { i32, i32, i32, i32, [4 x float], i16*, i32, i32, i32, i32, i8*, i16*, float*, %struct.mdct_lookup, %struct.PulseCache }
%struct.mdct_lookup = type { i32, i32, [4 x %struct.kiss_fft_state*], float* }
%struct.kiss_fft_state = type { i32, float, i32, [16 x i16], i16*, %struct.kiss_twiddle_cpx*, %struct.arch_fft_state* }
%struct.kiss_twiddle_cpx = type { float, float }
%struct.arch_fft_state = type { i32, i8* }
%struct.PulseCache = type { i32, i16*, i8*, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [42 x i8] c"assertion failed: pcm_count == frame_size\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"../../third_party/opus/src/src/opus_decoder.c\00", align 1
@.str.2 = private unnamed_addr constant [52 x i8] c"assertion failed: ret==frame_size-packet_frame_size\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"assertion failed: ret==packet_frame_size\00", align 1
@.str.4 = private unnamed_addr constant [57 x i8] c"assertion failed: st->channels == 1 || st->channels == 2\00", align 1
@.str.5 = private unnamed_addr constant [109 x i8] c"assertion failed: st->Fs == 48000 || st->Fs == 24000 || st->Fs == 16000 || st->Fs == 12000 || st->Fs == 8000\00", align 1
@.str.6 = private unnamed_addr constant [58 x i8] c"assertion failed: st->DecControl.API_sampleRate == st->Fs\00", align 1
@.str.7 = private unnamed_addr constant [194 x i8] c"assertion failed: st->DecControl.internalSampleRate == 0 || st->DecControl.internalSampleRate == 16000 || st->DecControl.internalSampleRate == 12000 || st->DecControl.internalSampleRate == 8000\00", align 1
@.str.8 = private unnamed_addr constant [62 x i8] c"assertion failed: st->DecControl.nChannelsAPI == st->channels\00", align 1
@.str.9 = private unnamed_addr constant [138 x i8] c"assertion failed: st->DecControl.nChannelsInternal == 0 || st->DecControl.nChannelsInternal == 1 || st->DecControl.nChannelsInternal == 2\00", align 1
@.str.10 = private unnamed_addr constant [209 x i8] c"assertion failed: st->DecControl.payloadSize_ms == 0 || st->DecControl.payloadSize_ms == 10 || st->DecControl.payloadSize_ms == 20 || st->DecControl.payloadSize_ms == 40 || st->DecControl.payloadSize_ms == 60\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"assertion failed: st->arch >= 0\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"assertion failed: st->arch <= OPUS_ARCHMASK\00", align 1
@.str.13 = private unnamed_addr constant [71 x i8] c"assertion failed: st->stream_channels == 1 || st->stream_channels == 2\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"assertion failed: 0\00", align 1
@.str.15 = private unnamed_addr constant [135 x i8] c"assertion failed: (opus_custom_decoder_ctl(celt_dec, 10012, (((void)((endband) == (opus_int32)0)), (opus_int32)(endband)))) == OPUS_OK\00", align 1
@.str.16 = private unnamed_addr constant [159 x i8] c"assertion failed: (opus_custom_decoder_ctl(celt_dec, 10008, (((void)((st->stream_channels) == (opus_int32)0)), (opus_int32)(st->stream_channels)))) == OPUS_OK\00", align 1
@.str.17 = private unnamed_addr constant [123 x i8] c"assertion failed: (opus_custom_decoder_ctl(celt_dec, 10010, (((void)((0) == (opus_int32)0)), (opus_int32)(0)))) == OPUS_OK\00", align 1
@.str.18 = private unnamed_addr constant [145 x i8] c"assertion failed: (opus_custom_decoder_ctl(celt_dec, 4031, ((&redundant_rng) + ((&redundant_rng) - (opus_uint32*)(&redundant_rng))))) == OPUS_OK\00", align 1
@.str.19 = private unnamed_addr constant [141 x i8] c"assertion failed: (opus_custom_decoder_ctl(celt_dec, 10010, (((void)((start_band) == (opus_int32)0)), (opus_int32)(start_band)))) == OPUS_OK\00", align 1
@.str.20 = private unnamed_addr constant [71 x i8] c"assertion failed: (opus_custom_decoder_ctl(celt_dec, 4028)) == OPUS_OK\00", align 1
@.str.21 = private unnamed_addr constant [144 x i8] c"assertion failed: (opus_custom_decoder_ctl(celt_dec, 10015, ((&celt_mode) + ((&celt_mode) - (const OpusCustomMode**)(&celt_mode))))) == OPUS_OK\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_decoder_get_size(i32) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #6
  store i32 -1431655766, i32* %2, align 4
  %4 = add i32 %0, -1
  %5 = icmp ugt i32 %4, 1
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = call i32 @silk_Get_Decoder_Size(i32* nonnull %2) #6
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %6
  %10 = load i32, i32* %2, align 4
  %11 = add i32 %10, 7
  %12 = and i32 %11, -8
  store i32 %12, i32* %2, align 4
  %13 = call i32 @celt_decoder_get_size(i32 %0) #6
  %14 = load i32, i32* %2, align 4
  %15 = add i32 %13, 88
  %16 = add i32 %15, %14
  br label %17

17:                                               ; preds = %6, %1, %9
  %18 = phi i32 [ %16, %9 ], [ 0, %1 ], [ 0, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #6
  ret i32 %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @silk_Get_Decoder_Size(i32*) local_unnamed_addr #2

declare i32 @celt_decoder_get_size(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_decoder_init(%struct.OpusDecoder*, i32, i32) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6
  store i32 -1431655766, i32* %5, align 4
  switch i32 %1, label %59 [
    i32 48000, label %7
    i32 24000, label %7
    i32 16000, label %7
    i32 12000, label %7
    i32 8000, label %7
  ]

7:                                                ; preds = %3, %3, %3, %3, %3
  %8 = add i32 %2, -1
  %9 = icmp ugt i32 %8, 1
  br i1 %9, label %59, label %10

10:                                               ; preds = %7
  %11 = bitcast %struct.OpusDecoder* %0 to i8*
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #6
  store i32 -1431655766, i32* %4, align 4
  %13 = call i32 @silk_Get_Decoder_Size(i32* nonnull %4) #6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %24

15:                                               ; preds = %10
  %16 = load i32, i32* %4, align 4
  %17 = add i32 %16, 7
  %18 = and i32 %17, -8
  store i32 %18, i32* %4, align 4
  %19 = call i32 @celt_decoder_get_size(i32 %2) #6
  %20 = load i32, i32* %4, align 4
  %21 = add i32 %19, 88
  %22 = add i32 %21, %20
  %23 = sext i32 %22 to i64
  br label %24

24:                                               ; preds = %10, %15
  %25 = phi i64 [ %23, %15 ], [ 0, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 %25, i1 false)
  %26 = call i32 @silk_Get_Decoder_Size(i32* nonnull %5) #6
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %59

28:                                               ; preds = %24
  %29 = load i32, i32* %5, align 4
  %30 = add i32 %29, 7
  %31 = and i32 %30, -8
  store i32 %31, i32* %5, align 4
  %32 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 1
  store i32 88, i32* %32, align 4
  %33 = add nsw i32 %31, 88
  %34 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 0
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 1
  %36 = bitcast %struct.OpusDecoder* %35 to i8*
  %37 = sext i32 %33 to i64
  %38 = getelementptr inbounds i8, i8* %11, i64 %37
  %39 = bitcast i8* %38 to %struct.OpusCustomDecoder*
  %40 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  store i32 %2, i32* %40, align 4
  %41 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 7
  store i32 %2, i32* %41, align 4
  %42 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 3
  store i32 %1, i32* %42, align 4
  %43 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4, i32 2
  store i32 %1, i32* %43, align 4
  %44 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4, i32 0
  store i32 %2, i32* %44, align 4
  %45 = call i32 @silk_InitDecoder(i8* %36) #6
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %28
  %48 = call i32 @celt_decoder_init(%struct.OpusCustomDecoder* %39, i32 %1, i32 %2) #6
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %59

50:                                               ; preds = %47
  %51 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %39, i32 10016, i32 0) #6
  %52 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 10
  store i32 0, i32* %52, align 4
  %53 = trunc i32 %1 to i16
  %54 = udiv i16 %53, 400
  %55 = zext i16 %54 to i32
  %56 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 11
  store i32 %55, i32* %56, align 4
  %57 = call i32 @opus_select_arch() #6
  %58 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 6
  store i32 %57, i32* %58, align 4
  br label %59

59:                                               ; preds = %47, %28, %24, %7, %3, %50
  %60 = phi i32 [ 0, %50 ], [ -1, %3 ], [ -1, %7 ], [ -3, %24 ], [ -3, %28 ], [ -3, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6
  ret i32 %60
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @silk_InitDecoder(i8*) local_unnamed_addr #2

declare i32 @celt_decoder_init(%struct.OpusCustomDecoder*, i32, i32) local_unnamed_addr #2

declare i32 @opus_custom_decoder_ctl(%struct.OpusCustomDecoder*, i32, ...) local_unnamed_addr #2

declare i32 @opus_select_arch() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.OpusDecoder* @opus_decoder_create(i32, i32, i32*) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  switch i32 %0, label %8 [
    i32 48000, label %5
    i32 24000, label %5
    i32 16000, label %5
    i32 12000, label %5
    i32 8000, label %5
  ]

5:                                                ; preds = %3, %3, %3, %3, %3
  %6 = add i32 %1, -1
  %7 = icmp ugt i32 %6, 1
  br i1 %7, label %8, label %11

8:                                                ; preds = %3, %5
  %9 = icmp eq i32* %2, null
  br i1 %9, label %39, label %10

10:                                               ; preds = %8
  store i32 -1, i32* %2, align 4
  br label %39

11:                                               ; preds = %5
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #6
  store i32 -1431655766, i32* %4, align 4
  %13 = call i32 @silk_Get_Decoder_Size(i32* nonnull %4) #6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %24

15:                                               ; preds = %11
  %16 = load i32, i32* %4, align 4
  %17 = add i32 %16, 7
  %18 = and i32 %17, -8
  store i32 %18, i32* %4, align 4
  %19 = call i32 @celt_decoder_get_size(i32 %1) #6
  %20 = load i32, i32* %4, align 4
  %21 = add i32 %19, 88
  %22 = add i32 %21, %20
  %23 = sext i32 %22 to i64
  br label %24

24:                                               ; preds = %11, %15
  %25 = phi i64 [ %23, %15 ], [ 0, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #6
  %26 = call noalias i8* @malloc(i64 %25) #6
  %27 = bitcast i8* %26 to %struct.OpusDecoder*
  %28 = icmp eq i8* %26, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = icmp eq i32* %2, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %29
  store i32 -7, i32* %2, align 4
  br label %39

32:                                               ; preds = %24
  %33 = call i32 @opus_decoder_init(%struct.OpusDecoder* nonnull %27, i32 %0, i32 %1)
  %34 = icmp eq i32* %2, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  store i32 %33, i32* %2, align 4
  br label %36

36:                                               ; preds = %32, %35
  %37 = icmp eq i32 %33, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %36
  call void @free(i8* nonnull %26) #6
  br label %39

39:                                               ; preds = %38, %36, %31, %29, %10, %8
  %40 = phi %struct.OpusDecoder* [ null, %8 ], [ null, %10 ], [ null, %29 ], [ null, %31 ], [ null, %38 ], [ %27, %36 ]
  ret %struct.OpusDecoder* %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_decode_native(%struct.OpusDecoder*, i8*, i32, float*, i32, i32, i32, i32*, i32) local_unnamed_addr #0 {
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca [48 x i16], align 16
  %13 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #6
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #6
  store i8 -86, i8* %11, align 1
  %14 = bitcast [48 x i16]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 96, i1 false)
  %15 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, -1
  %18 = icmp ult i32 %17, 2
  br i1 %18, label %20, label %19

19:                                               ; preds = %9
  tail call void @celt_fatal(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 84) #11
  unreachable

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  switch i32 %22, label %23 [
    i32 48000, label %24
    i32 24000, label %24
    i32 16000, label %24
    i32 12000, label %24
    i32 8000, label %24
  ]

23:                                               ; preds = %20
  tail call void @celt_fatal(i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 85) #11
  unreachable

24:                                               ; preds = %20, %20, %20, %20, %20
  %25 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @celt_fatal(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 86) #11
  unreachable

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4, i32 3
  %31 = load i32, i32* %30, align 4
  switch i32 %31, label %32 [
    i32 0, label %33
    i32 16000, label %33
    i32 12000, label %33
    i32 8000, label %33
  ]

32:                                               ; preds = %29
  tail call void @celt_fatal(i8* getelementptr inbounds ([194 x i8], [194 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 87) #11
  unreachable

33:                                               ; preds = %29, %29, %29, %29
  %34 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, %16
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @celt_fatal(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 88) #11
  unreachable

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp ult i32 %40, 3
  br i1 %41, label %43, label %42

42:                                               ; preds = %38
  tail call void @celt_fatal(i8* getelementptr inbounds ([138 x i8], [138 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 89) #11
  unreachable

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4, i32 4
  %45 = load i32, i32* %44, align 4
  switch i32 %45, label %46 [
    i32 0, label %47
    i32 10, label %47
    i32 20, label %47
    i32 40, label %47
    i32 60, label %47
  ]

46:                                               ; preds = %43
  tail call void @celt_fatal(i8* getelementptr inbounds ([209 x i8], [209 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 90) #11
  unreachable

47:                                               ; preds = %43, %43, %43, %43, %43
  %48 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 6
  %49 = load i32, i32* %48, align 4
  %50 = icmp sgt i32 %49, -1
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  tail call void @celt_fatal(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 92) #11
  unreachable

52:                                               ; preds = %47
  %53 = icmp slt i32 %49, 8
  br i1 %53, label %55, label %54

54:                                               ; preds = %52
  tail call void @celt_fatal(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 93) #11
  unreachable

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 7
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %57, -1
  %59 = icmp ult i32 %58, 2
  br i1 %59, label %61, label %60

60:                                               ; preds = %55
  tail call void @celt_fatal(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 95) #11
  unreachable

61:                                               ; preds = %55
  %62 = icmp ugt i32 %5, 1
  br i1 %62, label %218, label %63

63:                                               ; preds = %61
  %64 = icmp ne i32 %5, 0
  %65 = icmp eq i32 %2, 0
  %66 = or i1 %65, %64
  %67 = icmp eq i8* %1, null
  %68 = or i1 %67, %66
  br i1 %68, label %69, label %75

69:                                               ; preds = %63
  %70 = trunc i32 %22 to i16
  %71 = udiv i16 %70, 400
  %72 = zext i16 %71 to i32
  %73 = srem i32 %4, %72
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %218

75:                                               ; preds = %69, %63
  %76 = or i1 %67, %65
  br i1 %76, label %77, label %98

77:                                               ; preds = %75
  %78 = tail call fastcc i32 @opus_decode_frame(%struct.OpusDecoder* %0, i8* null, i32 0, float* %3, i32 %4, i32 0)
  %79 = icmp slt i32 %78, 0
  br i1 %79, label %218, label %80

80:                                               ; preds = %77, %83
  %81 = phi i32 [ %92, %83 ], [ %78, %77 ]
  %82 = icmp slt i32 %81, %4
  br i1 %82, label %83, label %93

83:                                               ; preds = %80
  %84 = load i32, i32* %15, align 4
  %85 = mul nsw i32 %84, %81
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds float, float* %3, i64 %86
  %88 = sub nsw i32 %4, %81
  %89 = tail call fastcc i32 @opus_decode_frame(%struct.OpusDecoder* %0, i8* null, i32 0, float* %87, i32 %88, i32 0)
  %90 = icmp slt i32 %89, 0
  %91 = select i1 %90, i32 0, i32 %89
  %92 = add nuw nsw i32 %91, %81
  br i1 %90, label %218, label %80

93:                                               ; preds = %80
  %94 = icmp eq i32 %81, %4
  br i1 %94, label %96, label %95

95:                                               ; preds = %93
  tail call void @celt_fatal(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 652) #11
  unreachable

96:                                               ; preds = %93
  %97 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 13
  store i32 %4, i32* %97, align 4
  br label %218

98:                                               ; preds = %75
  %99 = icmp slt i32 %2, 0
  br i1 %99, label %218, label %100

100:                                              ; preds = %98
  %101 = load i8, i8* %1, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %110

103:                                              ; preds = %100
  %104 = lshr i8 %101, 5
  %105 = and i8 %104, 3
  %106 = zext i8 %105 to i32
  %107 = add nuw nsw i32 %106, 1102
  %108 = icmp eq i8 %105, 0
  %109 = select i1 %108, i32 1101, i32 %107
  br label %125

110:                                              ; preds = %100
  %111 = and i8 %101, 96
  %112 = icmp eq i8 %111, 96
  %113 = select i1 %112, i32 1001, i32 1000
  %114 = zext i8 %101 to i32
  %115 = and i32 %114, 96
  %116 = icmp eq i32 %115, 96
  br i1 %116, label %117, label %121

117:                                              ; preds = %110
  %118 = and i32 %114, 16
  %119 = icmp eq i32 %118, 0
  %120 = select i1 %119, i32 1104, i32 1105
  br label %125

121:                                              ; preds = %110
  %122 = lshr i32 %114, 5
  %123 = and i32 %122, 3
  %124 = add nuw nsw i32 %123, 1101
  br label %125

125:                                              ; preds = %103, %117, %121
  %126 = phi i32 [ 1002, %103 ], [ %113, %117 ], [ %113, %121 ]
  %127 = phi i32 [ %109, %103 ], [ %120, %117 ], [ %124, %121 ]
  %128 = tail call i32 @opus_packet_get_samples_per_frame(i8* nonnull %1, i32 %22) #6
  %129 = load i8, i8* %1, align 1
  %130 = and i8 %129, 4
  %131 = icmp eq i8 %130, 0
  %132 = select i1 %131, i32 1, i32 2
  %133 = getelementptr inbounds [48 x i16], [48 x i16]* %12, i64 0, i64 0
  %134 = call i32 @opus_packet_parse_impl(i8* nonnull %1, i32 %2, i32 %6, i8* nonnull %11, i8** null, i16* nonnull %133, i32* nonnull %10, i32* %7) #6
  %135 = icmp slt i32 %134, 0
  br i1 %135, label %218, label %136

136:                                              ; preds = %125
  %137 = load i32, i32* %10, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8, i8* %1, i64 %138
  br i1 %64, label %140, label %174

140:                                              ; preds = %136
  %141 = icmp sgt i32 %128, %4
  %142 = icmp eq i32 %126, 1002
  %143 = or i1 %142, %141
  br i1 %143, label %148, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 9
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 1002
  br i1 %147, label %148, label %150

148:                                              ; preds = %144, %140
  %149 = call i32 @opus_decode_native(%struct.OpusDecoder* %0, i8* null, i32 0, float* %3, i32 %4, i32 0, i32 0, i32* null, i32 %8)
  br label %218

150:                                              ; preds = %144
  %151 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 13
  %152 = load i32, i32* %151, align 4
  %153 = sub nsw i32 %4, %128
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %162, label %155

155:                                              ; preds = %150
  %156 = call i32 @opus_decode_native(%struct.OpusDecoder* %0, i8* null, i32 0, float* %3, i32 %153, i32 0, i32 0, i32* null, i32 %8)
  %157 = icmp slt i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  store i32 %152, i32* %151, align 4
  br label %218

159:                                              ; preds = %155
  %160 = icmp eq i32 %156, %153
  br i1 %160, label %162, label %161

161:                                              ; preds = %159
  call void @celt_fatal(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 689) #11
  unreachable

162:                                              ; preds = %150, %159
  store i32 %126, i32* %145, align 4
  %163 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 8
  store i32 %127, i32* %163, align 4
  %164 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 11
  store i32 %128, i32* %164, align 4
  store i32 %132, i32* %56, align 4
  %165 = load i16, i16* %133, align 16
  %166 = sext i16 %165 to i32
  %167 = load i32, i32* %15, align 4
  %168 = mul nsw i32 %167, %153
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds float, float* %3, i64 %169
  %171 = call fastcc i32 @opus_decode_frame(%struct.OpusDecoder* %0, i8* %139, i32 %166, float* %170, i32 %128, i32 1)
  %172 = icmp slt i32 %171, 0
  br i1 %172, label %218, label %173

173:                                              ; preds = %162
  store i32 %4, i32* %151, align 4
  br label %218

174:                                              ; preds = %136
  %175 = mul nsw i32 %134, %128
  %176 = icmp sgt i32 %175, %4
  br i1 %176, label %218, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 9
  store i32 %126, i32* %178, align 4
  %179 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 8
  store i32 %127, i32* %179, align 4
  %180 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 11
  store i32 %128, i32* %180, align 4
  store i32 %132, i32* %56, align 4
  %181 = icmp sgt i32 %134, 0
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = zext i32 %134 to i64
  br label %184

184:                                              ; preds = %201, %182
  %185 = phi i64 [ 0, %182 ], [ %206, %201 ]
  %186 = phi i32 [ 0, %182 ], [ %205, %201 ]
  %187 = phi i8* [ %139, %182 ], [ %204, %201 ]
  %188 = getelementptr inbounds [48 x i16], [48 x i16]* %12, i64 0, i64 %185
  %189 = load i16, i16* %188, align 2
  %190 = sext i16 %189 to i32
  %191 = load i32, i32* %15, align 4
  %192 = mul nsw i32 %191, %186
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds float, float* %3, i64 %193
  %195 = sub nsw i32 %4, %186
  %196 = call fastcc i32 @opus_decode_frame(%struct.OpusDecoder* %0, i8* %187, i32 %190, float* %194, i32 %195, i32 0)
  %197 = icmp slt i32 %196, 0
  br i1 %197, label %218, label %198

198:                                              ; preds = %184
  %199 = icmp eq i32 %196, %128
  br i1 %199, label %201, label %200

200:                                              ; preds = %198
  call void @celt_fatal(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 724) #11
  unreachable

201:                                              ; preds = %198
  %202 = load i16, i16* %188, align 2
  %203 = sext i16 %202 to i64
  %204 = getelementptr inbounds i8, i8* %187, i64 %203
  %205 = add nsw i32 %128, %186
  %206 = add nuw nsw i64 %185, 1
  %207 = icmp eq i64 %206, %183
  br i1 %207, label %208, label %184

208:                                              ; preds = %201, %177
  %209 = phi i32 [ 0, %177 ], [ %205, %201 ]
  %210 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 13
  store i32 %209, i32* %210, align 4
  %211 = icmp eq i32 %8, 0
  br i1 %211, label %215, label %212

212:                                              ; preds = %208
  %213 = load i32, i32* %15, align 4
  %214 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 14, i64 0
  call void @opus_pcm_soft_clip(float* %3, i32 %209, i32 %213, float* %214) #6
  br label %218

215:                                              ; preds = %208
  %216 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 14, i64 1
  store float 0.000000e+00, float* %216, align 4
  %217 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 14, i64 0
  store float 0.000000e+00, float* %217, align 4
  br label %218

218:                                              ; preds = %184, %83, %77, %212, %215, %174, %148, %158, %173, %162, %125, %98, %96, %69, %61
  %219 = phi i32 [ -1, %61 ], [ -1, %69 ], [ %4, %96 ], [ -1, %98 ], [ %134, %125 ], [ %149, %148 ], [ %156, %158 ], [ %4, %173 ], [ %171, %162 ], [ -2, %174 ], [ %209, %215 ], [ %209, %212 ], [ %78, %77 ], [ %89, %83 ], [ %196, %184 ]
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #6
  ret i32 %219
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @opus_decode_frame(%struct.OpusDecoder*, i8*, i32, float*, i32, i32) unnamed_addr #0 {
  %7 = alloca [0 x i16], align 16
  %8 = alloca %struct.ec_ctx, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca %struct.OpusCustomMode*, align 8
  %13 = bitcast %struct.ec_ctx* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %13) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 56, i1 false)
  %14 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #6
  store i32 -1431655766, i32* %9, align 4
  %15 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #6
  store i32 0, i32* %10, align 4
  %16 = bitcast %struct.OpusDecoder* %0 to i8*
  %17 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  %21 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %16, i64 %23
  %25 = bitcast i8* %24 to %struct.OpusCustomDecoder*
  %26 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = sdiv i32 %27, 50
  %29 = ashr i32 %28, 1
  %30 = ashr i32 %28, 2
  %31 = ashr i32 %28, 3
  %32 = icmp sgt i32 %31, %4
  br i1 %32, label %729, label %33

33:                                               ; preds = %6
  %34 = sdiv i32 %27, 25
  %35 = mul nsw i32 %34, 3
  %36 = icmp sgt i32 %35, %4
  %37 = select i1 %36, i32 %4, i32 %35
  %38 = icmp slt i32 %2, 2
  br i1 %38, label %39, label %44

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 11
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %37, %41
  %43 = select i1 %42, i32 %37, i32 %41
  br label %46

44:                                               ; preds = %33
  %45 = icmp eq i8* %1, null
  br i1 %45, label %46, label %93

46:                                               ; preds = %44, %39
  %47 = phi i32 [ %43, %39 ], [ %37, %44 ]
  %48 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 10
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %64

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = mul nsw i32 %53, %47
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %56, label %729

56:                                               ; preds = %51, %56
  %57 = phi i64 [ %59, %56 ], [ 0, %51 ]
  %58 = getelementptr inbounds float, float* %3, i64 %57
  store float 0.000000e+00, float* %58, align 4
  %59 = add nuw nsw i64 %57, 1
  %60 = load i32, i32* %52, align 4
  %61 = mul nsw i32 %60, %47
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %59, %62
  br i1 %63, label %56, label %729

64:                                               ; preds = %46
  %65 = icmp sgt i32 %47, %28
  br i1 %65, label %66, label %82

66:                                               ; preds = %64
  %67 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  br label %68

68:                                               ; preds = %66, %75
  %69 = phi float* [ %79, %75 ], [ %3, %66 ]
  %70 = phi i32 [ %80, %75 ], [ %47, %66 ]
  %71 = icmp slt i32 %70, %28
  %72 = select i1 %71, i32 %70, i32 %28
  %73 = tail call fastcc i32 @opus_decode_frame(%struct.OpusDecoder* %0, i8* null, i32 0, float* %69, i32 %72, i32 0)
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %729, label %75

75:                                               ; preds = %68
  %76 = load i32, i32* %67, align 4
  %77 = mul nsw i32 %76, %73
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds float, float* %69, i64 %78
  %80 = sub nsw i32 %70, %73
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %68, label %729

82:                                               ; preds = %64
  %83 = icmp slt i32 %47, %28
  br i1 %83, label %84, label %120

84:                                               ; preds = %82
  %85 = icmp sgt i32 %47, %29
  br i1 %85, label %120, label %86

86:                                               ; preds = %84
  %87 = icmp eq i32 %49, 1000
  br i1 %87, label %120, label %88

88:                                               ; preds = %86
  %89 = icmp sgt i32 %47, %30
  %90 = icmp slt i32 %47, %29
  %91 = and i1 %89, %90
  %92 = select i1 %91, i32 %30, i32 %47
  br label %120

93:                                               ; preds = %44
  %94 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 11
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 9
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 8
  %99 = load i32, i32* %98, align 4
  call void @ec_dec_init(%struct.ec_ctx* nonnull %8, i8* nonnull %1, i32 %2) #6
  %100 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 10
  %101 = load i32, i32* %100, align 4
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %103, label %120

103:                                              ; preds = %93
  %104 = icmp eq i32 %97, 1002
  %105 = xor i1 %104, true
  %106 = icmp eq i32 %101, 1002
  %107 = or i1 %106, %105
  br i1 %107, label %112, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 12
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %103, %108
  br i1 %104, label %120, label %113

113:                                              ; preds = %112
  br i1 %106, label %114, label %120

114:                                              ; preds = %108, %113
  %115 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = mul nsw i32 %116, %30
  %118 = select i1 %104, i32 0, i32 %117
  %119 = select i1 %104, i32 %117, i32 0
  br label %120

120:                                              ; preds = %88, %84, %82, %86, %114, %112, %113, %93
  %121 = phi i32 [ %99, %113 ], [ %99, %112 ], [ %99, %93 ], [ %99, %114 ], [ 0, %86 ], [ 0, %82 ], [ 0, %84 ], [ 0, %88 ]
  %122 = phi i32 [ %97, %113 ], [ 1002, %112 ], [ %97, %93 ], [ %97, %114 ], [ 1000, %86 ], [ %49, %82 ], [ %49, %84 ], [ %49, %88 ]
  %123 = phi i32 [ %95, %113 ], [ %95, %112 ], [ %95, %93 ], [ %95, %114 ], [ %47, %86 ], [ %47, %82 ], [ %29, %84 ], [ %92, %88 ]
  %124 = phi i32 [ %37, %113 ], [ %37, %112 ], [ %37, %93 ], [ %37, %114 ], [ %47, %86 ], [ %47, %82 ], [ %47, %84 ], [ %47, %88 ]
  %125 = phi i8* [ %1, %113 ], [ %1, %112 ], [ %1, %93 ], [ %1, %114 ], [ null, %86 ], [ null, %82 ], [ null, %84 ], [ null, %88 ]
  %126 = phi i1 [ true, %113 ], [ true, %112 ], [ true, %93 ], [ true, %114 ], [ false, %86 ], [ false, %82 ], [ false, %84 ], [ false, %88 ]
  %127 = phi i32 [ 0, %113 ], [ 0, %112 ], [ 0, %93 ], [ %118, %114 ], [ 0, %86 ], [ 0, %82 ], [ 0, %84 ], [ 0, %88 ]
  %128 = phi i32 [ 0, %113 ], [ 0, %112 ], [ 0, %93 ], [ %119, %114 ], [ 0, %86 ], [ 0, %82 ], [ 0, %84 ], [ 0, %88 ]
  %129 = phi i1 [ false, %113 ], [ false, %112 ], [ false, %93 ], [ true, %114 ], [ false, %86 ], [ false, %82 ], [ false, %84 ], [ false, %88 ]
  %130 = sext i32 %128 to i64
  %131 = shl nsw i64 %130, 2
  %132 = alloca float, i64 %130, align 16
  %133 = bitcast float* %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %133, i8 -86, i64 %131, i1 false)
  %134 = icmp eq i32 %122, 1002
  %135 = and i1 %134, %129
  br i1 %135, label %136, label %140

136:                                              ; preds = %120
  %137 = icmp slt i32 %30, %123
  %138 = select i1 %137, i32 %30, i32 %123
  %139 = call fastcc i32 @opus_decode_frame(%struct.OpusDecoder* %0, i8* null, i32 0, float* nonnull %132, i32 %138, i32 0)
  br label %140

140:                                              ; preds = %136, %120
  %141 = phi float* [ %132, %136 ], [ null, %120 ]
  %142 = icmp sgt i32 %123, %124
  br i1 %142, label %729, label %143

143:                                              ; preds = %140
  br i1 %134, label %144, label %147

144:                                              ; preds = %143
  %145 = getelementptr inbounds [0 x i16], [0 x i16]* %7, i64 0, i64 0
  %146 = icmp eq i32 %5, 0
  br label %296

147:                                              ; preds = %143
  %148 = icmp sgt i32 %29, %123
  %149 = select i1 %148, i32 %29, i32 %123
  %150 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  %151 = load i32, i32* %150, align 4
  %152 = mul nsw i32 %151, %149
  %153 = sext i32 %152 to i64
  %154 = shl nsw i64 %153, 1
  %155 = alloca i16, i64 %153, align 16
  %156 = bitcast i16* %155 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %156, i8 -86, i64 %154, i1 false)
  %157 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 10
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 1002
  br i1 %159, label %160, label %162

160:                                              ; preds = %147
  %161 = call i32 @silk_InitDecoder(i8* %20) #6
  br label %162

162:                                              ; preds = %160, %147
  %163 = mul nsw i32 %123, 1000
  %164 = load i32, i32* %26, align 4
  %165 = sdiv i32 %163, %164
  %166 = icmp sgt i32 %165, 10
  %167 = select i1 %166, i32 %165, i32 10
  %168 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4
  %169 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4, i32 4
  store i32 %167, i32* %169, align 4
  br i1 %126, label %170, label %186

170:                                              ; preds = %162
  %171 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 7
  %172 = load i32, i32* %171, align 4
  %173 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4, i32 1
  store i32 %172, i32* %173, align 4
  %174 = icmp eq i32 %122, 1000
  br i1 %174, label %175, label %184

175:                                              ; preds = %170
  switch i32 %121, label %180 [
    i32 1101, label %176
    i32 1102, label %178
  ]

176:                                              ; preds = %175
  %177 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4, i32 3
  store i32 8000, i32* %177, align 4
  br label %186

178:                                              ; preds = %175
  %179 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4, i32 3
  store i32 12000, i32* %179, align 4
  br label %186

180:                                              ; preds = %175
  %181 = icmp eq i32 %121, 1103
  %182 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4, i32 3
  store i32 16000, i32* %182, align 4
  br i1 %181, label %186, label %183

183:                                              ; preds = %180
  call void @celt_fatal(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 389) #11
  unreachable

184:                                              ; preds = %170
  %185 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4, i32 3
  store i32 16000, i32* %185, align 4
  br label %186

186:                                              ; preds = %184, %178, %180, %176, %162
  %187 = icmp eq i8* %125, null
  %188 = shl nsw i32 %5, 1
  %189 = select i1 %187, i32 1, i32 %188
  %190 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 6
  %191 = icmp eq i32 %189, 0
  br i1 %191, label %192, label %208

192:                                              ; preds = %186, %200
  %193 = phi i32 [ %206, %200 ], [ 0, %186 ]
  %194 = phi i16* [ %205, %200 ], [ %155, %186 ]
  %195 = icmp eq i32 %193, 0
  %196 = zext i1 %195 to i32
  %197 = load i32, i32* %190, align 4
  %198 = call i32 @silk_Decode(i8* %20, %struct.silk_DecControlStruct* %168, i32 0, i32 %196, %struct.ec_ctx* nonnull %8, i16* %194, i32* nonnull %9, i32 %197) #6
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %729

200:                                              ; preds = %192
  %201 = load i32, i32* %9, align 4
  %202 = load i32, i32* %150, align 4
  %203 = mul nsw i32 %202, %201
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i16, i16* %194, i64 %204
  %206 = add nsw i32 %201, %193
  %207 = icmp slt i32 %206, %123
  br i1 %207, label %192, label %238

208:                                              ; preds = %186, %230
  %209 = phi i32 [ %236, %230 ], [ 0, %186 ]
  %210 = phi i16* [ %235, %230 ], [ %155, %186 ]
  %211 = icmp eq i32 %209, 0
  %212 = zext i1 %211 to i32
  %213 = load i32, i32* %190, align 4
  %214 = call i32 @silk_Decode(i8* %20, %struct.silk_DecControlStruct* %168, i32 %189, i32 %212, %struct.ec_ctx* nonnull %8, i16* %210, i32* nonnull %9, i32 %213) #6
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %218

216:                                              ; preds = %208
  %217 = load i32, i32* %150, align 4
  br label %230

218:                                              ; preds = %208
  store i32 %123, i32* %9, align 4
  %219 = load i32, i32* %150, align 4
  %220 = mul nsw i32 %219, %123
  %221 = icmp sgt i32 %220, 0
  br i1 %221, label %222, label %230

222:                                              ; preds = %218, %222
  %223 = phi i64 [ %225, %222 ], [ 0, %218 ]
  %224 = getelementptr inbounds i16, i16* %210, i64 %223
  store i16 0, i16* %224, align 2
  %225 = add nuw nsw i64 %223, 1
  %226 = load i32, i32* %150, align 4
  %227 = mul nsw i32 %226, %123
  %228 = sext i32 %227 to i64
  %229 = icmp slt i64 %225, %228
  br i1 %229, label %222, label %230

230:                                              ; preds = %222, %216, %218
  %231 = phi i32 [ %217, %216 ], [ %219, %218 ], [ %226, %222 ]
  %232 = load i32, i32* %9, align 4
  %233 = mul nsw i32 %231, %232
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds i16, i16* %210, i64 %234
  %236 = add nsw i32 %232, %209
  %237 = icmp slt i32 %236, %123
  br i1 %237, label %208, label %238

238:                                              ; preds = %230, %200
  %239 = icmp eq i32 %5, 0
  %240 = and i1 %239, %126
  br i1 %240, label %241, label %296

241:                                              ; preds = %238
  %242 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %8, i64 0, i32 5
  %243 = load i32, i32* %242, align 8
  %244 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %8, i64 0, i32 7
  %245 = load i32, i32* %244, align 8
  %246 = call i32 @llvm.ctlz.i32(i32 %245, i1 true) #6, !range !2
  %247 = or i32 %246, -32
  %248 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 9
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 1001
  %251 = select i1 %250, i32 20, i32 0
  %252 = add i32 %243, 17
  %253 = add i32 %252, %247
  %254 = add i32 %253, %251
  %255 = shl nsw i32 %2, 3
  %256 = icmp sgt i32 %254, %255
  br i1 %256, label %296, label %257

257:                                              ; preds = %241
  %258 = icmp eq i32 %122, 1001
  br i1 %258, label %259, label %270

259:                                              ; preds = %257
  %260 = call i32 @ec_dec_bit_logp(%struct.ec_ctx* nonnull %8, i32 12) #6
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %296, label %262

262:                                              ; preds = %259
  %263 = call i32 @ec_dec_bit_logp(%struct.ec_ctx* nonnull %8, i32 1) #6
  %264 = call i32 @ec_dec_uint(%struct.ec_ctx* nonnull %8, i32 256) #6
  %265 = add nsw i32 %264, 2
  %266 = load i32, i32* %242, align 8
  %267 = load i32, i32* %244, align 8
  %268 = call i32 @llvm.ctlz.i32(i32 %267, i1 true) #6, !range !2
  %269 = or i32 %268, -32
  br label %280

270:                                              ; preds = %257
  %271 = call i32 @ec_dec_bit_logp(%struct.ec_ctx* nonnull %8, i32 1) #6
  %272 = load i32, i32* %242, align 8
  %273 = load i32, i32* %244, align 8
  %274 = call i32 @llvm.ctlz.i32(i32 %273, i1 true) #6, !range !2
  %275 = or i32 %274, -32
  %276 = add i32 %272, 7
  %277 = add i32 %276, %275
  %278 = ashr i32 %277, 3
  %279 = sub nsw i32 %2, %278
  br label %280

280:                                              ; preds = %270, %262
  %281 = phi i32 [ %275, %270 ], [ %269, %262 ]
  %282 = phi i32 [ %272, %270 ], [ %266, %262 ]
  %283 = phi i32 [ %271, %270 ], [ %263, %262 ]
  %284 = phi i32 [ 1, %270 ], [ %260, %262 ]
  %285 = phi i32 [ %279, %270 ], [ %265, %262 ]
  %286 = sub nsw i32 %2, %285
  %287 = shl nsw i32 %286, 3
  %288 = add i32 %281, %282
  %289 = icmp slt i32 %287, %288
  %290 = select i1 %289, i32 0, i32 %286
  %291 = select i1 %289, i32 0, i32 %284
  %292 = select i1 %289, i32 0, i32 %285
  %293 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %8, i64 0, i32 1
  %294 = load i32, i32* %293, align 8
  %295 = sub i32 %294, %292
  store i32 %295, i32* %293, align 8
  br label %296

296:                                              ; preds = %280, %259, %241, %238, %144
  %297 = phi i32 [ 0, %144 ], [ %283, %280 ], [ 0, %259 ], [ 0, %241 ], [ 0, %238 ]
  %298 = phi i32 [ 0, %144 ], [ %292, %280 ], [ 0, %259 ], [ 0, %241 ], [ 0, %238 ]
  %299 = phi i32 [ 0, %144 ], [ %291, %280 ], [ 0, %259 ], [ 0, %241 ], [ 0, %238 ]
  %300 = phi i32 [ %2, %144 ], [ %290, %280 ], [ %2, %259 ], [ %2, %241 ], [ %2, %238 ]
  %301 = phi i1 [ false, %144 ], [ true, %280 ], [ true, %259 ], [ true, %241 ], [ true, %238 ]
  %302 = phi i16* [ %145, %144 ], [ %155, %280 ], [ %155, %259 ], [ %155, %241 ], [ %155, %238 ]
  %303 = phi i1 [ %146, %144 ], [ true, %280 ], [ true, %259 ], [ true, %241 ], [ %239, %238 ]
  %304 = phi i32 [ 0, %144 ], [ 17, %280 ], [ 17, %259 ], [ 17, %241 ], [ 17, %238 ]
  %305 = icmp ne i32 %299, 0
  %306 = select i1 %305, i32 0, i32 %127
  %307 = sext i32 %306 to i64
  %308 = shl nsw i64 %307, 2
  %309 = alloca float, i64 %307, align 16
  %310 = bitcast float* %309 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %310, i8 -86, i64 %308, i1 false)
  %311 = xor i1 %305, true
  %312 = and i1 %129, %311
  %313 = and i1 %312, %301
  br i1 %313, label %314, label %318

314:                                              ; preds = %296
  %315 = icmp slt i32 %30, %123
  %316 = select i1 %315, i32 %30, i32 %123
  %317 = call fastcc i32 @opus_decode_frame(%struct.OpusDecoder* %0, i8* null, i32 0, float* nonnull %309, i32 %316, i32 0)
  br label %318

318:                                              ; preds = %314, %296
  %319 = phi float* [ %309, %314 ], [ %141, %296 ]
  switch i32 %121, label %323 [
    i32 0, label %329
    i32 1101, label %324
    i32 1102, label %320
    i32 1103, label %320
    i32 1104, label %321
    i32 1105, label %322
  ]

320:                                              ; preds = %318, %318
  br label %324

321:                                              ; preds = %318
  br label %324

322:                                              ; preds = %318
  br label %324

323:                                              ; preds = %318
  call void @celt_fatal(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 488) #11
  unreachable

324:                                              ; preds = %318, %322, %321, %320
  %325 = phi i32 [ 21, %322 ], [ 19, %321 ], [ 17, %320 ], [ 13, %318 ]
  %326 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %25, i32 10012, i32 %325) #6
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %329, label %328

328:                                              ; preds = %324
  call void @celt_fatal(i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 491) #11
  unreachable

329:                                              ; preds = %324, %318
  %330 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 7
  %331 = load i32, i32* %330, align 4
  %332 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %25, i32 10008, i32 %331) #6
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %335, label %334

334:                                              ; preds = %329
  call void @celt_fatal(i8* getelementptr inbounds ([159 x i8], [159 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 493) #11
  unreachable

335:                                              ; preds = %329
  br i1 %305, label %336, label %340

336:                                              ; preds = %335
  %337 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  %338 = load i32, i32* %337, align 4
  %339 = mul nsw i32 %338, %30
  br label %340

340:                                              ; preds = %335, %336
  %341 = phi i32 [ %339, %336 ], [ 0, %335 ]
  %342 = sext i32 %341 to i64
  %343 = shl nsw i64 %342, 2
  %344 = alloca float, i64 %342, align 16
  %345 = bitcast float* %344 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %345, i8 -86, i64 %343, i1 false)
  %346 = icmp ne i32 %297, 0
  %347 = and i1 %346, %305
  br i1 %347, label %348, label %359

348:                                              ; preds = %340
  %349 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %25, i32 10010, i32 0) #6
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %352, label %351

351:                                              ; preds = %348
  call void @celt_fatal(i8* getelementptr inbounds ([123 x i8], [123 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 502) #11
  unreachable

352:                                              ; preds = %348
  %353 = sext i32 %300 to i64
  %354 = getelementptr inbounds i8, i8* %125, i64 %353
  %355 = call i32 @celt_decode_with_ec(%struct.OpusCustomDecoder* %25, i8* %354, i32 %298, float* nonnull %344, i32 %30, %struct.ec_ctx* null, i32 0) #6
  %356 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %25, i32 4031, i32* nonnull %10) #6
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %359, label %358

358:                                              ; preds = %352
  call void @celt_fatal(i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 505) #11
  unreachable

359:                                              ; preds = %352, %340
  %360 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %25, i32 10010, i32 %304) #6
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %363, label %362

362:                                              ; preds = %359
  call void @celt_fatal(i8* getelementptr inbounds ([141 x i8], [141 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 509) #11
  unreachable

363:                                              ; preds = %359
  %364 = icmp eq i32 %122, 1000
  br i1 %364, label %384, label %365

365:                                              ; preds = %363
  %366 = icmp slt i32 %28, %123
  %367 = select i1 %366, i32 %28, i32 %123
  %368 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 10
  %369 = load i32, i32* %368, align 4
  %370 = icmp ne i32 %122, %369
  %371 = icmp sgt i32 %369, 0
  %372 = and i1 %370, %371
  br i1 %372, label %373, label %381

373:                                              ; preds = %365
  %374 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 12
  %375 = load i32, i32* %374, align 4
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %381

377:                                              ; preds = %373
  %378 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %25, i32 4028) #6
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %381, label %380

380:                                              ; preds = %377
  call void @celt_fatal(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 516) #11
  unreachable

381:                                              ; preds = %365, %373, %377
  %382 = select i1 %303, i8* %125, i8* null
  %383 = call i32 @celt_decode_with_ec(%struct.OpusCustomDecoder* %25, i8* %382, i32 %300, float* %3, i32 %367, %struct.ec_ctx* nonnull %8, i32 0) #6
  br label %414

384:                                              ; preds = %363
  %385 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %385) #6
  store i16 -1, i16* %11, align 2
  %386 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  %387 = load i32, i32* %386, align 4
  %388 = mul nsw i32 %387, %123
  %389 = icmp sgt i32 %388, 0
  br i1 %389, label %390, label %398

390:                                              ; preds = %384, %390
  %391 = phi i64 [ %393, %390 ], [ 0, %384 ]
  %392 = getelementptr inbounds float, float* %3, i64 %391
  store float 0.000000e+00, float* %392, align 4
  %393 = add nuw nsw i64 %391, 1
  %394 = load i32, i32* %386, align 4
  %395 = mul nsw i32 %394, %123
  %396 = sext i32 %395 to i64
  %397 = icmp slt i64 %393, %396
  br i1 %397, label %390, label %398

398:                                              ; preds = %390, %384
  %399 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 10
  %400 = load i32, i32* %399, align 4
  %401 = icmp eq i32 %400, 1001
  br i1 %401, label %402, label %413

402:                                              ; preds = %398
  br i1 %347, label %403, label %407

403:                                              ; preds = %402
  %404 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 12
  %405 = load i32, i32* %404, align 4
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %413

407:                                              ; preds = %403, %402
  %408 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %25, i32 10010, i32 0) #6
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %411, label %410

410:                                              ; preds = %407
  call void @celt_fatal(i8* getelementptr inbounds ([123 x i8], [123 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 531) #11
  unreachable

411:                                              ; preds = %407
  %412 = call i32 @celt_decode_with_ec(%struct.OpusCustomDecoder* %25, i8* nonnull %385, i32 2, float* %3, i32 %31, %struct.ec_ctx* null, i32 0) #6
  br label %413

413:                                              ; preds = %403, %411, %398
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %385) #6
  br label %414

414:                                              ; preds = %413, %381
  %415 = phi i32 [ %383, %381 ], [ 0, %413 ]
  br i1 %134, label %435, label %416

416:                                              ; preds = %414
  %417 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  %418 = load i32, i32* %417, align 4
  %419 = mul nsw i32 %418, %123
  %420 = icmp sgt i32 %419, 0
  br i1 %420, label %421, label %435

421:                                              ; preds = %416, %421
  %422 = phi i64 [ %430, %421 ], [ 0, %416 ]
  %423 = getelementptr inbounds float, float* %3, i64 %422
  %424 = load float, float* %423, align 4
  %425 = getelementptr inbounds i16, i16* %302, i64 %422
  %426 = load i16, i16* %425, align 2
  %427 = sitofp i16 %426 to float
  %428 = fmul float %427, 0x3F00000000000000
  %429 = fadd float %424, %428
  store float %429, float* %423, align 4
  %430 = add nuw nsw i64 %422, 1
  %431 = load i32, i32* %417, align 4
  %432 = mul nsw i32 %431, %123
  %433 = sext i32 %432 to i64
  %434 = icmp slt i64 %430, %433
  br i1 %434, label %421, label %435

435:                                              ; preds = %421, %416, %414
  %436 = bitcast %struct.OpusCustomMode** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %436) #6
  store %struct.OpusCustomMode* inttoptr (i64 -6148914691236517206 to %struct.OpusCustomMode*), %struct.OpusCustomMode** %12, align 8
  %437 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %25, i32 10015, %struct.OpusCustomMode** nonnull %12) #6
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %440, label %439

439:                                              ; preds = %435
  call void @celt_fatal(i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 549) #11
  unreachable

440:                                              ; preds = %435
  %441 = load %struct.OpusCustomMode*, %struct.OpusCustomMode** %12, align 8
  %442 = getelementptr inbounds %struct.OpusCustomMode, %struct.OpusCustomMode* %441, i64 0, i32 12
  %443 = load float*, float** %442, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %436) #6
  %444 = icmp eq i32 %299, 0
  %445 = or i1 %346, %444
  br i1 %445, label %504, label %446

446:                                              ; preds = %440
  %447 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %25, i32 4028) #6
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %450, label %449

449:                                              ; preds = %446
  call void @celt_fatal(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 556) #11
  unreachable

450:                                              ; preds = %446
  %451 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %25, i32 10010, i32 0) #6
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %454, label %453

453:                                              ; preds = %450
  call void @celt_fatal(i8* getelementptr inbounds ([123 x i8], [123 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 557) #11
  unreachable

454:                                              ; preds = %450
  %455 = sext i32 %300 to i64
  %456 = getelementptr inbounds i8, i8* %125, i64 %455
  %457 = call i32 @celt_decode_with_ec(%struct.OpusCustomDecoder* %25, i8* %456, i32 %298, float* nonnull %344, i32 %30, %struct.ec_ctx* null, i32 0) #6
  %458 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %25, i32 4031, i32* nonnull %10) #6
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %461, label %460

460:                                              ; preds = %454
  call void @celt_fatal(i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 560) #11
  unreachable

461:                                              ; preds = %454
  %462 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  %463 = load i32, i32* %462, align 4
  %464 = sub nsw i32 %123, %31
  %465 = mul nsw i32 %463, %464
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds float, float* %3, i64 %466
  %468 = mul nsw i32 %463, %31
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds float, float* %344, i64 %469
  %471 = icmp sgt i32 %463, 0
  %472 = icmp sgt i32 %27, 399
  %473 = and i1 %472, %471
  br i1 %473, label %474, label %504

474:                                              ; preds = %461
  %475 = load i32, i32* %26, align 4
  %476 = sdiv i32 48000, %475
  %477 = sext i32 %476 to i64
  %478 = sext i32 %463 to i64
  %479 = zext i32 %463 to i64
  %480 = zext i32 %31 to i64
  br label %481

481:                                              ; preds = %501, %474
  %482 = phi i64 [ 0, %474 ], [ %502, %501 ]
  br label %483

483:                                              ; preds = %483, %481
  %484 = phi i64 [ 0, %481 ], [ %499, %483 ]
  %485 = mul nsw i64 %484, %477
  %486 = getelementptr inbounds float, float* %443, i64 %485
  %487 = load float, float* %486, align 4
  %488 = fmul float %487, %487
  %489 = mul nsw i64 %484, %478
  %490 = add nsw i64 %489, %482
  %491 = getelementptr inbounds float, float* %470, i64 %490
  %492 = load float, float* %491, align 4
  %493 = fmul float %488, %492
  %494 = fsub float 1.000000e+00, %488
  %495 = getelementptr inbounds float, float* %467, i64 %490
  %496 = load float, float* %495, align 4
  %497 = fmul float %494, %496
  %498 = fadd float %493, %497
  store float %498, float* %495, align 4
  %499 = add nuw nsw i64 %484, 1
  %500 = icmp eq i64 %499, %480
  br i1 %500, label %501, label %483

501:                                              ; preds = %483
  %502 = add nuw nsw i64 %482, 1
  %503 = icmp eq i64 %502, %479
  br i1 %503, label %504, label %481

504:                                              ; preds = %501, %461, %440
  br i1 %347, label %505, label %593

505:                                              ; preds = %504
  %506 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp sgt i32 %507, 0
  br i1 %508, label %509, label %554

509:                                              ; preds = %505
  %510 = icmp sgt i32 %27, 399
  br i1 %510, label %517, label %511

511:                                              ; preds = %509
  %512 = add i32 %507, -1
  %513 = and i32 %507, 7
  %514 = icmp ult i32 %512, 7
  br i1 %514, label %548, label %515

515:                                              ; preds = %511
  %516 = sub i32 %507, %513
  br label %544

517:                                              ; preds = %509
  %518 = icmp sgt i32 %27, 799
  br label %519

519:                                              ; preds = %517, %540
  %520 = phi i32 [ %541, %540 ], [ 0, %517 ]
  %521 = zext i32 %520 to i64
  %522 = getelementptr inbounds float, float* %344, i64 %521
  %523 = bitcast float* %522 to i32*
  %524 = load i32, i32* %523, align 4
  %525 = getelementptr inbounds float, float* %3, i64 %521
  %526 = bitcast float* %525 to i32*
  store i32 %524, i32* %526, align 4
  br i1 %518, label %527, label %540

527:                                              ; preds = %519, %527
  %528 = phi i32 [ %538, %527 ], [ 1, %519 ]
  %529 = load i32, i32* %506, align 4
  %530 = mul nsw i32 %529, %528
  %531 = add nsw i32 %530, %520
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds float, float* %344, i64 %532
  %534 = bitcast float* %533 to i32*
  %535 = load i32, i32* %534, align 4
  %536 = getelementptr inbounds float, float* %3, i64 %532
  %537 = bitcast float* %536 to i32*
  store i32 %535, i32* %537, align 4
  %538 = add nuw nsw i32 %528, 1
  %539 = icmp slt i32 %538, %31
  br i1 %539, label %527, label %540

540:                                              ; preds = %527, %519
  %541 = add nuw nsw i32 %520, 1
  %542 = load i32, i32* %506, align 4
  %543 = icmp slt i32 %541, %542
  br i1 %543, label %519, label %554

544:                                              ; preds = %544, %515
  %545 = phi i32 [ %516, %515 ], [ %546, %544 ]
  %546 = add i32 %545, -8
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %548, label %544

548:                                              ; preds = %544, %511
  %549 = icmp eq i32 %513, 0
  br i1 %549, label %554, label %550

550:                                              ; preds = %548, %550
  %551 = phi i32 [ %552, %550 ], [ %513, %548 ]
  %552 = add i32 %551, -1
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %554, label %550, !llvm.loop !3

554:                                              ; preds = %548, %550, %540, %505
  %555 = phi i32 [ %507, %505 ], [ %542, %540 ], [ %507, %550 ], [ %507, %548 ]
  %556 = mul nsw i32 %555, %31
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds float, float* %344, i64 %557
  %559 = getelementptr inbounds float, float* %3, i64 %557
  %560 = icmp sgt i32 %555, 0
  %561 = icmp sgt i32 %27, 399
  %562 = and i1 %561, %560
  br i1 %562, label %563, label %593

563:                                              ; preds = %554
  %564 = load i32, i32* %26, align 4
  %565 = sdiv i32 48000, %564
  %566 = sext i32 %565 to i64
  %567 = sext i32 %555 to i64
  %568 = zext i32 %555 to i64
  %569 = zext i32 %31 to i64
  br label %570

570:                                              ; preds = %590, %563
  %571 = phi i64 [ 0, %563 ], [ %591, %590 ]
  br label %572

572:                                              ; preds = %572, %570
  %573 = phi i64 [ 0, %570 ], [ %588, %572 ]
  %574 = mul nsw i64 %573, %566
  %575 = getelementptr inbounds float, float* %443, i64 %574
  %576 = load float, float* %575, align 4
  %577 = fmul float %576, %576
  %578 = mul nsw i64 %573, %567
  %579 = add nsw i64 %578, %571
  %580 = getelementptr inbounds float, float* %559, i64 %579
  %581 = load float, float* %580, align 4
  %582 = fmul float %577, %581
  %583 = fsub float 1.000000e+00, %577
  %584 = getelementptr inbounds float, float* %558, i64 %579
  %585 = load float, float* %584, align 4
  %586 = fmul float %583, %585
  %587 = fadd float %582, %586
  store float %587, float* %580, align 4
  %588 = add nuw nsw i64 %573, 1
  %589 = icmp eq i64 %588, %569
  br i1 %589, label %590, label %572

590:                                              ; preds = %572
  %591 = add nuw nsw i64 %571, 1
  %592 = icmp eq i64 %591, %568
  br i1 %592, label %593, label %570

593:                                              ; preds = %590, %554, %504
  br i1 %312, label %594, label %687

594:                                              ; preds = %593
  %595 = icmp slt i32 %123, %30
  %596 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  %597 = load i32, i32* %596, align 4
  br i1 %595, label %653, label %598

598:                                              ; preds = %594
  %599 = mul nsw i32 %597, %31
  %600 = icmp sgt i32 %599, 0
  br i1 %600, label %603, label %601

601:                                              ; preds = %598
  %602 = sext i32 %599 to i64
  br label %615

603:                                              ; preds = %598, %603
  %604 = phi i64 [ %610, %603 ], [ 0, %598 ]
  %605 = getelementptr inbounds float, float* %319, i64 %604
  %606 = bitcast float* %605 to i32*
  %607 = load i32, i32* %606, align 4
  %608 = getelementptr inbounds float, float* %3, i64 %604
  %609 = bitcast float* %608 to i32*
  store i32 %607, i32* %609, align 4
  %610 = add nuw nsw i64 %604, 1
  %611 = load i32, i32* %596, align 4
  %612 = mul nsw i32 %611, %31
  %613 = sext i32 %612 to i64
  %614 = icmp slt i64 %610, %613
  br i1 %614, label %603, label %615

615:                                              ; preds = %603, %601
  %616 = phi i64 [ %602, %601 ], [ %613, %603 ]
  %617 = phi i32 [ %597, %601 ], [ %611, %603 ]
  %618 = getelementptr inbounds float, float* %319, i64 %616
  %619 = getelementptr inbounds float, float* %3, i64 %616
  %620 = icmp sgt i32 %617, 0
  %621 = icmp sgt i32 %27, 399
  %622 = and i1 %621, %620
  br i1 %622, label %623, label %687

623:                                              ; preds = %615
  %624 = load i32, i32* %26, align 4
  %625 = sdiv i32 48000, %624
  %626 = sext i32 %625 to i64
  %627 = sext i32 %617 to i64
  %628 = zext i32 %617 to i64
  %629 = zext i32 %31 to i64
  br label %630

630:                                              ; preds = %650, %623
  %631 = phi i64 [ 0, %623 ], [ %651, %650 ]
  br label %632

632:                                              ; preds = %632, %630
  %633 = phi i64 [ 0, %630 ], [ %648, %632 ]
  %634 = mul nsw i64 %633, %626
  %635 = getelementptr inbounds float, float* %443, i64 %634
  %636 = load float, float* %635, align 4
  %637 = fmul float %636, %636
  %638 = mul nsw i64 %633, %627
  %639 = add nsw i64 %638, %631
  %640 = getelementptr inbounds float, float* %619, i64 %639
  %641 = load float, float* %640, align 4
  %642 = fmul float %637, %641
  %643 = fsub float 1.000000e+00, %637
  %644 = getelementptr inbounds float, float* %618, i64 %639
  %645 = load float, float* %644, align 4
  %646 = fmul float %643, %645
  %647 = fadd float %642, %646
  store float %647, float* %640, align 4
  %648 = add nuw nsw i64 %633, 1
  %649 = icmp eq i64 %648, %629
  br i1 %649, label %650, label %632

650:                                              ; preds = %632
  %651 = add nuw nsw i64 %631, 1
  %652 = icmp eq i64 %651, %628
  br i1 %652, label %687, label %630

653:                                              ; preds = %594
  %654 = icmp sgt i32 %597, 0
  %655 = icmp sgt i32 %27, 399
  %656 = and i1 %655, %654
  br i1 %656, label %657, label %687

657:                                              ; preds = %653
  %658 = load i32, i32* %26, align 4
  %659 = sdiv i32 48000, %658
  %660 = sext i32 %659 to i64
  %661 = sext i32 %597 to i64
  %662 = zext i32 %597 to i64
  %663 = zext i32 %31 to i64
  br label %664

664:                                              ; preds = %684, %657
  %665 = phi i64 [ 0, %657 ], [ %685, %684 ]
  br label %666

666:                                              ; preds = %666, %664
  %667 = phi i64 [ 0, %664 ], [ %682, %666 ]
  %668 = mul nsw i64 %667, %660
  %669 = getelementptr inbounds float, float* %443, i64 %668
  %670 = load float, float* %669, align 4
  %671 = fmul float %670, %670
  %672 = mul nsw i64 %667, %661
  %673 = add nsw i64 %672, %665
  %674 = getelementptr inbounds float, float* %3, i64 %673
  %675 = load float, float* %674, align 4
  %676 = fmul float %671, %675
  %677 = fsub float 1.000000e+00, %671
  %678 = getelementptr inbounds float, float* %319, i64 %673
  %679 = load float, float* %678, align 4
  %680 = fmul float %677, %679
  %681 = fadd float %676, %680
  store float %681, float* %674, align 4
  %682 = add nuw nsw i64 %667, 1
  %683 = icmp eq i64 %682, %663
  br i1 %683, label %684, label %666

684:                                              ; preds = %666
  %685 = add nuw nsw i64 %665, 1
  %686 = icmp eq i64 %685, %662
  br i1 %686, label %687, label %664

687:                                              ; preds = %650, %684, %653, %615, %593
  %688 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 5
  %689 = load i32, i32* %688, align 4
  %690 = icmp eq i32 %689, 0
  br i1 %690, label %712, label %691

691:                                              ; preds = %687
  %692 = sitofp i32 %689 to float
  %693 = fmul float %692, 0x3F4542A5A0000000
  %694 = fpext float %693 to double
  %695 = fmul double %694, 0x3FE62E42FEFA39EF
  %696 = call double @exp(double %695) #6
  %697 = fptrunc double %696 to float
  %698 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  %699 = load i32, i32* %698, align 4
  %700 = mul nsw i32 %699, %123
  %701 = icmp sgt i32 %700, 0
  br i1 %701, label %702, label %712

702:                                              ; preds = %691, %702
  %703 = phi i64 [ %707, %702 ], [ 0, %691 ]
  %704 = getelementptr inbounds float, float* %3, i64 %703
  %705 = load float, float* %704, align 4
  %706 = fmul float %705, %697
  store float %706, float* %704, align 4
  %707 = add nuw nsw i64 %703, 1
  %708 = load i32, i32* %698, align 4
  %709 = mul nsw i32 %708, %123
  %710 = sext i32 %709 to i64
  %711 = icmp slt i64 %707, %710
  br i1 %711, label %702, label %712

712:                                              ; preds = %702, %691, %687
  %713 = icmp slt i32 %300, 2
  br i1 %713, label %719, label %714

714:                                              ; preds = %712
  %715 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %8, i64 0, i32 7
  %716 = load i32, i32* %715, align 8
  %717 = load i32, i32* %10, align 4
  %718 = xor i32 %717, %716
  br label %719

719:                                              ; preds = %712, %714
  %720 = phi i32 [ %718, %714 ], [ 0, %712 ]
  %721 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 15
  store i32 %720, i32* %721, align 4
  %722 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 10
  store i32 %122, i32* %722, align 4
  %723 = xor i1 %346, true
  %724 = and i1 %305, %723
  %725 = zext i1 %724 to i32
  %726 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 12
  store i32 %725, i32* %726, align 4
  %727 = icmp slt i32 %415, 0
  %728 = select i1 %727, i32 %415, i32 %123
  br label %729

729:                                              ; preds = %192, %68, %75, %56, %51, %140, %6, %719
  %730 = phi i32 [ %728, %719 ], [ -2, %6 ], [ -1, %140 ], [ %47, %51 ], [ %47, %56 ], [ %73, %68 ], [ %47, %75 ], [ -3, %192 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %13) #6
  ret i32 %730
}

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @opus_packet_get_bandwidth(i8* nocapture readonly) local_unnamed_addr #4 {
  %2 = load i8, i8* %0, align 1
  %3 = zext i8 %2 to i32
  %4 = icmp slt i8 %2, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = lshr i32 %3, 5
  %7 = and i32 %6, 3
  %8 = add nuw nsw i32 %7, 1102
  %9 = icmp eq i32 %7, 0
  %10 = select i1 %9, i32 1101, i32 %8
  br label %22

11:                                               ; preds = %1
  %12 = and i32 %3, 96
  %13 = icmp eq i32 %12, 96
  br i1 %13, label %14, label %18

14:                                               ; preds = %11
  %15 = and i32 %3, 16
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, i32 1104, i32 1105
  br label %22

18:                                               ; preds = %11
  %19 = lshr i32 %3, 5
  %20 = and i32 %19, 3
  %21 = add nuw nsw i32 %20, 1101
  br label %22

22:                                               ; preds = %14, %18, %5
  %23 = phi i32 [ %10, %5 ], [ %17, %14 ], [ %21, %18 ]
  ret i32 %23
}

declare i32 @opus_packet_get_samples_per_frame(i8*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @opus_packet_get_nb_channels(i8* nocapture readonly) local_unnamed_addr #4 {
  %2 = load i8, i8* %0, align 1
  %3 = and i8 %2, 4
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i32 1, i32 2
  ret i32 %5
}

declare i32 @opus_packet_parse_impl(i8*, i32, i32, i8*, i8**, i16*, i32*, i32*) local_unnamed_addr #2

declare void @opus_pcm_soft_clip(float*, i32, i32, float*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_decode(%struct.OpusDecoder*, i8*, i32, i16* nocapture, i32, i32) local_unnamed_addr #5 {
  %7 = icmp slt i32 %4, 1
  br i1 %7, label %76, label %8

8:                                                ; preds = %6
  %9 = icmp eq i8* %1, null
  %10 = icmp slt i32 %2, 1
  %11 = or i1 %9, %10
  %12 = icmp ne i32 %5, 0
  %13 = or i1 %11, %12
  br i1 %13, label %39, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = load i8, i8* %1, align 1
  %18 = and i8 %17, 3
  switch i8 %18, label %19 [
    i8 0, label %27
    i8 3, label %20
  ]

19:                                               ; preds = %14
  br label %27

20:                                               ; preds = %14
  %21 = icmp slt i32 %2, 2
  br i1 %21, label %76, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds i8, i8* %1, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, 63
  %26 = zext i8 %25 to i32
  br label %27

27:                                               ; preds = %22, %19, %14
  %28 = phi i32 [ 1, %14 ], [ %26, %22 ], [ 2, %19 ]
  %29 = tail call i32 @opus_packet_get_samples_per_frame(i8* nonnull %1, i32 %16) #6
  %30 = mul nsw i32 %29, %28
  %31 = mul nsw i32 %30, 25
  %32 = mul nsw i32 %16, 3
  %33 = icmp sle i32 %31, %32
  %34 = icmp sgt i32 %30, 0
  %35 = and i1 %34, %33
  br i1 %35, label %36, label %76

36:                                               ; preds = %27
  %37 = icmp sgt i32 %30, %4
  %38 = select i1 %37, i32 %4, i32 %30
  br label %39

39:                                               ; preds = %8, %36
  %40 = phi i32 [ %4, %8 ], [ %38, %36 ]
  %41 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, -1
  %44 = icmp ult i32 %43, 2
  br i1 %44, label %46, label %45

45:                                               ; preds = %39
  tail call void @celt_fatal(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 810) #11
  unreachable

46:                                               ; preds = %39
  %47 = mul nsw i32 %42, %40
  %48 = sext i32 %47 to i64
  %49 = shl nsw i64 %48, 2
  %50 = alloca float, i64 %48, align 16
  %51 = bitcast float* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %51, i8 -86, i64 %49, i1 false)
  %52 = call i32 @opus_decode_native(%struct.OpusDecoder* %0, i8* %1, i32 %2, float* nonnull %50, i32 %40, i32 %5, i32 0, i32* null, i32 1)
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %76

54:                                               ; preds = %46
  %55 = load i32, i32* %41, align 4
  %56 = mul nsw i32 %55, %52
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %76

58:                                               ; preds = %54, %58
  %59 = phi i64 [ %71, %58 ], [ 0, %54 ]
  %60 = getelementptr inbounds float, float* %50, i64 %59
  %61 = load float, float* %60, align 4
  %62 = fmul float %61, 3.276800e+04
  %63 = fcmp ogt float %62, -3.276800e+04
  %64 = select i1 %63, float %62, float -3.276800e+04
  %65 = fcmp olt float %64, 3.276700e+04
  %66 = select i1 %65, float %64, float 3.276700e+04
  %67 = insertelement <4 x float> undef, float %66, i32 0
  %68 = call i32 @llvm.x86.sse.cvtss2si(<4 x float> %67) #6
  %69 = trunc i32 %68 to i16
  %70 = getelementptr inbounds i16, i16* %3, i64 %59
  store i16 %69, i16* %70, align 2
  %71 = add nuw nsw i64 %59, 1
  %72 = load i32, i32* %41, align 4
  %73 = mul nsw i32 %72, %52
  %74 = sext i32 %73 to i64
  %75 = icmp slt i64 %71, %74
  br i1 %75, label %58, label %76

76:                                               ; preds = %58, %54, %27, %20, %46, %6
  %77 = phi i32 [ -1, %6 ], [ %52, %46 ], [ -4, %20 ], [ -4, %27 ], [ %52, %54 ], [ %52, %58 ]
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_decoder_get_nb_samples(%struct.OpusDecoder* nocapture readonly, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %2, 1
  br i1 %6, label %26, label %7

7:                                                ; preds = %3
  %8 = load i8, i8* %1, align 1
  %9 = and i8 %8, 3
  switch i8 %9, label %10 [
    i8 0, label %18
    i8 3, label %11
  ]

10:                                               ; preds = %7
  br label %18

11:                                               ; preds = %7
  %12 = icmp slt i32 %2, 2
  br i1 %12, label %26, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 63
  %17 = zext i8 %16 to i32
  br label %18

18:                                               ; preds = %13, %10, %7
  %19 = phi i32 [ 1, %7 ], [ %17, %13 ], [ 2, %10 ]
  %20 = tail call i32 @opus_packet_get_samples_per_frame(i8* %1, i32 %5) #6
  %21 = mul nsw i32 %20, %19
  %22 = mul nsw i32 %21, 25
  %23 = mul nsw i32 %5, 3
  %24 = icmp sgt i32 %22, %23
  %25 = select i1 %24, i32 -4, i32 %21
  br label %26

26:                                               ; preds = %3, %11, %18
  %27 = phi i32 [ %25, %18 ], [ -1, %3 ], [ -4, %11 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_decode_float(%struct.OpusDecoder*, i8*, i32, float*, i32, i32) local_unnamed_addr #0 {
  %7 = icmp slt i32 %4, 1
  br i1 %7, label %10, label %8

8:                                                ; preds = %6
  %9 = tail call i32 @opus_decode_native(%struct.OpusDecoder* %0, i8* %1, i32 %2, float* %3, i32 %4, i32 %5, i32 0, i32* null, i32 0)
  br label %10

10:                                               ; preds = %6, %8
  %11 = phi i32 [ %9, %8 ], [ -1, %6 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_decoder_ctl(%struct.OpusDecoder*, i32, ...) local_unnamed_addr #0 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #6
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 0
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 2
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 3
  %8 = bitcast %struct.OpusDecoder* %0 to i8*
  %9 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 1
  %10 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 24, i1 false)
  %11 = load i32, i32* %9, align 4
  %12 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %8, i64 %14
  %16 = bitcast i8* %15 to %struct.OpusCustomDecoder*
  call void @llvm.va_start(i8* nonnull %4)
  switch i32 %1, label %205 [
    i32 4009, label %17
    i32 4031, label %36
    i32 4028, label %55
    i32 4029, label %68
    i32 4033, label %87
    i32 4045, label %112
    i32 4034, label %131
    i32 4039, label %150
    i32 4046, label %169
    i32 4047, label %187
  ]

17:                                               ; preds = %2
  %18 = load i32, i32* %5, align 16
  %19 = icmp ult i32 %18, 41
  br i1 %19, label %20, label %25

20:                                               ; preds = %17
  %21 = load i8*, i8** %7, align 16
  %22 = sext i32 %18 to i64
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = add nuw nsw i32 %18, 8
  store i32 %24, i32* %5, align 16
  br label %28

25:                                               ; preds = %17
  %26 = load i8*, i8** %6, align 8
  %27 = getelementptr i8, i8* %26, i64 8
  store i8* %27, i8** %6, align 8
  br label %28

28:                                               ; preds = %25, %20
  %29 = phi i8* [ %23, %20 ], [ %26, %25 ]
  %30 = bitcast i8* %29 to i32**
  %31 = load i32*, i32** %30, align 8
  %32 = icmp eq i32* %31, null
  br i1 %32, label %205, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 8
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %31, align 4
  br label %205

36:                                               ; preds = %2
  %37 = load i32, i32* %5, align 16
  %38 = icmp ult i32 %37, 41
  br i1 %38, label %39, label %44

39:                                               ; preds = %36
  %40 = load i8*, i8** %7, align 16
  %41 = sext i32 %37 to i64
  %42 = getelementptr i8, i8* %40, i64 %41
  %43 = add nuw nsw i32 %37, 8
  store i32 %43, i32* %5, align 16
  br label %47

44:                                               ; preds = %36
  %45 = load i8*, i8** %6, align 8
  %46 = getelementptr i8, i8* %45, i64 8
  store i8* %46, i8** %6, align 8
  br label %47

47:                                               ; preds = %44, %39
  %48 = phi i8* [ %42, %39 ], [ %45, %44 ]
  %49 = bitcast i8* %48 to i32**
  %50 = load i32*, i32** %49, align 8
  %51 = icmp eq i32* %50, null
  br i1 %51, label %205, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 15
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %50, align 4
  br label %205

55:                                               ; preds = %2
  %56 = sext i32 %11 to i64
  %57 = getelementptr inbounds i8, i8* %8, i64 %56
  %58 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 7
  %59 = bitcast i32* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 40, i1 false)
  %60 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %16, i32 4028) #6
  %61 = call i32 @silk_InitDecoder(i8* %57) #6
  %62 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 2
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %58, align 4
  %64 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = sdiv i32 %65, 400
  %67 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 11
  store i32 %66, i32* %67, align 4
  br label %205

68:                                               ; preds = %2
  %69 = load i32, i32* %5, align 16
  %70 = icmp ult i32 %69, 41
  br i1 %70, label %71, label %76

71:                                               ; preds = %68
  %72 = load i8*, i8** %7, align 16
  %73 = sext i32 %69 to i64
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = add nuw nsw i32 %69, 8
  store i32 %75, i32* %5, align 16
  br label %79

76:                                               ; preds = %68
  %77 = load i8*, i8** %6, align 8
  %78 = getelementptr i8, i8* %77, i64 8
  store i8* %78, i8** %6, align 8
  br label %79

79:                                               ; preds = %76, %71
  %80 = phi i8* [ %74, %71 ], [ %77, %76 ]
  %81 = bitcast i8* %80 to i32**
  %82 = load i32*, i32** %81, align 8
  %83 = icmp eq i32* %82, null
  br i1 %83, label %205, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 4
  store i32 %86, i32* %82, align 4
  br label %205

87:                                               ; preds = %2
  %88 = load i32, i32* %5, align 16
  %89 = icmp ult i32 %88, 41
  br i1 %89, label %90, label %95

90:                                               ; preds = %87
  %91 = load i8*, i8** %7, align 16
  %92 = sext i32 %88 to i64
  %93 = getelementptr i8, i8* %91, i64 %92
  %94 = add nuw nsw i32 %88, 8
  store i32 %94, i32* %5, align 16
  br label %98

95:                                               ; preds = %87
  %96 = load i8*, i8** %6, align 8
  %97 = getelementptr i8, i8* %96, i64 8
  store i8* %97, i8** %6, align 8
  br label %98

98:                                               ; preds = %95, %90
  %99 = phi i8* [ %93, %90 ], [ %96, %95 ]
  %100 = bitcast i8* %99 to i32**
  %101 = load i32*, i32** %100, align 8
  %102 = icmp eq i32* %101, null
  br i1 %102, label %205, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 10
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 1002
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %16, i32 4033, i32* nonnull %101) #6
  br label %205

109:                                              ; preds = %103
  %110 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 4, i32 5
  %111 = load i32, i32* %110, align 4
  store i32 %111, i32* %101, align 4
  br label %205

112:                                              ; preds = %2
  %113 = load i32, i32* %5, align 16
  %114 = icmp ult i32 %113, 41
  br i1 %114, label %115, label %120

115:                                              ; preds = %112
  %116 = load i8*, i8** %7, align 16
  %117 = sext i32 %113 to i64
  %118 = getelementptr i8, i8* %116, i64 %117
  %119 = add nuw nsw i32 %113, 8
  store i32 %119, i32* %5, align 16
  br label %123

120:                                              ; preds = %112
  %121 = load i8*, i8** %6, align 8
  %122 = getelementptr i8, i8* %121, i64 8
  store i8* %122, i8** %6, align 8
  br label %123

123:                                              ; preds = %120, %115
  %124 = phi i8* [ %118, %115 ], [ %121, %120 ]
  %125 = bitcast i8* %124 to i32**
  %126 = load i32*, i32** %125, align 8
  %127 = icmp eq i32* %126, null
  br i1 %127, label %205, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 5
  %130 = load i32, i32* %129, align 4
  store i32 %130, i32* %126, align 4
  br label %205

131:                                              ; preds = %2
  %132 = load i32, i32* %5, align 16
  %133 = icmp ult i32 %132, 41
  br i1 %133, label %134, label %139

134:                                              ; preds = %131
  %135 = load i8*, i8** %7, align 16
  %136 = sext i32 %132 to i64
  %137 = getelementptr i8, i8* %135, i64 %136
  %138 = add nuw nsw i32 %132, 8
  store i32 %138, i32* %5, align 16
  br label %142

139:                                              ; preds = %131
  %140 = load i8*, i8** %6, align 8
  %141 = getelementptr i8, i8* %140, i64 8
  store i8* %141, i8** %6, align 8
  br label %142

142:                                              ; preds = %139, %134
  %143 = phi i8* [ %137, %134 ], [ %140, %139 ]
  %144 = bitcast i8* %143 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = add i32 %145, 32768
  %147 = icmp ugt i32 %146, 65535
  br i1 %147, label %205, label %148

148:                                              ; preds = %142
  %149 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 5
  store i32 %145, i32* %149, align 4
  br label %205

150:                                              ; preds = %2
  %151 = load i32, i32* %5, align 16
  %152 = icmp ult i32 %151, 41
  br i1 %152, label %153, label %158

153:                                              ; preds = %150
  %154 = load i8*, i8** %7, align 16
  %155 = sext i32 %151 to i64
  %156 = getelementptr i8, i8* %154, i64 %155
  %157 = add nuw nsw i32 %151, 8
  store i32 %157, i32* %5, align 16
  br label %161

158:                                              ; preds = %150
  %159 = load i8*, i8** %6, align 8
  %160 = getelementptr i8, i8* %159, i64 8
  store i8* %160, i8** %6, align 8
  br label %161

161:                                              ; preds = %158, %153
  %162 = phi i8* [ %156, %153 ], [ %159, %158 ]
  %163 = bitcast i8* %162 to i32**
  %164 = load i32*, i32** %163, align 8
  %165 = icmp eq i32* %164, null
  br i1 %165, label %205, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds %struct.OpusDecoder, %struct.OpusDecoder* %0, i64 0, i32 13
  %168 = load i32, i32* %167, align 4
  store i32 %168, i32* %164, align 4
  br label %205

169:                                              ; preds = %2
  %170 = load i32, i32* %5, align 16
  %171 = icmp ult i32 %170, 41
  br i1 %171, label %172, label %177

172:                                              ; preds = %169
  %173 = load i8*, i8** %7, align 16
  %174 = sext i32 %170 to i64
  %175 = getelementptr i8, i8* %173, i64 %174
  %176 = add nuw nsw i32 %170, 8
  store i32 %176, i32* %5, align 16
  br label %180

177:                                              ; preds = %169
  %178 = load i8*, i8** %6, align 8
  %179 = getelementptr i8, i8* %178, i64 8
  store i8* %179, i8** %6, align 8
  br label %180

180:                                              ; preds = %177, %172
  %181 = phi i8* [ %175, %172 ], [ %178, %177 ]
  %182 = bitcast i8* %181 to i32*
  %183 = load i32, i32* %182, align 4
  %184 = icmp ugt i32 %183, 1
  br i1 %184, label %205, label %185

185:                                              ; preds = %180
  %186 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %16, i32 4046, i32 %183) #6
  br label %205

187:                                              ; preds = %2
  %188 = load i32, i32* %5, align 16
  %189 = icmp ult i32 %188, 41
  br i1 %189, label %190, label %195

190:                                              ; preds = %187
  %191 = load i8*, i8** %7, align 16
  %192 = sext i32 %188 to i64
  %193 = getelementptr i8, i8* %191, i64 %192
  %194 = add nuw nsw i32 %188, 8
  store i32 %194, i32* %5, align 16
  br label %198

195:                                              ; preds = %187
  %196 = load i8*, i8** %6, align 8
  %197 = getelementptr i8, i8* %196, i64 8
  store i8* %197, i8** %6, align 8
  br label %198

198:                                              ; preds = %195, %190
  %199 = phi i8* [ %193, %190 ], [ %196, %195 ]
  %200 = bitcast i8* %199 to i32**
  %201 = load i32*, i32** %200, align 8
  %202 = icmp eq i32* %201, null
  br i1 %202, label %205, label %203

203:                                              ; preds = %198
  %204 = call i32 (%struct.OpusCustomDecoder*, i32, ...) @opus_custom_decoder_ctl(%struct.OpusCustomDecoder* %16, i32 4047, i32* nonnull %201) #6
  br label %205

205:                                              ; preds = %28, %47, %79, %98, %123, %142, %161, %180, %198, %55, %2, %33, %52, %84, %128, %148, %166, %185, %203, %109, %107
  %206 = phi i32 [ 0, %55 ], [ -5, %2 ], [ 0, %33 ], [ 0, %52 ], [ 0, %84 ], [ 0, %128 ], [ 0, %148 ], [ 0, %166 ], [ %186, %185 ], [ %204, %203 ], [ 0, %109 ], [ %108, %107 ], [ -1, %198 ], [ -1, %180 ], [ -1, %161 ], [ -1, %142 ], [ -1, %123 ], [ -1, %98 ], [ -1, %79 ], [ -1, %47 ], [ -1, %28 ]
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #6
  ret i32 %206
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @opus_decoder_destroy(%struct.OpusDecoder* nocapture) local_unnamed_addr #0 {
  %2 = bitcast %struct.OpusDecoder* %0 to i8*
  tail call void @free(i8* %2) #6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @opus_packet_get_nb_frames(i8* nocapture readonly, i32) local_unnamed_addr #4 {
  %3 = icmp slt i32 %1, 1
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = load i8, i8* %0, align 1
  %6 = and i8 %5, 3
  switch i8 %6, label %7 [
    i8 0, label %15
    i8 3, label %8
  ]

7:                                                ; preds = %4
  br label %15

8:                                                ; preds = %4
  %9 = icmp slt i32 %1, 2
  br i1 %9, label %15, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds i8, i8* %0, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = and i8 %12, 63
  %14 = zext i8 %13 to i32
  br label %15

15:                                               ; preds = %8, %4, %2, %10, %7
  %16 = phi i32 [ 2, %7 ], [ %14, %10 ], [ -1, %2 ], [ 1, %4 ], [ -4, %8 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opus_packet_get_nb_samples(i8*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %24, label %5

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  %7 = and i8 %6, 3
  switch i8 %7, label %8 [
    i8 0, label %16
    i8 3, label %9
  ]

8:                                                ; preds = %5
  br label %16

9:                                                ; preds = %5
  %10 = icmp slt i32 %1, 2
  br i1 %10, label %24, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds i8, i8* %0, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, 63
  %15 = zext i8 %14 to i32
  br label %16

16:                                               ; preds = %8, %11, %5
  %17 = phi i32 [ 1, %5 ], [ %15, %11 ], [ 2, %8 ]
  %18 = tail call i32 @opus_packet_get_samples_per_frame(i8* %0, i32 %2) #6
  %19 = mul nsw i32 %18, %17
  %20 = mul nsw i32 %19, 25
  %21 = mul nsw i32 %2, 3
  %22 = icmp sgt i32 %20, %21
  %23 = select i1 %22, i32 -4, i32 %19
  br label %24

24:                                               ; preds = %9, %3, %16
  %25 = phi i32 [ %23, %16 ], [ -1, %3 ], [ -4, %9 ]
  ret i32 %25
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

declare void @ec_dec_init(%struct.ec_ctx*, i8*, i32) local_unnamed_addr #2

declare i32 @silk_Decode(i8*, %struct.silk_DecControlStruct*, i32, i32, %struct.ec_ctx*, i16*, i32*, i32) local_unnamed_addr #2

declare i32 @ec_dec_bit_logp(%struct.ec_ctx*, i32) local_unnamed_addr #2

declare i32 @ec_dec_uint(%struct.ec_ctx*, i32) local_unnamed_addr #2

declare i32 @celt_decode_with_ec(%struct.OpusCustomDecoder*, i8*, i32, float*, i32, %struct.ec_ctx*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare double @exp(double) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: nounwind readnone
declare i32 @llvm.x86.sse.cvtss2si(<4 x float>) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind readnone }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
