; ModuleID = '../../third_party/blink/renderer/modules/webcodecs/image_decoder_core.cc'
source_filename = "../../third_party/blink/renderer/modules/webcodecs/image_decoder_core.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ImageDecoderCore" = type { %"class.WTF::String", i32, %"class.blink::ColorBehavior", %struct.SkISize, i32, i8, %class.scoped_refptr.1, %class.scoped_refptr.7, %"class.std::__1::unique_ptr.13", i8, i8, %class.scoped_refptr.52, %"class.WTF::HashMap" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::ColorBehavior" = type { i32 }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr.1 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector", %"class.WTF::Vector.2" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4" }
%"class.WTF::VectorBufferBase.4" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%class.scoped_refptr.7 = type { %"class.blink::SegmentReader"* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ImageDecoder"* }
%"class.blink::ImageDecoder" = type { i32 (...)**, %class.scoped_refptr.7, %"class.WTF::Vector.14", i8, i32, %"class.blink::ColorBehavior", %"class.blink::ImageOrientation", %"class.blink::IntSize", i64, i8, %"class.std::__1::unique_ptr.26", i8, %"class.blink::IntSize", i8, i8, i8, %"class.std::__1::unique_ptr.30", %class.sk_sp.17, i8, %"class.std::__1::unique_ptr.43" }
%"class.WTF::Vector.14" = type { %"class.WTF::VectorBuffer.15" }
%"class.WTF::VectorBuffer.15" = type { %"class.WTF::VectorBufferBase.16", [128 x i8] }
%"class.WTF::VectorBufferBase.16" = type { %"class.blink::ImageFrame"*, i32, i32 }
%"class.blink::ImageFrame" = type { %class.SkBitmap, %"class.SkBitmap::Allocator"*, i8, i32, %"class.blink::IntRect", i32, %"class.base::TimeDelta", i32, i32, i8, i8, i64 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.23 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.17, i32, i32 }
%class.sk_sp.23 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.8" }>
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::ImageOrientation" = type { i8 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ImagePlanes"* }
%"class.blink::ImagePlanes" = type <{ [3 x i8*], [3 x i64], i32, i8, [3 x i8] }>
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::ColorProfile"* }
%"class.blink::ColorProfile" = type { %struct.skcms_ICCProfile, %"class.std::__1::unique_ptr.34" }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.33, [8 x i8] }
%struct.anon.33 = type { i32, i8*, i8* }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i8* }
%class.sk_sp.17 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.8" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.18" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i8 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::ColorProfileTransform"* }
%"class.blink::ColorProfileTransform" = type { %struct.skcms_ICCProfile*, %struct.skcms_ICCProfile }
%class.scoped_refptr.52 = type { %"class.media::VideoFrame"* }
%"class.media::VideoFrame" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.55", %"class.media::VideoFrameLayout", %class.scoped_refptr.52, i32, %"class.gfx::Rect", %"class.gfx::Size", [4 x i8*], [4 x %"struct.gpu::MailboxHolder"], %"class.base::OnceCallback", %"class.base::UnsafeSharedMemoryRegion"*, %"class.base::UnsafeSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.std::__1::unique_ptr.61", %class.scoped_refptr.67, %"class.std::__1::vector.68", %"class.base::TimeDelta", %"class.base::Lock", %"struct.gpu::SyncToken", %"struct.media::VideoFrameMetadata", i32, %"class.gfx::ColorSpace", %"class.absl::optional.111", [4 x i8], %"class.absl::optional.116", %"class.std::__1::unique_ptr.121" }
%"class.base::RefCountedThreadSafe.55" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.8" }
%"class.media::VideoFrameLayout" = type { i32, %"class.gfx::Size", %"class.std::__1::vector", i8, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"*, %"class.std::__1::__compressed_pair.56" }
%"struct.media::ColorPlaneLayout" = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.media::ColorPlaneLayout"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.59 }
%class.scoped_refptr.59 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.60", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.60" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type opaque
%class.scoped_refptr.67 = type { %"class.media::VideoFrame::DmabufHolder"* }
%"class.media::VideoFrame::DmabufHolder" = type opaque
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.base::OnceCallback.70"*, %"class.base::OnceCallback.70"*, %"class.std::__1::__compressed_pair.71" }
%"class.base::OnceCallback.70" = type opaque
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.base::OnceCallback.70"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"struct.media::VideoFrameMetadata" = type { i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.76", %"class.absl::optional.81", %"class.absl::optional.86", i8, %"class.absl::optional.91", %"class.absl::optional.96", i8, %"class.absl::optional", i8, [3 x i8], %"class.absl::optional.101", i8, i8, i8, i8, i32, %"class.absl::optional.106", i8, %"class.absl::optional.96", %"class.absl::optional.96", %"class.absl::optional.96", %"class.absl::optional.96", %"class.absl::optional.96", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.91", %"class.absl::optional.96", %"class.absl::optional", %"class.absl::optional.91", %"class.absl::optional.76" }
%"class.absl::optional.81" = type { %"class.absl::optional_internal::optional_data.82" }
%"class.absl::optional_internal::optional_data.82" = type { %"class.absl::optional_internal::optional_data_base.83" }
%"class.absl::optional_internal::optional_data_base.83" = type { %"class.absl::optional_internal::optional_data_dtor_base.84" }
%"class.absl::optional_internal::optional_data_dtor_base.84" = type { i8, %union.anon.85 }
%union.anon.85 = type { %"class.gfx::Rect" }
%"class.absl::optional.86" = type { %"class.absl::optional_internal::optional_data.87" }
%"class.absl::optional_internal::optional_data.87" = type { %"class.absl::optional_internal::optional_data_base.88" }
%"class.absl::optional_internal::optional_data_base.88" = type { %"class.absl::optional_internal::optional_data_dtor_base.89" }
%"class.absl::optional_internal::optional_data_dtor_base.89" = type { i8, %union.anon.90 }
%union.anon.90 = type { i32 }
%"class.absl::optional.101" = type { %"class.absl::optional_internal::optional_data.102" }
%"class.absl::optional_internal::optional_data.102" = type { %"class.absl::optional_internal::optional_data_base.103" }
%"class.absl::optional_internal::optional_data_base.103" = type { %"class.absl::optional_internal::optional_data_dtor_base.104" }
%"class.absl::optional_internal::optional_data_dtor_base.104" = type { i8, [3 x i8], %union.anon.105 }
%union.anon.105 = type { %"struct.media::VideoTransformation" }
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.106" = type { %"class.absl::optional_internal::optional_data.107" }
%"class.absl::optional_internal::optional_data.107" = type { %"class.absl::optional_internal::optional_data_base.108" }
%"class.absl::optional_internal::optional_data_base.108" = type { %"class.absl::optional_internal::optional_data_dtor_base.109" }
%"class.absl::optional_internal::optional_data_dtor_base.109" = type { i8, %union.anon.110 }
%union.anon.110 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.96" = type { %"class.absl::optional_internal::optional_data.97" }
%"class.absl::optional_internal::optional_data.97" = type { %"class.absl::optional_internal::optional_data_base.98" }
%"class.absl::optional_internal::optional_data_base.98" = type { %"class.absl::optional_internal::optional_data_dtor_base.99" }
%"class.absl::optional_internal::optional_data_dtor_base.99" = type { i8, %union.anon.100 }
%union.anon.100 = type { double }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.91" = type { %"class.absl::optional_internal::optional_data.92" }
%"class.absl::optional_internal::optional_data.92" = type { %"class.absl::optional_internal::optional_data_base.93" }
%"class.absl::optional_internal::optional_data_base.93" = type { %"class.absl::optional_internal::optional_data_dtor_base.94" }
%"class.absl::optional_internal::optional_data_dtor_base.94" = type { i8, %union.anon.95 }
%union.anon.95 = type { %"class.base::TimeDelta" }
%"class.absl::optional.76" = type { %"class.absl::optional_internal::optional_data.77" }
%"class.absl::optional_internal::optional_data.77" = type { %"class.absl::optional_internal::optional_data_base.78" }
%"class.absl::optional_internal::optional_data_base.78" = type { %"class.absl::optional_internal::optional_data_dtor_base.79" }
%"class.absl::optional_internal::optional_data_dtor_base.79" = type { i8, %union.anon.80 }
%union.anon.80 = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.111" = type { %"class.absl::optional_internal::optional_data.112" }
%"class.absl::optional_internal::optional_data.112" = type { %"class.absl::optional_internal::optional_data_base.113" }
%"class.absl::optional_internal::optional_data_base.113" = type { %"class.absl::optional_internal::optional_data_dtor_base.114" }
%"class.absl::optional_internal::optional_data_dtor_base.114" = type { i8, %union.anon.115 }
%union.anon.115 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.116" = type { %"class.absl::optional_internal::optional_data.117" }
%"class.absl::optional_internal::optional_data.117" = type { %"class.absl::optional_internal::optional_data_base.118" }
%"class.absl::optional_internal::optional_data_base.118" = type { %"class.absl::optional_internal::optional_data_dtor_base.119" }
%"class.absl::optional_internal::optional_data_dtor_base.119" = type { i8, [7 x i8], %union.anon.120 }
%union.anon.120 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.145 }
%union.anon.145 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.blink::ImageDecoderCore::ImageDecodeResult" = type { i8, i8, i32, %class.sk_sp.127, %class.scoped_refptr.52 }
%class.sk_sp.127 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.8", [4 x i8] }>
%"class.absl::optional.131" = type { %"class.absl::optional_internal::optional_data.132" }
%"class.absl::optional_internal::optional_data.132" = type { %"class.absl::optional_internal::optional_data_base.133" }
%"class.absl::optional_internal::optional_data_base.133" = type { %"class.absl::optional_internal::optional_data_dtor_base.134" }
%"class.absl::optional_internal::optional_data_dtor_base.134" = type { i8, %union.anon.135 }
%union.anon.135 = type { %"class.media::VideoFrameLayout" }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { i32*, i32*, %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { i32* }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF7HashMapIjjNS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEE5eraseERKj = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERjSH_EENS_18HashTableAddResultISD_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_ = comdat any

@.str = private unnamed_addr constant [34 x i8] c"Blink.WebCodecs.ImageDecoder.Type\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjjEEEEPKcv = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<unsigned int, unsigned int>]\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

@_ZN5blink16ImageDecoderCoreC1EN3WTF6StringE13scoped_refptrINS_13SegmentReaderEEbNS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorERK7SkISizeNS6_15AnimationOptionE = hidden unnamed_addr alias void (%"class.blink::ImageDecoderCore"*, %"class.WTF::StringImpl"*, %"class.blink::SegmentReader"*, i1, i32, %"class.blink::ColorBehavior"*, %struct.SkISize*, i32), void (%"class.blink::ImageDecoderCore"*, %"class.WTF::StringImpl"*, %"class.blink::SegmentReader"*, i1, i32, %"class.blink::ColorBehavior"*, %struct.SkISize*, i32)* @_ZN5blink16ImageDecoderCoreC2EN3WTF6StringE13scoped_refptrINS_13SegmentReaderEEbNS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorERK7SkISizeNS6_15AnimationOptionE
@_ZN5blink16ImageDecoderCoreD1Ev = hidden unnamed_addr alias void (%"class.blink::ImageDecoderCore"*), void (%"class.blink::ImageDecoderCore"*)* @_ZN5blink16ImageDecoderCoreD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ImageDecoderCoreC2EN3WTF6StringE13scoped_refptrINS_13SegmentReaderEEbNS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorERK7SkISizeNS6_15AnimationOptionE(%"class.blink::ImageDecoderCore"*, %"class.WTF::StringImpl"*, %"class.blink::SegmentReader"*, i1 zeroext, i32, %"class.blink::ColorBehavior"* nocapture readonly dereferenceable(4), %struct.SkISize* nocapture readonly dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %9 = alloca %"class.WTF::String", align 8
  %10 = ptrtoint %"class.blink::SegmentReader"* %2 to i64
  %11 = zext i1 %3 to i8
  %12 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #10
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #10
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %8, %14, %29
  %32 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 1
  store i32 %4, i32* %32, align 8
  %33 = getelementptr inbounds %"class.blink::ColorBehavior", %"class.blink::ColorBehavior"* %5, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 2, i32 0
  %35 = load i32, i32* %33, align 4
  store i32 %35, i32* %34, align 4
  %36 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 3
  %37 = bitcast %struct.SkISize* %6 to i64*
  %38 = bitcast %struct.SkISize* %36 to i64*
  %39 = load i64, i64* %37, align 4
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 4
  store i32 %7, i32* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 5
  store i8 %11, i8* %41, align 4
  %42 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 6
  %43 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %42, i64 0, i32 0
  store %"class.WTF::SharedBuffer"* null, %"class.WTF::SharedBuffer"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 7
  %45 = bitcast %class.scoped_refptr.7* %44 to i64*
  store i64 %10, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 8
  %47 = bitcast %"class.std::__1::unique_ptr.13"* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 9
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 10
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 11, i32 0
  %51 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %44, i64 0, i32 0
  %52 = icmp eq %"class.blink::SegmentReader"* %2, null
  %53 = bitcast %"class.media::VideoFrame"** %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 28, i1 false)
  br i1 %52, label %54, label %92

54:                                               ; preds = %31
  %55 = tail call noalias i8* @malloc(i64 48) #10
  %56 = bitcast i8* %55 to %"class.WTF::SharedBuffer"*
  tail call void @_ZN3WTF12SharedBufferC1Ev(%"class.WTF::SharedBuffer"* %56) #10
  %57 = ptrtoint i8* %55 to i64
  %58 = bitcast %class.scoped_refptr.1* %42 to i64*
  %59 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %43, align 8
  store i64 %57, i64* %58, align 8
  %60 = icmp eq %"class.WTF::SharedBuffer"* %59, null
  br i1 %60, label %70, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %59, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %62) #10
  %63 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %59) #10
  %67 = bitcast %"class.WTF::SharedBuffer"* %59 to i8*
  tail call void @free(i8* %67) #10
  br label %68

68:                                               ; preds = %66, %61
  %69 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %43, align 8
  br label %70

70:                                               ; preds = %68, %54
  %71 = phi %"class.WTF::SharedBuffer"* [ %69, %68 ], [ %56, %54 ]
  %72 = icmp eq %"class.WTF::SharedBuffer"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %74) #10
  br label %75

75:                                               ; preds = %70, %73
  %76 = tail call %"class.blink::SegmentReader"* @_ZN5blink13SegmentReader22CreateFromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEE(%"class.WTF::SharedBuffer"* %71) #10
  %77 = ptrtoint %"class.blink::SegmentReader"* %76 to i64
  %78 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %51, align 8
  store i64 %77, i64* %45, align 8
  %79 = icmp eq %"class.blink::SegmentReader"* %78, null
  br i1 %79, label %92, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw sub i32* %82, i32 1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %92

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %81, i64 -2
  %87 = bitcast %"class.base::RefCountedThreadSafe"* %86 to %"class.blink::SegmentReader"*
  %88 = bitcast %"class.base::RefCountedThreadSafe"* %86 to void (%"class.blink::SegmentReader"*)***
  %89 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %89, i64 1
  %91 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %90, align 8
  tail call void %91(%"class.blink::SegmentReader"* nonnull %87) #10
  br label %92

92:                                               ; preds = %31, %85, %80, %75
  %93 = load i32, i32* %40, align 8
  tail call void @_ZN5blink16ImageDecoderCore12ReinitializeENS_12ImageDecoder15AnimationOptionE(%"class.blink::ImageDecoderCore"* %0, i32 %93)
  %94 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #10
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %46, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %95, align 8
  %97 = bitcast %"class.blink::ImageDecoder"* %96 to %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)***
  %98 = load %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)**, %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)*** %97, align 8
  %99 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)*, %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)** %98, i64 2
  %100 = load %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)*, %"class.WTF::StringImpl"* (%"class.blink::ImageDecoder"*)** %99, align 8
  %101 = tail call %"class.WTF::StringImpl"* %100(%"class.blink::ImageDecoder"* %96) #10
  %102 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %102, align 8
  %103 = call i32 @_ZN5blink18BitmapImageMetrics24StringToDecodedImageTypeERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %9) #10
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 %103, i32 9) #10
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %92
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #10
  br label %119

119:                                              ; preds = %118, %115, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #10
  br i1 %13, label %133, label %120

120:                                              ; preds = %119
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %133

133:                                              ; preds = %119, %129, %132
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.blink::SegmentReader"* @_ZN5blink13SegmentReader22CreateFromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEE(%"class.WTF::SharedBuffer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ImageDecoderCore12ReinitializeENS_12ImageDecoder15AnimationOptionE(%"class.blink::ImageDecoderCore"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %5 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %4, align 8
  store %"class.blink::ImageDecoder"* null, %"class.blink::ImageDecoder"** %4, align 8
  %6 = icmp eq %"class.blink::ImageDecoder"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::ImageDecoder"* %5 to void (%"class.blink::ImageDecoder"*)***
  %9 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %9, i64 1
  %11 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %10, align 8
  tail call void %11(%"class.blink::ImageDecoder"* nonnull %5) #10
  br label %12

12:                                               ; preds = %7, %2
  %13 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 12
  %14 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %13, i64 0, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %14, align 8
  %16 = icmp eq %"struct.WTF::KeyValuePair"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 12, i32 0, i32 1
  %19 = bitcast %"struct.WTF::KeyValuePair"* %15 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #10
  %20 = bitcast %"class.WTF::HashMap"* %13 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store i32 0, i32* %18, align 8
  %21 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 12, i32 0, i32 2
  store i32 0, i32* %21, align 4
  br label %22

22:                                               ; preds = %17, %12
  %23 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 11
  %24 = bitcast %class.scoped_refptr.52* %23 to i64*
  %25 = getelementptr inbounds %class.scoped_refptr.52, %class.scoped_refptr.52* %23, i64 0, i32 0
  %26 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %25, align 8
  store i64 0, i64* %24, align 8
  %27 = icmp eq %"class.media::VideoFrame"* %26, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %26, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.55", %"class.base::RefCountedThreadSafe.55"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.55", %"class.base::RefCountedThreadSafe.55"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.55"* %34 to %"class.media::VideoFrame"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.55"* %34 to void (%"class.media::VideoFrame"*)***
  %37 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %37, i64 1
  %39 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %38, align 8
  tail call void %39(%"class.media::VideoFrame"* nonnull %35) #10
  br label %40

40:                                               ; preds = %22, %28, %33
  %41 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 9
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 10
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 4
  store i32 %1, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #10
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #10
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %40, %47, %62
  %65 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 7, i32 0
  %66 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %65, align 8
  %67 = icmp eq %"class.blink::SegmentReader"* %66, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %66, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 1 monotonic
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %68
  %73 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0)) #10
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #10
  br label %75

75:                                               ; preds = %64, %68, %72
  %76 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 5
  %77 = load i8, i8* %76, align 4, !range !3
  %78 = icmp ne i8 %77, 0
  %79 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 2
  %82 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 3
  %83 = load i32, i32* %43, align 8
  %84 = call %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder16CreateByMimeTypeEN3WTF6StringE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.WTF::StringImpl"* %45, %"class.blink::SegmentReader"* %66, i1 zeroext %78, i32 %80, i32 0, %"class.blink::ColorBehavior"* dereferenceable(4) %81, %struct.SkISize* dereferenceable(8) %82, i32 %83) #10
  %85 = ptrtoint %"class.blink::ImageDecoder"* %84 to i64
  %86 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %87, align 8
  %89 = bitcast %"class.std::__1::unique_ptr.13"* %86 to i64*
  store i64 %85, i64* %89, align 8
  %90 = icmp eq %"class.blink::ImageDecoder"* %88, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %75
  %92 = bitcast %"class.blink::ImageDecoder"* %88 to void (%"class.blink::ImageDecoder"*)***
  %93 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %93, i64 1
  %95 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %94, align 8
  call void %95(%"class.blink::ImageDecoder"* nonnull %88) #10
  br label %96

96:                                               ; preds = %91, %75
  ret void
}

declare i32 @_ZN5blink18BitmapImageMetrics24StringToDecodedImageTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ImageDecoderCoreD2Ev(%"class.blink::ImageDecoderCore"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair"* %3, null
  br i1 %4, label %7, label %5, !prof !4

5:                                                ; preds = %1
  %6 = bitcast %"struct.WTF::KeyValuePair"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 11, i32 0
  %9 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %8, align 8
  %10 = icmp eq %"class.media::VideoFrame"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %9, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.55", %"class.base::RefCountedThreadSafe.55"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.55", %"class.base::RefCountedThreadSafe.55"* %12, i64 -2
  %18 = bitcast %"class.base::RefCountedThreadSafe.55"* %17 to %"class.media::VideoFrame"*
  %19 = bitcast %"class.base::RefCountedThreadSafe.55"* %17 to void (%"class.media::VideoFrame"*)***
  %20 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %20, i64 1
  %22 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %21, align 8
  tail call void %22(%"class.media::VideoFrame"* nonnull %18) #10
  br label %23

23:                                               ; preds = %7, %11, %16
  %24 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %25 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %24, align 8
  store %"class.blink::ImageDecoder"* null, %"class.blink::ImageDecoder"** %24, align 8
  %26 = icmp eq %"class.blink::ImageDecoder"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::ImageDecoder"* %25 to void (%"class.blink::ImageDecoder"*)***
  %29 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %29, i64 1
  %31 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %30, align 8
  tail call void %31(%"class.blink::ImageDecoder"* nonnull %25) #10
  br label %32

32:                                               ; preds = %23, %27
  %33 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 7, i32 0
  %34 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %33, align 8
  %35 = icmp eq %"class.blink::SegmentReader"* %34, null
  br i1 %35, label %48, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %34, i64 0, i32 1, i32 0
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw sub i32* %38, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %37, i64 -2
  %43 = bitcast %"class.base::RefCountedThreadSafe"* %42 to %"class.blink::SegmentReader"*
  %44 = bitcast %"class.base::RefCountedThreadSafe"* %42 to void (%"class.blink::SegmentReader"*)***
  %45 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %45, i64 1
  %47 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %46, align 8
  tail call void %47(%"class.blink::SegmentReader"* nonnull %43) #10
  br label %48

48:                                               ; preds = %32, %36, %41
  %49 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 6, i32 0
  %50 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %49, align 8
  %51 = icmp eq %"class.WTF::SharedBuffer"* %50, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %50, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %53) #10
  %54 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %50) #10
  %58 = bitcast %"class.WTF::SharedBuffer"* %50 to i8*
  tail call void @free(i8* %58) #10
  br label %59

59:                                               ; preds = %48, %52, %57
  %60 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #10
  br label %76

76:                                               ; preds = %59, %72, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink16ImageDecoderCore14DecodeMetadataEv(%"class.blink::ImageDecoderCore"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 4, !range !3
  %4 = zext i8 %3 to i64
  %5 = shl nuw nsw i64 %4, 40
  %6 = or i64 %5, -6149102341220990976
  %7 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %8 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  %9 = tail call zeroext i1 @_ZN5blink12ImageDecoder15IsSizeAvailableEv(%"class.blink::ImageDecoder"* %8) #10
  %10 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  br i1 %9, label %17, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %10, i64 0, i32 15
  %13 = load i8, i8* %12, align 2, !range !3
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %44

15:                                               ; preds = %11
  %16 = load i8, i8* %2, align 4, !range !3
  br label %44

17:                                               ; preds = %1
  %18 = tail call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* %10) #10
  %19 = icmp ult i64 %18, 4294967296
  br i1 %19, label %21, label %20, !prof !4

20:                                               ; preds = %17
  tail call void @llvm.trap() #10
  unreachable

21:                                               ; preds = %17
  %22 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  %23 = bitcast %"class.blink::ImageDecoder"* %22 to i32 (%"class.blink::ImageDecoder"*)***
  %24 = load i32 (%"class.blink::ImageDecoder"*)**, i32 (%"class.blink::ImageDecoder"*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %24, i64 16
  %26 = load i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %25, align 8
  %27 = tail call i32 %26(%"class.blink::ImageDecoder"* %22) #10
  %28 = zext i32 %27 to i64
  %29 = or i64 %6, %28
  %30 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  %31 = bitcast %"class.blink::ImageDecoder"* %30 to i1 (%"class.blink::ImageDecoder"*)***
  %32 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %32, i64 26
  %34 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::ImageDecoder"* %30) #10
  %36 = zext i1 %35 to i64
  %37 = shl nuw nsw i64 %36, 32
  %38 = or i64 %29, %37
  %39 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %7, align 8
  %40 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %39, i64 0, i32 15
  %41 = load i8, i8* %40, align 2, !range !3
  %42 = shl i64 %18, 32
  %43 = or i64 %42, 2863267840
  br label %44

44:                                               ; preds = %11, %15, %21
  %45 = phi i64 [ %43, %21 ], [ 2863267840, %11 ], [ 2863267840, %15 ]
  %46 = phi i64 [ 256, %21 ], [ 0, %11 ], [ 0, %15 ]
  %47 = phi i64 [ %38, %21 ], [ %6, %11 ], [ %6, %15 ]
  %48 = phi i8 [ %41, %21 ], [ 1, %11 ], [ %16, %15 ]
  %49 = or i64 %46, %45
  %50 = zext i8 %48 to i64
  %51 = or i64 %49, %50
  %52 = insertvalue { i64, i64 } undef, i64 %51, 0
  %53 = insertvalue { i64, i64 } %52, i64 %47, 1
  ret { i64, i64 } %53
}

declare zeroext i1 @_ZN5blink12ImageDecoder15IsSizeAvailableEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #2

declare i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.blink::ImageDecoderCore::ImageDecodeResult"* @_ZN5blink16ImageDecoderCore6DecodeEjb(%"class.blink::ImageDecoderCore"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %class.sk_sp.127, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.gfx::Size"*
  %9 = alloca %class.sk_sp.127, align 8
  %10 = alloca %"class.gfx::Rect", align 4
  store i32 %1, i32* %4, align 4
  %11 = tail call i8* @_Znwm(i64 24) #11
  %12 = bitcast i8* %11 to %"struct.blink::ImageDecoderCore::ImageDecodeResult"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 24, i1 false) #10
  store i8 2, i8* %11, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 1
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds i8, i8* %11, i64 4
  %15 = getelementptr inbounds i8, i8* %11, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 16, i1 false) #10
  %16 = bitcast i8* %14 to i32*
  store i32 %1, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %18 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %18, i64 0, i32 15
  %20 = load i8, i8* %19, align 2, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %3
  store i8 2, i8* %11, align 8
  br label %362

23:                                               ; preds = %3
  %24 = tail call zeroext i1 @_ZN5blink12ImageDecoder15IsSizeAvailableEv(%"class.blink::ImageDecoder"* %18) #10
  br i1 %24, label %26, label %25

25:                                               ; preds = %23
  store i8 1, i8* %11, align 8
  br label %362

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 5
  %28 = load i8, i8* %27, align 4, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = zext i32 %1 to i64
  %32 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %17, align 8
  %33 = tail call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* %32) #10
  %34 = icmp ugt i64 %33, %31
  br i1 %34, label %36, label %35

35:                                               ; preds = %30
  store i8 3, i8* %11, align 8
  br label %362

36:                                               ; preds = %30, %26
  %37 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %17, align 8
  %38 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %37, i64 0, i32 9
  %39 = load i8, i8* %38, align 8, !range !3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %87, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 9
  %43 = load i8, i8* %42, align 8, !range !3
  %44 = icmp eq i8 %43, 0
  %45 = icmp eq i32 %1, 0
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %87

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 10
  %49 = load i8, i8* %48, align 1, !range !3
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %60

51:                                               ; preds = %47
  tail call void @_ZN5blink16ImageDecoderCore16MaybeDecodeToYuvEv(%"class.blink::ImageDecoderCore"* %0)
  %52 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %17, align 8
  %53 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %52, i64 0, i32 15
  %54 = load i8, i8* %53, align 2, !range !3
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %51
  store i8 2, i8* %11, align 8
  br label %362

57:                                               ; preds = %51
  %58 = load i8, i8* %48, align 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %87, label %60

60:                                               ; preds = %47, %57
  store i8 0, i8* %11, align 8
  %61 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 11, i32 0
  %62 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %61, align 8
  %63 = icmp eq %"class.media::VideoFrame"* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %62, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 1 monotonic
  br label %67

67:                                               ; preds = %60, %64
  %68 = getelementptr inbounds i8, i8* %11, i64 16
  %69 = ptrtoint %"class.media::VideoFrame"* %62 to i64
  %70 = bitcast i8* %68 to i64*
  %71 = bitcast i8* %68 to %"class.media::VideoFrame"**
  %72 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %71, align 8
  store i64 %69, i64* %70, align 8
  %73 = icmp eq %"class.media::VideoFrame"* %72, null
  br i1 %73, label %86, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %72, i64 0, i32 1
  %76 = getelementptr inbounds %"class.base::RefCountedThreadSafe.55", %"class.base::RefCountedThreadSafe.55"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw sub i32* %76, i32 1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %86

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.base::RefCountedThreadSafe.55", %"class.base::RefCountedThreadSafe.55"* %75, i64 -2
  %81 = bitcast %"class.base::RefCountedThreadSafe.55"* %80 to %"class.media::VideoFrame"*
  %82 = bitcast %"class.base::RefCountedThreadSafe.55"* %80 to void (%"class.media::VideoFrame"*)***
  %83 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %83, i64 1
  %85 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %84, align 8
  tail call void %85(%"class.media::VideoFrame"* nonnull %81) #10
  br label %86

86:                                               ; preds = %67, %74, %79
  store i8 1, i8* %13, align 1
  br label %362

87:                                               ; preds = %36, %57, %41
  %88 = phi %"class.blink::ImageDecoder"* [ %37, %36 ], [ %52, %57 ], [ %37, %41 ]
  %89 = zext i32 %1 to i64
  %90 = tail call %"class.blink::ImageFrame"* @_ZN5blink12ImageDecoder24DecodeFrameBufferAtIndexEm(%"class.blink::ImageDecoder"* %88, i64 %89) #10
  %91 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %17, align 8
  %92 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %91, i64 0, i32 15
  %93 = load i8, i8* %92, align 2, !range !3
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %96, label %95

95:                                               ; preds = %87
  store i8 2, i8* %11, align 8
  br label %362

96:                                               ; preds = %87
  %97 = icmp eq %"class.blink::ImageFrame"* %90, null
  br i1 %97, label %98, label %99

98:                                               ; preds = %96
  store i8 1, i8* %11, align 8
  br label %362

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %90, i64 0, i32 5
  %101 = load i32, i32* %100, align 8
  %102 = icmp ult i32 %101, 2
  br i1 %102, label %103, label %104

103:                                              ; preds = %99
  store i8 1, i8* %11, align 8
  br label %362

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 9
  store i8 1, i8* %105, align 8
  %106 = load i32, i32* %100, align 8
  %107 = icmp eq i32 %106, 3
  %108 = zext i1 %107 to i8
  %109 = xor i1 %2, true
  %110 = or i1 %107, %109
  br i1 %110, label %112, label %111

111:                                              ; preds = %104
  store i8 1, i8* %11, align 8
  br label %362

112:                                              ; preds = %104
  %113 = bitcast %class.sk_sp.127* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #10
  %114 = getelementptr inbounds %class.sk_sp.127, %class.sk_sp.127* %5, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %114, align 8
  br i1 %107, label %115, label %116

115:                                              ; preds = %112
  call void @_ZN5blink10ImageFrame25FinalizePixelsAndGetImageEv(%class.sk_sp.127* nonnull sret %5, %"class.blink::ImageFrame"* nonnull %90) #10
  br label %118

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %90, i64 0, i32 0
  call void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.127* nonnull sret %5, %class.SkBitmap* dereferenceable(56) %117) #10
  br label %118

118:                                              ; preds = %116, %115
  %119 = load %class.SkImage*, %class.SkImage** %114, align 8
  %120 = icmp eq %class.SkImage* %119, null
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  store i8 2, i8* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #10
  br label %362

122:                                              ; preds = %118
  br i1 %107, label %213, label %123

123:                                              ; preds = %122
  %124 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %124) #10
  %125 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %90, i64 0, i32 0
  %126 = call i32 @_ZNK8SkBitmap15getGenerationIDEv(%class.SkBitmap* %125) #10
  store i32 %126, i32* %6, align 4
  %127 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 12
  %128 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %127, i64 0, i32 0, i32 0
  %129 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %128, align 8
  %130 = icmp eq %"struct.WTF::KeyValuePair"* %129, null
  %131 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 12, i32 0, i32 1
  %132 = load i32, i32* %131, align 8
  br i1 %130, label %189, label %133

133:                                              ; preds = %123
  %134 = add i32 %132, -1
  %135 = zext i32 %134 to i64
  %136 = load i32, i32* %4, align 4
  %137 = shl i32 %136, 15
  %138 = xor i32 %137, -1
  %139 = add i32 %136, %138
  %140 = lshr i32 %139, 10
  %141 = xor i32 %140, %139
  %142 = mul i32 %141, 9
  %143 = lshr i32 %142, 6
  %144 = xor i32 %143, %142
  %145 = shl i32 %144, 11
  %146 = xor i32 %145, -1
  %147 = add i32 %144, %146
  %148 = lshr i32 %147, 16
  %149 = xor i32 %148, %147
  %150 = and i32 %149, %134
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %129, i64 %151
  %153 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %152, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, %136
  br i1 %155, label %184, label %156

156:                                              ; preds = %133
  %157 = xor i32 %149, -1
  %158 = lshr i32 %147, 23
  %159 = add i32 %158, %157
  %160 = shl i32 %159, 12
  %161 = xor i32 %160, %159
  %162 = lshr i32 %161, 7
  %163 = xor i32 %162, %161
  %164 = shl i32 %163, 2
  %165 = xor i32 %164, %163
  %166 = lshr i32 %165, 20
  %167 = xor i32 %166, %165
  %168 = or i32 %167, 1
  %169 = zext i32 %168 to i64
  br label %170

170:                                              ; preds = %175, %156
  %171 = phi i32 [ %154, %156 ], [ %182, %175 ]
  %172 = phi i64 [ %151, %156 ], [ %179, %175 ]
  %173 = phi i64 [ 0, %156 ], [ %177, %175 ]
  %174 = icmp eq i32 %171, -1
  br i1 %174, label %189, label %175

175:                                              ; preds = %170
  %176 = icmp eq i64 %173, 0
  %177 = select i1 %176, i64 %169, i64 %173
  %178 = add i64 %177, %172
  %179 = and i64 %178, %135
  %180 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %129, i64 %179
  %181 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %180, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %182, %136
  br i1 %183, label %184, label %170

184:                                              ; preds = %175, %133
  %185 = phi %"struct.WTF::KeyValuePair"* [ %152, %133 ], [ %180, %175 ]
  %186 = icmp eq %"struct.WTF::KeyValuePair"* %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %184
  %188 = zext i32 %132 to i64
  br label %192

189:                                              ; preds = %170, %184, %123
  %190 = zext i32 %132 to i64
  %191 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %129, i64 %190
  br label %192

192:                                              ; preds = %187, %189
  %193 = phi i64 [ %188, %187 ], [ %190, %189 ]
  %194 = phi %"struct.WTF::KeyValuePair"* [ %185, %187 ], [ %191, %189 ]
  %195 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %129, i64 %193
  %196 = icmp eq %"struct.WTF::KeyValuePair"* %194, %195
  br i1 %196, label %197, label %207

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %127, i64 0, i32 0
  %199 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERjSH_EENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable"* %198, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %6) #10
  %200 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %199, 1
  %201 = and i8 %200, 1
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %203, label %212

203:                                              ; preds = %197
  %204 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %199, 0
  %205 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %204, i64 0, i32 1
  %206 = load i32, i32* %6, align 4
  store i32 %206, i32* %205, align 4
  br label %212

207:                                              ; preds = %192
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %194, i64 0, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %209, %126
  br i1 %210, label %348, label %211

211:                                              ; preds = %207
  store i32 %126, i32* %208, align 4
  br label %212

212:                                              ; preds = %211, %197, %203
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %124) #10
  br label %215

213:                                              ; preds = %122
  %214 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 12
  call void @_ZN3WTF7HashMapIjjNS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEE5eraseERKj(%"class.WTF::HashMap"* %214, i32* nonnull dereferenceable(4) %4)
  br label %215

215:                                              ; preds = %212, %213
  %216 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216) #10
  %217 = bitcast i64* %7 to i32*
  %218 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %8, i64 0, i32 1
  %219 = load %class.SkImage*, %class.SkImage** %114, align 8
  %220 = getelementptr inbounds %class.SkImage, %class.SkImage* %219, i64 0, i32 2, i32 1, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %class.SkImage, %class.SkImage* %219, i64 0, i32 2, i32 1, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp sgt i32 %221, 0
  %225 = select i1 %224, i32 %221, i32 0
  store i32 %225, i32* %217, align 8
  %226 = icmp sgt i32 %223, 0
  %227 = select i1 %226, i32 %223, i32 0
  store i32 %227, i32* %218, align 4
  %228 = getelementptr inbounds %class.sk_sp.127, %class.sk_sp.127* %9, i64 0, i32 0
  %229 = icmp eq %class.SkImage* %219, null
  br i1 %229, label %233, label %230

230:                                              ; preds = %215
  %231 = getelementptr inbounds %class.SkImage, %class.SkImage* %219, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = atomicrmw add i32* %231, i32 1 monotonic
  br label %233

233:                                              ; preds = %215, %230
  store %class.SkImage* %219, %class.SkImage** %228, align 8
  %234 = bitcast %"class.gfx::Rect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %234) #10
  %235 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %235, align 4
  %236 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 1
  store i32 0, i32* %236, align 4
  %237 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 1
  %238 = bitcast %"class.gfx::Size"* %237 to i64*
  %239 = load i64, i64* %7, align 8
  store i64 %239, i64* %238, align 4
  %240 = call %"class.media::VideoFrame"* @_ZN5media17CreateFromSkImageE5sk_spI7SkImageERKN3gfx4RectERKNS3_4SizeEN4base9TimeDeltaEb(%class.sk_sp.127* nonnull %9, %"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.gfx::Size"* nonnull dereferenceable(8) %8, i64 -9223372036854775808, i1 zeroext false) #10
  %241 = ptrtoint %"class.media::VideoFrame"* %240 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %234) #10
  %242 = load %class.SkImage*, %class.SkImage** %228, align 8
  %243 = icmp eq %class.SkImage* %242, null
  br i1 %243, label %254, label %244

244:                                              ; preds = %233
  %245 = getelementptr inbounds %class.SkImage, %class.SkImage* %242, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = atomicrmw add i32* %245, i32 -1 acq_rel
  %247 = icmp eq i32 %246, 1
  br i1 %247, label %248, label %254

248:                                              ; preds = %244
  %249 = bitcast %class.SkImage* %242 to %class.SkRefCntBase*
  %250 = bitcast %class.SkImage* %242 to void (%class.SkRefCntBase*)***
  %251 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %250, align 8
  %252 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %251, i64 2
  %253 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %252, align 8
  call void %253(%class.SkRefCntBase* nonnull %249) #10
  br label %254

254:                                              ; preds = %233, %244, %248
  %255 = icmp eq %"class.media::VideoFrame"* %240, null
  br i1 %255, label %333, label %256

256:                                              ; preds = %254
  %257 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %17, align 8
  %258 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %257, i64 0, i32 6, i32 0
  %259 = load i8, i8* %258, align 4
  %260 = call i64 @_ZN5blink37ImageOrientationToVideoTransformationENS_20ImageOrientationEnumE(i8 signext %259) #10
  %261 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %240, i64 0, i32 19, i32 13, i32 0, i32 0, i32 0, i32 0
  %262 = load i8, i8* %261, align 4, !range !3
  %263 = icmp eq i8 %262, 0
  %264 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %240, i64 0, i32 19, i32 13, i32 0, i32 0, i32 0, i32 2
  br i1 %263, label %268, label %265

265:                                              ; preds = %256
  %266 = bitcast %union.anon.105* %264 to i40*
  %267 = trunc i64 %260 to i40
  store i40 %267, i40* %266, align 4
  br label %270

268:                                              ; preds = %256
  %269 = bitcast %union.anon.105* %264 to i64*
  store i64 %260, i64* %269, align 4
  store i8 1, i8* %261, align 4
  br label %270

270:                                              ; preds = %265, %268
  %271 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %17, align 8
  %272 = call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* %271) #10
  %273 = icmp ugt i64 %272, 1
  br i1 %273, label %282, label %274

274:                                              ; preds = %270
  %275 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %17, align 8
  %276 = bitcast %"class.blink::ImageDecoder"* %275 to i32 (%"class.blink::ImageDecoder"*)***
  %277 = load i32 (%"class.blink::ImageDecoder"*)**, i32 (%"class.blink::ImageDecoder"*)*** %276, align 8
  %278 = getelementptr inbounds i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %277, i64 16
  %279 = load i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %278, align 8
  %280 = call i32 %279(%"class.blink::ImageDecoder"* %275) #10
  %281 = icmp eq i32 %280, -2
  br i1 %281, label %296, label %282

282:                                              ; preds = %274, %270
  %283 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %17, align 8
  %284 = load i32, i32* %4, align 4
  %285 = zext i32 %284 to i64
  %286 = bitcast %"class.blink::ImageDecoder"* %283 to i64 (%"class.blink::ImageDecoder"*, i64)***
  %287 = load i64 (%"class.blink::ImageDecoder"*, i64)**, i64 (%"class.blink::ImageDecoder"*, i64)*** %286, align 8
  %288 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %287, i64 19
  %289 = load i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %288, align 8
  %290 = call i64 %289(%"class.blink::ImageDecoder"* %283, i64 %285) #10
  %291 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %240, i64 0, i32 19, i32 7, i32 0, i32 0, i32 0, i32 0
  %292 = load i8, i8* %291, align 8, !range !3
  %293 = icmp eq i8 %292, 0
  %294 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %240, i64 0, i32 19, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %290, i64* %294, align 8
  br i1 %293, label %295, label %296

295:                                              ; preds = %282
  store i8 1, i8* %291, align 8
  br label %296

296:                                              ; preds = %295, %282, %274
  store i8 0, i8* %11, align 8
  %297 = getelementptr inbounds i8, i8* %11, i64 8
  %298 = bitcast %class.sk_sp.127* %5 to i64*
  %299 = load i64, i64* %298, align 8
  store %class.SkImage* null, %class.SkImage** %114, align 8
  %300 = bitcast i8* %297 to %class.SkImage**
  %301 = load %class.SkImage*, %class.SkImage** %300, align 8
  %302 = bitcast i8* %297 to i64*
  store i64 %299, i64* %302, align 8
  %303 = icmp eq %class.SkImage* %301, null
  br i1 %303, label %314, label %304

304:                                              ; preds = %296
  %305 = getelementptr inbounds %class.SkImage, %class.SkImage* %301, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = atomicrmw add i32* %305, i32 -1 acq_rel
  %307 = icmp eq i32 %306, 1
  br i1 %307, label %308, label %314

308:                                              ; preds = %304
  %309 = bitcast %class.SkImage* %301 to %class.SkRefCntBase*
  %310 = bitcast %class.SkImage* %301 to void (%class.SkRefCntBase*)***
  %311 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %310, align 8
  %312 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %311, i64 2
  %313 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %312, align 8
  call void %313(%class.SkRefCntBase* nonnull %309) #10
  br label %314

314:                                              ; preds = %296, %304, %308
  %315 = getelementptr inbounds i8, i8* %11, i64 16
  %316 = bitcast i8* %315 to i64*
  %317 = bitcast i8* %315 to %"class.media::VideoFrame"**
  %318 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %317, align 8
  store i64 %241, i64* %316, align 8
  %319 = icmp eq %"class.media::VideoFrame"* %318, null
  br i1 %319, label %332, label %320

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %318, i64 0, i32 1
  %322 = getelementptr inbounds %"class.base::RefCountedThreadSafe.55", %"class.base::RefCountedThreadSafe.55"* %321, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = atomicrmw sub i32* %322, i32 1 acq_rel
  %324 = icmp eq i32 %323, 1
  br i1 %324, label %325, label %332

325:                                              ; preds = %320
  %326 = getelementptr inbounds %"class.base::RefCountedThreadSafe.55", %"class.base::RefCountedThreadSafe.55"* %321, i64 -2
  %327 = bitcast %"class.base::RefCountedThreadSafe.55"* %326 to %"class.media::VideoFrame"*
  %328 = bitcast %"class.base::RefCountedThreadSafe.55"* %326 to void (%"class.media::VideoFrame"*)***
  %329 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %328, align 8
  %330 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %329, i64 1
  %331 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %330, align 8
  call void %331(%"class.media::VideoFrame"* nonnull %327) #10
  br label %332

332:                                              ; preds = %325, %320, %314
  store i8 %108, i8* %13, align 1
  br label %334

333:                                              ; preds = %254
  store i8 2, i8* %11, align 8
  br label %334

334:                                              ; preds = %333, %332
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216) #10
  %335 = load %class.SkImage*, %class.SkImage** %114, align 8
  %336 = icmp eq %class.SkImage* %335, null
  br i1 %336, label %347, label %337

337:                                              ; preds = %334
  %338 = getelementptr inbounds %class.SkImage, %class.SkImage* %335, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %339 = atomicrmw add i32* %338, i32 -1 acq_rel
  %340 = icmp eq i32 %339, 1
  br i1 %340, label %341, label %347

341:                                              ; preds = %337
  %342 = bitcast %class.SkImage* %335 to %class.SkRefCntBase*
  %343 = bitcast %class.SkImage* %335 to void (%class.SkRefCntBase*)***
  %344 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %343, align 8
  %345 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %344, i64 2
  %346 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %345, align 8
  call void %346(%class.SkRefCntBase* nonnull %342) #10
  br label %347

347:                                              ; preds = %334, %337, %341
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #10
  br label %362

348:                                              ; preds = %207
  store i8 1, i8* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %124) #10
  %349 = load %class.SkImage*, %class.SkImage** %114, align 8
  %350 = icmp eq %class.SkImage* %349, null
  br i1 %350, label %361, label %351

351:                                              ; preds = %348
  %352 = getelementptr inbounds %class.SkImage, %class.SkImage* %349, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = atomicrmw add i32* %352, i32 -1 acq_rel
  %354 = icmp eq i32 %353, 1
  br i1 %354, label %355, label %361

355:                                              ; preds = %351
  %356 = bitcast %class.SkImage* %349 to %class.SkRefCntBase*
  %357 = bitcast %class.SkImage* %349 to void (%class.SkRefCntBase*)***
  %358 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %357, align 8
  %359 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %358, i64 2
  %360 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %359, align 8
  call void %360(%class.SkRefCntBase* nonnull %356) #10
  br label %361

361:                                              ; preds = %348, %351, %355
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #10
  br label %362

362:                                              ; preds = %361, %121, %347, %111, %98, %103, %95, %25, %56, %86, %35, %22
  ret %"struct.blink::ImageDecoderCore::ImageDecodeResult"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ImageDecoderCore16MaybeDecodeToYuvEv(%"class.blink::ImageDecoderCore"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"class.gfx::Size"*
  %4 = alloca %"class.absl::optional.131", align 8
  %5 = alloca %"class.std::__1::vector.136", align 8
  %6 = alloca %"class.gfx::Rect", align 4
  %7 = alloca [3 x i8*], align 16
  %8 = alloca [3 x i64], align 16
  %9 = alloca %"class.gfx::ColorSpace", align 4
  %10 = alloca %class.sk_sp.17, align 8
  %11 = alloca %"class.gfx::ColorSpace", align 4
  %12 = alloca { [9 x float], [7 x float] }, align 8
  %13 = alloca { [9 x float], [7 x float] }, align 8
  %14 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %14, align 8
  %16 = bitcast %"class.blink::ImageDecoder"* %15 to i32 (%"class.blink::ImageDecoder"*)***
  %17 = load i32 (%"class.blink::ImageDecoder"*)**, i32 (%"class.blink::ImageDecoder"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %17, i64 8
  %19 = load i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %18, align 8
  %20 = tail call i32 %19(%"class.blink::ImageDecoder"* %15) #10
  %21 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %14, align 8
  %22 = bitcast %"class.blink::ImageDecoder"* %21 to i8 (%"class.blink::ImageDecoder"*)***
  %23 = load i8 (%"class.blink::ImageDecoder"*)**, i8 (%"class.blink::ImageDecoder"*)*** %22, align 8
  %24 = getelementptr inbounds i8 (%"class.blink::ImageDecoder"*)*, i8 (%"class.blink::ImageDecoder"*)** %23, i64 12
  %25 = load i8 (%"class.blink::ImageDecoder"*)*, i8 (%"class.blink::ImageDecoder"*)** %24, align 8
  %26 = tail call zeroext i8 %25(%"class.blink::ImageDecoder"* %21) #10
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %286

28:                                               ; preds = %1
  switch i32 %20, label %286 [
    i32 2, label %31
    i32 3, label %29
    i32 5, label %30
  ]

29:                                               ; preds = %28
  br label %31

30:                                               ; preds = %28
  br label %31

31:                                               ; preds = %30, %29, %28
  %32 = phi i32 [ 1, %28 ], [ %20, %29 ], [ %20, %30 ]
  %33 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 11
  %34 = getelementptr inbounds %class.scoped_refptr.52, %class.scoped_refptr.52* %33, i64 0, i32 0
  %35 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %34, align 8
  %36 = icmp eq %"class.media::VideoFrame"* %35, null
  br i1 %36, label %37, label %137

37:                                               ; preds = %31
  %38 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #10
  %39 = bitcast i64* %2 to i32*
  store i32 -1431655766, i32* %39, align 8
  %40 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 1
  store i32 -1431655766, i32* %40, align 4
  %41 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %14, align 8
  %42 = bitcast %"class.blink::ImageDecoder"* %41 to i64 (%"class.blink::ImageDecoder"*, i32)***
  %43 = load i64 (%"class.blink::ImageDecoder"*, i32)**, i64 (%"class.blink::ImageDecoder"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i32)*, i64 (%"class.blink::ImageDecoder"*, i32)** %43, i64 9
  %45 = load i64 (%"class.blink::ImageDecoder"*, i32)*, i64 (%"class.blink::ImageDecoder"*, i32)** %44, align 8
  %46 = tail call i64 %45(%"class.blink::ImageDecoder"* %41, i32 0) #10
  %47 = trunc i64 %46 to i32
  %48 = lshr i64 %46, 32
  %49 = trunc i64 %48 to i32
  %50 = icmp sgt i32 %47, 0
  %51 = icmp sgt i32 %49, 0
  %52 = and i64 %46, -4294967296
  %53 = select i1 %51, i64 %52, i64 0
  %54 = and i64 %46, 4294967295
  %55 = select i1 %50, i64 %54, i64 0
  %56 = or i64 %53, %55
  store i64 %56, i64* %2, align 8
  %57 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %57) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 72, i1 false)
  %58 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %14, align 8
  %59 = bitcast %"class.blink::ImageDecoder"* %58 to i64 (%"class.blink::ImageDecoder"*, i32)***
  %60 = load i64 (%"class.blink::ImageDecoder"*, i32)**, i64 (%"class.blink::ImageDecoder"*, i32)*** %59, align 8
  %61 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i32)*, i64 (%"class.blink::ImageDecoder"*, i32)** %60, i64 10
  %62 = load i64 (%"class.blink::ImageDecoder"*, i32)*, i64 (%"class.blink::ImageDecoder"*, i32)** %61, align 8
  %63 = tail call i64 %62(%"class.blink::ImageDecoder"* %58, i32 0) #10
  %64 = trunc i64 %63 to i32
  %65 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %14, align 8
  %66 = bitcast %"class.blink::ImageDecoder"* %65 to i64 (%"class.blink::ImageDecoder"*, i32)***
  %67 = load i64 (%"class.blink::ImageDecoder"*, i32)**, i64 (%"class.blink::ImageDecoder"*, i32)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i32)*, i64 (%"class.blink::ImageDecoder"*, i32)** %67, i64 10
  %69 = load i64 (%"class.blink::ImageDecoder"*, i32)*, i64 (%"class.blink::ImageDecoder"*, i32)** %68, align 8
  %70 = tail call i64 %69(%"class.blink::ImageDecoder"* %65, i32 1) #10
  %71 = trunc i64 %70 to i32
  %72 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %14, align 8
  %73 = bitcast %"class.blink::ImageDecoder"* %72 to i64 (%"class.blink::ImageDecoder"*, i32)***
  %74 = load i64 (%"class.blink::ImageDecoder"*, i32)**, i64 (%"class.blink::ImageDecoder"*, i32)*** %73, align 8
  %75 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i32)*, i64 (%"class.blink::ImageDecoder"*, i32)** %74, i64 10
  %76 = load i64 (%"class.blink::ImageDecoder"*, i32)*, i64 (%"class.blink::ImageDecoder"*, i32)** %75, align 8
  %77 = tail call i64 %76(%"class.blink::ImageDecoder"* %72, i32 2) #10
  %78 = trunc i64 %77 to i32
  %79 = tail call i8* @_Znwm(i64 12) #11
  %80 = bitcast i8* %79 to i32*
  %81 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %5, i64 0, i32 0, i32 1
  %82 = bitcast %"class.std::__1::vector.136"* %5 to i8**
  store i8* %79, i8** %82, align 8
  %83 = getelementptr inbounds i8, i8* %79, i64 12
  %84 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %85 = bitcast i32** %84 to i8**
  store i8* %83, i8** %85, align 8
  %86 = bitcast i32** %81 to i64*
  store i32 %64, i32* %80, align 4
  %87 = getelementptr inbounds i8, i8* %79, i64 4
  %88 = bitcast i8* %87 to i32*
  store i32 %71, i32* %88, align 4
  %89 = getelementptr inbounds i8, i8* %79, i64 8
  %90 = bitcast i8* %89 to i32*
  store i32 %78, i32* %90, align 4
  %91 = ptrtoint i8* %83 to i64
  store i64 %91, i64* %86, align 8
  call void @_ZN5media16VideoFrameLayout17CreateWithStridesENS_16VideoPixelFormatERKN3gfx4SizeENSt3__16vectorIiNS6_9allocatorIiEEEEmm(%"class.absl::optional.131"* nonnull sret %4, i32 %32, %"class.gfx::Size"* nonnull dereferenceable(8) %3, %"class.std::__1::vector.136"* nonnull %5, i64 32, i64 72057594037927935) #10
  %92 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %5, i64 0, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = icmp eq i32* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %37
  %96 = ptrtoint i32* %93 to i64
  store i64 %96, i64* %86, align 8
  %97 = bitcast i32* %93 to i8*
  call void @_ZdlPv(i8* %97) #11
  br label %98

98:                                               ; preds = %37, %95
  %99 = load i8, i8* %57, align 8, !range !3
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %285, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.absl::optional.131", %"class.absl::optional.131"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %103 = bitcast %"class.gfx::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #10
  %104 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %104, align 4
  %105 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 1
  store i32 0, i32* %105, align 4
  %106 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1
  %107 = bitcast %"class.gfx::Size"* %106 to i64*
  %108 = load i64, i64* %2, align 8
  store i64 %108, i64* %107, align 4
  %109 = call %"class.media::VideoFrame"* @_ZN5media10VideoFrame21CreateFrameWithLayoutERKNS_16VideoFrameLayoutERKN3gfx4RectERKNS4_4SizeEN4base9TimeDeltaEb(%"class.media::VideoFrameLayout"* dereferenceable(64) %102, %"class.gfx::Rect"* nonnull dereferenceable(16) %6, %"class.gfx::Size"* nonnull dereferenceable(8) %3, i64 -9223372036854775808, i1 zeroext false) #10
  %110 = ptrtoint %"class.media::VideoFrame"* %109 to i64
  %111 = bitcast %class.scoped_refptr.52* %33 to i64*
  %112 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %34, align 8
  store i64 %110, i64* %111, align 8
  %113 = icmp eq %"class.media::VideoFrame"* %112, null
  br i1 %113, label %128, label %114

114:                                              ; preds = %101
  %115 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %112, i64 0, i32 1
  %116 = getelementptr inbounds %"class.base::RefCountedThreadSafe.55", %"class.base::RefCountedThreadSafe.55"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw sub i32* %116, i32 1 acq_rel
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %119, label %126

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.base::RefCountedThreadSafe.55", %"class.base::RefCountedThreadSafe.55"* %115, i64 -2
  %121 = bitcast %"class.base::RefCountedThreadSafe.55"* %120 to %"class.media::VideoFrame"*
  %122 = bitcast %"class.base::RefCountedThreadSafe.55"* %120 to void (%"class.media::VideoFrame"*)***
  %123 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %123, i64 1
  %125 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %124, align 8
  call void %125(%"class.media::VideoFrame"* nonnull %121) #10
  br label %126

126:                                              ; preds = %119, %114
  %127 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %34, align 8
  br label %128

128:                                              ; preds = %126, %101
  %129 = phi %"class.media::VideoFrame"* [ %127, %126 ], [ %109, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #10
  %130 = icmp eq %"class.media::VideoFrame"* %129, null
  %131 = load i8, i8* %57, align 8, !range !3
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %134, label %133

133:                                              ; preds = %128
  call void @_ZN5media16VideoFrameLayoutD1Ev(%"class.media::VideoFrameLayout"* %102) #10
  store i8 0, i8* %57, align 8
  br label %134

134:                                              ; preds = %128, %133
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #10
  br i1 %130, label %286, label %135

135:                                              ; preds = %134
  %136 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %34, align 8
  br label %137

137:                                              ; preds = %135, %31
  %138 = phi %"class.media::VideoFrame"* [ %136, %135 ], [ %35, %31 ]
  %139 = bitcast [3 x i8*]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #10
  %140 = getelementptr inbounds [3 x i8*], [3 x i8*]* %7, i64 0, i64 0
  %141 = getelementptr inbounds [3 x i8*], [3 x i8*]* %7, i64 0, i64 2
  %142 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %138, i64 0, i32 7, i64 0
  %143 = bitcast i8** %142 to <2 x i64>*
  %144 = load <2 x i64>, <2 x i64>* %143, align 8
  %145 = bitcast [3 x i8*]* %7 to <2 x i64>*
  store <2 x i64> %144, <2 x i64>* %145, align 16
  %146 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %138, i64 0, i32 7, i64 2
  %147 = bitcast i8** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast i8** %141 to i64*
  store i64 %148, i64* %149, align 16
  %150 = bitcast [3 x i64]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #10
  %151 = getelementptr inbounds [3 x i64], [3 x i64]* %8, i64 0, i64 0
  %152 = getelementptr inbounds [3 x i64], [3 x i64]* %8, i64 0, i64 1
  %153 = getelementptr inbounds [3 x i64], [3 x i64]* %8, i64 0, i64 2
  %154 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %138, i64 0, i32 2, i32 2, i32 0, i32 0
  %155 = bitcast [3 x i64]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %155, i8 -86, i64 24, i1 false)
  %156 = load %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"** %154, align 8
  %157 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %156, i64 0, i32 0
  %158 = load i32, i32* %157, align 8
  %159 = sext i32 %158 to i64
  store i64 %159, i64* %151, align 16
  %160 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %156, i64 1, i32 0
  %161 = load i32, i32* %160, align 8
  %162 = sext i32 %161 to i64
  store i64 %162, i64* %152, align 8
  %163 = getelementptr inbounds %"struct.media::ColorPlaneLayout", %"struct.media::ColorPlaneLayout"* %156, i64 2, i32 0
  %164 = load i32, i32* %163, align 8
  %165 = sext i32 %164 to i64
  store i64 %165, i64* %153, align 16
  %166 = call noalias i8* @malloc(i64 56) #10
  %167 = bitcast i8* %166 to %"class.blink::ImagePlanes"*
  call void @_ZN5blink11ImagePlanesC1EPPvPKm11SkColorType(%"class.blink::ImagePlanes"* %167, i8** nonnull %140, i64* nonnull %151, i32 11) #10
  %168 = ptrtoint i8* %166 to i64
  %169 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %14, align 8
  %170 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %169, i64 0, i32 10
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26"* %170, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.blink::ImagePlanes"*, %"class.blink::ImagePlanes"** %171, align 8
  %173 = bitcast %"class.std::__1::unique_ptr.26"* %170 to i64*
  store i64 %168, i64* %173, align 8
  %174 = icmp eq %"class.blink::ImagePlanes"* %172, null
  br i1 %174, label %177, label %175

175:                                              ; preds = %137
  %176 = bitcast %"class.blink::ImagePlanes"* %172 to i8*
  call void @free(i8* %176) #10
  br label %177

177:                                              ; preds = %137, %175
  %178 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %14, align 8
  %179 = bitcast %"class.blink::ImageDecoder"* %178 to void (%"class.blink::ImageDecoder"*)***
  %180 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %180, i64 25
  %182 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %181, align 8
  call void %182(%"class.blink::ImageDecoder"* %178) #10
  %183 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %14, align 8
  %184 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %183, i64 0, i32 15
  %185 = load i8, i8* %184, align 2, !range !3
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %187, label %284

187:                                              ; preds = %177
  %188 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %183, i64 0, i32 10, i32 0, i32 0, i32 0
  %189 = load %"class.blink::ImagePlanes"*, %"class.blink::ImagePlanes"** %188, align 8
  %190 = icmp eq %"class.blink::ImagePlanes"* %189, null
  br i1 %190, label %284, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.blink::ImagePlanes", %"class.blink::ImagePlanes"* %189, i64 0, i32 3
  %193 = load i8, i8* %192, align 4, !range !3
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %284, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 10
  store i8 1, i8* %196, align 1
  %197 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %197) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %197, i8 0, i64 68, i1 false) #10
  %198 = bitcast %class.sk_sp.17* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #10
  %199 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %10, i64 0, i32 0
  store %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %class.SkColorSpace** %199, align 8
  call void @_ZN5blink12ImageDecoder21ColorSpaceForSkImagesEv(%class.sk_sp.17* nonnull sret %10, %"class.blink::ImageDecoder"* %183) #10
  %200 = load %class.SkColorSpace*, %class.SkColorSpace** %199, align 8
  %201 = icmp eq %class.SkColorSpace* %200, null
  br i1 %201, label %212, label %202

202:                                              ; preds = %195
  %203 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %203) #10
  call void @_ZN3gfx10ColorSpaceC1ERK12SkColorSpace(%"class.gfx::ColorSpace"* nonnull %11, %class.SkColorSpace* nonnull dereferenceable(144) %200) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %197, i8* nonnull align 4 %203, i64 68, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %203) #10
  %204 = load %class.SkColorSpace*, %class.SkColorSpace** %199, align 8
  %205 = icmp eq %class.SkColorSpace* %204, null
  br i1 %205, label %212, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %204, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = atomicrmw add i32* %207, i32 -1 acq_rel
  %209 = icmp eq i32 %208, 1
  br i1 %209, label %210, label %212

210:                                              ; preds = %206
  %211 = bitcast %class.SkColorSpace* %204 to i8*
  call void @_ZdlPv(i8* %211) #11
  br label %212

212:                                              ; preds = %195, %202, %206, %210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #10
  %213 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %14, align 8
  %214 = bitcast %"class.blink::ImageDecoder"* %213 to i32 (%"class.blink::ImageDecoder"*)***
  %215 = load i32 (%"class.blink::ImageDecoder"*)**, i32 (%"class.blink::ImageDecoder"*)*** %214, align 8
  %216 = getelementptr inbounds i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %215, i64 11
  %217 = load i32 (%"class.blink::ImageDecoder"*)*, i32 (%"class.blink::ImageDecoder"*)** %216, align 8
  %218 = call i32 %217(%"class.blink::ImageDecoder"* %213) #10
  %219 = call zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"* nonnull %9) #10
  br i1 %219, label %242, label %220

220:                                              ; preds = %212
  switch i32 %218, label %233 [
    i32 0, label %221
    i32 1, label %227
  ]

221:                                              ; preds = %220
  store i8 1, i8* %197, align 4
  %222 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %9, i64 0, i32 1
  store i8 14, i8* %222, align 1
  %223 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %9, i64 0, i32 2
  store i8 5, i8* %223, align 2
  %224 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %9, i64 0, i32 3
  store i8 2, i8* %224, align 1
  %225 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %9, i64 0, i32 4
  %226 = bitcast [9 x float]* %225 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %226, i8 0, i64 64, i1 false)
  br label %242

227:                                              ; preds = %220
  store i8 4, i8* %197, align 4
  %228 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %9, i64 0, i32 1
  store i8 7, i8* %228, align 1
  %229 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %9, i64 0, i32 2
  store i8 5, i8* %229, align 2
  %230 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %9, i64 0, i32 3
  store i8 1, i8* %230, align 1
  %231 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %9, i64 0, i32 4
  %232 = bitcast [9 x float]* %231 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %232, i8 0, i64 64, i1 false)
  br label %242

233:                                              ; preds = %220
  %234 = or i32 %218, 1
  %235 = icmp eq i32 %234, 3
  br i1 %235, label %236, label %242

236:                                              ; preds = %233
  store i8 1, i8* %197, align 4
  %237 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %9, i64 0, i32 1
  store i8 1, i8* %237, align 1
  %238 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %9, i64 0, i32 2
  store i8 2, i8* %238, align 2
  %239 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %9, i64 0, i32 3
  store i8 1, i8* %239, align 1
  %240 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %9, i64 0, i32 4
  %241 = bitcast [9 x float]* %240 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %241, i8 0, i64 64, i1 false)
  br label %242

242:                                              ; preds = %221, %236, %233, %227, %212
  %243 = call zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"* nonnull %9) #10
  br i1 %243, label %244, label %256

244:                                              ; preds = %242
  %245 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %34, align 8
  %246 = bitcast { [9 x float], [7 x float] }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %246)
  %247 = call zeroext i8 @_ZNK3gfx10ColorSpace12GetPrimaryIDEv(%"class.gfx::ColorSpace"* nonnull %9) #10
  %248 = call zeroext i8 @_ZNK3gfx10ColorSpace13GetTransferIDEv(%"class.gfx::ColorSpace"* nonnull %9) #10
  switch i32 %218, label %255 [
    i32 0, label %271
    i32 1, label %249
    i32 2, label %250
    i32 3, label %251
    i32 4, label %252
    i32 6, label %252
    i32 8, label %252
    i32 5, label %253
    i32 7, label %253
    i32 9, label %253
    i32 10, label %254
  ]

249:                                              ; preds = %244
  br label %271

250:                                              ; preds = %244
  br label %271

251:                                              ; preds = %244
  br label %271

252:                                              ; preds = %244, %244, %244
  br label %271

253:                                              ; preds = %244, %244, %244
  br label %271

254:                                              ; preds = %244
  br label %271

255:                                              ; preds = %244
  unreachable

256:                                              ; preds = %242
  %257 = or i32 %218, 1
  %258 = icmp eq i32 %257, 7
  %259 = icmp eq i32 %257, 9
  %260 = select i1 %259, i8 16, i8 1
  %261 = select i1 %258, i8 15, i8 %260
  %262 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %34, align 8
  %263 = bitcast { [9 x float], [7 x float] }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %263)
  switch i32 %218, label %270 [
    i32 0, label %271
    i32 1, label %264
    i32 2, label %265
    i32 3, label %266
    i32 4, label %267
    i32 6, label %267
    i32 8, label %267
    i32 5, label %268
    i32 7, label %268
    i32 9, label %268
    i32 10, label %269
  ]

264:                                              ; preds = %256
  br label %271

265:                                              ; preds = %256
  br label %271

266:                                              ; preds = %256
  br label %271

267:                                              ; preds = %256, %256, %256
  br label %271

268:                                              ; preds = %256, %256, %256
  br label %271

269:                                              ; preds = %256
  br label %271

270:                                              ; preds = %256
  unreachable

271:                                              ; preds = %269, %268, %267, %266, %265, %264, %256, %254, %253, %252, %251, %250, %249, %244
  %272 = phi i8* [ %246, %244 ], [ %246, %249 ], [ %246, %250 ], [ %246, %251 ], [ %246, %252 ], [ %246, %253 ], [ %246, %254 ], [ %263, %256 ], [ %263, %264 ], [ %263, %265 ], [ %263, %266 ], [ %263, %267 ], [ %263, %268 ], [ %263, %269 ]
  %273 = phi %"class.media::VideoFrame"* [ %245, %244 ], [ %245, %249 ], [ %245, %250 ], [ %245, %251 ], [ %245, %252 ], [ %245, %253 ], [ %245, %254 ], [ %262, %256 ], [ %262, %264 ], [ %262, %265 ], [ %262, %266 ], [ %262, %267 ], [ %262, %268 ], [ %262, %269 ]
  %274 = phi i8 [ %247, %244 ], [ %247, %249 ], [ %247, %250 ], [ %247, %251 ], [ %247, %252 ], [ %247, %253 ], [ 0, %254 ], [ 7, %256 ], [ 7, %264 ], [ 7, %265 ], [ 7, %266 ], [ 7, %267 ], [ 7, %268 ], [ 0, %269 ]
  %275 = phi i8 [ %248, %244 ], [ %248, %249 ], [ %248, %250 ], [ %248, %251 ], [ %248, %252 ], [ %248, %253 ], [ 0, %254 ], [ %261, %256 ], [ %261, %264 ], [ %261, %265 ], [ %261, %266 ], [ %261, %267 ], [ %261, %268 ], [ 0, %269 ]
  %276 = phi i8 [ 5, %244 ], [ 5, %249 ], [ 2, %250 ], [ 2, %251 ], [ 8, %252 ], [ 8, %253 ], [ 0, %254 ], [ 5, %256 ], [ 5, %264 ], [ 2, %265 ], [ 2, %266 ], [ 8, %267 ], [ 8, %268 ], [ 0, %269 ]
  %277 = phi i8 [ 2, %244 ], [ 1, %249 ], [ 2, %250 ], [ 1, %251 ], [ 2, %252 ], [ 1, %253 ], [ 0, %254 ], [ 2, %256 ], [ 1, %264 ], [ 2, %265 ], [ 1, %266 ], [ 2, %267 ], [ 1, %268 ], [ 0, %269 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %272, i8 0, i64 64, i1 false), !alias.scope !5
  %278 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %273, i64 0, i32 21, i32 0
  store i8 %274, i8* %278, align 4
  %279 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %273, i64 0, i32 21, i32 1
  store i8 %275, i8* %279, align 1
  %280 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %273, i64 0, i32 21, i32 2
  store i8 %276, i8* %280, align 2
  %281 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %273, i64 0, i32 21, i32 3
  store i8 %277, i8* %281, align 1
  %282 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %273, i64 0, i32 21, i32 4
  %283 = bitcast [9 x float]* %282 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %283, i8* nonnull align 8 %272, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %272)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %197) #10
  br label %284

284:                                              ; preds = %191, %177, %187, %271
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #10
  br label %286

285:                                              ; preds = %98
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #10
  br label %286

286:                                              ; preds = %134, %28, %1, %285, %284
  ret void
}

declare %"class.blink::ImageFrame"* @_ZN5blink12ImageDecoder24DecodeFrameBufferAtIndexEm(%"class.blink::ImageDecoder"*, i64) local_unnamed_addr #2

declare void @_ZN5blink10ImageFrame25FinalizePixelsAndGetImageEv(%class.sk_sp.127* sret, %"class.blink::ImageFrame"*) local_unnamed_addr #2

declare void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.127* sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

declare i32 @_ZNK8SkBitmap15getGenerationIDEv(%class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashMapIjjNS_7IntHashIjEENS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEE5eraseERKj(%"class.WTF::HashMap"*, i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %64, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %11
  br i1 %30, label %59, label %31

31:                                               ; preds = %8
  %32 = xor i32 %24, -1
  %33 = lshr i32 %22, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %50, %31
  %46 = phi i32 [ %29, %31 ], [ %57, %50 ]
  %47 = phi i64 [ %26, %31 ], [ %54, %50 ]
  %48 = phi i64 [ 0, %31 ], [ %52, %50 ]
  %49 = icmp eq i32 %46, -1
  br i1 %49, label %64, label %50

50:                                               ; preds = %45
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 %44, i64 %48
  %53 = add i64 %52, %47
  %54 = and i64 %53, %10
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %11
  br i1 %58, label %59, label %45

59:                                               ; preds = %50, %8
  %60 = phi %"struct.WTF::KeyValuePair"* [ %27, %8 ], [ %55, %50 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = zext i32 %7 to i64
  br label %67

64:                                               ; preds = %45, %59, %2
  %65 = zext i32 %7 to i64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %65
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi i64 [ %63, %62 ], [ %65, %64 ]
  %69 = phi %"struct.WTF::KeyValuePair"* [ %60, %62 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %68
  %72 = icmp eq %"struct.WTF::KeyValuePair"* %71, %69
  br i1 %72, label %177, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0
  store i32 -2, i32* %74, align 4
  %75 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 1
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  %81 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, -1
  store i32 %83, i32* %81, align 4
  %84 = mul i32 %83, 6
  %85 = load i32, i32* %6, align 8
  %86 = icmp ult i32 %84, %85
  %87 = icmp ugt i32 %85, 8
  %88 = and i1 %86, %87
  br i1 %88, label %89, label %177

89:                                               ; preds = %73
  %90 = lshr i32 %85, 1
  %91 = zext i32 %90 to i64
  %92 = shl nuw nsw i64 %91, 3
  %93 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %92, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjjEEEEPKcv, i64 0, i64 0)) #10
  %94 = bitcast i8* %93 to %"struct.WTF::KeyValuePair"*
  %95 = icmp eq i32 %90, 0
  br i1 %95, label %175, label %96

96:                                               ; preds = %89
  %97 = icmp ult i32 %85, 8
  br i1 %97, label %167, label %98

98:                                               ; preds = %96
  %99 = and i64 %91, 2147483644
  %100 = add nsw i64 %99, -4
  %101 = lshr exact i64 %100, 2
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 7
  %104 = icmp ult i64 %100, 28
  br i1 %104, label %152, label %105

105:                                              ; preds = %98
  %106 = sub nsw i64 %102, %103
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ 0, %105 ], [ %149, %107 ]
  %109 = phi i64 [ %106, %105 ], [ %150, %107 ]
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %108
  %111 = bitcast %"struct.WTF::KeyValuePair"* %110 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %111, align 4
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %110, i64 2
  %113 = bitcast %"struct.WTF::KeyValuePair"* %112 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %113, align 4
  %114 = or i64 %108, 4
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %114
  %116 = bitcast %"struct.WTF::KeyValuePair"* %115 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %116, align 4
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %115, i64 2
  %118 = bitcast %"struct.WTF::KeyValuePair"* %117 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %118, align 4
  %119 = or i64 %108, 8
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %119
  %121 = bitcast %"struct.WTF::KeyValuePair"* %120 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %121, align 4
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %120, i64 2
  %123 = bitcast %"struct.WTF::KeyValuePair"* %122 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %123, align 4
  %124 = or i64 %108, 12
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %124
  %126 = bitcast %"struct.WTF::KeyValuePair"* %125 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %126, align 4
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %125, i64 2
  %128 = bitcast %"struct.WTF::KeyValuePair"* %127 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %128, align 4
  %129 = or i64 %108, 16
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %129
  %131 = bitcast %"struct.WTF::KeyValuePair"* %130 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %131, align 4
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %130, i64 2
  %133 = bitcast %"struct.WTF::KeyValuePair"* %132 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %133, align 4
  %134 = or i64 %108, 20
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %134
  %136 = bitcast %"struct.WTF::KeyValuePair"* %135 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %136, align 4
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %135, i64 2
  %138 = bitcast %"struct.WTF::KeyValuePair"* %137 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %138, align 4
  %139 = or i64 %108, 24
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %139
  %141 = bitcast %"struct.WTF::KeyValuePair"* %140 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %141, align 4
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %140, i64 2
  %143 = bitcast %"struct.WTF::KeyValuePair"* %142 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %143, align 4
  %144 = or i64 %108, 28
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %144
  %146 = bitcast %"struct.WTF::KeyValuePair"* %145 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %146, align 4
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %145, i64 2
  %148 = bitcast %"struct.WTF::KeyValuePair"* %147 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %148, align 4
  %149 = add i64 %108, 32
  %150 = add i64 %109, -8
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %107, !llvm.loop !10

152:                                              ; preds = %107, %98
  %153 = phi i64 [ 0, %98 ], [ %149, %107 ]
  %154 = icmp eq i64 %103, 0
  br i1 %154, label %165, label %155

155:                                              ; preds = %152, %155
  %156 = phi i64 [ %162, %155 ], [ %153, %152 ]
  %157 = phi i64 [ %163, %155 ], [ %103, %152 ]
  %158 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %156
  %159 = bitcast %"struct.WTF::KeyValuePair"* %158 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %159, align 4
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %158, i64 2
  %161 = bitcast %"struct.WTF::KeyValuePair"* %160 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %161, align 4
  %162 = add i64 %156, 4
  %163 = add i64 %157, -1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %155, !llvm.loop !12

165:                                              ; preds = %155, %152
  %166 = icmp eq i64 %99, %91
  br i1 %166, label %175, label %167

167:                                              ; preds = %165, %96
  %168 = phi i64 [ 0, %96 ], [ %99, %165 ]
  br label %169

169:                                              ; preds = %167, %169
  %170 = phi i64 [ %173, %169 ], [ %168, %167 ]
  %171 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %170
  %172 = bitcast %"struct.WTF::KeyValuePair"* %171 to i64*
  store i64 4294967295, i64* %172, align 4
  %173 = add nuw nsw i64 %170, 1
  %174 = icmp eq i64 %173, %91
  br i1 %174, label %175, label %169, !llvm.loop !14

175:                                              ; preds = %169, %165, %89
  %176 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_(%"class.WTF::HashTable"* %70, %"struct.WTF::KeyValuePair"* %94, i32 %90, %"struct.WTF::KeyValuePair"* null) #10
  br label %177

177:                                              ; preds = %67, %73, %175
  ret void
}

declare %"class.media::VideoFrame"* @_ZN5media17CreateFromSkImageE5sk_spI7SkImageERKN3gfx4RectERKNS3_4SizeEN4base9TimeDeltaEb(%class.sk_sp.127*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), i64, i1 zeroext) local_unnamed_addr #2

declare i64 @_ZN5blink37ImageOrientationToVideoTransformationENS_20ImageOrientationEnumE(i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ImageDecoderCore10AppendDataEmNSt3__110unique_ptrIA_hNS1_14default_deleteIS3_EEEEb(%"class.blink::ImageDecoderCore"* nocapture, i64, i8*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 5
  store i8 %5, i8* %6, align 4
  %7 = icmp eq i8* %2, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp ult i64 %1, 4294967296
  br i1 %9, label %11, label %10, !prof !4

10:                                               ; preds = %8
  tail call void @llvm.trap() #10
  unreachable

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 6, i32 0
  %13 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %12, align 8
  %14 = and i64 %1, 4294967295
  tail call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %13, i8* nonnull %2, i64 %14) #10
  br label %15

15:                                               ; preds = %4, %11
  %16 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %17 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %16, align 8
  %18 = icmp eq %"class.blink::ImageDecoder"* %17, null
  br i1 %18, label %71, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 6, i32 0
  %21 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %20, align 8
  %22 = icmp eq %"class.WTF::SharedBuffer"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %21, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %24) #10
  br label %25

25:                                               ; preds = %19, %23
  %26 = load i8, i8* %6, align 4, !range !3
  %27 = tail call %"class.blink::SegmentReader"* @_ZN5blink13SegmentReader22CreateFromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEE(%"class.WTF::SharedBuffer"* %21) #10
  %28 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %17, i64 0, i32 15
  %29 = load i8, i8* %28, align 2, !range !3
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %57

31:                                               ; preds = %25
  %32 = ptrtoint %"class.blink::SegmentReader"* %27 to i64
  %33 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %17, i64 0, i32 1
  %34 = bitcast %class.scoped_refptr.7* %33 to i64*
  %35 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %33, i64 0, i32 0
  %36 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %35, align 8
  store i64 %32, i64* %34, align 8
  %37 = icmp eq %"class.blink::SegmentReader"* %36, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %36, i64 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %39, i64 -2
  %45 = bitcast %"class.base::RefCountedThreadSafe"* %44 to %"class.blink::SegmentReader"*
  %46 = bitcast %"class.base::RefCountedThreadSafe"* %44 to void (%"class.blink::SegmentReader"*)***
  %47 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %47, i64 1
  %49 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %48, align 8
  tail call void %49(%"class.blink::SegmentReader"* nonnull %45) #10
  br label %50

50:                                               ; preds = %43, %38, %31
  %51 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %17, i64 0, i32 14
  store i8 %26, i8* %51, align 1
  %52 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %35, align 8
  %53 = bitcast %"class.blink::ImageDecoder"* %17 to void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)***
  %54 = load void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)**, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)** %54, i64 4
  %56 = load void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)*, void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)** %55, align 8
  tail call void %56(%"class.blink::ImageDecoder"* nonnull %17, %"class.blink::SegmentReader"* %52) #10
  br label %71

57:                                               ; preds = %25
  %58 = icmp eq %"class.blink::SegmentReader"* %27, null
  br i1 %58, label %71, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %27, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw sub i32* %61, i32 1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %71

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %60, i64 -2
  %66 = bitcast %"class.base::RefCountedThreadSafe"* %65 to %"class.blink::SegmentReader"*
  %67 = bitcast %"class.base::RefCountedThreadSafe"* %65 to void (%"class.blink::SegmentReader"*)***
  %68 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %68, i64 1
  %70 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %69, align 8
  tail call void %70(%"class.blink::SegmentReader"* nonnull %66) #10
  br label %71

71:                                               ; preds = %15, %64, %59, %57, %50
  br i1 %7, label %73, label %72

72:                                               ; preds = %71
  tail call void @_ZdaPv(i8* nonnull %2) #11
  br label %73

73:                                               ; preds = %71, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ImageDecoderCore5ClearEv(%"class.blink::ImageDecoderCore"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.blink::ImageDecoder"*, %"class.blink::ImageDecoder"** %2, align 8
  store %"class.blink::ImageDecoder"* null, %"class.blink::ImageDecoder"** %2, align 8
  %4 = icmp eq %"class.blink::ImageDecoder"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ImageDecoder"* %3 to void (%"class.blink::ImageDecoder"*)***
  %7 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %7, i64 1
  %9 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %8, align 8
  tail call void %9(%"class.blink::ImageDecoder"* nonnull %3) #10
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 12
  %12 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %11, i64 0, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %12, align 8
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 12, i32 0, i32 1
  %17 = bitcast %"struct.WTF::KeyValuePair"* %13 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #10
  %18 = bitcast %"class.WTF::HashMap"* %11 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  store i32 0, i32* %16, align 8
  %19 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 12, i32 0, i32 2
  store i32 0, i32* %19, align 4
  br label %20

20:                                               ; preds = %10, %15
  %21 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 11
  %22 = bitcast %class.scoped_refptr.52* %21 to i64*
  %23 = getelementptr inbounds %class.scoped_refptr.52, %class.scoped_refptr.52* %21, i64 0, i32 0
  %24 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %23, align 8
  store i64 0, i64* %22, align 8
  %25 = icmp eq %"class.media::VideoFrame"* %24, null
  br i1 %25, label %38, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %24, i64 0, i32 1
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.55", %"class.base::RefCountedThreadSafe.55"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %38

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe.55", %"class.base::RefCountedThreadSafe.55"* %27, i64 -2
  %33 = bitcast %"class.base::RefCountedThreadSafe.55"* %32 to %"class.media::VideoFrame"*
  %34 = bitcast %"class.base::RefCountedThreadSafe.55"* %32 to void (%"class.media::VideoFrame"*)***
  %35 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %35, i64 1
  %37 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %36, align 8
  tail call void %37(%"class.media::VideoFrame"* nonnull %33) #10
  br label %38

38:                                               ; preds = %20, %26, %31
  %39 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 9
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ImageDecoderCore", %"class.blink::ImageDecoderCore"* %0, i64 0, i32 10
  store i8 0, i8* %40, align 1
  ret void
}

declare %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder16CreateByMimeTypeEN3WTF6StringE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.WTF::StringImpl"*, %"class.blink::SegmentReader"*, i1 zeroext, i32, i32, %"class.blink::ColorBehavior"* dereferenceable(4), %struct.SkISize* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5media16VideoFrameLayout17CreateWithStridesENS_16VideoPixelFormatERKN3gfx4SizeENSt3__16vectorIiNS6_9allocatorIiEEEEmm(%"class.absl::optional.131"* sret, i32, %"class.gfx::Size"* dereferenceable(8), %"class.std::__1::vector.136"*, i64, i64) local_unnamed_addr #2

declare %"class.media::VideoFrame"* @_ZN5media10VideoFrame21CreateFrameWithLayoutERKNS_16VideoFrameLayoutERKN3gfx4RectERKNS4_4SizeEN4base9TimeDeltaEb(%"class.media::VideoFrameLayout"* dereferenceable(64), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), i64, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink12ImageDecoder21ColorSpaceForSkImagesEv(%class.sk_sp.17* sret, %"class.blink::ImageDecoder"*) local_unnamed_addr #2

declare void @_ZN3gfx10ColorSpaceC1ERK12SkColorSpace(%"class.gfx::ColorSpace"*, %class.SkColorSpace* dereferenceable(144)) unnamed_addr #2

declare zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"*) local_unnamed_addr #2

declare zeroext i8 @_ZNK3gfx10ColorSpace12GetPrimaryIDEv(%"class.gfx::ColorSpace"*) local_unnamed_addr #2

declare zeroext i8 @_ZNK3gfx10ColorSpace13GetTransferIDEv(%"class.gfx::ColorSpace"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN3WTF12SharedBufferC1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5media16VideoFrameLayoutD1Ev(%"class.media::VideoFrameLayout"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #7

declare void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERjSH_EENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %96, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -2
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i64*
  store i64 4294967295, i64* %71, align 4
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %84 = load i32, i32* %2, align 4
  store i32 %84, i32* %83, align 4
  %85 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, %87
  %91 = shl i32 %90, 1
  %92 = load i32, i32* %12, align 8
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %79
  %95 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %96

96:                                               ; preds = %50, %79, %94
  %97 = phi i8 [ 1, %79 ], [ 1, %94 ], [ 0, %50 ]
  %98 = phi %"struct.WTF::KeyValuePair"* [ %81, %79 ], [ %95, %94 ], [ %52, %50 ]
  %99 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %98, 0
  %100 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %99, i8 %97, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjjEEEEPKcv, i64 0, i64 0)) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %117, label %38

38:                                               ; preds = %31
  %39 = icmp ult i32 %32, 4
  br i1 %39, label %109, label %40

40:                                               ; preds = %38
  %41 = and i64 %33, 4294967292
  %42 = add nsw i64 %41, -4
  %43 = lshr exact i64 %42, 2
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 7
  %46 = icmp ult i64 %42, 28
  br i1 %46, label %94, label %47

47:                                               ; preds = %40
  %48 = sub nsw i64 %44, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 0, %47 ], [ %91, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %92, %49 ]
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50
  %53 = bitcast %"struct.WTF::KeyValuePair"* %52 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %53, align 4
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 2
  %55 = bitcast %"struct.WTF::KeyValuePair"* %54 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %55, align 4
  %56 = or i64 %50, 4
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %56
  %58 = bitcast %"struct.WTF::KeyValuePair"* %57 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %58, align 4
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 2
  %60 = bitcast %"struct.WTF::KeyValuePair"* %59 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %60, align 4
  %61 = or i64 %50, 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair"* %62 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %63, align 4
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 2
  %65 = bitcast %"struct.WTF::KeyValuePair"* %64 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %65, align 4
  %66 = or i64 %50, 12
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %66
  %68 = bitcast %"struct.WTF::KeyValuePair"* %67 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %68, align 4
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 2
  %70 = bitcast %"struct.WTF::KeyValuePair"* %69 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %70, align 4
  %71 = or i64 %50, 16
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %71
  %73 = bitcast %"struct.WTF::KeyValuePair"* %72 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %73, align 4
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 2
  %75 = bitcast %"struct.WTF::KeyValuePair"* %74 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %75, align 4
  %76 = or i64 %50, 20
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %76
  %78 = bitcast %"struct.WTF::KeyValuePair"* %77 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %78, align 4
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 2
  %80 = bitcast %"struct.WTF::KeyValuePair"* %79 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %80, align 4
  %81 = or i64 %50, 24
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %81
  %83 = bitcast %"struct.WTF::KeyValuePair"* %82 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %83, align 4
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 2
  %85 = bitcast %"struct.WTF::KeyValuePair"* %84 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %85, align 4
  %86 = or i64 %50, 28
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %86
  %88 = bitcast %"struct.WTF::KeyValuePair"* %87 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %88, align 4
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 2
  %90 = bitcast %"struct.WTF::KeyValuePair"* %89 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %90, align 4
  %91 = add i64 %50, 32
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %49, !llvm.loop !16

94:                                               ; preds = %49, %40
  %95 = phi i64 [ 0, %40 ], [ %91, %49 ]
  %96 = icmp eq i64 %45, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %104, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %105, %97 ], [ %45, %94 ]
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %98
  %101 = bitcast %"struct.WTF::KeyValuePair"* %100 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %101, align 4
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 2
  %103 = bitcast %"struct.WTF::KeyValuePair"* %102 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 4294967295>, <2 x i64>* %103, align 4
  %104 = add i64 %98, 4
  %105 = add i64 %99, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %97, !llvm.loop !17

107:                                              ; preds = %97, %94
  %108 = icmp eq i64 %41, %33
  br i1 %108, label %117, label %109

109:                                              ; preds = %107, %38
  %110 = phi i64 [ 0, %38 ], [ %41, %107 ]
  br label %111

111:                                              ; preds = %109, %111
  %112 = phi i64 [ %115, %111 ], [ %110, %109 ]
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %112
  %114 = bitcast %"struct.WTF::KeyValuePair"* %113 to i64*
  store i64 4294967295, i64* %114, align 4
  %115 = add nuw nsw i64 %112, 1
  %116 = icmp eq i64 %115, %33
  br i1 %116, label %117, label %111, !llvm.loop !18

117:                                              ; preds = %111, %107, %31
  %118 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #10
  ret %"struct.WTF::KeyValuePair"* %118
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjjEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %31

18:                                               ; preds = %117
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %118, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %121, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #10
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair"* %23

31:                                               ; preds = %13, %117
  %32 = phi i64 [ %17, %13 ], [ %118, %117 ]
  %33 = phi i32 [ %7, %13 ], [ %119, %117 ]
  %34 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %120, %117 ]
  %35 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %121, %117 ]
  %36 = phi i32 [ 0, %13 ], [ %122, %117 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp ugt i32 %40, -3
  br i1 %41, label %117, label %42

42:                                               ; preds = %31
  %43 = shl i32 %40, 15
  %44 = xor i32 %43, -1
  %45 = add i32 %40, %44
  %46 = lshr i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, 9
  %49 = lshr i32 %48, 6
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 11
  %52 = xor i32 %51, -1
  %53 = add i32 %50, %52
  %54 = lshr i32 %53, 16
  %55 = xor i32 %54, %53
  %56 = and i32 %55, %14
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %57
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %58 to i64
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %80, label %63

63:                                               ; preds = %42
  %64 = xor i32 %55, -1
  %65 = lshr i32 %53, 23
  %66 = add i32 %65, %64
  %67 = shl i32 %66, 12
  %68 = xor i32 %67, %66
  %69 = lshr i32 %68, 7
  %70 = xor i32 %69, %68
  %71 = shl i32 %70, 2
  %72 = xor i32 %71, %70
  %73 = lshr i32 %72, 20
  %74 = xor i32 %73, %72
  %75 = or i32 %74, 1
  %76 = zext i32 %75 to i64
  br label %86

77:                                               ; preds = %93
  %78 = ptrtoint %"struct.WTF::KeyValuePair"* %100 to i64
  %79 = inttoptr i64 %95 to %"struct.WTF::KeyValuePair"*
  br label %80

80:                                               ; preds = %77, %42
  %81 = phi i64 [ %78, %77 ], [ %59, %42 ]
  %82 = phi %"struct.WTF::KeyValuePair"* [ %79, %77 ], [ null, %42 ]
  %83 = icmp eq %"struct.WTF::KeyValuePair"* %82, null
  %84 = ptrtoint %"struct.WTF::KeyValuePair"* %82 to i64
  %85 = select i1 %83, i64 %81, i64 %84
  br label %105

86:                                               ; preds = %93, %63
  %87 = phi i64 [ 0, %63 ], [ %95, %93 ]
  %88 = phi i32 [ %61, %63 ], [ %103, %93 ]
  %89 = phi i64 [ %59, %63 ], [ %101, %93 ]
  %90 = phi i64 [ %57, %63 ], [ %99, %93 ]
  %91 = phi i64 [ 0, %63 ], [ %97, %93 ]
  %92 = icmp eq i32 %88, %40
  br i1 %92, label %105, label %93

93:                                               ; preds = %86
  %94 = icmp eq i32 %88, -2
  %95 = select i1 %94, i64 %89, i64 %87
  %96 = icmp eq i64 %91, 0
  %97 = select i1 %96, i64 %76, i64 %91
  %98 = add i64 %97, %90
  %99 = and i64 %98, %15
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %99
  %101 = ptrtoint %"struct.WTF::KeyValuePair"* %100 to i64
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, -1
  br i1 %104, label %77, label %86

105:                                              ; preds = %86, %80
  %106 = phi i64 [ %85, %80 ], [ %89, %86 ]
  %107 = inttoptr i64 %106 to %"struct.WTF::KeyValuePair"*
  %108 = bitcast %"struct.WTF::KeyValuePair"* %38 to i64*
  %109 = inttoptr i64 %106 to i64*
  %110 = load i64, i64* %108, align 4
  store i64 %110, i64* %109, align 4
  %111 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %111, i64 %37
  %113 = icmp eq %"struct.WTF::KeyValuePair"* %112, %3
  %114 = select i1 %113, %"struct.WTF::KeyValuePair"* %107, %"struct.WTF::KeyValuePair"* %35
  %115 = load i32, i32* %6, align 8
  %116 = ptrtoint %"struct.WTF::KeyValuePair"* %111 to i64
  br label %117

117:                                              ; preds = %31, %105
  %118 = phi i64 [ %32, %31 ], [ %116, %105 ]
  %119 = phi i32 [ %33, %31 ], [ %115, %105 ]
  %120 = phi %"struct.WTF::KeyValuePair"* [ %34, %31 ], [ %111, %105 ]
  %121 = phi %"struct.WTF::KeyValuePair"* [ %35, %31 ], [ %114, %105 ]
  %122 = add i32 %36, 1
  %123 = icmp eq i32 %122, %119
  br i1 %123, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare void @_ZN5blink11ImagePlanesC1EPPvPKm11SkColorType(%"class.blink::ImagePlanes"*, i8**, i64*, i32) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN5blink12_GLOBAL__N_128YUVColorSpaceToGfxColorSpaceE15SkYUVColorSpaceN3gfx10ColorSpace9PrimaryIDENS3_10TransferIDE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink12_GLOBAL__N_128YUVColorSpaceToGfxColorSpaceE15SkYUVColorSpaceN3gfx10ColorSpace9PrimaryIDENS3_10TransferIDE"}
!8 = distinct !{!8, !9, !"_ZN5blink12_GLOBAL__N_128YUVColorSpaceToGfxColorSpaceE15SkYUVColorSpaceN3gfx10ColorSpace9PrimaryIDENS3_10TransferIDE: argument 0"}
!9 = distinct !{!9, !"_ZN5blink12_GLOBAL__N_128YUVColorSpaceToGfxColorSpaceE15SkYUVColorSpaceN3gfx10ColorSpace9PrimaryIDENS3_10TransferIDE"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !15, !11}
!15 = !{!"llvm.loop.unroll.runtime.disable"}
!16 = distinct !{!16, !11}
!17 = distinct !{!17, !13}
!18 = distinct !{!18, !15, !11}
