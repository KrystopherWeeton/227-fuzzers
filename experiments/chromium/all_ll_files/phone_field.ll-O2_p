; ModuleID = '../../components/autofill/core/browser/form_parsing/phone_field.cc'
source_filename = "../../components/autofill/core/browser/form_parsing/phone_field.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.autofill::PhoneField::Parser" = type { i32, i32, i64 }
%"struct.base::Feature" = type { i8*, i32 }
%"class.autofill::PhoneField" = type { %"class.autofill::FormField", [5 x %"class.autofill::AutofillField"*] }
%"class.autofill::FormField" = type { i32 (...)** }
%"class.autofill::AutofillField" = type <{ i32 (...)**, %"struct.autofill::FormFieldData", %"class.absl::optional.19", %"class.std::__1::basic_string", i32, i8, [3 x i8], %"class.std::__1::vector.26", i8, [7 x i8], %"class.absl::optional.34", i32, %"class.autofill::AutofillType", i32, i32, %"class.autofill::DenseSet", %"class.std::__1::map", i32, %"class.absl::optional.47", [4 x i8], i64, i8, i8, [6 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.autofill::FormFieldData" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", %"class.url::Origin", i32, %"class.std::__1::basic_string.1", i64, i8, i32, i8, i8, i32, i32, i32, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.gfx::RectF", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.autofill::internal::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias.10" }
%"class.base::StrongAlias.10" = type { i32 }
%"class.autofill::FormRendererId" = type { %"class.util::IdType.11" }
%"class.util::IdType.11" = type { %"class.base::StrongAlias.12" }
%"class.base::StrongAlias.12" = type { i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.13 }
%union.anon.13 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.autofill::FieldSignature" }
%"class.autofill::FieldSignature" = type { %"class.util::IdType.24" }
%"class.util::IdType.24" = type { %"class.base::StrongAlias.25" }
%"class.base::StrongAlias.25" = type { i32 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"*, %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"*, %"class.std::__1::__compressed_pair.29" }
%"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", i32, i8, [3 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"* }
%"class.absl::optional.34" = type { %"class.absl::optional_internal::optional_data.35" }
%"class.absl::optional_internal::optional_data.35" = type { %"class.absl::optional_internal::optional_data_base.36" }
%"class.absl::optional_internal::optional_data_base.36" = type { %"class.absl::optional_internal::optional_data_dtor_base.37" }
%"class.absl::optional_internal::optional_data_dtor_base.37" = type { i8, %union.anon.38 }
%union.anon.38 = type { %"class.autofill::PasswordRequirementsSpec" }
%"class.autofill::PasswordRequirementsSpec" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, i32, i32, i32, i32 }
%"class.autofill::PasswordRequirementsSpec_CharacterClass" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", i32, i32 }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string.1"* }
%"class.autofill::AutofillType" = type { i32, i32, i32 }
%"class.autofill::DenseSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [2 x i64] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i64 }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.autofill::AutofillScanner" = type { %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::vector.52" }
%"class.std::__1::__wrap_iter" = type { %"class.autofill::AutofillField"** }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.autofill::AutofillField"**, %"class.autofill::AutofillField"**, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.autofill::AutofillField"** }
%"class.base::BasicStringPiece" = type { i16*, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.autofill::LanguageCode" = type { %"class.base::StrongAlias.63" }
%"class.base::StrongAlias.63" = type { %"class.std::__1::basic_string.1" }
%"class.autofill::LogManager" = type opaque
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"*, %"class.std::__1::__compressed_pair.72" }
%"struct.autofill::MatchingPattern" = type { %"class.autofill::LanguageCode", %"class.std::__1::basic_string", %"class.std::__1::basic_string", float, i8, i16 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.autofill::MatchingPattern"* }
%"struct.autofill::RegExLogging" = type { %"class.autofill::LogManager"*, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"class.autofill::PatternProvider" = type { %"class.std::__1::map.77", %"class.base::Version" }
%"class.std::__1::map.77" = type { %"class.std::__1::__tree.78" }
%"class.std::__1::__tree.78" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.base::Version" = type { %"class.std::__1::vector.88" }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { i32*, i32*, %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { i32* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::flat_map" = type opaque

@_ZN8autofill10PhoneField19kPhoneFieldGrammarsE = hidden local_unnamed_addr constant [64 x %"struct.autofill::PhoneField::Parser"] [%"struct.autofill::PhoneField::Parser" zeroinitializer, %"struct.autofill::PhoneField::Parser" { i32 1, i32 1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 2, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 2, i32 1, i64 3 }, %"struct.autofill::PhoneField::Parser" { i32 4, i32 2, i64 3 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 3, i64 4 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 0, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 1, i64 3 }, %"struct.autofill::PhoneField::Parser" { i32 4, i32 2, i64 3 }, %"struct.autofill::PhoneField::Parser" { i32 6, i32 3, i64 4 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 0, i64 3 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 1, i64 3 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 2, i64 3 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 3, i64 4 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 1, i32 1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 2, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 2, i64 3 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 3, i64 4 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 0, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 2, i32 1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 4, i32 2, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 0, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 2, i32 1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 4, i32 2, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 0, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 4, i32 1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 4, i32 2, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 6, i32 3, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 1, i32 1, i64 3 }, %"struct.autofill::PhoneField::Parser" { i32 5, i32 2, i64 3 }, %"struct.autofill::PhoneField::Parser" { i32 7, i32 3, i64 4 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 5, i32 2, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 7, i32 3, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 4, i32 2, i64 3 }, %"struct.autofill::PhoneField::Parser" { i32 6, i32 3, i64 4 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 0, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 4, i32 1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 6, i32 2, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 1, i32 1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 2, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 0, i64 3 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 2, i64 14 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 8, i32 4, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 3, i32 2, i64 0 }, %"struct.autofill::PhoneField::Parser" { i32 9, i32 -1, i64 0 }], align 16
@_ZN8autofill8features40kAutofillEnableAugmentedPhoneCountryCodeE = external global %"struct.base::Feature", align 8
@_ZN8autofill28kAugmentedPhoneCountryCodeReE = external constant [0 x i16], align 2
@_ZN8autofill14kPhoneSuffixReE = external constant [0 x i16], align 2
@.str = private unnamed_addr constant [15 x i8] c"kPhoneSuffixRe\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"PHONE_SUFFIX\00", align 1
@_ZN8autofill23kPhoneSuffixSeparatorReE = external constant [0 x i16], align 2
@.str.2 = private unnamed_addr constant [24 x i8] c"kPhoneSuffixSeparatorRe\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"PHONE_SUFFIX_SEPARATOR\00", align 1
@_ZN8autofill17kPhoneExtensionReE = external constant [0 x i16], align 2
@.str.4 = private unnamed_addr constant [18 x i8] c"kPhoneExtensionRe\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"PHONE_EXTENSION\00", align 1
@_ZN8autofill9FormField21kBasePhoneParserScoreE = external local_unnamed_addr constant float, align 4
@_ZTVN8autofill10PhoneFieldE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::PhoneField"*)* @_ZN8autofill10PhoneFieldD2Ev to i8*), i8* bitcast (void (%"class.autofill::PhoneField"*)* @_ZN8autofill10PhoneFieldD0Ev to i8*), i8* bitcast (void (%"class.autofill::PhoneField"*, %"class.base::flat_map"*)* @_ZNK8autofill10PhoneField18AddClassificationsEPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENS8_6vectorINS8_4pairIS6_S7_EENS8_9allocatorISD_EEEEEE to i8*)] }, align 8
@_ZN8autofill14kCountryCodeReE = external local_unnamed_addr constant [0 x i16], align 2
@_ZN8autofill17kAreaCodeNotextReE = external constant [0 x i16], align 2
@_ZN8autofill8kPhoneReE = external local_unnamed_addr constant [0 x i16], align 2
@_ZN8autofill23kPhonePrefixSeparatorReE = external local_unnamed_addr constant [0 x i16], align 2
@_ZN8autofill14kPhonePrefixReE = external local_unnamed_addr constant [0 x i16], align 2
@.str.6 = private unnamed_addr constant [15 x i8] c"kCountryCodeRe\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"kAreaCodeRe|kAreaCodeNotextRe\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"kAreaCodeNotextRe\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"kPhoneRe\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"kPhonePrefixSeparatorRe\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"kPhonePrefixRe\00", align 1
@.str.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"PHONE_COUNTRY_CODE\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"PHONE_AREA_CODE\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"PHONE_AREA_CODE_NO_TEXT\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"PHONE\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"PHONE_PREFIX_SEPARATOR\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"PHONE_PREFIX\00", align 1
@_ZN8autofill11kAreaCodeReE = external constant [0 x i16], align 2
@.str.21 = private unnamed_addr constant [2 x i16] [i16 124, i16 0], align 2
@switch.table._ZN8autofill10PhoneField13GetRegExpNameENS0_9RegexTypeE = private unnamed_addr constant [9 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0)], align 8

@_ZN8autofill10PhoneFieldD1Ev = hidden unnamed_addr alias void (%"class.autofill::PhoneField"*), void (%"class.autofill::PhoneField"*)* @_ZN8autofill10PhoneFieldD2Ev
@_ZN8autofill10PhoneFieldC1Ev = hidden unnamed_addr alias void (%"class.autofill::PhoneField"*), void (%"class.autofill::PhoneField"*)* @_ZN8autofill10PhoneFieldC2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8autofill10PhoneFieldD2Ev(%"class.autofill::PhoneField"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill10PhoneFieldD0Ev(%"class.autofill::PhoneField"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.autofill::PhoneField"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8autofill10PhoneField31LikelyAugmentedPhoneCountryCodeEPNS_15AutofillScannerEPPNS_13AutofillFieldE(%"class.autofill::AutofillScanner"*, %"class.autofill::AutofillField"**) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8autofill8features40kAutofillEnableAugmentedPhoneCountryCodeE) #10
  br i1 %5, label %6, label %80

6:                                                ; preds = %2
  %7 = tail call %"class.autofill::AutofillField"* @_ZNK8autofill15AutofillScanner6CursorEv(%"class.autofill::AutofillScanner"* %0) #10
  %8 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %7, i64 0, i32 1, i32 5
  %9 = tail call zeroext i1 @_ZN8autofill9FormField22MatchesFormControlTypeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string.1"* dereferenceable(24) %8, i32 32) #10
  br i1 %9, label %10, label %80

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %7, i64 0, i32 1, i32 29
  %12 = getelementptr inbounds %"class.autofill::AutofillField", %"class.autofill::AutofillField"* %7, i64 0, i32 1, i32 29, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 24
  %19 = add nsw i64 %18, -5
  %20 = icmp ugt i64 %19, 269
  %21 = inttoptr i64 %16 to %"class.std::__1::basic_string"*
  %22 = inttoptr i64 %14 to %"class.std::__1::basic_string"*
  br i1 %20, label %80, label %23

23:                                               ; preds = %10
  %24 = trunc i64 %18 to i32
  %25 = icmp eq %"class.std::__1::basic_string"* %21, %22
  br i1 %25, label %35, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %29 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %30 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  %31 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %32 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %33 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill28kAugmentedPhoneCountryCodeReE, i64 0, i64 0), align 2
  %34 = icmp eq i16 %33, 0
  br label %41

35:                                               ; preds = %63, %23
  %36 = phi i32 [ 0, %23 ], [ %67, %63 ]
  %37 = icmp slt i32 %24, 11
  %38 = add nuw nsw i32 %36, 1
  %39 = icmp slt i32 %38, %24
  %40 = and i1 %37, %39
  br i1 %40, label %80, label %70

41:                                               ; preds = %26, %63
  %42 = phi i32 [ 0, %26 ], [ %67, %63 ]
  %43 = phi %"class.std::__1::basic_string"* [ %21, %26 ], [ %68, %63 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #10
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i16*, i16** %48, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %43 to i16*
  %51 = select i1 %47, i16* %49, i16* %50
  store i16* %51, i16** %28, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = zext i8 %46 to i64
  %55 = select i1 %47, i64 %53, i64 %54
  store i64 %55, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #10
  store i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill28kAugmentedPhoneCountryCodeReE, i64 0, i64 0), i16** %31, align 8
  br i1 %34, label %63, label %56

56:                                               ; preds = %41, %56
  %57 = phi i64 [ %59, %56 ], [ 0, %41 ]
  %58 = phi i16* [ %60, %56 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill28kAugmentedPhoneCountryCodeReE, i64 0, i64 0), %41 ]
  %59 = add i64 %57, 1
  %60 = getelementptr inbounds i16, i16* %58, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %63, label %56

63:                                               ; preds = %56, %41
  %64 = phi i64 [ 0, %41 ], [ %59, %56 ]
  store i64 %64, i64* %32, align 8
  %65 = call zeroext i1 @_ZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEi(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, %"class.std::__1::basic_string"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #10
  %66 = zext i1 %65 to i32
  %67 = add nuw nsw i32 %42, %66
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 1
  %69 = icmp eq %"class.std::__1::basic_string"* %68, %22
  br i1 %69, label %35, label %41

70:                                               ; preds = %35
  %71 = icmp sgt i32 %24, 10
  br i1 %71, label %72, label %76

72:                                               ; preds = %70
  %73 = mul nsw i32 %36, 100
  %74 = mul nsw i32 %24, 90
  %75 = icmp slt i32 %73, %74
  br i1 %75, label %80, label %76

76:                                               ; preds = %72, %70
  %77 = icmp eq %"class.autofill::AutofillField"** %1, null
  br i1 %77, label %79, label %78

78:                                               ; preds = %76
  store %"class.autofill::AutofillField"* %7, %"class.autofill::AutofillField"** %1, align 8
  br label %79

79:                                               ; preds = %76, %78
  call void @_ZN8autofill15AutofillScanner7AdvanceEv(%"class.autofill::AutofillScanner"* %0) #10
  br label %80

80:                                               ; preds = %6, %10, %72, %35, %79, %2
  %81 = phi i1 [ false, %2 ], [ false, %6 ], [ false, %10 ], [ true, %79 ], [ false, %35 ], [ false, %72 ]
  ret i1 %81
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.autofill::AutofillField"* @_ZNK8autofill15AutofillScanner6CursorEv(%"class.autofill::AutofillScanner"*) local_unnamed_addr #3

declare zeroext i1 @_ZN8autofill9FormField22MatchesFormControlTypeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string.1"* dereferenceable(24), i32) local_unnamed_addr #3

declare zeroext i1 @_ZN8autofill14MatchesPatternERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES7_PNS2_12basic_stringIDsS4_NS2_9allocatorIDsEEEEi(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN8autofill15AutofillScanner7AdvanceEv(%"class.autofill::AutofillScanner"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.autofill::FormField"* @_ZN8autofill10PhoneField5ParseEPNS_15AutofillScannerERKNS_12LanguageCodeEPNS_10LogManagerE(%"class.autofill::AutofillScanner"*, %"class.autofill::LanguageCode"* dereferenceable(24), %"class.autofill::LogManager"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::vector.70", align 8
  %5 = alloca %"class.std::__1::vector.70", align 8
  %6 = alloca %"class.std::__1::vector.70", align 8
  %7 = alloca %"class.std::__1::vector.70", align 8
  %8 = alloca [5 x %"class.autofill::AutofillField"*], align 16
  %9 = bitcast [5 x %"class.autofill::AutofillField"*]* %8 to i8*
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"struct.autofill::RegExLogging", align 8
  %12 = alloca %"class.std::__1::basic_string.1", align 8
  %13 = alloca %"struct.autofill::RegExLogging", align 8
  %14 = alloca %"class.std::__1::basic_string.1", align 8
  %15 = alloca %"struct.autofill::RegExLogging", align 8
  %16 = alloca %"class.std::__1::basic_string.1", align 8
  %17 = alloca %"struct.autofill::RegExLogging", align 8
  %18 = alloca %"class.std::__1::basic_string.1", align 8
  %19 = tail call zeroext i1 @_ZNK8autofill15AutofillScanner5IsEndEv(%"class.autofill::AutofillScanner"* %0) #10
  br i1 %19, label %310, label %20

20:                                               ; preds = %3
  %21 = tail call i64 @_ZN8autofill15AutofillScanner10SaveCursorEv(%"class.autofill::AutofillScanner"* %0) #10
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #10
  %22 = getelementptr inbounds [5 x %"class.autofill::AutofillField"*], [5 x %"class.autofill::AutofillField"*]* %8, i64 0, i64 0
  %23 = getelementptr inbounds [5 x %"class.autofill::AutofillField"*], [5 x %"class.autofill::AutofillField"*]* %8, i64 0, i64 2
  %24 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %"struct.autofill::RegExLogging"* %11 to i8*
  %31 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %11, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %11, i64 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string.1"* %12 to i8*
  %34 = bitcast %"class.std::__1::basic_string.1"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds i8, i8* %33, i64 15
  %37 = getelementptr inbounds i8, i8* %33, i64 12
  %38 = getelementptr inbounds i8, i8* %33, i64 22
  %39 = getelementptr inbounds i8, i8* %33, i64 5
  %40 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds i8, i8* %33, i64 18
  %43 = bitcast %"class.std::__1::vector.70"* %6 to i8*
  %44 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %6, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %6, i64 0, i32 0, i32 1
  %46 = bitcast %"class.std::__1::vector.70"* %6 to i8**
  %47 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %48 = bitcast [5 x %"class.autofill::AutofillField"*]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %48, i8 -86, i64 40, i1 false)
  %49 = bitcast i64* %41 to <2 x i64>*
  br label %50

50:                                               ; preds = %152, %20
  %51 = phi i64 [ 0, %20 ], [ %153, %152 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 40, i1 false)
  %52 = call i64 @_ZN8autofill15AutofillScanner10SaveCursorEv(%"class.autofill::AutofillScanner"* %0) #10
  br label %53

53:                                               ; preds = %134, %50
  %54 = phi i1 [ %136, %134 ], [ true, %50 ]
  %55 = phi i64 [ %135, %134 ], [ %51, %50 ]
  %56 = getelementptr inbounds [64 x %"struct.autofill::PhoneField::Parser"], [64 x %"struct.autofill::PhoneField::Parser"]* @_ZN8autofill10PhoneField19kPhoneFieldGrammarsE, i64 0, i64 %55, i32 0
  %57 = lshr i64 -6259403006675906424, %55
  %58 = and i64 %57, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %155

60:                                               ; preds = %53
  %61 = getelementptr inbounds [64 x %"struct.autofill::PhoneField::Parser"], [64 x %"struct.autofill::PhoneField::Parser"]* @_ZN8autofill10PhoneField19kPhoneFieldGrammarsE, i64 0, i64 %55, i32 1
  %62 = lshr i64 145241097143066881, %55
  %63 = and i64 %62, 1
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  %66 = call zeroext i1 @_ZN8autofill10PhoneField31LikelyAugmentedPhoneCountryCodeEPNS_15AutofillScannerEPPNS_13AutofillFieldE(%"class.autofill::AutofillScanner"* %0, %"class.autofill::AutofillField"** nonnull %22)
  br i1 %66, label %134, label %67

67:                                               ; preds = %65, %60
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  %68 = load i32, i32* %56, align 16
  call void @_ZN8autofill10PhoneField9GetRegExpENS0_9RegexTypeE(%"class.std::__1::basic_string"* nonnull sret %10, i32 %68)
  %69 = load i8, i8* %26, align 1
  %70 = icmp slt i8 %69, 0
  %71 = load i16*, i16** %27, align 8
  %72 = select i1 %70, i16* %71, i16* %28
  %73 = load i64, i64* %29, align 8
  %74 = zext i8 %69 to i64
  %75 = select i1 %70, i64 %73, i64 %74
  %76 = load i32, i32* %61, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [5 x %"class.autofill::AutofillField"*], [5 x %"class.autofill::AutofillField"*]* %8, i64 0, i64 %77
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #10
  store %"class.autofill::LogManager"* %2, %"class.autofill::LogManager"** %31, align 8
  switch i32 %68, label %90 [
    i32 0, label %79
    i32 1, label %80
    i32 2, label %81
    i32 3, label %84
    i32 4, label %85
    i32 5, label %86
    i32 6, label %87
    i32 7, label %88
    i32 8, label %89
  ]

79:                                               ; preds = %67
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i8** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  store i8 18, i8* %35, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i64 18, i1 false) #10
  store i8 0, i8* %42, align 2, !alias.scope !2
  br label %91

80:                                               ; preds = %67
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0), i8** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  store i8 15, i8* %35, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i64 15, i1 false) #10
  store i8 0, i8* %36, align 1, !alias.scope !2
  br label %91

81:                                               ; preds = %67
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  %82 = call i8* @_Znwm(i64 32) #9, !noalias !2
  store i8* %82, i8** %40, align 8, !alias.scope !2
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %49, align 8, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %82, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i64 23, i1 false) #10, !noalias !2
  %83 = getelementptr inbounds i8, i8* %82, i64 23
  store i8 0, i8* %83, align 1, !noalias !2
  br label %91

84:                                               ; preds = %67
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i8** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  store i8 5, i8* %35, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i64 5, i1 false) #10
  store i8 0, i8* %39, align 1, !alias.scope !2
  br label %91

85:                                               ; preds = %67
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0), i8** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  store i8 22, i8* %35, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i64 22, i1 false) #10
  store i8 0, i8* %38, align 2, !alias.scope !2
  br label %91

86:                                               ; preds = %67
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i8** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  store i8 12, i8* %35, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i64 12, i1 false) #10
  store i8 0, i8* %37, align 4, !alias.scope !2
  br label %91

87:                                               ; preds = %67
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i8** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  store i8 22, i8* %35, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i64 22, i1 false) #10
  store i8 0, i8* %38, align 2, !alias.scope !2
  br label %91

88:                                               ; preds = %67
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  store i8 12, i8* %35, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i1 false) #10
  store i8 0, i8* %37, align 4, !alias.scope !2
  br label %91

89:                                               ; preds = %67
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  store i8 15, i8* %35, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 15, i1 false) #10
  store i8 0, i8* %36, align 1, !alias.scope !2
  br label %91

90:                                               ; preds = %67
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), i8** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #10, !alias.scope !2
  br label %91

91:                                               ; preds = %79, %80, %81, %84, %85, %86, %87, %88, %89, %90
  %92 = select i1 %64, i32 311, i32 279
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #10
  %93 = call dereferenceable(48) %"class.autofill::PatternProvider"* @_ZN8autofill15PatternProvider11GetInstanceEv() #10
  call void @_ZNK8autofill15PatternProvider16GetMatchPatternsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_12LanguageCodeE(%"class.std::__1::vector.70"* nonnull sret %6, %"class.autofill::PatternProvider"* %93, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %12, %"class.autofill::LanguageCode"* dereferenceable(24) %1) #10
  %94 = call zeroext i1 @_ZN8autofill9FormField19ParseFieldSpecificsEPNS_15AutofillScannerEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEiRKNS5_6vectorINS_15MatchingPatternENS5_9allocatorISA_EEEEPPNS_13AutofillFieldERKNS_12RegExLoggingENS0_18MatchFieldBitmasksE(%"class.autofill::AutofillScanner"* %0, i16* %72, i64 %75, i32 %92, %"class.std::__1::vector.70"* nonnull dereferenceable(24) %6, %"class.autofill::AutofillField"** %78, %"struct.autofill::RegExLogging"* nonnull dereferenceable(16) %11, i64 4294967295) #10
  %95 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %44, align 8
  %96 = icmp eq %"struct.autofill::MatchingPattern"* %95, null
  br i1 %96, label %109, label %97

97:                                               ; preds = %91
  %98 = bitcast %"struct.autofill::MatchingPattern"* %95 to i8*
  %99 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %45, align 8
  %100 = icmp eq %"struct.autofill::MatchingPattern"* %99, %95
  br i1 %100, label %107, label %101

101:                                              ; preds = %97, %101
  %102 = phi %"struct.autofill::MatchingPattern"* [ %103, %101 ], [ %99, %97 ]
  %103 = getelementptr inbounds %"struct.autofill::MatchingPattern", %"struct.autofill::MatchingPattern"* %102, i64 -1
  call void @_ZN8autofill15MatchingPatternD1Ev(%"struct.autofill::MatchingPattern"* %103) #10
  %104 = icmp eq %"struct.autofill::MatchingPattern"* %103, %95
  br i1 %104, label %105, label %101

105:                                              ; preds = %101
  %106 = load i8*, i8** %46, align 8
  br label %107

107:                                              ; preds = %105, %97
  %108 = phi i8* [ %106, %105 ], [ %98, %97 ]
  store %"struct.autofill::MatchingPattern"* %95, %"struct.autofill::MatchingPattern"** %45, align 8
  call void @_ZdlPv(i8* %108) #9
  br label %109

109:                                              ; preds = %91, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #10
  %110 = load i8, i8* %35, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %113) #9
  br label %114

114:                                              ; preds = %109, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10
  %115 = load i8, i8* %26, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %114
  %118 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %118) #9
  br label %119

119:                                              ; preds = %114, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  br i1 %94, label %120, label %138

120:                                              ; preds = %119
  %121 = lshr i64 432769700850691696, %55
  %122 = and i64 %121, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %134, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds [64 x %"struct.autofill::PhoneField::Parser"], [64 x %"struct.autofill::PhoneField::Parser"]* @_ZN8autofill10PhoneField19kPhoneFieldGrammarsE, i64 0, i64 %55, i32 2
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.autofill::AutofillField"** %78 to i8**
  %128 = load i8*, i8** %127, align 8
  %129 = getelementptr inbounds i8, i8* %128, i64 408
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, -1
  %133 = icmp ult i64 %132, %126
  br i1 %133, label %134, label %138

134:                                              ; preds = %124, %65, %120
  %135 = add nuw nsw i64 %55, 1
  %136 = icmp ult i64 %135, 64
  %137 = icmp eq i64 %135, 64
  br i1 %137, label %139, label %53

138:                                              ; preds = %124, %119
  br i1 %54, label %140, label %139

139:                                              ; preds = %138, %134
  call void @_ZN8autofill15AutofillScanner8RewindToEm(%"class.autofill::AutofillScanner"* %0, i64 %52) #10
  br label %308

140:                                              ; preds = %138
  br i1 %59, label %141, label %155

141:                                              ; preds = %140, %146
  %142 = phi i64 [ %143, %146 ], [ %55, %140 ]
  %143 = add nuw nsw i64 %142, 1
  %144 = icmp ult i64 %143, 64
  br i1 %144, label %146, label %145

145:                                              ; preds = %141
  call void @_ZN8autofill15AutofillScanner8RewindToEm(%"class.autofill::AutofillScanner"* %0, i64 %52) #10
  br label %152

146:                                              ; preds = %141
  %147 = lshr i64 6259403006675906423, %143
  %148 = and i64 %147, 1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %141

150:                                              ; preds = %146
  call void @_ZN8autofill15AutofillScanner8RewindToEm(%"class.autofill::AutofillScanner"* %0, i64 %52) #10
  %151 = icmp eq i64 %142, 62
  br i1 %151, label %308, label %152

152:                                              ; preds = %150, %145
  %153 = add i64 %142, 2
  %154 = icmp ult i64 %153, 64
  br i1 %154, label %50, label %155

155:                                              ; preds = %152, %140, %53
  %156 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %23, align 16
  %157 = icmp eq %"class.autofill::AutofillField"* %156, null
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZN8autofill15AutofillScanner8RewindToEm(%"class.autofill::AutofillScanner"* %0, i64 %21) #10
  br label %308

159:                                              ; preds = %155
  %160 = call i8* @_Znwm(i64 48) #9
  %161 = bitcast i8* %160 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8autofill10PhoneFieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %161, align 8
  %162 = getelementptr i8, i8* %160, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* nonnull align 16 %9, i64 40, i1 false)
  %163 = ptrtoint i8* %160 to i64
  %164 = getelementptr inbounds i8, i8* %160, i64 32
  %165 = bitcast i8* %164 to %"class.autofill::AutofillField"**
  %166 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %165, align 8
  %167 = icmp eq %"class.autofill::AutofillField"* %166, null
  br i1 %167, label %168, label %260

168:                                              ; preds = %159
  %169 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 0), align 2
  %170 = icmp eq i16 %169, 0
  br i1 %170, label %178, label %171

171:                                              ; preds = %168, %171
  %172 = phi i64 [ %174, %171 ], [ 0, %168 ]
  %173 = phi i16* [ %175, %171 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 0), %168 ]
  %174 = add i64 %172, 1
  %175 = getelementptr inbounds i16, i16* %173, i64 1
  %176 = load i16, i16* %175, align 2
  %177 = icmp eq i16 %176, 0
  br i1 %177, label %178, label %171

178:                                              ; preds = %171, %168
  %179 = phi i64 [ 0, %168 ], [ %174, %171 ]
  %180 = bitcast %"struct.autofill::RegExLogging"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180) #10
  %181 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %13, i64 0, i32 0
  store %"class.autofill::LogManager"* %2, %"class.autofill::LogManager"** %181, align 8
  %182 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8** %182, align 8
  %183 = bitcast %"class.std::__1::basic_string.1"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183) #10
  %184 = bitcast %"class.std::__1::basic_string.1"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  store i8 12, i8* %185, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %183, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i1 false) #10
  %186 = getelementptr inbounds i8, i8* %183, i64 12
  store i8 0, i8* %186, align 4
  %187 = bitcast %"class.std::__1::vector.70"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187) #10
  %188 = call dereferenceable(48) %"class.autofill::PatternProvider"* @_ZN8autofill15PatternProvider11GetInstanceEv() #10
  call void @_ZNK8autofill15PatternProvider16GetMatchPatternsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_12LanguageCodeE(%"class.std::__1::vector.70"* nonnull sret %4, %"class.autofill::PatternProvider"* %188, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %14, %"class.autofill::LanguageCode"* dereferenceable(24) %1) #10
  %189 = call zeroext i1 @_ZN8autofill9FormField19ParseFieldSpecificsEPNS_15AutofillScannerEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEiRKNS5_6vectorINS_15MatchingPatternENS5_9allocatorISA_EEEEPPNS_13AutofillFieldERKNS_12RegExLoggingENS0_18MatchFieldBitmasksE(%"class.autofill::AutofillScanner"* %0, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 0), i64 %179, i32 279, %"class.std::__1::vector.70"* nonnull dereferenceable(24) %4, %"class.autofill::AutofillField"** %165, %"struct.autofill::RegExLogging"* nonnull dereferenceable(16) %13, i64 4294967295) #10
  %190 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %4, i64 0, i32 0, i32 0
  %191 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %190, align 8
  %192 = icmp eq %"struct.autofill::MatchingPattern"* %191, null
  br i1 %192, label %207, label %193

193:                                              ; preds = %178
  %194 = bitcast %"struct.autofill::MatchingPattern"* %191 to i8*
  %195 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %4, i64 0, i32 0, i32 1
  %196 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %195, align 8
  %197 = icmp eq %"struct.autofill::MatchingPattern"* %196, %191
  br i1 %197, label %205, label %198

198:                                              ; preds = %193, %198
  %199 = phi %"struct.autofill::MatchingPattern"* [ %200, %198 ], [ %196, %193 ]
  %200 = getelementptr inbounds %"struct.autofill::MatchingPattern", %"struct.autofill::MatchingPattern"* %199, i64 -1
  call void @_ZN8autofill15MatchingPatternD1Ev(%"struct.autofill::MatchingPattern"* %200) #10
  %201 = icmp eq %"struct.autofill::MatchingPattern"* %200, %191
  br i1 %201, label %202, label %198

202:                                              ; preds = %198
  %203 = bitcast %"class.std::__1::vector.70"* %4 to i8**
  %204 = load i8*, i8** %203, align 8
  br label %205

205:                                              ; preds = %202, %193
  %206 = phi i8* [ %204, %202 ], [ %194, %193 ]
  store %"struct.autofill::MatchingPattern"* %191, %"struct.autofill::MatchingPattern"** %195, align 8
  call void @_ZdlPv(i8* %206) #9
  br label %207

207:                                              ; preds = %178, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #10
  %208 = load i8, i8* %185, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %212) #9
  br label %213

213:                                              ; preds = %207, %210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180) #10
  br i1 %189, label %260, label %214

214:                                              ; preds = %213
  %215 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 0), align 2
  %216 = icmp eq i16 %215, 0
  br i1 %216, label %224, label %217

217:                                              ; preds = %214, %217
  %218 = phi i64 [ %220, %217 ], [ 0, %214 ]
  %219 = phi i16* [ %221, %217 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 0), %214 ]
  %220 = add i64 %218, 1
  %221 = getelementptr inbounds i16, i16* %219, i64 1
  %222 = load i16, i16* %221, align 2
  %223 = icmp eq i16 %222, 0
  br i1 %223, label %224, label %217

224:                                              ; preds = %217, %214
  %225 = phi i64 [ 0, %214 ], [ %220, %217 ]
  %226 = bitcast %"struct.autofill::RegExLogging"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %226) #10
  %227 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %15, i64 0, i32 0
  store %"class.autofill::LogManager"* %2, %"class.autofill::LogManager"** %227, align 8
  %228 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i8** %228, align 8
  %229 = bitcast %"class.std::__1::basic_string.1"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #10
  %230 = bitcast %"class.std::__1::basic_string.1"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %230, i64 0, i32 1, i32 0
  store i8 22, i8* %231, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %229, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i64 22, i1 false) #10
  %232 = getelementptr inbounds i8, i8* %229, i64 22
  store i8 0, i8* %232, align 2
  %233 = bitcast %"class.std::__1::vector.70"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #10
  %234 = call dereferenceable(48) %"class.autofill::PatternProvider"* @_ZN8autofill15PatternProvider11GetInstanceEv() #10
  call void @_ZNK8autofill15PatternProvider16GetMatchPatternsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_12LanguageCodeE(%"class.std::__1::vector.70"* nonnull sret %5, %"class.autofill::PatternProvider"* %234, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %16, %"class.autofill::LanguageCode"* dereferenceable(24) %1) #10
  %235 = call zeroext i1 @_ZN8autofill9FormField19ParseFieldSpecificsEPNS_15AutofillScannerEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEiRKNS5_6vectorINS_15MatchingPatternENS5_9allocatorISA_EEEEPPNS_13AutofillFieldERKNS_12RegExLoggingENS0_18MatchFieldBitmasksE(%"class.autofill::AutofillScanner"* %0, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 0), i64 %225, i32 279, %"class.std::__1::vector.70"* nonnull dereferenceable(24) %5, %"class.autofill::AutofillField"** %165, %"struct.autofill::RegExLogging"* nonnull dereferenceable(16) %15, i64 4294967295) #10
  %236 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %237 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %236, align 8
  %238 = icmp eq %"struct.autofill::MatchingPattern"* %237, null
  br i1 %238, label %253, label %239

239:                                              ; preds = %224
  %240 = bitcast %"struct.autofill::MatchingPattern"* %237 to i8*
  %241 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %242 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %241, align 8
  %243 = icmp eq %"struct.autofill::MatchingPattern"* %242, %237
  br i1 %243, label %251, label %244

244:                                              ; preds = %239, %244
  %245 = phi %"struct.autofill::MatchingPattern"* [ %246, %244 ], [ %242, %239 ]
  %246 = getelementptr inbounds %"struct.autofill::MatchingPattern", %"struct.autofill::MatchingPattern"* %245, i64 -1
  call void @_ZN8autofill15MatchingPatternD1Ev(%"struct.autofill::MatchingPattern"* %246) #10
  %247 = icmp eq %"struct.autofill::MatchingPattern"* %246, %237
  br i1 %247, label %248, label %244

248:                                              ; preds = %244
  %249 = bitcast %"class.std::__1::vector.70"* %5 to i8**
  %250 = load i8*, i8** %249, align 8
  br label %251

251:                                              ; preds = %248, %239
  %252 = phi i8* [ %250, %248 ], [ %240, %239 ]
  store %"struct.autofill::MatchingPattern"* %237, %"struct.autofill::MatchingPattern"** %241, align 8
  call void @_ZdlPv(i8* %252) #9
  br label %253

253:                                              ; preds = %224, %251
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #10
  %254 = load i8, i8* %231, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %259

256:                                              ; preds = %253
  %257 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load i8*, i8** %257, align 8
  call void @_ZdlPv(i8* %258) #9
  br label %259

259:                                              ; preds = %253, %256
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %226) #10
  br label %260

260:                                              ; preds = %213, %159, %259
  %261 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 0), align 2
  %262 = icmp eq i16 %261, 0
  br i1 %262, label %270, label %263

263:                                              ; preds = %260, %263
  %264 = phi i64 [ %266, %263 ], [ 0, %260 ]
  %265 = phi i16* [ %267, %263 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 0), %260 ]
  %266 = add i64 %264, 1
  %267 = getelementptr inbounds i16, i16* %265, i64 1
  %268 = load i16, i16* %267, align 2
  %269 = icmp eq i16 %268, 0
  br i1 %269, label %270, label %263

270:                                              ; preds = %263, %260
  %271 = phi i64 [ 0, %260 ], [ %266, %263 ]
  %272 = getelementptr inbounds i8, i8* %160, i64 40
  %273 = bitcast i8* %272 to %"class.autofill::AutofillField"**
  %274 = bitcast %"struct.autofill::RegExLogging"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %274) #10
  %275 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %17, i64 0, i32 0
  store %"class.autofill::LogManager"* %2, %"class.autofill::LogManager"** %275, align 8
  %276 = getelementptr inbounds %"struct.autofill::RegExLogging", %"struct.autofill::RegExLogging"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8** %276, align 8
  %277 = bitcast %"class.std::__1::basic_string.1"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %277) #10
  %278 = bitcast %"class.std::__1::basic_string.1"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %279 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %278, i64 0, i32 1, i32 0
  store i8 15, i8* %279, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %277, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 15, i1 false) #10
  %280 = getelementptr inbounds i8, i8* %277, i64 15
  store i8 0, i8* %280, align 1
  %281 = bitcast %"class.std::__1::vector.70"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %281) #10
  %282 = call dereferenceable(48) %"class.autofill::PatternProvider"* @_ZN8autofill15PatternProvider11GetInstanceEv() #10
  call void @_ZNK8autofill15PatternProvider16GetMatchPatternsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_12LanguageCodeE(%"class.std::__1::vector.70"* nonnull sret %7, %"class.autofill::PatternProvider"* %282, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %18, %"class.autofill::LanguageCode"* dereferenceable(24) %1) #10
  %283 = call zeroext i1 @_ZN8autofill9FormField19ParseFieldSpecificsEPNS_15AutofillScannerEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEiRKNS5_6vectorINS_15MatchingPatternENS5_9allocatorISA_EEEEPPNS_13AutofillFieldERKNS_12RegExLoggingENS0_18MatchFieldBitmasksE(%"class.autofill::AutofillScanner"* %0, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 0), i64 %271, i32 279, %"class.std::__1::vector.70"* nonnull dereferenceable(24) %7, %"class.autofill::AutofillField"** %273, %"struct.autofill::RegExLogging"* nonnull dereferenceable(16) %17, i64 4294967295) #10
  %284 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %7, i64 0, i32 0, i32 0
  %285 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %284, align 8
  %286 = icmp eq %"struct.autofill::MatchingPattern"* %285, null
  br i1 %286, label %301, label %287

287:                                              ; preds = %270
  %288 = bitcast %"struct.autofill::MatchingPattern"* %285 to i8*
  %289 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %7, i64 0, i32 0, i32 1
  %290 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %289, align 8
  %291 = icmp eq %"struct.autofill::MatchingPattern"* %290, %285
  br i1 %291, label %299, label %292

292:                                              ; preds = %287, %292
  %293 = phi %"struct.autofill::MatchingPattern"* [ %294, %292 ], [ %290, %287 ]
  %294 = getelementptr inbounds %"struct.autofill::MatchingPattern", %"struct.autofill::MatchingPattern"* %293, i64 -1
  call void @_ZN8autofill15MatchingPatternD1Ev(%"struct.autofill::MatchingPattern"* %294) #10
  %295 = icmp eq %"struct.autofill::MatchingPattern"* %294, %285
  br i1 %295, label %296, label %292

296:                                              ; preds = %292
  %297 = bitcast %"class.std::__1::vector.70"* %7 to i8**
  %298 = load i8*, i8** %297, align 8
  br label %299

299:                                              ; preds = %296, %287
  %300 = phi i8* [ %298, %296 ], [ %288, %287 ]
  store %"struct.autofill::MatchingPattern"* %285, %"struct.autofill::MatchingPattern"** %289, align 8
  call void @_ZdlPv(i8* %300) #9
  br label %301

301:                                              ; preds = %270, %299
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %281) #10
  %302 = load i8, i8* %279, align 1
  %303 = icmp slt i8 %302, 0
  br i1 %303, label %304, label %307

304:                                              ; preds = %301
  %305 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load i8*, i8** %305, align 8
  call void @_ZdlPv(i8* %306) #9
  br label %307

307:                                              ; preds = %304, %301
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %277) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %274) #10
  br label %308

308:                                              ; preds = %150, %139, %307, %158
  %309 = phi i64 [ 0, %158 ], [ %163, %307 ], [ 0, %139 ], [ 0, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #10
  br label %310

310:                                              ; preds = %3, %308
  %311 = phi i64 [ %309, %308 ], [ 0, %3 ]
  %312 = inttoptr i64 %311 to %"class.autofill::FormField"*
  ret %"class.autofill::FormField"* %312
}

declare zeroext i1 @_ZNK8autofill15AutofillScanner5IsEndEv(%"class.autofill::AutofillScanner"*) local_unnamed_addr #3

declare i64 @_ZN8autofill15AutofillScanner10SaveCursorEv(%"class.autofill::AutofillScanner"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8autofill10PhoneField15ParsePhoneFieldEPNS_15AutofillScannerEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPPNS_13AutofillFieldERKNS_12RegExLoggingEbRKNS5_12basic_stringIcNS6_IcEENS5_9allocatorIcEEEERKNS_12LanguageCodeE(%"class.autofill::AutofillScanner"*, i16*, i64, %"class.autofill::AutofillField"**, %"struct.autofill::RegExLogging"* dereferenceable(16), i1 zeroext, %"class.std::__1::basic_string.1"* dereferenceable(24), %"class.autofill::LanguageCode"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %9 = alloca %"class.std::__1::vector.70", align 8
  %10 = select i1 %5, i32 311, i32 279
  %11 = bitcast %"class.std::__1::vector.70"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = tail call dereferenceable(48) %"class.autofill::PatternProvider"* @_ZN8autofill15PatternProvider11GetInstanceEv() #10
  call void @_ZNK8autofill15PatternProvider16GetMatchPatternsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_12LanguageCodeE(%"class.std::__1::vector.70"* nonnull sret %9, %"class.autofill::PatternProvider"* %12, %"class.std::__1::basic_string.1"* dereferenceable(24) %6, %"class.autofill::LanguageCode"* dereferenceable(24) %7) #10
  %13 = call zeroext i1 @_ZN8autofill9FormField19ParseFieldSpecificsEPNS_15AutofillScannerEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEiRKNS5_6vectorINS_15MatchingPatternENS5_9allocatorISA_EEEEPPNS_13AutofillFieldERKNS_12RegExLoggingENS0_18MatchFieldBitmasksE(%"class.autofill::AutofillScanner"* %0, i16* %1, i64 %2, i32 %10, %"class.std::__1::vector.70"* nonnull dereferenceable(24) %9, %"class.autofill::AutofillField"** %3, %"struct.autofill::RegExLogging"* dereferenceable(16) %4, i64 4294967295) #10
  %14 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %9, i64 0, i32 0, i32 0
  %15 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %14, align 8
  %16 = icmp eq %"struct.autofill::MatchingPattern"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %8
  %18 = bitcast %"struct.autofill::MatchingPattern"* %15 to i8*
  %19 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %9, i64 0, i32 0, i32 1
  %20 = load %"struct.autofill::MatchingPattern"*, %"struct.autofill::MatchingPattern"** %19, align 8
  %21 = icmp eq %"struct.autofill::MatchingPattern"* %20, %15
  br i1 %21, label %29, label %22

22:                                               ; preds = %17, %22
  %23 = phi %"struct.autofill::MatchingPattern"* [ %24, %22 ], [ %20, %17 ]
  %24 = getelementptr inbounds %"struct.autofill::MatchingPattern", %"struct.autofill::MatchingPattern"* %23, i64 -1
  call void @_ZN8autofill15MatchingPatternD1Ev(%"struct.autofill::MatchingPattern"* %24) #10
  %25 = icmp eq %"struct.autofill::MatchingPattern"* %24, %15
  br i1 %25, label %26, label %22

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::vector.70"* %9 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %17
  %30 = phi i8* [ %28, %26 ], [ %18, %17 ]
  store %"struct.autofill::MatchingPattern"* %15, %"struct.autofill::MatchingPattern"** %19, align 8
  call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %8, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill10PhoneField9GetRegExpENS0_9RegexTypeE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca [3 x %"class.base::BasicStringPiece"], align 8
  switch i32 %1, label %1603 [
    i32 0, label %4
    i32 1, label %200
    i32 2, label %231
    i32 3, label %427
    i32 4, label %623
    i32 5, label %819
    i32 6, label %1015
    i32 7, label %1211
    i32 8, label %1407
  ]

4:                                                ; preds = %2
  %5 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kCountryCodeReE, i64 0, i64 0), align 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  store i8 0, i8* %9, align 1
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %196

11:                                               ; preds = %4, %11
  %12 = phi i64 [ %14, %11 ], [ 0, %4 ]
  %13 = phi i16* [ %15, %11 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kCountryCodeReE, i64 0, i64 0), %4 ]
  %14 = add i64 %12, 1
  %15 = getelementptr inbounds i16, i16* %13, i64 1
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %11

18:                                               ; preds = %11
  %19 = icmp ugt i64 %14, 9223372036854775791
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %21) #11
  unreachable

22:                                               ; preds = %18
  %23 = icmp ult i64 %14, 11
  br i1 %23, label %37, label %24

24:                                               ; preds = %22
  %25 = add nuw nsw i64 %12, 9
  %26 = and i64 %25, -8
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %24
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %24
  %30 = shl i64 %26, 1
  %31 = tail call i8* @_Znwm(i64 %30) #9
  %32 = bitcast i8* %31 to i16*
  %33 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %31, i8** %33, align 8
  %34 = or i64 %26, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %36, align 8
  br label %43

37:                                               ; preds = %22
  %38 = trunc i64 %14 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  store i8 %38, i8* %40, align 1
  %41 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %42 = icmp eq i64 %14, 0
  br i1 %42, label %196, label %43

43:                                               ; preds = %37, %29
  %44 = phi i16* [ %32, %29 ], [ %41, %37 ]
  store i16 %5, i16* %44, align 2
  %45 = icmp eq i64 %12, 0
  br i1 %45, label %196, label %46

46:                                               ; preds = %43
  %47 = icmp ult i64 %12, 16
  br i1 %47, label %143, label %48

48:                                               ; preds = %46
  %49 = getelementptr i16, i16* %44, i64 1
  %50 = getelementptr i16, i16* %44, i64 %14
  %51 = getelementptr [0 x i16], [0 x i16]* @_ZN8autofill14kCountryCodeReE, i64 0, i64 %14
  %52 = icmp ult i16* %49, %51
  %53 = icmp ugt i16* %50, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kCountryCodeReE, i64 0, i64 1)
  %54 = and i1 %52, %53
  br i1 %54, label %143, label %55

55:                                               ; preds = %48
  %56 = and i64 %12, -16
  %57 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kCountryCodeReE, i64 0, i64 1), i64 %56
  %58 = sub i64 %12, %56
  %59 = getelementptr i16, i16* %44, i64 %56
  %60 = add i64 %56, -16
  %61 = lshr exact i64 %60, 4
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 48
  br i1 %64, label %120, label %65

65:                                               ; preds = %55
  %66 = sub nsw i64 %62, %63
  %67 = getelementptr i16, i16* %44, i64 1
  %68 = getelementptr i16, i16* %44, i64 1
  %69 = getelementptr i16, i16* %44, i64 1
  %70 = getelementptr i16, i16* %44, i64 1
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i64 [ 0, %65 ], [ %117, %71 ]
  %73 = phi i64 [ %66, %65 ], [ %118, %71 ]
  %74 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kCountryCodeReE, i64 0, i64 1), i64 %72
  %75 = getelementptr inbounds i16, i16* %67, i64 %72
  %76 = bitcast i16* %74 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !5
  %78 = getelementptr i16, i16* %74, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !5
  %81 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %81, align 2, !alias.scope !8, !noalias !5
  %82 = getelementptr inbounds i16, i16* %75, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %83, align 2, !alias.scope !8, !noalias !5
  %84 = or i64 %72, 16
  %85 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kCountryCodeReE, i64 0, i64 1), i64 %84
  %86 = getelementptr inbounds i16, i16* %68, i64 %84
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !5
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !5
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !8, !noalias !5
  %93 = getelementptr inbounds i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !8, !noalias !5
  %95 = or i64 %72, 32
  %96 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kCountryCodeReE, i64 0, i64 1), i64 %95
  %97 = getelementptr inbounds i16, i16* %69, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !5
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !5
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !8, !noalias !5
  %104 = getelementptr inbounds i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !8, !noalias !5
  %106 = or i64 %72, 48
  %107 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kCountryCodeReE, i64 0, i64 1), i64 %106
  %108 = getelementptr inbounds i16, i16* %70, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !5
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !5
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !8, !noalias !5
  %115 = getelementptr inbounds i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !8, !noalias !5
  %117 = add i64 %72, 64
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !10

120:                                              ; preds = %71, %55
  %121 = phi i64 [ 0, %55 ], [ %117, %71 ]
  %122 = icmp eq i64 %63, 0
  br i1 %122, label %141, label %123

123:                                              ; preds = %120
  %124 = getelementptr i16, i16* %44, i64 1
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ %121, %123 ], [ %138, %125 ]
  %127 = phi i64 [ %63, %123 ], [ %139, %125 ]
  %128 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kCountryCodeReE, i64 0, i64 1), i64 %126
  %129 = getelementptr inbounds i16, i16* %124, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !5
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !5
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !8, !noalias !5
  %136 = getelementptr inbounds i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !8, !noalias !5
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !12

141:                                              ; preds = %125, %120
  %142 = icmp eq i64 %12, %56
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %48, %46
  %144 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kCountryCodeReE, i64 0, i64 1), %48 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kCountryCodeReE, i64 0, i64 1), %46 ], [ %57, %141 ]
  %145 = phi i64 [ %12, %48 ], [ %12, %46 ], [ %58, %141 ]
  %146 = phi i16* [ %44, %48 ], [ %44, %46 ], [ %59, %141 ]
  %147 = add i64 %145, -1
  %148 = and i64 %145, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i16* [ %158, %150 ], [ %144, %143 ]
  %152 = phi i64 [ %157, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %155, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = getelementptr inbounds i16, i16* %153, i64 1
  %156 = load i16, i16* %151, align 2
  store i16 %156, i16* %155, align 2
  %157 = add i64 %152, -1
  %158 = getelementptr inbounds i16, i16* %151, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !14

161:                                              ; preds = %150, %143
  %162 = phi i16* [ %144, %143 ], [ %158, %150 ]
  %163 = phi i64 [ %145, %143 ], [ %157, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %155, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i16* [ %194, %166 ], [ %162, %161 ]
  %168 = phi i64 [ %193, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %191, %166 ], [ %164, %161 ]
  %170 = getelementptr inbounds i16, i16* %169, i64 1
  %171 = load i16, i16* %167, align 2
  store i16 %171, i16* %170, align 2
  %172 = getelementptr inbounds i16, i16* %167, i64 1
  %173 = getelementptr inbounds i16, i16* %169, i64 2
  %174 = load i16, i16* %172, align 2
  store i16 %174, i16* %173, align 2
  %175 = getelementptr inbounds i16, i16* %167, i64 2
  %176 = getelementptr inbounds i16, i16* %169, i64 3
  %177 = load i16, i16* %175, align 2
  store i16 %177, i16* %176, align 2
  %178 = getelementptr inbounds i16, i16* %167, i64 3
  %179 = getelementptr inbounds i16, i16* %169, i64 4
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %167, i64 4
  %182 = getelementptr inbounds i16, i16* %169, i64 5
  %183 = load i16, i16* %181, align 2
  store i16 %183, i16* %182, align 2
  %184 = getelementptr inbounds i16, i16* %167, i64 5
  %185 = getelementptr inbounds i16, i16* %169, i64 6
  %186 = load i16, i16* %184, align 2
  store i16 %186, i16* %185, align 2
  %187 = getelementptr inbounds i16, i16* %167, i64 6
  %188 = getelementptr inbounds i16, i16* %169, i64 7
  %189 = load i16, i16* %187, align 2
  store i16 %189, i16* %188, align 2
  %190 = getelementptr inbounds i16, i16* %167, i64 7
  %191 = getelementptr inbounds i16, i16* %169, i64 8
  %192 = load i16, i16* %190, align 2
  store i16 %192, i16* %191, align 2
  %193 = add i64 %168, -8
  %194 = getelementptr inbounds i16, i16* %167, i64 8
  %195 = icmp eq i64 %193, 0
  br i1 %195, label %196, label %166, !llvm.loop !15

196:                                              ; preds = %161, %166, %43, %141, %7, %37
  %197 = phi i64 [ 0, %37 ], [ 0, %7 ], [ %14, %141 ], [ %14, %43 ], [ %14, %166 ], [ %14, %161 ]
  %198 = phi i16* [ %41, %37 ], [ %10, %7 ], [ %44, %141 ], [ %44, %43 ], [ %44, %166 ], [ %44, %161 ]
  %199 = getelementptr inbounds i16, i16* %198, i64 %197
  store i16 0, i16* %199, align 2
  br label %1605

200:                                              ; preds = %2
  %201 = bitcast [3 x %"class.base::BasicStringPiece"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %201) #10, !noalias !16
  %202 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0
  %203 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0, i32 0
  store i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill11kAreaCodeReE, i64 0, i64 0), i16** %203, align 8, !noalias !16
  %204 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0, i32 1
  %205 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill11kAreaCodeReE, i64 0, i64 0), align 2, !noalias !16
  %206 = icmp eq i16 %205, 0
  br i1 %206, label %214, label %207

207:                                              ; preds = %200, %207
  %208 = phi i64 [ %210, %207 ], [ 0, %200 ]
  %209 = phi i16* [ %211, %207 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill11kAreaCodeReE, i64 0, i64 0), %200 ]
  %210 = add i64 %208, 1
  %211 = getelementptr inbounds i16, i16* %209, i64 1
  %212 = load i16, i16* %211, align 2
  %213 = icmp eq i16 %212, 0
  br i1 %213, label %214, label %207

214:                                              ; preds = %207, %200
  %215 = phi i64 [ 0, %200 ], [ %210, %207 ]
  store i64 %215, i64* %204, align 8, !noalias !16
  %216 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 1, i32 0
  store i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.21, i64 0, i64 0), i16** %216, align 8, !noalias !16
  %217 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 1, i32 1
  store i64 1, i64* %217, align 8, !noalias !16
  %218 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 2, i32 0
  store i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 0), i16** %218, align 8, !noalias !16
  %219 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 2, i32 1
  %220 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 0), align 2, !noalias !16
  %221 = icmp eq i16 %220, 0
  br i1 %221, label %229, label %222

222:                                              ; preds = %214, %222
  %223 = phi i64 [ %225, %222 ], [ 0, %214 ]
  %224 = phi i16* [ %226, %222 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 0), %214 ]
  %225 = add i64 %223, 1
  %226 = getelementptr inbounds i16, i16* %224, i64 1
  %227 = load i16, i16* %226, align 2
  %228 = icmp eq i16 %227, 0
  br i1 %228, label %229, label %222

229:                                              ; preds = %222, %214
  %230 = phi i64 [ 0, %214 ], [ %225, %222 ]
  store i64 %230, i64* %219, align 8, !noalias !16
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret %0, i64 3, %"class.base::BasicStringPiece"* nonnull %202) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %201) #10, !noalias !16
  br label %1605

231:                                              ; preds = %2
  %232 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 0), align 2
  %233 = icmp eq i16 %232, 0
  br i1 %233, label %234, label %238

234:                                              ; preds = %231
  %235 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %235, i64 0, i32 1, i32 1
  store i8 0, i8* %236, align 1
  %237 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %423

238:                                              ; preds = %231, %238
  %239 = phi i64 [ %241, %238 ], [ 0, %231 ]
  %240 = phi i16* [ %242, %238 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 0), %231 ]
  %241 = add i64 %239, 1
  %242 = getelementptr inbounds i16, i16* %240, i64 1
  %243 = load i16, i16* %242, align 2
  %244 = icmp eq i16 %243, 0
  br i1 %244, label %245, label %238

245:                                              ; preds = %238
  %246 = icmp ugt i64 %241, 9223372036854775791
  br i1 %246, label %247, label %249

247:                                              ; preds = %245
  %248 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %248) #11
  unreachable

249:                                              ; preds = %245
  %250 = icmp ult i64 %241, 11
  br i1 %250, label %264, label %251

251:                                              ; preds = %249
  %252 = add nuw nsw i64 %239, 9
  %253 = and i64 %252, -8
  %254 = icmp slt i64 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %251
  tail call void @abort() #11
  unreachable

256:                                              ; preds = %251
  %257 = shl i64 %253, 1
  %258 = tail call i8* @_Znwm(i64 %257) #9
  %259 = bitcast i8* %258 to i16*
  %260 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %258, i8** %260, align 8
  %261 = or i64 %253, -9223372036854775808
  %262 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %241, i64* %263, align 8
  br label %270

264:                                              ; preds = %249
  %265 = trunc i64 %241 to i8
  %266 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %267 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %266, i64 0, i32 1, i32 1
  store i8 %265, i8* %267, align 1
  %268 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %269 = icmp eq i64 %241, 0
  br i1 %269, label %423, label %270

270:                                              ; preds = %264, %256
  %271 = phi i16* [ %259, %256 ], [ %268, %264 ]
  store i16 %232, i16* %271, align 2
  %272 = icmp eq i64 %239, 0
  br i1 %272, label %423, label %273

273:                                              ; preds = %270
  %274 = icmp ult i64 %239, 16
  br i1 %274, label %370, label %275

275:                                              ; preds = %273
  %276 = getelementptr i16, i16* %271, i64 1
  %277 = getelementptr i16, i16* %271, i64 %241
  %278 = getelementptr [0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 %241
  %279 = icmp ult i16* %276, %278
  %280 = icmp ugt i16* %277, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 1)
  %281 = and i1 %279, %280
  br i1 %281, label %370, label %282

282:                                              ; preds = %275
  %283 = and i64 %239, -16
  %284 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 1), i64 %283
  %285 = sub i64 %239, %283
  %286 = getelementptr i16, i16* %271, i64 %283
  %287 = add i64 %283, -16
  %288 = lshr exact i64 %287, 4
  %289 = add nuw nsw i64 %288, 1
  %290 = and i64 %289, 3
  %291 = icmp ult i64 %287, 48
  br i1 %291, label %347, label %292

292:                                              ; preds = %282
  %293 = sub nsw i64 %289, %290
  %294 = getelementptr i16, i16* %271, i64 1
  %295 = getelementptr i16, i16* %271, i64 1
  %296 = getelementptr i16, i16* %271, i64 1
  %297 = getelementptr i16, i16* %271, i64 1
  br label %298

298:                                              ; preds = %298, %292
  %299 = phi i64 [ 0, %292 ], [ %344, %298 ]
  %300 = phi i64 [ %293, %292 ], [ %345, %298 ]
  %301 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 1), i64 %299
  %302 = getelementptr inbounds i16, i16* %294, i64 %299
  %303 = bitcast i16* %301 to <8 x i16>*
  %304 = load <8 x i16>, <8 x i16>* %303, align 2, !alias.scope !19
  %305 = getelementptr i16, i16* %301, i64 8
  %306 = bitcast i16* %305 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !19
  %308 = bitcast i16* %302 to <8 x i16>*
  store <8 x i16> %304, <8 x i16>* %308, align 2, !alias.scope !22, !noalias !19
  %309 = getelementptr inbounds i16, i16* %302, i64 8
  %310 = bitcast i16* %309 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %310, align 2, !alias.scope !22, !noalias !19
  %311 = or i64 %299, 16
  %312 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 1), i64 %311
  %313 = getelementptr inbounds i16, i16* %295, i64 %311
  %314 = bitcast i16* %312 to <8 x i16>*
  %315 = load <8 x i16>, <8 x i16>* %314, align 2, !alias.scope !19
  %316 = getelementptr i16, i16* %312, i64 8
  %317 = bitcast i16* %316 to <8 x i16>*
  %318 = load <8 x i16>, <8 x i16>* %317, align 2, !alias.scope !19
  %319 = bitcast i16* %313 to <8 x i16>*
  store <8 x i16> %315, <8 x i16>* %319, align 2, !alias.scope !22, !noalias !19
  %320 = getelementptr inbounds i16, i16* %313, i64 8
  %321 = bitcast i16* %320 to <8 x i16>*
  store <8 x i16> %318, <8 x i16>* %321, align 2, !alias.scope !22, !noalias !19
  %322 = or i64 %299, 32
  %323 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 1), i64 %322
  %324 = getelementptr inbounds i16, i16* %296, i64 %322
  %325 = bitcast i16* %323 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !19
  %327 = getelementptr i16, i16* %323, i64 8
  %328 = bitcast i16* %327 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !19
  %330 = bitcast i16* %324 to <8 x i16>*
  store <8 x i16> %326, <8 x i16>* %330, align 2, !alias.scope !22, !noalias !19
  %331 = getelementptr inbounds i16, i16* %324, i64 8
  %332 = bitcast i16* %331 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %332, align 2, !alias.scope !22, !noalias !19
  %333 = or i64 %299, 48
  %334 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 1), i64 %333
  %335 = getelementptr inbounds i16, i16* %297, i64 %333
  %336 = bitcast i16* %334 to <8 x i16>*
  %337 = load <8 x i16>, <8 x i16>* %336, align 2, !alias.scope !19
  %338 = getelementptr i16, i16* %334, i64 8
  %339 = bitcast i16* %338 to <8 x i16>*
  %340 = load <8 x i16>, <8 x i16>* %339, align 2, !alias.scope !19
  %341 = bitcast i16* %335 to <8 x i16>*
  store <8 x i16> %337, <8 x i16>* %341, align 2, !alias.scope !22, !noalias !19
  %342 = getelementptr inbounds i16, i16* %335, i64 8
  %343 = bitcast i16* %342 to <8 x i16>*
  store <8 x i16> %340, <8 x i16>* %343, align 2, !alias.scope !22, !noalias !19
  %344 = add i64 %299, 64
  %345 = add i64 %300, -4
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %298, !llvm.loop !24

347:                                              ; preds = %298, %282
  %348 = phi i64 [ 0, %282 ], [ %344, %298 ]
  %349 = icmp eq i64 %290, 0
  br i1 %349, label %368, label %350

350:                                              ; preds = %347
  %351 = getelementptr i16, i16* %271, i64 1
  br label %352

352:                                              ; preds = %352, %350
  %353 = phi i64 [ %348, %350 ], [ %365, %352 ]
  %354 = phi i64 [ %290, %350 ], [ %366, %352 ]
  %355 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 1), i64 %353
  %356 = getelementptr inbounds i16, i16* %351, i64 %353
  %357 = bitcast i16* %355 to <8 x i16>*
  %358 = load <8 x i16>, <8 x i16>* %357, align 2, !alias.scope !19
  %359 = getelementptr i16, i16* %355, i64 8
  %360 = bitcast i16* %359 to <8 x i16>*
  %361 = load <8 x i16>, <8 x i16>* %360, align 2, !alias.scope !19
  %362 = bitcast i16* %356 to <8 x i16>*
  store <8 x i16> %358, <8 x i16>* %362, align 2, !alias.scope !22, !noalias !19
  %363 = getelementptr inbounds i16, i16* %356, i64 8
  %364 = bitcast i16* %363 to <8 x i16>*
  store <8 x i16> %361, <8 x i16>* %364, align 2, !alias.scope !22, !noalias !19
  %365 = add i64 %353, 16
  %366 = add i64 %354, -1
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %368, label %352, !llvm.loop !25

368:                                              ; preds = %352, %347
  %369 = icmp eq i64 %239, %283
  br i1 %369, label %423, label %370

370:                                              ; preds = %368, %275, %273
  %371 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 1), %275 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kAreaCodeNotextReE, i64 0, i64 1), %273 ], [ %284, %368 ]
  %372 = phi i64 [ %239, %275 ], [ %239, %273 ], [ %285, %368 ]
  %373 = phi i16* [ %271, %275 ], [ %271, %273 ], [ %286, %368 ]
  %374 = add i64 %372, -1
  %375 = and i64 %372, 7
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %388, label %377

377:                                              ; preds = %370, %377
  %378 = phi i16* [ %385, %377 ], [ %371, %370 ]
  %379 = phi i64 [ %384, %377 ], [ %372, %370 ]
  %380 = phi i16* [ %382, %377 ], [ %373, %370 ]
  %381 = phi i64 [ %386, %377 ], [ %375, %370 ]
  %382 = getelementptr inbounds i16, i16* %380, i64 1
  %383 = load i16, i16* %378, align 2
  store i16 %383, i16* %382, align 2
  %384 = add i64 %379, -1
  %385 = getelementptr inbounds i16, i16* %378, i64 1
  %386 = add i64 %381, -1
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %388, label %377, !llvm.loop !26

388:                                              ; preds = %377, %370
  %389 = phi i16* [ %371, %370 ], [ %385, %377 ]
  %390 = phi i64 [ %372, %370 ], [ %384, %377 ]
  %391 = phi i16* [ %373, %370 ], [ %382, %377 ]
  %392 = icmp ult i64 %374, 7
  br i1 %392, label %423, label %393

393:                                              ; preds = %388, %393
  %394 = phi i16* [ %421, %393 ], [ %389, %388 ]
  %395 = phi i64 [ %420, %393 ], [ %390, %388 ]
  %396 = phi i16* [ %418, %393 ], [ %391, %388 ]
  %397 = getelementptr inbounds i16, i16* %396, i64 1
  %398 = load i16, i16* %394, align 2
  store i16 %398, i16* %397, align 2
  %399 = getelementptr inbounds i16, i16* %394, i64 1
  %400 = getelementptr inbounds i16, i16* %396, i64 2
  %401 = load i16, i16* %399, align 2
  store i16 %401, i16* %400, align 2
  %402 = getelementptr inbounds i16, i16* %394, i64 2
  %403 = getelementptr inbounds i16, i16* %396, i64 3
  %404 = load i16, i16* %402, align 2
  store i16 %404, i16* %403, align 2
  %405 = getelementptr inbounds i16, i16* %394, i64 3
  %406 = getelementptr inbounds i16, i16* %396, i64 4
  %407 = load i16, i16* %405, align 2
  store i16 %407, i16* %406, align 2
  %408 = getelementptr inbounds i16, i16* %394, i64 4
  %409 = getelementptr inbounds i16, i16* %396, i64 5
  %410 = load i16, i16* %408, align 2
  store i16 %410, i16* %409, align 2
  %411 = getelementptr inbounds i16, i16* %394, i64 5
  %412 = getelementptr inbounds i16, i16* %396, i64 6
  %413 = load i16, i16* %411, align 2
  store i16 %413, i16* %412, align 2
  %414 = getelementptr inbounds i16, i16* %394, i64 6
  %415 = getelementptr inbounds i16, i16* %396, i64 7
  %416 = load i16, i16* %414, align 2
  store i16 %416, i16* %415, align 2
  %417 = getelementptr inbounds i16, i16* %394, i64 7
  %418 = getelementptr inbounds i16, i16* %396, i64 8
  %419 = load i16, i16* %417, align 2
  store i16 %419, i16* %418, align 2
  %420 = add i64 %395, -8
  %421 = getelementptr inbounds i16, i16* %394, i64 8
  %422 = icmp eq i64 %420, 0
  br i1 %422, label %423, label %393, !llvm.loop !27

423:                                              ; preds = %388, %393, %270, %368, %234, %264
  %424 = phi i64 [ 0, %264 ], [ 0, %234 ], [ %241, %368 ], [ %241, %270 ], [ %241, %393 ], [ %241, %388 ]
  %425 = phi i16* [ %268, %264 ], [ %237, %234 ], [ %271, %368 ], [ %271, %270 ], [ %271, %393 ], [ %271, %388 ]
  %426 = getelementptr inbounds i16, i16* %425, i64 %424
  store i16 0, i16* %426, align 2
  br label %1605

427:                                              ; preds = %2
  %428 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill8kPhoneReE, i64 0, i64 0), align 2
  %429 = icmp eq i16 %428, 0
  br i1 %429, label %430, label %434

430:                                              ; preds = %427
  %431 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %432 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %431, i64 0, i32 1, i32 1
  store i8 0, i8* %432, align 1
  %433 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %619

434:                                              ; preds = %427, %434
  %435 = phi i64 [ %437, %434 ], [ 0, %427 ]
  %436 = phi i16* [ %438, %434 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill8kPhoneReE, i64 0, i64 0), %427 ]
  %437 = add i64 %435, 1
  %438 = getelementptr inbounds i16, i16* %436, i64 1
  %439 = load i16, i16* %438, align 2
  %440 = icmp eq i16 %439, 0
  br i1 %440, label %441, label %434

441:                                              ; preds = %434
  %442 = icmp ugt i64 %437, 9223372036854775791
  br i1 %442, label %443, label %445

443:                                              ; preds = %441
  %444 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %444) #11
  unreachable

445:                                              ; preds = %441
  %446 = icmp ult i64 %437, 11
  br i1 %446, label %460, label %447

447:                                              ; preds = %445
  %448 = add nuw nsw i64 %435, 9
  %449 = and i64 %448, -8
  %450 = icmp slt i64 %449, 0
  br i1 %450, label %451, label %452

451:                                              ; preds = %447
  tail call void @abort() #11
  unreachable

452:                                              ; preds = %447
  %453 = shl i64 %449, 1
  %454 = tail call i8* @_Znwm(i64 %453) #9
  %455 = bitcast i8* %454 to i16*
  %456 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %454, i8** %456, align 8
  %457 = or i64 %449, -9223372036854775808
  %458 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %457, i64* %458, align 8
  %459 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %437, i64* %459, align 8
  br label %466

460:                                              ; preds = %445
  %461 = trunc i64 %437 to i8
  %462 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %463 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %462, i64 0, i32 1, i32 1
  store i8 %461, i8* %463, align 1
  %464 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %465 = icmp eq i64 %437, 0
  br i1 %465, label %619, label %466

466:                                              ; preds = %460, %452
  %467 = phi i16* [ %455, %452 ], [ %464, %460 ]
  store i16 %428, i16* %467, align 2
  %468 = icmp eq i64 %435, 0
  br i1 %468, label %619, label %469

469:                                              ; preds = %466
  %470 = icmp ult i64 %435, 16
  br i1 %470, label %566, label %471

471:                                              ; preds = %469
  %472 = getelementptr i16, i16* %467, i64 1
  %473 = getelementptr i16, i16* %467, i64 %437
  %474 = getelementptr [0 x i16], [0 x i16]* @_ZN8autofill8kPhoneReE, i64 0, i64 %437
  %475 = icmp ult i16* %472, %474
  %476 = icmp ugt i16* %473, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill8kPhoneReE, i64 0, i64 1)
  %477 = and i1 %475, %476
  br i1 %477, label %566, label %478

478:                                              ; preds = %471
  %479 = and i64 %435, -16
  %480 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill8kPhoneReE, i64 0, i64 1), i64 %479
  %481 = sub i64 %435, %479
  %482 = getelementptr i16, i16* %467, i64 %479
  %483 = add i64 %479, -16
  %484 = lshr exact i64 %483, 4
  %485 = add nuw nsw i64 %484, 1
  %486 = and i64 %485, 3
  %487 = icmp ult i64 %483, 48
  br i1 %487, label %543, label %488

488:                                              ; preds = %478
  %489 = sub nsw i64 %485, %486
  %490 = getelementptr i16, i16* %467, i64 1
  %491 = getelementptr i16, i16* %467, i64 1
  %492 = getelementptr i16, i16* %467, i64 1
  %493 = getelementptr i16, i16* %467, i64 1
  br label %494

494:                                              ; preds = %494, %488
  %495 = phi i64 [ 0, %488 ], [ %540, %494 ]
  %496 = phi i64 [ %489, %488 ], [ %541, %494 ]
  %497 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill8kPhoneReE, i64 0, i64 1), i64 %495
  %498 = getelementptr inbounds i16, i16* %490, i64 %495
  %499 = bitcast i16* %497 to <8 x i16>*
  %500 = load <8 x i16>, <8 x i16>* %499, align 2, !alias.scope !28
  %501 = getelementptr i16, i16* %497, i64 8
  %502 = bitcast i16* %501 to <8 x i16>*
  %503 = load <8 x i16>, <8 x i16>* %502, align 2, !alias.scope !28
  %504 = bitcast i16* %498 to <8 x i16>*
  store <8 x i16> %500, <8 x i16>* %504, align 2, !alias.scope !31, !noalias !28
  %505 = getelementptr inbounds i16, i16* %498, i64 8
  %506 = bitcast i16* %505 to <8 x i16>*
  store <8 x i16> %503, <8 x i16>* %506, align 2, !alias.scope !31, !noalias !28
  %507 = or i64 %495, 16
  %508 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill8kPhoneReE, i64 0, i64 1), i64 %507
  %509 = getelementptr inbounds i16, i16* %491, i64 %507
  %510 = bitcast i16* %508 to <8 x i16>*
  %511 = load <8 x i16>, <8 x i16>* %510, align 2, !alias.scope !28
  %512 = getelementptr i16, i16* %508, i64 8
  %513 = bitcast i16* %512 to <8 x i16>*
  %514 = load <8 x i16>, <8 x i16>* %513, align 2, !alias.scope !28
  %515 = bitcast i16* %509 to <8 x i16>*
  store <8 x i16> %511, <8 x i16>* %515, align 2, !alias.scope !31, !noalias !28
  %516 = getelementptr inbounds i16, i16* %509, i64 8
  %517 = bitcast i16* %516 to <8 x i16>*
  store <8 x i16> %514, <8 x i16>* %517, align 2, !alias.scope !31, !noalias !28
  %518 = or i64 %495, 32
  %519 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill8kPhoneReE, i64 0, i64 1), i64 %518
  %520 = getelementptr inbounds i16, i16* %492, i64 %518
  %521 = bitcast i16* %519 to <8 x i16>*
  %522 = load <8 x i16>, <8 x i16>* %521, align 2, !alias.scope !28
  %523 = getelementptr i16, i16* %519, i64 8
  %524 = bitcast i16* %523 to <8 x i16>*
  %525 = load <8 x i16>, <8 x i16>* %524, align 2, !alias.scope !28
  %526 = bitcast i16* %520 to <8 x i16>*
  store <8 x i16> %522, <8 x i16>* %526, align 2, !alias.scope !31, !noalias !28
  %527 = getelementptr inbounds i16, i16* %520, i64 8
  %528 = bitcast i16* %527 to <8 x i16>*
  store <8 x i16> %525, <8 x i16>* %528, align 2, !alias.scope !31, !noalias !28
  %529 = or i64 %495, 48
  %530 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill8kPhoneReE, i64 0, i64 1), i64 %529
  %531 = getelementptr inbounds i16, i16* %493, i64 %529
  %532 = bitcast i16* %530 to <8 x i16>*
  %533 = load <8 x i16>, <8 x i16>* %532, align 2, !alias.scope !28
  %534 = getelementptr i16, i16* %530, i64 8
  %535 = bitcast i16* %534 to <8 x i16>*
  %536 = load <8 x i16>, <8 x i16>* %535, align 2, !alias.scope !28
  %537 = bitcast i16* %531 to <8 x i16>*
  store <8 x i16> %533, <8 x i16>* %537, align 2, !alias.scope !31, !noalias !28
  %538 = getelementptr inbounds i16, i16* %531, i64 8
  %539 = bitcast i16* %538 to <8 x i16>*
  store <8 x i16> %536, <8 x i16>* %539, align 2, !alias.scope !31, !noalias !28
  %540 = add i64 %495, 64
  %541 = add i64 %496, -4
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %543, label %494, !llvm.loop !33

543:                                              ; preds = %494, %478
  %544 = phi i64 [ 0, %478 ], [ %540, %494 ]
  %545 = icmp eq i64 %486, 0
  br i1 %545, label %564, label %546

546:                                              ; preds = %543
  %547 = getelementptr i16, i16* %467, i64 1
  br label %548

548:                                              ; preds = %548, %546
  %549 = phi i64 [ %544, %546 ], [ %561, %548 ]
  %550 = phi i64 [ %486, %546 ], [ %562, %548 ]
  %551 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill8kPhoneReE, i64 0, i64 1), i64 %549
  %552 = getelementptr inbounds i16, i16* %547, i64 %549
  %553 = bitcast i16* %551 to <8 x i16>*
  %554 = load <8 x i16>, <8 x i16>* %553, align 2, !alias.scope !28
  %555 = getelementptr i16, i16* %551, i64 8
  %556 = bitcast i16* %555 to <8 x i16>*
  %557 = load <8 x i16>, <8 x i16>* %556, align 2, !alias.scope !28
  %558 = bitcast i16* %552 to <8 x i16>*
  store <8 x i16> %554, <8 x i16>* %558, align 2, !alias.scope !31, !noalias !28
  %559 = getelementptr inbounds i16, i16* %552, i64 8
  %560 = bitcast i16* %559 to <8 x i16>*
  store <8 x i16> %557, <8 x i16>* %560, align 2, !alias.scope !31, !noalias !28
  %561 = add i64 %549, 16
  %562 = add i64 %550, -1
  %563 = icmp eq i64 %562, 0
  br i1 %563, label %564, label %548, !llvm.loop !34

564:                                              ; preds = %548, %543
  %565 = icmp eq i64 %435, %479
  br i1 %565, label %619, label %566

566:                                              ; preds = %564, %471, %469
  %567 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill8kPhoneReE, i64 0, i64 1), %471 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill8kPhoneReE, i64 0, i64 1), %469 ], [ %480, %564 ]
  %568 = phi i64 [ %435, %471 ], [ %435, %469 ], [ %481, %564 ]
  %569 = phi i16* [ %467, %471 ], [ %467, %469 ], [ %482, %564 ]
  %570 = add i64 %568, -1
  %571 = and i64 %568, 7
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %584, label %573

573:                                              ; preds = %566, %573
  %574 = phi i16* [ %581, %573 ], [ %567, %566 ]
  %575 = phi i64 [ %580, %573 ], [ %568, %566 ]
  %576 = phi i16* [ %578, %573 ], [ %569, %566 ]
  %577 = phi i64 [ %582, %573 ], [ %571, %566 ]
  %578 = getelementptr inbounds i16, i16* %576, i64 1
  %579 = load i16, i16* %574, align 2
  store i16 %579, i16* %578, align 2
  %580 = add i64 %575, -1
  %581 = getelementptr inbounds i16, i16* %574, i64 1
  %582 = add i64 %577, -1
  %583 = icmp eq i64 %582, 0
  br i1 %583, label %584, label %573, !llvm.loop !35

584:                                              ; preds = %573, %566
  %585 = phi i16* [ %567, %566 ], [ %581, %573 ]
  %586 = phi i64 [ %568, %566 ], [ %580, %573 ]
  %587 = phi i16* [ %569, %566 ], [ %578, %573 ]
  %588 = icmp ult i64 %570, 7
  br i1 %588, label %619, label %589

589:                                              ; preds = %584, %589
  %590 = phi i16* [ %617, %589 ], [ %585, %584 ]
  %591 = phi i64 [ %616, %589 ], [ %586, %584 ]
  %592 = phi i16* [ %614, %589 ], [ %587, %584 ]
  %593 = getelementptr inbounds i16, i16* %592, i64 1
  %594 = load i16, i16* %590, align 2
  store i16 %594, i16* %593, align 2
  %595 = getelementptr inbounds i16, i16* %590, i64 1
  %596 = getelementptr inbounds i16, i16* %592, i64 2
  %597 = load i16, i16* %595, align 2
  store i16 %597, i16* %596, align 2
  %598 = getelementptr inbounds i16, i16* %590, i64 2
  %599 = getelementptr inbounds i16, i16* %592, i64 3
  %600 = load i16, i16* %598, align 2
  store i16 %600, i16* %599, align 2
  %601 = getelementptr inbounds i16, i16* %590, i64 3
  %602 = getelementptr inbounds i16, i16* %592, i64 4
  %603 = load i16, i16* %601, align 2
  store i16 %603, i16* %602, align 2
  %604 = getelementptr inbounds i16, i16* %590, i64 4
  %605 = getelementptr inbounds i16, i16* %592, i64 5
  %606 = load i16, i16* %604, align 2
  store i16 %606, i16* %605, align 2
  %607 = getelementptr inbounds i16, i16* %590, i64 5
  %608 = getelementptr inbounds i16, i16* %592, i64 6
  %609 = load i16, i16* %607, align 2
  store i16 %609, i16* %608, align 2
  %610 = getelementptr inbounds i16, i16* %590, i64 6
  %611 = getelementptr inbounds i16, i16* %592, i64 7
  %612 = load i16, i16* %610, align 2
  store i16 %612, i16* %611, align 2
  %613 = getelementptr inbounds i16, i16* %590, i64 7
  %614 = getelementptr inbounds i16, i16* %592, i64 8
  %615 = load i16, i16* %613, align 2
  store i16 %615, i16* %614, align 2
  %616 = add i64 %591, -8
  %617 = getelementptr inbounds i16, i16* %590, i64 8
  %618 = icmp eq i64 %616, 0
  br i1 %618, label %619, label %589, !llvm.loop !36

619:                                              ; preds = %584, %589, %466, %564, %430, %460
  %620 = phi i64 [ 0, %460 ], [ 0, %430 ], [ %437, %564 ], [ %437, %466 ], [ %437, %589 ], [ %437, %584 ]
  %621 = phi i16* [ %464, %460 ], [ %433, %430 ], [ %467, %564 ], [ %467, %466 ], [ %467, %589 ], [ %467, %584 ]
  %622 = getelementptr inbounds i16, i16* %621, i64 %620
  store i16 0, i16* %622, align 2
  br label %1605

623:                                              ; preds = %2
  %624 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhonePrefixSeparatorReE, i64 0, i64 0), align 2
  %625 = icmp eq i16 %624, 0
  br i1 %625, label %626, label %630

626:                                              ; preds = %623
  %627 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %628 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %627, i64 0, i32 1, i32 1
  store i8 0, i8* %628, align 1
  %629 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %815

630:                                              ; preds = %623, %630
  %631 = phi i64 [ %633, %630 ], [ 0, %623 ]
  %632 = phi i16* [ %634, %630 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhonePrefixSeparatorReE, i64 0, i64 0), %623 ]
  %633 = add i64 %631, 1
  %634 = getelementptr inbounds i16, i16* %632, i64 1
  %635 = load i16, i16* %634, align 2
  %636 = icmp eq i16 %635, 0
  br i1 %636, label %637, label %630

637:                                              ; preds = %630
  %638 = icmp ugt i64 %633, 9223372036854775791
  br i1 %638, label %639, label %641

639:                                              ; preds = %637
  %640 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %640) #11
  unreachable

641:                                              ; preds = %637
  %642 = icmp ult i64 %633, 11
  br i1 %642, label %656, label %643

643:                                              ; preds = %641
  %644 = add nuw nsw i64 %631, 9
  %645 = and i64 %644, -8
  %646 = icmp slt i64 %645, 0
  br i1 %646, label %647, label %648

647:                                              ; preds = %643
  tail call void @abort() #11
  unreachable

648:                                              ; preds = %643
  %649 = shl i64 %645, 1
  %650 = tail call i8* @_Znwm(i64 %649) #9
  %651 = bitcast i8* %650 to i16*
  %652 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %650, i8** %652, align 8
  %653 = or i64 %645, -9223372036854775808
  %654 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %653, i64* %654, align 8
  %655 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %633, i64* %655, align 8
  br label %662

656:                                              ; preds = %641
  %657 = trunc i64 %633 to i8
  %658 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %659 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %658, i64 0, i32 1, i32 1
  store i8 %657, i8* %659, align 1
  %660 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %661 = icmp eq i64 %633, 0
  br i1 %661, label %815, label %662

662:                                              ; preds = %656, %648
  %663 = phi i16* [ %651, %648 ], [ %660, %656 ]
  store i16 %624, i16* %663, align 2
  %664 = icmp eq i64 %631, 0
  br i1 %664, label %815, label %665

665:                                              ; preds = %662
  %666 = icmp ult i64 %631, 16
  br i1 %666, label %762, label %667

667:                                              ; preds = %665
  %668 = getelementptr i16, i16* %663, i64 1
  %669 = getelementptr i16, i16* %663, i64 %633
  %670 = getelementptr [0 x i16], [0 x i16]* @_ZN8autofill23kPhonePrefixSeparatorReE, i64 0, i64 %633
  %671 = icmp ult i16* %668, %670
  %672 = icmp ugt i16* %669, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhonePrefixSeparatorReE, i64 0, i64 1)
  %673 = and i1 %671, %672
  br i1 %673, label %762, label %674

674:                                              ; preds = %667
  %675 = and i64 %631, -16
  %676 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhonePrefixSeparatorReE, i64 0, i64 1), i64 %675
  %677 = sub i64 %631, %675
  %678 = getelementptr i16, i16* %663, i64 %675
  %679 = add i64 %675, -16
  %680 = lshr exact i64 %679, 4
  %681 = add nuw nsw i64 %680, 1
  %682 = and i64 %681, 3
  %683 = icmp ult i64 %679, 48
  br i1 %683, label %739, label %684

684:                                              ; preds = %674
  %685 = sub nsw i64 %681, %682
  %686 = getelementptr i16, i16* %663, i64 1
  %687 = getelementptr i16, i16* %663, i64 1
  %688 = getelementptr i16, i16* %663, i64 1
  %689 = getelementptr i16, i16* %663, i64 1
  br label %690

690:                                              ; preds = %690, %684
  %691 = phi i64 [ 0, %684 ], [ %736, %690 ]
  %692 = phi i64 [ %685, %684 ], [ %737, %690 ]
  %693 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhonePrefixSeparatorReE, i64 0, i64 1), i64 %691
  %694 = getelementptr inbounds i16, i16* %686, i64 %691
  %695 = bitcast i16* %693 to <8 x i16>*
  %696 = load <8 x i16>, <8 x i16>* %695, align 2, !alias.scope !37
  %697 = getelementptr i16, i16* %693, i64 8
  %698 = bitcast i16* %697 to <8 x i16>*
  %699 = load <8 x i16>, <8 x i16>* %698, align 2, !alias.scope !37
  %700 = bitcast i16* %694 to <8 x i16>*
  store <8 x i16> %696, <8 x i16>* %700, align 2, !alias.scope !40, !noalias !37
  %701 = getelementptr inbounds i16, i16* %694, i64 8
  %702 = bitcast i16* %701 to <8 x i16>*
  store <8 x i16> %699, <8 x i16>* %702, align 2, !alias.scope !40, !noalias !37
  %703 = or i64 %691, 16
  %704 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhonePrefixSeparatorReE, i64 0, i64 1), i64 %703
  %705 = getelementptr inbounds i16, i16* %687, i64 %703
  %706 = bitcast i16* %704 to <8 x i16>*
  %707 = load <8 x i16>, <8 x i16>* %706, align 2, !alias.scope !37
  %708 = getelementptr i16, i16* %704, i64 8
  %709 = bitcast i16* %708 to <8 x i16>*
  %710 = load <8 x i16>, <8 x i16>* %709, align 2, !alias.scope !37
  %711 = bitcast i16* %705 to <8 x i16>*
  store <8 x i16> %707, <8 x i16>* %711, align 2, !alias.scope !40, !noalias !37
  %712 = getelementptr inbounds i16, i16* %705, i64 8
  %713 = bitcast i16* %712 to <8 x i16>*
  store <8 x i16> %710, <8 x i16>* %713, align 2, !alias.scope !40, !noalias !37
  %714 = or i64 %691, 32
  %715 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhonePrefixSeparatorReE, i64 0, i64 1), i64 %714
  %716 = getelementptr inbounds i16, i16* %688, i64 %714
  %717 = bitcast i16* %715 to <8 x i16>*
  %718 = load <8 x i16>, <8 x i16>* %717, align 2, !alias.scope !37
  %719 = getelementptr i16, i16* %715, i64 8
  %720 = bitcast i16* %719 to <8 x i16>*
  %721 = load <8 x i16>, <8 x i16>* %720, align 2, !alias.scope !37
  %722 = bitcast i16* %716 to <8 x i16>*
  store <8 x i16> %718, <8 x i16>* %722, align 2, !alias.scope !40, !noalias !37
  %723 = getelementptr inbounds i16, i16* %716, i64 8
  %724 = bitcast i16* %723 to <8 x i16>*
  store <8 x i16> %721, <8 x i16>* %724, align 2, !alias.scope !40, !noalias !37
  %725 = or i64 %691, 48
  %726 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhonePrefixSeparatorReE, i64 0, i64 1), i64 %725
  %727 = getelementptr inbounds i16, i16* %689, i64 %725
  %728 = bitcast i16* %726 to <8 x i16>*
  %729 = load <8 x i16>, <8 x i16>* %728, align 2, !alias.scope !37
  %730 = getelementptr i16, i16* %726, i64 8
  %731 = bitcast i16* %730 to <8 x i16>*
  %732 = load <8 x i16>, <8 x i16>* %731, align 2, !alias.scope !37
  %733 = bitcast i16* %727 to <8 x i16>*
  store <8 x i16> %729, <8 x i16>* %733, align 2, !alias.scope !40, !noalias !37
  %734 = getelementptr inbounds i16, i16* %727, i64 8
  %735 = bitcast i16* %734 to <8 x i16>*
  store <8 x i16> %732, <8 x i16>* %735, align 2, !alias.scope !40, !noalias !37
  %736 = add i64 %691, 64
  %737 = add i64 %692, -4
  %738 = icmp eq i64 %737, 0
  br i1 %738, label %739, label %690, !llvm.loop !42

739:                                              ; preds = %690, %674
  %740 = phi i64 [ 0, %674 ], [ %736, %690 ]
  %741 = icmp eq i64 %682, 0
  br i1 %741, label %760, label %742

742:                                              ; preds = %739
  %743 = getelementptr i16, i16* %663, i64 1
  br label %744

744:                                              ; preds = %744, %742
  %745 = phi i64 [ %740, %742 ], [ %757, %744 ]
  %746 = phi i64 [ %682, %742 ], [ %758, %744 ]
  %747 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhonePrefixSeparatorReE, i64 0, i64 1), i64 %745
  %748 = getelementptr inbounds i16, i16* %743, i64 %745
  %749 = bitcast i16* %747 to <8 x i16>*
  %750 = load <8 x i16>, <8 x i16>* %749, align 2, !alias.scope !37
  %751 = getelementptr i16, i16* %747, i64 8
  %752 = bitcast i16* %751 to <8 x i16>*
  %753 = load <8 x i16>, <8 x i16>* %752, align 2, !alias.scope !37
  %754 = bitcast i16* %748 to <8 x i16>*
  store <8 x i16> %750, <8 x i16>* %754, align 2, !alias.scope !40, !noalias !37
  %755 = getelementptr inbounds i16, i16* %748, i64 8
  %756 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %753, <8 x i16>* %756, align 2, !alias.scope !40, !noalias !37
  %757 = add i64 %745, 16
  %758 = add i64 %746, -1
  %759 = icmp eq i64 %758, 0
  br i1 %759, label %760, label %744, !llvm.loop !43

760:                                              ; preds = %744, %739
  %761 = icmp eq i64 %631, %675
  br i1 %761, label %815, label %762

762:                                              ; preds = %760, %667, %665
  %763 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhonePrefixSeparatorReE, i64 0, i64 1), %667 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhonePrefixSeparatorReE, i64 0, i64 1), %665 ], [ %676, %760 ]
  %764 = phi i64 [ %631, %667 ], [ %631, %665 ], [ %677, %760 ]
  %765 = phi i16* [ %663, %667 ], [ %663, %665 ], [ %678, %760 ]
  %766 = add i64 %764, -1
  %767 = and i64 %764, 7
  %768 = icmp eq i64 %767, 0
  br i1 %768, label %780, label %769

769:                                              ; preds = %762, %769
  %770 = phi i16* [ %777, %769 ], [ %763, %762 ]
  %771 = phi i64 [ %776, %769 ], [ %764, %762 ]
  %772 = phi i16* [ %774, %769 ], [ %765, %762 ]
  %773 = phi i64 [ %778, %769 ], [ %767, %762 ]
  %774 = getelementptr inbounds i16, i16* %772, i64 1
  %775 = load i16, i16* %770, align 2
  store i16 %775, i16* %774, align 2
  %776 = add i64 %771, -1
  %777 = getelementptr inbounds i16, i16* %770, i64 1
  %778 = add i64 %773, -1
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %780, label %769, !llvm.loop !44

780:                                              ; preds = %769, %762
  %781 = phi i16* [ %763, %762 ], [ %777, %769 ]
  %782 = phi i64 [ %764, %762 ], [ %776, %769 ]
  %783 = phi i16* [ %765, %762 ], [ %774, %769 ]
  %784 = icmp ult i64 %766, 7
  br i1 %784, label %815, label %785

785:                                              ; preds = %780, %785
  %786 = phi i16* [ %813, %785 ], [ %781, %780 ]
  %787 = phi i64 [ %812, %785 ], [ %782, %780 ]
  %788 = phi i16* [ %810, %785 ], [ %783, %780 ]
  %789 = getelementptr inbounds i16, i16* %788, i64 1
  %790 = load i16, i16* %786, align 2
  store i16 %790, i16* %789, align 2
  %791 = getelementptr inbounds i16, i16* %786, i64 1
  %792 = getelementptr inbounds i16, i16* %788, i64 2
  %793 = load i16, i16* %791, align 2
  store i16 %793, i16* %792, align 2
  %794 = getelementptr inbounds i16, i16* %786, i64 2
  %795 = getelementptr inbounds i16, i16* %788, i64 3
  %796 = load i16, i16* %794, align 2
  store i16 %796, i16* %795, align 2
  %797 = getelementptr inbounds i16, i16* %786, i64 3
  %798 = getelementptr inbounds i16, i16* %788, i64 4
  %799 = load i16, i16* %797, align 2
  store i16 %799, i16* %798, align 2
  %800 = getelementptr inbounds i16, i16* %786, i64 4
  %801 = getelementptr inbounds i16, i16* %788, i64 5
  %802 = load i16, i16* %800, align 2
  store i16 %802, i16* %801, align 2
  %803 = getelementptr inbounds i16, i16* %786, i64 5
  %804 = getelementptr inbounds i16, i16* %788, i64 6
  %805 = load i16, i16* %803, align 2
  store i16 %805, i16* %804, align 2
  %806 = getelementptr inbounds i16, i16* %786, i64 6
  %807 = getelementptr inbounds i16, i16* %788, i64 7
  %808 = load i16, i16* %806, align 2
  store i16 %808, i16* %807, align 2
  %809 = getelementptr inbounds i16, i16* %786, i64 7
  %810 = getelementptr inbounds i16, i16* %788, i64 8
  %811 = load i16, i16* %809, align 2
  store i16 %811, i16* %810, align 2
  %812 = add i64 %787, -8
  %813 = getelementptr inbounds i16, i16* %786, i64 8
  %814 = icmp eq i64 %812, 0
  br i1 %814, label %815, label %785, !llvm.loop !45

815:                                              ; preds = %780, %785, %662, %760, %626, %656
  %816 = phi i64 [ 0, %656 ], [ 0, %626 ], [ %633, %760 ], [ %633, %662 ], [ %633, %785 ], [ %633, %780 ]
  %817 = phi i16* [ %660, %656 ], [ %629, %626 ], [ %663, %760 ], [ %663, %662 ], [ %663, %785 ], [ %663, %780 ]
  %818 = getelementptr inbounds i16, i16* %817, i64 %816
  store i16 0, i16* %818, align 2
  br label %1605

819:                                              ; preds = %2
  %820 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhonePrefixReE, i64 0, i64 0), align 2
  %821 = icmp eq i16 %820, 0
  br i1 %821, label %822, label %826

822:                                              ; preds = %819
  %823 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %824 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %823, i64 0, i32 1, i32 1
  store i8 0, i8* %824, align 1
  %825 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %1011

826:                                              ; preds = %819, %826
  %827 = phi i64 [ %829, %826 ], [ 0, %819 ]
  %828 = phi i16* [ %830, %826 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhonePrefixReE, i64 0, i64 0), %819 ]
  %829 = add i64 %827, 1
  %830 = getelementptr inbounds i16, i16* %828, i64 1
  %831 = load i16, i16* %830, align 2
  %832 = icmp eq i16 %831, 0
  br i1 %832, label %833, label %826

833:                                              ; preds = %826
  %834 = icmp ugt i64 %829, 9223372036854775791
  br i1 %834, label %835, label %837

835:                                              ; preds = %833
  %836 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %836) #11
  unreachable

837:                                              ; preds = %833
  %838 = icmp ult i64 %829, 11
  br i1 %838, label %852, label %839

839:                                              ; preds = %837
  %840 = add nuw nsw i64 %827, 9
  %841 = and i64 %840, -8
  %842 = icmp slt i64 %841, 0
  br i1 %842, label %843, label %844

843:                                              ; preds = %839
  tail call void @abort() #11
  unreachable

844:                                              ; preds = %839
  %845 = shl i64 %841, 1
  %846 = tail call i8* @_Znwm(i64 %845) #9
  %847 = bitcast i8* %846 to i16*
  %848 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %846, i8** %848, align 8
  %849 = or i64 %841, -9223372036854775808
  %850 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %849, i64* %850, align 8
  %851 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %829, i64* %851, align 8
  br label %858

852:                                              ; preds = %837
  %853 = trunc i64 %829 to i8
  %854 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %855 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %854, i64 0, i32 1, i32 1
  store i8 %853, i8* %855, align 1
  %856 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %857 = icmp eq i64 %829, 0
  br i1 %857, label %1011, label %858

858:                                              ; preds = %852, %844
  %859 = phi i16* [ %847, %844 ], [ %856, %852 ]
  store i16 %820, i16* %859, align 2
  %860 = icmp eq i64 %827, 0
  br i1 %860, label %1011, label %861

861:                                              ; preds = %858
  %862 = icmp ult i64 %827, 16
  br i1 %862, label %958, label %863

863:                                              ; preds = %861
  %864 = getelementptr i16, i16* %859, i64 1
  %865 = getelementptr i16, i16* %859, i64 %829
  %866 = getelementptr [0 x i16], [0 x i16]* @_ZN8autofill14kPhonePrefixReE, i64 0, i64 %829
  %867 = icmp ult i16* %864, %866
  %868 = icmp ugt i16* %865, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhonePrefixReE, i64 0, i64 1)
  %869 = and i1 %867, %868
  br i1 %869, label %958, label %870

870:                                              ; preds = %863
  %871 = and i64 %827, -16
  %872 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhonePrefixReE, i64 0, i64 1), i64 %871
  %873 = sub i64 %827, %871
  %874 = getelementptr i16, i16* %859, i64 %871
  %875 = add i64 %871, -16
  %876 = lshr exact i64 %875, 4
  %877 = add nuw nsw i64 %876, 1
  %878 = and i64 %877, 3
  %879 = icmp ult i64 %875, 48
  br i1 %879, label %935, label %880

880:                                              ; preds = %870
  %881 = sub nsw i64 %877, %878
  %882 = getelementptr i16, i16* %859, i64 1
  %883 = getelementptr i16, i16* %859, i64 1
  %884 = getelementptr i16, i16* %859, i64 1
  %885 = getelementptr i16, i16* %859, i64 1
  br label %886

886:                                              ; preds = %886, %880
  %887 = phi i64 [ 0, %880 ], [ %932, %886 ]
  %888 = phi i64 [ %881, %880 ], [ %933, %886 ]
  %889 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhonePrefixReE, i64 0, i64 1), i64 %887
  %890 = getelementptr inbounds i16, i16* %882, i64 %887
  %891 = bitcast i16* %889 to <8 x i16>*
  %892 = load <8 x i16>, <8 x i16>* %891, align 2, !alias.scope !46
  %893 = getelementptr i16, i16* %889, i64 8
  %894 = bitcast i16* %893 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 2, !alias.scope !46
  %896 = bitcast i16* %890 to <8 x i16>*
  store <8 x i16> %892, <8 x i16>* %896, align 2, !alias.scope !49, !noalias !46
  %897 = getelementptr inbounds i16, i16* %890, i64 8
  %898 = bitcast i16* %897 to <8 x i16>*
  store <8 x i16> %895, <8 x i16>* %898, align 2, !alias.scope !49, !noalias !46
  %899 = or i64 %887, 16
  %900 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhonePrefixReE, i64 0, i64 1), i64 %899
  %901 = getelementptr inbounds i16, i16* %883, i64 %899
  %902 = bitcast i16* %900 to <8 x i16>*
  %903 = load <8 x i16>, <8 x i16>* %902, align 2, !alias.scope !46
  %904 = getelementptr i16, i16* %900, i64 8
  %905 = bitcast i16* %904 to <8 x i16>*
  %906 = load <8 x i16>, <8 x i16>* %905, align 2, !alias.scope !46
  %907 = bitcast i16* %901 to <8 x i16>*
  store <8 x i16> %903, <8 x i16>* %907, align 2, !alias.scope !49, !noalias !46
  %908 = getelementptr inbounds i16, i16* %901, i64 8
  %909 = bitcast i16* %908 to <8 x i16>*
  store <8 x i16> %906, <8 x i16>* %909, align 2, !alias.scope !49, !noalias !46
  %910 = or i64 %887, 32
  %911 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhonePrefixReE, i64 0, i64 1), i64 %910
  %912 = getelementptr inbounds i16, i16* %884, i64 %910
  %913 = bitcast i16* %911 to <8 x i16>*
  %914 = load <8 x i16>, <8 x i16>* %913, align 2, !alias.scope !46
  %915 = getelementptr i16, i16* %911, i64 8
  %916 = bitcast i16* %915 to <8 x i16>*
  %917 = load <8 x i16>, <8 x i16>* %916, align 2, !alias.scope !46
  %918 = bitcast i16* %912 to <8 x i16>*
  store <8 x i16> %914, <8 x i16>* %918, align 2, !alias.scope !49, !noalias !46
  %919 = getelementptr inbounds i16, i16* %912, i64 8
  %920 = bitcast i16* %919 to <8 x i16>*
  store <8 x i16> %917, <8 x i16>* %920, align 2, !alias.scope !49, !noalias !46
  %921 = or i64 %887, 48
  %922 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhonePrefixReE, i64 0, i64 1), i64 %921
  %923 = getelementptr inbounds i16, i16* %885, i64 %921
  %924 = bitcast i16* %922 to <8 x i16>*
  %925 = load <8 x i16>, <8 x i16>* %924, align 2, !alias.scope !46
  %926 = getelementptr i16, i16* %922, i64 8
  %927 = bitcast i16* %926 to <8 x i16>*
  %928 = load <8 x i16>, <8 x i16>* %927, align 2, !alias.scope !46
  %929 = bitcast i16* %923 to <8 x i16>*
  store <8 x i16> %925, <8 x i16>* %929, align 2, !alias.scope !49, !noalias !46
  %930 = getelementptr inbounds i16, i16* %923, i64 8
  %931 = bitcast i16* %930 to <8 x i16>*
  store <8 x i16> %928, <8 x i16>* %931, align 2, !alias.scope !49, !noalias !46
  %932 = add i64 %887, 64
  %933 = add i64 %888, -4
  %934 = icmp eq i64 %933, 0
  br i1 %934, label %935, label %886, !llvm.loop !51

935:                                              ; preds = %886, %870
  %936 = phi i64 [ 0, %870 ], [ %932, %886 ]
  %937 = icmp eq i64 %878, 0
  br i1 %937, label %956, label %938

938:                                              ; preds = %935
  %939 = getelementptr i16, i16* %859, i64 1
  br label %940

940:                                              ; preds = %940, %938
  %941 = phi i64 [ %936, %938 ], [ %953, %940 ]
  %942 = phi i64 [ %878, %938 ], [ %954, %940 ]
  %943 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhonePrefixReE, i64 0, i64 1), i64 %941
  %944 = getelementptr inbounds i16, i16* %939, i64 %941
  %945 = bitcast i16* %943 to <8 x i16>*
  %946 = load <8 x i16>, <8 x i16>* %945, align 2, !alias.scope !46
  %947 = getelementptr i16, i16* %943, i64 8
  %948 = bitcast i16* %947 to <8 x i16>*
  %949 = load <8 x i16>, <8 x i16>* %948, align 2, !alias.scope !46
  %950 = bitcast i16* %944 to <8 x i16>*
  store <8 x i16> %946, <8 x i16>* %950, align 2, !alias.scope !49, !noalias !46
  %951 = getelementptr inbounds i16, i16* %944, i64 8
  %952 = bitcast i16* %951 to <8 x i16>*
  store <8 x i16> %949, <8 x i16>* %952, align 2, !alias.scope !49, !noalias !46
  %953 = add i64 %941, 16
  %954 = add i64 %942, -1
  %955 = icmp eq i64 %954, 0
  br i1 %955, label %956, label %940, !llvm.loop !52

956:                                              ; preds = %940, %935
  %957 = icmp eq i64 %827, %871
  br i1 %957, label %1011, label %958

958:                                              ; preds = %956, %863, %861
  %959 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhonePrefixReE, i64 0, i64 1), %863 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhonePrefixReE, i64 0, i64 1), %861 ], [ %872, %956 ]
  %960 = phi i64 [ %827, %863 ], [ %827, %861 ], [ %873, %956 ]
  %961 = phi i16* [ %859, %863 ], [ %859, %861 ], [ %874, %956 ]
  %962 = add i64 %960, -1
  %963 = and i64 %960, 7
  %964 = icmp eq i64 %963, 0
  br i1 %964, label %976, label %965

965:                                              ; preds = %958, %965
  %966 = phi i16* [ %973, %965 ], [ %959, %958 ]
  %967 = phi i64 [ %972, %965 ], [ %960, %958 ]
  %968 = phi i16* [ %970, %965 ], [ %961, %958 ]
  %969 = phi i64 [ %974, %965 ], [ %963, %958 ]
  %970 = getelementptr inbounds i16, i16* %968, i64 1
  %971 = load i16, i16* %966, align 2
  store i16 %971, i16* %970, align 2
  %972 = add i64 %967, -1
  %973 = getelementptr inbounds i16, i16* %966, i64 1
  %974 = add i64 %969, -1
  %975 = icmp eq i64 %974, 0
  br i1 %975, label %976, label %965, !llvm.loop !53

976:                                              ; preds = %965, %958
  %977 = phi i16* [ %959, %958 ], [ %973, %965 ]
  %978 = phi i64 [ %960, %958 ], [ %972, %965 ]
  %979 = phi i16* [ %961, %958 ], [ %970, %965 ]
  %980 = icmp ult i64 %962, 7
  br i1 %980, label %1011, label %981

981:                                              ; preds = %976, %981
  %982 = phi i16* [ %1009, %981 ], [ %977, %976 ]
  %983 = phi i64 [ %1008, %981 ], [ %978, %976 ]
  %984 = phi i16* [ %1006, %981 ], [ %979, %976 ]
  %985 = getelementptr inbounds i16, i16* %984, i64 1
  %986 = load i16, i16* %982, align 2
  store i16 %986, i16* %985, align 2
  %987 = getelementptr inbounds i16, i16* %982, i64 1
  %988 = getelementptr inbounds i16, i16* %984, i64 2
  %989 = load i16, i16* %987, align 2
  store i16 %989, i16* %988, align 2
  %990 = getelementptr inbounds i16, i16* %982, i64 2
  %991 = getelementptr inbounds i16, i16* %984, i64 3
  %992 = load i16, i16* %990, align 2
  store i16 %992, i16* %991, align 2
  %993 = getelementptr inbounds i16, i16* %982, i64 3
  %994 = getelementptr inbounds i16, i16* %984, i64 4
  %995 = load i16, i16* %993, align 2
  store i16 %995, i16* %994, align 2
  %996 = getelementptr inbounds i16, i16* %982, i64 4
  %997 = getelementptr inbounds i16, i16* %984, i64 5
  %998 = load i16, i16* %996, align 2
  store i16 %998, i16* %997, align 2
  %999 = getelementptr inbounds i16, i16* %982, i64 5
  %1000 = getelementptr inbounds i16, i16* %984, i64 6
  %1001 = load i16, i16* %999, align 2
  store i16 %1001, i16* %1000, align 2
  %1002 = getelementptr inbounds i16, i16* %982, i64 6
  %1003 = getelementptr inbounds i16, i16* %984, i64 7
  %1004 = load i16, i16* %1002, align 2
  store i16 %1004, i16* %1003, align 2
  %1005 = getelementptr inbounds i16, i16* %982, i64 7
  %1006 = getelementptr inbounds i16, i16* %984, i64 8
  %1007 = load i16, i16* %1005, align 2
  store i16 %1007, i16* %1006, align 2
  %1008 = add i64 %983, -8
  %1009 = getelementptr inbounds i16, i16* %982, i64 8
  %1010 = icmp eq i64 %1008, 0
  br i1 %1010, label %1011, label %981, !llvm.loop !54

1011:                                             ; preds = %976, %981, %858, %956, %822, %852
  %1012 = phi i64 [ 0, %852 ], [ 0, %822 ], [ %829, %956 ], [ %829, %858 ], [ %829, %981 ], [ %829, %976 ]
  %1013 = phi i16* [ %856, %852 ], [ %825, %822 ], [ %859, %956 ], [ %859, %858 ], [ %859, %981 ], [ %859, %976 ]
  %1014 = getelementptr inbounds i16, i16* %1013, i64 %1012
  store i16 0, i16* %1014, align 2
  br label %1605

1015:                                             ; preds = %2
  %1016 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 0), align 2
  %1017 = icmp eq i16 %1016, 0
  br i1 %1017, label %1018, label %1022

1018:                                             ; preds = %1015
  %1019 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1020 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1019, i64 0, i32 1, i32 1
  store i8 0, i8* %1020, align 1
  %1021 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %1207

1022:                                             ; preds = %1015, %1022
  %1023 = phi i64 [ %1025, %1022 ], [ 0, %1015 ]
  %1024 = phi i16* [ %1026, %1022 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 0), %1015 ]
  %1025 = add i64 %1023, 1
  %1026 = getelementptr inbounds i16, i16* %1024, i64 1
  %1027 = load i16, i16* %1026, align 2
  %1028 = icmp eq i16 %1027, 0
  br i1 %1028, label %1029, label %1022

1029:                                             ; preds = %1022
  %1030 = icmp ugt i64 %1025, 9223372036854775791
  br i1 %1030, label %1031, label %1033

1031:                                             ; preds = %1029
  %1032 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1032) #11
  unreachable

1033:                                             ; preds = %1029
  %1034 = icmp ult i64 %1025, 11
  br i1 %1034, label %1048, label %1035

1035:                                             ; preds = %1033
  %1036 = add nuw nsw i64 %1023, 9
  %1037 = and i64 %1036, -8
  %1038 = icmp slt i64 %1037, 0
  br i1 %1038, label %1039, label %1040

1039:                                             ; preds = %1035
  tail call void @abort() #11
  unreachable

1040:                                             ; preds = %1035
  %1041 = shl i64 %1037, 1
  %1042 = tail call i8* @_Znwm(i64 %1041) #9
  %1043 = bitcast i8* %1042 to i16*
  %1044 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %1042, i8** %1044, align 8
  %1045 = or i64 %1037, -9223372036854775808
  %1046 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1045, i64* %1046, align 8
  %1047 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1025, i64* %1047, align 8
  br label %1054

1048:                                             ; preds = %1033
  %1049 = trunc i64 %1025 to i8
  %1050 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1051 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1050, i64 0, i32 1, i32 1
  store i8 %1049, i8* %1051, align 1
  %1052 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %1053 = icmp eq i64 %1025, 0
  br i1 %1053, label %1207, label %1054

1054:                                             ; preds = %1048, %1040
  %1055 = phi i16* [ %1043, %1040 ], [ %1052, %1048 ]
  store i16 %1016, i16* %1055, align 2
  %1056 = icmp eq i64 %1023, 0
  br i1 %1056, label %1207, label %1057

1057:                                             ; preds = %1054
  %1058 = icmp ult i64 %1023, 16
  br i1 %1058, label %1154, label %1059

1059:                                             ; preds = %1057
  %1060 = getelementptr i16, i16* %1055, i64 1
  %1061 = getelementptr i16, i16* %1055, i64 %1025
  %1062 = getelementptr [0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 %1025
  %1063 = icmp ult i16* %1060, %1062
  %1064 = icmp ugt i16* %1061, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 1)
  %1065 = and i1 %1063, %1064
  br i1 %1065, label %1154, label %1066

1066:                                             ; preds = %1059
  %1067 = and i64 %1023, -16
  %1068 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 1), i64 %1067
  %1069 = sub i64 %1023, %1067
  %1070 = getelementptr i16, i16* %1055, i64 %1067
  %1071 = add i64 %1067, -16
  %1072 = lshr exact i64 %1071, 4
  %1073 = add nuw nsw i64 %1072, 1
  %1074 = and i64 %1073, 3
  %1075 = icmp ult i64 %1071, 48
  br i1 %1075, label %1131, label %1076

1076:                                             ; preds = %1066
  %1077 = sub nsw i64 %1073, %1074
  %1078 = getelementptr i16, i16* %1055, i64 1
  %1079 = getelementptr i16, i16* %1055, i64 1
  %1080 = getelementptr i16, i16* %1055, i64 1
  %1081 = getelementptr i16, i16* %1055, i64 1
  br label %1082

1082:                                             ; preds = %1082, %1076
  %1083 = phi i64 [ 0, %1076 ], [ %1128, %1082 ]
  %1084 = phi i64 [ %1077, %1076 ], [ %1129, %1082 ]
  %1085 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 1), i64 %1083
  %1086 = getelementptr inbounds i16, i16* %1078, i64 %1083
  %1087 = bitcast i16* %1085 to <8 x i16>*
  %1088 = load <8 x i16>, <8 x i16>* %1087, align 2, !alias.scope !55
  %1089 = getelementptr i16, i16* %1085, i64 8
  %1090 = bitcast i16* %1089 to <8 x i16>*
  %1091 = load <8 x i16>, <8 x i16>* %1090, align 2, !alias.scope !55
  %1092 = bitcast i16* %1086 to <8 x i16>*
  store <8 x i16> %1088, <8 x i16>* %1092, align 2, !alias.scope !58, !noalias !55
  %1093 = getelementptr inbounds i16, i16* %1086, i64 8
  %1094 = bitcast i16* %1093 to <8 x i16>*
  store <8 x i16> %1091, <8 x i16>* %1094, align 2, !alias.scope !58, !noalias !55
  %1095 = or i64 %1083, 16
  %1096 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 1), i64 %1095
  %1097 = getelementptr inbounds i16, i16* %1079, i64 %1095
  %1098 = bitcast i16* %1096 to <8 x i16>*
  %1099 = load <8 x i16>, <8 x i16>* %1098, align 2, !alias.scope !55
  %1100 = getelementptr i16, i16* %1096, i64 8
  %1101 = bitcast i16* %1100 to <8 x i16>*
  %1102 = load <8 x i16>, <8 x i16>* %1101, align 2, !alias.scope !55
  %1103 = bitcast i16* %1097 to <8 x i16>*
  store <8 x i16> %1099, <8 x i16>* %1103, align 2, !alias.scope !58, !noalias !55
  %1104 = getelementptr inbounds i16, i16* %1097, i64 8
  %1105 = bitcast i16* %1104 to <8 x i16>*
  store <8 x i16> %1102, <8 x i16>* %1105, align 2, !alias.scope !58, !noalias !55
  %1106 = or i64 %1083, 32
  %1107 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 1), i64 %1106
  %1108 = getelementptr inbounds i16, i16* %1080, i64 %1106
  %1109 = bitcast i16* %1107 to <8 x i16>*
  %1110 = load <8 x i16>, <8 x i16>* %1109, align 2, !alias.scope !55
  %1111 = getelementptr i16, i16* %1107, i64 8
  %1112 = bitcast i16* %1111 to <8 x i16>*
  %1113 = load <8 x i16>, <8 x i16>* %1112, align 2, !alias.scope !55
  %1114 = bitcast i16* %1108 to <8 x i16>*
  store <8 x i16> %1110, <8 x i16>* %1114, align 2, !alias.scope !58, !noalias !55
  %1115 = getelementptr inbounds i16, i16* %1108, i64 8
  %1116 = bitcast i16* %1115 to <8 x i16>*
  store <8 x i16> %1113, <8 x i16>* %1116, align 2, !alias.scope !58, !noalias !55
  %1117 = or i64 %1083, 48
  %1118 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 1), i64 %1117
  %1119 = getelementptr inbounds i16, i16* %1081, i64 %1117
  %1120 = bitcast i16* %1118 to <8 x i16>*
  %1121 = load <8 x i16>, <8 x i16>* %1120, align 2, !alias.scope !55
  %1122 = getelementptr i16, i16* %1118, i64 8
  %1123 = bitcast i16* %1122 to <8 x i16>*
  %1124 = load <8 x i16>, <8 x i16>* %1123, align 2, !alias.scope !55
  %1125 = bitcast i16* %1119 to <8 x i16>*
  store <8 x i16> %1121, <8 x i16>* %1125, align 2, !alias.scope !58, !noalias !55
  %1126 = getelementptr inbounds i16, i16* %1119, i64 8
  %1127 = bitcast i16* %1126 to <8 x i16>*
  store <8 x i16> %1124, <8 x i16>* %1127, align 2, !alias.scope !58, !noalias !55
  %1128 = add i64 %1083, 64
  %1129 = add i64 %1084, -4
  %1130 = icmp eq i64 %1129, 0
  br i1 %1130, label %1131, label %1082, !llvm.loop !60

1131:                                             ; preds = %1082, %1066
  %1132 = phi i64 [ 0, %1066 ], [ %1128, %1082 ]
  %1133 = icmp eq i64 %1074, 0
  br i1 %1133, label %1152, label %1134

1134:                                             ; preds = %1131
  %1135 = getelementptr i16, i16* %1055, i64 1
  br label %1136

1136:                                             ; preds = %1136, %1134
  %1137 = phi i64 [ %1132, %1134 ], [ %1149, %1136 ]
  %1138 = phi i64 [ %1074, %1134 ], [ %1150, %1136 ]
  %1139 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 1), i64 %1137
  %1140 = getelementptr inbounds i16, i16* %1135, i64 %1137
  %1141 = bitcast i16* %1139 to <8 x i16>*
  %1142 = load <8 x i16>, <8 x i16>* %1141, align 2, !alias.scope !55
  %1143 = getelementptr i16, i16* %1139, i64 8
  %1144 = bitcast i16* %1143 to <8 x i16>*
  %1145 = load <8 x i16>, <8 x i16>* %1144, align 2, !alias.scope !55
  %1146 = bitcast i16* %1140 to <8 x i16>*
  store <8 x i16> %1142, <8 x i16>* %1146, align 2, !alias.scope !58, !noalias !55
  %1147 = getelementptr inbounds i16, i16* %1140, i64 8
  %1148 = bitcast i16* %1147 to <8 x i16>*
  store <8 x i16> %1145, <8 x i16>* %1148, align 2, !alias.scope !58, !noalias !55
  %1149 = add i64 %1137, 16
  %1150 = add i64 %1138, -1
  %1151 = icmp eq i64 %1150, 0
  br i1 %1151, label %1152, label %1136, !llvm.loop !61

1152:                                             ; preds = %1136, %1131
  %1153 = icmp eq i64 %1023, %1067
  br i1 %1153, label %1207, label %1154

1154:                                             ; preds = %1152, %1059, %1057
  %1155 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 1), %1059 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill23kPhoneSuffixSeparatorReE, i64 0, i64 1), %1057 ], [ %1068, %1152 ]
  %1156 = phi i64 [ %1023, %1059 ], [ %1023, %1057 ], [ %1069, %1152 ]
  %1157 = phi i16* [ %1055, %1059 ], [ %1055, %1057 ], [ %1070, %1152 ]
  %1158 = add i64 %1156, -1
  %1159 = and i64 %1156, 7
  %1160 = icmp eq i64 %1159, 0
  br i1 %1160, label %1172, label %1161

1161:                                             ; preds = %1154, %1161
  %1162 = phi i16* [ %1169, %1161 ], [ %1155, %1154 ]
  %1163 = phi i64 [ %1168, %1161 ], [ %1156, %1154 ]
  %1164 = phi i16* [ %1166, %1161 ], [ %1157, %1154 ]
  %1165 = phi i64 [ %1170, %1161 ], [ %1159, %1154 ]
  %1166 = getelementptr inbounds i16, i16* %1164, i64 1
  %1167 = load i16, i16* %1162, align 2
  store i16 %1167, i16* %1166, align 2
  %1168 = add i64 %1163, -1
  %1169 = getelementptr inbounds i16, i16* %1162, i64 1
  %1170 = add i64 %1165, -1
  %1171 = icmp eq i64 %1170, 0
  br i1 %1171, label %1172, label %1161, !llvm.loop !62

1172:                                             ; preds = %1161, %1154
  %1173 = phi i16* [ %1155, %1154 ], [ %1169, %1161 ]
  %1174 = phi i64 [ %1156, %1154 ], [ %1168, %1161 ]
  %1175 = phi i16* [ %1157, %1154 ], [ %1166, %1161 ]
  %1176 = icmp ult i64 %1158, 7
  br i1 %1176, label %1207, label %1177

1177:                                             ; preds = %1172, %1177
  %1178 = phi i16* [ %1205, %1177 ], [ %1173, %1172 ]
  %1179 = phi i64 [ %1204, %1177 ], [ %1174, %1172 ]
  %1180 = phi i16* [ %1202, %1177 ], [ %1175, %1172 ]
  %1181 = getelementptr inbounds i16, i16* %1180, i64 1
  %1182 = load i16, i16* %1178, align 2
  store i16 %1182, i16* %1181, align 2
  %1183 = getelementptr inbounds i16, i16* %1178, i64 1
  %1184 = getelementptr inbounds i16, i16* %1180, i64 2
  %1185 = load i16, i16* %1183, align 2
  store i16 %1185, i16* %1184, align 2
  %1186 = getelementptr inbounds i16, i16* %1178, i64 2
  %1187 = getelementptr inbounds i16, i16* %1180, i64 3
  %1188 = load i16, i16* %1186, align 2
  store i16 %1188, i16* %1187, align 2
  %1189 = getelementptr inbounds i16, i16* %1178, i64 3
  %1190 = getelementptr inbounds i16, i16* %1180, i64 4
  %1191 = load i16, i16* %1189, align 2
  store i16 %1191, i16* %1190, align 2
  %1192 = getelementptr inbounds i16, i16* %1178, i64 4
  %1193 = getelementptr inbounds i16, i16* %1180, i64 5
  %1194 = load i16, i16* %1192, align 2
  store i16 %1194, i16* %1193, align 2
  %1195 = getelementptr inbounds i16, i16* %1178, i64 5
  %1196 = getelementptr inbounds i16, i16* %1180, i64 6
  %1197 = load i16, i16* %1195, align 2
  store i16 %1197, i16* %1196, align 2
  %1198 = getelementptr inbounds i16, i16* %1178, i64 6
  %1199 = getelementptr inbounds i16, i16* %1180, i64 7
  %1200 = load i16, i16* %1198, align 2
  store i16 %1200, i16* %1199, align 2
  %1201 = getelementptr inbounds i16, i16* %1178, i64 7
  %1202 = getelementptr inbounds i16, i16* %1180, i64 8
  %1203 = load i16, i16* %1201, align 2
  store i16 %1203, i16* %1202, align 2
  %1204 = add i64 %1179, -8
  %1205 = getelementptr inbounds i16, i16* %1178, i64 8
  %1206 = icmp eq i64 %1204, 0
  br i1 %1206, label %1207, label %1177, !llvm.loop !63

1207:                                             ; preds = %1172, %1177, %1054, %1152, %1018, %1048
  %1208 = phi i64 [ 0, %1048 ], [ 0, %1018 ], [ %1025, %1152 ], [ %1025, %1054 ], [ %1025, %1177 ], [ %1025, %1172 ]
  %1209 = phi i16* [ %1052, %1048 ], [ %1021, %1018 ], [ %1055, %1152 ], [ %1055, %1054 ], [ %1055, %1177 ], [ %1055, %1172 ]
  %1210 = getelementptr inbounds i16, i16* %1209, i64 %1208
  store i16 0, i16* %1210, align 2
  br label %1605

1211:                                             ; preds = %2
  %1212 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 0), align 2
  %1213 = icmp eq i16 %1212, 0
  br i1 %1213, label %1214, label %1218

1214:                                             ; preds = %1211
  %1215 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1216 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1215, i64 0, i32 1, i32 1
  store i8 0, i8* %1216, align 1
  %1217 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %1403

1218:                                             ; preds = %1211, %1218
  %1219 = phi i64 [ %1221, %1218 ], [ 0, %1211 ]
  %1220 = phi i16* [ %1222, %1218 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 0), %1211 ]
  %1221 = add i64 %1219, 1
  %1222 = getelementptr inbounds i16, i16* %1220, i64 1
  %1223 = load i16, i16* %1222, align 2
  %1224 = icmp eq i16 %1223, 0
  br i1 %1224, label %1225, label %1218

1225:                                             ; preds = %1218
  %1226 = icmp ugt i64 %1221, 9223372036854775791
  br i1 %1226, label %1227, label %1229

1227:                                             ; preds = %1225
  %1228 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1228) #11
  unreachable

1229:                                             ; preds = %1225
  %1230 = icmp ult i64 %1221, 11
  br i1 %1230, label %1244, label %1231

1231:                                             ; preds = %1229
  %1232 = add nuw nsw i64 %1219, 9
  %1233 = and i64 %1232, -8
  %1234 = icmp slt i64 %1233, 0
  br i1 %1234, label %1235, label %1236

1235:                                             ; preds = %1231
  tail call void @abort() #11
  unreachable

1236:                                             ; preds = %1231
  %1237 = shl i64 %1233, 1
  %1238 = tail call i8* @_Znwm(i64 %1237) #9
  %1239 = bitcast i8* %1238 to i16*
  %1240 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %1238, i8** %1240, align 8
  %1241 = or i64 %1233, -9223372036854775808
  %1242 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1241, i64* %1242, align 8
  %1243 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1221, i64* %1243, align 8
  br label %1250

1244:                                             ; preds = %1229
  %1245 = trunc i64 %1221 to i8
  %1246 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1247 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1246, i64 0, i32 1, i32 1
  store i8 %1245, i8* %1247, align 1
  %1248 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %1249 = icmp eq i64 %1221, 0
  br i1 %1249, label %1403, label %1250

1250:                                             ; preds = %1244, %1236
  %1251 = phi i16* [ %1239, %1236 ], [ %1248, %1244 ]
  store i16 %1212, i16* %1251, align 2
  %1252 = icmp eq i64 %1219, 0
  br i1 %1252, label %1403, label %1253

1253:                                             ; preds = %1250
  %1254 = icmp ult i64 %1219, 16
  br i1 %1254, label %1350, label %1255

1255:                                             ; preds = %1253
  %1256 = getelementptr i16, i16* %1251, i64 1
  %1257 = getelementptr i16, i16* %1251, i64 %1221
  %1258 = getelementptr [0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 %1221
  %1259 = icmp ult i16* %1256, %1258
  %1260 = icmp ugt i16* %1257, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 1)
  %1261 = and i1 %1259, %1260
  br i1 %1261, label %1350, label %1262

1262:                                             ; preds = %1255
  %1263 = and i64 %1219, -16
  %1264 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 1), i64 %1263
  %1265 = sub i64 %1219, %1263
  %1266 = getelementptr i16, i16* %1251, i64 %1263
  %1267 = add i64 %1263, -16
  %1268 = lshr exact i64 %1267, 4
  %1269 = add nuw nsw i64 %1268, 1
  %1270 = and i64 %1269, 3
  %1271 = icmp ult i64 %1267, 48
  br i1 %1271, label %1327, label %1272

1272:                                             ; preds = %1262
  %1273 = sub nsw i64 %1269, %1270
  %1274 = getelementptr i16, i16* %1251, i64 1
  %1275 = getelementptr i16, i16* %1251, i64 1
  %1276 = getelementptr i16, i16* %1251, i64 1
  %1277 = getelementptr i16, i16* %1251, i64 1
  br label %1278

1278:                                             ; preds = %1278, %1272
  %1279 = phi i64 [ 0, %1272 ], [ %1324, %1278 ]
  %1280 = phi i64 [ %1273, %1272 ], [ %1325, %1278 ]
  %1281 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 1), i64 %1279
  %1282 = getelementptr inbounds i16, i16* %1274, i64 %1279
  %1283 = bitcast i16* %1281 to <8 x i16>*
  %1284 = load <8 x i16>, <8 x i16>* %1283, align 2, !alias.scope !64
  %1285 = getelementptr i16, i16* %1281, i64 8
  %1286 = bitcast i16* %1285 to <8 x i16>*
  %1287 = load <8 x i16>, <8 x i16>* %1286, align 2, !alias.scope !64
  %1288 = bitcast i16* %1282 to <8 x i16>*
  store <8 x i16> %1284, <8 x i16>* %1288, align 2, !alias.scope !67, !noalias !64
  %1289 = getelementptr inbounds i16, i16* %1282, i64 8
  %1290 = bitcast i16* %1289 to <8 x i16>*
  store <8 x i16> %1287, <8 x i16>* %1290, align 2, !alias.scope !67, !noalias !64
  %1291 = or i64 %1279, 16
  %1292 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 1), i64 %1291
  %1293 = getelementptr inbounds i16, i16* %1275, i64 %1291
  %1294 = bitcast i16* %1292 to <8 x i16>*
  %1295 = load <8 x i16>, <8 x i16>* %1294, align 2, !alias.scope !64
  %1296 = getelementptr i16, i16* %1292, i64 8
  %1297 = bitcast i16* %1296 to <8 x i16>*
  %1298 = load <8 x i16>, <8 x i16>* %1297, align 2, !alias.scope !64
  %1299 = bitcast i16* %1293 to <8 x i16>*
  store <8 x i16> %1295, <8 x i16>* %1299, align 2, !alias.scope !67, !noalias !64
  %1300 = getelementptr inbounds i16, i16* %1293, i64 8
  %1301 = bitcast i16* %1300 to <8 x i16>*
  store <8 x i16> %1298, <8 x i16>* %1301, align 2, !alias.scope !67, !noalias !64
  %1302 = or i64 %1279, 32
  %1303 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 1), i64 %1302
  %1304 = getelementptr inbounds i16, i16* %1276, i64 %1302
  %1305 = bitcast i16* %1303 to <8 x i16>*
  %1306 = load <8 x i16>, <8 x i16>* %1305, align 2, !alias.scope !64
  %1307 = getelementptr i16, i16* %1303, i64 8
  %1308 = bitcast i16* %1307 to <8 x i16>*
  %1309 = load <8 x i16>, <8 x i16>* %1308, align 2, !alias.scope !64
  %1310 = bitcast i16* %1304 to <8 x i16>*
  store <8 x i16> %1306, <8 x i16>* %1310, align 2, !alias.scope !67, !noalias !64
  %1311 = getelementptr inbounds i16, i16* %1304, i64 8
  %1312 = bitcast i16* %1311 to <8 x i16>*
  store <8 x i16> %1309, <8 x i16>* %1312, align 2, !alias.scope !67, !noalias !64
  %1313 = or i64 %1279, 48
  %1314 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 1), i64 %1313
  %1315 = getelementptr inbounds i16, i16* %1277, i64 %1313
  %1316 = bitcast i16* %1314 to <8 x i16>*
  %1317 = load <8 x i16>, <8 x i16>* %1316, align 2, !alias.scope !64
  %1318 = getelementptr i16, i16* %1314, i64 8
  %1319 = bitcast i16* %1318 to <8 x i16>*
  %1320 = load <8 x i16>, <8 x i16>* %1319, align 2, !alias.scope !64
  %1321 = bitcast i16* %1315 to <8 x i16>*
  store <8 x i16> %1317, <8 x i16>* %1321, align 2, !alias.scope !67, !noalias !64
  %1322 = getelementptr inbounds i16, i16* %1315, i64 8
  %1323 = bitcast i16* %1322 to <8 x i16>*
  store <8 x i16> %1320, <8 x i16>* %1323, align 2, !alias.scope !67, !noalias !64
  %1324 = add i64 %1279, 64
  %1325 = add i64 %1280, -4
  %1326 = icmp eq i64 %1325, 0
  br i1 %1326, label %1327, label %1278, !llvm.loop !69

1327:                                             ; preds = %1278, %1262
  %1328 = phi i64 [ 0, %1262 ], [ %1324, %1278 ]
  %1329 = icmp eq i64 %1270, 0
  br i1 %1329, label %1348, label %1330

1330:                                             ; preds = %1327
  %1331 = getelementptr i16, i16* %1251, i64 1
  br label %1332

1332:                                             ; preds = %1332, %1330
  %1333 = phi i64 [ %1328, %1330 ], [ %1345, %1332 ]
  %1334 = phi i64 [ %1270, %1330 ], [ %1346, %1332 ]
  %1335 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 1), i64 %1333
  %1336 = getelementptr inbounds i16, i16* %1331, i64 %1333
  %1337 = bitcast i16* %1335 to <8 x i16>*
  %1338 = load <8 x i16>, <8 x i16>* %1337, align 2, !alias.scope !64
  %1339 = getelementptr i16, i16* %1335, i64 8
  %1340 = bitcast i16* %1339 to <8 x i16>*
  %1341 = load <8 x i16>, <8 x i16>* %1340, align 2, !alias.scope !64
  %1342 = bitcast i16* %1336 to <8 x i16>*
  store <8 x i16> %1338, <8 x i16>* %1342, align 2, !alias.scope !67, !noalias !64
  %1343 = getelementptr inbounds i16, i16* %1336, i64 8
  %1344 = bitcast i16* %1343 to <8 x i16>*
  store <8 x i16> %1341, <8 x i16>* %1344, align 2, !alias.scope !67, !noalias !64
  %1345 = add i64 %1333, 16
  %1346 = add i64 %1334, -1
  %1347 = icmp eq i64 %1346, 0
  br i1 %1347, label %1348, label %1332, !llvm.loop !70

1348:                                             ; preds = %1332, %1327
  %1349 = icmp eq i64 %1219, %1263
  br i1 %1349, label %1403, label %1350

1350:                                             ; preds = %1348, %1255, %1253
  %1351 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 1), %1255 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill14kPhoneSuffixReE, i64 0, i64 1), %1253 ], [ %1264, %1348 ]
  %1352 = phi i64 [ %1219, %1255 ], [ %1219, %1253 ], [ %1265, %1348 ]
  %1353 = phi i16* [ %1251, %1255 ], [ %1251, %1253 ], [ %1266, %1348 ]
  %1354 = add i64 %1352, -1
  %1355 = and i64 %1352, 7
  %1356 = icmp eq i64 %1355, 0
  br i1 %1356, label %1368, label %1357

1357:                                             ; preds = %1350, %1357
  %1358 = phi i16* [ %1365, %1357 ], [ %1351, %1350 ]
  %1359 = phi i64 [ %1364, %1357 ], [ %1352, %1350 ]
  %1360 = phi i16* [ %1362, %1357 ], [ %1353, %1350 ]
  %1361 = phi i64 [ %1366, %1357 ], [ %1355, %1350 ]
  %1362 = getelementptr inbounds i16, i16* %1360, i64 1
  %1363 = load i16, i16* %1358, align 2
  store i16 %1363, i16* %1362, align 2
  %1364 = add i64 %1359, -1
  %1365 = getelementptr inbounds i16, i16* %1358, i64 1
  %1366 = add i64 %1361, -1
  %1367 = icmp eq i64 %1366, 0
  br i1 %1367, label %1368, label %1357, !llvm.loop !71

1368:                                             ; preds = %1357, %1350
  %1369 = phi i16* [ %1351, %1350 ], [ %1365, %1357 ]
  %1370 = phi i64 [ %1352, %1350 ], [ %1364, %1357 ]
  %1371 = phi i16* [ %1353, %1350 ], [ %1362, %1357 ]
  %1372 = icmp ult i64 %1354, 7
  br i1 %1372, label %1403, label %1373

1373:                                             ; preds = %1368, %1373
  %1374 = phi i16* [ %1401, %1373 ], [ %1369, %1368 ]
  %1375 = phi i64 [ %1400, %1373 ], [ %1370, %1368 ]
  %1376 = phi i16* [ %1398, %1373 ], [ %1371, %1368 ]
  %1377 = getelementptr inbounds i16, i16* %1376, i64 1
  %1378 = load i16, i16* %1374, align 2
  store i16 %1378, i16* %1377, align 2
  %1379 = getelementptr inbounds i16, i16* %1374, i64 1
  %1380 = getelementptr inbounds i16, i16* %1376, i64 2
  %1381 = load i16, i16* %1379, align 2
  store i16 %1381, i16* %1380, align 2
  %1382 = getelementptr inbounds i16, i16* %1374, i64 2
  %1383 = getelementptr inbounds i16, i16* %1376, i64 3
  %1384 = load i16, i16* %1382, align 2
  store i16 %1384, i16* %1383, align 2
  %1385 = getelementptr inbounds i16, i16* %1374, i64 3
  %1386 = getelementptr inbounds i16, i16* %1376, i64 4
  %1387 = load i16, i16* %1385, align 2
  store i16 %1387, i16* %1386, align 2
  %1388 = getelementptr inbounds i16, i16* %1374, i64 4
  %1389 = getelementptr inbounds i16, i16* %1376, i64 5
  %1390 = load i16, i16* %1388, align 2
  store i16 %1390, i16* %1389, align 2
  %1391 = getelementptr inbounds i16, i16* %1374, i64 5
  %1392 = getelementptr inbounds i16, i16* %1376, i64 6
  %1393 = load i16, i16* %1391, align 2
  store i16 %1393, i16* %1392, align 2
  %1394 = getelementptr inbounds i16, i16* %1374, i64 6
  %1395 = getelementptr inbounds i16, i16* %1376, i64 7
  %1396 = load i16, i16* %1394, align 2
  store i16 %1396, i16* %1395, align 2
  %1397 = getelementptr inbounds i16, i16* %1374, i64 7
  %1398 = getelementptr inbounds i16, i16* %1376, i64 8
  %1399 = load i16, i16* %1397, align 2
  store i16 %1399, i16* %1398, align 2
  %1400 = add i64 %1375, -8
  %1401 = getelementptr inbounds i16, i16* %1374, i64 8
  %1402 = icmp eq i64 %1400, 0
  br i1 %1402, label %1403, label %1373, !llvm.loop !72

1403:                                             ; preds = %1368, %1373, %1250, %1348, %1214, %1244
  %1404 = phi i64 [ 0, %1244 ], [ 0, %1214 ], [ %1221, %1348 ], [ %1221, %1250 ], [ %1221, %1373 ], [ %1221, %1368 ]
  %1405 = phi i16* [ %1248, %1244 ], [ %1217, %1214 ], [ %1251, %1348 ], [ %1251, %1250 ], [ %1251, %1373 ], [ %1251, %1368 ]
  %1406 = getelementptr inbounds i16, i16* %1405, i64 %1404
  store i16 0, i16* %1406, align 2
  br label %1605

1407:                                             ; preds = %2
  %1408 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 0), align 2
  %1409 = icmp eq i16 %1408, 0
  br i1 %1409, label %1410, label %1414

1410:                                             ; preds = %1407
  %1411 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1412 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1411, i64 0, i32 1, i32 1
  store i8 0, i8* %1412, align 1
  %1413 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %1599

1414:                                             ; preds = %1407, %1414
  %1415 = phi i64 [ %1417, %1414 ], [ 0, %1407 ]
  %1416 = phi i16* [ %1418, %1414 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 0), %1407 ]
  %1417 = add i64 %1415, 1
  %1418 = getelementptr inbounds i16, i16* %1416, i64 1
  %1419 = load i16, i16* %1418, align 2
  %1420 = icmp eq i16 %1419, 0
  br i1 %1420, label %1421, label %1414

1421:                                             ; preds = %1414
  %1422 = icmp ugt i64 %1417, 9223372036854775791
  br i1 %1422, label %1423, label %1425

1423:                                             ; preds = %1421
  %1424 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1424) #11
  unreachable

1425:                                             ; preds = %1421
  %1426 = icmp ult i64 %1417, 11
  br i1 %1426, label %1440, label %1427

1427:                                             ; preds = %1425
  %1428 = add nuw nsw i64 %1415, 9
  %1429 = and i64 %1428, -8
  %1430 = icmp slt i64 %1429, 0
  br i1 %1430, label %1431, label %1432

1431:                                             ; preds = %1427
  tail call void @abort() #11
  unreachable

1432:                                             ; preds = %1427
  %1433 = shl i64 %1429, 1
  %1434 = tail call i8* @_Znwm(i64 %1433) #9
  %1435 = bitcast i8* %1434 to i16*
  %1436 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %1434, i8** %1436, align 8
  %1437 = or i64 %1429, -9223372036854775808
  %1438 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1437, i64* %1438, align 8
  %1439 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1417, i64* %1439, align 8
  br label %1446

1440:                                             ; preds = %1425
  %1441 = trunc i64 %1417 to i8
  %1442 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1443 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1442, i64 0, i32 1, i32 1
  store i8 %1441, i8* %1443, align 1
  %1444 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %1445 = icmp eq i64 %1417, 0
  br i1 %1445, label %1599, label %1446

1446:                                             ; preds = %1440, %1432
  %1447 = phi i16* [ %1435, %1432 ], [ %1444, %1440 ]
  store i16 %1408, i16* %1447, align 2
  %1448 = icmp eq i64 %1415, 0
  br i1 %1448, label %1599, label %1449

1449:                                             ; preds = %1446
  %1450 = icmp ult i64 %1415, 16
  br i1 %1450, label %1546, label %1451

1451:                                             ; preds = %1449
  %1452 = getelementptr i16, i16* %1447, i64 1
  %1453 = getelementptr i16, i16* %1447, i64 %1417
  %1454 = getelementptr [0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 %1417
  %1455 = icmp ult i16* %1452, %1454
  %1456 = icmp ugt i16* %1453, getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 1)
  %1457 = and i1 %1455, %1456
  br i1 %1457, label %1546, label %1458

1458:                                             ; preds = %1451
  %1459 = and i64 %1415, -16
  %1460 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 1), i64 %1459
  %1461 = sub i64 %1415, %1459
  %1462 = getelementptr i16, i16* %1447, i64 %1459
  %1463 = add i64 %1459, -16
  %1464 = lshr exact i64 %1463, 4
  %1465 = add nuw nsw i64 %1464, 1
  %1466 = and i64 %1465, 3
  %1467 = icmp ult i64 %1463, 48
  br i1 %1467, label %1523, label %1468

1468:                                             ; preds = %1458
  %1469 = sub nsw i64 %1465, %1466
  %1470 = getelementptr i16, i16* %1447, i64 1
  %1471 = getelementptr i16, i16* %1447, i64 1
  %1472 = getelementptr i16, i16* %1447, i64 1
  %1473 = getelementptr i16, i16* %1447, i64 1
  br label %1474

1474:                                             ; preds = %1474, %1468
  %1475 = phi i64 [ 0, %1468 ], [ %1520, %1474 ]
  %1476 = phi i64 [ %1469, %1468 ], [ %1521, %1474 ]
  %1477 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 1), i64 %1475
  %1478 = getelementptr inbounds i16, i16* %1470, i64 %1475
  %1479 = bitcast i16* %1477 to <8 x i16>*
  %1480 = load <8 x i16>, <8 x i16>* %1479, align 2, !alias.scope !73
  %1481 = getelementptr i16, i16* %1477, i64 8
  %1482 = bitcast i16* %1481 to <8 x i16>*
  %1483 = load <8 x i16>, <8 x i16>* %1482, align 2, !alias.scope !73
  %1484 = bitcast i16* %1478 to <8 x i16>*
  store <8 x i16> %1480, <8 x i16>* %1484, align 2, !alias.scope !76, !noalias !73
  %1485 = getelementptr inbounds i16, i16* %1478, i64 8
  %1486 = bitcast i16* %1485 to <8 x i16>*
  store <8 x i16> %1483, <8 x i16>* %1486, align 2, !alias.scope !76, !noalias !73
  %1487 = or i64 %1475, 16
  %1488 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 1), i64 %1487
  %1489 = getelementptr inbounds i16, i16* %1471, i64 %1487
  %1490 = bitcast i16* %1488 to <8 x i16>*
  %1491 = load <8 x i16>, <8 x i16>* %1490, align 2, !alias.scope !73
  %1492 = getelementptr i16, i16* %1488, i64 8
  %1493 = bitcast i16* %1492 to <8 x i16>*
  %1494 = load <8 x i16>, <8 x i16>* %1493, align 2, !alias.scope !73
  %1495 = bitcast i16* %1489 to <8 x i16>*
  store <8 x i16> %1491, <8 x i16>* %1495, align 2, !alias.scope !76, !noalias !73
  %1496 = getelementptr inbounds i16, i16* %1489, i64 8
  %1497 = bitcast i16* %1496 to <8 x i16>*
  store <8 x i16> %1494, <8 x i16>* %1497, align 2, !alias.scope !76, !noalias !73
  %1498 = or i64 %1475, 32
  %1499 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 1), i64 %1498
  %1500 = getelementptr inbounds i16, i16* %1472, i64 %1498
  %1501 = bitcast i16* %1499 to <8 x i16>*
  %1502 = load <8 x i16>, <8 x i16>* %1501, align 2, !alias.scope !73
  %1503 = getelementptr i16, i16* %1499, i64 8
  %1504 = bitcast i16* %1503 to <8 x i16>*
  %1505 = load <8 x i16>, <8 x i16>* %1504, align 2, !alias.scope !73
  %1506 = bitcast i16* %1500 to <8 x i16>*
  store <8 x i16> %1502, <8 x i16>* %1506, align 2, !alias.scope !76, !noalias !73
  %1507 = getelementptr inbounds i16, i16* %1500, i64 8
  %1508 = bitcast i16* %1507 to <8 x i16>*
  store <8 x i16> %1505, <8 x i16>* %1508, align 2, !alias.scope !76, !noalias !73
  %1509 = or i64 %1475, 48
  %1510 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 1), i64 %1509
  %1511 = getelementptr inbounds i16, i16* %1473, i64 %1509
  %1512 = bitcast i16* %1510 to <8 x i16>*
  %1513 = load <8 x i16>, <8 x i16>* %1512, align 2, !alias.scope !73
  %1514 = getelementptr i16, i16* %1510, i64 8
  %1515 = bitcast i16* %1514 to <8 x i16>*
  %1516 = load <8 x i16>, <8 x i16>* %1515, align 2, !alias.scope !73
  %1517 = bitcast i16* %1511 to <8 x i16>*
  store <8 x i16> %1513, <8 x i16>* %1517, align 2, !alias.scope !76, !noalias !73
  %1518 = getelementptr inbounds i16, i16* %1511, i64 8
  %1519 = bitcast i16* %1518 to <8 x i16>*
  store <8 x i16> %1516, <8 x i16>* %1519, align 2, !alias.scope !76, !noalias !73
  %1520 = add i64 %1475, 64
  %1521 = add i64 %1476, -4
  %1522 = icmp eq i64 %1521, 0
  br i1 %1522, label %1523, label %1474, !llvm.loop !78

1523:                                             ; preds = %1474, %1458
  %1524 = phi i64 [ 0, %1458 ], [ %1520, %1474 ]
  %1525 = icmp eq i64 %1466, 0
  br i1 %1525, label %1544, label %1526

1526:                                             ; preds = %1523
  %1527 = getelementptr i16, i16* %1447, i64 1
  br label %1528

1528:                                             ; preds = %1528, %1526
  %1529 = phi i64 [ %1524, %1526 ], [ %1541, %1528 ]
  %1530 = phi i64 [ %1466, %1526 ], [ %1542, %1528 ]
  %1531 = getelementptr i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 1), i64 %1529
  %1532 = getelementptr inbounds i16, i16* %1527, i64 %1529
  %1533 = bitcast i16* %1531 to <8 x i16>*
  %1534 = load <8 x i16>, <8 x i16>* %1533, align 2, !alias.scope !73
  %1535 = getelementptr i16, i16* %1531, i64 8
  %1536 = bitcast i16* %1535 to <8 x i16>*
  %1537 = load <8 x i16>, <8 x i16>* %1536, align 2, !alias.scope !73
  %1538 = bitcast i16* %1532 to <8 x i16>*
  store <8 x i16> %1534, <8 x i16>* %1538, align 2, !alias.scope !76, !noalias !73
  %1539 = getelementptr inbounds i16, i16* %1532, i64 8
  %1540 = bitcast i16* %1539 to <8 x i16>*
  store <8 x i16> %1537, <8 x i16>* %1540, align 2, !alias.scope !76, !noalias !73
  %1541 = add i64 %1529, 16
  %1542 = add i64 %1530, -1
  %1543 = icmp eq i64 %1542, 0
  br i1 %1543, label %1544, label %1528, !llvm.loop !79

1544:                                             ; preds = %1528, %1523
  %1545 = icmp eq i64 %1415, %1459
  br i1 %1545, label %1599, label %1546

1546:                                             ; preds = %1544, %1451, %1449
  %1547 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 1), %1451 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN8autofill17kPhoneExtensionReE, i64 0, i64 1), %1449 ], [ %1460, %1544 ]
  %1548 = phi i64 [ %1415, %1451 ], [ %1415, %1449 ], [ %1461, %1544 ]
  %1549 = phi i16* [ %1447, %1451 ], [ %1447, %1449 ], [ %1462, %1544 ]
  %1550 = add i64 %1548, -1
  %1551 = and i64 %1548, 7
  %1552 = icmp eq i64 %1551, 0
  br i1 %1552, label %1564, label %1553

1553:                                             ; preds = %1546, %1553
  %1554 = phi i16* [ %1561, %1553 ], [ %1547, %1546 ]
  %1555 = phi i64 [ %1560, %1553 ], [ %1548, %1546 ]
  %1556 = phi i16* [ %1558, %1553 ], [ %1549, %1546 ]
  %1557 = phi i64 [ %1562, %1553 ], [ %1551, %1546 ]
  %1558 = getelementptr inbounds i16, i16* %1556, i64 1
  %1559 = load i16, i16* %1554, align 2
  store i16 %1559, i16* %1558, align 2
  %1560 = add i64 %1555, -1
  %1561 = getelementptr inbounds i16, i16* %1554, i64 1
  %1562 = add i64 %1557, -1
  %1563 = icmp eq i64 %1562, 0
  br i1 %1563, label %1564, label %1553, !llvm.loop !80

1564:                                             ; preds = %1553, %1546
  %1565 = phi i16* [ %1547, %1546 ], [ %1561, %1553 ]
  %1566 = phi i64 [ %1548, %1546 ], [ %1560, %1553 ]
  %1567 = phi i16* [ %1549, %1546 ], [ %1558, %1553 ]
  %1568 = icmp ult i64 %1550, 7
  br i1 %1568, label %1599, label %1569

1569:                                             ; preds = %1564, %1569
  %1570 = phi i16* [ %1597, %1569 ], [ %1565, %1564 ]
  %1571 = phi i64 [ %1596, %1569 ], [ %1566, %1564 ]
  %1572 = phi i16* [ %1594, %1569 ], [ %1567, %1564 ]
  %1573 = getelementptr inbounds i16, i16* %1572, i64 1
  %1574 = load i16, i16* %1570, align 2
  store i16 %1574, i16* %1573, align 2
  %1575 = getelementptr inbounds i16, i16* %1570, i64 1
  %1576 = getelementptr inbounds i16, i16* %1572, i64 2
  %1577 = load i16, i16* %1575, align 2
  store i16 %1577, i16* %1576, align 2
  %1578 = getelementptr inbounds i16, i16* %1570, i64 2
  %1579 = getelementptr inbounds i16, i16* %1572, i64 3
  %1580 = load i16, i16* %1578, align 2
  store i16 %1580, i16* %1579, align 2
  %1581 = getelementptr inbounds i16, i16* %1570, i64 3
  %1582 = getelementptr inbounds i16, i16* %1572, i64 4
  %1583 = load i16, i16* %1581, align 2
  store i16 %1583, i16* %1582, align 2
  %1584 = getelementptr inbounds i16, i16* %1570, i64 4
  %1585 = getelementptr inbounds i16, i16* %1572, i64 5
  %1586 = load i16, i16* %1584, align 2
  store i16 %1586, i16* %1585, align 2
  %1587 = getelementptr inbounds i16, i16* %1570, i64 5
  %1588 = getelementptr inbounds i16, i16* %1572, i64 6
  %1589 = load i16, i16* %1587, align 2
  store i16 %1589, i16* %1588, align 2
  %1590 = getelementptr inbounds i16, i16* %1570, i64 6
  %1591 = getelementptr inbounds i16, i16* %1572, i64 7
  %1592 = load i16, i16* %1590, align 2
  store i16 %1592, i16* %1591, align 2
  %1593 = getelementptr inbounds i16, i16* %1570, i64 7
  %1594 = getelementptr inbounds i16, i16* %1572, i64 8
  %1595 = load i16, i16* %1593, align 2
  store i16 %1595, i16* %1594, align 2
  %1596 = add i64 %1571, -8
  %1597 = getelementptr inbounds i16, i16* %1570, i64 8
  %1598 = icmp eq i64 %1596, 0
  br i1 %1598, label %1599, label %1569, !llvm.loop !81

1599:                                             ; preds = %1564, %1569, %1446, %1544, %1410, %1440
  %1600 = phi i64 [ 0, %1440 ], [ 0, %1410 ], [ %1417, %1544 ], [ %1417, %1446 ], [ %1417, %1569 ], [ %1417, %1564 ]
  %1601 = phi i16* [ %1444, %1440 ], [ %1413, %1410 ], [ %1447, %1544 ], [ %1447, %1446 ], [ %1447, %1569 ], [ %1447, %1564 ]
  %1602 = getelementptr inbounds i16, i16* %1601, i64 %1600
  store i16 0, i16* %1602, align 2
  br label %1605

1603:                                             ; preds = %2
  %1604 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1604, i8 0, i64 24, i1 false) #10
  br label %1605

1605:                                             ; preds = %1603, %1599, %1403, %1207, %1011, %815, %619, %423, %229, %196
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN8autofill10PhoneField13GetRegExpNameENS0_9RegexTypeE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp ult i32 %0, 9
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [9 x i8*], [9 x i8*]* @switch.table._ZN8autofill10PhoneField13GetRegExpNameENS0_9RegexTypeE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill10PhoneField16GetJSONFieldTypeENS0_9RegexTypeE(%"class.std::__1::basic_string.1"* noalias sret, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %49 [
    i32 0, label %3
    i32 1, label %8
    i32 2, label %13
    i32 3, label %19
    i32 4, label %24
    i32 5, label %29
    i32 6, label %34
    i32 7, label %39
    i32 8, label %44
  ]

3:                                                ; preds = %2
  %4 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 18, i8* %5, align 1
  %6 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i64 18, i1 false) #10
  %7 = getelementptr inbounds i8, i8* %6, i64 18
  store i8 0, i8* %7, align 2
  br label %51

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 15, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i64 15, i1 false) #10
  %12 = getelementptr inbounds i8, i8* %11, i64 15
  store i8 0, i8* %12, align 1
  br label %51

13:                                               ; preds = %2
  %14 = tail call i8* @_Znwm(i64 32) #9
  %15 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast i64* %16 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %17, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i64 23, i1 false) #10
  %18 = getelementptr inbounds i8, i8* %14, i64 23
  store i8 0, i8* %18, align 1
  br label %51

19:                                               ; preds = %2
  %20 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 5, i8* %21, align 1
  %22 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i64 5, i1 false) #10
  %23 = getelementptr inbounds i8, i8* %22, i64 5
  store i8 0, i8* %23, align 1
  br label %51

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 22, i8* %26, align 1
  %27 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i64 22, i1 false) #10
  %28 = getelementptr inbounds i8, i8* %27, i64 22
  store i8 0, i8* %28, align 2
  br label %51

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 12, i8* %31, align 1
  %32 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i64 12, i1 false) #10
  %33 = getelementptr inbounds i8, i8* %32, i64 12
  store i8 0, i8* %33, align 4
  br label %51

34:                                               ; preds = %2
  %35 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 22, i8* %36, align 1
  %37 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i64 22, i1 false) #10
  %38 = getelementptr inbounds i8, i8* %37, i64 22
  store i8 0, i8* %38, align 2
  br label %51

39:                                               ; preds = %2
  %40 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 12, i8* %41, align 1
  %42 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i1 false) #10
  %43 = getelementptr inbounds i8, i8* %42, i64 12
  store i8 0, i8* %43, align 4
  br label %51

44:                                               ; preds = %2
  %45 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 15, i8* %46, align 1
  %47 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 15, i1 false) #10
  %48 = getelementptr inbounds i8, i8* %47, i64 15
  store i8 0, i8* %48, align 1
  br label %51

49:                                               ; preds = %2
  %50 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #10
  br label %51

51:                                               ; preds = %49, %44, %39, %34, %29, %24, %19, %13, %8, %3
  ret void
}

declare void @_ZN8autofill15AutofillScanner8RewindToEm(%"class.autofill::AutofillScanner"*, i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8autofill10PhoneField18AddClassificationsEPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENS8_6vectorINS8_4pairIS6_S7_EENS8_9allocatorISD_EEEEEE(%"class.autofill::PhoneField"* nocapture readonly, %"class.base::flat_map"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.autofill::PhoneField", %"class.autofill::PhoneField"* %0, i64 0, i32 1, i64 0
  %4 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %3, align 8
  %5 = icmp eq %"class.autofill::AutofillField"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.autofill::PhoneField", %"class.autofill::PhoneField"* %0, i64 0, i32 1, i64 1
  %8 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %7, align 8
  %9 = icmp eq %"class.autofill::AutofillField"* %8, null
  br i1 %9, label %10, label %19

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.autofill::PhoneField", %"class.autofill::PhoneField"* %0, i64 0, i32 1, i64 3
  %12 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %11, align 8
  %13 = icmp eq %"class.autofill::AutofillField"* %12, null
  br i1 %13, label %36, label %22

14:                                               ; preds = %2
  %15 = load float, float* @_ZN8autofill9FormField21kBasePhoneParserScoreE, align 4
  tail call void @_ZN8autofill9FormField17AddClassificationEPKNS_13AutofillFieldENS_15ServerFieldTypeEfPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENSC_6vectorINSC_4pairISA_SB_EENSC_9allocatorISH_EEEEEE(%"class.autofill::AutofillField"* nonnull %4, i32 12, float %15, %"class.base::flat_map"* %1) #10
  %16 = getelementptr inbounds %"class.autofill::PhoneField", %"class.autofill::PhoneField"* %0, i64 0, i32 1, i64 1
  %17 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %16, align 8
  %18 = icmp eq %"class.autofill::AutofillField"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %6, %14
  %20 = phi %"class.autofill::AutofillField"* [ %17, %14 ], [ %8, %6 ]
  %21 = load float, float* @_ZN8autofill9FormField21kBasePhoneParserScoreE, align 4
  tail call void @_ZN8autofill9FormField17AddClassificationEPKNS_13AutofillFieldENS_15ServerFieldTypeEfPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENSC_6vectorINSC_4pairISA_SB_EENSC_9allocatorISH_EEEEEE(%"class.autofill::AutofillField"* nonnull %20, i32 11, float %21, %"class.base::flat_map"* %1) #10
  br label %27

22:                                               ; preds = %10, %14
  %23 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %3, align 8
  %24 = icmp eq %"class.autofill::AutofillField"* %23, null
  %25 = select i1 %24, i32 10, i32 13
  %26 = load float, float* @_ZN8autofill9FormField21kBasePhoneParserScoreE, align 4
  br label %27

27:                                               ; preds = %22, %19
  %28 = phi float [ %21, %19 ], [ %26, %22 ]
  %29 = phi i32 [ 10, %19 ], [ %25, %22 ]
  %30 = getelementptr inbounds %"class.autofill::PhoneField", %"class.autofill::PhoneField"* %0, i64 0, i32 1, i64 2
  %31 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %30, align 8
  tail call void @_ZN8autofill9FormField17AddClassificationEPKNS_13AutofillFieldENS_15ServerFieldTypeEfPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENSC_6vectorINSC_4pairISA_SB_EENSC_9allocatorISH_EEEEEE(%"class.autofill::AutofillField"* %31, i32 %29, float %28, %"class.base::flat_map"* %1) #10
  %32 = getelementptr inbounds %"class.autofill::PhoneField", %"class.autofill::PhoneField"* %0, i64 0, i32 1, i64 3
  %33 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %32, align 8
  %34 = icmp eq %"class.autofill::AutofillField"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %27
  tail call void @_ZN8autofill9FormField17AddClassificationEPKNS_13AutofillFieldENS_15ServerFieldTypeEfPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENSC_6vectorINSC_4pairISA_SB_EENSC_9allocatorISH_EEEEEE(%"class.autofill::AutofillField"* nonnull %33, i32 10, float %28, %"class.base::flat_map"* %1) #10
  br label %40

36:                                               ; preds = %10
  %37 = getelementptr inbounds %"class.autofill::PhoneField", %"class.autofill::PhoneField"* %0, i64 0, i32 1, i64 2
  %38 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %37, align 8
  %39 = load float, float* @_ZN8autofill9FormField21kBasePhoneParserScoreE, align 4
  tail call void @_ZN8autofill9FormField17AddClassificationEPKNS_13AutofillFieldENS_15ServerFieldTypeEfPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENSC_6vectorINSC_4pairISA_SB_EENSC_9allocatorISH_EEEEEE(%"class.autofill::AutofillField"* %38, i32 14, float %39, %"class.base::flat_map"* %1) #10
  br label %40

40:                                               ; preds = %35, %27, %36
  %41 = phi float [ %28, %35 ], [ %28, %27 ], [ %39, %36 ]
  %42 = getelementptr inbounds %"class.autofill::PhoneField", %"class.autofill::PhoneField"* %0, i64 0, i32 1, i64 4
  %43 = load %"class.autofill::AutofillField"*, %"class.autofill::AutofillField"** %42, align 8
  %44 = icmp eq %"class.autofill::AutofillField"* %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %40
  tail call void @_ZN8autofill9FormField17AddClassificationEPKNS_13AutofillFieldENS_15ServerFieldTypeEfPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENSC_6vectorINSC_4pairISA_SB_EENSC_9allocatorISH_EEEEEE(%"class.autofill::AutofillField"* nonnull %43, i32 93, float %41, %"class.base::flat_map"* %1) #10
  br label %46

46:                                               ; preds = %40, %45
  ret void
}

declare void @_ZN8autofill9FormField17AddClassificationEPKNS_13AutofillFieldENS_15ServerFieldTypeEfPN4base8flat_mapINS_8internal8GlobalIdINS_15FieldRendererIdEEENS_15FieldCandidatesENSt3__14lessIvEENSC_6vectorINSC_4pairISA_SB_EENSC_9allocatorISH_EEEEEE(%"class.autofill::AutofillField"*, i32, float, %"class.base::flat_map"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill10PhoneFieldC2Ev(%"class.autofill::PhoneField"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.autofill::PhoneField", %"class.autofill::PhoneField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8autofill10PhoneFieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::PhoneField", %"class.autofill::PhoneField"* %0, i64 0, i32 1, i64 0
  %4 = bitcast %"class.autofill::AutofillField"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 40, i1 false)
  ret void
}

declare dereferenceable(48) %"class.autofill::PatternProvider"* @_ZN8autofill15PatternProvider11GetInstanceEv() local_unnamed_addr #3

declare void @_ZNK8autofill15PatternProvider16GetMatchPatternsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_12LanguageCodeE(%"class.std::__1::vector.70"* sret, %"class.autofill::PatternProvider"*, %"class.std::__1::basic_string.1"* dereferenceable(24), %"class.autofill::LanguageCode"* dereferenceable(24)) local_unnamed_addr #3

declare zeroext i1 @_ZN8autofill9FormField19ParseFieldSpecificsEPNS_15AutofillScannerEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEiRKNS5_6vectorINS_15MatchingPatternENS5_9allocatorISA_EEEEPPNS_13AutofillFieldERKNS_12RegExLoggingENS0_18MatchFieldBitmasksE(%"class.autofill::AutofillScanner"*, i16*, i64, i32, %"class.std::__1::vector.70"* dereferenceable(24), %"class.autofill::AutofillField"**, %"struct.autofill::RegExLogging"* dereferenceable(16), i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN8autofill15MatchingPatternD1Ev(%"struct.autofill::MatchingPattern"*) unnamed_addr #8

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8autofill10PhoneField16GetJSONFieldTypeENS0_9RegexTypeE: argument 0"}
!4 = distinct !{!4, !"_ZN8autofill10PhoneField16GetJSONFieldTypeENS0_9RegexTypeE"}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !11}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN8autofill12_GLOBAL__N_112GetAreaRegexEv: argument 0"}
!18 = distinct !{!18, !"_ZN8autofill12_GLOBAL__N_112GetAreaRegexEv"}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !11}
!25 = distinct !{!25, !13}
!26 = distinct !{!26, !13}
!27 = distinct !{!27, !11}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !11}
!34 = distinct !{!34, !13}
!35 = distinct !{!35, !13}
!36 = distinct !{!36, !11}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !11}
!43 = distinct !{!43, !13}
!44 = distinct !{!44, !13}
!45 = distinct !{!45, !11}
!46 = !{!47}
!47 = distinct !{!47, !48}
!48 = distinct !{!48, !"LVerDomain"}
!49 = !{!50}
!50 = distinct !{!50, !48}
!51 = distinct !{!51, !11}
!52 = distinct !{!52, !13}
!53 = distinct !{!53, !13}
!54 = distinct !{!54, !11}
!55 = !{!56}
!56 = distinct !{!56, !57}
!57 = distinct !{!57, !"LVerDomain"}
!58 = !{!59}
!59 = distinct !{!59, !57}
!60 = distinct !{!60, !11}
!61 = distinct !{!61, !13}
!62 = distinct !{!62, !13}
!63 = distinct !{!63, !11}
!64 = !{!65}
!65 = distinct !{!65, !66}
!66 = distinct !{!66, !"LVerDomain"}
!67 = !{!68}
!68 = distinct !{!68, !66}
!69 = distinct !{!69, !11}
!70 = distinct !{!70, !13}
!71 = distinct !{!71, !13}
!72 = distinct !{!72, !11}
!73 = !{!74}
!74 = distinct !{!74, !75}
!75 = distinct !{!75, !"LVerDomain"}
!76 = !{!77}
!77 = distinct !{!77, !75}
!78 = distinct !{!78, !11}
!79 = distinct !{!79, !13}
!80 = distinct !{!80, !13}
!81 = distinct !{!81, !11}
