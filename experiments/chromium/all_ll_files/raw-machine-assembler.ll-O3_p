; ModuleID = '../../v8/src/compiler/raw-machine-assembler.cc'
source_filename = "../../v8/src/compiler/raw-machine-assembler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::internal::compiler::RawMachineAssembler" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::MachineOperatorBuilder", %"class.v8::internal::compiler::CommonOperatorBuilder", %"class.v8::internal::compiler::SimplifiedOperatorBuilder", %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneVector.1140", %"class.v8::internal::compiler::BasicBlock"*, i32, [4 x i8] }>
%"class.v8::internal::compiler::Schedule" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector.1133", %"class.v8::internal::ZoneVector.1133", %"class.v8::internal::ZoneVector.1133", %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::ZoneVector.1133" = type { %"class.std::__1::vector.1134" }
%"class.std::__1::vector.1134" = type { %"class.std::__1::__vector_base.1135" }
%"class.std::__1::__vector_base.1135" = type { %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"**, %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137", %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.v8::internal::compiler::BasicBlock"** }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"class.v8::internal::ZoneAllocator.1139" }
%"class.v8::internal::ZoneAllocator.1139" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::SourcePositionTable" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::SourcePositionTable::Decorator"*, %"class.v8::internal::SourcePosition", %"class.v8::internal::compiler::NodeAuxData" }
%"class.v8::internal::compiler::SourcePositionTable::Decorator" = type opaque
%"class.v8::internal::SourcePosition" = type { i64 }
%"class.v8::internal::compiler::NodeAuxData" = type { %"class.v8::internal::ZoneVector.1147" }
%"class.v8::internal::ZoneVector.1147" = type { %"class.std::__1::vector.1148" }
%"class.std::__1::vector.1148" = type { %"class.std::__1::__vector_base.1149" }
%"class.std::__1::__vector_base.1149" = type { %"class.v8::internal::SourcePosition"*, %"class.v8::internal::SourcePosition"*, %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151", %"struct.std::__1::__compressed_pair_elem.1152" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"class.v8::internal::SourcePosition"* }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"class.v8::internal::ZoneAllocator.1153" }
%"class.v8::internal::ZoneAllocator.1153" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::MachineOperatorBuilder" = type <{ %"class.v8::internal::Zone"*, %"struct.v8::internal::compiler::MachineOperatorGlobalCache"*, i8, [3 x i8], %"class.v8::base::Flags.1154", %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements", [4 x i8] }>
%"struct.v8::internal::compiler::MachineOperatorGlobalCache" = type opaque
%"class.v8::base::Flags.1154" = type { i32 }
%"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements" = type { i32, %"class.v8::base::EnumSet", %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.v8::internal::compiler::CommonOperatorBuilder" = type { %"struct.v8::internal::compiler::CommonOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CommonOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::SimplifiedOperatorBuilder" = type { %"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::ZoneVector.1140" = type { %"class.std::__1::vector.1141" }
%"class.std::__1::vector.1141" = type { %"class.std::__1::__vector_base.1142" }
%"class.std::__1::__vector_base.1142" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.1143" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144", %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.v8::internal::compiler::Node"** }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.v8::internal::ZoneAllocator.1146" }
%"class.v8::internal::ZoneAllocator.1146" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::BasicBlock" = type { i32, i32, i8, i32, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, i32, i32, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneVector.1140", %"class.v8::internal::ZoneVector.1133", %"class.v8::internal::ZoneVector.1133", %"class.v8::internal::compiler::BasicBlock::Id" }
%"class.v8::internal::compiler::BasicBlock::Id" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.975", i32, i8, i8, i32, i32, %"class.std::__1::vector.981", %"class.std::__1::vector.981", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.988", i64, %"class.std::__1::unordered_map.989", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1045", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1083", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1117", %"class.std::__1::vector.1121", %"class.std::__1::vector.1121", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1050", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1054", %"class.std::__1::unique_ptr.1060", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1066", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1050" = type { %"struct.std::__1::__atomic_base.1051" }
%"struct.std::__1::__atomic_base.1051" = type { %"struct.std::__1::__cxx_atomic_impl.1052" }
%"struct.std::__1::__cxx_atomic_impl.1052" = type { %"struct.std::__1::__cxx_atomic_base_impl.1053" }
%"struct.std::__1::__cxx_atomic_base_impl.1053" = type { i32 }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1066" = type { %"class.std::__1::__vector_base.1067" }
%"class.std::__1::__vector_base.1067" = type { %"struct.std::__1::pair.1068"*, %"struct.std::__1::pair.1068"*, %"class.std::__1::__compressed_pair.1069" }
%"struct.std::__1::pair.1068" = type opaque
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"struct.std::__1::pair.1068"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1188" }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.1189" }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.981" = type { %"class.std::__1::__vector_base.982" }
%"class.std::__1::__vector_base.982" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.988" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.989" = type { %"class.std::__1::__hash_table.990" }
%"class.std::__1::__hash_table.990" = type <{ %"class.std::__1::unique_ptr.991", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1009", [4 x i8] }>
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993", %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.994"** }
%"struct.std::__1::__hash_node_base.994" = type { %"struct.std::__1::__hash_node_base.994"* }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::__bucket_list_deallocator.996" }
%"class.std::__1::__bucket_list_deallocator.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.994" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1013", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1042", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1043", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1013" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1038, %union.anon.1040, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1038 = type { i64 }
%union.anon.1040 = type { i64 }
%"class.std::__1::weak_ptr.1042" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1043" = type { %"class.v8::PersistentBase.1044" }
%"class.v8::PersistentBase.1044" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1014", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1014" = type { %"class.std::__1::__hash_table.1015" }
%"class.std::__1::__hash_table.1015" = type <{ %"class.std::__1::unique_ptr.1016", %"class.std::__1::__compressed_pair.1026", %"class.std::__1::__compressed_pair.1031", %"class.std::__1::__compressed_pair.1034", [4 x i8] }>
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018", %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"struct.std::__1::__hash_node_base.1019"** }
%"struct.std::__1::__hash_node_base.1019" = type { %"struct.std::__1::__hash_node_base.1019"* }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.std::__1::__bucket_list_deallocator.1021" }
%"class.std::__1::__bucket_list_deallocator.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::__hash_node_base.1019" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1074", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1091" }
%"class.std::__1::unordered_map.1091" = type { %"class.std::__1::__hash_table.1092" }
%"class.std::__1::__hash_table.1092" = type <{ %"class.std::__1::unique_ptr.1093", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1111", [4 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095", %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1096"** }
%"struct.std::__1::__hash_node_base.1096" = type { %"struct.std::__1::__hash_node_base.1096"* }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::__bucket_list_deallocator.1098" }
%"class.std::__1::__bucket_list_deallocator.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1096" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1117" = type { %"struct.std::__1::__atomic_base.1118" }
%"struct.std::__1::__atomic_base.1118" = type { %"struct.std::__1::__cxx_atomic_impl.1119" }
%"struct.std::__1::__cxx_atomic_impl.1119" = type { %"struct.std::__1::__cxx_atomic_base_impl.1120" }
%"struct.std::__1::__cxx_atomic_base_impl.1120" = type { %"class.std::__1::vector.1121"* }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1128" }
%"class.std::__1::vector.1128" = type { %"class.std::__1::__vector_base.1129" }
%"class.std::__1::__vector_base.1129" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.1130" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131", %"struct.std::__1::__compressed_pair_elem.1132" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.1132" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::CallDescriptor" = type { i32, %"class.v8::internal::MachineType", [2 x i8], %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::Signature"*, i64, i64, %"class.v8::base::Flags", i32, i32, i32, %"class.v8::base::Flags.1155", i32, i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::internal::MachineType" = type { i8, i8 }
%"class.v8::internal::compiler::LinkageLocation" = type <{ i32, %"class.v8::internal::MachineType", [2 x i8] }>
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::compiler::LinkageLocation"* }
%"class.v8::base::Flags.1155" = type { i32 }
%"class.v8::CFunctionInfo" = type opaque
%"class.v8::internal::compiler::RawMachineLabel" = type <{ %"class.v8::internal::compiler::BasicBlock"*, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::StdoutStream" = type { %"class.v8::internal::OFStream.base", %"class.v8::base::LockGuard", %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream.base" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::base::LockGuard" = type { %"class.v8::base::RecursiveMutex"* }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"struct.std::__1::array.1195" = type { [1 x %"class.v8::internal::compiler::Node"*] }
%"struct.std::__1::array.1196" = type { [2 x %"class.v8::internal::compiler::Node"*] }
%"struct.std::__1::array.1197" = type { [3 x %"class.v8::internal::compiler::Node"*] }
%"class.std::__1::vector.1158" = type { %"class.std::__1::__vector_base.1159" }
%"class.std::__1::__vector_base.1159" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.1160" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1144" }
%"class.std::__1::vector.1164" = type { %"class.std::__1::__vector_base.1165" }
%"class.std::__1::__vector_base.1165" = type { %struct.LoopHeader*, %struct.LoopHeader*, %"class.std::__1::__compressed_pair.1166" }
%struct.LoopHeader = type { %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %struct.LoopHeader* }
%"class.std::__1::vector.1173" = type { %"class.std::__1::__vector_base.1174" }
%"class.std::__1::__vector_base.1174" = type { %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"**, %"class.std::__1::__compressed_pair.1175" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"class.v8::internal::compiler::IfValueParameters" = type <{ i32, i32, i8, [3 x i8] }>
%"struct.v8::internal::compiler::BranchOperatorInfo" = type { i8, i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::pair.1187" = type { %"class.v8::internal::MachineType", %"class.v8::internal::compiler::Node"* }
%"class.v8::base::SmallVector" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"struct.std::__1::aligned_storage<80, 8>::type" }
%"struct.std::__1::aligned_storage<80, 8>::type" = type { [80 x i8] }
%"class.v8::internal::Signature.1193" = type { i64, i64, %"class.v8::internal::MachineType"* }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }

$_ZN2v88internal12StdoutStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal12StdoutStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD0Ev = comdat any

$_ZN2v84base11SmallVectorIPNS_8internal8compiler4NodeELm10EE4GrowEm = comdat any

$_ZTVN2v88internal12StdoutStreamE = comdat any

$_ZTTN2v88internal12StdoutStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@_ZN2v88internal26FLAG_trace_turbo_schedulerE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [62 x i8] c"--- RAW SCHEDULE -------------------------------------------\0A\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"--- EDGE SPLIT AND PROPAGATED DEFERRED SCHEDULE ------------\0A\00", align 1
@.str.2 = private unnamed_addr constant [62 x i8] c"--- SCHEDULE BEFORE GRAPH CREATION -------------------------\0A\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"call_descriptor()->ParameterSlotCount() == 0\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [11 x i8] c"0 <= index\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"index < node->op()->ValueInputCount()\00", align 1
@.str.8 = private unnamed_addr constant [40 x i8] c"index < node->op()->ControlInputCount()\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"Fatal process out of memory: base::SmallVector::Grow\00", align 1

@_ZN2v88internal8compiler19RawMachineAssemblerC1EPNS0_7IsolateEPNS1_5GraphEPNS1_14CallDescriptorENS0_21MachineRepresentationENS_4base5FlagsINS1_22MachineOperatorBuilder4FlagEjEENSC_21AlignmentRequirementsENS0_24PoisoningMitigationLevelE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CallDescriptor"*, i8, i32, %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements"*, i32), void (%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CallDescriptor"*, i8, i32, %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements"*, i32)* @_ZN2v88internal8compiler19RawMachineAssemblerC2EPNS0_7IsolateEPNS1_5GraphEPNS1_14CallDescriptorENS0_21MachineRepresentationENS_4base5FlagsINS1_22MachineOperatorBuilder4FlagEjEENSC_21AlignmentRequirementsENS0_24PoisoningMitigationLevelE
@_ZN2v88internal8compiler15RawMachineLabelD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::compiler::RawMachineLabel"*), void (%"class.v8::internal::compiler::RawMachineLabel"*)* @_ZN2v88internal8compiler15RawMachineLabelD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssemblerC2EPNS0_7IsolateEPNS1_5GraphEPNS1_14CallDescriptorENS0_21MachineRepresentationENS_4base5FlagsINS1_22MachineOperatorBuilder4FlagEjEENSC_21AlignmentRequirementsENS0_24PoisoningMitigationLevelE(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CallDescriptor"*, i8 zeroext, i32, %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements"* nocapture readonly byval(%"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements") align 8, i32) unnamed_addr #0 align 2 {
  %9 = alloca [1 x %"class.v8::internal::compiler::Node"*], align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %12 = ptrtoint %"class.v8::internal::compiler::Graph"* %2 to i64
  %13 = bitcast %"class.v8::internal::compiler::Graph"** %11 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %2, i64 0, i32 0
  %16 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %16, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %16, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %18
  %22 = icmp ult i64 %21, 120
  br i1 %22, label %23, label %25, !prof !2

23:                                               ; preds = %8
  %24 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %16, i64 120) #14
  br label %27

25:                                               ; preds = %8
  %26 = add i64 %18, 120
  store i64 %26, i64* %17, align 8
  br label %27

27:                                               ; preds = %23, %25
  %28 = phi i64 [ %24, %23 ], [ %18, %25 ]
  %29 = inttoptr i64 %28 to %"class.v8::internal::compiler::Schedule"*
  tail call void @_ZN2v88internal8compiler8ScheduleC1EPNS0_4ZoneEm(%"class.v8::internal::compiler::Schedule"* %29, %"class.v8::internal::Zone"* %16, i64 0) #14
  store %"class.v8::internal::compiler::Schedule"* %29, %"class.v8::internal::compiler::Schedule"** %14, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 3
  %31 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %11, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %31, i64 0, i32 0
  %33 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %33, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %33, i64 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %35
  %39 = icmp ult i64 %38, 56
  br i1 %39, label %40, label %42, !prof !2

40:                                               ; preds = %27
  %41 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %33, i64 56) #14
  br label %44

42:                                               ; preds = %27
  %43 = add i64 %35, 56
  store i64 %43, i64* %34, align 8
  br label %44

44:                                               ; preds = %40, %42
  %45 = phi i64 [ %41, %40 ], [ %35, %42 ]
  %46 = inttoptr i64 %45 to %"class.v8::internal::compiler::SourcePositionTable"*
  tail call void @_ZN2v88internal8compiler19SourcePositionTableC1EPNS1_5GraphE(%"class.v8::internal::compiler::SourcePositionTable"* %46, %"class.v8::internal::compiler::Graph"* %2) #14
  store %"class.v8::internal::compiler::SourcePositionTable"* %46, %"class.v8::internal::compiler::SourcePositionTable"** %30, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 4
  %48 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %11, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %48, i64 0, i32 0
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %49, align 8
  %51 = bitcast %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements"* %6 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements", %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements"* %6, i64 0, i32 2, i32 0
  %54 = load i32, i32* %53, align 8
  tail call void @_ZN2v88internal8compiler22MachineOperatorBuilderC1EPNS0_4ZoneENS0_21MachineRepresentationENS_4base5FlagsINS2_4FlagEjEENS2_21AlignmentRequirementsE(%"class.v8::internal::compiler::MachineOperatorBuilder"* %47, %"class.v8::internal::Zone"* %50, i8 zeroext %4, i32 %5, i64 %52, i32 %54) #14
  %55 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %56 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %11, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %56, i64 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  tail call void @_ZN2v88internal8compiler21CommonOperatorBuilderC1EPNS0_4ZoneE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %55, %"class.v8::internal::Zone"* %58) #14
  %59 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 6
  %60 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %11, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %60, i64 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  tail call void @_ZN2v88internal8compiler25SimplifiedOperatorBuilderC1EPNS0_4ZoneE(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"* %59, %"class.v8::internal::Zone"* %62) #14
  %63 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 7
  store %"class.v8::internal::compiler::CallDescriptor"* %3, %"class.v8::internal::compiler::CallDescriptor"** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 8
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 9
  %66 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %3, i64 0, i32 4
  %67 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %67, i64 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %11, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %70, i64 0, i32 0
  %72 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %71, align 8
  %73 = ptrtoint %"class.v8::internal::Zone"* %72 to i64
  %74 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1
  %75 = bitcast %"struct.std::__1::__compressed_pair_elem.1145"* %74 to i64*
  %76 = bitcast %"class.v8::internal::ZoneVector.1140"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #14
  store i64 %73, i64* %75, align 8
  %77 = icmp eq i64 %69, 0
  br i1 %77, label %105, label %78

78:                                               ; preds = %44
  %79 = icmp ugt i64 %69, 268435455
  br i1 %79, label %80, label %82

80:                                               ; preds = %78
  %81 = bitcast %"class.v8::internal::ZoneVector.1140"* %65 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %81) #15
  unreachable

82:                                               ; preds = %78
  %83 = shl i64 %69, 3
  %84 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %72, i64 0, i32 2
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %72, i64 0, i32 3
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %87, %85
  %89 = icmp ugt i64 %83, %88
  br i1 %89, label %90, label %92, !prof !2

90:                                               ; preds = %82
  %91 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %72, i64 %83) #14
  br label %94

92:                                               ; preds = %82
  %93 = add i64 %85, %83
  store i64 %93, i64* %84, align 8
  br label %94

94:                                               ; preds = %92, %90
  %95 = phi i64 [ %91, %90 ], [ %85, %92 ]
  %96 = inttoptr i64 %95 to %"class.v8::internal::compiler::Node"**
  %97 = inttoptr i64 %95 to i8*
  %98 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %99 = getelementptr inbounds %"class.v8::internal::ZoneVector.1140", %"class.v8::internal::ZoneVector.1140"* %65, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"** %96, %"class.v8::internal::compiler::Node"*** %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %96, i64 %69
  %101 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"** %100, %"class.v8::internal::compiler::Node"*** %101, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 %83, i1 false) #14
  %102 = bitcast %"class.v8::internal::compiler::Node"*** %98 to i64*
  %103 = ptrtoint %"class.v8::internal::compiler::Node"** %100 to i64
  store i64 %103, i64* %102, align 8
  %104 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %63, align 8
  br label %105

105:                                              ; preds = %44, %94
  %106 = phi %"class.v8::internal::compiler::CallDescriptor"* [ %3, %44 ], [ %104, %94 ]
  %107 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %108 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %14, align 8
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %108, i64 0, i32 4
  %110 = bitcast %"class.v8::internal::compiler::BasicBlock"** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.v8::internal::compiler::BasicBlock"** %107 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 11
  store i32 %7, i32* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %106, i64 0, i32 4
  %115 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %115, i64 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = trunc i64 %117 to i32
  %119 = add nsw i32 %118, 1
  %120 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5StartEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %55, i32 %119) #14
  %121 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %2, %"class.v8::internal::compiler::Operator"* %120, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #14
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %2, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %121, %"class.v8::internal::compiler::Node"** %122, align 8
  %123 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %3, i64 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %137

126:                                              ; preds = %105
  %127 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9ParameterEiPKc(%"class.v8::internal::compiler::CommonOperatorBuilder"* %55, i32 -1, i8* null) #14
  %128 = bitcast %"class.v8::internal::compiler::Node"** %122 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast [1 x %"class.v8::internal::compiler::Node"*]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #14
  %131 = getelementptr inbounds [1 x %"class.v8::internal::compiler::Node"*], [1 x %"class.v8::internal::compiler::Node"*]* %9, i64 0, i64 0
  %132 = bitcast [1 x %"class.v8::internal::compiler::Node"*]* %9 to i64*
  store i64 %129, i64* %132, align 8
  %133 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %11, align 8
  %134 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %133, %"class.v8::internal::compiler::Operator"* %127, i32 1, %"class.v8::internal::compiler::Node"** nonnull %131, i1 zeroext false) #14
  %135 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %14, align 8
  %136 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %107, align 8
  call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %135, %"class.v8::internal::compiler::BasicBlock"* %136, %"class.v8::internal::compiler::Node"* %134) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #14
  store %"class.v8::internal::compiler::Node"* %134, %"class.v8::internal::compiler::Node"** %64, align 8
  br label %137

137:                                              ; preds = %126, %105
  %138 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %63, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %138, i64 0, i32 4
  %140 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %139, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %140, i64 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %150, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.v8::internal::compiler::Node"** %122 to i64*
  %146 = bitcast [1 x %"class.v8::internal::compiler::Node"*]* %9 to i8*
  %147 = getelementptr inbounds [1 x %"class.v8::internal::compiler::Node"*], [1 x %"class.v8::internal::compiler::Node"*]* %9, i64 0, i64 0
  %148 = bitcast [1 x %"class.v8::internal::compiler::Node"*]* %9 to i64*
  %149 = getelementptr inbounds %"class.v8::internal::ZoneVector.1140", %"class.v8::internal::ZoneVector.1140"* %65, i64 0, i32 0, i32 0, i32 0
  br label %155

150:                                              ; preds = %155, %137
  %151 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3EndEm(%"class.v8::internal::compiler::CommonOperatorBuilder"* %55, i64 0) #14
  %152 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %2, %"class.v8::internal::compiler::Operator"* %151, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #14
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %2, i64 0, i32 2
  store %"class.v8::internal::compiler::Node"* %152, %"class.v8::internal::compiler::Node"** %153, align 8
  %154 = load %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::SourcePositionTable"** %30, align 8
  call void @_ZN2v88internal8compiler19SourcePositionTable12AddDecoratorEv(%"class.v8::internal::compiler::SourcePositionTable"* %154) #14
  ret void

155:                                              ; preds = %144, %155
  %156 = phi i64 [ 0, %144 ], [ %166, %155 ]
  %157 = trunc i64 %156 to i32
  %158 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9ParameterEiPKc(%"class.v8::internal::compiler::CommonOperatorBuilder"* %55, i32 %157, i8* null) #14
  %159 = load i64, i64* %145, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #14
  store i64 %159, i64* %148, align 8
  %160 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %11, align 8
  %161 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %160, %"class.v8::internal::compiler::Operator"* %158, i32 1, %"class.v8::internal::compiler::Node"** nonnull %147, i1 zeroext false) #14
  %162 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %14, align 8
  %163 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %107, align 8
  call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %162, %"class.v8::internal::compiler::BasicBlock"* %163, %"class.v8::internal::compiler::Node"* %161) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #14
  %164 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %149, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, i64 %156
  store %"class.v8::internal::compiler::Node"* %161, %"class.v8::internal::compiler::Node"** %165, align 8
  %166 = add nuw i64 %156, 1
  %167 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %63, align 8
  %168 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %167, i64 0, i32 4
  %169 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %168, align 8
  %170 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %169, i64 0, i32 1
  %171 = load i64, i64* %170, align 8
  %172 = icmp ult i64 %166, %171
  br i1 %172, label %155, label %150
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN2v88internal8compiler22MachineOperatorBuilderC1EPNS0_4ZoneENS0_21MachineRepresentationENS_4base5FlagsINS2_4FlagEjEENS2_21AlignmentRequirementsE(%"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::Zone"*, i8 zeroext, i32, i64, i32) unnamed_addr #2

declare void @_ZN2v88internal8compiler21CommonOperatorBuilderC1EPNS0_4ZoneE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::Zone"*) unnamed_addr #2

declare void @_ZN2v88internal8compiler25SimplifiedOperatorBuilderC1EPNS0_4ZoneE(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::Zone"*) unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5StartEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9ParameterEiPKc(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32, i8*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3EndEm(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler19SourcePositionTable12AddDecoratorEv(%"class.v8::internal::compiler::SourcePositionTable"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler32SetCurrentExternalSourcePositionENSt3__14pairIPKciEE(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture readonly, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = tail call i32 @_ZN2v88internal7Isolate37LookupOrAddExternallyCompiledFilenameEPKc(%"class.v8::internal::Isolate"* %5, i8* %1) #14
  %7 = sext i32 %2 to i64
  %8 = shl nsw i64 %7, 1
  %9 = and i64 %8, -140737486258178
  %10 = sext i32 %6 to i64
  %11 = shl nsw i64 %10, 21
  %12 = and i64 %11, -140735342968832
  %13 = or i64 %9, %12
  %14 = or i64 %13, 1
  %15 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 3
  %16 = load %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::SourcePositionTable"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %16, i64 0, i32 2, i32 0
  store i64 %14, i64* %17, align 8
  ret void
}

declare i32 @_ZN2v88internal7Isolate37LookupOrAddExternallyCompiledFilenameEPKc(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i32 } @_ZNK2v88internal8compiler19RawMachineAssembler32GetCurrentExternalSourcePositionEv(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 3
  %3 = load %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::SourcePositionTable"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %3, i64 0, i32 2, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 140737488355327
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %1
  %9 = lshr i64 %5, 21
  %10 = trunc i64 %9 to i32
  %11 = and i32 %10, 1023
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 0
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %14 = tail call i8* @_ZNK2v88internal7Isolate29GetExternallyCompiledFilenameEi(%"class.v8::internal::Isolate"* %13, i32 %11) #14
  %15 = lshr i64 %5, 1
  %16 = trunc i64 %15 to i32
  %17 = and i32 %16, 1048575
  br label %18

18:                                               ; preds = %1, %8
  %19 = phi i8* [ %14, %8 ], [ null, %1 ]
  %20 = phi i32 [ %17, %8 ], [ -1, %1 ]
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  ret { i8*, i32 } %22
}

declare i8* @_ZNK2v88internal7Isolate29GetExternallyCompiledFilenameEi(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler12NullConstantEv(%"class.v8::internal::compiler::RawMachineAssembler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle.969", align 8
  %3 = bitcast %"class.v8::internal::compiler::RawMachineAssembler"* %0 to %"class.v8::internal::Factory"**
  %4 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %4, i64 176
  %6 = bitcast %"class.v8::internal::Handle.969"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6)
  %7 = bitcast %"class.v8::internal::Handle.969"* %2 to %"class.v8::internal::Factory"**
  store %"class.v8::internal::Factory"* %5, %"class.v8::internal::Factory"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %9 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder12HeapConstantERKNS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %8, %"class.v8::internal::Handle.969"* nonnull dereferenceable(8) %2) #14
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %11 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %10, align 8
  %12 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %11, %"class.v8::internal::compiler::Operator"* %9, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #14
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %14 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %16 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %15, align 8
  call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %14, %"class.v8::internal::compiler::BasicBlock"* %16, %"class.v8::internal::compiler::Node"* %12) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6)
  ret %"class.v8::internal::compiler::Node"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler17UndefinedConstantEv(%"class.v8::internal::compiler::RawMachineAssembler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle.969", align 8
  %3 = bitcast %"class.v8::internal::compiler::RawMachineAssembler"* %0 to %"class.v8::internal::Factory"**
  %4 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %4, i64 160
  %6 = bitcast %"class.v8::internal::Handle.969"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6)
  %7 = bitcast %"class.v8::internal::Handle.969"* %2 to %"class.v8::internal::Factory"**
  store %"class.v8::internal::Factory"* %5, %"class.v8::internal::Factory"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %9 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder12HeapConstantERKNS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %8, %"class.v8::internal::Handle.969"* nonnull dereferenceable(8) %2) #14
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %11 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %10, align 8
  %12 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %11, %"class.v8::internal::compiler::Operator"* %9, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #14
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %14 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %16 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %15, align 8
  call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %14, %"class.v8::internal::compiler::BasicBlock"* %16, %"class.v8::internal::compiler::Node"* %12) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6)
  ret %"class.v8::internal::compiler::Node"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler25RelocatableIntPtrConstantElNS0_9RelocInfo4ModeE(%"class.v8::internal::compiler::RawMachineAssembler"*, i64, i8 signext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %5 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder24RelocatableInt64ConstantElNS0_9RelocInfo4ModeE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %4, i64 %1, i8 signext %2) #14
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %6, align 8
  %8 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %7, %"class.v8::internal::compiler::Operator"* %5, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #14
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %10 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %12 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %11, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %10, %"class.v8::internal::compiler::BasicBlock"* %12, %"class.v8::internal::compiler::Node"* %8) #14
  ret %"class.v8::internal::compiler::Node"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler17OptimizedAllocateEPNS1_4NodeENS0_14AllocationTypeENS0_17AllowLargeObjectsE(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca [1 x %"class.v8::internal::compiler::Node"*], align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 6
  %7 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder11AllocateRawENS1_4TypeENS0_14AllocationTypeENS0_17AllowLargeObjectsE(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"* %6, i64 4294967295, i8 zeroext %2, i32 %3) #14
  %8 = bitcast [1 x %"class.v8::internal::compiler::Node"*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds [1 x %"class.v8::internal::compiler::Node"*], [1 x %"class.v8::internal::compiler::Node"*]* %5, i64 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %11 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %10, align 8
  %12 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %11, %"class.v8::internal::compiler::Operator"* %7, i32 1, %"class.v8::internal::compiler::Node"** nonnull %9, i1 zeroext false) #14
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %14 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %16 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %15, align 8
  call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %14, %"class.v8::internal::compiler::BasicBlock"* %16, %"class.v8::internal::compiler::Node"* %12) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  ret %"class.v8::internal::compiler::Node"* %12
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder11AllocateRawENS1_4TypeENS0_14AllocationTypeENS0_17AllowLargeObjectsE(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, i64, i8 zeroext, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Schedule"* @_ZN2v88internal8compiler19RawMachineAssembler13ExportForTestEv(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::StdoutStream", align 8
  %3 = alloca %"class.v8::internal::StdoutStream", align 8
  %4 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0)) #14
  %7 = bitcast %"class.v8::internal::StdoutStream"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = bitcast %"class.v8::internal::StdoutStream"* %2 to %"class.v8::internal::OFStream"*
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %9, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %10) #14
  %11 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %12 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #14
  %13 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %12, %"class.v8::base::RecursiveMutex"** %13, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %12) #14
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %15 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %14, align 8
  %16 = bitcast %"class.v8::internal::StdoutStream"* %2 to %"class.std::__1::basic_ostream"*
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8ScheduleE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %16, %"class.v8::internal::compiler::Schedule"* dereferenceable(120) %15) #14
  %18 = bitcast %"class.v8::internal::StdoutStream"* %2 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 2
  %20 = bitcast %"class.std::__1::basic_ios.base"* %19 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %20, align 8
  %21 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %21) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %18, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %22) #14
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %16, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %23 = bitcast %"class.std::__1::basic_ios.base"* %19 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %23) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %7) #14
  br label %24

24:                                               ; preds = %1, %6
  %25 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %26 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %25, align 8
  call void @_ZN2v88internal8compiler8Schedule23EnsureCFGWellFormednessEv(%"class.v8::internal::compiler::Schedule"* %26) #14
  %27 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %28 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %28, i64 0, i32 0
  %30 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %29, align 8
  %31 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %25, align 8
  %32 = call %"class.v8::internal::ZoneVector.1133"* @_ZN2v88internal8compiler9Scheduler17ComputeSpecialRPOEPNS0_4ZoneEPNS1_8ScheduleE(%"class.v8::internal::Zone"* %30, %"class.v8::internal::compiler::Schedule"* %31) #14
  %33 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %25, align 8
  call void @_ZN2v88internal8compiler8Schedule21PropagateDeferredMarkEv(%"class.v8::internal::compiler::Schedule"* %33) #14
  %34 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !3
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %53, label %36

36:                                               ; preds = %24
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0)) #14
  %37 = bitcast %"class.v8::internal::StdoutStream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %37) #14
  %38 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = bitcast %"class.v8::internal::StdoutStream"* %3 to %"class.v8::internal::OFStream"*
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %39, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %40) #14
  %41 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %41, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %38, align 8
  %42 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #14
  %43 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %42, %"class.v8::base::RecursiveMutex"** %43, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %42) #14
  %44 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %25, align 8
  %45 = bitcast %"class.v8::internal::StdoutStream"* %3 to %"class.std::__1::basic_ostream"*
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8ScheduleE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %45, %"class.v8::internal::compiler::Schedule"* dereferenceable(120) %44) #14
  %47 = bitcast %"class.v8::internal::StdoutStream"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 2
  %49 = bitcast %"class.std::__1::basic_ios.base"* %48 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %49, align 8
  %50 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %43, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %50) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %47, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %51) #14
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %45, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %52 = bitcast %"class.std::__1::basic_ios.base"* %48 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %52) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %37) #14
  br label %53

53:                                               ; preds = %24, %36
  %54 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 3
  %55 = load %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::SourcePositionTable"** %54, align 8
  call void @_ZN2v88internal8compiler19SourcePositionTable15RemoveDecoratorEv(%"class.v8::internal::compiler::SourcePositionTable"* %55) #14
  %56 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %25, align 8
  store %"class.v8::internal::compiler::Schedule"* null, %"class.v8::internal::compiler::Schedule"** %25, align 8
  ret %"class.v8::internal::compiler::Schedule"* %56
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #14
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #14
  ret void
}

declare void @_ZN2v88internal8compiler8Schedule23EnsureCFGWellFormednessEv(%"class.v8::internal::compiler::Schedule"*) local_unnamed_addr #2

declare %"class.v8::internal::ZoneVector.1133"* @_ZN2v88internal8compiler9Scheduler17ComputeSpecialRPOEPNS0_4ZoneEPNS1_8ScheduleE(%"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Schedule"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler8Schedule21PropagateDeferredMarkEv(%"class.v8::internal::compiler::Schedule"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler19SourcePositionTable15RemoveDecoratorEv(%"class.v8::internal::compiler::SourcePositionTable"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Graph"* @_ZN2v88internal8compiler19RawMachineAssembler21ExportForOptimizationEv(%"class.v8::internal::compiler::RawMachineAssembler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::StdoutStream", align 8
  %3 = alloca %"class.v8::internal::StdoutStream", align 8
  %4 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0)) #14
  %7 = bitcast %"class.v8::internal::StdoutStream"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = bitcast %"class.v8::internal::StdoutStream"* %2 to %"class.v8::internal::OFStream"*
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %9, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %10) #14
  %11 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %12 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #14
  %13 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %12, %"class.v8::base::RecursiveMutex"** %13, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %12) #14
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %15 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %14, align 8
  %16 = bitcast %"class.v8::internal::StdoutStream"* %2 to %"class.std::__1::basic_ostream"*
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8ScheduleE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %16, %"class.v8::internal::compiler::Schedule"* dereferenceable(120) %15) #14
  %18 = bitcast %"class.v8::internal::StdoutStream"* %2 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 2
  %20 = bitcast %"class.std::__1::basic_ios.base"* %19 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %20, align 8
  %21 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %21) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %18, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %22) #14
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %16, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %23 = bitcast %"class.std::__1::basic_ios.base"* %19 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %23) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %7) #14
  br label %24

24:                                               ; preds = %1, %6
  %25 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %26 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %25, align 8
  call void @_ZN2v88internal8compiler8Schedule23EnsureCFGWellFormednessEv(%"class.v8::internal::compiler::Schedule"* %26) #14
  %27 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %25, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %29 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  call void @_ZN2v88internal8compiler19RawMachineAssembler19OptimizeControlFlowEPNS1_8ScheduleEPNS1_5GraphEPNS1_21CommonOperatorBuilderE(%"class.v8::internal::compiler::Schedule"* %27, %"class.v8::internal::compiler::Graph"* %29, %"class.v8::internal::compiler::CommonOperatorBuilder"* %30)
  %31 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %28, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %31, i64 0, i32 0
  %33 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %32, align 8
  %34 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %25, align 8
  %35 = call %"class.v8::internal::ZoneVector.1133"* @_ZN2v88internal8compiler9Scheduler17ComputeSpecialRPOEPNS0_4ZoneEPNS1_8ScheduleE(%"class.v8::internal::Zone"* %33, %"class.v8::internal::compiler::Schedule"* %34) #14
  %36 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %55, label %38

38:                                               ; preds = %24
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.2, i64 0, i64 0)) #14
  %39 = bitcast %"class.v8::internal::StdoutStream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %39) #14
  %40 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = bitcast %"class.v8::internal::StdoutStream"* %3 to %"class.v8::internal::OFStream"*
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %41, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %42) #14
  %43 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %43, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %40, align 8
  %44 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #14
  %45 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %44, %"class.v8::base::RecursiveMutex"** %45, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %44) #14
  %46 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %25, align 8
  %47 = bitcast %"class.v8::internal::StdoutStream"* %3 to %"class.std::__1::basic_ostream"*
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8ScheduleE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %47, %"class.v8::internal::compiler::Schedule"* dereferenceable(120) %46) #14
  %49 = bitcast %"class.v8::internal::StdoutStream"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 2
  %51 = bitcast %"class.std::__1::basic_ios.base"* %50 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %51, align 8
  %52 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %45, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %52) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %49, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %53) #14
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %47, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %54 = bitcast %"class.std::__1::basic_ios.base"* %50 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %54) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %39) #14
  br label %55

55:                                               ; preds = %24, %38
  call void @_ZN2v88internal8compiler19RawMachineAssembler17MakeReschedulableEv(%"class.v8::internal::compiler::RawMachineAssembler"* %0)
  store %"class.v8::internal::compiler::Schedule"* null, %"class.v8::internal::compiler::Schedule"** %25, align 8
  %56 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %28, align 8
  ret %"class.v8::internal::compiler::Graph"* %56
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler19OptimizeControlFlowEPNS1_8ScheduleEPNS1_5GraphEPNS1_21CommonOperatorBuilderE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::array.1195", align 8
  %5 = alloca %"struct.std::__1::array.1195", align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %7 to i64*
  %9 = bitcast %"class.std::__1::vector.1134"* %6 to i64*
  %10 = bitcast %"struct.std::__1::array.1195"* %4 to i8*
  %11 = getelementptr inbounds %"struct.std::__1::array.1195", %"struct.std::__1::array.1195"* %4, i64 0, i32 0, i64 0
  %12 = bitcast %"struct.std::__1::array.1195"* %5 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::array.1195", %"struct.std::__1::array.1195"* %5, i64 0, i32 0, i64 0
  %14 = load i64, i64* %8, align 8
  %15 = load i64, i64* %9, align 8
  br label %19

16:                                               ; preds = %244
  %17 = and i8 %246, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %3, %16
  %20 = phi i64 [ %15, %3 ], [ %249, %16 ]
  %21 = phi i64 [ %14, %3 ], [ %248, %16 ]
  %22 = icmp eq i64 %21, %20
  br i1 %22, label %23, label %24

23:                                               ; preds = %19, %16
  ret void

24:                                               ; preds = %19, %244
  %25 = phi i64 [ %249, %244 ], [ %20, %19 ]
  %26 = phi i8 [ %246, %244 ], [ 0, %19 ]
  %27 = phi i64 [ %247, %244 ], [ 0, %19 ]
  %28 = inttoptr i64 %25 to %"class.v8::internal::compiler::BasicBlock"**
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %28, i64 %27
  %30 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %29, align 8
  %31 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %30, null
  br i1 %31, label %244, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 9
  %34 = load i32, i32* %33, align 4
  switch i32 %34, label %244 [
    i32 1, label %35
    i32 3, label %80
  ]

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 12, i32 0, i32 0, i32 0
  %37 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %36, align 8
  %38 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %38, i64 0, i32 13, i32 0
  %40 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %38, i64 0, i32 13, i32 0, i32 0, i32 1
  %41 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector.1134"* %39 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = icmp eq i64 %45, 8
  br i1 %46, label %47, label %244

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %38, i64 0, i32 11, i32 0, i32 0, i32 0
  %49 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %38, i64 0, i32 11, i32 0, i32 0, i32 1
  %51 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %50, align 8
  %52 = icmp eq %"class.v8::internal::compiler::Node"** %49, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %59, %47
  %54 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %38, i64 0, i32 9
  %55 = load i32, i32* %54, align 4
  call void @_ZN2v88internal8compiler10BasicBlock11set_controlENS2_7ControlE(%"class.v8::internal::compiler::BasicBlock"* nonnull %30, i32 %55) #14
  %56 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %38, i64 0, i32 10
  %57 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %56, align 8
  call void @_ZN2v88internal8compiler10BasicBlock17set_control_inputEPNS1_4NodeE(%"class.v8::internal::compiler::BasicBlock"* nonnull %30, %"class.v8::internal::compiler::Node"* %57) #14
  %58 = icmp eq %"class.v8::internal::compiler::Node"* %57, null
  br i1 %58, label %65, label %64

59:                                               ; preds = %47, %59
  %60 = phi %"class.v8::internal::compiler::Node"** [ %62, %59 ], [ %49, %47 ]
  %61 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %60, align 8
  call void @_ZN2v88internal8compiler8Schedule15SetBlockForNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %0, %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::Node"* %61) #14
  call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %0, %"class.v8::internal::compiler::BasicBlock"* nonnull %30, %"class.v8::internal::compiler::Node"* %61) #14
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %60, i64 1
  %63 = icmp eq %"class.v8::internal::compiler::Node"** %62, %51
  br i1 %63, label %53, label %59

64:                                               ; preds = %53
  call void @_ZN2v88internal8compiler8Schedule15SetBlockForNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %0, %"class.v8::internal::compiler::BasicBlock"* nonnull %30, %"class.v8::internal::compiler::Node"* nonnull %57) #14
  br label %65

65:                                               ; preds = %53, %64
  %66 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %38, i64 0, i32 2
  %67 = load i8, i8* %66, align 8, !range !3
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 2
  store i8 1, i8* %70, align 8
  br label %71

71:                                               ; preds = %65, %69
  %72 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 12, i32 0
  %73 = bitcast %"class.std::__1::vector.1134"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 12, i32 0, i32 0, i32 1
  %76 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %75 to i64*
  store i64 %74, i64* %76, align 8
  call void @_ZN2v88internal8compiler8Schedule14MoveSuccessorsEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* %0, %"class.v8::internal::compiler::BasicBlock"* %38, %"class.v8::internal::compiler::BasicBlock"* nonnull %30) #14
  %77 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %38, i64 0, i32 14, i32 0
  %78 = load i64, i64* %77, align 8
  call void @_ZN2v88internal8compiler8Schedule14ClearBlockByIdENS1_10BasicBlock2IdE(%"class.v8::internal::compiler::Schedule"* %0, i64 %78) #14
  %79 = add i64 %27, -1
  br label %244

80:                                               ; preds = %32
  %81 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 11, i32 0
  %82 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 11, i32 0, i32 0, i32 1
  %83 = bitcast %"class.v8::internal::compiler::Node"*** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.std::__1::vector.1141"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %84, %86
  %88 = icmp eq i64 %87, 8
  br i1 %88, label %89, label %244

89:                                               ; preds = %80
  %90 = inttoptr i64 %86 to %"class.v8::internal::compiler::Node"**
  %91 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %91, i64 0, i32 0
  %93 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %93, i64 0, i32 2
  %95 = load i16, i16* %94, align 8
  %96 = icmp eq i16 %95, 35
  br i1 %96, label %97, label %244

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 10
  %99 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %99, i64 0, i32 0
  %101 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %101, i64 0, i32 5
  %103 = load i32, i32* %102, align 4
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %106, label %105, !prof !4

105:                                              ; preds = %97
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #15
  unreachable

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %99, i64 0, i32 3
  %108 = load i32, i32* %107, align 4
  %109 = and i32 %108, 251658240
  %110 = icmp eq i32 %109, 251658240
  %111 = ptrtoint %"class.v8::internal::compiler::Node"* %99 to i64
  %112 = add i64 %111, 32
  br i1 %110, label %113, label %117

113:                                              ; preds = %106
  %114 = inttoptr i64 %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = add i64 %115, 16
  br label %117

117:                                              ; preds = %106, %113
  %118 = phi i64 [ %116, %113 ], [ %112, %106 ]
  %119 = inttoptr i64 %118 to %"class.v8::internal::compiler::Node"**
  %120 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %119, align 8
  %121 = icmp eq %"class.v8::internal::compiler::Node"* %120, %91
  br i1 %121, label %122, label %244

122:                                              ; preds = %117
  %123 = call i32 @_ZNK2v88internal8compiler4Node8UseCountEv(%"class.v8::internal::compiler::Node"* %91) #14
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %244

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 12, i32 0, i32 0, i32 0
  %127 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %126, align 8
  %128 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %127, i64 1
  %130 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %128, i64 0, i32 11, i32 0, i32 0, i32 0
  %132 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %131, align 8
  %133 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %132, align 8
  call void @_ZN2v88internal8compiler4Node4KillEv(%"class.v8::internal::compiler::Node"* %133) #14
  %134 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %131, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %134, i64 1
  %136 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %128, i64 0, i32 11, i32 0, i32 0, i32 1
  %137 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = ptrtoint %"class.v8::internal::compiler::Node"** %135 to i64
  %140 = sub i64 %138, %139
  %141 = ashr exact i64 %140, 3
  %142 = icmp eq i64 %140, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %125
  %144 = bitcast %"class.v8::internal::compiler::Node"** %134 to i8*
  %145 = bitcast %"class.v8::internal::compiler::Node"** %135 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 %140, i1 false) #14
  br label %146

146:                                              ; preds = %125, %143
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %134, i64 %141
  store %"class.v8::internal::compiler::Node"** %147, %"class.v8::internal::compiler::Node"*** %136, align 8
  %148 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %130, i64 0, i32 11, i32 0, i32 0, i32 0
  %149 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %148, align 8
  %150 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %149, align 8
  call void @_ZN2v88internal8compiler4Node4KillEv(%"class.v8::internal::compiler::Node"* %150) #14
  %151 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %148, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %151, i64 1
  %153 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %130, i64 0, i32 11, i32 0, i32 0, i32 1
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = ptrtoint %"class.v8::internal::compiler::Node"** %152 to i64
  %157 = sub i64 %155, %156
  %158 = ashr exact i64 %157, 3
  %159 = icmp eq i64 %157, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %146
  %161 = bitcast %"class.v8::internal::compiler::Node"** %151 to i8*
  %162 = bitcast %"class.v8::internal::compiler::Node"** %152 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 %157, i1 false) #14
  br label %163

163:                                              ; preds = %146, %160
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %151, i64 %158
  store %"class.v8::internal::compiler::Node"** %164, %"class.v8::internal::compiler::Node"*** %153, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %128, i64 0, i32 13, i32 0
  %166 = bitcast %"class.std::__1::vector.1134"* %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %128, i64 0, i32 13, i32 0, i32 0, i32 1
  %169 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %168 to i64*
  store i64 %167, i64* %169, align 8
  %170 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %130, i64 0, i32 13, i32 0
  %171 = bitcast %"class.std::__1::vector.1134"* %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %130, i64 0, i32 13, i32 0, i32 0, i32 1
  %174 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %173 to i64*
  store i64 %172, i64* %174, align 8
  %175 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 13, i32 0
  %176 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 13, i32 0, i32 0, i32 1
  %177 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"class.std::__1::vector.1134"* %175 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = sub i64 %178, %180
  %182 = ashr exact i64 %181, 3
  %183 = icmp eq i64 %181, 0
  br i1 %183, label %192, label %184

184:                                              ; preds = %163
  %185 = inttoptr i64 %180 to %"class.v8::internal::compiler::BasicBlock"**
  %186 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 13, i32 0, i32 0, i32 0
  %187 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 2
  %188 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %91, i64 0, i32 3
  %189 = ptrtoint %"class.v8::internal::compiler::Node"* %91 to i64
  %190 = add i64 %189, 32
  %191 = inttoptr i64 %190 to i64*
  br label %195

192:                                              ; preds = %227, %163
  call void @_ZN2v88internal8compiler4Node4KillEv(%"class.v8::internal::compiler::Node"* %99) #14
  %193 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 14, i32 0
  %194 = load i64, i64* %193, align 8
  call void @_ZN2v88internal8compiler8Schedule14ClearBlockByIdENS1_10BasicBlock2IdE(%"class.v8::internal::compiler::Schedule"* %0, i64 %194) #14
  br label %244

195:                                              ; preds = %242, %184
  %196 = phi %"class.v8::internal::compiler::BasicBlock"** [ %185, %184 ], [ %243, %242 ]
  %197 = phi i64 [ 0, %184 ], [ %240, %242 ]
  %198 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 %197
  %199 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %198, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %199, i64 0, i32 12, i32 0
  %201 = bitcast %"class.std::__1::vector.1134"* %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %199, i64 0, i32 12, i32 0, i32 0, i32 1
  %204 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %203 to i64*
  store i64 %202, i64* %204, align 8
  %205 = load i8, i8* %187, align 8, !range !3
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %209, label %207

207:                                              ; preds = %195
  %208 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %199, i64 0, i32 2
  store i8 1, i8* %208, align 8
  br label %209

209:                                              ; preds = %195, %207
  %210 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph9CloneNodeEPKNS1_4NodeE(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Node"* %99) #14
  %211 = icmp eq i64 %197, 2147483648
  br i1 %211, label %212, label %213, !prof !2

212:                                              ; preds = %209
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0)) #15
  unreachable

213:                                              ; preds = %209
  %214 = trunc i64 %197 to i32
  %215 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %92, align 8
  %216 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %215, i64 0, i32 5
  %217 = load i32, i32* %216, align 4
  %218 = icmp sgt i32 %217, %214
  br i1 %218, label %220, label %219, !prof !4

219:                                              ; preds = %213
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #15
  unreachable

220:                                              ; preds = %213
  %221 = load i32, i32* %188, align 4
  %222 = and i32 %221, 251658240
  %223 = icmp eq i32 %222, 251658240
  br i1 %223, label %224, label %227

224:                                              ; preds = %220
  %225 = load i64, i64* %191, align 8
  %226 = add i64 %225, 16
  br label %227

227:                                              ; preds = %220, %224
  %228 = phi i64 [ %226, %224 ], [ %190, %220 ]
  %229 = inttoptr i64 %228 to %"class.v8::internal::compiler::Node"**
  %230 = shl i64 %197, 32
  %231 = ashr exact i64 %230, 32
  %232 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %229, i64 %231
  %233 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, align 8
  call void @_ZN2v88internal8compiler14NodeProperties17ReplaceValueInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* %210, %"class.v8::internal::compiler::Node"* %233, i32 0) #14
  %234 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %0) #14
  %235 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %0) #14
  %236 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6IfTrueEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %2) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #14
  store %"class.v8::internal::compiler::Node"* %210, %"class.v8::internal::compiler::Node"** %11, align 8
  %237 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Operator"* %236, i32 1, %"class.v8::internal::compiler::Node"** nonnull %11, i1 zeroext false) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #14
  call void @_ZN2v88internal8compiler10BasicBlock7AddNodeEPNS1_4NodeE(%"class.v8::internal::compiler::BasicBlock"* %234, %"class.v8::internal::compiler::Node"* %237) #14
  %238 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder7IfFalseEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %2) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  store %"class.v8::internal::compiler::Node"* %210, %"class.v8::internal::compiler::Node"** %13, align 8
  %239 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Operator"* %238, i32 1, %"class.v8::internal::compiler::Node"** nonnull %13, i1 zeroext false) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  call void @_ZN2v88internal8compiler10BasicBlock7AddNodeEPNS1_4NodeE(%"class.v8::internal::compiler::BasicBlock"* %235, %"class.v8::internal::compiler::Node"* %239) #14
  call void @_ZN2v88internal8compiler8Schedule7AddGotoEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* %0, %"class.v8::internal::compiler::BasicBlock"* %234, %"class.v8::internal::compiler::BasicBlock"* %128) #14
  call void @_ZN2v88internal8compiler8Schedule7AddGotoEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* %0, %"class.v8::internal::compiler::BasicBlock"* %235, %"class.v8::internal::compiler::BasicBlock"* %130) #14
  call void @_ZN2v88internal8compiler10BasicBlock11set_controlENS2_7ControlE(%"class.v8::internal::compiler::BasicBlock"* %199, i32 0) #14
  call void @_ZN2v88internal8compiler8Schedule9AddBranchEPNS1_10BasicBlockEPNS1_4NodeES4_S4_(%"class.v8::internal::compiler::Schedule"* %0, %"class.v8::internal::compiler::BasicBlock"* %199, %"class.v8::internal::compiler::Node"* %210, %"class.v8::internal::compiler::BasicBlock"* %234, %"class.v8::internal::compiler::BasicBlock"* %235) #14
  %240 = add nuw nsw i64 %197, 1
  %241 = icmp ult i64 %240, %182
  br i1 %241, label %242, label %192

242:                                              ; preds = %227
  %243 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %186, align 8
  br label %195

244:                                              ; preds = %32, %35, %71, %80, %89, %122, %117, %192, %24
  %245 = phi i64 [ %79, %71 ], [ %27, %24 ], [ %27, %192 ], [ %27, %117 ], [ %27, %122 ], [ %27, %89 ], [ %27, %80 ], [ %27, %35 ], [ %27, %32 ]
  %246 = phi i8 [ 1, %71 ], [ %26, %24 ], [ 1, %192 ], [ %26, %117 ], [ %26, %122 ], [ %26, %89 ], [ %26, %80 ], [ %26, %35 ], [ %26, %32 ]
  %247 = add i64 %245, 1
  %248 = load i64, i64* %8, align 8
  %249 = load i64, i64* %9, align 8
  %250 = sub i64 %248, %249
  %251 = ashr exact i64 %250, 3
  %252 = icmp ult i64 %247, %251
  br i1 %252, label %24, label %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler17MakeReschedulableEv(%"class.v8::internal::compiler::RawMachineAssembler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.std::__1::array.1196", align 8
  %3 = alloca %"struct.std::__1::array.1197", align 8
  %4 = alloca %"struct.std::__1::array.1196", align 8
  %5 = alloca %"class.std::__1::vector.1158", align 8
  %6 = alloca %"class.std::__1::vector.1158", align 8
  %7 = alloca %"class.std::__1::vector.1164", align 8
  %8 = alloca %"class.std::__1::vector.1158", align 8
  %9 = alloca %"class.std::__1::vector.1158", align 8
  %10 = alloca %"class.std::__1::vector.1173", align 8
  %11 = alloca %"class.std::__1::vector.1173", align 8
  %12 = alloca %"class.std::__1::vector.1158", align 8
  %13 = alloca %"class.std::__1::vector.1158", align 8
  %14 = alloca %"class.std::__1::vector.1158", align 8
  %15 = alloca %"class.std::__1::vector.1158", align 8
  %16 = bitcast %"class.std::__1::vector.1158"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %18 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %18, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %18, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.1134"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #14
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %48, label %28

28:                                               ; preds = %1
  %29 = icmp ugt i64 %26, 2305843009213693951
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector.1158"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #15
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #16
  %34 = bitcast i8* %33 to %"class.v8::internal::compiler::Node"**
  %35 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %5, i64 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::vector.1158"* %5 to i8**
  store i8* %33, i8** %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, i64 %26
  %38 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"** %37, %"class.v8::internal::compiler::Node"*** %38, align 8
  %39 = bitcast %"class.v8::internal::compiler::Node"*** %35 to i64*
  %40 = ptrtoint i8* %33 to i64
  %41 = add nsw i64 %26, -1
  %42 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, i64 %41
  %43 = ptrtoint %"class.v8::internal::compiler::Node"** %42 to i64
  %44 = sub i64 8, %40
  %45 = add i64 %44, %43
  %46 = and i64 %45, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 %46, i1 false) #14
  %47 = ptrtoint %"class.v8::internal::compiler::Node"** %37 to i64
  store i64 %47, i64* %39, align 8
  br label %48

48:                                               ; preds = %1, %32
  %49 = bitcast %"class.std::__1::vector.1158"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #14
  %50 = load i64, i64* %21, align 8
  %51 = load i64, i64* %23, align 8
  %52 = sub i64 %50, %51
  %53 = ashr exact i64 %52, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 24, i1 false) #14
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %75, label %55

55:                                               ; preds = %48
  %56 = icmp ugt i64 %53, 2305843009213693951
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::vector.1158"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %58) #15
  unreachable

59:                                               ; preds = %55
  %60 = tail call i8* @_Znwm(i64 %52) #16
  %61 = bitcast i8* %60 to %"class.v8::internal::compiler::Node"**
  %62 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %6, i64 0, i32 0, i32 1
  %63 = bitcast %"class.std::__1::vector.1158"* %6 to i8**
  store i8* %60, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %61, i64 %53
  %65 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"** %64, %"class.v8::internal::compiler::Node"*** %65, align 8
  %66 = bitcast %"class.v8::internal::compiler::Node"*** %62 to i64*
  %67 = ptrtoint i8* %60 to i64
  %68 = add nsw i64 %53, -1
  %69 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %61, i64 %68
  %70 = ptrtoint %"class.v8::internal::compiler::Node"** %69 to i64
  %71 = sub i64 8, %67
  %72 = add i64 %71, %70
  %73 = and i64 %72, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 %73, i1 false) #14
  %74 = ptrtoint %"class.v8::internal::compiler::Node"** %64 to i64
  store i64 %74, i64* %66, align 8
  br label %75

75:                                               ; preds = %48, %59
  %76 = bitcast %"class.std::__1::vector.1164"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #14
  %77 = bitcast %"class.std::__1::vector.1158"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 24, i1 false) #14
  %78 = bitcast %"class.std::__1::vector.1158"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 24, i1 false) #14
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %80 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %18, i64 0, i32 3, i32 0, i32 0, i32 1
  %82 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %81, align 8
  %83 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %80, %82
  br i1 %83, label %84, label %87

84:                                               ; preds = %75
  %85 = getelementptr inbounds %"class.std::__1::vector.1164", %"class.std::__1::vector.1164"* %7, i64 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::vector.1164", %"class.std::__1::vector.1164"* %7, i64 0, i32 0, i32 1
  br label %645

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %89 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %90 = bitcast %"struct.std::__1::array.1196"* %4 to i8*
  %91 = getelementptr inbounds %"struct.std::__1::array.1196", %"struct.std::__1::array.1196"* %4, i64 0, i32 0, i64 0
  %92 = bitcast %"struct.std::__1::array.1196"* %4 to i64*
  %93 = getelementptr inbounds %"struct.std::__1::array.1196", %"struct.std::__1::array.1196"* %4, i64 0, i32 0, i64 1
  %94 = bitcast %"class.v8::internal::compiler::Node"** %93 to i64*
  %95 = bitcast %"struct.std::__1::array.1197"* %3 to i8*
  %96 = getelementptr inbounds %"struct.std::__1::array.1197", %"struct.std::__1::array.1197"* %3, i64 0, i32 0, i64 0
  %97 = bitcast %"struct.std::__1::array.1197"* %3 to i64*
  %98 = getelementptr inbounds %"struct.std::__1::array.1197", %"struct.std::__1::array.1197"* %3, i64 0, i32 0, i64 1
  %99 = bitcast %"class.v8::internal::compiler::Node"** %98 to i64*
  %100 = getelementptr inbounds %"struct.std::__1::array.1197", %"struct.std::__1::array.1197"* %3, i64 0, i32 0, i64 2
  %101 = bitcast %"struct.std::__1::array.1196"* %2 to i8*
  %102 = getelementptr inbounds %"struct.std::__1::array.1196", %"struct.std::__1::array.1196"* %2, i64 0, i32 0, i64 0
  %103 = getelementptr inbounds %"struct.std::__1::array.1196", %"struct.std::__1::array.1196"* %2, i64 0, i32 0, i64 1
  %104 = getelementptr inbounds %"class.std::__1::vector.1164", %"class.std::__1::vector.1164"* %7, i64 0, i32 0, i32 1
  %105 = getelementptr inbounds %"class.std::__1::vector.1164", %"class.std::__1::vector.1164"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %106 = bitcast %struct.LoopHeader** %104 to i64*
  %107 = bitcast %"class.std::__1::vector.1164"* %7 to i64*
  %108 = bitcast %struct.LoopHeader** %105 to i64*
  %109 = getelementptr inbounds %"class.std::__1::vector.1164", %"class.std::__1::vector.1164"* %7, i64 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::vector.1158"* %8 to i64*
  %111 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %8, i64 0, i32 0, i32 1
  %112 = bitcast %"class.v8::internal::compiler::Node"*** %111 to i64*
  %113 = bitcast %"class.std::__1::vector.1158"* %9 to i64*
  %114 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %9, i64 0, i32 0, i32 1
  %115 = bitcast %"class.v8::internal::compiler::Node"*** %114 to i64*
  %116 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %5, i64 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %118 = bitcast %"class.v8::internal::compiler::Node"*** %117 to i64*
  %119 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %6, i64 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %121 = bitcast %"class.v8::internal::compiler::Node"*** %120 to i64*
  br label %158

122:                                              ; preds = %629
  %123 = load %struct.LoopHeader*, %struct.LoopHeader** %109, align 8
  %124 = load %struct.LoopHeader*, %struct.LoopHeader** %104, align 8
  %125 = getelementptr inbounds %"class.std::__1::vector.1164", %"class.std::__1::vector.1164"* %7, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.std::__1::vector.1164", %"class.std::__1::vector.1164"* %7, i64 0, i32 0, i32 1
  %127 = icmp eq %struct.LoopHeader* %123, %124
  br i1 %127, label %645, label %128

128:                                              ; preds = %122
  %129 = bitcast %"class.std::__1::vector.1173"* %10 to i8*
  %130 = bitcast %"class.std::__1::vector.1173"* %11 to i8*
  %131 = getelementptr inbounds %"class.std::__1::vector.1173", %"class.std::__1::vector.1173"* %10, i64 0, i32 0, i32 1
  %132 = getelementptr inbounds %"class.std::__1::vector.1173", %"class.std::__1::vector.1173"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %133 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %131 to i64*
  %134 = bitcast %"class.std::__1::vector.1173"* %10 to i64*
  %135 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %132 to i64*
  %136 = getelementptr inbounds %"class.std::__1::vector.1173", %"class.std::__1::vector.1173"* %10, i64 0, i32 0, i32 0
  %137 = getelementptr inbounds %"class.std::__1::vector.1173", %"class.std::__1::vector.1173"* %11, i64 0, i32 0, i32 1
  %138 = getelementptr inbounds %"class.std::__1::vector.1173", %"class.std::__1::vector.1173"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %139 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %137 to i64*
  %140 = bitcast %"class.std::__1::vector.1173"* %11 to i64*
  %141 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %138 to i64*
  %142 = getelementptr inbounds %"class.std::__1::vector.1173", %"class.std::__1::vector.1173"* %11, i64 0, i32 0, i32 0
  %143 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %144 = bitcast %"class.std::__1::vector.1158"* %12 to i8*
  %145 = bitcast %"class.std::__1::vector.1158"* %13 to i8*
  %146 = bitcast %"class.std::__1::vector.1158"* %14 to i8*
  %147 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %14, i64 0, i32 0, i32 1
  %148 = bitcast %"class.std::__1::vector.1158"* %14 to i8**
  %149 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %149 to i8**
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %152 = bitcast %"class.std::__1::vector.1158"* %15 to i8*
  %153 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %15, i64 0, i32 0, i32 1
  %154 = bitcast %"class.std::__1::vector.1158"* %15 to i8**
  %155 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i8**
  %157 = bitcast %"class.v8::internal::compiler::Node"*** %153 to i64*
  br label %691

158:                                              ; preds = %643, %87
  %159 = phi %"class.v8::internal::compiler::Schedule"* [ %18, %87 ], [ %644, %643 ]
  %160 = phi %"class.v8::internal::compiler::BasicBlock"** [ %80, %87 ], [ %641, %643 ]
  %161 = phi i64 [ undef, %87 ], [ %631, %643 ]
  %162 = phi i64 [ undef, %87 ], [ %630, %643 ]
  %163 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %160, align 8
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %159, i64 0, i32 4
  %165 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %164, align 8
  %166 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %163, %165
  br i1 %166, label %167, label %172

167:                                              ; preds = %158
  %168 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %88, align 8
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %168, i64 0, i32 1
  %170 = bitcast %"class.v8::internal::compiler::Node"** %169 to i64*
  %171 = load i64, i64* %170, align 8
  br label %523

172:                                              ; preds = %158
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %159, i64 0, i32 5
  %174 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %173, align 8
  %175 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %163, %174
  br i1 %175, label %176, label %199

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %163, i64 0, i32 13, i32 0
  %178 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %163, i64 0, i32 13, i32 0, i32 0, i32 1
  %179 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.std::__1::vector.1134"* %177 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = icmp eq i64 %180, %182
  br i1 %183, label %523, label %184

184:                                              ; preds = %176, %184
  %185 = phi i64 [ %195, %184 ], [ %182, %176 ]
  %186 = phi i64 [ %193, %184 ], [ 0, %176 ]
  %187 = inttoptr i64 %185 to %"class.v8::internal::compiler::BasicBlock"**
  %188 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %88, align 8
  %189 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %187, i64 %186
  %190 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %189, align 8
  %191 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %190, i64 0, i32 10
  %192 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %191, align 8
  call void @_ZN2v88internal8compiler14NodeProperties17MergeControlToEndEPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS1_4NodeE(%"class.v8::internal::compiler::Graph"* %188, %"class.v8::internal::compiler::CommonOperatorBuilder"* %89, %"class.v8::internal::compiler::Node"* %192) #14
  %193 = add nuw i64 %186, 1
  %194 = load i64, i64* %179, align 8
  %195 = load i64, i64* %181, align 8
  %196 = sub i64 %194, %195
  %197 = ashr exact i64 %196, 3
  %198 = icmp ult i64 %193, %197
  br i1 %198, label %184, label %523

199:                                              ; preds = %172
  %200 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %163, i64 0, i32 7
  %201 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %200, align 8
  %202 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %201, null
  br i1 %202, label %283, label %203

203:                                              ; preds = %199
  %204 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %88, align 8
  %205 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4LoopEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %89, i32 2) #14
  %206 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %88, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %206, i64 0, i32 1
  %208 = bitcast %"class.v8::internal::compiler::Node"** %207 to i64*
  %209 = load i64, i64* %208, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #14
  store i64 %209, i64* %92, align 8
  store i64 %209, i64* %94, align 8
  %210 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %204, %"class.v8::internal::compiler::Operator"* %205, i32 2, %"class.v8::internal::compiler::Node"** nonnull %91, i1 zeroext false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #14
  %211 = ptrtoint %"class.v8::internal::compiler::Node"* %210 to i64
  %212 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %88, align 8
  %213 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9EffectPhiEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %89, i32 2) #14
  %214 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %88, align 8
  %215 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %214, i64 0, i32 1
  %216 = bitcast %"class.v8::internal::compiler::Node"** %215 to i64*
  %217 = load i64, i64* %216, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #14
  store i64 %217, i64* %97, align 8
  store i64 %217, i64* %99, align 8
  store %"class.v8::internal::compiler::Node"* %210, %"class.v8::internal::compiler::Node"** %100, align 8
  %218 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %212, %"class.v8::internal::compiler::Operator"* %213, i32 3, %"class.v8::internal::compiler::Node"** nonnull %96, i1 zeroext false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #14
  %219 = ptrtoint %"class.v8::internal::compiler::Node"* %218 to i64
  %220 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %88, align 8
  %221 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9TerminateEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %89) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #14
  store %"class.v8::internal::compiler::Node"* %218, %"class.v8::internal::compiler::Node"** %102, align 8
  store %"class.v8::internal::compiler::Node"* %210, %"class.v8::internal::compiler::Node"** %103, align 8
  %222 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %220, %"class.v8::internal::compiler::Operator"* %221, i32 2, %"class.v8::internal::compiler::Node"** nonnull %102, i1 zeroext false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #14
  %223 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %88, align 8
  call void @_ZN2v88internal8compiler14NodeProperties17MergeControlToEndEPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS1_4NodeE(%"class.v8::internal::compiler::Graph"* %223, %"class.v8::internal::compiler::CommonOperatorBuilder"* %89, %"class.v8::internal::compiler::Node"* %222) #14
  %224 = load %struct.LoopHeader*, %struct.LoopHeader** %104, align 8
  %225 = load %struct.LoopHeader*, %struct.LoopHeader** %105, align 8
  %226 = icmp ult %struct.LoopHeader* %224, %225
  %227 = ptrtoint %struct.LoopHeader* %225 to i64
  br i1 %226, label %228, label %236

228:                                              ; preds = %203
  %229 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %224, i64 0, i32 0
  store %"class.v8::internal::compiler::BasicBlock"* %163, %"class.v8::internal::compiler::BasicBlock"** %229, align 8
  %230 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %224, i64 0, i32 1
  %231 = bitcast %"class.v8::internal::compiler::Node"** %230 to i64*
  store i64 %211, i64* %231, align 8
  %232 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %224, i64 0, i32 2
  %233 = bitcast %"class.v8::internal::compiler::Node"** %232 to i64*
  store i64 %219, i64* %233, align 8
  %234 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %224, i64 1
  %235 = ptrtoint %struct.LoopHeader* %234 to i64
  store i64 %235, i64* %106, align 8
  br label %523

236:                                              ; preds = %203
  %237 = ptrtoint %struct.LoopHeader* %224 to i64
  %238 = load i64, i64* %107, align 8
  %239 = sub i64 %237, %238
  %240 = sdiv exact i64 %239, 24
  %241 = add nsw i64 %240, 1
  %242 = icmp ugt i64 %241, 768614336404564650
  br i1 %242, label %243, label %245

243:                                              ; preds = %236
  %244 = bitcast %"class.std::__1::vector.1164"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %244) #15
  unreachable

245:                                              ; preds = %236
  %246 = sub i64 %227, %238
  %247 = sdiv exact i64 %246, 24
  %248 = icmp ult i64 %247, 384307168202282325
  br i1 %248, label %249, label %254

249:                                              ; preds = %245
  %250 = shl nsw i64 %247, 1
  %251 = icmp ult i64 %250, %241
  %252 = select i1 %251, i64 %241, i64 %250
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %259, label %254

254:                                              ; preds = %249, %245
  %255 = phi i64 [ %252, %249 ], [ 768614336404564650, %245 ]
  %256 = mul i64 %255, 24
  %257 = call i8* @_Znwm(i64 %256) #16
  %258 = bitcast i8* %257 to %struct.LoopHeader*
  br label %259

259:                                              ; preds = %254, %249
  %260 = phi i64 [ %255, %254 ], [ 0, %249 ]
  %261 = phi %struct.LoopHeader* [ %258, %254 ], [ null, %249 ]
  %262 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %261, i64 %240
  %263 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %261, i64 %260
  %264 = ptrtoint %struct.LoopHeader* %263 to i64
  %265 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %262, i64 0, i32 0
  store %"class.v8::internal::compiler::BasicBlock"* %163, %"class.v8::internal::compiler::BasicBlock"** %265, align 8
  %266 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %261, i64 %240, i32 1
  %267 = bitcast %"class.v8::internal::compiler::Node"** %266 to i64*
  store i64 %211, i64* %267, align 8
  %268 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %261, i64 %240, i32 2
  %269 = bitcast %"class.v8::internal::compiler::Node"** %268 to i64*
  store i64 %219, i64* %269, align 8
  %270 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %262, i64 1
  %271 = ptrtoint %struct.LoopHeader* %270 to i64
  %272 = sdiv exact i64 %239, -24
  %273 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %262, i64 %272
  %274 = ptrtoint %struct.LoopHeader* %273 to i64
  %275 = icmp sgt i64 %239, 0
  br i1 %275, label %276, label %279

276:                                              ; preds = %259
  %277 = bitcast %struct.LoopHeader* %273 to i8*
  %278 = inttoptr i64 %238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %277, i8* align 8 %278, i64 %239, i1 false) #14
  br label %279

279:                                              ; preds = %276, %259
  store i64 %274, i64* %107, align 8
  store i64 %271, i64* %106, align 8
  store i64 %264, i64* %108, align 8
  %280 = icmp eq i64 %238, 0
  br i1 %280, label %523, label %281

281:                                              ; preds = %279
  %282 = inttoptr i64 %238 to i8*
  call void @_ZdlPv(i8* %282) #16
  br label %523

283:                                              ; preds = %199
  %284 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %163, i64 0, i32 13, i32 0
  %285 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %163, i64 0, i32 13, i32 0, i32 0, i32 1
  %286 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %285 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = bitcast %"class.std::__1::vector.1134"* %284 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = sub i64 %287, %289
  %291 = icmp eq i64 %290, 8
  %292 = inttoptr i64 %289 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %291, label %293, label %305

293:                                              ; preds = %283
  %294 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %292, align 8
  %295 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %294, i64 0, i32 14, i32 0
  %296 = load i64, i64* %295, align 8
  %297 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, align 8
  %298 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %297, i64 %296
  %299 = bitcast %"class.v8::internal::compiler::Node"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %116, align 8
  %302 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %301, i64 %296
  %303 = bitcast %"class.v8::internal::compiler::Node"** %302 to i64*
  %304 = load i64, i64* %303, align 8
  br label %523

305:                                              ; preds = %283
  %306 = lshr exact i64 %290, 3
  %307 = load i64, i64* %110, align 8
  store i64 %307, i64* %112, align 8
  %308 = load i64, i64* %113, align 8
  store i64 %308, i64* %115, align 8
  %309 = trunc i64 %306 to i32
  %310 = icmp sgt i32 %309, 0
  br i1 %310, label %311, label %315

311:                                              ; preds = %305
  %312 = inttoptr i64 %307 to %"class.v8::internal::compiler::Node"**
  %313 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %163, i64 0, i32 13, i32 0, i32 0, i32 0
  %314 = and i64 %306, 4294967295
  br label %389

315:                                              ; preds = %516, %305
  %316 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %88, align 8
  %317 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5MergeEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %89, i32 %309) #14
  %318 = load i64, i64* %112, align 8
  %319 = load i64, i64* %110, align 8
  %320 = sub i64 %318, %319
  %321 = lshr exact i64 %320, 3
  %322 = trunc i64 %321 to i32
  %323 = inttoptr i64 %319 to %"class.v8::internal::compiler::Node"**
  %324 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %316, %"class.v8::internal::compiler::Operator"* %317, i32 %322, %"class.v8::internal::compiler::Node"** %323, i1 zeroext false) #14
  %325 = ptrtoint %"class.v8::internal::compiler::Node"* %324 to i64
  %326 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %114, align 8
  %327 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, align 8
  %328 = icmp eq %"class.v8::internal::compiler::Node"** %326, %327
  %329 = ptrtoint %"class.v8::internal::compiler::Node"** %327 to i64
  br i1 %328, label %334, label %330

330:                                              ; preds = %315
  %331 = bitcast %"class.v8::internal::compiler::Node"** %326 to i64*
  store i64 %325, i64* %331, align 8
  %332 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %326, i64 1
  %333 = ptrtoint %"class.v8::internal::compiler::Node"** %332 to i64
  store i64 %333, i64* %115, align 8
  br label %378

334:                                              ; preds = %315
  %335 = ptrtoint %"class.v8::internal::compiler::Node"** %326 to i64
  %336 = load i64, i64* %113, align 8
  %337 = sub i64 %335, %336
  %338 = ashr exact i64 %337, 3
  %339 = add nsw i64 %338, 1
  %340 = icmp ugt i64 %339, 2305843009213693951
  br i1 %340, label %341, label %343

341:                                              ; preds = %334
  %342 = bitcast %"class.std::__1::vector.1158"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %342) #15
  unreachable

343:                                              ; preds = %334
  %344 = sub i64 %329, %336
  %345 = ashr exact i64 %344, 3
  %346 = icmp ult i64 %345, 1152921504606846975
  br i1 %346, label %347, label %355

347:                                              ; preds = %343
  %348 = ashr exact i64 %344, 2
  %349 = icmp ult i64 %348, %339
  %350 = select i1 %349, i64 %339, i64 %348
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %360, label %352

352:                                              ; preds = %347
  %353 = icmp ugt i64 %350, 2305843009213693951
  br i1 %353, label %354, label %355

354:                                              ; preds = %352
  call void @abort() #15
  unreachable

355:                                              ; preds = %352, %343
  %356 = phi i64 [ %350, %352 ], [ 2305843009213693951, %343 ]
  %357 = shl i64 %356, 3
  %358 = call i8* @_Znwm(i64 %357) #16
  %359 = bitcast i8* %358 to %"class.v8::internal::compiler::Node"**
  br label %360

360:                                              ; preds = %355, %347
  %361 = phi i64 [ %356, %355 ], [ 0, %347 ]
  %362 = phi i8* [ %358, %355 ], [ null, %347 ]
  %363 = phi %"class.v8::internal::compiler::Node"** [ %359, %355 ], [ null, %347 ]
  %364 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %363, i64 %338
  %365 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %363, i64 %361
  %366 = ptrtoint %"class.v8::internal::compiler::Node"** %365 to i64
  %367 = bitcast %"class.v8::internal::compiler::Node"** %364 to i64*
  store i64 %325, i64* %367, align 8
  %368 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %364, i64 1
  %369 = ptrtoint %"class.v8::internal::compiler::Node"** %368 to i64
  %370 = ptrtoint %"class.v8::internal::compiler::Node"** %363 to i64
  %371 = icmp sgt i64 %337, 0
  br i1 %371, label %372, label %374

372:                                              ; preds = %360
  %373 = inttoptr i64 %336 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %362, i8* align 8 %373, i64 %337, i1 false) #14
  br label %374

374:                                              ; preds = %372, %360
  store i64 %370, i64* %113, align 8
  store i64 %369, i64* %115, align 8
  store i64 %366, i64* %121, align 8
  %375 = icmp eq i64 %336, 0
  br i1 %375, label %378, label %376

376:                                              ; preds = %374
  %377 = inttoptr i64 %336 to i8*
  call void @_ZdlPv(i8* %377) #16
  br label %378

378:                                              ; preds = %330, %374, %376
  %379 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %88, align 8
  %380 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9EffectPhiEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %89, i32 %309) #14
  %381 = load i64, i64* %115, align 8
  %382 = load i64, i64* %113, align 8
  %383 = sub i64 %381, %382
  %384 = lshr exact i64 %383, 3
  %385 = trunc i64 %384 to i32
  %386 = inttoptr i64 %382 to %"class.v8::internal::compiler::Node"**
  %387 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %379, %"class.v8::internal::compiler::Operator"* %380, i32 %385, %"class.v8::internal::compiler::Node"** %386, i1 zeroext false) #14
  %388 = ptrtoint %"class.v8::internal::compiler::Node"* %387 to i64
  br label %523

389:                                              ; preds = %519, %311
  %390 = phi i64 [ %307, %311 ], [ %522, %519 ]
  %391 = phi %"class.v8::internal::compiler::Node"** [ %312, %311 ], [ %521, %519 ]
  %392 = phi %"class.v8::internal::compiler::BasicBlock"** [ %292, %311 ], [ %520, %519 ]
  %393 = phi i64 [ 0, %311 ], [ %517, %519 ]
  %394 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %392, i64 %393
  %395 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %394, align 8
  %396 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %395, i64 0, i32 14, i32 0
  %397 = load i64, i64* %396, align 8
  %398 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %116, align 8
  %399 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %398, i64 %397
  %400 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %117, align 8
  %401 = icmp eq %"class.v8::internal::compiler::Node"** %391, %400
  br i1 %401, label %408, label %402

402:                                              ; preds = %389
  %403 = bitcast %"class.v8::internal::compiler::Node"** %399 to i64*
  %404 = load i64, i64* %403, align 8
  %405 = bitcast %"class.v8::internal::compiler::Node"** %391 to i64*
  store i64 %404, i64* %405, align 8
  %406 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %391, i64 1
  %407 = ptrtoint %"class.v8::internal::compiler::Node"** %406 to i64
  store i64 %407, i64* %112, align 8
  br label %456

408:                                              ; preds = %389
  %409 = ptrtoint %"class.v8::internal::compiler::Node"** %400 to i64
  %410 = load i64, i64* %110, align 8
  %411 = sub i64 %409, %410
  %412 = ashr exact i64 %411, 3
  %413 = add nsw i64 %412, 1
  %414 = icmp ugt i64 %413, 2305843009213693951
  br i1 %414, label %415, label %417

415:                                              ; preds = %408
  %416 = bitcast %"class.std::__1::vector.1158"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %416) #15
  unreachable

417:                                              ; preds = %408
  %418 = icmp ult i64 %412, 1152921504606846975
  br i1 %418, label %419, label %427

419:                                              ; preds = %417
  %420 = ashr exact i64 %411, 2
  %421 = icmp ult i64 %420, %413
  %422 = select i1 %421, i64 %413, i64 %420
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %432, label %424

424:                                              ; preds = %419
  %425 = icmp ugt i64 %422, 2305843009213693951
  br i1 %425, label %426, label %427

426:                                              ; preds = %424
  call void @abort() #15
  unreachable

427:                                              ; preds = %424, %417
  %428 = phi i64 [ %422, %424 ], [ 2305843009213693951, %417 ]
  %429 = shl i64 %428, 3
  %430 = call i8* @_Znwm(i64 %429) #16
  %431 = bitcast i8* %430 to %"class.v8::internal::compiler::Node"**
  br label %432

432:                                              ; preds = %427, %419
  %433 = phi i64 [ %428, %427 ], [ 0, %419 ]
  %434 = phi %"class.v8::internal::compiler::Node"** [ %431, %427 ], [ null, %419 ]
  %435 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %434, i64 %412
  %436 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %434, i64 %433
  %437 = ptrtoint %"class.v8::internal::compiler::Node"** %436 to i64
  %438 = bitcast %"class.v8::internal::compiler::Node"** %399 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = bitcast %"class.v8::internal::compiler::Node"** %435 to i64*
  store i64 %439, i64* %440, align 8
  %441 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %435, i64 1
  %442 = ptrtoint %"class.v8::internal::compiler::Node"** %441 to i64
  %443 = sub i64 %390, %410
  %444 = ashr exact i64 %443, 3
  %445 = sub nsw i64 0, %444
  %446 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %435, i64 %445
  %447 = ptrtoint %"class.v8::internal::compiler::Node"** %446 to i64
  %448 = icmp sgt i64 %443, 0
  br i1 %448, label %449, label %452

449:                                              ; preds = %432
  %450 = bitcast %"class.v8::internal::compiler::Node"** %446 to i8*
  %451 = inttoptr i64 %410 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %450, i8* align 8 %451, i64 %443, i1 false) #14
  br label %452

452:                                              ; preds = %449, %432
  store i64 %447, i64* %110, align 8
  store i64 %442, i64* %112, align 8
  store i64 %437, i64* %118, align 8
  %453 = icmp eq i64 %410, 0
  br i1 %453, label %456, label %454

454:                                              ; preds = %452
  %455 = inttoptr i64 %410 to i8*
  call void @_ZdlPv(i8* %455) #16
  br label %456

456:                                              ; preds = %402, %452, %454
  %457 = load i64, i64* %396, align 8
  %458 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, align 8
  %459 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %458, i64 %457
  %460 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %114, align 8
  %461 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, align 8
  %462 = icmp eq %"class.v8::internal::compiler::Node"** %460, %461
  %463 = ptrtoint %"class.v8::internal::compiler::Node"** %461 to i64
  br i1 %462, label %470, label %464

464:                                              ; preds = %456
  %465 = bitcast %"class.v8::internal::compiler::Node"** %459 to i64*
  %466 = load i64, i64* %465, align 8
  %467 = bitcast %"class.v8::internal::compiler::Node"** %460 to i64*
  store i64 %466, i64* %467, align 8
  %468 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %460, i64 1
  %469 = ptrtoint %"class.v8::internal::compiler::Node"** %468 to i64
  store i64 %469, i64* %115, align 8
  br label %516

470:                                              ; preds = %456
  %471 = ptrtoint %"class.v8::internal::compiler::Node"** %460 to i64
  %472 = load i64, i64* %113, align 8
  %473 = sub i64 %471, %472
  %474 = ashr exact i64 %473, 3
  %475 = add nsw i64 %474, 1
  %476 = icmp ugt i64 %475, 2305843009213693951
  br i1 %476, label %477, label %479

477:                                              ; preds = %470
  %478 = bitcast %"class.std::__1::vector.1158"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %478) #15
  unreachable

479:                                              ; preds = %470
  %480 = sub i64 %463, %472
  %481 = ashr exact i64 %480, 3
  %482 = icmp ult i64 %481, 1152921504606846975
  br i1 %482, label %483, label %491

483:                                              ; preds = %479
  %484 = ashr exact i64 %480, 2
  %485 = icmp ult i64 %484, %475
  %486 = select i1 %485, i64 %475, i64 %484
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %496, label %488

488:                                              ; preds = %483
  %489 = icmp ugt i64 %486, 2305843009213693951
  br i1 %489, label %490, label %491

490:                                              ; preds = %488
  call void @abort() #15
  unreachable

491:                                              ; preds = %488, %479
  %492 = phi i64 [ %486, %488 ], [ 2305843009213693951, %479 ]
  %493 = shl i64 %492, 3
  %494 = call i8* @_Znwm(i64 %493) #16
  %495 = bitcast i8* %494 to %"class.v8::internal::compiler::Node"**
  br label %496

496:                                              ; preds = %491, %483
  %497 = phi i64 [ %492, %491 ], [ 0, %483 ]
  %498 = phi i8* [ %494, %491 ], [ null, %483 ]
  %499 = phi %"class.v8::internal::compiler::Node"** [ %495, %491 ], [ null, %483 ]
  %500 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %499, i64 %474
  %501 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %499, i64 %497
  %502 = ptrtoint %"class.v8::internal::compiler::Node"** %501 to i64
  %503 = bitcast %"class.v8::internal::compiler::Node"** %459 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = bitcast %"class.v8::internal::compiler::Node"** %500 to i64*
  store i64 %504, i64* %505, align 8
  %506 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %500, i64 1
  %507 = ptrtoint %"class.v8::internal::compiler::Node"** %506 to i64
  %508 = ptrtoint %"class.v8::internal::compiler::Node"** %499 to i64
  %509 = icmp sgt i64 %473, 0
  br i1 %509, label %510, label %512

510:                                              ; preds = %496
  %511 = inttoptr i64 %472 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %498, i8* align 8 %511, i64 %473, i1 false) #14
  br label %512

512:                                              ; preds = %510, %496
  store i64 %508, i64* %113, align 8
  store i64 %507, i64* %115, align 8
  store i64 %502, i64* %121, align 8
  %513 = icmp eq i64 %472, 0
  br i1 %513, label %516, label %514

514:                                              ; preds = %512
  %515 = inttoptr i64 %472 to i8*
  call void @_ZdlPv(i8* %515) #16
  br label %516

516:                                              ; preds = %464, %512, %514
  %517 = add nuw nsw i64 %393, 1
  %518 = icmp eq i64 %517, %314
  br i1 %518, label %315, label %519

519:                                              ; preds = %516
  %520 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %313, align 8
  %521 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %111, align 8
  %522 = ptrtoint %"class.v8::internal::compiler::Node"** %521 to i64
  br label %389

523:                                              ; preds = %184, %176, %281, %279, %228, %293, %378, %167
  %524 = phi i64 [ %171, %167 ], [ %300, %293 ], [ %388, %378 ], [ %219, %228 ], [ %219, %279 ], [ %219, %281 ], [ %162, %176 ], [ %162, %184 ]
  %525 = phi i64 [ %171, %167 ], [ %304, %293 ], [ %325, %378 ], [ %211, %228 ], [ %211, %279 ], [ %211, %281 ], [ %161, %176 ], [ %161, %184 ]
  %526 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %163, i64 0, i32 11, i32 0, i32 0, i32 0
  %527 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %526, align 8
  %528 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %163, i64 0, i32 11, i32 0, i32 0, i32 1
  %529 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %528, align 8
  %530 = icmp eq %"class.v8::internal::compiler::Node"** %527, %529
  br i1 %530, label %531, label %537

531:                                              ; preds = %570, %523
  %532 = phi i64 [ %524, %523 ], [ %576, %570 ]
  %533 = phi i64 [ %525, %523 ], [ %580, %570 ]
  %534 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %163, i64 0, i32 2
  %535 = load i8, i8* %534, align 8, !range !3
  %536 = icmp eq i8 %535, 0
  br i1 %536, label %585, label %583

537:                                              ; preds = %523, %570
  %538 = phi %"class.v8::internal::compiler::Node"** [ %581, %570 ], [ %527, %523 ]
  %539 = phi i64 [ %580, %570 ], [ %525, %523 ]
  %540 = phi i64 [ %576, %570 ], [ %524, %523 ]
  %541 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %538, align 8
  %542 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %541, i64 0, i32 0
  %543 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %542, align 8
  %544 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %543, i64 0, i32 2
  %545 = load i16, i16* %544, align 8
  %546 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %543, i64 0, i32 6
  %547 = load i32, i32* %546, align 8
  %548 = icmp sgt i32 %547, 0
  br i1 %548, label %549, label %557

549:                                              ; preds = %537
  switch i16 %545, label %552 [
    i16 36, label %550
    i16 35, label %550
    i16 9, label %550
    i16 8, label %550
    i16 7, label %550
    i16 6, label %550
    i16 5, label %550
    i16 4, label %550
  ]

550:                                              ; preds = %549, %549, %549, %549, %549, %549, %549, %549
  %551 = inttoptr i64 %540 to %"class.v8::internal::compiler::Node"*
  call void @_ZN2v88internal8compiler14NodeProperties18ReplaceEffectInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* %541, %"class.v8::internal::compiler::Node"* %551, i32 0) #14
  br label %557

552:                                              ; preds = %549
  %553 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %88, align 8
  %554 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %553, i64 0, i32 0
  %555 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %554, align 8
  %556 = inttoptr i64 %540 to %"class.v8::internal::compiler::Node"*
  call void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"* %541, %"class.v8::internal::Zone"* %555, %"class.v8::internal::compiler::Node"* %556) #14
  br label %557

557:                                              ; preds = %552, %550, %537
  %558 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %542, align 8
  %559 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %558, i64 0, i32 7
  %560 = load i32, i32* %559, align 4
  %561 = icmp sgt i32 %560, 0
  br i1 %561, label %562, label %570

562:                                              ; preds = %557
  switch i16 %545, label %565 [
    i16 36, label %563
    i16 35, label %563
    i16 9, label %563
    i16 8, label %563
    i16 7, label %563
    i16 6, label %563
    i16 5, label %563
    i16 4, label %563
  ]

563:                                              ; preds = %562, %562, %562, %562, %562, %562, %562, %562
  %564 = inttoptr i64 %539 to %"class.v8::internal::compiler::Node"*
  call void @_ZN2v88internal8compiler14NodeProperties19ReplaceControlInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* %541, %"class.v8::internal::compiler::Node"* %564, i32 0) #14
  br label %570

565:                                              ; preds = %562
  %566 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %88, align 8
  %567 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %566, i64 0, i32 0
  %568 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %567, align 8
  %569 = inttoptr i64 %539 to %"class.v8::internal::compiler::Node"*
  call void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"* %541, %"class.v8::internal::Zone"* %568, %"class.v8::internal::compiler::Node"* %569) #14
  br label %570

570:                                              ; preds = %565, %563, %557
  %571 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %542, align 8
  %572 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %571, i64 0, i32 9
  %573 = load i8, i8* %572, align 4
  %574 = icmp eq i8 %573, 0
  %575 = ptrtoint %"class.v8::internal::compiler::Node"* %541 to i64
  %576 = select i1 %574, i64 %540, i64 %575
  %577 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %571, i64 0, i32 11
  %578 = load i32, i32* %577, align 8
  %579 = icmp sgt i32 %578, 0
  %580 = select i1 %579, i64 %575, i64 %539
  %581 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %538, i64 1
  %582 = icmp eq %"class.v8::internal::compiler::Node"** %581, %529
  br i1 %582, label %531, label %537

583:                                              ; preds = %531
  %584 = inttoptr i64 %533 to %"class.v8::internal::compiler::Node"*
  call void @_ZN2v88internal8compiler19RawMachineAssembler19MarkControlDeferredEPNS1_4NodeE(%"class.v8::internal::compiler::RawMachineAssembler"* %0, %"class.v8::internal::compiler::Node"* %584)
  br label %585

585:                                              ; preds = %531, %583
  %586 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %163, i64 0, i32 10
  %587 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %586, align 8
  %588 = icmp eq %"class.v8::internal::compiler::Node"* %587, null
  br i1 %588, label %629, label %589

589:                                              ; preds = %585
  %590 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %587, i64 0, i32 0
  %591 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %590, align 8
  %592 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %591, i64 0, i32 2
  %593 = load i16, i16* %592, align 8
  %594 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %591, i64 0, i32 6
  %595 = load i32, i32* %594, align 8
  %596 = icmp sgt i32 %595, 0
  br i1 %596, label %597, label %605

597:                                              ; preds = %589
  switch i16 %593, label %600 [
    i16 36, label %598
    i16 35, label %598
    i16 9, label %598
    i16 8, label %598
    i16 7, label %598
    i16 6, label %598
    i16 5, label %598
    i16 4, label %598
  ]

598:                                              ; preds = %597, %597, %597, %597, %597, %597, %597, %597
  %599 = inttoptr i64 %532 to %"class.v8::internal::compiler::Node"*
  call void @_ZN2v88internal8compiler14NodeProperties18ReplaceEffectInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* nonnull %587, %"class.v8::internal::compiler::Node"* %599, i32 0) #14
  br label %605

600:                                              ; preds = %597
  %601 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %88, align 8
  %602 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %601, i64 0, i32 0
  %603 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %602, align 8
  %604 = inttoptr i64 %532 to %"class.v8::internal::compiler::Node"*
  call void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"* nonnull %587, %"class.v8::internal::Zone"* %603, %"class.v8::internal::compiler::Node"* %604) #14
  br label %605

605:                                              ; preds = %600, %598, %589
  %606 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %590, align 8
  %607 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %606, i64 0, i32 7
  %608 = load i32, i32* %607, align 4
  %609 = icmp sgt i32 %608, 0
  br i1 %609, label %610, label %618

610:                                              ; preds = %605
  switch i16 %593, label %613 [
    i16 36, label %611
    i16 35, label %611
    i16 9, label %611
    i16 8, label %611
    i16 7, label %611
    i16 6, label %611
    i16 5, label %611
    i16 4, label %611
  ]

611:                                              ; preds = %610, %610, %610, %610, %610, %610, %610, %610
  %612 = inttoptr i64 %533 to %"class.v8::internal::compiler::Node"*
  call void @_ZN2v88internal8compiler14NodeProperties19ReplaceControlInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* nonnull %587, %"class.v8::internal::compiler::Node"* %612, i32 0) #14
  br label %618

613:                                              ; preds = %610
  %614 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %88, align 8
  %615 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %614, i64 0, i32 0
  %616 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %615, align 8
  %617 = inttoptr i64 %533 to %"class.v8::internal::compiler::Node"*
  call void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"* nonnull %587, %"class.v8::internal::Zone"* %616, %"class.v8::internal::compiler::Node"* %617) #14
  br label %618

618:                                              ; preds = %613, %611, %605
  %619 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %590, align 8
  %620 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %619, i64 0, i32 9
  %621 = load i8, i8* %620, align 4
  %622 = icmp eq i8 %621, 0
  %623 = ptrtoint %"class.v8::internal::compiler::Node"* %587 to i64
  %624 = select i1 %622, i64 %532, i64 %623
  %625 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %619, i64 0, i32 11
  %626 = load i32, i32* %625, align 8
  %627 = icmp sgt i32 %626, 0
  %628 = select i1 %627, i64 %623, i64 %533
  br label %629

629:                                              ; preds = %618, %585
  %630 = phi i64 [ %532, %585 ], [ %624, %618 ]
  %631 = phi i64 [ %533, %585 ], [ %628, %618 ]
  %632 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %163, i64 0, i32 14, i32 0
  %633 = load i64, i64* %632, align 8
  %634 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, align 8
  %635 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %634, i64 %633
  %636 = bitcast %"class.v8::internal::compiler::Node"** %635 to i64*
  store i64 %630, i64* %636, align 8
  %637 = load i64, i64* %632, align 8
  %638 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %116, align 8
  %639 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %638, i64 %637
  %640 = bitcast %"class.v8::internal::compiler::Node"** %639 to i64*
  store i64 %631, i64* %640, align 8
  %641 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %160, i64 1
  %642 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %641, %82
  br i1 %642, label %122, label %643

643:                                              ; preds = %629
  %644 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %17, align 8
  br label %158

645:                                              ; preds = %1000, %84, %122
  %646 = phi %struct.LoopHeader** [ %86, %84 ], [ %126, %122 ], [ %126, %1000 ]
  %647 = phi %struct.LoopHeader** [ %85, %84 ], [ %125, %122 ], [ %125, %1000 ]
  %648 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %9, i64 0, i32 0, i32 0
  %649 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %648, align 8
  %650 = icmp eq %"class.v8::internal::compiler::Node"** %649, null
  br i1 %650, label %656, label %651

651:                                              ; preds = %645
  %652 = ptrtoint %"class.v8::internal::compiler::Node"** %649 to i64
  %653 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %9, i64 0, i32 0, i32 1
  %654 = bitcast %"class.v8::internal::compiler::Node"*** %653 to i64*
  store i64 %652, i64* %654, align 8
  %655 = bitcast %"class.v8::internal::compiler::Node"** %649 to i8*
  call void @_ZdlPv(i8* %655) #16
  br label %656

656:                                              ; preds = %645, %651
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #14
  %657 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %8, i64 0, i32 0, i32 0
  %658 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %657, align 8
  %659 = icmp eq %"class.v8::internal::compiler::Node"** %658, null
  br i1 %659, label %665, label %660

660:                                              ; preds = %656
  %661 = ptrtoint %"class.v8::internal::compiler::Node"** %658 to i64
  %662 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %8, i64 0, i32 0, i32 1
  %663 = bitcast %"class.v8::internal::compiler::Node"*** %662 to i64*
  store i64 %661, i64* %663, align 8
  %664 = bitcast %"class.v8::internal::compiler::Node"** %658 to i8*
  call void @_ZdlPv(i8* %664) #16
  br label %665

665:                                              ; preds = %656, %660
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #14
  %666 = load %struct.LoopHeader*, %struct.LoopHeader** %647, align 8
  %667 = icmp eq %struct.LoopHeader* %666, null
  br i1 %667, label %672, label %668

668:                                              ; preds = %665
  %669 = ptrtoint %struct.LoopHeader* %666 to i64
  %670 = bitcast %struct.LoopHeader** %646 to i64*
  store i64 %669, i64* %670, align 8
  %671 = bitcast %struct.LoopHeader* %666 to i8*
  call void @_ZdlPv(i8* %671) #16
  br label %672

672:                                              ; preds = %665, %668
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #14
  %673 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %6, i64 0, i32 0, i32 0
  %674 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %673, align 8
  %675 = icmp eq %"class.v8::internal::compiler::Node"** %674, null
  br i1 %675, label %681, label %676

676:                                              ; preds = %672
  %677 = ptrtoint %"class.v8::internal::compiler::Node"** %674 to i64
  %678 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %6, i64 0, i32 0, i32 1
  %679 = bitcast %"class.v8::internal::compiler::Node"*** %678 to i64*
  store i64 %677, i64* %679, align 8
  %680 = bitcast %"class.v8::internal::compiler::Node"** %674 to i8*
  call void @_ZdlPv(i8* %680) #16
  br label %681

681:                                              ; preds = %672, %676
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #14
  %682 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %5, i64 0, i32 0, i32 0
  %683 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %682, align 8
  %684 = icmp eq %"class.v8::internal::compiler::Node"** %683, null
  br i1 %684, label %690, label %685

685:                                              ; preds = %681
  %686 = ptrtoint %"class.v8::internal::compiler::Node"** %683 to i64
  %687 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %5, i64 0, i32 0, i32 1
  %688 = bitcast %"class.v8::internal::compiler::Node"*** %687 to i64*
  store i64 %686, i64* %688, align 8
  %689 = bitcast %"class.v8::internal::compiler::Node"** %683 to i8*
  call void @_ZdlPv(i8* %689) #16
  br label %690

690:                                              ; preds = %681, %685
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #14
  ret void

691:                                              ; preds = %128, %1000
  %692 = phi %struct.LoopHeader* [ %123, %128 ], [ %1001, %1000 ]
  %693 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %692, i64 0, i32 0
  %694 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %693, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 0, i64 24, i1 false) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 0, i64 24, i1 false) #14
  %695 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %694, i64 0, i32 13, i32 0
  %696 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %694, i64 0, i32 13, i32 0, i32 0, i32 1
  %697 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %696 to i64*
  %698 = load i64, i64* %697, align 8
  %699 = bitcast %"class.std::__1::vector.1134"* %695 to i64*
  %700 = load i64, i64* %699, align 8
  %701 = icmp eq i64 %698, %700
  br i1 %701, label %707, label %867

702:                                              ; preds = %981
  %703 = load i64, i64* %133, align 8
  %704 = load i64, i64* %134, align 8
  %705 = load i64, i64* %139, align 8
  %706 = load i64, i64* %140, align 8
  br label %707

707:                                              ; preds = %702, %691
  %708 = phi i64 [ %706, %702 ], [ 0, %691 ]
  %709 = phi i64 [ %705, %702 ], [ 0, %691 ]
  %710 = phi i64 [ %704, %702 ], [ 0, %691 ]
  %711 = phi i64 [ %703, %702 ], [ 0, %691 ]
  %712 = sub i64 %711, %710
  %713 = lshr exact i64 %712, 3
  %714 = trunc i64 %713 to i32
  %715 = sub i64 %709, %708
  %716 = lshr exact i64 %715, 3
  %717 = trunc i64 %716 to i32
  %718 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5MergeEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %143, i32 %714) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 0, i64 24, i1 false) #14
  %719 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler26CreateNodeFromPredecessorsERKNSt3__16vectorIPNS1_10BasicBlockENS3_9allocatorIS6_EEEERKNS4_IPNS1_4NodeENS7_ISD_EEEEPKNS1_8OperatorESH_(%"class.v8::internal::compiler::RawMachineAssembler"* %0, %"class.std::__1::vector.1173"* nonnull dereferenceable(24) %10, %"class.std::__1::vector.1158"* nonnull dereferenceable(24) %5, %"class.v8::internal::compiler::Operator"* %718, %"class.std::__1::vector.1158"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #14
  %720 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5MergeEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %143, i32 %717) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 0, i64 24, i1 false) #14
  %721 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler26CreateNodeFromPredecessorsERKNSt3__16vectorIPNS1_10BasicBlockENS3_9allocatorIS6_EEEERKNS4_IPNS1_4NodeENS7_ISD_EEEEPKNS1_8OperatorESH_(%"class.v8::internal::compiler::RawMachineAssembler"* %0, %"class.std::__1::vector.1173"* nonnull dereferenceable(24) %11, %"class.std::__1::vector.1158"* nonnull dereferenceable(24) %5, %"class.v8::internal::compiler::Operator"* %720, %"class.std::__1::vector.1158"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #14
  %722 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9EffectPhiEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %143, i32 %714) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #14
  %723 = call i8* @_Znwm(i64 8) #16
  %724 = bitcast i8* %723 to %"class.v8::internal::compiler::Node"**
  store i8* %723, i8** %148, align 8
  %725 = getelementptr inbounds i8, i8* %723, i64 8
  store i8* %725, i8** %150, align 8
  store %"class.v8::internal::compiler::Node"* %719, %"class.v8::internal::compiler::Node"** %724, align 8
  %726 = ptrtoint i8* %725 to i64
  store i64 %726, i64* %151, align 8
  %727 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler26CreateNodeFromPredecessorsERKNSt3__16vectorIPNS1_10BasicBlockENS3_9allocatorIS6_EEEERKNS4_IPNS1_4NodeENS7_ISD_EEEEPKNS1_8OperatorESH_(%"class.v8::internal::compiler::RawMachineAssembler"* %0, %"class.std::__1::vector.1173"* nonnull dereferenceable(24) %10, %"class.std::__1::vector.1158"* nonnull dereferenceable(24) %6, %"class.v8::internal::compiler::Operator"* %722, %"class.std::__1::vector.1158"* nonnull dereferenceable(24) %14)
  call void @_ZdlPv(i8* nonnull %723) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #14
  %728 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9EffectPhiEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %143, i32 %717) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #14
  %729 = call i8* @_Znwm(i64 8) #16
  %730 = bitcast i8* %729 to %"class.v8::internal::compiler::Node"**
  store i8* %729, i8** %154, align 8
  %731 = getelementptr inbounds i8, i8* %729, i64 8
  store i8* %731, i8** %156, align 8
  store %"class.v8::internal::compiler::Node"* %721, %"class.v8::internal::compiler::Node"** %730, align 8
  %732 = ptrtoint i8* %731 to i64
  store i64 %732, i64* %157, align 8
  %733 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler26CreateNodeFromPredecessorsERKNSt3__16vectorIPNS1_10BasicBlockENS3_9allocatorIS6_EEEERKNS4_IPNS1_4NodeENS7_ISD_EEEEPKNS1_8OperatorESH_(%"class.v8::internal::compiler::RawMachineAssembler"* %0, %"class.std::__1::vector.1173"* nonnull dereferenceable(24) %11, %"class.std::__1::vector.1158"* nonnull dereferenceable(24) %6, %"class.v8::internal::compiler::Operator"* %728, %"class.std::__1::vector.1158"* nonnull dereferenceable(24) %15)
  call void @_ZdlPv(i8* nonnull %729) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #14
  %734 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %692, i64 0, i32 1
  %735 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %734, align 8
  %736 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %735, i64 0, i32 3
  %737 = load i32, i32* %736, align 4
  %738 = and i32 %737, 251658240
  %739 = icmp eq i32 %738, 251658240
  %740 = ptrtoint %"class.v8::internal::compiler::Node"* %735 to i64
  %741 = add i64 %740, 32
  br i1 %739, label %742, label %746

742:                                              ; preds = %707
  %743 = inttoptr i64 %741 to i64*
  %744 = load i64, i64* %743, align 8
  %745 = add i64 %744, 16
  br label %746

746:                                              ; preds = %707, %742
  %747 = phi i64 [ %745, %742 ], [ %741, %707 ]
  %748 = inttoptr i64 %747 to %"class.v8::internal::compiler::Node"**
  %749 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %748, align 8
  %750 = icmp eq %"class.v8::internal::compiler::Node"* %749, %719
  br i1 %750, label %765, label %751

751:                                              ; preds = %746
  br i1 %739, label %754, label %752

752:                                              ; preds = %751
  %753 = bitcast %"class.v8::internal::compiler::Node"* %735 to %"struct.v8::internal::compiler::Node::Use"*
  br label %757

754:                                              ; preds = %751
  %755 = inttoptr i64 %741 to %"struct.v8::internal::compiler::Node::Use"**
  %756 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %755, align 8
  br label %757

757:                                              ; preds = %754, %752
  %758 = phi %"struct.v8::internal::compiler::Node::Use"* [ %753, %752 ], [ %756, %754 ]
  %759 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %758, i64 -1
  %760 = icmp eq %"class.v8::internal::compiler::Node"* %749, null
  br i1 %760, label %762, label %761

761:                                              ; preds = %757
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %749, %"struct.v8::internal::compiler::Node::Use"* %759) #14
  br label %762

762:                                              ; preds = %761, %757
  store %"class.v8::internal::compiler::Node"* %719, %"class.v8::internal::compiler::Node"** %748, align 8
  %763 = icmp eq %"class.v8::internal::compiler::Node"* %719, null
  br i1 %763, label %765, label %764

764:                                              ; preds = %762
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %719, %"struct.v8::internal::compiler::Node::Use"* %759) #14
  br label %765

765:                                              ; preds = %746, %762, %764
  %766 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %734, align 8
  %767 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %766, i64 0, i32 3
  %768 = load i32, i32* %767, align 4
  %769 = and i32 %768, 251658240
  %770 = icmp eq i32 %769, 251658240
  %771 = ptrtoint %"class.v8::internal::compiler::Node"* %766 to i64
  %772 = add i64 %771, 32
  br i1 %770, label %773, label %777

773:                                              ; preds = %765
  %774 = inttoptr i64 %772 to i64*
  %775 = load i64, i64* %774, align 8
  %776 = add i64 %775, 16
  br label %777

777:                                              ; preds = %765, %773
  %778 = phi i64 [ %776, %773 ], [ %772, %765 ]
  %779 = inttoptr i64 %778 to %"class.v8::internal::compiler::Node"**
  %780 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %779, i64 1
  %781 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %780, align 8
  %782 = icmp eq %"class.v8::internal::compiler::Node"* %781, %721
  br i1 %782, label %797, label %783

783:                                              ; preds = %777
  br i1 %770, label %786, label %784

784:                                              ; preds = %783
  %785 = bitcast %"class.v8::internal::compiler::Node"* %766 to %"struct.v8::internal::compiler::Node::Use"*
  br label %789

786:                                              ; preds = %783
  %787 = inttoptr i64 %772 to %"struct.v8::internal::compiler::Node::Use"**
  %788 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %787, align 8
  br label %789

789:                                              ; preds = %786, %784
  %790 = phi %"struct.v8::internal::compiler::Node::Use"* [ %785, %784 ], [ %788, %786 ]
  %791 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %790, i64 -2
  %792 = icmp eq %"class.v8::internal::compiler::Node"* %781, null
  br i1 %792, label %794, label %793

793:                                              ; preds = %789
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %781, %"struct.v8::internal::compiler::Node::Use"* %791) #14
  br label %794

794:                                              ; preds = %793, %789
  store %"class.v8::internal::compiler::Node"* %721, %"class.v8::internal::compiler::Node"** %780, align 8
  %795 = icmp eq %"class.v8::internal::compiler::Node"* %721, null
  br i1 %795, label %797, label %796

796:                                              ; preds = %794
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %721, %"struct.v8::internal::compiler::Node::Use"* %791) #14
  br label %797

797:                                              ; preds = %777, %794, %796
  %798 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %692, i64 0, i32 2
  %799 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, align 8
  %800 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %799, i64 0, i32 3
  %801 = load i32, i32* %800, align 4
  %802 = and i32 %801, 251658240
  %803 = icmp eq i32 %802, 251658240
  %804 = ptrtoint %"class.v8::internal::compiler::Node"* %799 to i64
  %805 = add i64 %804, 32
  br i1 %803, label %806, label %810

806:                                              ; preds = %797
  %807 = inttoptr i64 %805 to i64*
  %808 = load i64, i64* %807, align 8
  %809 = add i64 %808, 16
  br label %810

810:                                              ; preds = %797, %806
  %811 = phi i64 [ %809, %806 ], [ %805, %797 ]
  %812 = inttoptr i64 %811 to %"class.v8::internal::compiler::Node"**
  %813 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %812, align 8
  %814 = icmp eq %"class.v8::internal::compiler::Node"* %813, %727
  br i1 %814, label %829, label %815

815:                                              ; preds = %810
  br i1 %803, label %818, label %816

816:                                              ; preds = %815
  %817 = bitcast %"class.v8::internal::compiler::Node"* %799 to %"struct.v8::internal::compiler::Node::Use"*
  br label %821

818:                                              ; preds = %815
  %819 = inttoptr i64 %805 to %"struct.v8::internal::compiler::Node::Use"**
  %820 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %819, align 8
  br label %821

821:                                              ; preds = %818, %816
  %822 = phi %"struct.v8::internal::compiler::Node::Use"* [ %817, %816 ], [ %820, %818 ]
  %823 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %822, i64 -1
  %824 = icmp eq %"class.v8::internal::compiler::Node"* %813, null
  br i1 %824, label %826, label %825

825:                                              ; preds = %821
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %813, %"struct.v8::internal::compiler::Node::Use"* %823) #14
  br label %826

826:                                              ; preds = %825, %821
  store %"class.v8::internal::compiler::Node"* %727, %"class.v8::internal::compiler::Node"** %812, align 8
  %827 = icmp eq %"class.v8::internal::compiler::Node"* %727, null
  br i1 %827, label %829, label %828

828:                                              ; preds = %826
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %727, %"struct.v8::internal::compiler::Node::Use"* %823) #14
  br label %829

829:                                              ; preds = %810, %826, %828
  %830 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, align 8
  %831 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %830, i64 0, i32 3
  %832 = load i32, i32* %831, align 4
  %833 = and i32 %832, 251658240
  %834 = icmp eq i32 %833, 251658240
  %835 = ptrtoint %"class.v8::internal::compiler::Node"* %830 to i64
  %836 = add i64 %835, 32
  br i1 %834, label %837, label %841

837:                                              ; preds = %829
  %838 = inttoptr i64 %836 to i64*
  %839 = load i64, i64* %838, align 8
  %840 = add i64 %839, 16
  br label %841

841:                                              ; preds = %829, %837
  %842 = phi i64 [ %840, %837 ], [ %836, %829 ]
  %843 = inttoptr i64 %842 to %"class.v8::internal::compiler::Node"**
  %844 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %843, i64 1
  %845 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %844, align 8
  %846 = icmp eq %"class.v8::internal::compiler::Node"* %845, %733
  br i1 %846, label %861, label %847

847:                                              ; preds = %841
  br i1 %834, label %850, label %848

848:                                              ; preds = %847
  %849 = bitcast %"class.v8::internal::compiler::Node"* %830 to %"struct.v8::internal::compiler::Node::Use"*
  br label %853

850:                                              ; preds = %847
  %851 = inttoptr i64 %836 to %"struct.v8::internal::compiler::Node::Use"**
  %852 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %851, align 8
  br label %853

853:                                              ; preds = %850, %848
  %854 = phi %"struct.v8::internal::compiler::Node::Use"* [ %849, %848 ], [ %852, %850 ]
  %855 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %854, i64 -2
  %856 = icmp eq %"class.v8::internal::compiler::Node"* %845, null
  br i1 %856, label %858, label %857

857:                                              ; preds = %853
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %845, %"struct.v8::internal::compiler::Node::Use"* %855) #14
  br label %858

858:                                              ; preds = %857, %853
  store %"class.v8::internal::compiler::Node"* %733, %"class.v8::internal::compiler::Node"** %844, align 8
  %859 = icmp eq %"class.v8::internal::compiler::Node"* %733, null
  br i1 %859, label %861, label %860

860:                                              ; preds = %858
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %733, %"struct.v8::internal::compiler::Node::Use"* %855) #14
  br label %861

861:                                              ; preds = %841, %858, %860
  %862 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %694, i64 0, i32 11, i32 0, i32 0, i32 0
  %863 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %862, align 8
  %864 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %694, i64 0, i32 11, i32 0, i32 0, i32 1
  %865 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %864, align 8
  %866 = icmp eq %"class.v8::internal::compiler::Node"** %863, %865
  br i1 %866, label %988, label %1003

867:                                              ; preds = %691, %981
  %868 = phi i64 [ %984, %981 ], [ %700, %691 ]
  %869 = phi i64 [ %982, %981 ], [ 0, %691 ]
  %870 = inttoptr i64 %868 to %"class.v8::internal::compiler::BasicBlock"**
  %871 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %870, i64 %869
  %872 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %871, align 8
  %873 = ptrtoint %"class.v8::internal::compiler::BasicBlock"* %872 to i64
  %874 = call zeroext i1 @_ZNK2v88internal8compiler10BasicBlock12LoopContainsEPS2_(%"class.v8::internal::compiler::BasicBlock"* %694, %"class.v8::internal::compiler::BasicBlock"* %872) #14
  br i1 %874, label %875, label %928

875:                                              ; preds = %867
  %876 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %137, align 8
  %877 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %138, align 8
  %878 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %876, %877
  %879 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %877 to i64
  br i1 %878, label %884, label %880

880:                                              ; preds = %875
  %881 = bitcast %"class.v8::internal::compiler::BasicBlock"** %876 to i64*
  store i64 %873, i64* %881, align 8
  %882 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %876, i64 1
  %883 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %882 to i64
  store i64 %883, i64* %139, align 8
  br label %981

884:                                              ; preds = %875
  %885 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %876 to i64
  %886 = load i64, i64* %140, align 8
  %887 = sub i64 %885, %886
  %888 = ashr exact i64 %887, 3
  %889 = add nsw i64 %888, 1
  %890 = icmp ugt i64 %889, 2305843009213693951
  br i1 %890, label %891, label %893

891:                                              ; preds = %884
  %892 = bitcast %"class.std::__1::vector.1173"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %892) #15
  unreachable

893:                                              ; preds = %884
  %894 = sub i64 %879, %886
  %895 = ashr exact i64 %894, 3
  %896 = icmp ult i64 %895, 1152921504606846975
  br i1 %896, label %897, label %905

897:                                              ; preds = %893
  %898 = ashr exact i64 %894, 2
  %899 = icmp ult i64 %898, %889
  %900 = select i1 %899, i64 %889, i64 %898
  %901 = icmp eq i64 %900, 0
  br i1 %901, label %910, label %902

902:                                              ; preds = %897
  %903 = icmp ugt i64 %900, 2305843009213693951
  br i1 %903, label %904, label %905

904:                                              ; preds = %902
  call void @abort() #15
  unreachable

905:                                              ; preds = %902, %893
  %906 = phi i64 [ %900, %902 ], [ 2305843009213693951, %893 ]
  %907 = shl i64 %906, 3
  %908 = call i8* @_Znwm(i64 %907) #16
  %909 = bitcast i8* %908 to %"class.v8::internal::compiler::BasicBlock"**
  br label %910

910:                                              ; preds = %905, %897
  %911 = phi i64 [ %906, %905 ], [ 0, %897 ]
  %912 = phi i8* [ %908, %905 ], [ null, %897 ]
  %913 = phi %"class.v8::internal::compiler::BasicBlock"** [ %909, %905 ], [ null, %897 ]
  %914 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %913, i64 %888
  %915 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %913, i64 %911
  %916 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %915 to i64
  %917 = bitcast %"class.v8::internal::compiler::BasicBlock"** %914 to i64*
  store i64 %873, i64* %917, align 8
  %918 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %914, i64 1
  %919 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %918 to i64
  %920 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %913 to i64
  %921 = icmp sgt i64 %887, 0
  br i1 %921, label %922, label %924

922:                                              ; preds = %910
  %923 = inttoptr i64 %886 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %912, i8* align 8 %923, i64 %887, i1 false) #14
  br label %924

924:                                              ; preds = %922, %910
  store i64 %920, i64* %140, align 8
  store i64 %919, i64* %139, align 8
  store i64 %916, i64* %141, align 8
  %925 = icmp eq i64 %886, 0
  br i1 %925, label %981, label %926

926:                                              ; preds = %924
  %927 = inttoptr i64 %886 to i8*
  call void @_ZdlPv(i8* %927) #16
  br label %981

928:                                              ; preds = %867
  %929 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %131, align 8
  %930 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %132, align 8
  %931 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %929, %930
  %932 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %930 to i64
  br i1 %931, label %937, label %933

933:                                              ; preds = %928
  %934 = bitcast %"class.v8::internal::compiler::BasicBlock"** %929 to i64*
  store i64 %873, i64* %934, align 8
  %935 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %929, i64 1
  %936 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %935 to i64
  store i64 %936, i64* %133, align 8
  br label %981

937:                                              ; preds = %928
  %938 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %929 to i64
  %939 = load i64, i64* %134, align 8
  %940 = sub i64 %938, %939
  %941 = ashr exact i64 %940, 3
  %942 = add nsw i64 %941, 1
  %943 = icmp ugt i64 %942, 2305843009213693951
  br i1 %943, label %944, label %946

944:                                              ; preds = %937
  %945 = bitcast %"class.std::__1::vector.1173"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %945) #15
  unreachable

946:                                              ; preds = %937
  %947 = sub i64 %932, %939
  %948 = ashr exact i64 %947, 3
  %949 = icmp ult i64 %948, 1152921504606846975
  br i1 %949, label %950, label %958

950:                                              ; preds = %946
  %951 = ashr exact i64 %947, 2
  %952 = icmp ult i64 %951, %942
  %953 = select i1 %952, i64 %942, i64 %951
  %954 = icmp eq i64 %953, 0
  br i1 %954, label %963, label %955

955:                                              ; preds = %950
  %956 = icmp ugt i64 %953, 2305843009213693951
  br i1 %956, label %957, label %958

957:                                              ; preds = %955
  call void @abort() #15
  unreachable

958:                                              ; preds = %955, %946
  %959 = phi i64 [ %953, %955 ], [ 2305843009213693951, %946 ]
  %960 = shl i64 %959, 3
  %961 = call i8* @_Znwm(i64 %960) #16
  %962 = bitcast i8* %961 to %"class.v8::internal::compiler::BasicBlock"**
  br label %963

963:                                              ; preds = %958, %950
  %964 = phi i64 [ %959, %958 ], [ 0, %950 ]
  %965 = phi i8* [ %961, %958 ], [ null, %950 ]
  %966 = phi %"class.v8::internal::compiler::BasicBlock"** [ %962, %958 ], [ null, %950 ]
  %967 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %966, i64 %941
  %968 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %966, i64 %964
  %969 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %968 to i64
  %970 = bitcast %"class.v8::internal::compiler::BasicBlock"** %967 to i64*
  store i64 %873, i64* %970, align 8
  %971 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %967, i64 1
  %972 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %971 to i64
  %973 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %966 to i64
  %974 = icmp sgt i64 %940, 0
  br i1 %974, label %975, label %977

975:                                              ; preds = %963
  %976 = inttoptr i64 %939 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %965, i8* align 8 %976, i64 %940, i1 false) #14
  br label %977

977:                                              ; preds = %975, %963
  store i64 %973, i64* %134, align 8
  store i64 %972, i64* %133, align 8
  store i64 %969, i64* %135, align 8
  %978 = icmp eq i64 %939, 0
  br i1 %978, label %981, label %979

979:                                              ; preds = %977
  %980 = inttoptr i64 %939 to i8*
  call void @_ZdlPv(i8* %980) #16
  br label %981

981:                                              ; preds = %979, %977, %933, %926, %924, %880
  %982 = add nuw i64 %869, 1
  %983 = load i64, i64* %697, align 8
  %984 = load i64, i64* %699, align 8
  %985 = sub i64 %983, %984
  %986 = ashr exact i64 %985, 3
  %987 = icmp ult i64 %982, %986
  br i1 %987, label %867, label %702

988:                                              ; preds = %1017, %861
  %989 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %142, align 8
  %990 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %989, null
  br i1 %990, label %994, label %991

991:                                              ; preds = %988
  %992 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %989 to i64
  store i64 %992, i64* %139, align 8
  %993 = bitcast %"class.v8::internal::compiler::BasicBlock"** %989 to i8*
  call void @_ZdlPv(i8* %993) #16
  br label %994

994:                                              ; preds = %988, %991
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #14
  %995 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %136, align 8
  %996 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %995, null
  br i1 %996, label %1000, label %997

997:                                              ; preds = %994
  %998 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %995 to i64
  store i64 %998, i64* %133, align 8
  %999 = bitcast %"class.v8::internal::compiler::BasicBlock"** %995 to i8*
  call void @_ZdlPv(i8* %999) #16
  br label %1000

1000:                                             ; preds = %994, %997
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #14
  %1001 = getelementptr inbounds %struct.LoopHeader, %struct.LoopHeader* %692, i64 1
  %1002 = icmp eq %struct.LoopHeader* %1001, %124
  br i1 %1002, label %645, label %691

1003:                                             ; preds = %861, %1017
  %1004 = phi %"class.v8::internal::compiler::Node"** [ %1018, %1017 ], [ %863, %861 ]
  %1005 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1004, align 8
  %1006 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1005, i64 0, i32 0
  %1007 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1006, align 8
  %1008 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1007, i64 0, i32 2
  %1009 = load i16, i16* %1008, align 8
  %1010 = icmp eq i16 %1009, 35
  br i1 %1010, label %1011, label %1017

1011:                                             ; preds = %1003
  %1012 = load i64, i64* %133, align 8
  %1013 = load i64, i64* %134, align 8
  %1014 = sub i64 %1012, %1013
  %1015 = lshr exact i64 %1014, 3
  %1016 = trunc i64 %1015 to i32
  call void @_ZN2v88internal8compiler19RawMachineAssembler13MakePhiBinaryEPNS1_4NodeEiS4_S4_(%"class.v8::internal::compiler::RawMachineAssembler"* %0, %"class.v8::internal::compiler::Node"* %1005, i32 %1016, %"class.v8::internal::compiler::Node"* %719, %"class.v8::internal::compiler::Node"* %721)
  br label %1017

1017:                                             ; preds = %1011, %1003
  %1018 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1004, i64 1
  %1019 = icmp eq %"class.v8::internal::compiler::Node"** %1018, %865
  br i1 %1019, label %988, label %1003
}

declare void @_ZN2v88internal8compiler8Schedule15SetBlockForNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler10BasicBlock11set_controlENS2_7ControlE(%"class.v8::internal::compiler::BasicBlock"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler10BasicBlock17set_control_inputEPNS1_4NodeE(%"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler8Schedule14MoveSuccessorsEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler8Schedule14ClearBlockByIdENS1_10BasicBlock2IdE(%"class.v8::internal::compiler::Schedule"*, i64) local_unnamed_addr #2

declare i32 @_ZNK2v88internal8compiler4Node8UseCountEv(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node4KillEv(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph9CloneNodeEPKNS1_4NodeE(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeProperties17ReplaceValueInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler10BasicBlock7AddNodeEPNS1_4NodeE(%"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6IfTrueEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder7IfFalseEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler8Schedule7AddGotoEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler8Schedule9AddBranchEPNS1_10BasicBlockEPNS1_4NodeES4_S4_(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeProperties17MergeControlToEndEPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS1_4NodeE(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4LoopEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9EffectPhiEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9TerminateEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i1 zeroext) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5MergeEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler19MarkControlDeferredEPNS1_4NodeE(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %2, %56
  %4 = phi %"class.v8::internal::compiler::Node"* [ %1, %2 ], [ %62, %56 ]
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %4, i64 0, i32 3
  %7 = ptrtoint %"class.v8::internal::compiler::Node"* %4 to i64
  %8 = add i64 %7, 32
  %9 = inttoptr i64 %8 to i64*
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %4, i64 0, i32 3
  %11 = ptrtoint %"class.v8::internal::compiler::Node"* %4 to i64
  %12 = add i64 %11, 32
  %13 = inttoptr i64 %12 to i64*
  br label %14

14:                                               ; preds = %3, %310
  %15 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 2
  %17 = load i16, i16* %16, align 8
  switch i16 %17, label %281 [
    i16 7, label %326
    i16 6, label %27
    i16 8, label %63
    i16 9, label %75
    i16 4, label %81
    i16 5, label %149
    i16 10, label %18
    i16 1, label %251
    i16 2, label %280
    i16 3, label %280
    i16 0, label %326
  ]

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 7
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %326

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %4, i64 0, i32 3
  %24 = ptrtoint %"class.v8::internal::compiler::Node"* %4 to i64
  %25 = add i64 %24, 32
  %26 = inttoptr i64 %25 to i64*
  br label %217

27:                                               ; preds = %14
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 7
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %32, label %31, !prof !4

31:                                               ; preds = %27
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i64 0, i64 0)) #15
  unreachable

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #14
  %36 = zext i1 %35 to i32
  %37 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %38 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #14
  %39 = zext i1 %38 to i32
  %40 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %40, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = add i32 %34, %36
  %44 = add i32 %43, %39
  %45 = add i32 %44, %42
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %4, i64 0, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, 251658240
  %49 = icmp eq i32 %48, 251658240
  %50 = ptrtoint %"class.v8::internal::compiler::Node"* %4 to i64
  %51 = add i64 %50, 32
  br i1 %49, label %52, label %56

52:                                               ; preds = %32
  %53 = inttoptr i64 %51 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 16
  br label %56

56:                                               ; preds = %32, %286, %256, %193, %125, %306, %276, %213, %145, %52
  %57 = phi i64 [ %309, %306 ], [ %279, %276 ], [ %216, %213 ], [ %148, %145 ], [ %55, %52 ], [ %144, %125 ], [ %212, %193 ], [ %275, %256 ], [ %305, %286 ], [ %51, %32 ]
  %58 = phi i32 [ %299, %306 ], [ %269, %276 ], [ %206, %213 ], [ %138, %145 ], [ %45, %52 ], [ %138, %125 ], [ %206, %193 ], [ %269, %256 ], [ %299, %286 ], [ %45, %32 ]
  %59 = inttoptr i64 %57 to %"class.v8::internal::compiler::Node"**
  %60 = sext i32 %58 to i64
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, i64 %60
  %62 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %61, align 8
  br label %3

63:                                               ; preds = %14
  %64 = tail call dereferenceable(12) %"class.v8::internal::compiler::IfValueParameters"* @_ZN2v88internal8compiler19IfValueParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #14
  %65 = getelementptr inbounds %"class.v8::internal::compiler::IfValueParameters", %"class.v8::internal::compiler::IfValueParameters"* %64, i64 0, i32 2
  %66 = load i8, i8* %65, align 4
  %67 = icmp eq i8 %66, 2
  br i1 %67, label %326, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.v8::internal::compiler::IfValueParameters", %"class.v8::internal::compiler::IfValueParameters"* %64, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.v8::internal::compiler::IfValueParameters", %"class.v8::internal::compiler::IfValueParameters"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %74 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder7IfValueEiiNS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %73, i32 %72, i32 %70, i8 zeroext 2) #14
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %4, %"class.v8::internal::compiler::Operator"* %74) #14
  br label %326

75:                                               ; preds = %14
  %76 = tail call zeroext i8 @_ZN2v88internal8compiler12BranchHintOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #14
  %77 = icmp eq i8 %76, 2
  br i1 %77, label %326, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %80 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9IfDefaultENS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %79, i8 zeroext 2) #14
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %4, %"class.v8::internal::compiler::Operator"* %80) #14
  br label %326

81:                                               ; preds = %14
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 7
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %83, 0
  br i1 %84, label %86, label %85, !prof !4

85:                                               ; preds = %81
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i64 0, i64 0)) #15
  unreachable

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 5
  %88 = load i32, i32* %87, align 4
  %89 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #14
  %90 = zext i1 %89 to i32
  %91 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %92 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %91) #14
  %93 = zext i1 %92 to i32
  %94 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %94, i64 0, i32 6
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %88, %90
  %98 = add i32 %97, %93
  %99 = add i32 %98, %96
  %100 = load i32, i32* %10, align 4
  %101 = and i32 %100, 251658240
  %102 = icmp eq i32 %101, 251658240
  br i1 %102, label %103, label %106

103:                                              ; preds = %86
  %104 = load i64, i64* %13, align 8
  %105 = add i64 %104, 16
  br label %106

106:                                              ; preds = %86, %103
  %107 = phi i64 [ %105, %103 ], [ %12, %86 ]
  %108 = inttoptr i64 %107 to %"class.v8::internal::compiler::Node"**
  %109 = sext i32 %99 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %108, i64 %109
  %111 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %111, i64 0, i32 0
  %113 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %112, align 8
  %114 = tail call dereferenceable(2) %"struct.v8::internal::compiler::BranchOperatorInfo"* @_ZN2v88internal8compiler20BranchOperatorInfoOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %113) #14
  %115 = getelementptr inbounds %"struct.v8::internal::compiler::BranchOperatorInfo", %"struct.v8::internal::compiler::BranchOperatorInfo"* %114, i64 0, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp eq i8 %116, 1
  br i1 %117, label %118, label %310

118:                                              ; preds = %106
  %119 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %111, i64 0, i32 0
  %120 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 7
  %122 = load i32, i32* %121, align 4
  %123 = icmp sgt i32 %122, 0
  br i1 %123, label %125, label %124, !prof !4

124:                                              ; preds = %118
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i64 0, i64 0)) #15
  unreachable

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 5
  %127 = load i32, i32* %126, align 4
  %128 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %120) #14
  %129 = zext i1 %128 to i32
  %130 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %119, align 8
  %131 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %130) #14
  %132 = zext i1 %131 to i32
  %133 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %119, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %133, i64 0, i32 6
  %135 = load i32, i32* %134, align 8
  %136 = add i32 %127, %129
  %137 = add i32 %136, %132
  %138 = add i32 %137, %135
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %111, i64 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = and i32 %140, 251658240
  %142 = icmp eq i32 %141, 251658240
  %143 = ptrtoint %"class.v8::internal::compiler::Node"* %111 to i64
  %144 = add i64 %143, 32
  br i1 %142, label %145, label %56

145:                                              ; preds = %125
  %146 = inttoptr i64 %144 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 16
  br label %56

149:                                              ; preds = %14
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 7
  %151 = load i32, i32* %150, align 4
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %154, label %153, !prof !4

153:                                              ; preds = %149
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i64 0, i64 0)) #15
  unreachable

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 5
  %156 = load i32, i32* %155, align 4
  %157 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #14
  %158 = zext i1 %157 to i32
  %159 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %160 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %159) #14
  %161 = zext i1 %160 to i32
  %162 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %162, i64 0, i32 6
  %164 = load i32, i32* %163, align 8
  %165 = add i32 %156, %158
  %166 = add i32 %165, %161
  %167 = add i32 %166, %164
  %168 = load i32, i32* %6, align 4
  %169 = and i32 %168, 251658240
  %170 = icmp eq i32 %169, 251658240
  br i1 %170, label %171, label %174

171:                                              ; preds = %154
  %172 = load i64, i64* %9, align 8
  %173 = add i64 %172, 16
  br label %174

174:                                              ; preds = %154, %171
  %175 = phi i64 [ %173, %171 ], [ %8, %154 ]
  %176 = inttoptr i64 %175 to %"class.v8::internal::compiler::Node"**
  %177 = sext i32 %167 to i64
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %176, i64 %177
  %179 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %178, align 8
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %179, i64 0, i32 0
  %181 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %180, align 8
  %182 = tail call dereferenceable(2) %"struct.v8::internal::compiler::BranchOperatorInfo"* @_ZN2v88internal8compiler20BranchOperatorInfoOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %181) #14
  %183 = getelementptr inbounds %"struct.v8::internal::compiler::BranchOperatorInfo", %"struct.v8::internal::compiler::BranchOperatorInfo"* %182, i64 0, i32 0
  %184 = load i8, i8* %183, align 1
  %185 = icmp eq i8 %184, 2
  br i1 %185, label %186, label %310

186:                                              ; preds = %174
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %179, i64 0, i32 0
  %188 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %187, align 8
  %189 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %188, i64 0, i32 7
  %190 = load i32, i32* %189, align 4
  %191 = icmp sgt i32 %190, 0
  br i1 %191, label %193, label %192, !prof !4

192:                                              ; preds = %186
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i64 0, i64 0)) #15
  unreachable

193:                                              ; preds = %186
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %188, i64 0, i32 5
  %195 = load i32, i32* %194, align 4
  %196 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %188) #14
  %197 = zext i1 %196 to i32
  %198 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %187, align 8
  %199 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %198) #14
  %200 = zext i1 %199 to i32
  %201 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %187, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %201, i64 0, i32 6
  %203 = load i32, i32* %202, align 8
  %204 = add i32 %195, %197
  %205 = add i32 %204, %200
  %206 = add i32 %205, %203
  %207 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %179, i64 0, i32 3
  %208 = load i32, i32* %207, align 4
  %209 = and i32 %208, 251658240
  %210 = icmp eq i32 %209, 251658240
  %211 = ptrtoint %"class.v8::internal::compiler::Node"* %179 to i64
  %212 = add i64 %211, 32
  br i1 %210, label %213, label %56

213:                                              ; preds = %193
  %214 = inttoptr i64 %212 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = add i64 %215, 16
  br label %56

217:                                              ; preds = %22, %240
  %218 = phi %"class.v8::internal::compiler::Operator"* [ %15, %22 ], [ %247, %240 ]
  %219 = phi i32 [ 0, %22 ], [ %246, %240 ]
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %218, i64 0, i32 5
  %221 = load i32, i32* %220, align 4
  %222 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %218) #14
  %223 = zext i1 %222 to i32
  %224 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %225 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %224) #14
  %226 = zext i1 %225 to i32
  %227 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %227, i64 0, i32 6
  %229 = load i32, i32* %228, align 8
  %230 = add i32 %221, %219
  %231 = add i32 %230, %223
  %232 = add i32 %231, %226
  %233 = add i32 %232, %229
  %234 = load i32, i32* %23, align 4
  %235 = and i32 %234, 251658240
  %236 = icmp eq i32 %235, 251658240
  br i1 %236, label %237, label %240

237:                                              ; preds = %217
  %238 = load i64, i64* %26, align 8
  %239 = add i64 %238, 16
  br label %240

240:                                              ; preds = %217, %237
  %241 = phi i64 [ %239, %237 ], [ %25, %217 ]
  %242 = inttoptr i64 %241 to %"class.v8::internal::compiler::Node"**
  %243 = sext i32 %233 to i64
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %242, i64 %243
  %245 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %244, align 8
  tail call void @_ZN2v88internal8compiler19RawMachineAssembler19MarkControlDeferredEPNS1_4NodeE(%"class.v8::internal::compiler::RawMachineAssembler"* %0, %"class.v8::internal::compiler::Node"* %245)
  %246 = add nuw nsw i32 %219, 1
  %247 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %248 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %247, i64 0, i32 7
  %249 = load i32, i32* %248, align 4
  %250 = icmp slt i32 %246, %249
  br i1 %250, label %217, label %326

251:                                              ; preds = %14
  %252 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 7
  %253 = load i32, i32* %252, align 4
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %256, label %255, !prof !4

255:                                              ; preds = %251
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i64 0, i64 0)) #15
  unreachable

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 5
  %258 = load i32, i32* %257, align 4
  %259 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #14
  %260 = zext i1 %259 to i32
  %261 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %262 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %261) #14
  %263 = zext i1 %262 to i32
  %264 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %265 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %264, i64 0, i32 6
  %266 = load i32, i32* %265, align 8
  %267 = add i32 %258, %260
  %268 = add i32 %267, %263
  %269 = add i32 %268, %266
  %270 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %4, i64 0, i32 3
  %271 = load i32, i32* %270, align 4
  %272 = and i32 %271, 251658240
  %273 = icmp eq i32 %272, 251658240
  %274 = ptrtoint %"class.v8::internal::compiler::Node"* %4 to i64
  %275 = add i64 %274, 32
  br i1 %273, label %276, label %56

276:                                              ; preds = %256
  %277 = inttoptr i64 %275 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = add i64 %278, 16
  br label %56

280:                                              ; preds = %14, %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

281:                                              ; preds = %14
  %282 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 7
  %283 = load i32, i32* %282, align 4
  %284 = icmp sgt i32 %283, 0
  br i1 %284, label %286, label %285, !prof !4

285:                                              ; preds = %281
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i64 0, i64 0)) #15
  unreachable

286:                                              ; preds = %281
  %287 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 5
  %288 = load i32, i32* %287, align 4
  %289 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #14
  %290 = zext i1 %289 to i32
  %291 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %292 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %291) #14
  %293 = zext i1 %292 to i32
  %294 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %295 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %294, i64 0, i32 6
  %296 = load i32, i32* %295, align 8
  %297 = add i32 %288, %290
  %298 = add i32 %297, %293
  %299 = add i32 %298, %296
  %300 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %4, i64 0, i32 3
  %301 = load i32, i32* %300, align 4
  %302 = and i32 %301, 251658240
  %303 = icmp eq i32 %302, 251658240
  %304 = ptrtoint %"class.v8::internal::compiler::Node"* %4 to i64
  %305 = add i64 %304, 32
  br i1 %303, label %306, label %56

306:                                              ; preds = %286
  %307 = inttoptr i64 %305 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = add i64 %308, 16
  br label %56

310:                                              ; preds = %174, %106
  %311 = phi %"class.v8::internal::compiler::Node"* [ %111, %106 ], [ %179, %174 ]
  %312 = phi i8 [ 2, %106 ], [ 1, %174 ]
  %313 = icmp eq %"class.v8::internal::compiler::Node"* %311, null
  br i1 %313, label %14, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %311, i64 0, i32 0
  %316 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %315, align 8
  %317 = tail call dereferenceable(2) %"struct.v8::internal::compiler::BranchOperatorInfo"* @_ZN2v88internal8compiler20BranchOperatorInfoOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %316) #14
  %318 = getelementptr inbounds %"struct.v8::internal::compiler::BranchOperatorInfo", %"struct.v8::internal::compiler::BranchOperatorInfo"* %317, i64 0, i32 0
  %319 = load i8, i8* %318, align 1
  %320 = icmp eq i8 %319, %312
  br i1 %320, label %326, label %321

321:                                              ; preds = %314
  %322 = getelementptr inbounds %"struct.v8::internal::compiler::BranchOperatorInfo", %"struct.v8::internal::compiler::BranchOperatorInfo"* %317, i64 0, i32 1
  %323 = load i8, i8* %322, align 1
  %324 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %325 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6BranchENS1_10BranchHintENS1_13IsSafetyCheckE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %324, i8 zeroext %312, i8 zeroext %323) #14
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* nonnull %311, %"class.v8::internal::compiler::Operator"* %325) #14
  br label %326

326:                                              ; preds = %14, %14, %240, %18, %68, %63, %321, %314, %78, %75
  ret void
}

declare zeroext i1 @_ZNK2v88internal8compiler10BasicBlock12LoopContainsEPS2_(%"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler26CreateNodeFromPredecessorsERKNSt3__16vectorIPNS1_10BasicBlockENS3_9allocatorIS6_EEEERKNS4_IPNS1_4NodeENS7_ISD_EEEEPKNS1_8OperatorESH_(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture readonly, %"class.std::__1::vector.1173"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.1158"* nocapture readonly dereferenceable(24), %"class.v8::internal::compiler::Operator"*, %"class.std::__1::vector.1158"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector.1158", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.1173", %"class.std::__1::vector.1173"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.1173"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp eq i64 %12, 8
  %15 = inttoptr i64 %11 to %"class.v8::internal::compiler::BasicBlock"**
  %16 = inttoptr i64 %9 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %14, label %17, label %25

17:                                               ; preds = %5
  %18 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %15, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %18, i64 0, i32 14, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %2, i64 0, i32 0, i32 0
  %22 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, i64 %20
  %24 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %23, align 8
  br label %214

25:                                               ; preds = %5
  %26 = bitcast %"class.std::__1::vector.1158"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #14
  %27 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %"class.v8::internal::compiler::Node"*** %27 to i64*
  %29 = bitcast %"class.std::__1::vector.1158"* %6 to i64*
  %30 = icmp eq i64 %12, 0
  br i1 %30, label %43, label %31

31:                                               ; preds = %25
  %32 = icmp ugt i64 %13, 2305843009213693951
  br i1 %32, label %33, label %34

33:                                               ; preds = %31
  tail call void @abort() #15
  unreachable

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %6, i64 0, i32 0, i32 1
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %35 to i64*
  %37 = tail call i8* @_Znwm(i64 %12) #16
  %38 = bitcast i8* %37 to %"class.v8::internal::compiler::Node"**
  %39 = ptrtoint i8* %37 to i64
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, i64 %13
  %41 = ptrtoint %"class.v8::internal::compiler::Node"** %40 to i64
  %42 = ptrtoint i8* %37 to i64
  store i64 %42, i64* %29, align 8
  store i64 %39, i64* %36, align 8
  store i64 %41, i64* %28, align 8
  br label %43

43:                                               ; preds = %34, %25
  %44 = phi %"class.v8::internal::compiler::Node"** [ null, %25 ], [ %38, %34 ]
  %45 = phi i64 [ 0, %25 ], [ %39, %34 ]
  %46 = phi %"class.v8::internal::compiler::Node"** [ null, %25 ], [ %40, %34 ]
  %47 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %15, %16
  br i1 %47, label %52, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %2, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %6, i64 0, i32 0, i32 1
  %51 = bitcast %"class.v8::internal::compiler::Node"*** %50 to i64*
  br label %63

52:                                               ; preds = %128, %43
  %53 = phi i64 [ %45, %43 ], [ %130, %128 ]
  %54 = phi %"class.v8::internal::compiler::Node"** [ %44, %43 ], [ %129, %128 ]
  %55 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %4, i64 0, i32 0, i32 0
  %56 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %4, i64 0, i32 0, i32 1
  %58 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %57, align 8
  %59 = icmp eq %"class.v8::internal::compiler::Node"** %56, %58
  br i1 %59, label %135, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %6, i64 0, i32 0, i32 1
  %62 = bitcast %"class.v8::internal::compiler::Node"*** %61 to i64*
  br label %151

63:                                               ; preds = %133, %48
  %64 = phi i64 [ %45, %48 ], [ %130, %133 ]
  %65 = phi %"class.v8::internal::compiler::Node"** [ %46, %48 ], [ %134, %133 ]
  %66 = phi %"class.v8::internal::compiler::Node"** [ %44, %48 ], [ %129, %133 ]
  %67 = phi %"class.v8::internal::compiler::BasicBlock"** [ %15, %48 ], [ %131, %133 ]
  %68 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %68, i64 0, i32 14, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %49, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %71, i64 %70
  %73 = icmp eq %"class.v8::internal::compiler::Node"** %66, %65
  br i1 %73, label %80, label %74

74:                                               ; preds = %63
  %75 = bitcast %"class.v8::internal::compiler::Node"** %72 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.v8::internal::compiler::Node"** %66 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %66, i64 1
  %79 = ptrtoint %"class.v8::internal::compiler::Node"** %78 to i64
  store i64 %79, i64* %51, align 8
  br label %128

80:                                               ; preds = %63
  %81 = ptrtoint %"class.v8::internal::compiler::Node"** %65 to i64
  %82 = load i64, i64* %29, align 8
  %83 = sub i64 %81, %82
  %84 = ashr exact i64 %83, 3
  %85 = add nsw i64 %84, 1
  %86 = icmp ugt i64 %85, 2305843009213693951
  br i1 %86, label %87, label %89

87:                                               ; preds = %80
  %88 = bitcast %"class.std::__1::vector.1158"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %88) #15
  unreachable

89:                                               ; preds = %80
  %90 = icmp ult i64 %84, 1152921504606846975
  br i1 %90, label %91, label %99

91:                                               ; preds = %89
  %92 = ashr exact i64 %83, 2
  %93 = icmp ult i64 %92, %85
  %94 = select i1 %93, i64 %85, i64 %92
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %91
  %97 = icmp ugt i64 %94, 2305843009213693951
  br i1 %97, label %98, label %99

98:                                               ; preds = %96
  tail call void @abort() #15
  unreachable

99:                                               ; preds = %96, %89
  %100 = phi i64 [ %94, %96 ], [ 2305843009213693951, %89 ]
  %101 = shl i64 %100, 3
  %102 = tail call i8* @_Znwm(i64 %101) #16
  %103 = bitcast i8* %102 to %"class.v8::internal::compiler::Node"**
  br label %104

104:                                              ; preds = %99, %91
  %105 = phi i64 [ %100, %99 ], [ 0, %91 ]
  %106 = phi %"class.v8::internal::compiler::Node"** [ %103, %99 ], [ null, %91 ]
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %106, i64 %84
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %106, i64 %105
  %109 = ptrtoint %"class.v8::internal::compiler::Node"** %108 to i64
  %110 = bitcast %"class.v8::internal::compiler::Node"** %72 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.v8::internal::compiler::Node"** %107 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 1
  %114 = ptrtoint %"class.v8::internal::compiler::Node"** %113 to i64
  %115 = sub i64 %64, %82
  %116 = ashr exact i64 %115, 3
  %117 = sub nsw i64 0, %116
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 %117
  %119 = ptrtoint %"class.v8::internal::compiler::Node"** %118 to i64
  %120 = icmp sgt i64 %115, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %104
  %122 = bitcast %"class.v8::internal::compiler::Node"** %118 to i8*
  %123 = inttoptr i64 %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 %115, i1 false) #14
  br label %124

124:                                              ; preds = %121, %104
  store i64 %119, i64* %29, align 8
  store i64 %114, i64* %51, align 8
  store i64 %109, i64* %28, align 8
  %125 = icmp eq i64 %82, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %124
  %127 = inttoptr i64 %82 to i8*
  tail call void @_ZdlPv(i8* %127) #16
  br label %128

128:                                              ; preds = %74, %124, %126
  %129 = phi %"class.v8::internal::compiler::Node"** [ %78, %74 ], [ %113, %124 ], [ %113, %126 ]
  %130 = phi i64 [ %79, %74 ], [ %114, %124 ], [ %114, %126 ]
  %131 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 1
  %132 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %131, %16
  br i1 %132, label %52, label %133

133:                                              ; preds = %128
  %134 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %27, align 8
  br label %63

135:                                              ; preds = %209, %52
  %136 = phi i64 [ %53, %52 ], [ %210, %209 ]
  %137 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %138 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %137, align 8
  %139 = load i64, i64* %29, align 8
  %140 = sub i64 %136, %139
  %141 = lshr exact i64 %140, 3
  %142 = trunc i64 %141 to i32
  %143 = inttoptr i64 %139 to %"class.v8::internal::compiler::Node"**
  %144 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %138, %"class.v8::internal::compiler::Operator"* %3, i32 %142, %"class.v8::internal::compiler::Node"** %143, i1 zeroext false) #14
  %145 = icmp eq i64 %139, 0
  br i1 %145, label %150, label %146

146:                                              ; preds = %135
  %147 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %6, i64 0, i32 0, i32 1
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  store i64 %139, i64* %148, align 8
  %149 = inttoptr i64 %139 to i8*
  tail call void @_ZdlPv(i8* %149) #16
  br label %150

150:                                              ; preds = %135, %146
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #14
  br label %214

151:                                              ; preds = %60, %209
  %152 = phi i64 [ %53, %60 ], [ %210, %209 ]
  %153 = phi %"class.v8::internal::compiler::Node"** [ %54, %60 ], [ %211, %209 ]
  %154 = phi %"class.v8::internal::compiler::Node"** [ %56, %60 ], [ %212, %209 ]
  %155 = bitcast %"class.v8::internal::compiler::Node"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %27, align 8
  %158 = icmp eq %"class.v8::internal::compiler::Node"** %153, %157
  br i1 %158, label %163, label %159

159:                                              ; preds = %151
  %160 = bitcast %"class.v8::internal::compiler::Node"** %153 to i64*
  store i64 %156, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, i64 1
  %162 = ptrtoint %"class.v8::internal::compiler::Node"** %161 to i64
  store i64 %162, i64* %62, align 8
  br label %209

163:                                              ; preds = %151
  %164 = ptrtoint %"class.v8::internal::compiler::Node"** %157 to i64
  %165 = load i64, i64* %29, align 8
  %166 = sub i64 %164, %165
  %167 = ashr exact i64 %166, 3
  %168 = add nsw i64 %167, 1
  %169 = icmp ugt i64 %168, 2305843009213693951
  br i1 %169, label %170, label %172

170:                                              ; preds = %163
  %171 = bitcast %"class.std::__1::vector.1158"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %171) #15
  unreachable

172:                                              ; preds = %163
  %173 = icmp ult i64 %167, 1152921504606846975
  br i1 %173, label %174, label %182

174:                                              ; preds = %172
  %175 = ashr exact i64 %166, 2
  %176 = icmp ult i64 %175, %168
  %177 = select i1 %176, i64 %168, i64 %175
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %187, label %179

179:                                              ; preds = %174
  %180 = icmp ugt i64 %177, 2305843009213693951
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #15
  unreachable

182:                                              ; preds = %179, %172
  %183 = phi i64 [ %177, %179 ], [ 2305843009213693951, %172 ]
  %184 = shl i64 %183, 3
  %185 = tail call i8* @_Znwm(i64 %184) #16
  %186 = bitcast i8* %185 to %"class.v8::internal::compiler::Node"**
  br label %187

187:                                              ; preds = %182, %174
  %188 = phi i64 [ %183, %182 ], [ 0, %174 ]
  %189 = phi %"class.v8::internal::compiler::Node"** [ %186, %182 ], [ null, %174 ]
  %190 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %189, i64 %167
  %191 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %189, i64 %188
  %192 = ptrtoint %"class.v8::internal::compiler::Node"** %191 to i64
  %193 = bitcast %"class.v8::internal::compiler::Node"** %190 to i64*
  store i64 %156, i64* %193, align 8
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %190, i64 1
  %195 = ptrtoint %"class.v8::internal::compiler::Node"** %194 to i64
  %196 = sub i64 %152, %165
  %197 = ashr exact i64 %196, 3
  %198 = sub nsw i64 0, %197
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %190, i64 %198
  %200 = ptrtoint %"class.v8::internal::compiler::Node"** %199 to i64
  %201 = icmp sgt i64 %196, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %187
  %203 = bitcast %"class.v8::internal::compiler::Node"** %199 to i8*
  %204 = inttoptr i64 %165 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 %196, i1 false) #14
  br label %205

205:                                              ; preds = %202, %187
  store i64 %200, i64* %29, align 8
  store i64 %195, i64* %62, align 8
  store i64 %192, i64* %28, align 8
  %206 = icmp eq i64 %165, 0
  br i1 %206, label %209, label %207

207:                                              ; preds = %205
  %208 = inttoptr i64 %165 to i8*
  tail call void @_ZdlPv(i8* %208) #16
  br label %209

209:                                              ; preds = %159, %205, %207
  %210 = phi i64 [ %162, %159 ], [ %195, %205 ], [ %195, %207 ]
  %211 = phi %"class.v8::internal::compiler::Node"** [ %161, %159 ], [ %194, %205 ], [ %194, %207 ]
  %212 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %154, i64 1
  %213 = icmp eq %"class.v8::internal::compiler::Node"** %212, %58
  br i1 %213, label %135, label %151

214:                                              ; preds = %150, %17
  %215 = phi %"class.v8::internal::compiler::Node"* [ %24, %17 ], [ %144, %150 ]
  ret %"class.v8::internal::compiler::Node"* %215
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler13MakePhiBinaryEPNS1_4NodeEiS4_S4_(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, i32, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector.1158", align 8
  %7 = alloca %"class.std::__1::vector.1158", align 8
  %8 = ptrtoint %"class.v8::internal::compiler::Node"* %3 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"* %4 to i64
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %11 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 0, i32 5
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %575, label %15

15:                                               ; preds = %5
  %16 = tail call zeroext i8 @_ZN2v88internal8compiler19PhiRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %11) #14
  %17 = sub nsw i32 %13, %2
  %18 = icmp eq i32 %2, 1
  br i1 %18, label %19, label %40

19:                                               ; preds = %15
  %20 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %25, label %24, !prof !4

24:                                               ; preds = %19
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #15
  unreachable

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 251658240
  %29 = icmp eq i32 %28, 251658240
  %30 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %31 = add i64 %30, 32
  br i1 %29, label %32, label %36

32:                                               ; preds = %25
  %33 = inttoptr i64 %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 16
  br label %36

36:                                               ; preds = %25, %32
  %37 = phi i64 [ %35, %32 ], [ %31, %25 ]
  %38 = inttoptr i64 %37 to %"class.v8::internal::compiler::Node"**
  %39 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  br label %230

40:                                               ; preds = %15
  %41 = bitcast %"class.std::__1::vector.1158"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #14
  %42 = sext i32 %2 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.v8::internal::compiler::Node"*** %43 to i64*
  %45 = bitcast %"class.std::__1::vector.1158"* %6 to i64*
  %46 = icmp eq i32 %2, 0
  %47 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %6, i64 0, i32 0, i32 1
  br i1 %46, label %77, label %48

48:                                               ; preds = %40
  %49 = icmp slt i32 %2, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %48
  tail call void @abort() #15
  unreachable

51:                                               ; preds = %48
  %52 = bitcast %"class.v8::internal::compiler::Node"*** %47 to i64*
  %53 = shl nsw i64 %42, 3
  %54 = tail call i8* @_Znwm(i64 %53) #16
  %55 = bitcast i8* %54 to %"class.v8::internal::compiler::Node"**
  %56 = ptrtoint i8* %54 to i64
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %55, i64 %42
  %58 = ptrtoint %"class.v8::internal::compiler::Node"** %57 to i64
  %59 = ptrtoint i8* %54 to i64
  store i64 %59, i64* %45, align 8
  store i64 %56, i64* %52, align 8
  store i64 %58, i64* %44, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %61 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %62 = add i64 %61, 32
  %63 = inttoptr i64 %62 to i64*
  %64 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %6, i64 0, i32 0, i32 1
  %65 = bitcast %"class.v8::internal::compiler::Node"*** %64 to i64*
  %66 = zext i32 %2 to i64
  br label %146

67:                                               ; preds = %224
  %68 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %43, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %6, i64 0, i32 0, i32 1
  %70 = icmp eq %"class.v8::internal::compiler::Node"** %226, %68
  br i1 %70, label %77, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.v8::internal::compiler::Node"** %226 to i64*
  store i64 %8, i64* %72, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %226, i64 1
  %74 = ptrtoint %"class.v8::internal::compiler::Node"** %73 to i64
  %75 = bitcast %"class.v8::internal::compiler::Node"*** %69 to i64*
  store i64 %74, i64* %75, align 8
  %76 = inttoptr i64 %225 to %"class.v8::internal::compiler::Node"**
  br label %127

77:                                               ; preds = %40, %67
  %78 = phi %"class.v8::internal::compiler::Node"*** [ %69, %67 ], [ %47, %40 ]
  %79 = phi %"class.v8::internal::compiler::Node"** [ %68, %67 ], [ null, %40 ]
  %80 = phi i64 [ %227, %67 ], [ 0, %40 ]
  %81 = phi i64 [ %225, %67 ], [ 0, %40 ]
  %82 = ptrtoint %"class.v8::internal::compiler::Node"** %79 to i64
  %83 = bitcast %"class.v8::internal::compiler::Node"*** %78 to i64*
  %84 = sub i64 %82, %81
  %85 = ashr exact i64 %84, 3
  %86 = add nsw i64 %85, 1
  %87 = icmp ugt i64 %86, 2305843009213693951
  br i1 %87, label %88, label %90

88:                                               ; preds = %77
  %89 = bitcast %"class.std::__1::vector.1158"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %89) #15
  unreachable

90:                                               ; preds = %77
  %91 = icmp ult i64 %85, 1152921504606846975
  br i1 %91, label %92, label %100

92:                                               ; preds = %90
  %93 = ashr exact i64 %84, 2
  %94 = icmp ult i64 %93, %86
  %95 = select i1 %94, i64 %86, i64 %93
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %105, label %97

97:                                               ; preds = %92
  %98 = icmp ugt i64 %95, 2305843009213693951
  br i1 %98, label %99, label %100

99:                                               ; preds = %97
  tail call void @abort() #15
  unreachable

100:                                              ; preds = %97, %90
  %101 = phi i64 [ %95, %97 ], [ 2305843009213693951, %90 ]
  %102 = shl i64 %101, 3
  %103 = tail call i8* @_Znwm(i64 %102) #16
  %104 = bitcast i8* %103 to %"class.v8::internal::compiler::Node"**
  br label %105

105:                                              ; preds = %100, %92
  %106 = phi i64 [ %101, %100 ], [ 0, %92 ]
  %107 = phi %"class.v8::internal::compiler::Node"** [ %104, %100 ], [ null, %92 ]
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 %85
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 %106
  %110 = ptrtoint %"class.v8::internal::compiler::Node"** %109 to i64
  %111 = bitcast %"class.v8::internal::compiler::Node"** %108 to i64*
  store i64 %8, i64* %111, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %108, i64 1
  %113 = ptrtoint %"class.v8::internal::compiler::Node"** %112 to i64
  %114 = sub i64 %80, %81
  %115 = ashr exact i64 %114, 3
  %116 = sub nsw i64 0, %115
  %117 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %108, i64 %116
  %118 = ptrtoint %"class.v8::internal::compiler::Node"** %117 to i64
  %119 = icmp sgt i64 %114, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %105
  %121 = bitcast %"class.v8::internal::compiler::Node"** %117 to i8*
  %122 = inttoptr i64 %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 %114, i1 false) #14
  br label %123

123:                                              ; preds = %120, %105
  store i64 %118, i64* %45, align 8
  store i64 %113, i64* %83, align 8
  store i64 %110, i64* %44, align 8
  %124 = icmp eq i64 %81, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %123
  %126 = inttoptr i64 %81 to i8*
  tail call void @_ZdlPv(i8* %126) #16
  br label %127

127:                                              ; preds = %71, %123, %125
  %128 = phi i64* [ %75, %71 ], [ %83, %123 ], [ %83, %125 ]
  %129 = phi %"class.v8::internal::compiler::Node"** [ %76, %71 ], [ %117, %123 ], [ %117, %125 ]
  %130 = phi i64 [ %225, %71 ], [ %118, %123 ], [ %118, %125 ]
  %131 = phi i64 [ %74, %71 ], [ %113, %123 ], [ %113, %125 ]
  %132 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %133 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %135 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %134, i8 zeroext %16, i32 %2) #14
  %136 = sub i64 %131, %130
  %137 = lshr exact i64 %136, 3
  %138 = trunc i64 %137 to i32
  %139 = inttoptr i64 %130 to %"class.v8::internal::compiler::Node"**
  %140 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %133, %"class.v8::internal::compiler::Operator"* %135, i32 %138, %"class.v8::internal::compiler::Node"** %139, i1 zeroext false) #14
  %141 = icmp eq %"class.v8::internal::compiler::Node"** %129, null
  br i1 %141, label %145, label %142

142:                                              ; preds = %127
  %143 = ptrtoint %"class.v8::internal::compiler::Node"** %129 to i64
  store i64 %143, i64* %128, align 8
  %144 = bitcast %"class.v8::internal::compiler::Node"** %129 to i8*
  tail call void @_ZdlPv(i8* %144) #16
  br label %145

145:                                              ; preds = %127, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #14
  br label %230

146:                                              ; preds = %224, %51
  %147 = phi i64 [ %59, %51 ], [ %225, %224 ]
  %148 = phi i64 [ %56, %51 ], [ %227, %224 ]
  %149 = phi %"class.v8::internal::compiler::Node"** [ %55, %51 ], [ %226, %224 ]
  %150 = phi i64 [ 0, %51 ], [ %228, %224 ]
  %151 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %151, i64 0, i32 5
  %153 = load i32, i32* %152, align 4
  %154 = sext i32 %153 to i64
  %155 = icmp slt i64 %150, %154
  br i1 %155, label %157, label %156, !prof !4

156:                                              ; preds = %146
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #15
  unreachable

157:                                              ; preds = %146
  %158 = load i32, i32* %60, align 4
  %159 = and i32 %158, 251658240
  %160 = icmp eq i32 %159, 251658240
  br i1 %160, label %161, label %164

161:                                              ; preds = %157
  %162 = load i64, i64* %63, align 8
  %163 = add i64 %162, 16
  br label %164

164:                                              ; preds = %157, %161
  %165 = phi i64 [ %163, %161 ], [ %62, %157 ]
  %166 = inttoptr i64 %165 to %"class.v8::internal::compiler::Node"**
  %167 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %166, i64 %150
  %168 = bitcast %"class.v8::internal::compiler::Node"** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %43, align 8
  %171 = icmp ult %"class.v8::internal::compiler::Node"** %149, %170
  %172 = ptrtoint %"class.v8::internal::compiler::Node"** %170 to i64
  br i1 %171, label %173, label %177

173:                                              ; preds = %164
  %174 = bitcast %"class.v8::internal::compiler::Node"** %149 to i64*
  store i64 %169, i64* %174, align 8
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %149, i64 1
  %176 = ptrtoint %"class.v8::internal::compiler::Node"** %175 to i64
  store i64 %176, i64* %65, align 8
  br label %224

177:                                              ; preds = %164
  %178 = ptrtoint %"class.v8::internal::compiler::Node"** %149 to i64
  %179 = sub i64 %178, %147
  %180 = ashr exact i64 %179, 3
  %181 = add nsw i64 %180, 1
  %182 = icmp ugt i64 %181, 2305843009213693951
  br i1 %182, label %183, label %185

183:                                              ; preds = %177
  %184 = bitcast %"class.std::__1::vector.1158"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %184) #15
  unreachable

185:                                              ; preds = %177
  %186 = sub i64 %172, %147
  %187 = ashr exact i64 %186, 3
  %188 = icmp ult i64 %187, 1152921504606846975
  br i1 %188, label %189, label %197

189:                                              ; preds = %185
  %190 = ashr exact i64 %186, 2
  %191 = icmp ult i64 %190, %181
  %192 = select i1 %191, i64 %181, i64 %190
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %202, label %194

194:                                              ; preds = %189
  %195 = icmp ugt i64 %192, 2305843009213693951
  br i1 %195, label %196, label %197

196:                                              ; preds = %194
  tail call void @abort() #15
  unreachable

197:                                              ; preds = %194, %185
  %198 = phi i64 [ %192, %194 ], [ 2305843009213693951, %185 ]
  %199 = shl i64 %198, 3
  %200 = tail call i8* @_Znwm(i64 %199) #16
  %201 = bitcast i8* %200 to %"class.v8::internal::compiler::Node"**
  br label %202

202:                                              ; preds = %197, %189
  %203 = phi i64 [ %198, %197 ], [ 0, %189 ]
  %204 = phi %"class.v8::internal::compiler::Node"** [ %201, %197 ], [ null, %189 ]
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %204, i64 %180
  %206 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %204, i64 %203
  %207 = ptrtoint %"class.v8::internal::compiler::Node"** %206 to i64
  %208 = bitcast %"class.v8::internal::compiler::Node"** %205 to i64*
  store i64 %169, i64* %208, align 8
  %209 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 1
  %210 = ptrtoint %"class.v8::internal::compiler::Node"** %209 to i64
  %211 = sub i64 %148, %147
  %212 = ashr exact i64 %211, 3
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 %213
  %215 = ptrtoint %"class.v8::internal::compiler::Node"** %214 to i64
  %216 = icmp sgt i64 %211, 0
  br i1 %216, label %217, label %220

217:                                              ; preds = %202
  %218 = bitcast %"class.v8::internal::compiler::Node"** %214 to i8*
  %219 = inttoptr i64 %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %211, i1 false) #14
  br label %220

220:                                              ; preds = %217, %202
  store i64 %215, i64* %45, align 8
  store i64 %210, i64* %65, align 8
  store i64 %207, i64* %44, align 8
  %221 = icmp eq i64 %147, 0
  br i1 %221, label %224, label %222

222:                                              ; preds = %220
  %223 = inttoptr i64 %147 to i8*
  tail call void @_ZdlPv(i8* %223) #16
  br label %224

224:                                              ; preds = %173, %220, %222
  %225 = phi i64 [ %147, %173 ], [ %215, %220 ], [ %215, %222 ]
  %226 = phi %"class.v8::internal::compiler::Node"** [ %175, %173 ], [ %209, %220 ], [ %209, %222 ]
  %227 = phi i64 [ %176, %173 ], [ %210, %220 ], [ %210, %222 ]
  %228 = add nuw nsw i64 %150, 1
  %229 = icmp eq i64 %228, %66
  br i1 %229, label %67, label %146

230:                                              ; preds = %145, %36
  %231 = phi %"class.v8::internal::compiler::Node"* [ %39, %36 ], [ %140, %145 ]
  %232 = icmp eq i32 %17, 1
  br i1 %232, label %233, label %259

233:                                              ; preds = %230
  %234 = icmp sgt i32 %2, -1
  br i1 %234, label %236, label %235, !prof !4

235:                                              ; preds = %233
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0)) #15
  unreachable

236:                                              ; preds = %233
  %237 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %237, i64 0, i32 5
  %239 = load i32, i32* %238, align 4
  %240 = icmp sgt i32 %239, %2
  br i1 %240, label %242, label %241, !prof !4

241:                                              ; preds = %236
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #15
  unreachable

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %244 = load i32, i32* %243, align 4
  %245 = and i32 %244, 251658240
  %246 = icmp eq i32 %245, 251658240
  %247 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %248 = add i64 %247, 32
  br i1 %246, label %249, label %253

249:                                              ; preds = %242
  %250 = inttoptr i64 %248 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = add i64 %251, 16
  br label %253

253:                                              ; preds = %242, %249
  %254 = phi i64 [ %252, %249 ], [ %248, %242 ]
  %255 = inttoptr i64 %254 to %"class.v8::internal::compiler::Node"**
  %256 = sext i32 %2 to i64
  %257 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %255, i64 %256
  %258 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %257, align 8
  br label %453

259:                                              ; preds = %230
  %260 = bitcast %"class.std::__1::vector.1158"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %260) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %260, i8 0, i64 24, i1 false) #14
  %261 = icmp sgt i32 %13, %2
  br i1 %261, label %265, label %262

262:                                              ; preds = %259
  %263 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %7, i64 0, i32 0, i32 1
  %264 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %288

265:                                              ; preds = %259
  %266 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %267 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %268 = add i64 %267, 32
  %269 = inttoptr i64 %268 to i64*
  %270 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %7, i64 0, i32 0, i32 1
  %271 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %272 = bitcast %"class.v8::internal::compiler::Node"*** %270 to i64*
  %273 = bitcast %"class.std::__1::vector.1158"* %7 to i64*
  %274 = bitcast %"class.v8::internal::compiler::Node"*** %271 to i64*
  %275 = sext i32 %2 to i64
  %276 = icmp sgt i32 %2, -1
  br label %363

277:                                              ; preds = %445
  %278 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %271, align 8
  %279 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %7, i64 0, i32 0, i32 1
  %280 = getelementptr inbounds %"class.std::__1::vector.1158", %"class.std::__1::vector.1158"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %281 = icmp eq %"class.v8::internal::compiler::Node"** %448, %278
  br i1 %281, label %288, label %282

282:                                              ; preds = %277
  %283 = bitcast %"class.v8::internal::compiler::Node"** %448 to i64*
  store i64 %9, i64* %283, align 8
  %284 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %448, i64 1
  %285 = ptrtoint %"class.v8::internal::compiler::Node"** %284 to i64
  %286 = bitcast %"class.v8::internal::compiler::Node"*** %279 to i64*
  store i64 %285, i64* %286, align 8
  %287 = inttoptr i64 %447 to %"class.v8::internal::compiler::Node"**
  br label %343

288:                                              ; preds = %262, %277
  %289 = phi %"class.v8::internal::compiler::Node"*** [ %264, %262 ], [ %280, %277 ]
  %290 = phi %"class.v8::internal::compiler::Node"*** [ %263, %262 ], [ %279, %277 ]
  %291 = phi %"class.v8::internal::compiler::Node"** [ null, %262 ], [ %278, %277 ]
  %292 = phi i64 [ 0, %262 ], [ %447, %277 ]
  %293 = phi %"class.v8::internal::compiler::Node"** [ null, %262 ], [ %446, %277 ]
  %294 = phi i64 [ 0, %262 ], [ %449, %277 ]
  %295 = ptrtoint %"class.v8::internal::compiler::Node"** %291 to i64
  %296 = bitcast %"class.v8::internal::compiler::Node"*** %290 to i64*
  %297 = bitcast %"class.std::__1::vector.1158"* %7 to i64*
  %298 = sub i64 %295, %292
  %299 = ashr exact i64 %298, 3
  %300 = add nsw i64 %299, 1
  %301 = icmp ugt i64 %300, 2305843009213693951
  br i1 %301, label %302, label %304

302:                                              ; preds = %288
  %303 = bitcast %"class.std::__1::vector.1158"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %303) #15
  unreachable

304:                                              ; preds = %288
  %305 = bitcast %"class.v8::internal::compiler::Node"*** %289 to i64*
  %306 = icmp ult i64 %299, 1152921504606846975
  br i1 %306, label %307, label %315

307:                                              ; preds = %304
  %308 = ashr exact i64 %298, 2
  %309 = icmp ult i64 %308, %300
  %310 = select i1 %309, i64 %300, i64 %308
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %320, label %312

312:                                              ; preds = %307
  %313 = icmp ugt i64 %310, 2305843009213693951
  br i1 %313, label %314, label %315

314:                                              ; preds = %312
  tail call void @abort() #15
  unreachable

315:                                              ; preds = %312, %304
  %316 = phi i64 [ %310, %312 ], [ 2305843009213693951, %304 ]
  %317 = shl i64 %316, 3
  %318 = tail call i8* @_Znwm(i64 %317) #16
  %319 = bitcast i8* %318 to %"class.v8::internal::compiler::Node"**
  br label %320

320:                                              ; preds = %315, %307
  %321 = phi i64 [ %316, %315 ], [ 0, %307 ]
  %322 = phi %"class.v8::internal::compiler::Node"** [ %319, %315 ], [ null, %307 ]
  %323 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %322, i64 %299
  %324 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %322, i64 %321
  %325 = ptrtoint %"class.v8::internal::compiler::Node"** %324 to i64
  %326 = bitcast %"class.v8::internal::compiler::Node"** %323 to i64*
  store i64 %9, i64* %326, align 8
  %327 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %323, i64 1
  %328 = ptrtoint %"class.v8::internal::compiler::Node"** %327 to i64
  %329 = ptrtoint %"class.v8::internal::compiler::Node"** %293 to i64
  %330 = sub i64 %294, %329
  %331 = ashr exact i64 %330, 3
  %332 = sub nsw i64 0, %331
  %333 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %323, i64 %332
  %334 = ptrtoint %"class.v8::internal::compiler::Node"** %333 to i64
  %335 = icmp sgt i64 %330, 0
  br i1 %335, label %336, label %339

336:                                              ; preds = %320
  %337 = bitcast %"class.v8::internal::compiler::Node"** %333 to i8*
  %338 = bitcast %"class.v8::internal::compiler::Node"** %293 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %337, i8* align 8 %338, i64 %330, i1 false) #14
  br label %339

339:                                              ; preds = %336, %320
  store i64 %334, i64* %297, align 8
  store i64 %328, i64* %296, align 8
  store i64 %325, i64* %305, align 8
  %340 = icmp eq %"class.v8::internal::compiler::Node"** %293, null
  br i1 %340, label %343, label %341

341:                                              ; preds = %339
  %342 = bitcast %"class.v8::internal::compiler::Node"** %293 to i8*
  tail call void @_ZdlPv(i8* %342) #16
  br label %343

343:                                              ; preds = %282, %339, %341
  %344 = phi i64* [ %286, %282 ], [ %296, %339 ], [ %296, %341 ]
  %345 = phi %"class.v8::internal::compiler::Node"** [ %287, %282 ], [ %333, %339 ], [ %333, %341 ]
  %346 = phi i64 [ %447, %282 ], [ %334, %339 ], [ %334, %341 ]
  %347 = phi i64 [ %285, %282 ], [ %328, %339 ], [ %328, %341 ]
  %348 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %349 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %348, align 8
  %350 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %351 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %350, i8 zeroext %16, i32 %17) #14
  %352 = sub i64 %347, %346
  %353 = lshr exact i64 %352, 3
  %354 = trunc i64 %353 to i32
  %355 = inttoptr i64 %346 to %"class.v8::internal::compiler::Node"**
  %356 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %349, %"class.v8::internal::compiler::Operator"* %351, i32 %354, %"class.v8::internal::compiler::Node"** %355, i1 zeroext false) #14
  %357 = icmp eq %"class.v8::internal::compiler::Node"** %345, null
  br i1 %357, label %361, label %358

358:                                              ; preds = %343
  %359 = ptrtoint %"class.v8::internal::compiler::Node"** %345 to i64
  store i64 %359, i64* %344, align 8
  %360 = bitcast %"class.v8::internal::compiler::Node"** %345 to i8*
  tail call void @_ZdlPv(i8* %360) #16
  br label %361

361:                                              ; preds = %343, %358
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %260) #14
  %362 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  br label %453

363:                                              ; preds = %445, %265
  %364 = phi %"class.v8::internal::compiler::Node"** [ null, %265 ], [ %446, %445 ]
  %365 = phi i64 [ 0, %265 ], [ %447, %445 ]
  %366 = phi i64 [ 0, %265 ], [ %449, %445 ]
  %367 = phi %"class.v8::internal::compiler::Node"** [ null, %265 ], [ %448, %445 ]
  %368 = phi i64 [ %275, %265 ], [ %450, %445 ]
  br i1 %276, label %370, label %369, !prof !4

369:                                              ; preds = %363
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0)) #15
  unreachable

370:                                              ; preds = %363
  %371 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %372 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %371, i64 0, i32 5
  %373 = load i32, i32* %372, align 4
  %374 = sext i32 %373 to i64
  %375 = icmp slt i64 %368, %374
  br i1 %375, label %377, label %376, !prof !4

376:                                              ; preds = %370
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #15
  unreachable

377:                                              ; preds = %370
  %378 = load i32, i32* %266, align 4
  %379 = and i32 %378, 251658240
  %380 = icmp eq i32 %379, 251658240
  br i1 %380, label %381, label %384

381:                                              ; preds = %377
  %382 = load i64, i64* %269, align 8
  %383 = add i64 %382, 16
  br label %384

384:                                              ; preds = %377, %381
  %385 = phi i64 [ %383, %381 ], [ %268, %377 ]
  %386 = inttoptr i64 %385 to %"class.v8::internal::compiler::Node"**
  %387 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %386, i64 %368
  %388 = bitcast %"class.v8::internal::compiler::Node"** %387 to i64*
  %389 = load i64, i64* %388, align 8
  %390 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %271, align 8
  %391 = icmp ult %"class.v8::internal::compiler::Node"** %367, %390
  %392 = ptrtoint %"class.v8::internal::compiler::Node"** %390 to i64
  br i1 %391, label %393, label %397

393:                                              ; preds = %384
  %394 = bitcast %"class.v8::internal::compiler::Node"** %367 to i64*
  store i64 %389, i64* %394, align 8
  %395 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %367, i64 1
  %396 = ptrtoint %"class.v8::internal::compiler::Node"** %395 to i64
  store i64 %396, i64* %272, align 8
  br label %445

397:                                              ; preds = %384
  %398 = ptrtoint %"class.v8::internal::compiler::Node"** %367 to i64
  %399 = load i64, i64* %273, align 8
  %400 = sub i64 %398, %399
  %401 = ashr exact i64 %400, 3
  %402 = add nsw i64 %401, 1
  %403 = icmp ugt i64 %402, 2305843009213693951
  br i1 %403, label %404, label %406

404:                                              ; preds = %397
  %405 = bitcast %"class.std::__1::vector.1158"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %405) #15
  unreachable

406:                                              ; preds = %397
  %407 = sub i64 %392, %399
  %408 = ashr exact i64 %407, 3
  %409 = icmp ult i64 %408, 1152921504606846975
  br i1 %409, label %410, label %418

410:                                              ; preds = %406
  %411 = ashr exact i64 %407, 2
  %412 = icmp ult i64 %411, %402
  %413 = select i1 %412, i64 %402, i64 %411
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %423, label %415

415:                                              ; preds = %410
  %416 = icmp ugt i64 %413, 2305843009213693951
  br i1 %416, label %417, label %418

417:                                              ; preds = %415
  tail call void @abort() #15
  unreachable

418:                                              ; preds = %415, %406
  %419 = phi i64 [ %413, %415 ], [ 2305843009213693951, %406 ]
  %420 = shl i64 %419, 3
  %421 = tail call i8* @_Znwm(i64 %420) #16
  %422 = bitcast i8* %421 to %"class.v8::internal::compiler::Node"**
  br label %423

423:                                              ; preds = %418, %410
  %424 = phi i64 [ %419, %418 ], [ 0, %410 ]
  %425 = phi %"class.v8::internal::compiler::Node"** [ %422, %418 ], [ null, %410 ]
  %426 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %425, i64 %401
  %427 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %425, i64 %424
  %428 = ptrtoint %"class.v8::internal::compiler::Node"** %427 to i64
  %429 = bitcast %"class.v8::internal::compiler::Node"** %426 to i64*
  store i64 %389, i64* %429, align 8
  %430 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %426, i64 1
  %431 = ptrtoint %"class.v8::internal::compiler::Node"** %430 to i64
  %432 = sub i64 %366, %399
  %433 = ashr exact i64 %432, 3
  %434 = sub nsw i64 0, %433
  %435 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %426, i64 %434
  %436 = ptrtoint %"class.v8::internal::compiler::Node"** %435 to i64
  %437 = icmp sgt i64 %432, 0
  br i1 %437, label %438, label %441

438:                                              ; preds = %423
  %439 = bitcast %"class.v8::internal::compiler::Node"** %435 to i8*
  %440 = inttoptr i64 %399 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %439, i8* align 8 %440, i64 %432, i1 false) #14
  br label %441

441:                                              ; preds = %438, %423
  store i64 %436, i64* %273, align 8
  store i64 %431, i64* %272, align 8
  store i64 %428, i64* %274, align 8
  %442 = icmp eq i64 %399, 0
  br i1 %442, label %445, label %443

443:                                              ; preds = %441
  %444 = inttoptr i64 %399 to i8*
  tail call void @_ZdlPv(i8* %444) #16
  br label %445

445:                                              ; preds = %393, %441, %443
  %446 = phi %"class.v8::internal::compiler::Node"** [ %364, %393 ], [ %435, %441 ], [ %435, %443 ]
  %447 = phi i64 [ %365, %393 ], [ %436, %441 ], [ %436, %443 ]
  %448 = phi %"class.v8::internal::compiler::Node"** [ %395, %393 ], [ %430, %441 ], [ %430, %443 ]
  %449 = phi i64 [ %396, %393 ], [ %431, %441 ], [ %431, %443 ]
  %450 = add nsw i64 %368, 1
  %451 = trunc i64 %450 to i32
  %452 = icmp eq i32 %13, %451
  br i1 %452, label %277, label %363

453:                                              ; preds = %361, %253
  %454 = phi %"class.v8::internal::compiler::Operator"* [ %237, %253 ], [ %362, %361 ]
  %455 = phi %"class.v8::internal::compiler::Node"* [ %258, %253 ], [ %356, %361 ]
  %456 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %454, i64 0, i32 7
  %457 = load i32, i32* %456, align 4
  %458 = icmp sgt i32 %457, 0
  br i1 %458, label %460, label %459, !prof !4

459:                                              ; preds = %453
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i64 0, i64 0)) #15
  unreachable

460:                                              ; preds = %453
  %461 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %454, i64 0, i32 5
  %462 = load i32, i32* %461, align 4
  %463 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %454) #14
  %464 = zext i1 %463 to i32
  %465 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %466 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %465) #14
  %467 = zext i1 %466 to i32
  %468 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %469 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %468, i64 0, i32 6
  %470 = load i32, i32* %469, align 8
  %471 = add i32 %462, %464
  %472 = add i32 %471, %467
  %473 = add i32 %472, %470
  %474 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %475 = load i32, i32* %474, align 4
  %476 = and i32 %475, 251658240
  %477 = icmp eq i32 %476, 251658240
  %478 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %479 = add i64 %478, 32
  br i1 %477, label %480, label %484

480:                                              ; preds = %460
  %481 = inttoptr i64 %479 to i64*
  %482 = load i64, i64* %481, align 8
  %483 = add i64 %482, 16
  br label %484

484:                                              ; preds = %460, %480
  %485 = phi i64 [ %483, %480 ], [ %479, %460 ]
  %486 = inttoptr i64 %485 to %"class.v8::internal::compiler::Node"**
  %487 = sext i32 %473 to i64
  %488 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %486, i64 %487
  %489 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %488, align 8
  tail call void @_ZN2v88internal8compiler4Node14TrimInputCountEi(%"class.v8::internal::compiler::Node"* %1, i32 3) #14
  %490 = load i32, i32* %474, align 4
  %491 = and i32 %490, 251658240
  %492 = icmp eq i32 %491, 251658240
  br i1 %492, label %493, label %497

493:                                              ; preds = %484
  %494 = inttoptr i64 %479 to i64*
  %495 = load i64, i64* %494, align 8
  %496 = add i64 %495, 16
  br label %497

497:                                              ; preds = %484, %493
  %498 = phi i64 [ %496, %493 ], [ %479, %484 ]
  %499 = inttoptr i64 %498 to %"class.v8::internal::compiler::Node"**
  %500 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %499, align 8
  %501 = icmp eq %"class.v8::internal::compiler::Node"* %500, %231
  br i1 %501, label %516, label %502

502:                                              ; preds = %497
  br i1 %492, label %505, label %503

503:                                              ; preds = %502
  %504 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %508

505:                                              ; preds = %502
  %506 = inttoptr i64 %479 to %"struct.v8::internal::compiler::Node::Use"**
  %507 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %506, align 8
  br label %508

508:                                              ; preds = %505, %503
  %509 = phi %"struct.v8::internal::compiler::Node::Use"* [ %504, %503 ], [ %507, %505 ]
  %510 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %509, i64 -1
  %511 = icmp eq %"class.v8::internal::compiler::Node"* %500, null
  br i1 %511, label %513, label %512

512:                                              ; preds = %508
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %500, %"struct.v8::internal::compiler::Node::Use"* %510) #14
  br label %513

513:                                              ; preds = %512, %508
  store %"class.v8::internal::compiler::Node"* %231, %"class.v8::internal::compiler::Node"** %499, align 8
  %514 = icmp eq %"class.v8::internal::compiler::Node"* %231, null
  br i1 %514, label %516, label %515

515:                                              ; preds = %513
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %231, %"struct.v8::internal::compiler::Node::Use"* %510) #14
  br label %516

516:                                              ; preds = %497, %513, %515
  %517 = load i32, i32* %474, align 4
  %518 = and i32 %517, 251658240
  %519 = icmp eq i32 %518, 251658240
  br i1 %519, label %520, label %524

520:                                              ; preds = %516
  %521 = inttoptr i64 %479 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = add i64 %522, 16
  br label %524

524:                                              ; preds = %516, %520
  %525 = phi i64 [ %523, %520 ], [ %479, %516 ]
  %526 = inttoptr i64 %525 to %"class.v8::internal::compiler::Node"**
  %527 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %526, i64 1
  %528 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, align 8
  %529 = icmp eq %"class.v8::internal::compiler::Node"* %528, %455
  br i1 %529, label %544, label %530

530:                                              ; preds = %524
  br i1 %519, label %533, label %531

531:                                              ; preds = %530
  %532 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %536

533:                                              ; preds = %530
  %534 = inttoptr i64 %479 to %"struct.v8::internal::compiler::Node::Use"**
  %535 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %534, align 8
  br label %536

536:                                              ; preds = %533, %531
  %537 = phi %"struct.v8::internal::compiler::Node::Use"* [ %532, %531 ], [ %535, %533 ]
  %538 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %537, i64 -2
  %539 = icmp eq %"class.v8::internal::compiler::Node"* %528, null
  br i1 %539, label %541, label %540

540:                                              ; preds = %536
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %528, %"struct.v8::internal::compiler::Node::Use"* %538) #14
  br label %541

541:                                              ; preds = %540, %536
  store %"class.v8::internal::compiler::Node"* %455, %"class.v8::internal::compiler::Node"** %527, align 8
  %542 = icmp eq %"class.v8::internal::compiler::Node"* %455, null
  br i1 %542, label %544, label %543

543:                                              ; preds = %541
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %455, %"struct.v8::internal::compiler::Node::Use"* %538) #14
  br label %544

544:                                              ; preds = %524, %541, %543
  %545 = load i32, i32* %474, align 4
  %546 = and i32 %545, 251658240
  %547 = icmp eq i32 %546, 251658240
  br i1 %547, label %548, label %552

548:                                              ; preds = %544
  %549 = inttoptr i64 %479 to i64*
  %550 = load i64, i64* %549, align 8
  %551 = add i64 %550, 16
  br label %552

552:                                              ; preds = %544, %548
  %553 = phi i64 [ %551, %548 ], [ %479, %544 ]
  %554 = inttoptr i64 %553 to %"class.v8::internal::compiler::Node"**
  %555 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %554, i64 2
  %556 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %555, align 8
  %557 = icmp eq %"class.v8::internal::compiler::Node"* %556, %489
  br i1 %557, label %572, label %558

558:                                              ; preds = %552
  br i1 %547, label %561, label %559

559:                                              ; preds = %558
  %560 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %564

561:                                              ; preds = %558
  %562 = inttoptr i64 %479 to %"struct.v8::internal::compiler::Node::Use"**
  %563 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %562, align 8
  br label %564

564:                                              ; preds = %561, %559
  %565 = phi %"struct.v8::internal::compiler::Node::Use"* [ %560, %559 ], [ %563, %561 ]
  %566 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %565, i64 -3
  %567 = icmp eq %"class.v8::internal::compiler::Node"* %556, null
  br i1 %567, label %569, label %568

568:                                              ; preds = %564
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %556, %"struct.v8::internal::compiler::Node::Use"* %566) #14
  br label %569

569:                                              ; preds = %568, %564
  store %"class.v8::internal::compiler::Node"* %489, %"class.v8::internal::compiler::Node"** %555, align 8
  %570 = icmp eq %"class.v8::internal::compiler::Node"* %489, null
  br i1 %570, label %572, label %571

571:                                              ; preds = %569
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %489, %"struct.v8::internal::compiler::Node::Use"* %566) #14
  br label %572

572:                                              ; preds = %552, %569, %571
  %573 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %574 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %573, i8 zeroext %16, i32 2) #14
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Operator"* %574) #14
  br label %575

575:                                              ; preds = %5, %572
  ret void
}

declare zeroext i8 @_ZN2v88internal8compiler19PhiRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8 zeroext, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node14TrimInputCountEi(%"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare dereferenceable(12) %"class.v8::internal::compiler::IfValueParameters"* @_ZN2v88internal8compiler19IfValueParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder7IfValueEiiNS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32, i32, i8 zeroext) local_unnamed_addr #2

declare zeroext i8 @_ZN2v88internal8compiler12BranchHintOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9IfDefaultENS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8 zeroext) local_unnamed_addr #2

declare dereferenceable(2) %"struct.v8::internal::compiler::BranchOperatorInfo"* @_ZN2v88internal8compiler20BranchOperatorInfoOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6BranchENS1_10BranchHintENS1_13IsSafetyCheckE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8 zeroext, i8 zeroext) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler15TargetParameterEv(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 8
  %3 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, align 8
  ret %"class.v8::internal::compiler::Node"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler9ParameterEm(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture readonly, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, i64 %1
  %6 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %5, align 8
  ret %"class.v8::internal::compiler::Node"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler4GotoEPNS1_15RawMachineLabelE(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture, %"class.v8::internal::compiler::RawMachineLabel"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %6 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %1, i64 0, i32 1
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %1, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %3, align 8
  %13 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %12) #14
  store %"class.v8::internal::compiler::BasicBlock"* %13, %"class.v8::internal::compiler::BasicBlock"** %8, align 8
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi %"class.v8::internal::compiler::BasicBlock"* [ %13, %11 ], [ %9, %2 ]
  tail call void @_ZN2v88internal8compiler8Schedule7AddGotoEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* %4, %"class.v8::internal::compiler::BasicBlock"* %6, %"class.v8::internal::compiler::BasicBlock"* %15) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler19RawMachineAssembler12CurrentBlockEv(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %3 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %2, align 8
  ret %"class.v8::internal::compiler::BasicBlock"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler19RawMachineAssembler3UseEPNS1_15RawMachineLabelE(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture readonly, %"class.v8::internal::compiler::RawMachineLabel"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %1, i64 0, i32 1
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %4, align 8
  %6 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %5, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %9 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %8, align 8
  %10 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %9) #14
  store %"class.v8::internal::compiler::BasicBlock"* %10, %"class.v8::internal::compiler::BasicBlock"** %4, align 8
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi %"class.v8::internal::compiler::BasicBlock"* [ %10, %7 ], [ %5, %2 ]
  ret %"class.v8::internal::compiler::BasicBlock"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler6BranchEPNS1_4NodeEPNS1_15RawMachineLabelES6_(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::RawMachineLabel"* nocapture, %"class.v8::internal::compiler::RawMachineLabel"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::compiler::Node"*, align 8
  %6 = alloca %"class.v8::internal::compiler::Node"*, align 8
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %5, align 8
  %7 = bitcast %"class.v8::internal::compiler::Node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %9 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6BranchENS1_10BranchHintENS1_13IsSafetyCheckE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %8, i8 zeroext 0, i8 zeroext 2) #14
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %11 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %10, align 8
  %12 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %11, %"class.v8::internal::compiler::Operator"* %9, i32 1, %"class.v8::internal::compiler::Node"** nonnull %5, i1 zeroext false) #14
  store %"class.v8::internal::compiler::Node"* %12, %"class.v8::internal::compiler::Node"** %6, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %14 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %13, align 8
  %15 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %14) #14
  %16 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %13, align 8
  %17 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %16) #14
  %18 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %13, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %20 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %19, align 8
  call void @_ZN2v88internal8compiler8Schedule9AddBranchEPNS1_10BasicBlockEPNS1_4NodeES4_S4_(%"class.v8::internal::compiler::Schedule"* %18, %"class.v8::internal::compiler::BasicBlock"* %20, %"class.v8::internal::compiler::Node"* %12, %"class.v8::internal::compiler::BasicBlock"* %15, %"class.v8::internal::compiler::BasicBlock"* %17) #14
  %21 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6IfTrueEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %8) #14
  %22 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %10, align 8
  %23 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %22, %"class.v8::internal::compiler::Operator"* %21, i32 1, %"class.v8::internal::compiler::Node"** nonnull %6, i1 zeroext false) #14
  call void @_ZN2v88internal8compiler10BasicBlock7AddNodeEPNS1_4NodeE(%"class.v8::internal::compiler::BasicBlock"* %15, %"class.v8::internal::compiler::Node"* %23) #14
  %24 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %13, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %2, i64 0, i32 1
  store i8 1, i8* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %2, i64 0, i32 0
  %27 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %26, align 8
  %28 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %27, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %4
  %30 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %13, align 8
  %31 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %30) #14
  store %"class.v8::internal::compiler::BasicBlock"* %31, %"class.v8::internal::compiler::BasicBlock"** %26, align 8
  br label %32

32:                                               ; preds = %4, %29
  %33 = phi %"class.v8::internal::compiler::BasicBlock"* [ %31, %29 ], [ %27, %4 ]
  call void @_ZN2v88internal8compiler8Schedule7AddGotoEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* %24, %"class.v8::internal::compiler::BasicBlock"* %15, %"class.v8::internal::compiler::BasicBlock"* %33) #14
  %34 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder7IfFalseEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %8) #14
  %35 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %10, align 8
  %36 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %35, %"class.v8::internal::compiler::Operator"* %34, i32 1, %"class.v8::internal::compiler::Node"** nonnull %6, i1 zeroext false) #14
  call void @_ZN2v88internal8compiler10BasicBlock7AddNodeEPNS1_4NodeE(%"class.v8::internal::compiler::BasicBlock"* %17, %"class.v8::internal::compiler::Node"* %36) #14
  %37 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %13, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %3, i64 0, i32 1
  store i8 1, i8* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %3, i64 0, i32 0
  %40 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %39, align 8
  %41 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %40, null
  br i1 %41, label %42, label %45

42:                                               ; preds = %32
  %43 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %13, align 8
  %44 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %43) #14
  store %"class.v8::internal::compiler::BasicBlock"* %44, %"class.v8::internal::compiler::BasicBlock"** %39, align 8
  br label %45

45:                                               ; preds = %32, %42
  %46 = phi %"class.v8::internal::compiler::BasicBlock"* [ %44, %42 ], [ %40, %32 ]
  call void @_ZN2v88internal8compiler8Schedule7AddGotoEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* %37, %"class.v8::internal::compiler::BasicBlock"* %17, %"class.v8::internal::compiler::BasicBlock"* %46) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler8MakeNodeEPKNS1_8OperatorEiPKPNS1_4NodeE(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture readonly, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %5, align 8
  %7 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %6, %"class.v8::internal::compiler::Operator"* %1, i32 %2, %"class.v8::internal::compiler::Node"** %3, i1 zeroext false) #14
  ret %"class.v8::internal::compiler::Node"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler13ContinuationsEPNS1_4NodeEPNS1_15RawMachineLabelES6_(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::RawMachineLabel"* nocapture, %"class.v8::internal::compiler::RawMachineLabel"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %6 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %8 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %2, i64 0, i32 1
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %2, i64 0, i32 0
  %11 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %4
  %14 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %5, align 8
  %15 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %14) #14
  store %"class.v8::internal::compiler::BasicBlock"* %15, %"class.v8::internal::compiler::BasicBlock"** %10, align 8
  br label %16

16:                                               ; preds = %4, %13
  %17 = phi %"class.v8::internal::compiler::BasicBlock"* [ %15, %13 ], [ %11, %4 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %3, i64 0, i32 1
  store i8 1, i8* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %3, i64 0, i32 0
  %20 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %19, align 8
  %21 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %5, align 8
  %24 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %23) #14
  store %"class.v8::internal::compiler::BasicBlock"* %24, %"class.v8::internal::compiler::BasicBlock"** %19, align 8
  br label %25

25:                                               ; preds = %16, %22
  %26 = phi %"class.v8::internal::compiler::BasicBlock"* [ %24, %22 ], [ %20, %16 ]
  tail call void @_ZN2v88internal8compiler8Schedule7AddCallEPNS1_10BasicBlockEPNS1_4NodeES4_S4_(%"class.v8::internal::compiler::Schedule"* %6, %"class.v8::internal::compiler::BasicBlock"* %8, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BasicBlock"* %17, %"class.v8::internal::compiler::BasicBlock"* %26) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %7, align 8
  ret void
}

declare void @_ZN2v88internal8compiler8Schedule7AddCallEPNS1_10BasicBlockEPNS1_4NodeES4_S4_(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler6SwitchEPNS1_4NodeEPNS1_15RawMachineLabelEPKiPS6_m(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::RawMachineLabel"* nocapture, i32* nocapture readonly, %"class.v8::internal::compiler::RawMachineLabel"** nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.std::__1::array.1195", align 8
  %8 = alloca %"struct.std::__1::array.1195", align 8
  %9 = alloca %"class.v8::internal::compiler::Node"*, align 8
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %9, align 8
  %10 = add i64 %5, 1
  %11 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %12 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6SwitchEm(%"class.v8::internal::compiler::CommonOperatorBuilder"* %11, i64 %10) #14
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %14 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %13, align 8
  %15 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %14, %"class.v8::internal::compiler::Operator"* %12, i32 1, %"class.v8::internal::compiler::Node"** nonnull %9, i1 zeroext false) #14
  %16 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %13, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %16, i64 0, i32 0
  %18 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %17, align 8
  %19 = shl i64 %10, 3
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %21
  %25 = icmp ugt i64 %19, %24
  br i1 %25, label %26, label %28, !prof !2

26:                                               ; preds = %6
  %27 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18, i64 %19) #14
  br label %30

28:                                               ; preds = %6
  %29 = add i64 %21, %19
  store i64 %29, i64* %20, align 8
  br label %30

30:                                               ; preds = %26, %28
  %31 = phi i64 [ %27, %26 ], [ %21, %28 ]
  %32 = inttoptr i64 %31 to %"class.v8::internal::compiler::BasicBlock"**
  %33 = icmp eq i64 %5, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %36 = bitcast %"struct.std::__1::array.1195"* %8 to i8*
  %37 = getelementptr inbounds %"struct.std::__1::array.1195", %"struct.std::__1::array.1195"* %8, i64 0, i32 0, i64 0
  br label %62

38:                                               ; preds = %82, %30
  %39 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %40 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %39, align 8
  %41 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %40) #14
  %42 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %13, align 8
  %43 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9IfDefaultENS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %11, i8 zeroext 0) #14
  %44 = bitcast %"struct.std::__1::array.1195"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #14
  %45 = getelementptr inbounds %"struct.std::__1::array.1195", %"struct.std::__1::array.1195"* %7, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %15, %"class.v8::internal::compiler::Node"** %45, align 8
  %46 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %42, %"class.v8::internal::compiler::Operator"* %43, i32 1, %"class.v8::internal::compiler::Node"** nonnull %45, i1 zeroext false) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #14
  %47 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %39, align 8
  call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %47, %"class.v8::internal::compiler::BasicBlock"* %41, %"class.v8::internal::compiler::Node"* %46) #14
  %48 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %39, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %2, i64 0, i32 1
  store i8 1, i8* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %2, i64 0, i32 0
  %51 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %50, align 8
  %52 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %51, null
  br i1 %52, label %53, label %56

53:                                               ; preds = %38
  %54 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %39, align 8
  %55 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %54) #14
  store %"class.v8::internal::compiler::BasicBlock"* %55, %"class.v8::internal::compiler::BasicBlock"** %50, align 8
  br label %56

56:                                               ; preds = %38, %53
  %57 = phi %"class.v8::internal::compiler::BasicBlock"* [ %55, %53 ], [ %51, %38 ]
  call void @_ZN2v88internal8compiler8Schedule7AddGotoEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* %48, %"class.v8::internal::compiler::BasicBlock"* %41, %"class.v8::internal::compiler::BasicBlock"* %57) #14
  %58 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %32, i64 %5
  store %"class.v8::internal::compiler::BasicBlock"* %41, %"class.v8::internal::compiler::BasicBlock"** %58, align 8
  %59 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %39, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %61 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %60, align 8
  call void @_ZN2v88internal8compiler8Schedule9AddSwitchEPNS1_10BasicBlockEPNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Schedule"* %59, %"class.v8::internal::compiler::BasicBlock"* %61, %"class.v8::internal::compiler::Node"* %15, %"class.v8::internal::compiler::BasicBlock"** %32, i64 %10) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %60, align 8
  ret void

62:                                               ; preds = %82, %34
  %63 = phi i64 [ 0, %34 ], [ %85, %82 ]
  %64 = getelementptr inbounds i32, i32* %3, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %35, align 8
  %67 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %66) #14
  %68 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %13, align 8
  %69 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder7IfValueEiiNS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %11, i32 %65, i32 0, i8 zeroext 0) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #14
  store %"class.v8::internal::compiler::Node"* %15, %"class.v8::internal::compiler::Node"** %37, align 8
  %70 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %68, %"class.v8::internal::compiler::Operator"* %69, i32 1, %"class.v8::internal::compiler::Node"** nonnull %37, i1 zeroext false) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  %71 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %35, align 8
  call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %71, %"class.v8::internal::compiler::BasicBlock"* %67, %"class.v8::internal::compiler::Node"* %70) #14
  %72 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %35, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel"*, %"class.v8::internal::compiler::RawMachineLabel"** %4, i64 %63
  %74 = load %"class.v8::internal::compiler::RawMachineLabel"*, %"class.v8::internal::compiler::RawMachineLabel"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %74, i64 0, i32 1
  store i8 1, i8* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %74, i64 0, i32 0
  %77 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %76, align 8
  %78 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %77, null
  br i1 %78, label %79, label %82

79:                                               ; preds = %62
  %80 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %35, align 8
  %81 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %80) #14
  store %"class.v8::internal::compiler::BasicBlock"* %81, %"class.v8::internal::compiler::BasicBlock"** %76, align 8
  br label %82

82:                                               ; preds = %62, %79
  %83 = phi %"class.v8::internal::compiler::BasicBlock"* [ %81, %79 ], [ %77, %62 ]
  call void @_ZN2v88internal8compiler8Schedule7AddGotoEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* %72, %"class.v8::internal::compiler::BasicBlock"* %67, %"class.v8::internal::compiler::BasicBlock"* %83) #14
  %84 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %32, i64 %63
  store %"class.v8::internal::compiler::BasicBlock"* %67, %"class.v8::internal::compiler::BasicBlock"** %84, align 8
  %85 = add nuw i64 %63, 1
  %86 = icmp eq i64 %85, %5
  br i1 %86, label %38, label %62
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6SwitchEm(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler8Schedule9AddSwitchEPNS1_10BasicBlockEPNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"**, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler6ReturnEPNS1_4NodeE(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca [2 x %"class.v8::internal::compiler::Node"*], align 16
  %4 = bitcast [2 x %"class.v8::internal::compiler::Node"*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #14
  %5 = getelementptr inbounds [2 x %"class.v8::internal::compiler::Node"*], [2 x %"class.v8::internal::compiler::Node"*]* %3, i64 0, i64 0
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %7 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int32ConstantEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %6, i32 0) #14
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %9 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %8, align 8
  %10 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %9, %"class.v8::internal::compiler::Operator"* %7, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #14
  %11 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %12 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %14 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %12, %"class.v8::internal::compiler::BasicBlock"* %14, %"class.v8::internal::compiler::Node"* %10) #14
  store %"class.v8::internal::compiler::Node"* %10, %"class.v8::internal::compiler::Node"** %5, align 16
  %15 = getelementptr inbounds [2 x %"class.v8::internal::compiler::Node"*], [2 x %"class.v8::internal::compiler::Node"*]* %3, i64 0, i64 1
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %15, align 8
  %16 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6ReturnEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %6, i32 1) #14
  %17 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %8, align 8
  %18 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %17, %"class.v8::internal::compiler::Operator"* %16, i32 2, %"class.v8::internal::compiler::Node"** nonnull %5, i1 zeroext false) #14
  %19 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %11, align 8
  %20 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  call void @_ZN2v88internal8compiler8Schedule9AddReturnEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %19, %"class.v8::internal::compiler::BasicBlock"* %20, %"class.v8::internal::compiler::Node"* %18) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #14
  ret void
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6ReturnEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler8Schedule9AddReturnEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler6ReturnEPNS1_4NodeES4_(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = alloca [3 x %"class.v8::internal::compiler::Node"*], align 16
  %5 = bitcast [3 x %"class.v8::internal::compiler::Node"*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds [3 x %"class.v8::internal::compiler::Node"*], [3 x %"class.v8::internal::compiler::Node"*]* %4, i64 0, i64 0
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %8 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int32ConstantEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %7, i32 0) #14
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %10 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %9, align 8
  %11 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %10, %"class.v8::internal::compiler::Operator"* %8, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #14
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %13 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %15 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %14, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %13, %"class.v8::internal::compiler::BasicBlock"* %15, %"class.v8::internal::compiler::Node"* %11) #14
  store %"class.v8::internal::compiler::Node"* %11, %"class.v8::internal::compiler::Node"** %6, align 16
  %16 = getelementptr inbounds [3 x %"class.v8::internal::compiler::Node"*], [3 x %"class.v8::internal::compiler::Node"*]* %4, i64 0, i64 1
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %16, align 8
  %17 = getelementptr inbounds [3 x %"class.v8::internal::compiler::Node"*], [3 x %"class.v8::internal::compiler::Node"*]* %4, i64 0, i64 2
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %17, align 16
  %18 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6ReturnEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %7, i32 2) #14
  %19 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %9, align 8
  %20 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %19, %"class.v8::internal::compiler::Operator"* %18, i32 3, %"class.v8::internal::compiler::Node"** nonnull %6, i1 zeroext false) #14
  %21 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %12, align 8
  %22 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %14, align 8
  call void @_ZN2v88internal8compiler8Schedule9AddReturnEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %21, %"class.v8::internal::compiler::BasicBlock"* %22, %"class.v8::internal::compiler::Node"* %20) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler6ReturnEPNS1_4NodeES4_S4_(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x %"class.v8::internal::compiler::Node"*], align 16
  %6 = bitcast [4 x %"class.v8::internal::compiler::Node"*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #14
  %7 = getelementptr inbounds [4 x %"class.v8::internal::compiler::Node"*], [4 x %"class.v8::internal::compiler::Node"*]* %5, i64 0, i64 0
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %9 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int32ConstantEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %8, i32 0) #14
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %11 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %10, align 8
  %12 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %11, %"class.v8::internal::compiler::Operator"* %9, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #14
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %14 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %16 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %15, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %14, %"class.v8::internal::compiler::BasicBlock"* %16, %"class.v8::internal::compiler::Node"* %12) #14
  store %"class.v8::internal::compiler::Node"* %12, %"class.v8::internal::compiler::Node"** %7, align 16
  %17 = getelementptr inbounds [4 x %"class.v8::internal::compiler::Node"*], [4 x %"class.v8::internal::compiler::Node"*]* %5, i64 0, i64 1
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %17, align 8
  %18 = getelementptr inbounds [4 x %"class.v8::internal::compiler::Node"*], [4 x %"class.v8::internal::compiler::Node"*]* %5, i64 0, i64 2
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %18, align 16
  %19 = getelementptr inbounds [4 x %"class.v8::internal::compiler::Node"*], [4 x %"class.v8::internal::compiler::Node"*]* %5, i64 0, i64 3
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %19, align 8
  %20 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6ReturnEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %8, i32 3) #14
  %21 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %10, align 8
  %22 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %21, %"class.v8::internal::compiler::Operator"* %20, i32 4, %"class.v8::internal::compiler::Node"** nonnull %7, i1 zeroext false) #14
  %23 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %13, align 8
  %24 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %15, align 8
  call void @_ZN2v88internal8compiler8Schedule9AddReturnEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %23, %"class.v8::internal::compiler::BasicBlock"* %24, %"class.v8::internal::compiler::Node"* %22) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler6ReturnEPNS1_4NodeES4_S4_S4_(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %6 = alloca [5 x %"class.v8::internal::compiler::Node"*], align 16
  %7 = bitcast [5 x %"class.v8::internal::compiler::Node"*]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #14
  %8 = getelementptr inbounds [5 x %"class.v8::internal::compiler::Node"*], [5 x %"class.v8::internal::compiler::Node"*]* %6, i64 0, i64 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %10 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int32ConstantEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %9, i32 0) #14
  %11 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %11, align 8
  %13 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %12, %"class.v8::internal::compiler::Operator"* %10, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #14
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %15 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %17 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %16, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %15, %"class.v8::internal::compiler::BasicBlock"* %17, %"class.v8::internal::compiler::Node"* %13) #14
  store %"class.v8::internal::compiler::Node"* %13, %"class.v8::internal::compiler::Node"** %8, align 16
  %18 = getelementptr inbounds [5 x %"class.v8::internal::compiler::Node"*], [5 x %"class.v8::internal::compiler::Node"*]* %6, i64 0, i64 1
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %18, align 8
  %19 = getelementptr inbounds [5 x %"class.v8::internal::compiler::Node"*], [5 x %"class.v8::internal::compiler::Node"*]* %6, i64 0, i64 2
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %19, align 16
  %20 = getelementptr inbounds [5 x %"class.v8::internal::compiler::Node"*], [5 x %"class.v8::internal::compiler::Node"*]* %6, i64 0, i64 3
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %20, align 8
  %21 = getelementptr inbounds [5 x %"class.v8::internal::compiler::Node"*], [5 x %"class.v8::internal::compiler::Node"*]* %6, i64 0, i64 4
  store %"class.v8::internal::compiler::Node"* %4, %"class.v8::internal::compiler::Node"** %21, align 16
  %22 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6ReturnEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %9, i32 4) #14
  %23 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %11, align 8
  %24 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %23, %"class.v8::internal::compiler::Operator"* %22, i32 5, %"class.v8::internal::compiler::Node"** nonnull %8, i1 zeroext false) #14
  %25 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %14, align 8
  %26 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %16, align 8
  call void @_ZN2v88internal8compiler8Schedule9AddReturnEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %25, %"class.v8::internal::compiler::BasicBlock"* %26, %"class.v8::internal::compiler::Node"* %24) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler6ReturnEiPPNS1_4NodeE(%"class.v8::internal::compiler::RawMachineAssembler"*, i32, %"class.v8::internal::compiler::Node"** nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = add nsw i32 %1, 1
  %5 = sext i32 %4 to i64
  %6 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %5, i64 8)
  %7 = extractvalue { i64, i1 } %6, 1
  %8 = extractvalue { i64, i1 } %6, 0
  %9 = select i1 %7, i64 -1, i64 %8
  %10 = tail call i8* @_Znam(i64 %9) #16
  %11 = bitcast i8* %10 to %"class.v8::internal::compiler::Node"**
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %13 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int32ConstantEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %12, i32 0) #14
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %15 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %14, align 8
  %16 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %15, %"class.v8::internal::compiler::Operator"* %13, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #14
  %17 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %18 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %20 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %19, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %18, %"class.v8::internal::compiler::BasicBlock"* %20, %"class.v8::internal::compiler::Node"* %16) #14
  store %"class.v8::internal::compiler::Node"* %16, %"class.v8::internal::compiler::Node"** %11, align 8
  %21 = icmp sgt i32 %1, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %3
  %23 = bitcast %"class.v8::internal::compiler::Node"** %2 to i8*
  %24 = zext i32 %1 to i64
  %25 = getelementptr i8, i8* %10, i64 8
  %26 = shl nuw nsw i64 %24, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %23, i64 %26, i1 false)
  br label %27

27:                                               ; preds = %22, %3
  %28 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6ReturnEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %12, i32 %1) #14
  %29 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %14, align 8
  %30 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %29, %"class.v8::internal::compiler::Operator"* %28, i32 %4, %"class.v8::internal::compiler::Node"** nonnull %11, i1 zeroext false) #14
  %31 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %17, align 8
  %32 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %19, align 8
  tail call void @_ZN2v88internal8compiler8Schedule9AddReturnEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %31, %"class.v8::internal::compiler::BasicBlock"* %32, %"class.v8::internal::compiler::Node"* %30) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %19, align 8
  tail call void @_ZdaPv(i8* nonnull %10) #16
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler12PopAndReturnEPNS1_4NodeES4_(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = alloca [2 x %"class.v8::internal::compiler::Node"*], align 16
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 7
  %6 = load %"class.v8::internal::compiler::CallDescriptor"*, %"class.v8::internal::compiler::CallDescriptor"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %6, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %11, label %10, !prof !4

10:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

11:                                               ; preds = %3
  %12 = bitcast [2 x %"class.v8::internal::compiler::Node"*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #14
  %13 = getelementptr inbounds [2 x %"class.v8::internal::compiler::Node"*], [2 x %"class.v8::internal::compiler::Node"*]* %4, i64 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %13, align 16
  %14 = getelementptr inbounds [2 x %"class.v8::internal::compiler::Node"*], [2 x %"class.v8::internal::compiler::Node"*]* %4, i64 0, i64 1
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %16 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6ReturnEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %15, i32 1) #14
  %17 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %18 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %17, align 8
  %19 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %18, %"class.v8::internal::compiler::Operator"* %16, i32 2, %"class.v8::internal::compiler::Node"** nonnull %13, i1 zeroext false) #14
  %20 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %21 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %23 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %22, align 8
  call void @_ZN2v88internal8compiler8Schedule9AddReturnEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %21, %"class.v8::internal::compiler::BasicBlock"* %23, %"class.v8::internal::compiler::Node"* %19) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler12PopAndReturnEPNS1_4NodeES4_S4_(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %5 = alloca [3 x %"class.v8::internal::compiler::Node"*], align 16
  %6 = bitcast [3 x %"class.v8::internal::compiler::Node"*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds [3 x %"class.v8::internal::compiler::Node"*], [3 x %"class.v8::internal::compiler::Node"*]* %5, i64 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %7, align 16
  %8 = getelementptr inbounds [3 x %"class.v8::internal::compiler::Node"*], [3 x %"class.v8::internal::compiler::Node"*]* %5, i64 0, i64 1
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %8, align 8
  %9 = getelementptr inbounds [3 x %"class.v8::internal::compiler::Node"*], [3 x %"class.v8::internal::compiler::Node"*]* %5, i64 0, i64 2
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %9, align 16
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %11 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6ReturnEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %10, i32 2) #14
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %12, align 8
  %14 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %13, %"class.v8::internal::compiler::Operator"* %11, i32 3, %"class.v8::internal::compiler::Node"** nonnull %7, i1 zeroext false) #14
  %15 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %16 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %18 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %17, align 8
  call void @_ZN2v88internal8compiler8Schedule9AddReturnEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %16, %"class.v8::internal::compiler::BasicBlock"* %18, %"class.v8::internal::compiler::Node"* %14) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler12PopAndReturnEPNS1_4NodeES4_S4_S4_(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %6 = alloca [4 x %"class.v8::internal::compiler::Node"*], align 16
  %7 = bitcast [4 x %"class.v8::internal::compiler::Node"*]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #14
  %8 = getelementptr inbounds [4 x %"class.v8::internal::compiler::Node"*], [4 x %"class.v8::internal::compiler::Node"*]* %6, i64 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %8, align 16
  %9 = getelementptr inbounds [4 x %"class.v8::internal::compiler::Node"*], [4 x %"class.v8::internal::compiler::Node"*]* %6, i64 0, i64 1
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %9, align 8
  %10 = getelementptr inbounds [4 x %"class.v8::internal::compiler::Node"*], [4 x %"class.v8::internal::compiler::Node"*]* %6, i64 0, i64 2
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %10, align 16
  %11 = getelementptr inbounds [4 x %"class.v8::internal::compiler::Node"*], [4 x %"class.v8::internal::compiler::Node"*]* %6, i64 0, i64 3
  store %"class.v8::internal::compiler::Node"* %4, %"class.v8::internal::compiler::Node"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %13 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6ReturnEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %12, i32 3) #14
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %15 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %14, align 8
  %16 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %15, %"class.v8::internal::compiler::Operator"* %13, i32 4, %"class.v8::internal::compiler::Node"** nonnull %8, i1 zeroext false) #14
  %17 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %18 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %20 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %19, align 8
  call void @_ZN2v88internal8compiler8Schedule9AddReturnEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %18, %"class.v8::internal::compiler::BasicBlock"* %20, %"class.v8::internal::compiler::Node"* %16) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler12PopAndReturnEPNS1_4NodeES4_S4_S4_S4_(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %7 = alloca [5 x %"class.v8::internal::compiler::Node"*], align 16
  %8 = bitcast [5 x %"class.v8::internal::compiler::Node"*]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #14
  %9 = getelementptr inbounds [5 x %"class.v8::internal::compiler::Node"*], [5 x %"class.v8::internal::compiler::Node"*]* %7, i64 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %9, align 16
  %10 = getelementptr inbounds [5 x %"class.v8::internal::compiler::Node"*], [5 x %"class.v8::internal::compiler::Node"*]* %7, i64 0, i64 1
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %10, align 8
  %11 = getelementptr inbounds [5 x %"class.v8::internal::compiler::Node"*], [5 x %"class.v8::internal::compiler::Node"*]* %7, i64 0, i64 2
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %11, align 16
  %12 = getelementptr inbounds [5 x %"class.v8::internal::compiler::Node"*], [5 x %"class.v8::internal::compiler::Node"*]* %7, i64 0, i64 3
  store %"class.v8::internal::compiler::Node"* %4, %"class.v8::internal::compiler::Node"** %12, align 8
  %13 = getelementptr inbounds [5 x %"class.v8::internal::compiler::Node"*], [5 x %"class.v8::internal::compiler::Node"*]* %7, i64 0, i64 4
  store %"class.v8::internal::compiler::Node"* %5, %"class.v8::internal::compiler::Node"** %13, align 16
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %15 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6ReturnEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %14, i32 4) #14
  %16 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %17 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %16, align 8
  %18 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %17, %"class.v8::internal::compiler::Operator"* %15, i32 5, %"class.v8::internal::compiler::Node"** nonnull %9, i1 zeroext false) #14
  %19 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %20 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %22 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %21, align 8
  call void @_ZN2v88internal8compiler8Schedule9AddReturnEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %20, %"class.v8::internal::compiler::BasicBlock"* %22, %"class.v8::internal::compiler::Node"* %18) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler14AbortCSAAssertEPNS1_4NodeE(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca [1 x %"class.v8::internal::compiler::Node"*], align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 4
  %5 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder14AbortCSAAssertEv(%"class.v8::internal::compiler::MachineOperatorBuilder"* %4) #14
  %6 = bitcast [1 x %"class.v8::internal::compiler::Node"*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds [1 x %"class.v8::internal::compiler::Node"*], [1 x %"class.v8::internal::compiler::Node"*]* %3, i64 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %9 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %8, align 8
  %10 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %9, %"class.v8::internal::compiler::Operator"* %5, i32 1, %"class.v8::internal::compiler::Node"** nonnull %7, i1 zeroext false) #14
  %11 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %12 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %14 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %12, %"class.v8::internal::compiler::BasicBlock"* %14, %"class.v8::internal::compiler::Node"* %10) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  ret void
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder14AbortCSAAssertEv(%"class.v8::internal::compiler::MachineOperatorBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler10DebugBreakEv(%"class.v8::internal::compiler::RawMachineAssembler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 4
  %3 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder10DebugBreakEv(%"class.v8::internal::compiler::MachineOperatorBuilder"* %2) #14
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %4, align 8
  %6 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %5, %"class.v8::internal::compiler::Operator"* %3, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #14
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %8 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %10 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %9, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %8, %"class.v8::internal::compiler::BasicBlock"* %10, %"class.v8::internal::compiler::Node"* %6) #14
  ret void
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder10DebugBreakEv(%"class.v8::internal::compiler::MachineOperatorBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler11UnreachableEv(%"class.v8::internal::compiler::RawMachineAssembler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %3 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5ThrowEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %2) #14
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %4, align 8
  %6 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %5, %"class.v8::internal::compiler::Operator"* %3, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #14
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %8 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %10 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %9, align 8
  tail call void @_ZN2v88internal8compiler8Schedule8AddThrowEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %8, %"class.v8::internal::compiler::BasicBlock"* %10, %"class.v8::internal::compiler::Node"* %6) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %9, align 8
  ret void
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5ThrowEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler8Schedule8AddThrowEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler7CommentERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = add i64 %10, 1
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %13, i64 0, i32 0
  %15 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %14, align 8
  %16 = add i64 %10, 8
  %17 = and i64 %16, -8
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15, i64 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %21, %19
  %23 = icmp ugt i64 %17, %22
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %2
  %25 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %15, i64 %17) #14
  br label %28

26:                                               ; preds = %2
  %27 = add i64 %19, %17
  store i64 %27, i64* %18, align 8
  br label %28

28:                                               ; preds = %24, %26
  %29 = phi i64 [ %25, %24 ], [ %19, %26 ]
  %30 = inttoptr i64 %29 to i8*
  %31 = load i8, i8* %4, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %36 = select i1 %32, i8* %34, i8* %35
  switch i64 %10, label %63 [
    i64 0, label %37
    i64 1, label %39
    i64 2, label %43
    i64 3, label %44
    i64 4, label %48
    i64 5, label %49
    i64 6, label %50
    i64 7, label %51
    i64 8, label %55
    i64 9, label %56
    i64 10, label %57
    i64 11, label %58
    i64 12, label %59
    i64 13, label %60
    i64 14, label %61
    i64 15, label %62
  ]

37:                                               ; preds = %28
  %38 = load i8, i8* %36, align 1
  store i8 %38, i8* %30, align 1
  br label %64

39:                                               ; preds = %28
  %40 = bitcast i8* %36 to i16*
  %41 = inttoptr i64 %29 to i16*
  %42 = load i16, i16* %40, align 1
  store i16 %42, i16* %41, align 1
  br label %64

43:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %36, i64 3, i1 false) #14
  br label %64

44:                                               ; preds = %28
  %45 = bitcast i8* %36 to i32*
  %46 = inttoptr i64 %29 to i32*
  %47 = load i32, i32* %45, align 1
  store i32 %47, i32* %46, align 1
  br label %64

48:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %36, i64 5, i1 false) #14
  br label %64

49:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %36, i64 6, i1 false) #14
  br label %64

50:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %36, i64 7, i1 false) #14
  br label %64

51:                                               ; preds = %28
  %52 = bitcast i8* %36 to i64*
  %53 = inttoptr i64 %29 to i64*
  %54 = load i64, i64* %52, align 1
  store i64 %54, i64* %53, align 1
  br label %64

55:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %36, i64 9, i1 false) #14
  br label %64

56:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %36, i64 10, i1 false) #14
  br label %64

57:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %36, i64 11, i1 false) #14
  br label %64

58:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %36, i64 12, i1 false) #14
  br label %64

59:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %36, i64 13, i1 false) #14
  br label %64

60:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %36, i64 14, i1 false) #14
  br label %64

61:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %36, i64 15, i1 false) #14
  br label %64

62:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %36, i64 16, i1 false) #14
  br label %64

63:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %36, i64 %11, i1 false) #14
  br label %64

64:                                               ; preds = %37, %39, %43, %44, %48, %49, %50, %51, %55, %56, %57, %58, %59, %60, %61, %62, %63
  %65 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 4
  %66 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder7CommentEPKc(%"class.v8::internal::compiler::MachineOperatorBuilder"* %65, i8* %30) #14
  %67 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %12, align 8
  %68 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %67, %"class.v8::internal::compiler::Operator"* %66, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #14
  %69 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %70 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %72 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %71, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %70, %"class.v8::internal::compiler::BasicBlock"* %72, %"class.v8::internal::compiler::Node"* %68) #14
  ret void
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder7CommentEPKc(%"class.v8::internal::compiler::MachineOperatorBuilder"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler12StaticAssertEPNS1_4NodeEPKc(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca [1 x %"class.v8::internal::compiler::Node"*], align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %6 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder12StaticAssertEPKc(%"class.v8::internal::compiler::CommonOperatorBuilder"* %5, i8* %2) #14
  %7 = bitcast [1 x %"class.v8::internal::compiler::Node"*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = getelementptr inbounds [1 x %"class.v8::internal::compiler::Node"*], [1 x %"class.v8::internal::compiler::Node"*]* %4, i64 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %10 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %9, align 8
  %11 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %10, %"class.v8::internal::compiler::Operator"* %6, i32 1, %"class.v8::internal::compiler::Node"** nonnull %8, i1 zeroext false) #14
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %13 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %15 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %14, align 8
  call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %13, %"class.v8::internal::compiler::BasicBlock"* %15, %"class.v8::internal::compiler::Node"* %11) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  ret void
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder12StaticAssertEPKc(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler5CallNEPNS1_14CallDescriptorEiPKPNS1_4NodeE(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::CallDescriptor"*, i32, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %6 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4CallEPKNS1_14CallDescriptorE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %5, %"class.v8::internal::compiler::CallDescriptor"* %1) #14
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %7, align 8
  %9 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %8, %"class.v8::internal::compiler::Operator"* %6, i32 %2, %"class.v8::internal::compiler::Node"** %3, i1 zeroext false) #14
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %13 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %12, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %11, %"class.v8::internal::compiler::BasicBlock"* %13, %"class.v8::internal::compiler::Node"* %9) #14
  ret %"class.v8::internal::compiler::Node"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler7AddNodeEPKNS1_8OperatorEiPKPNS1_4NodeE(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture readonly, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %5, align 8
  %7 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %6, %"class.v8::internal::compiler::Operator"* %1, i32 %2, %"class.v8::internal::compiler::Node"** %3, i1 zeroext false) #14
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %9 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %11 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %10, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %9, %"class.v8::internal::compiler::BasicBlock"* %11, %"class.v8::internal::compiler::Node"* %7) #14
  ret %"class.v8::internal::compiler::Node"* %7
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4CallEPKNS1_14CallDescriptorE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CallDescriptor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler19CallNWithFrameStateEPNS1_14CallDescriptorEiPKPNS1_4NodeE(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::CallDescriptor"*, i32, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %6 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4CallEPKNS1_14CallDescriptorE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %5, %"class.v8::internal::compiler::CallDescriptor"* %1) #14
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %7, align 8
  %9 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %8, %"class.v8::internal::compiler::Operator"* %6, i32 %2, %"class.v8::internal::compiler::Node"** %3, i1 zeroext false) #14
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %13 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %12, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %11, %"class.v8::internal::compiler::BasicBlock"* %13, %"class.v8::internal::compiler::Node"* %9) #14
  ret %"class.v8::internal::compiler::Node"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler9TailCallNEPNS1_14CallDescriptorEiPKPNS1_4NodeE(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::CallDescriptor"*, i32, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %6 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder8TailCallEPKNS1_14CallDescriptorE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %5, %"class.v8::internal::compiler::CallDescriptor"* %1) #14
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %7, align 8
  %9 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %8, %"class.v8::internal::compiler::Operator"* %6, i32 %2, %"class.v8::internal::compiler::Node"** %3, i1 zeroext false) #14
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %13 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %12, align 8
  tail call void @_ZN2v88internal8compiler8Schedule11AddTailCallEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %11, %"class.v8::internal::compiler::BasicBlock"* %13, %"class.v8::internal::compiler::Node"* %9) #14
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %12, align 8
  ret void
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder8TailCallEPKNS1_14CallDescriptorE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CallDescriptor"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler8Schedule11AddTailCallEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler13CallCFunctionEPNS1_4NodeENS_4base8OptionalINS0_11MachineTypeEEESt16initializer_listINSt3__14pairIS7_S4_EEE(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, i24, %"struct.std::__1::pair.1187"*, i64) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12_GLOBAL__N_117CallCFunctionImplEPNS1_19RawMachineAssemblerEPNS1_4NodeENS_4base8OptionalINS0_11MachineTypeEEESt16initializer_listINSt3__14pairIS9_S6_EEEbNS0_14SaveFPRegsModeENS2_22FunctionDescriptorModeE(%"class.v8::internal::compiler::RawMachineAssembler"* %0, %"class.v8::internal::compiler::Node"* %1, i24 %2, %"struct.std::__1::pair.1187"* %3, i64 %4, i1 zeroext false, i32 0, i32 0)
  ret %"class.v8::internal::compiler::Node"* %6
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12_GLOBAL__N_117CallCFunctionImplEPNS1_19RawMachineAssemblerEPNS1_4NodeENS_4base8OptionalINS0_11MachineTypeEEESt16initializer_listINSt3__14pairIS9_S6_EEEbNS0_14SaveFPRegsModeENS2_22FunctionDescriptorModeE(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, i24, %"struct.std::__1::pair.1187"*, i64, i1 zeroext, i32, i32) unnamed_addr #0 {
  %9 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %3, i64 0, i32 0, i32 0
  %10 = alloca %"class.v8::base::SmallVector", align 8
  %11 = trunc i24 %2 to i8
  %12 = lshr i24 %2, 8
  %13 = trunc i24 %12 to i16
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %15 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %15, i64 0, i32 0
  %17 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %16, align 8
  %18 = icmp ne i8 %11, 0
  %19 = zext i1 %18 to i64
  %20 = add i64 %19, %4
  %21 = shl i64 %20, 32
  %22 = ashr exact i64 %21, 31
  %23 = add nsw i64 %22, 7
  %24 = and i64 %23, -8
  %25 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %17, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %17, i64 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %28, %26
  %30 = icmp ugt i64 %24, %29
  br i1 %30, label %31, label %33, !prof !2

31:                                               ; preds = %8
  %32 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %17, i64 %24) #14
  br label %35

33:                                               ; preds = %8
  %34 = add i64 %26, %24
  store i64 %34, i64* %25, align 8
  br label %35

35:                                               ; preds = %31, %33
  %36 = phi i64 [ %32, %31 ], [ %26, %33 ]
  %37 = inttoptr i64 %36 to %"class.v8::internal::MachineType"*
  br i1 %18, label %38, label %40

38:                                               ; preds = %35
  %39 = inttoptr i64 %36 to i16*
  store i16 %13, i16* %39, align 1
  br label %40

40:                                               ; preds = %38, %35
  %41 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %3, i64 %4
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %108, label %43

43:                                               ; preds = %40
  %44 = shl nsw i64 %4, 4
  %45 = add i64 %44, -16
  %46 = lshr exact i64 %45, 4
  %47 = add nuw nsw i64 %46, 1
  %48 = icmp ult i64 %47, 9
  br i1 %48, label %49, label %78

49:                                               ; preds = %97, %78, %43
  %50 = phi %"struct.std::__1::pair.1187"* [ %3, %78 ], [ %3, %43 ], [ %96, %97 ]
  %51 = phi i64 [ 0, %78 ], [ 0, %43 ], [ %95, %97 ]
  %52 = ptrtoint %"struct.std::__1::pair.1187"* %50 to i64
  %53 = add i64 %4, -1
  %54 = getelementptr %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %3, i64 %53, i32 0, i32 0
  %55 = ptrtoint i8* %54 to i64
  %56 = sub i64 %55, %52
  %57 = lshr i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %74, label %61

61:                                               ; preds = %49, %61
  %62 = phi %"struct.std::__1::pair.1187"* [ %71, %61 ], [ %50, %49 ]
  %63 = phi i64 [ %67, %61 ], [ %51, %49 ]
  %64 = phi i64 [ %72, %61 ], [ %59, %49 ]
  %65 = bitcast %"struct.std::__1::pair.1187"* %62 to i16*
  %66 = load i16, i16* %65, align 8
  %67 = add nuw nsw i64 %63, 1
  %68 = add nuw nsw i64 %63, %19
  %69 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %37, i64 %68
  %70 = bitcast %"class.v8::internal::MachineType"* %69 to i16*
  store i16 %66, i16* %70, align 1
  %71 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %62, i64 1
  %72 = add i64 %64, -1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %61, !llvm.loop !5

74:                                               ; preds = %61, %49
  %75 = phi %"struct.std::__1::pair.1187"* [ %50, %49 ], [ %71, %61 ]
  %76 = phi i64 [ %51, %49 ], [ %67, %61 ]
  %77 = icmp ult i64 %56, 48
  br i1 %77, label %108, label %123

78:                                               ; preds = %43
  %79 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %37, i64 %19, i32 0
  %80 = shl nsw i64 %4, 4
  %81 = add i64 %80, -16
  %82 = lshr exact i64 %81, 4
  %83 = add nuw nsw i64 %82, %19
  %84 = add nuw nsw i64 %83, 1
  %85 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %37, i64 %84, i32 0
  %86 = getelementptr %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %3, i64 %82, i32 0, i32 0
  %87 = getelementptr i8, i8* %86, i64 2
  %88 = icmp ult i8* %79, %87
  %89 = icmp ult i8* %9, %85
  %90 = and i1 %88, %89
  br i1 %90, label %49, label %91

91:                                               ; preds = %78
  %92 = and i64 %47, 7
  %93 = icmp eq i64 %92, 0
  %94 = select i1 %93, i64 8, i64 %92
  %95 = sub nsw i64 %47, %94
  %96 = getelementptr %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %3, i64 %95
  br label %97

97:                                               ; preds = %97, %91
  %98 = phi i64 [ 0, %91 ], [ %106, %97 ]
  %99 = getelementptr %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %3, i64 %98
  %100 = bitcast %"struct.std::__1::pair.1187"* %99 to <64 x i16>*
  %101 = load <64 x i16>, <64 x i16>* %100, align 8
  %102 = shufflevector <64 x i16> %101, <64 x i16> undef, <8 x i32> <i32 0, i32 8, i32 16, i32 24, i32 32, i32 40, i32 48, i32 56>
  %103 = or i64 %98, %19
  %104 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %37, i64 %103
  %105 = bitcast %"class.v8::internal::MachineType"* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 1, !alias.scope !7, !noalias !10
  %106 = add i64 %98, 8
  %107 = icmp eq i64 %106, %95
  br i1 %107, label %49, label %97, !llvm.loop !12

108:                                              ; preds = %74, %123, %40
  %109 = icmp eq i32 %6, 1
  %110 = and i1 %109, %5
  %111 = select i1 %110, i32 384, i32 128
  %112 = select i1 %5, i32 %111, i32 0
  %113 = icmp eq i32 %7, 0
  %114 = or i32 %112, 1024
  %115 = select i1 %113, i32 %112, i32 %114
  %116 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %14, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %116, i64 0, i32 0
  %118 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %117, align 8
  %119 = load i64, i64* %25, align 8
  %120 = load i64, i64* %27, align 8
  %121 = sub i64 %120, %119
  %122 = icmp ult i64 %121, 24
  br i1 %122, label %155, label %157, !prof !2

123:                                              ; preds = %74, %123
  %124 = phi %"struct.std::__1::pair.1187"* [ %153, %123 ], [ %75, %74 ]
  %125 = phi i64 [ %149, %123 ], [ %76, %74 ]
  %126 = bitcast %"struct.std::__1::pair.1187"* %124 to i16*
  %127 = load i16, i16* %126, align 8
  %128 = add nuw nsw i64 %125, 1
  %129 = add nuw nsw i64 %125, %19
  %130 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %37, i64 %129
  %131 = bitcast %"class.v8::internal::MachineType"* %130 to i16*
  store i16 %127, i16* %131, align 1
  %132 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %124, i64 1
  %133 = bitcast %"struct.std::__1::pair.1187"* %132 to i16*
  %134 = load i16, i16* %133, align 8
  %135 = add nuw nsw i64 %125, 2
  %136 = add nuw nsw i64 %128, %19
  %137 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %37, i64 %136
  %138 = bitcast %"class.v8::internal::MachineType"* %137 to i16*
  store i16 %134, i16* %138, align 1
  %139 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %124, i64 2
  %140 = bitcast %"struct.std::__1::pair.1187"* %139 to i16*
  %141 = load i16, i16* %140, align 8
  %142 = add nuw nsw i64 %125, 3
  %143 = add nuw nsw i64 %135, %19
  %144 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %37, i64 %143
  %145 = bitcast %"class.v8::internal::MachineType"* %144 to i16*
  store i16 %141, i16* %145, align 1
  %146 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %124, i64 3
  %147 = bitcast %"struct.std::__1::pair.1187"* %146 to i16*
  %148 = load i16, i16* %147, align 8
  %149 = add nuw nsw i64 %125, 4
  %150 = add nuw nsw i64 %142, %19
  %151 = getelementptr inbounds %"class.v8::internal::MachineType", %"class.v8::internal::MachineType"* %37, i64 %150
  %152 = bitcast %"class.v8::internal::MachineType"* %151 to i16*
  store i16 %148, i16* %152, align 1
  %153 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %124, i64 4
  %154 = icmp eq %"struct.std::__1::pair.1187"* %153, %41
  br i1 %154, label %108, label %123, !llvm.loop !14

155:                                              ; preds = %108
  %156 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %17, i64 24) #14
  br label %159

157:                                              ; preds = %108
  %158 = add i64 %119, 24
  store i64 %158, i64* %25, align 8
  br label %159

159:                                              ; preds = %155, %157
  %160 = phi i64 [ %156, %155 ], [ %119, %157 ]
  %161 = inttoptr i64 %160 to %"class.v8::internal::Signature.1193"*
  %162 = getelementptr inbounds %"class.v8::internal::Signature.1193", %"class.v8::internal::Signature.1193"* %161, i64 0, i32 0
  store i64 %19, i64* %162, align 8
  %163 = getelementptr inbounds %"class.v8::internal::Signature.1193", %"class.v8::internal::Signature.1193"* %161, i64 0, i32 1
  store i64 %4, i64* %163, align 8
  %164 = getelementptr inbounds %"class.v8::internal::Signature.1193", %"class.v8::internal::Signature.1193"* %161, i64 0, i32 2
  %165 = bitcast %"class.v8::internal::MachineType"** %164 to i64*
  store i64 %36, i64* %165, align 8
  %166 = tail call %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler7Linkage24GetSimplifiedCDescriptorEPNS0_4ZoneEPKNS0_9SignatureINS0_11MachineTypeEEENS_4base5FlagsINS1_14CallDescriptor4FlagEiEE(%"class.v8::internal::Zone"* %118, %"class.v8::internal::Signature.1193"* %161, i32 %115) #14
  %167 = bitcast %"class.v8::base::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %167) #14
  %168 = add i64 %4, 1
  %169 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %10, i64 0, i32 3
  %170 = bitcast %"class.v8::base::SmallVector"* %10 to %"struct.std::__1::aligned_storage<80, 8>::type"**
  store %"struct.std::__1::aligned_storage<80, 8>::type"* %169, %"struct.std::__1::aligned_storage<80, 8>::type"** %170, align 8
  %171 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %10, i64 0, i32 1
  %172 = bitcast %"class.v8::internal::compiler::Node"*** %171 to %"struct.std::__1::aligned_storage<80, 8>::type"**
  store %"struct.std::__1::aligned_storage<80, 8>::type"* %169, %"struct.std::__1::aligned_storage<80, 8>::type"** %172, align 8
  %173 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %10, i64 0, i32 2
  %174 = getelementptr inbounds %"struct.std::__1::aligned_storage<80, 8>::type", %"struct.std::__1::aligned_storage<80, 8>::type"* %169, i64 1
  %175 = bitcast %"class.v8::internal::compiler::Node"*** %173 to %"struct.std::__1::aligned_storage<80, 8>::type"**
  store %"struct.std::__1::aligned_storage<80, 8>::type"* %174, %"struct.std::__1::aligned_storage<80, 8>::type"** %175, align 8
  %176 = icmp ugt i64 %168, 10
  %177 = bitcast %"struct.std::__1::aligned_storage<80, 8>::type"* %169 to %"class.v8::internal::compiler::Node"**
  br i1 %176, label %178, label %182

178:                                              ; preds = %159
  %179 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %10, i64 0, i32 0
  %180 = call %"class.v8::internal::compiler::Node"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler4NodeELm10EE4GrowEm(%"class.v8::base::SmallVector"* nonnull %10, i64 %168) #14
  %181 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %179, align 8
  br label %182

182:                                              ; preds = %159, %178
  %183 = phi %"class.v8::internal::compiler::Node"** [ %181, %178 ], [ %177, %159 ]
  %184 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %183, i64 %168
  store %"class.v8::internal::compiler::Node"** %184, %"class.v8::internal::compiler::Node"*** %171, align 8
  %185 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %10, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %183, align 8
  br i1 %42, label %255, label %186

186:                                              ; preds = %182
  %187 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %185, align 8
  %188 = shl nsw i64 %4, 4
  %189 = add i64 %188, -16
  %190 = lshr exact i64 %189, 4
  %191 = add nuw nsw i64 %190, 1
  %192 = and i64 %191, 7
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %206, label %194

194:                                              ; preds = %186, %194
  %195 = phi %"class.v8::internal::compiler::Node"** [ %198, %194 ], [ %187, %186 ]
  %196 = phi %"struct.std::__1::pair.1187"* [ %203, %194 ], [ %3, %186 ]
  %197 = phi i64 [ %204, %194 ], [ %192, %186 ]
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 1
  %199 = getelementptr %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %196, i64 0, i32 1
  %200 = bitcast %"class.v8::internal::compiler::Node"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  store i64 %201, i64* %202, align 8
  %203 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %196, i64 1
  %204 = add i64 %197, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %194, !llvm.loop !15

206:                                              ; preds = %194, %186
  %207 = phi %"class.v8::internal::compiler::Node"** [ %187, %186 ], [ %198, %194 ]
  %208 = phi %"struct.std::__1::pair.1187"* [ %3, %186 ], [ %203, %194 ]
  %209 = icmp ult i64 %189, 112
  br i1 %209, label %255, label %210

210:                                              ; preds = %206, %210
  %211 = phi %"class.v8::internal::compiler::Node"** [ %248, %210 ], [ %207, %206 ]
  %212 = phi %"struct.std::__1::pair.1187"* [ %253, %210 ], [ %208, %206 ]
  %213 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 1
  %214 = getelementptr %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %212, i64 0, i32 1
  %215 = bitcast %"class.v8::internal::compiler::Node"** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"class.v8::internal::compiler::Node"** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 2
  %219 = getelementptr %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %212, i64 1, i32 1
  %220 = bitcast %"class.v8::internal::compiler::Node"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.v8::internal::compiler::Node"** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 3
  %224 = getelementptr %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %212, i64 2, i32 1
  %225 = bitcast %"class.v8::internal::compiler::Node"** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.v8::internal::compiler::Node"** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 4
  %229 = getelementptr %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %212, i64 3, i32 1
  %230 = bitcast %"class.v8::internal::compiler::Node"** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"class.v8::internal::compiler::Node"** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 5
  %234 = getelementptr %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %212, i64 4, i32 1
  %235 = bitcast %"class.v8::internal::compiler::Node"** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"class.v8::internal::compiler::Node"** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 6
  %239 = getelementptr %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %212, i64 5, i32 1
  %240 = bitcast %"class.v8::internal::compiler::Node"** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.v8::internal::compiler::Node"** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 7
  %244 = getelementptr %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %212, i64 6, i32 1
  %245 = bitcast %"class.v8::internal::compiler::Node"** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.v8::internal::compiler::Node"** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %211, i64 8
  %249 = getelementptr %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %212, i64 7, i32 1
  %250 = bitcast %"class.v8::internal::compiler::Node"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.v8::internal::compiler::Node"** %248 to i64*
  store i64 %251, i64* %252, align 8
  %253 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %212, i64 8
  %254 = icmp eq %"struct.std::__1::pair.1187"* %253, %41
  br i1 %254, label %255, label %210

255:                                              ; preds = %206, %210, %182
  %256 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %257 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4CallEPKNS1_14CallDescriptorE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %256, %"class.v8::internal::compiler::CallDescriptor"* %166) #14
  %258 = bitcast %"class.v8::internal::compiler::Node"*** %171 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = bitcast %"class.v8::base::SmallVector"* %10 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = sub i64 %259, %261
  %263 = lshr exact i64 %262, 3
  %264 = trunc i64 %263 to i32
  %265 = inttoptr i64 %261 to %"class.v8::internal::compiler::Node"**
  %266 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %14, align 8
  %267 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %266, %"class.v8::internal::compiler::Operator"* %257, i32 %264, %"class.v8::internal::compiler::Node"** %265, i1 zeroext false) #14
  %268 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %269 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %268, align 8
  %270 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %271 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %270, align 8
  call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %269, %"class.v8::internal::compiler::BasicBlock"* %271, %"class.v8::internal::compiler::Node"* %267) #14
  %272 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %185, align 8
  %273 = icmp eq %"class.v8::internal::compiler::Node"** %272, %177
  br i1 %273, label %276, label %274

274:                                              ; preds = %255
  %275 = bitcast %"class.v8::internal::compiler::Node"** %272 to i8*
  call void @free(i8* %275) #14
  br label %276

276:                                              ; preds = %255, %274
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %167) #14
  ret %"class.v8::internal::compiler::Node"* %267
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler38CallCFunctionWithoutFunctionDescriptorEPNS1_4NodeENS0_11MachineTypeESt16initializer_listINSt3__14pairIS5_S4_EEE(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, i16, %"struct.std::__1::pair.1187"*, i64) local_unnamed_addr #0 align 2 {
  %6 = zext i16 %2 to i24
  %7 = shl nuw i24 %6, 8
  %8 = or i24 %7, 1
  %9 = tail call fastcc %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12_GLOBAL__N_117CallCFunctionImplEPNS1_19RawMachineAssemblerEPNS1_4NodeENS_4base8OptionalINS0_11MachineTypeEEESt16initializer_listINSt3__14pairIS9_S6_EEEbNS0_14SaveFPRegsModeENS2_22FunctionDescriptorModeE(%"class.v8::internal::compiler::RawMachineAssembler"* %0, %"class.v8::internal::compiler::Node"* %1, i24 %8, %"struct.std::__1::pair.1187"* %3, i64 %4, i1 zeroext false, i32 0, i32 1)
  ret %"class.v8::internal::compiler::Node"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler37CallCFunctionWithCallerSavedRegistersEPNS1_4NodeENS0_11MachineTypeENS0_14SaveFPRegsModeESt16initializer_listINSt3__14pairIS5_S4_EEE(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, i16, i32, %"struct.std::__1::pair.1187"*, i64) local_unnamed_addr #0 align 2 {
  %7 = zext i16 %2 to i24
  %8 = shl nuw i24 %7, 8
  %9 = or i24 %8, 1
  %10 = tail call fastcc %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler12_GLOBAL__N_117CallCFunctionImplEPNS1_19RawMachineAssemblerEPNS1_4NodeENS_4base8OptionalINS0_11MachineTypeEEESt16initializer_listINSt3__14pairIS9_S6_EEEbNS0_14SaveFPRegsModeENS2_22FunctionDescriptorModeE(%"class.v8::internal::compiler::RawMachineAssembler"* %0, %"class.v8::internal::compiler::Node"* %1, i24 %9, %"struct.std::__1::pair.1187"* %4, i64 %5, i1 zeroext true, i32 %3, i32 0)
  ret %"class.v8::internal::compiler::Node"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler19RawMachineAssembler11EnsureBlockEPNS1_15RawMachineLabelE(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture readonly, %"class.v8::internal::compiler::RawMachineLabel"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %4, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %8 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %7, align 8
  %9 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %8) #14
  store %"class.v8::internal::compiler::BasicBlock"* %9, %"class.v8::internal::compiler::BasicBlock"** %3, align 8
  br label %10

10:                                               ; preds = %6, %2
  %11 = phi %"class.v8::internal::compiler::BasicBlock"* [ %9, %6 ], [ %4, %2 ]
  ret %"class.v8::internal::compiler::BasicBlock"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler4BindEPNS1_15RawMachineLabelE(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture, %"class.v8::internal::compiler::RawMachineLabel"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %1, i64 0, i32 2
  store i8 1, i8* %3, align 1
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %4, align 8
  %6 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %5, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %9 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %8, align 8
  %10 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %9) #14
  store %"class.v8::internal::compiler::BasicBlock"* %10, %"class.v8::internal::compiler::BasicBlock"** %4, align 8
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi %"class.v8::internal::compiler::BasicBlock"* [ %10, %7 ], [ %5, %2 ]
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  store %"class.v8::internal::compiler::BasicBlock"* %12, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineLabel", %"class.v8::internal::compiler::RawMachineLabel"* %1, i64 0, i32 3
  %15 = load i8, i8* %14, align 2, !range !3
  %16 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %12, i64 0, i32 2
  store i8 %15, i8* %16, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler19RawMachineAssembler11InsideBlockEv(%"class.v8::internal::compiler::RawMachineAssembler"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %3 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %2, align 8
  %4 = icmp ne %"class.v8::internal::compiler::BasicBlock"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler19RawMachineAssembler3PhiENS0_21MachineRepresentationEiPKPNS1_4NodeE(%"class.v8::internal::compiler::RawMachineAssembler"*, i8 zeroext, i32, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %6, i64 0, i32 0
  %8 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, align 8
  %9 = add nsw i32 %2, 1
  %10 = sext i32 %9 to i64
  %11 = shl nsw i64 %10, 3
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %13
  %17 = icmp ugt i64 %11, %16
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %4
  %19 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %8, i64 %11) #14
  br label %22

20:                                               ; preds = %4
  %21 = add i64 %13, %11
  store i64 %21, i64* %12, align 8
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi i64 [ %19, %18 ], [ %13, %20 ]
  %24 = inttoptr i64 %23 to %"class.v8::internal::compiler::Node"**
  %25 = sext i32 %2 to i64
  %26 = icmp eq i32 %2, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %22
  %28 = shl nuw nsw i64 %25, 3
  %29 = inttoptr i64 %23 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"** %3 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %28, i1 false) #14
  br label %31

31:                                               ; preds = %22, %27
  %32 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %5, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %32, i64 0, i32 1
  %34 = bitcast %"class.v8::internal::compiler::Node"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, i64 %25
  %37 = bitcast %"class.v8::internal::compiler::Node"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %39 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %38, i8 zeroext %1, i32 %2) #14
  %40 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %5, align 8
  %41 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %40, %"class.v8::internal::compiler::Operator"* %39, i32 %9, %"class.v8::internal::compiler::Node"** %24, i1 zeroext false) #14
  %42 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 2
  %43 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 10
  %45 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %44, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %43, %"class.v8::internal::compiler::BasicBlock"* %45, %"class.v8::internal::compiler::Node"* %41) #14
  ret %"class.v8::internal::compiler::Node"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19RawMachineAssembler14AppendPhiInputEPNS1_4NodeES4_(%"class.v8::internal::compiler::RawMachineAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 251658240
  %10 = icmp eq i32 %9, 251658240
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = lshr i32 %8, 24
  %13 = and i32 %12, 15
  br label %21

14:                                               ; preds = %3
  %15 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %16 = add i64 %15, 32
  %17 = inttoptr i64 %16 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %18 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %17, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  br label %21

21:                                               ; preds = %11, %14
  %22 = phi i32 [ %13, %11 ], [ %20, %14 ]
  %23 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder16ResizeMergeOrPhiEPKNS1_8OperatorEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %6, %"class.v8::internal::compiler::Operator"* %5, i32 %22) #14
  %24 = getelementptr inbounds %"class.v8::internal::compiler::RawMachineAssembler", %"class.v8::internal::compiler::RawMachineAssembler"* %0, i64 0, i32 1
  %25 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %25, i64 0, i32 0
  %27 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %26, align 8
  %28 = load i32, i32* %7, align 4
  %29 = and i32 %28, 251658240
  %30 = icmp eq i32 %29, 251658240
  br i1 %30, label %34, label %31

31:                                               ; preds = %21
  %32 = lshr i32 %28, 24
  %33 = and i32 %32, 15
  br label %41

34:                                               ; preds = %21
  %35 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %36 = add i64 %35, 32
  %37 = inttoptr i64 %36 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %38 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %37, align 8
  %39 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  br label %41

41:                                               ; preds = %31, %34
  %42 = phi i32 [ %33, %31 ], [ %40, %34 ]
  %43 = add nsw i32 %42, -1
  tail call void @_ZN2v88internal8compiler4Node11InsertInputEPNS0_4ZoneEiPS2_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::Zone"* %27, i32 %43, %"class.v8::internal::compiler::Node"* %2) #14
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Operator"* %23) #14
  ret void
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder16ResizeMergeOrPhiEPKNS1_8OperatorEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::Operator"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node11InsertInputEPNS0_4ZoneEiPS2_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::Zone"*, i32, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph16NewNodeUncheckedEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i1 zeroext) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal8compiler15RawMachineLabelD2Ev(%"class.v8::internal::compiler::RawMachineLabel"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder12HeapConstantERKNS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::Handle.969"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder24RelocatableInt64ConstantElNS0_9RelocInfo4ModeE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i64, i8 signext) local_unnamed_addr #2

declare void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"*, i8**, %struct._IO_FILE*) unnamed_addr #2

declare %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #14
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #14
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #14
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #14
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #14
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #14
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #14
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #14
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #14
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #14
  tail call void @_ZdlPv(i8* %8) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #14
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #14
  %10 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #14
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #14
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #14
  tail call void @_ZdlPv(i8* %8) #16
  ret void
}

declare void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN2v88internal8compiler14NodeProperties18ReplaceEffectInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeProperties19ReplaceControlInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int32ConstantEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler7Linkage24GetSimplifiedCDescriptorEPNS0_4ZoneEPKNS0_9SignatureINS0_11MachineTypeEEENS_4base5FlagsINS1_14CallDescriptor4FlagEiEE(%"class.v8::internal::Zone"*, %"class.v8::internal::Signature.1193"*, i32) local_unnamed_addr #2

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::Node"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler4NodeELm10EE4GrowEm(%"class.v8::base::SmallVector"*, i64) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8::internal::compiler::Node"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::base::SmallVector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 2
  %11 = bitcast %"class.v8::internal::compiler::Node"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %7
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %14, %1
  %16 = select i1 %15, i64 %14, i64 %1
  %17 = tail call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 %16) #14
  %18 = shl i64 %17, 3
  %19 = tail call noalias i8* @malloc(i64 %18) #14
  %20 = bitcast i8* %19 to %"class.v8::internal::compiler::Node"**
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

23:                                               ; preds = %2
  %24 = bitcast %"class.v8::base::SmallVector"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 %25, i64 %8, i1 false) #14
  %26 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 3, i32 0, i64 0
  %27 = icmp eq i8* %25, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  tail call void @free(i8* %25) #14
  br label %29

29:                                               ; preds = %23, %28
  store i8* %19, i8** %24, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %20, i64 %9
  store %"class.v8::internal::compiler::Node"** %30, %"class.v8::internal::compiler::Node"*** %3, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %20, i64 %17
  store %"class.v8::internal::compiler::Node"** %31, %"class.v8::internal::compiler::Node"*** %10, align 8
  ret %"class.v8::internal::compiler::Node"** %30
}

declare i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #10

declare void @_ZN2v88internal8compiler8ScheduleC1EPNS0_4ZoneEm(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::Zone"*, i64) unnamed_addr #2

declare void @_ZN2v88internal8compiler19SourcePositionTableC1EPNS1_5GraphE(%"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::Graph"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8ScheduleE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::compiler::Schedule"* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = !{!8}
!8 = distinct !{!8, !9}
!9 = distinct !{!9, !"LVerDomain"}
!10 = !{!11}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !6}
