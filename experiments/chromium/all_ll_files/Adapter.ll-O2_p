; ModuleID = '../../third_party/dawn/src/dawn_native/Adapter.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/Adapter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.dawn_native::AdapterBase" = type <{ i32 (...)**, %"struct.dawn_native::PCIInfo", i32, [4 x i8], %"class.std::__1::basic_string", %"struct.dawn_native::ExtensionsSet", %"class.dawn_native::InstanceBase"*, i32, [4 x i8] }>
%"struct.dawn_native::PCIInfo" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.dawn_native::InstanceBase" = type { %class.RefCounted, i8, i8, i8, i32, %"class.dawn_platform::Platform"*, %"class.std::__1::vector", %"class.std::__1::vector.7", %"class.dawn_native::ExtensionsInfo", %"class.dawn_native::TogglesInfo", %"class.std::__1::unique_ptr.58" }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.dawn_platform::Platform" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.std::__1::unique_ptr.9"*, %"class.std::__1::unique_ptr.9"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::unique_ptr.9" = type opaque
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::unique_ptr.9"* }
%"class.dawn_native::ExtensionsInfo" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.15", %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.31", [4 x i8] }>
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i64 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { float }
%"class.dawn_native::TogglesInfo" = type { i8, [7 x i8], %"class.std::__1::unordered_map.34" }
%"class.std::__1::unordered_map.34" = type { %"class.std::__1::__hash_table.35" }
%"class.std::__1::__hash_table.35" = type <{ %"class.std::__1::unique_ptr.36", %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.54", [4 x i8] }>
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base.39"** }
%"struct.std::__1::__hash_node_base.39" = type { %"struct.std::__1::__hash_node_base.39"* }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::__bucket_list_deallocator.41" }
%"class.std::__1::__bucket_list_deallocator.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::__hash_node_base.39" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.dawn_native::XlibXcbFunctions"* }
%"class.dawn_native::XlibXcbFunctions" = type opaque
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { i8**, i8**, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { i8** }
%struct.WGPUDeviceProperties = type { i8, i8, i8, i8, i8, i8 }
%"class.dawn_native::DeviceBase" = type opaque
%"struct.dawn_native::DeviceDescriptor" = type { %"class.std::__1::vector.62", %"class.std::__1::vector.62", %"class.std::__1::vector.62" }
%class.Result = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.74" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.Result.82 = type { i64 }

$_ZN11dawn_native11AdapterBaseD2Ev = comdat any

$_ZN11dawn_native11AdapterBaseD0Ev = comdat any

@_ZTVN11dawn_native11AdapterBaseE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::AdapterBase"*)* @_ZN11dawn_native11AdapterBaseD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::AdapterBase"*)* @_ZN11dawn_native11AdapterBaseD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.Result*, %"class.dawn_native::AdapterBase"*)* @_ZN11dawn_native11AdapterBase33ResetInternalDeviceForTestingImplEv to i8*)] }, align 8
@.str = private unnamed_addr constant [51 x i8] c"One or more requested extensions are not supported\00", align 1
@.str.1 = private unnamed_addr constant [51 x i8] c"../../third_party/dawn/src/dawn_native/Adapter.cpp\00", align 1
@__func__._ZN11dawn_native11AdapterBase20CreateDeviceInternalEPPNS_10DeviceBaseEPKNS_16DeviceDescriptorE = private unnamed_addr constant [21 x i8] c"CreateDeviceInternal\00", align 1
@.str.2 = private unnamed_addr constant [74 x i8] c"ResetInternalDeviceForTesting should only be used with the D3D12 backend.\00", align 1
@__func__._ZN11dawn_native11AdapterBase33ResetInternalDeviceForTestingImplEv = private unnamed_addr constant [34 x i8] c"ResetInternalDeviceForTestingImpl\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native11AdapterBaseC2EPNS_12InstanceBaseEN4wgpu11BackendTypeE(%"class.dawn_native::AdapterBase"* nocapture, %"class.dawn_native::InstanceBase"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native11AdapterBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 2
  %7 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false)
  store i32 3, i32* %6, align 8
  %8 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 6
  %10 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false)
  store %"class.dawn_native::InstanceBase"* %1, %"class.dawn_native::InstanceBase"** %9, align 8
  %11 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 7
  store i32 %2, i32* %11, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11dawn_native11AdapterBase14GetBackendTypeEv(%"class.dawn_native::AdapterBase"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11dawn_native11AdapterBase14GetAdapterTypeEv(%"class.dawn_native::AdapterBase"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK11dawn_native11AdapterBase20GetDriverDescriptionEv(%"class.dawn_native::AdapterBase"* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 4
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(32) %"struct.dawn_native::PCIInfo"* @_ZNK11dawn_native11AdapterBase10GetPCIInfoEv(%"class.dawn_native::AdapterBase"* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 1
  ret %"struct.dawn_native::PCIInfo"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.dawn_native::InstanceBase"* @_ZNK11dawn_native11AdapterBase11GetInstanceEv(%"class.dawn_native::AdapterBase"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 6
  %3 = load %"class.dawn_native::InstanceBase"*, %"class.dawn_native::InstanceBase"** %2, align 8
  ret %"class.dawn_native::InstanceBase"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK11dawn_native11AdapterBase22GetSupportedExtensionsEv(%"class.dawn_native::AdapterBase"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11dawn_native11AdapterBase30SupportsAllRequestedExtensionsERKNSt3__16vectorIPKcNS1_9allocatorIS4_EEEE(%"class.dawn_native::AdapterBase"*, %"class.std::__1::vector.62"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %1, i64 0, i32 0, i32 0
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %1, i64 0, i32 0, i32 1
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 5
  br label %13

11:                                               ; preds = %19
  %12 = icmp eq i8** %21, %6
  br i1 %12, label %22, label %13

13:                                               ; preds = %8, %11
  %14 = phi i8** [ %4, %8 ], [ %21, %11 ]
  %15 = load i8*, i8** %14, align 8
  %16 = load %"class.dawn_native::InstanceBase"*, %"class.dawn_native::InstanceBase"** %9, align 8
  %17 = tail call i32 @_ZN11dawn_native12InstanceBase19ExtensionNameToEnumEPKc(%"class.dawn_native::InstanceBase"* %16, i8* %15) #8
  %18 = icmp eq i32 %17, 6
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = tail call zeroext i1 @_ZNK11dawn_native13ExtensionsSet9IsEnabledENS_9ExtensionE(%"struct.dawn_native::ExtensionsSet"* %10, i32 %17) #8
  %21 = getelementptr inbounds i8*, i8** %14, i64 1
  br i1 %20, label %11, label %22

22:                                               ; preds = %13, %19, %11, %2
  %23 = phi i1 [ true, %2 ], [ true, %11 ], [ false, %19 ], [ false, %13 ]
  ret i1 %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i32 @_ZN11dawn_native12InstanceBase19ExtensionNameToEnumEPKc(%"class.dawn_native::InstanceBase"*, i8*) local_unnamed_addr #4

declare zeroext i1 @_ZNK11dawn_native13ExtensionsSet9IsEnabledENS_9ExtensionE(%"struct.dawn_native::ExtensionsSet"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i48 @_ZNK11dawn_native11AdapterBase20GetAdapterPropertiesEv(%"class.dawn_native::AdapterBase"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.WGPUDeviceProperties, align 8
  %3 = getelementptr inbounds %struct.WGPUDeviceProperties, %struct.WGPUDeviceProperties* %2, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 6, i1 false)
  %4 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 5
  call void @_ZNK11dawn_native13ExtensionsSet26InitializeDevicePropertiesEP20WGPUDeviceProperties(%"struct.dawn_native::ExtensionsSet"* %4, %struct.WGPUDeviceProperties* nonnull %2) #8
  %5 = bitcast %struct.WGPUDeviceProperties* %2 to i48*
  %6 = load i48, i48* %5, align 8
  ret i48 %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNK11dawn_native13ExtensionsSet26InitializeDevicePropertiesEP20WGPUDeviceProperties(%"struct.dawn_native::ExtensionsSet"*, %struct.WGPUDeviceProperties*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.dawn_native::DeviceBase"* @_ZN11dawn_native11AdapterBase12CreateDeviceEPKNS_16DeviceDescriptorE(%"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.dawn_native::DeviceBase"*, align 8
  %4 = alloca %class.Result, align 8
  %5 = bitcast %"class.dawn_native::DeviceBase"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  store %"class.dawn_native::DeviceBase"* null, %"class.dawn_native::DeviceBase"** %3, align 8
  %6 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 6
  %7 = load %"class.dawn_native::InstanceBase"*, %"class.dawn_native::InstanceBase"** %6, align 8
  call void @_ZN11dawn_native11AdapterBase20CreateDeviceInternalEPPNS_10DeviceBaseEPKNS_16DeviceDescriptorE(%class.Result* nonnull sret %4, %"class.dawn_native::AdapterBase"* %0, %"class.dawn_native::DeviceBase"** nonnull %3, %"struct.dawn_native::DeviceDescriptor"* %1)
  %8 = call zeroext i1 @_ZN11dawn_native12InstanceBase13ConsumedErrorE6ResultIvNS_9ErrorDataEE(%"class.dawn_native::InstanceBase"* %7, %class.Result* nonnull %4) #8
  %9 = getelementptr inbounds %class.Result, %class.Result* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %9, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %9, align 8
  %11 = icmp eq %"class.dawn_native::ErrorData"* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %10, i64 0, i32 2, i32 0, i32 0
  %14 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %13, align 8
  %15 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %14 to i64
  %18 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %10, i64 0, i32 2, i32 0, i32 1
  %19 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %14 to i8*
  call void @_ZdlPv(i8* %20) #9
  br label %21

21:                                               ; preds = %16, %12
  %22 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %10, i64 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %27, %21
  %31 = bitcast %"class.dawn_native::ErrorData"* %10 to i8*
  call void @_ZdlPv(i8* %31) #9
  br label %32

32:                                               ; preds = %2, %30
  %33 = load %"class.dawn_native::DeviceBase"*, %"class.dawn_native::DeviceBase"** %3, align 8
  %34 = select i1 %8, %"class.dawn_native::DeviceBase"* null, %"class.dawn_native::DeviceBase"* %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret %"class.dawn_native::DeviceBase"* %34
}

declare zeroext i1 @_ZN11dawn_native12InstanceBase13ConsumedErrorE6ResultIvNS_9ErrorDataEE(%"class.dawn_native::InstanceBase"*, %class.Result*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native11AdapterBase20CreateDeviceInternalEPPNS_10DeviceBaseEPKNS_16DeviceDescriptorE(%class.Result* noalias nocapture sret, %"class.dawn_native::AdapterBase"*, %"class.dawn_native::DeviceBase"** nocapture, %"struct.dawn_native::DeviceDescriptor"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %class.Result.82, align 8
  %7 = icmp eq %"struct.dawn_native::DeviceDescriptor"* %3, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"struct.dawn_native::DeviceDescriptor", %"struct.dawn_native::DeviceDescriptor"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load i8**, i8*** %9, align 8
  %11 = getelementptr inbounds %"struct.dawn_native::DeviceDescriptor", %"struct.dawn_native::DeviceDescriptor"* %3, i64 0, i32 0, i32 0, i32 1
  %12 = load i8**, i8*** %11, align 8
  %13 = icmp eq i8** %10, %12
  br i1 %13, label %43, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %1, i64 0, i32 6
  %16 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %1, i64 0, i32 5
  br label %19

17:                                               ; preds = %25
  %18 = icmp eq i8** %27, %12
  br i1 %18, label %43, label %19

19:                                               ; preds = %17, %14
  %20 = phi i8** [ %10, %14 ], [ %27, %17 ]
  %21 = load i8*, i8** %20, align 8
  %22 = load %"class.dawn_native::InstanceBase"*, %"class.dawn_native::InstanceBase"** %15, align 8
  %23 = tail call i32 @_ZN11dawn_native12InstanceBase19ExtensionNameToEnumEPKc(%"class.dawn_native::InstanceBase"* %22, i8* %21) #8
  %24 = icmp eq i32 %23, 6
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = tail call zeroext i1 @_ZNK11dawn_native13ExtensionsSet9IsEnabledENS_9ExtensionE(%"struct.dawn_native::ExtensionsSet"* %16, i32 %23) #8
  %27 = getelementptr inbounds i8*, i8** %20, i64 1
  br i1 %26, label %17, label %28

28:                                               ; preds = %25, %19
  %29 = tail call i8* @_Znwm(i64 64) #9
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i64* %31 to <2 x i64>*
  store <2 x i64> <i64 50, i64 -9223372036854775744>, <2 x i64>* %32, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 1 getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i64 50, i1 false) #8
  %33 = getelementptr inbounds i8, i8* %29, i64 50
  store i8 0, i8* %33, align 1
  %34 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__._ZN11dawn_native11AdapterBase20CreateDeviceInternalEPPNS_10DeviceBaseEPKNS_16DeviceDescriptorE, i64 0, i64 0), i32 84) #8
  %35 = ptrtoint %"class.dawn_native::ErrorData"* %34 to i64
  %36 = bitcast %class.Result* %0 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %60

41:                                               ; preds = %28
  %42 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %42) #9
  br label %60

43:                                               ; preds = %17, %8, %4
  %44 = bitcast %class.Result.82* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #8
  %45 = bitcast %"class.dawn_native::AdapterBase"* %1 to void (%class.Result.82*, %"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*)***
  %46 = load void (%class.Result.82*, %"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*)**, void (%class.Result.82*, %"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.Result.82*, %"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*)*, void (%class.Result.82*, %"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*)** %46, i64 2
  %48 = load void (%class.Result.82*, %"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*)*, void (%class.Result.82*, %"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*)** %47, align 8
  call void %48(%class.Result.82* nonnull sret %6, %"class.dawn_native::AdapterBase"* %1, %"struct.dawn_native::DeviceDescriptor"* %3) #8
  %49 = getelementptr inbounds %class.Result.82, %class.Result.82* %6, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #8
  %51 = call i32 @_ZN6detail14GetPayloadTypeEl(i64 %50) #8
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %57, !prof !2

53:                                               ; preds = %43
  %54 = xor i64 %50, 1
  %55 = inttoptr i64 %54 to %"class.dawn_native::ErrorData"*
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %55, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__._ZN11dawn_native11AdapterBase20CreateDeviceInternalEPPNS_10DeviceBaseEPKNS_16DeviceDescriptorE, i64 0, i64 0), i32 90) #8
  %56 = bitcast %class.Result* %0 to i64*
  store i64 %54, i64* %56, align 8
  br label %60

57:                                               ; preds = %43
  %58 = inttoptr i64 %50 to %"class.dawn_native::DeviceBase"*
  store %"class.dawn_native::DeviceBase"* %58, %"class.dawn_native::DeviceBase"** %2, align 8
  %59 = bitcast %class.Result* %0 to i64*
  store i64 0, i64* %59, align 8
  br label %60

60:                                               ; preds = %41, %28, %53, %57
  ret void
}

declare %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32, %"class.std::__1::basic_string"*, i8*, i8*, i32) local_unnamed_addr #4

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native11AdapterBase29ResetInternalDeviceForTestingEv(%"class.dawn_native::AdapterBase"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.Result, align 8
  %3 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 6
  %4 = load %"class.dawn_native::InstanceBase"*, %"class.dawn_native::InstanceBase"** %3, align 8
  %5 = bitcast %"class.dawn_native::AdapterBase"* %0 to void (%class.Result*, %"class.dawn_native::AdapterBase"*)***
  %6 = load void (%class.Result*, %"class.dawn_native::AdapterBase"*)**, void (%class.Result*, %"class.dawn_native::AdapterBase"*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.Result*, %"class.dawn_native::AdapterBase"*)*, void (%class.Result*, %"class.dawn_native::AdapterBase"*)** %6, i64 3
  %8 = load void (%class.Result*, %"class.dawn_native::AdapterBase"*)*, void (%class.Result*, %"class.dawn_native::AdapterBase"*)** %7, align 8
  call void %8(%class.Result* nonnull sret %2, %"class.dawn_native::AdapterBase"* %0) #8
  %9 = call zeroext i1 @_ZN11dawn_native12InstanceBase13ConsumedErrorE6ResultIvNS_9ErrorDataEE(%"class.dawn_native::InstanceBase"* %4, %class.Result* nonnull %2) #8
  %10 = getelementptr inbounds %class.Result, %class.Result* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %10, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %10, align 8
  %12 = icmp eq %"class.dawn_native::ErrorData"* %11, null
  br i1 %12, label %33, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %11, i64 0, i32 2, i32 0, i32 0
  %15 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %14, align 8
  %16 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %15 to i64
  %19 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %11, i64 0, i32 2, i32 0, i32 1
  %20 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %15 to i8*
  call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %11, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %28, %22
  %32 = bitcast %"class.dawn_native::ErrorData"* %11 to i8*
  call void @_ZdlPv(i8* %32) #9
  br label %33

33:                                               ; preds = %1, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native11AdapterBase33ResetInternalDeviceForTestingImplEv(%class.Result* noalias nocapture sret, %"class.dawn_native::AdapterBase"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = tail call i8* @_Znwm(i64 80) #9
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to <2 x i64>*
  store <2 x i64> <i64 73, i64 -9223372036854775728>, <2 x i64>* %7, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 getelementptr inbounds ([74 x i8], [74 x i8]* @.str.2, i64 0, i64 0), i64 73, i1 false) #8
  %8 = getelementptr inbounds i8, i8* %4, i64 73
  store i8 0, i8* %8, align 1
  %9 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__func__._ZN11dawn_native11AdapterBase33ResetInternalDeviceForTestingImplEv, i64 0, i64 0), i32 100) #8
  %10 = ptrtoint %"class.dawn_native::ErrorData"* %9 to i64
  %11 = bitcast %class.Result* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %17) #9
  br label %18

18:                                               ; preds = %2, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native11AdapterBaseD2Ev(%"class.dawn_native::AdapterBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native11AdapterBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 4
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.dawn_native::AdapterBase", %"class.dawn_native::AdapterBase"* %0, i64 0, i32 1, i32 2
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native11AdapterBaseD0Ev(%"class.dawn_native::AdapterBase"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare i32 @_ZN6detail14GetPayloadTypeEl(i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
