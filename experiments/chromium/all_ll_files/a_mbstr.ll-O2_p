; ModuleID = '../../third_party/boringssl/src/crypto/asn1/a_mbstr.c'
source_filename = "../../third_party/boringssl/src/crypto/asn1/a_mbstr.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cbs_st = type { i8*, i64 }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }

@.str = private unnamed_addr constant [54 x i8] c"../../third_party/boringssl/src/crypto/asn1/a_mbstr.c\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"minsize=\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"maxsize=\00", align 1
@switch.table.ASN1_mbstring_ncopy = private unnamed_addr constant [5 x i32 (%struct.cbs_st*, i32*)*] [i32 (%struct.cbs_st*, i32*)* @cbs_get_utf8, i32 (%struct.cbs_st*, i32*)* @cbs_get_latin1, i32 (%struct.cbs_st*, i32*)* @cbs_get_ucs2_be, i32 (%struct.cbs_st*, i32*)* @cbs_get_ucs2_be, i32 (%struct.cbs_st*, i32*)* @cbs_get_utf32_be], align 8
@switch.table.ASN1_mbstring_ncopy.5 = private unnamed_addr constant [5 x i32] [i32 150, i32 68, i32 142, i32 142, i32 149], align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_mbstring_copy(%struct.asn1_string_st**, i8*, i32, i32, i64) local_unnamed_addr #0 {
  %6 = tail call i32 @ASN1_mbstring_ncopy(%struct.asn1_string_st** %0, i8* %1, i32 %2, i32 %3, i64 %4, i64 0, i64 0)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_mbstring_ncopy(%struct.asn1_string_st**, i8*, i32, i32, i64, i64, i64) local_unnamed_addr #0 {
  %8 = alloca [32 x i8], align 16
  %9 = alloca %struct.cbs_st, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.cbb_st, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #4
  %16 = icmp eq i32 %2, -1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 32, i1 false)
  br i1 %16, label %17, label %20

17:                                               ; preds = %7
  %18 = tail call i64 @strlen(i8* %1) #5
  %19 = trunc i64 %18 to i32
  br label %20

20:                                               ; preds = %17, %7
  %21 = phi i32 [ %19, %17 ], [ %2, %7 ]
  %22 = icmp eq i64 %4, 0
  %23 = select i1 %22, i64 10246, i64 %4
  %24 = add i32 %3, -4096
  %25 = icmp ult i32 %24, 5
  br i1 %25, label %27, label %26

26:                                               ; preds = %27, %20
  tail call void @ERR_put_error(i32 12, i32 0, i32 182, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 128) #4
  br label %234

27:                                               ; preds = %20
  %28 = trunc i32 %24 to i8
  %29 = lshr i8 23, %28
  %30 = and i8 %29, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %26, label %32

32:                                               ; preds = %27
  %33 = sext i32 %24 to i64
  %34 = getelementptr inbounds [5 x i32 (%struct.cbs_st*, i32*)*], [5 x i32 (%struct.cbs_st*, i32*)*]* @switch.table.ASN1_mbstring_ncopy, i64 0, i64 %33
  %35 = load i32 (%struct.cbs_st*, i32*)*, i32 (%struct.cbs_st*, i32*)** %34, align 8
  %36 = sext i32 %24 to i64
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table.ASN1_mbstring_ncopy.5, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #4
  %40 = sext i32 %21 to i64
  %41 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  call void @CBS_init(%struct.cbs_st* nonnull %9, i8* %1, i64 %40) #4
  %42 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #4
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %117, label %44

44:                                               ; preds = %32
  %45 = bitcast i32* %10 to i8*
  %46 = icmp eq i32 %3, 4098
  %47 = icmp eq i32 %3, 4100
  %48 = or i1 %46, %47
  br label %49

49:                                               ; preds = %44, %111
  %50 = phi i64 [ 0, %44 ], [ %114, %111 ]
  %51 = phi i64 [ 0, %44 ], [ %112, %111 ]
  %52 = phi i64 [ %23, %44 ], [ %107, %111 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #4
  store i32 -1431655766, i32* %10, align 4
  %53 = call i32 %35(%struct.cbs_st* nonnull %9, i32* nonnull %10) #4, !callees !2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %49
  call void @ERR_put_error(i32 12, i32 0, i32 %38, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 139) #4
  br label %110

56:                                               ; preds = %49
  %57 = icmp eq i64 %51, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %56
  %59 = load i32, i32* %10, align 4
  %60 = icmp eq i32 %59, 65279
  %61 = and i1 %48, %60
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  call void @ERR_put_error(i32 12, i32 0, i32 126, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 151) #4
  br label %110

63:                                               ; preds = %58, %56
  %64 = and i64 %52, 2
  %65 = icmp eq i64 %64, 0
  %66 = load i32, i32* %10, align 4
  br i1 %65, label %88, label %67

67:                                               ; preds = %63
  %68 = icmp ugt i32 %66, 127
  br i1 %68, label %86, label %69

69:                                               ; preds = %67
  %70 = and i32 %66, -33
  %71 = add nsw i32 %70, -65
  %72 = icmp ult i32 %71, 26
  %73 = add nsw i32 %66, -48
  %74 = icmp ult i32 %73, 10
  %75 = or i1 %74, %72
  %76 = icmp eq i32 %66, 32
  %77 = or i1 %76, %75
  br i1 %77, label %88, label %78

78:                                               ; preds = %69
  %79 = and i32 %66, 255
  %80 = zext i32 %79 to i64
  %81 = icmp ugt i32 %79, 63
  %82 = shl i64 1, %80
  %83 = and i64 %82, -6629022124314984447
  %84 = icmp eq i64 %83, 0
  %85 = or i1 %81, %84
  br i1 %85, label %86, label %88

86:                                               ; preds = %67, %78
  %87 = and i64 %52, -3
  br label %88

88:                                               ; preds = %63, %69, %86, %78
  %89 = phi i64 [ %87, %86 ], [ %52, %78 ], [ %52, %69 ], [ %52, %63 ]
  %90 = and i64 %89, 16
  %91 = icmp ne i64 %90, 0
  %92 = icmp ugt i32 %66, 127
  %93 = and i1 %91, %92
  %94 = and i64 %89, -17
  %95 = select i1 %93, i64 %94, i64 %89
  %96 = and i64 %95, 4
  %97 = icmp ne i64 %96, 0
  %98 = icmp ugt i32 %66, 255
  %99 = and i1 %98, %97
  %100 = and i64 %95, -5
  %101 = select i1 %99, i64 %100, i64 %95
  %102 = and i64 %101, 2048
  %103 = icmp ne i64 %102, 0
  %104 = icmp ugt i32 %66, 65535
  %105 = and i1 %104, %103
  %106 = and i64 %101, -2049
  %107 = select i1 %105, i64 %106, i64 %101
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %88
  call void @ERR_put_error(i32 12, i32 0, i32 126, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 169) #4
  br label %110

110:                                              ; preds = %62, %109, %55
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #4
  br label %232

111:                                              ; preds = %88
  %112 = add i64 %51, 1
  %113 = call i64 @cbb_get_utf8_len(i32 %66) #4
  %114 = add i64 %113, %50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #4
  %115 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %49

117:                                              ; preds = %111, %32
  %118 = phi i64 [ %23, %32 ], [ %107, %111 ]
  %119 = phi i64 [ 0, %32 ], [ %112, %111 ]
  %120 = phi i64 [ 0, %32 ], [ %114, %111 ]
  %121 = icmp sgt i64 %5, 0
  %122 = icmp ult i64 %119, %5
  %123 = and i1 %121, %122
  br i1 %123, label %124, label %126

124:                                              ; preds = %117
  call void @ERR_put_error(i32 12, i32 0, i32 174, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 178) #4
  %125 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %15, i64 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 %5) #4
  call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* nonnull %15) #4
  br label %232

126:                                              ; preds = %117
  %127 = icmp sgt i64 %6, 0
  %128 = icmp ugt i64 %119, %6
  %129 = and i1 %127, %128
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  call void @ERR_put_error(i32 12, i32 0, i32 173, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 185) #4
  %131 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %15, i64 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 %6) #4
  call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %15) #4
  br label %232

132:                                              ; preds = %126
  %133 = and i64 %118, 2
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %154

135:                                              ; preds = %132
  %136 = and i64 %118, 16
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %154

138:                                              ; preds = %135
  %139 = and i64 %118, 4
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %154

141:                                              ; preds = %138
  %142 = and i64 %118, 2048
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %141
  %145 = shl i64 %119, 1
  br label %154

146:                                              ; preds = %141
  %147 = and i64 %118, 256
  %148 = icmp eq i64 %147, 0
  %149 = shl i64 %119, 2
  %150 = select i1 %148, i32 12, i32 28
  %151 = select i1 %148, i32 (%struct.cbb_st*, i32)* @cbb_add_utf8, i32 (%struct.cbb_st*, i32)* @cbb_add_utf32_be
  %152 = select i1 %148, i64 %120, i64 %149
  %153 = select i1 %148, i32 4096, i32 4100
  br label %154

154:                                              ; preds = %146, %138, %135, %132, %144
  %155 = phi i32 [ 30, %144 ], [ 19, %132 ], [ 22, %135 ], [ 20, %138 ], [ %150, %146 ]
  %156 = phi i32 (%struct.cbb_st*, i32)* [ @cbb_add_ucs2_be, %144 ], [ @cbb_add_latin1, %132 ], [ @cbb_add_latin1, %135 ], [ @cbb_add_latin1, %138 ], [ %151, %146 ]
  %157 = phi i64 [ %145, %144 ], [ %119, %132 ], [ %119, %135 ], [ %119, %138 ], [ %152, %146 ]
  %158 = phi i32 [ 4098, %144 ], [ 4097, %132 ], [ 4097, %135 ], [ 4097, %138 ], [ %153, %146 ]
  %159 = icmp eq %struct.asn1_string_st** %0, null
  br i1 %159, label %232, label %160

160:                                              ; preds = %154
  %161 = load %struct.asn1_string_st*, %struct.asn1_string_st** %0, align 8
  %162 = icmp eq %struct.asn1_string_st* %161, null
  br i1 %162, label %171, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %161, i64 0, i32 2
  %165 = load i8*, i8** %164, align 8
  %166 = icmp eq i8* %165, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %161, i64 0, i32 0
  store i32 0, i32* %168, align 8
  call void @OPENSSL_free(i8* nonnull %165) #4
  store i8* null, i8** %164, align 8
  br label %169

169:                                              ; preds = %163, %167
  %170 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %161, i64 0, i32 1
  store i32 %155, i32* %170, align 4
  br label %176

171:                                              ; preds = %160
  %172 = call %struct.asn1_string_st* @ASN1_STRING_type_new(i32 %155) #4
  %173 = icmp eq %struct.asn1_string_st* %172, null
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 233) #4
  br label %232

175:                                              ; preds = %171
  store %struct.asn1_string_st* %172, %struct.asn1_string_st** %0, align 8
  br label %176

176:                                              ; preds = %175, %169
  %177 = phi i8 [ 0, %169 ], [ 1, %175 ]
  %178 = phi %struct.asn1_string_st* [ %161, %169 ], [ %172, %175 ]
  %179 = icmp eq i32 %158, %3
  br i1 %179, label %180, label %184

180:                                              ; preds = %176
  %181 = call i32 @ASN1_STRING_set(%struct.asn1_string_st* nonnull %178, i8* %1, i32 %21) #4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %232

183:                                              ; preds = %180
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 242) #4
  br label %232

184:                                              ; preds = %176
  %185 = bitcast %struct.cbb_st* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %185) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 -86, i64 32, i1 false)
  %186 = add i64 %157, 1
  %187 = call i32 @CBB_init(%struct.cbb_st* nonnull %11, i64 %186) #4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %184
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 250) #4
  br label %226

190:                                              ; preds = %184
  call void @CBS_init(%struct.cbs_st* nonnull %9, i8* %1, i64 %40) #4
  %191 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #4
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %206, label %193

193:                                              ; preds = %190
  %194 = bitcast i32* %12 to i8*
  br label %195

195:                                              ; preds = %193, %203
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %194) #4
  store i32 -1431655766, i32* %12, align 4
  %196 = call i32 %35(%struct.cbs_st* nonnull %9, i32* nonnull %12) #4, !callees !2
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %202, label %198

198:                                              ; preds = %195
  %199 = load i32, i32* %12, align 4
  %200 = call i32 %156(%struct.cbb_st* nonnull %11, i32 %199) #4, !callees !3
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %195, %198
  call void @ERR_put_error(i32 12, i32 0, i32 68, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 258) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %194) #4
  br label %226

203:                                              ; preds = %198
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %194) #4
  %204 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #4
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %195

206:                                              ; preds = %203, %190
  store i8* null, i8** %13, align 8
  store i64 -6148914691236517206, i64* %14, align 8
  %207 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %11, i8 zeroext 0) #4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %216, label %209

209:                                              ; preds = %206
  %210 = call i32 @CBB_finish(%struct.cbb_st* nonnull %11, i8** nonnull %13, i64* nonnull %14) #4
  %211 = icmp eq i32 %210, 0
  %212 = load i64, i64* %14, align 8
  %213 = add i64 %212, -1
  %214 = icmp ugt i64 %213, 2147483646
  %215 = or i1 %211, %214
  br i1 %215, label %216, label %218

216:                                              ; preds = %206, %209
  call void @ERR_put_error(i32 12, i32 0, i32 68, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 270) #4
  %217 = load i8*, i8** %13, align 8
  call void @OPENSSL_free(i8* %217) #4
  br label %226

218:                                              ; preds = %209
  %219 = trunc i64 %212 to i32
  %220 = add nsw i32 %219, -1
  %221 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %178, i64 0, i32 0
  store i32 %220, i32* %221, align 8
  %222 = bitcast i8** %13 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %178, i64 0, i32 2
  %225 = bitcast i8** %224 to i64*
  store i64 %223, i64* %225, align 8
  br label %230

226:                                              ; preds = %202, %216, %189
  %227 = icmp eq i8 %177, 0
  br i1 %227, label %229, label %228

228:                                              ; preds = %226
  call void @ASN1_STRING_free(%struct.asn1_string_st* %178) #4
  br label %229

229:                                              ; preds = %226, %228
  call void @CBB_cleanup(%struct.cbb_st* nonnull %11) #4
  br label %230

230:                                              ; preds = %229, %218
  %231 = phi i32 [ -1, %229 ], [ %155, %218 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %185) #4
  br label %232

232:                                              ; preds = %110, %174, %183, %230, %154, %180, %130, %124
  %233 = phi i32 [ -1, %124 ], [ -1, %130 ], [ -1, %183 ], [ %231, %230 ], [ -1, %174 ], [ %155, %154 ], [ %155, %180 ], [ -1, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #4
  br label %234

234:                                              ; preds = %232, %26
  %235 = phi i32 [ -1, %26 ], [ %233, %232 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #4
  ret i32 %235
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

declare i32 @cbs_get_ucs2_be(%struct.cbs_st*, i32*) local_unnamed_addr #3

declare i32 @cbs_get_utf32_be(%struct.cbs_st*, i32*) local_unnamed_addr #3

declare i32 @cbs_get_utf8(%struct.cbs_st*, i32*) local_unnamed_addr #3

declare i32 @cbs_get_latin1(%struct.cbs_st*, i32*) local_unnamed_addr #3

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #3

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #3

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #3

declare i64 @cbb_get_utf8_len(i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @BIO_snprintf(i8*, i64, i8*, ...) local_unnamed_addr #3

declare void @ERR_add_error_data(i32, ...) local_unnamed_addr #3

declare i32 @cbb_add_latin1(%struct.cbb_st*, i32) local_unnamed_addr #3

declare i32 @cbb_add_ucs2_be(%struct.cbb_st*, i32) local_unnamed_addr #3

declare i32 @cbb_add_utf32_be(%struct.cbb_st*, i32) local_unnamed_addr #3

declare i32 @cbb_add_utf8(%struct.cbb_st*, i32) local_unnamed_addr #3

declare void @OPENSSL_free(i8*) local_unnamed_addr #3

declare %struct.asn1_string_st* @ASN1_STRING_type_new(i32) local_unnamed_addr #3

declare i32 @ASN1_STRING_set(%struct.asn1_string_st*, i8*, i32) local_unnamed_addr #3

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #3

declare i32 @CBB_add_u8(%struct.cbb_st*, i8 zeroext) local_unnamed_addr #3

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #3

declare void @ASN1_STRING_free(%struct.asn1_string_st*) local_unnamed_addr #3

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 (%struct.cbs_st*, i32*)* @cbs_get_latin1, i32 (%struct.cbs_st*, i32*)* @cbs_get_ucs2_be, i32 (%struct.cbs_st*, i32*)* @cbs_get_utf32_be, i32 (%struct.cbs_st*, i32*)* @cbs_get_utf8}
!3 = !{i32 (%struct.cbb_st*, i32)* @cbb_add_latin1, i32 (%struct.cbb_st*, i32)* @cbb_add_ucs2_be, i32 (%struct.cbb_st*, i32)* @cbb_add_utf32_be, i32 (%struct.cbb_st*, i32)* @cbb_add_utf8}
