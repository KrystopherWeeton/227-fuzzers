; ModuleID = '../../extensions/common/api/messaging/port_id.cc'
source_filename = "../../extensions/common/api/messaging/port_id.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.extensions::PortId" = type <{ %"class.base::UnguessableToken", i32, i8, [3 x i8] }>
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }

@_ZN10extensions6PortIdC1Ev = hidden unnamed_addr alias void (%"struct.extensions::PortId"*), void (%"struct.extensions::PortId"*)* @_ZN10extensions6PortIdC2Ev
@_ZN10extensions6PortIdC1ERKN4base16UnguessableTokenEib = hidden unnamed_addr alias void (%"struct.extensions::PortId"*, %"class.base::UnguessableToken"*, i32, i1), void (%"struct.extensions::PortId"*, %"class.base::UnguessableToken"*, i32, i1)* @_ZN10extensions6PortIdC2ERKN4base16UnguessableTokenEib
@_ZN10extensions6PortIdD1Ev = hidden unnamed_addr alias void (%"struct.extensions::PortId"*), void (%"struct.extensions::PortId"*)* @_ZN10extensions6PortIdD2Ev
@_ZN10extensions6PortIdC1EOS0_ = hidden unnamed_addr alias void (%"struct.extensions::PortId"*, %"struct.extensions::PortId"*), void (%"struct.extensions::PortId"*, %"struct.extensions::PortId"*)* @_ZN10extensions6PortIdC2EOS0_
@_ZN10extensions6PortIdC1ERKS0_ = hidden unnamed_addr alias void (%"struct.extensions::PortId"*, %"struct.extensions::PortId"*), void (%"struct.extensions::PortId"*, %"struct.extensions::PortId"*)* @_ZN10extensions6PortIdC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions6PortIdC2Ev(%"struct.extensions::PortId"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.extensions::PortId"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 21, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions6PortIdC2ERKN4base16UnguessableTokenEib(%"struct.extensions::PortId"* nocapture, %"class.base::UnguessableToken"* nocapture readonly dereferenceable(16), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = bitcast %"struct.extensions::PortId"* %0 to i8*
  %7 = bitcast %"class.base::UnguessableToken"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false)
  %8 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %0, i64 0, i32 2
  store i8 %5, i8* %9, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions6PortIdD2Ev(%"struct.extensions::PortId"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions6PortIdC2EOS0_(%"struct.extensions::PortId"* nocapture, %"struct.extensions::PortId"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.extensions::PortId"* %0 to i8*
  %4 = bitcast %"struct.extensions::PortId"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 21, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions6PortIdC2ERKS0_(%"struct.extensions::PortId"* nocapture, %"struct.extensions::PortId"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.extensions::PortId"* %0 to i8*
  %4 = bitcast %"struct.extensions::PortId"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 21, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"struct.extensions::PortId"* @_ZN10extensions6PortIdaSERKS0_(%"struct.extensions::PortId"* returned, %"struct.extensions::PortId"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.extensions::PortId"* %0 to i8*
  %4 = bitcast %"struct.extensions::PortId"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 21, i1 false)
  ret %"struct.extensions::PortId"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions6PortIdeqERKS0_(%"struct.extensions::PortId"* nocapture readonly, %"struct.extensions::PortId"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %0, i64 0, i32 2
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %1, i64 0, i32 2
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %22, %24
  br label %26

26:                                               ; preds = %2, %20, %14, %8
  %27 = phi i1 [ false, %14 ], [ false, %8 ], [ %25, %20 ], [ false, %2 ]
  ret i1 %27
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions6PortIdltERKS0_(%"struct.extensions::PortId"*, %"struct.extensions::PortId"* dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %1, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.extensions::PortId", %"struct.extensions::PortId"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %7, align 8
  %12 = load i64, i64* %9, align 8
  %13 = icmp ult i64 %11, %12
  br i1 %13, label %32, label %14

14:                                               ; preds = %2
  %15 = icmp ult i64 %12, %11
  br i1 %15, label %32, label %16

16:                                               ; preds = %14
  %17 = load i64, i64* %8, align 8
  %18 = load i64, i64* %10, align 8
  %19 = icmp ult i64 %17, %18
  br i1 %19, label %32, label %20

20:                                               ; preds = %16
  %21 = icmp ult i64 %18, %17
  br i1 %21, label %32, label %22

22:                                               ; preds = %20
  %23 = load i32, i32* %3, align 4
  %24 = load i32, i32* %5, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %32, label %26

26:                                               ; preds = %22
  %27 = icmp slt i32 %24, %23
  br i1 %27, label %32, label %28

28:                                               ; preds = %26
  %29 = load i8, i8* %4, align 1, !range !2
  %30 = load i8, i8* %6, align 1, !range !2
  %31 = icmp ult i8 %29, %30
  br label %32

32:                                               ; preds = %2, %14, %16, %20, %22, %26, %28
  %33 = phi i1 [ true, %16 ], [ false, %20 ], [ %31, %28 ], [ true, %22 ], [ false, %26 ], [ true, %2 ], [ false, %14 ]
  ret i1 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
