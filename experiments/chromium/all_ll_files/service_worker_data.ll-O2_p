; ModuleID = '../../extensions/renderer/service_worker_data.cc'
source_filename = "../../extensions/renderer/service_worker_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ServiceWorkerData" = type { i64, %"class.base::StrongAlias", %"class.extensions::ScriptContext"*, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.19" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.extensions::V8SchemaRegistry"* }
%"class.extensions::V8SchemaRegistry" = type { %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.v8::StdGlobalValueMap"* }
%"class.v8::StdGlobalValueMap" = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.7" }
%"class.v8::Isolate" = type { i8 }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.extensions::NativeExtensionBindingsSystem"* }
%"class.extensions::ScriptContext" = type opaque
%"class.extensions::NativeExtensionBindingsSystem" = type { %"class.std::__1::unique_ptr.22", %"class.extensions::APIBindingsSystem", %"class.extensions::NativeRendererMessagingService", %"class.extensions::FeatureCache", %"class.v8::Eternal", %"class.base::WeakPtrFactory.246" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.extensions::IPCMessageSender"* }
%"class.extensions::IPCMessageSender" = type opaque
%"class.extensions::APIBindingsSystem" = type { %"class.extensions::APITypeReferenceMap", %"class.extensions::ExceptionHandler", %"class.std::__1::unique_ptr.45", %"class.extensions::APIRequestHandler", %"class.extensions::APIEventHandler", %"class.extensions::BindingAccessChecker", %"class.std::__1::map.188", %"class.std::__1::map.197", %"class.std::__1::map.206", %"class.base::RepeatingCallback.215", %"class.base::RepeatingCallback.216" }
%"class.extensions::APITypeReferenceMap" = type { %"class.base::RepeatingCallback", %"class.std::__1::map", %"class.std::__1::map.35", %"class.std::__1::map.35", %"class.std::__1::map.35", %"class.std::__1::map.35" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i64 }
%"class.std::__1::map.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.extensions::ExceptionHandler" = type { %"class.base::RepeatingCallback.44" }
%"class.base::RepeatingCallback.44" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.extensions::InteractionProvider"* }
%"class.extensions::InteractionProvider" = type { i32 (...)** }
%"class.extensions::APIRequestHandler" = type { i32, i32, %"class.std::__1::map.51", %"class.base::RepeatingCallback.62", %"class.extensions::APILastError", %"class.extensions::ExceptionHandler"*, %"class.std::__1::unique_ptr.64", %"class.extensions::InteractionProvider"* }
%"class.std::__1::map.51" = type { %"class.std::__1::__tree.52" }
%"class.std::__1::__tree.52" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.base::RepeatingCallback.62" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.extensions::APILastError" = type { %"class.base::RepeatingCallback.63", %"class.base::RepeatingCallback.44" }
%"class.base::RepeatingCallback.63" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.extensions::APIResponseValidator"* }
%"class.extensions::APIResponseValidator" = type opaque
%"class.extensions::APIEventHandler" = type { %"class.base::RepeatingCallback.70", %"class.base::RepeatingCallback.71", %"class.extensions::ListenerTracker", %"class.extensions::ExceptionHandler"* }
%"class.base::RepeatingCallback.70" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.71" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.extensions::ListenerTracker" = type { %"class.std::__1::map.72", %"class.std::__1::map.81", %"class.extensions::EventFilter" }
%"class.std::__1::map.72" = type { %"class.std::__1::__tree.73" }
%"class.std::__1::__tree.73" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::map.81" = type { %"class.std::__1::__tree.82" }
%"class.std::__1::__tree.82" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.extensions::EventFilter" = type { %"class.url_matcher::URLMatcher", %"class.std::__1::map.159", i32, i32, %"class.std::__1::map.168", %"class.std::__1::map.177" }
%"class.url_matcher::URLMatcher" = type { %"class.url_matcher::URLMatcherConditionFactory", %"class.std::__1::map.101", %"class.std::__1::map.110", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.119", %"class.url_matcher::RegexSetMatcher", %"class.url_matcher::RegexSetMatcher" }
%"class.url_matcher::URLMatcherConditionFactory" = type { i32, %"class.std::__1::map.92", %"class.std::__1::map.92", %"class.std::__1::map.92" }
%"class.std::__1::map.92" = type { %"class.std::__1::__tree.93" }
%"class.std::__1::__tree.93" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::map.101" = type { %"class.std::__1::__tree.102" }
%"class.std::__1::__tree.102" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::map.110" = type { %"class.std::__1::__tree.111" }
%"class.std::__1::__tree.111" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.url_matcher::SubstringSetMatcher"* }
%"class.url_matcher::SubstringSetMatcher" = type <{ %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.std::__1::__compressed_pair.129" }
%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode" = type <{ %"class.base::flat_map", i32, i32, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.122" }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.124" }
%"struct.std::__1::pair" = type { i8, i32 }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* }
%"class.url_matcher::RegexSetMatcher" = type { i32 (...)**, %"class.std::__1::map.137", %"class.std::__1::vector.146", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.119" }
%"class.std::__1::map.137" = type { %"class.std::__1::__tree.138" }
%"class.std::__1::__tree.138" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.139", %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { i32*, i32*, %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { i32* }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.re2::FilteredRE2"* }
%"class.re2::FilteredRE2" = type opaque
%"class.std::__1::map.159" = type { %"class.std::__1::__tree.160" }
%"class.std::__1::__tree.160" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.161", %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::map.168" = type { %"class.std::__1::__tree.169" }
%"class.std::__1::__tree.169" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::map.177" = type { %"class.std::__1::__tree.178" }
%"class.std::__1::__tree.178" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.extensions::BindingAccessChecker" = type { %"class.base::RepeatingCallback.186", %"class.base::RepeatingCallback.187" }
%"class.base::RepeatingCallback.186" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.187" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.188" = type { %"class.std::__1::__tree.189" }
%"class.std::__1::__tree.189" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::map.197" = type { %"class.std::__1::__tree.198" }
%"class.std::__1::__tree.198" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::map.206" = type { %"class.std::__1::__tree.207" }
%"class.std::__1::__tree.207" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.208", %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.base::RepeatingCallback.215" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.216" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.extensions::NativeRendererMessagingService" = type { %"class.extensions::GinPort::Delegate", %"class.extensions::NativeExtensionBindingsSystem"*, %"class.extensions::OneTimeMessageHandler" }
%"class.extensions::GinPort::Delegate" = type { i32 (...)** }
%"class.extensions::OneTimeMessageHandler" = type { %"class.extensions::NativeExtensionBindingsSystem"*, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.217 }
%class.scoped_refptr.217 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.218", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.218" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.219" }
%"struct.std::__1::atomic.219" = type { %"struct.std::__1::__atomic_base.220" }
%"struct.std::__1::__atomic_base.220" = type { %"struct.std::__1::__atomic_base.221" }
%"struct.std::__1::__atomic_base.221" = type { %"struct.std::__1::__cxx_atomic_impl.222" }
%"struct.std::__1::__cxx_atomic_impl.222" = type { %"struct.std::__1::__cxx_atomic_base_impl.223" }
%"struct.std::__1::__cxx_atomic_base_impl.223" = type { i8 }
%"class.extensions::FeatureCache" = type { %"class.std::__1::map.224", %"class.std::__1::map.235" }
%"class.std::__1::map.224" = type { %"class.std::__1::__tree.225" }
%"class.std::__1::__tree.225" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.226", %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::map.235" = type { %"class.std::__1::__tree.236" }
%"class.std::__1::__tree.236" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.v8::Eternal" = type { %"class.v8::FunctionTemplate"* }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.base::WeakPtrFactory.246" = type { %"class.base::internal::WeakPtrFactoryBase" }

@_ZN10extensions17ServiceWorkerDataC1ElN4base11StrongAliasINS_21ActivationSequenceTagEiEEPNS_13ScriptContextENSt3__110unique_ptrINS_29NativeExtensionBindingsSystemENS7_14default_deleteIS9_EEEE = hidden unnamed_addr alias void (%"class.extensions::ServiceWorkerData"*, i64, i32, %"class.extensions::ScriptContext"*, %"class.extensions::NativeExtensionBindingsSystem"*), void (%"class.extensions::ServiceWorkerData"*, i64, i32, %"class.extensions::ScriptContext"*, %"class.extensions::NativeExtensionBindingsSystem"*)* @_ZN10extensions17ServiceWorkerDataC2ElN4base11StrongAliasINS_21ActivationSequenceTagEiEEPNS_13ScriptContextENSt3__110unique_ptrINS_29NativeExtensionBindingsSystemENS7_14default_deleteIS9_EEEE
@_ZN10extensions17ServiceWorkerDataD1Ev = hidden unnamed_addr alias void (%"class.extensions::ServiceWorkerData"*), void (%"class.extensions::ServiceWorkerData"*)* @_ZN10extensions17ServiceWorkerDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17ServiceWorkerDataC2ElN4base11StrongAliasINS_21ActivationSequenceTagEiEEPNS_13ScriptContextENSt3__110unique_ptrINS_29NativeExtensionBindingsSystemENS7_14default_deleteIS9_EEEE(%"class.extensions::ServiceWorkerData"* nocapture, i64, i32, %"class.extensions::ScriptContext"*, %"class.extensions::NativeExtensionBindingsSystem"*) unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.extensions::NativeExtensionBindingsSystem"* %4 to i64
  %7 = getelementptr inbounds %"class.extensions::ServiceWorkerData", %"class.extensions::ServiceWorkerData"* %0, i64 0, i32 0
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.extensions::ServiceWorkerData", %"class.extensions::ServiceWorkerData"* %0, i64 0, i32 1, i32 0
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.extensions::ServiceWorkerData", %"class.extensions::ServiceWorkerData"* %0, i64 0, i32 2
  store %"class.extensions::ScriptContext"* %3, %"class.extensions::ScriptContext"** %9, align 8
  %10 = getelementptr inbounds %"class.extensions::ServiceWorkerData", %"class.extensions::ServiceWorkerData"* %0, i64 0, i32 3
  %11 = tail call i8* @_Znwm(i64 16) #5
  %12 = bitcast i8* %11 to %"class.extensions::V8SchemaRegistry"*
  tail call void @_ZN10extensions16V8SchemaRegistryC1Ev(%"class.extensions::V8SchemaRegistry"* nonnull %12) #6
  %13 = ptrtoint i8* %11 to i64
  %14 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.extensions::ServiceWorkerData", %"class.extensions::ServiceWorkerData"* %0, i64 0, i32 4
  %16 = bitcast %"class.std::__1::unique_ptr.19"* %15 to i64*
  store i64 %6, i64* %16, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN10extensions16V8SchemaRegistryC1Ev(%"class.extensions::V8SchemaRegistry"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17ServiceWorkerDataD2Ev(%"class.extensions::ServiceWorkerData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ServiceWorkerData", %"class.extensions::ServiceWorkerData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.extensions::NativeExtensionBindingsSystem"*, %"class.extensions::NativeExtensionBindingsSystem"** %2, align 8
  store %"class.extensions::NativeExtensionBindingsSystem"* null, %"class.extensions::NativeExtensionBindingsSystem"** %2, align 8
  %4 = icmp eq %"class.extensions::NativeExtensionBindingsSystem"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN10extensions29NativeExtensionBindingsSystemD1Ev(%"class.extensions::NativeExtensionBindingsSystem"* nonnull %3) #6
  %6 = bitcast %"class.extensions::NativeExtensionBindingsSystem"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #5
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.extensions::ServiceWorkerData", %"class.extensions::ServiceWorkerData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.extensions::V8SchemaRegistry"*, %"class.extensions::V8SchemaRegistry"** %8, align 8
  store %"class.extensions::V8SchemaRegistry"* null, %"class.extensions::V8SchemaRegistry"** %8, align 8
  %10 = icmp eq %"class.extensions::V8SchemaRegistry"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN10extensions16V8SchemaRegistryD1Ev(%"class.extensions::V8SchemaRegistry"* nonnull %9) #6
  %12 = bitcast %"class.extensions::V8SchemaRegistry"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #5
  br label %13

13:                                               ; preds = %7, %11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10extensions29NativeExtensionBindingsSystemD1Ev(%"class.extensions::NativeExtensionBindingsSystem"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10extensions16V8SchemaRegistryD1Ev(%"class.extensions::V8SchemaRegistry"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
