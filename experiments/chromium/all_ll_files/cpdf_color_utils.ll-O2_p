; ModuleID = '../../third_party/pdfium/core/fpdfdoc/cpdf_color_utils.cpp'
source_filename = "../../third_party/pdfium/core/fpdfdoc/cpdf_color_utils.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.CFX_Color = type { i32, float, float, float, float }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"*, %"class.std::__1::__compressed_pair.1" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.fxcrt::RetainPtr"* }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.4" }
%"class.fxcrt::RetainPtr.4" = type { %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.19", %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.35", [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { float }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.10" }
%"class.fxcrt::RetainPtr.10" = type { %"class.std::__1::unique_ptr.11" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CPDF_DefaultAppearance = type { %"class.fxcrt::ByteString" }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %struct.CFX_Color }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fpdfdoc17CFXColorFromArrayERK10CPDF_Array(%struct.CFX_Color* noalias nocapture sret, %class.CPDF_Array* dereferenceable(64)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 1
  %5 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 2
  %6 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 3
  %7 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 4
  %8 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %1, i64 0, i32 1
  %9 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %1, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %"class.fxcrt::RetainPtr"** %9 to i64*
  %11 = bitcast %struct.CFX_Color* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 20, i1 false)
  %12 = load i64, i64* %10, align 8
  %13 = bitcast %"class.std::__1::vector"* %8 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  switch i64 %16, label %34 [
    i64 1, label %17
    i64 3, label %19
    i64 4, label %23
  ]

17:                                               ; preds = %2
  %18 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* %1, i64 0) #4
  br label %28

19:                                               ; preds = %2
  %20 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* %1, i64 0) #4
  %21 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* %1, i64 1) #4
  %22 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* %1, i64 2) #4
  br label %28

23:                                               ; preds = %2
  %24 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* %1, i64 0) #4
  %25 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* %1, i64 1) #4
  %26 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* %1, i64 2) #4
  %27 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* %1, i64 3) #4
  br label %28

28:                                               ; preds = %17, %19, %23
  %29 = phi i32 [ 3, %23 ], [ 2, %19 ], [ 1, %17 ]
  %30 = phi float [ %24, %23 ], [ %20, %19 ], [ %18, %17 ]
  %31 = phi float [ %25, %23 ], [ %21, %19 ], [ 0.000000e+00, %17 ]
  %32 = phi float [ %26, %23 ], [ %22, %19 ], [ 0.000000e+00, %17 ]
  %33 = phi float [ %27, %23 ], [ 0.000000e+00, %19 ], [ 0.000000e+00, %17 ]
  store i32 %29, i32* %3, align 4
  store float %30, float* %4, align 4
  store float %31, float* %5, align 4
  store float %32, float* %6, align 4
  store float %33, float* %7, align 4
  br label %34

34:                                               ; preds = %28, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fpdfdoc18CFXColorFromStringERKN5fxcrt10ByteStringE(%struct.CFX_Color* noalias nocapture sret, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %class.CPDF_DefaultAppearance, align 8
  %4 = alloca %"class.pdfium::Optional", align 4
  %5 = bitcast %class.CPDF_DefaultAppearance* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %class.CPDF_DefaultAppearance, %class.CPDF_DefaultAppearance* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %6, align 8
  call void @_ZN22CPDF_DefaultAppearanceC1ERKN5fxcrt10ByteStringE(%class.CPDF_DefaultAppearance* nonnull %3, %"class.fxcrt::ByteString"* dereferenceable(8) %1) #4
  %7 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #4
  call void @_ZNK22CPDF_DefaultAppearance8GetColorEv(%"class.pdfium::Optional"* nonnull sret %4, %class.CPDF_DefaultAppearance* nonnull %3) #4
  %8 = load i8, i8* %7, align 4, !range !2, !noalias !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %struct.CFX_Color* %0 to i8*
  %13 = bitcast %struct.CFX_Color* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 20, i1 false) #4
  br label %16

14:                                               ; preds = %2
  %15 = bitcast %struct.CFX_Color* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 20, i1 false)
  br label %16

16:                                               ; preds = %10, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #4
  call void @_ZN22CPDF_DefaultAppearanceD1Ev(%class.CPDF_DefaultAppearance* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  ret void
}

declare void @_ZN22CPDF_DefaultAppearanceC1ERKN5fxcrt10ByteStringE(%class.CPDF_DefaultAppearance*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #2

declare void @_ZNK22CPDF_DefaultAppearance8GetColorEv(%"class.pdfium::Optional"* sret, %class.CPDF_DefaultAppearance*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN22CPDF_DefaultAppearanceD1Ev(%class.CPDF_DefaultAppearance*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNO6pdfium8OptionalI9CFX_ColorE8value_orIS1_EES1_OT_: argument 0"}
!5 = distinct !{!5, !"_ZNO6pdfium8OptionalI9CFX_ColorE8value_orIS1_EES1_OT_"}
