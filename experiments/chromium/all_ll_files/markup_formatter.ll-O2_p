; ModuleID = '../../third_party/blink/renderer/core/editing/serializers/markup_formatter.cc'
source_filename = "../../third_party/blink/renderer/core/editing/serializers/markup_formatter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::InstanceStorage" }
%"class.WTF::StaticSingleton<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::InstanceStorage" = type { [24 x i8] }
%"struct.blink::EntityDescription" = type <{ i16, [6 x i8], %"class.std::__1::basic_string"*, i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.45 }
%class.scoped_refptr.45 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::MarkupFormatter" = type { i32, i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.46" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.39", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.41" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.62", %"class.blink::Member.64", %"class.blink::Member.39", %"class.blink::Member.66", %"class.blink::Member.66", %"class.blink::Member.85", %"class.blink::Member.87", %"class.blink::Member.89", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.94", %"class.blink::HeapVector.96" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.143", %"class.WTF::Vector.143", i8, i32, %"class.blink::Member.154", %"class.blink::Member.156", %"class.blink::Member.158", %"class.blink::Member.160", %"class.blink::Member.162", %"class.blink::Member.164", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.169", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.175", %"class.blink::Member.177", %"class.blink::Member.102", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.180", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.77", %"class.blink::Member.392", %"class.blink::Member.77", %"class.blink::Member.77", %"class.blink::Member.77", %"class.blink::UserActionElementSet", %"class.blink::Member.401", double, double, i64, i64, %"class.blink::HeapHashSet.403", %"class.blink::HeapHashSet.410", i16, i8, %"class.blink::Member.417", %"class.blink::Member.419", %"class.blink::Member.421", %"class.blink::Member.423", %"class.blink::TextLinkColors", %"class.blink::Member.425", i8, [7 x i8], %"class.blink::HeapHashMap.427", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.77", %"class.WTF::Vector.434", %"class.blink::Member.439", %"class.blink::Member.441", i8, %"class.blink::Member.77", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.443", %"class.blink::HeapVector.445", %"class.std::__1::unique_ptr.453", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.459", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.472", %"class.WTF::Vector.474", i8, i8, %"class.std::__1::unique_ptr.479", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.485", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.493", i8, i32, %"class.blink::Member.495", %"class.blink::Member.497", %"class.blink::Member.499", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.501", %"class.WTF::HashMap.503", %"class.blink::Member.508", %"class.blink::Member.510", %"class.blink::Member.512", %"class.blink::Member.514", %"class.blink::Member.64", %"class.blink::Member.64", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.516", i8, i32, %"class.blink::Member.523", %"class.blink::Member.525", i32, %"class.blink::Member.527", %"class.blink::Member.529", %"class.blink::Member.531", %"class.std::__1::unique_ptr.533", i64, %"class.std::__1::unique_ptr.539", i32, i32, %"class.blink::Member.545", %"class.blink::Member.547", %"class.blink::Member.549", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.551", %"class.WTF::Vector.553", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.558", %"class.blink::Member.565", %"class.std::__1::unique_ptr.567", %"class.blink::Member.573", i8, i8, %"class.WTF::String", %"class.blink::Member.575", i8, [7 x i8], %"class.blink::HeapHashMap.577", %"class.blink::HeapObserverSet", %"class.blink::Member.591", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.593", i32, i8, i8, %"class.blink::WeakMember.595", %"class.blink::Member.596" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.136" }
%"class.blink::HeapHashMap.136" = type { %"class.WTF::HashMap.139" }
%"class.WTF::HashMap.139" = type { %"class.WTF::HashTable.140" }
%"class.WTF::HashTable.140" = type <{ %"struct.WTF::KeyValuePair.142"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.142" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.143" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.146 }
%class.scoped_refptr.146 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.147" }
%"struct.std::__1::atomic.147" = type { %"struct.std::__1::__atomic_base.148" }
%"struct.std::__1::__atomic_base.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__cxx_atomic_impl.150" }
%"struct.std::__1::__cxx_atomic_impl.150" = type { %"struct.std::__1::__cxx_atomic_base_impl.151" }
%"struct.std::__1::__cxx_atomic_base_impl.151" = type { i32 }
%"class.blink::Member.154" = type { %"class.blink::MemberBase.155" }
%"class.blink::MemberBase.155" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.156" = type { %"class.blink::MemberBase.157" }
%"class.blink::MemberBase.157" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.614", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.677", i32, i8, [3 x i8], %"class.blink::HeapVector.679", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.687", %"class.blink::Member.689", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.698", %"class.blink::Member.704", %"class.blink::Member.706", i8, [7 x i8] }>
%"class.blink::Supplementable.614" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.615" }
%"class.blink::HeapHashMap.615" = type { %"class.WTF::HashMap.618" }
%"class.WTF::HashMap.618" = type { %"class.WTF::HashTable.619" }
%"class.WTF::HashTable.619" = type <{ %"struct.WTF::KeyValuePair.621"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.621" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.630" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.622" }
%"class.blink::HeapObserverSet.622" = type { i32, [4 x i8], %"class.blink::HeapHashSet.623" }
%"class.blink::HeapHashSet.623" = type { %"class.WTF::HashSet.626" }
%"class.WTF::HashSet.626" = type { %"class.WTF::HashTable.627" }
%"class.WTF::HashTable.627" = type <{ %"class.blink::WeakMember.629"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.629" = type opaque
%"class.blink::Supplementable.630" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.631" }
%"class.blink::HeapHashMap.631" = type { %"class.WTF::HashMap.634" }
%"class.WTF::HashMap.634" = type { %"class.WTF::HashTable.635" }
%"class.WTF::HashTable.635" = type <{ %"struct.WTF::KeyValuePair.637"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.637" = type { i8*, %"class.blink::Member.743" }
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.745" }
%"class.blink::Member.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.638, %"class.std::__1::unique_ptr.643", %"class.std::__1::unique_ptr.643", %"class.std::__1::unique_ptr.667", %"class.std::__1::unique_ptr.667", %"class.blink::Member.156", i32, [4 x i8], %"class.WTF::HashSet.673", i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.639", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.642 }
%"class.WTF::RefCounted.639" = type { %"class.base::RefCounted.640" }
%"class.base::RefCounted.640" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.641 }
%union.anon.641 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.642 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.654", %"class.std::__1::map.663"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { i64 }
%"class.std::__1::map.654" = type { %"class.std::__1::__tree.655" }
%"class.std::__1::__tree.655" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.656", %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"class.std::__1::map.663" = type opaque
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.673" = type { %"class.WTF::HashTable.674" }
%"class.WTF::HashTable.674" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.679" = type { %"class.WTF::Vector.682" }
%"class.WTF::Vector.682" = type { %"class.WTF::VectorBuffer.683" }
%"class.WTF::VectorBuffer.683" = type { %"class.WTF::VectorBufferBase.684" }
%"class.WTF::VectorBufferBase.684" = type { %"class.blink::Member.685"*, i32, i32 }
%"class.blink::Member.685" = type opaque
%"class.blink::Member.687" = type { %"class.blink::MemberBase.688" }
%"class.blink::MemberBase.688" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.691", i32, i32 }
%"class.blink::HeapHashMap.691" = type { %"class.WTF::HashMap.694" }
%"class.WTF::HashMap.694" = type { %"class.WTF::HashTable.695" }
%"class.WTF::HashTable.695" = type <{ %"struct.WTF::KeyValuePair.697"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.697" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.704" = type { %"class.blink::MemberBase.705" }
%"class.blink::MemberBase.705" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.158" = type { %"class.blink::MemberBase.159" }
%"class.blink::MemberBase.159" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.160" = type { %"class.blink::MemberBase.161" }
%"class.blink::MemberBase.161" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.162" = type { %"class.blink::MemberBase.163" }
%"class.blink::MemberBase.163" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.164" = type { %"class.blink::MemberBase.165" }
%"class.blink::MemberBase.165" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::KURL"* }
%"class.blink::Member.175" = type { %"class.blink::MemberBase.176" }
%"class.blink::MemberBase.176" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type { %"class.blink::Node", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.177" = type { %"class.blink::MemberBase.178" }
%"class.blink::MemberBase.178" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.104", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.106, %"class.WTF::Vector.107", %"class.WTF::Vector.107", %"class.blink::Member", %"class.blink::Member.112", %"class.blink::HeapHashSet", %"class.blink::Member.64", %"class.WTF::HashSet.120", %"class.WTF::TextPosition", %"class.blink::Member.124", %"class.blink::HeapVector.126", %"class.blink::Member.133" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.106 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.107" = type { %"class.WTF::VectorBuffer.108" }
%"class.WTF::VectorBuffer.108" = type { %"class.WTF::VectorBufferBase.109" }
%"class.WTF::VectorBufferBase.109" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.114" }
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.118" }
%"class.WTF::HashTable.118" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.40" }
%"class.WTF::HashSet.120" = type { %"class.WTF::HashTable.121" }
%"class.WTF::HashTable.121" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.126" = type { %"class.WTF::Vector.129" }
%"class.WTF::Vector.129" = type { %"class.WTF::VectorBuffer.130" }
%"class.WTF::VectorBuffer.130" = type { %"class.WTF::VectorBufferBase.131" }
%"class.WTF::VectorBufferBase.131" = type { %"class.blink::Member.112"*, i32, i32 }
%"class.blink::Member.133" = type { %"class.blink::MemberBase.134" }
%"class.blink::MemberBase.134" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.179 }
%class.scoped_refptr.179 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.180" = type { %"class.WTF::VectorBuffer.181" }
%"class.WTF::VectorBuffer.181" = type { %"class.WTF::VectorBufferBase.182" }
%"class.WTF::VectorBufferBase.182" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.184", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.184" = type { %"class.base::RefCounted.185" }
%"class.base::RefCounted.185" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.188" }
%"class.blink::HeapHashMap.188" = type { %"class.WTF::HashMap.191" }
%"class.WTF::HashMap.191" = type { %"class.WTF::HashTable.192" }
%"class.WTF::HashTable.192" = type <{ %"struct.WTF::KeyValuePair.194"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.194" = type { %"class.blink::WeakMember.195", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.195" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.197", i32, [4 x i8], %"class.std::__1::unique_ptr.335", %"class.std::__1::unique_ptr.335", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.351", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.369", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.376", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.315", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.233" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.233" = type { %"struct.std::__1::__atomic_base.234" }
%"struct.std::__1::__atomic_base.234" = type { %"struct.std::__1::__atomic_base.235" }
%"struct.std::__1::__atomic_base.235" = type { %"struct.std::__1::__cxx_atomic_impl.236" }
%"struct.std::__1::__cxx_atomic_impl.236" = type { %"struct.std::__1::__cxx_atomic_base_impl.237" }
%"struct.std::__1::__cxx_atomic_base_impl.237" = type { i64 }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::Worklist.244"* }
%"class.blink::Worklist.244" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.233" }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::Worklist.251"* }
%"class.blink::Worklist.251" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.233" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::Worklist.258"* }
%"class.blink::Worklist.258" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.233" }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::Worklist.265"* }
%"class.blink::Worklist.265" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.233" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::Worklist.272"* }
%"class.blink::Worklist.272" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.233" }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::Worklist.279"* }
%"class.blink::Worklist.279" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.233" }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::Worklist.286"* }
%"class.blink::Worklist.286" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.233" }
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.293", %"class.std::__1::__compressed_pair.302", %"class.std::__1::__compressed_pair.307", %"class.std::__1::__compressed_pair.309", [4 x i8] }>
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295", %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { float }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.318", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.327" }
%"class.WTF::Vector.327" = type { %"class.WTF::VectorBuffer.328" }
%"class.WTF::VectorBuffer.328" = type { %"class.WTF::VectorBufferBase.329" }
%"class.WTF::VectorBufferBase.329" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.343" }
%"class.WTF::VectorBuffer.343" = type { %"class.WTF::VectorBufferBase.344" }
%"class.WTF::VectorBufferBase.344" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.357" }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.244"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.251"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.258"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.265"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.272"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.609" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.375 }
%class.scoped_refptr.375 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.376" = type { %"struct.std::__1::__atomic_base.377" }
%"struct.std::__1::__atomic_base.377" = type { %"struct.std::__1::__cxx_atomic_impl.378" }
%"struct.std::__1::__cxx_atomic_impl.378" = type { %"struct.std::__1::__cxx_atomic_base_impl.379" }
%"struct.std::__1::__cxx_atomic_base_impl.379" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.64", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.394" }
%"class.blink::HeapHashMap.394" = type { %"class.WTF::HashMap.397" }
%"class.WTF::HashMap.397" = type { %"class.WTF::HashTable.398" }
%"class.WTF::HashTable.398" = type <{ %"struct.WTF::KeyValuePair.400"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.400" = type opaque
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.403" = type { %"class.WTF::HashSet.406" }
%"class.WTF::HashSet.406" = type { %"class.WTF::HashTable.407" }
%"class.WTF::HashTable.407" = type <{ %"class.blink::WeakMember.409"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.409" = type opaque
%"class.blink::HeapHashSet.410" = type { %"class.WTF::HashSet.413" }
%"class.WTF::HashSet.413" = type { %"class.WTF::HashTable.414" }
%"class.WTF::HashTable.414" = type <{ %"class.blink::WeakMember.416"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.416" = type opaque
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.39", %"class.blink::HeapVector.96" }
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.427" = type { %"class.WTF::HashMap.430" }
%"class.WTF::HashMap.430" = type { %"class.WTF::HashTable.431" }
%"class.WTF::HashTable.431" = type <{ %"struct.WTF::KeyValuePair.433"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.433" = type opaque
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.445" = type { %"class.WTF::Vector.448" }
%"class.WTF::Vector.448" = type { %"class.WTF::VectorBuffer.449" }
%"class.WTF::VectorBuffer.449" = type { %"class.WTF::VectorBufferBase.450" }
%"class.WTF::VectorBufferBase.450" = type { %"class.blink::Member.451"*, i32, i32 }
%"class.blink::Member.451" = type opaque
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.459" = type { %"class.WTF::HashSet.462" }
%"class.WTF::HashSet.462" = type { %"class.WTF::HashTable.463" }
%"class.WTF::HashTable.463" = type <{ %"class.blink::WeakMember.465"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.465" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.466", i32, [4 x i8] }>
%"class.WTF::Vector.466" = type { %"class.WTF::VectorBuffer.467" }
%"class.WTF::VectorBuffer.467" = type { %"class.WTF::VectorBufferBase.468" }
%"class.WTF::VectorBufferBase.468" = type { %"struct.std::__1::pair.469"*, i32, i32 }
%"struct.std::__1::pair.469" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.474" = type { %"class.WTF::VectorBuffer.475" }
%"class.WTF::VectorBuffer.475" = type { %"class.WTF::VectorBufferBase.476" }
%"class.WTF::VectorBufferBase.476" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.81" }
%"class.WTF::Vector.81" = type { %"class.WTF::VectorBuffer.82" }
%"class.WTF::VectorBuffer.82" = type { %"class.WTF::VectorBufferBase.83" }
%"class.WTF::VectorBufferBase.83" = type { %"class.blink::Member.77"*, i32, i32 }
%"class.blink::HeapVector.485" = type { %"class.WTF::Vector.488" }
%"class.WTF::Vector.488" = type { %"class.WTF::VectorBuffer.489" }
%"class.WTF::VectorBuffer.489" = type { %"class.WTF::VectorBufferBase.490" }
%"class.WTF::VectorBufferBase.490" = type { %"class.blink::Member.491"*, i32, i32 }
%"class.blink::Member.491" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.64" }
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.503" = type { %"class.WTF::HashTable.504" }
%"class.WTF::HashTable.504" = type <{ %"struct.WTF::KeyValuePair.507"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.507" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.391", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.382, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.382 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.383" }>
%"class.base::RefCountedThreadSafe.383" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.384 }
%class.scoped_refptr.384 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.385", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.385" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.386" }
%"struct.std::__1::atomic.386" = type { %"struct.std::__1::__atomic_base.387" }
%"struct.std::__1::__atomic_base.387" = type { %"struct.std::__1::__atomic_base.388" }
%"struct.std::__1::__atomic_base.388" = type { %"struct.std::__1::__cxx_atomic_impl.389" }
%"struct.std::__1::__cxx_atomic_impl.389" = type { %"struct.std::__1::__cxx_atomic_base_impl.390" }
%"struct.std::__1::__cxx_atomic_base_impl.390" = type { i8 }
%"class.blink::WeakMember.391" = type { %"class.blink::MemberBase.65" }
%"class.blink::HeapHashSet.516" = type { %"class.WTF::HashSet.519" }
%"class.WTF::HashSet.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"class.blink::Member.522"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.522" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.553" = type { %"class.WTF::VectorBuffer.554" }
%"class.WTF::VectorBuffer.554" = type { %"class.WTF::VectorBufferBase.555" }
%"class.WTF::VectorBufferBase.555" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.558" = type { %"class.WTF::HashMap.561" }
%"class.WTF::HashMap.561" = type { %"class.WTF::HashTable.562" }
%"class.WTF::HashTable.562" = type <{ %"struct.WTF::KeyValuePair.564"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.564" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.577" = type { %"class.WTF::HashMap.580" }
%"class.WTF::HashMap.580" = type { %"class.WTF::HashTable.581" }
%"class.WTF::HashTable.581" = type <{ %"struct.WTF::KeyValuePair.583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.583" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.584" }
%"class.blink::HeapHashSet.584" = type { %"class.WTF::HashSet.587" }
%"class.WTF::HashSet.587" = type { %"class.WTF::HashTable.588" }
%"class.WTF::HashTable.588" = type <{ %"class.blink::WeakMember.590"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.590" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.64", %"class.blink::HeapHashSet.600", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.607", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.600" = type { %"class.WTF::HashSet.603" }
%"class.WTF::HashSet.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"class.blink::Member.606"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.606" = type opaque
%"class.blink::HeapTaskRunnerTimer.607" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.608", { i64, i64 } }
%"class.blink::WeakMember.608" = type { %"class.blink::MemberBase.594" }
%"class.blink::WeakMember.595" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.73" }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.77", i32, %"class.blink::HeapVector" }
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.87" = type { %"class.blink::MemberBase.88" }
%"class.blink::MemberBase.88" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.89" = type { %"class.blink::MemberBase.90" }
%"class.blink::MemberBase.90" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.91" }
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::HeapHashMap.93"* }
%"class.blink::HeapHashMap.93" = type opaque
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.96" = type { %"class.WTF::Vector.99" }
%"class.WTF::Vector.99" = type { %"class.WTF::VectorBuffer.100" }
%"class.WTF::VectorBuffer.100" = type { %"class.WTF::VectorBufferBase.101" }
%"class.WTF::VectorBufferBase.101" = type { %"class.blink::Member.102"*, i32, i32 }
%"class.blink::Member.41" = type { %"class.blink::MemberBase.42" }
%"class.blink::MemberBase.42" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.50", %"class.blink::Member.52", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.50" = type { %"class.WTF::SingleThreadedBitField.51" }
%"class.WTF::SingleThreadedBitField.51" = type { i32 }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.55", %"class.WTF::AtomicString", %"class.WTF::Vector.57" }
%"class.WTF::RefCounted.55" = type { %"class.base::RefCounted.56" }
%"class.base::RefCounted.56" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59", [32 x i8] }
%"class.WTF::VectorBufferBase.59" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.708 }
%class.scoped_refptr.708 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.709", %"class.WTF::String", %"class.std::__1::unique_ptr.711" }
%"class.WTF::RefCounted.709" = type { %"class.base::RefCounted.710" }
%"class.base::RefCounted.710" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.714", %"class.std::__1::unique_ptr.724", %"class.WTF::Vector.730", i8, i32 }
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.WTF::Vector.717"* }
%"class.WTF::Vector.717" = type { %"class.WTF::VectorBuffer.718" }
%"class.WTF::VectorBuffer.718" = type { %"class.WTF::VectorBufferBase" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.730" = type { %"class.WTF::VectorBuffer.731" }
%"class.WTF::VectorBuffer.731" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3", [16 x i8] }
%"class.WTF::VectorBufferBase.3" = type { i16*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink13QualifiedName9SetPrefixERKN3WTF12AtomicStringE = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

@_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_amp_reference = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_amp_reference = internal global i64 0, align 8
@_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_lt_reference = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_lt_reference = internal global i64 0, align 8
@_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_gt_reference = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_gt_reference = internal global i64 0, align 8
@_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_quot_reference = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_quot_reference = internal global i64 0, align 8
@_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_nbsp_reference = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_nbsp_reference = internal global i64 0, align 8
@_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_tab_reference = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_tab_reference = internal global i64 0, align 8
@_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE21s_line_feed_reference = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE21s_line_feed_reference = internal global i64 0, align 8
@_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE27s_carriage_return_reference = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE27s_carriage_return_reference = internal global i64 0, align 8
@_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps = internal global [8 x %"struct.blink::EntityDescription"] zeroinitializer, align 16
@_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps = internal global i64 0, align 8
@.str = private unnamed_addr constant [3 x i8] c"</\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"=\22\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"<!--\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"-->\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"<?xml version=\22\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"\22 encoding=\22\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"\22 standalone=\22\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"\22?>\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"<!DOCTYPE \00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c" PUBLIC \22\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c" \22\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c" SYSTEM \22\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"<?\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"?>\00", align 1
@_ZN5blink11xmlns_names13kNamespaceURIE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF12g_xmlns_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink9xml_names13kNamespaceURIE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10g_xml_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11xlink_names13kNamespaceURIE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF12g_xlink_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.17 = private unnamed_addr constant [10 x i8] c"<![CDATA[\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"]]>\00", align 1
@_ZN5blink10html_names12kNoscriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kXmpTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kIFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names13kPlaintextTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kNoembedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kNoframesTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.19 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.20 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.22 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.23 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"&amp;\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"&quot;\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"&nbsp;\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"&#10;\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"&#13;\00", align 1

@_ZN5blink15MarkupFormatterC1ENS_12AbsoluteURLsENS_17SerializationTypeE = hidden unnamed_addr alias void (%"class.blink::MarkupFormatter"*, i32, i32), void (%"class.blink::MarkupFormatter"*, i32, i32)* @_ZN5blink15MarkupFormatterC2ENS_12AbsoluteURLsENS_17SerializationTypeE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskE(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_amp_reference to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_amp_reference) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  store i8 5, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_amp_reference, i64 0, i32 0, i32 0, i64 23), align 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_amp_reference, i64 0, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i64 5, i1 false) #10
  store i8 0, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_amp_reference, i64 0, i32 0, i32 0, i64 5), align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_amp_reference) #10
  br label %10

10:                                               ; preds = %6, %9, %3
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_lt_reference to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_lt_reference) #10
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store i8 4, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_lt_reference, i64 0, i32 0, i32 0, i64 23), align 1
  store i32 997485606, i32* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_lt_reference to i32*), align 8
  store i8 0, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_lt_reference, i64 0, i32 0, i32 0, i64 4), align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_lt_reference) #10
  br label %17

17:                                               ; preds = %13, %16, %10
  %18 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_gt_reference to i8*) acquire, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %24, !prof !2

20:                                               ; preds = %17
  %21 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_gt_reference) #10
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  store i8 4, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_gt_reference, i64 0, i32 0, i32 0, i64 23), align 1
  store i32 997484326, i32* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_gt_reference to i32*), align 8
  store i8 0, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_gt_reference, i64 0, i32 0, i32 0, i64 4), align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_gt_reference) #10
  br label %24

24:                                               ; preds = %20, %23, %17
  %25 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_quot_reference to i8*) acquire, align 8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %31, !prof !2

27:                                               ; preds = %24
  %28 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_quot_reference) #10
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  store i8 6, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_quot_reference, i64 0, i32 0, i32 0, i64 23), align 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_quot_reference, i64 0, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i64 6, i1 false) #10
  store i8 0, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_quot_reference, i64 0, i32 0, i32 0, i64 6), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_quot_reference) #10
  br label %31

31:                                               ; preds = %27, %30, %24
  %32 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_nbsp_reference to i8*) acquire, align 8
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %38, !prof !2

34:                                               ; preds = %31
  %35 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_nbsp_reference) #10
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %34
  store i8 6, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_nbsp_reference, i64 0, i32 0, i32 0, i64 23), align 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_nbsp_reference, i64 0, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0), i64 6, i1 false) #10
  store i8 0, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_nbsp_reference, i64 0, i32 0, i32 0, i64 6), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_nbsp_reference) #10
  br label %38

38:                                               ; preds = %34, %37, %31
  %39 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_tab_reference to i8*) acquire, align 8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %45, !prof !2

41:                                               ; preds = %38
  %42 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_tab_reference) #10
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  store i8 4, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_tab_reference, i64 0, i32 0, i32 0, i64 23), align 1
  store i32 993600294, i32* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_tab_reference to i32*), align 8
  store i8 0, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_tab_reference, i64 0, i32 0, i32 0, i64 4), align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_tab_reference) #10
  br label %45

45:                                               ; preds = %41, %44, %38
  %46 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE21s_line_feed_reference to i8*) acquire, align 8
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %52, !prof !2

48:                                               ; preds = %45
  %49 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE21s_line_feed_reference) #10
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %48
  store i8 5, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE21s_line_feed_reference, i64 0, i32 0, i32 0, i64 23), align 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE21s_line_feed_reference, i64 0, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0), i64 5, i1 false) #10
  store i8 0, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE21s_line_feed_reference, i64 0, i32 0, i32 0, i64 5), align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE21s_line_feed_reference) #10
  br label %52

52:                                               ; preds = %48, %51, %45
  %53 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE27s_carriage_return_reference to i8*) acquire, align 8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %59, !prof !2

55:                                               ; preds = %52
  %56 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE27s_carriage_return_reference) #10
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  store i8 5, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE27s_carriage_return_reference, i64 0, i32 0, i32 0, i64 23), align 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE27s_carriage_return_reference, i64 0, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), i64 5, i1 false) #10
  store i8 0, i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE27s_carriage_return_reference, i64 0, i32 0, i32 0, i64 5), align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE27s_carriage_return_reference) #10
  br label %59

59:                                               ; preds = %55, %58, %52
  %60 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps to i8*) acquire, align 8
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %67, !prof !2

62:                                               ; preds = %59
  %63 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps) #10
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  store i16 38, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 0, i32 0), align 16
  store %"class.std::__1::basic_string"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_amp_reference to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"** getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 0, i32 2), align 8
  store i32 1, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 0, i32 3), align 16
  store i16 60, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 1, i32 0), align 8
  store %"class.std::__1::basic_string"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_lt_reference to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"** getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 1, i32 2), align 8
  store i32 2, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 1, i32 3), align 8
  store i16 62, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 2, i32 0), align 16
  store %"class.std::__1::basic_string"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE14s_gt_reference to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"** getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 2, i32 2), align 8
  store i32 4, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 2, i32 3), align 16
  store i16 34, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 3, i32 0), align 8
  store %"class.std::__1::basic_string"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_quot_reference to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"** getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 3, i32 2), align 8
  store i32 8, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 3, i32 3), align 8
  store i16 160, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 4, i32 0), align 16
  store %"class.std::__1::basic_string"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE16s_nbsp_reference to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"** getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 4, i32 2), align 8
  store i32 16, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 4, i32 3), align 16
  store i16 9, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 5, i32 0), align 8
  store %"class.std::__1::basic_string"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE15s_tab_reference to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"** getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 5, i32 2), align 8
  store i32 32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 5, i32 3), align 8
  store i16 10, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 6, i32 0), align 16
  store %"class.std::__1::basic_string"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE21s_line_feed_reference to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"** getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 6, i32 2), align 8
  store i32 64, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 6, i32 3), align 16
  store i16 13, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 7, i32 0), align 8
  store %"class.std::__1::basic_string"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE27s_carriage_return_reference to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"** getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 7, i32 2), align 8
  store i32 128, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 7, i32 3), align 8
  %66 = tail call {}* @llvm.invariant.start.p0i8(i64 192, i8* bitcast ([8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps) #10
  br label %67

67:                                               ; preds = %62, %65, %59
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  br i1 %73, label %189, label %75

75:                                               ; preds = %67
  %76 = load i8*, i8** %74, align 8
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %2, 0
  %80 = icmp eq i32 %78, 0
  %81 = or i1 %79, %80
  br i1 %81, label %132, label %82

82:                                               ; preds = %75
  %83 = zext i32 %78 to i64
  br label %84

84:                                               ; preds = %126, %82
  %85 = phi i64 [ 0, %82 ], [ %128, %126 ]
  %86 = phi i32 [ 0, %82 ], [ %127, %126 ]
  %87 = getelementptr inbounds i8, i8* %76, i64 %85
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 0, i32 0), align 16
  %91 = zext i16 %90 to i32
  %92 = icmp eq i32 %89, %91
  br i1 %92, label %93, label %122

93:                                               ; preds = %84
  %94 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 0, i32 3), align 16
  %95 = and i32 %94, %2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %122, label %97

97:                                               ; preds = %185, %177, %169, %161, %153, %145, %137, %93
  %98 = phi i64 [ 0, %93 ], [ 1, %137 ], [ 2, %145 ], [ 3, %153 ], [ 4, %161 ], [ 5, %169 ], [ 6, %177 ], [ 7, %185 ]
  %99 = zext i32 %86 to i64
  %100 = getelementptr inbounds i8, i8* %76, i64 %99
  %101 = trunc i64 %85 to i32
  %102 = sub i32 %101, %86
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %100, i32 %102) #10
  %103 = getelementptr inbounds [8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 %98, i32 2
  %104 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %103, align 8
  %105 = bitcast %"class.std::__1::basic_string"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %114

109:                                              ; preds = %97
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  br label %117

114:                                              ; preds = %97
  %115 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  %116 = zext i8 %107 to i64
  br label %117

117:                                              ; preds = %114, %109
  %118 = phi i8* [ %111, %109 ], [ %115, %114 ]
  %119 = phi i64 [ %113, %109 ], [ %116, %114 ]
  %120 = trunc i64 %119 to i32
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %118, i32 %120) #10
  %121 = add i32 %101, 1
  br label %126

122:                                              ; preds = %93, %84
  %123 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 1, i32 0), align 8
  %124 = zext i16 %123 to i32
  %125 = icmp eq i32 %89, %124
  br i1 %125, label %137, label %141

126:                                              ; preds = %185, %181, %117
  %127 = phi i32 [ %121, %117 ], [ %86, %185 ], [ %86, %181 ]
  %128 = add nuw nsw i64 %85, 1
  %129 = icmp eq i64 %128, %83
  br i1 %129, label %130, label %84

130:                                              ; preds = %126
  %131 = icmp eq i32 %127, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %130, %75
  tail call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* dereferenceable(24) %1) #10
  br label %295

133:                                              ; preds = %130
  %134 = zext i32 %127 to i64
  %135 = getelementptr inbounds i8, i8* %76, i64 %134
  %136 = sub i32 %78, %127
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %135, i32 %136) #10
  br label %295

137:                                              ; preds = %122
  %138 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 1, i32 3), align 8
  %139 = and i32 %138, %2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %97

141:                                              ; preds = %137, %122
  %142 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 2, i32 0), align 16
  %143 = zext i16 %142 to i32
  %144 = icmp eq i32 %89, %143
  br i1 %144, label %145, label %149

145:                                              ; preds = %141
  %146 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 2, i32 3), align 16
  %147 = and i32 %146, %2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %97

149:                                              ; preds = %145, %141
  %150 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 3, i32 0), align 8
  %151 = zext i16 %150 to i32
  %152 = icmp eq i32 %89, %151
  br i1 %152, label %153, label %157

153:                                              ; preds = %149
  %154 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 3, i32 3), align 8
  %155 = and i32 %154, %2
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %97

157:                                              ; preds = %153, %149
  %158 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 4, i32 0), align 16
  %159 = zext i16 %158 to i32
  %160 = icmp eq i32 %89, %159
  br i1 %160, label %161, label %165

161:                                              ; preds = %157
  %162 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 4, i32 3), align 16
  %163 = and i32 %162, %2
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %97

165:                                              ; preds = %161, %157
  %166 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 5, i32 0), align 8
  %167 = zext i16 %166 to i32
  %168 = icmp eq i32 %89, %167
  br i1 %168, label %169, label %173

169:                                              ; preds = %165
  %170 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 5, i32 3), align 8
  %171 = and i32 %170, %2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %97

173:                                              ; preds = %169, %165
  %174 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 6, i32 0), align 16
  %175 = zext i16 %174 to i32
  %176 = icmp eq i32 %89, %175
  br i1 %176, label %177, label %181

177:                                              ; preds = %173
  %178 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 6, i32 3), align 16
  %179 = and i32 %178, %2
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %97

181:                                              ; preds = %177, %173
  %182 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 7, i32 0), align 8
  %183 = zext i16 %182 to i32
  %184 = icmp eq i32 %89, %183
  br i1 %184, label %185, label %126

185:                                              ; preds = %181
  %186 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 7, i32 3), align 8
  %187 = and i32 %186, %2
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %126, label %97

189:                                              ; preds = %67
  %190 = bitcast i8** %74 to i16**
  %191 = load i16*, i16** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %193 = load i32, i32* %192, align 8
  %194 = icmp eq i32 %2, 0
  %195 = icmp eq i32 %193, 0
  %196 = or i1 %194, %195
  br i1 %196, label %244, label %197

197:                                              ; preds = %189
  %198 = zext i32 %193 to i64
  br label %199

199:                                              ; preds = %238, %197
  %200 = phi i64 [ 0, %197 ], [ %240, %238 ]
  %201 = phi i32 [ 0, %197 ], [ %239, %238 ]
  %202 = getelementptr inbounds i16, i16* %191, i64 %200
  %203 = load i16, i16* %202, align 2
  %204 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 0, i32 0), align 16
  %205 = icmp eq i16 %203, %204
  br i1 %205, label %206, label %235

206:                                              ; preds = %199
  %207 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 0, i32 3), align 16
  %208 = and i32 %207, %2
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %235, label %210

210:                                              ; preds = %291, %284, %277, %270, %263, %256, %249, %206
  %211 = phi i64 [ 0, %206 ], [ 1, %249 ], [ 2, %256 ], [ 3, %263 ], [ 4, %270 ], [ 5, %277 ], [ 6, %284 ], [ 7, %291 ]
  %212 = zext i32 %201 to i64
  %213 = getelementptr inbounds i16, i16* %191, i64 %212
  %214 = trunc i64 %200 to i32
  %215 = sub i32 %214, %201
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %213, i32 %215) #10
  %216 = getelementptr inbounds [8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 %211, i32 2
  %217 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %216, align 8
  %218 = bitcast %"class.std::__1::basic_string"* %217 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %219 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %218, i64 0, i32 1, i32 0
  %220 = load i8, i8* %219, align 1
  %221 = icmp slt i8 %220, 0
  br i1 %221, label %222, label %227

222:                                              ; preds = %210
  %223 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %217, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %217, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %226 = load i64, i64* %225, align 8
  br label %230

227:                                              ; preds = %210
  %228 = bitcast %"class.std::__1::basic_string"* %217 to i8*
  %229 = zext i8 %220 to i64
  br label %230

230:                                              ; preds = %227, %222
  %231 = phi i8* [ %224, %222 ], [ %228, %227 ]
  %232 = phi i64 [ %226, %222 ], [ %229, %227 ]
  %233 = trunc i64 %232 to i32
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %231, i32 %233) #10
  %234 = add i32 %214, 1
  br label %238

235:                                              ; preds = %206, %199
  %236 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 1, i32 0), align 8
  %237 = icmp eq i16 %203, %236
  br i1 %237, label %249, label %253

238:                                              ; preds = %291, %288, %230
  %239 = phi i32 [ %234, %230 ], [ %201, %291 ], [ %201, %288 ]
  %240 = add nuw nsw i64 %200, 1
  %241 = icmp eq i64 %240, %198
  br i1 %241, label %242, label %199

242:                                              ; preds = %238
  %243 = icmp eq i32 %239, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %242, %189
  tail call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* dereferenceable(24) %1) #10
  br label %295

245:                                              ; preds = %242
  %246 = zext i32 %239 to i64
  %247 = getelementptr inbounds i16, i16* %191, i64 %246
  %248 = sub i32 %193, %239
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %247, i32 %248) #10
  br label %295

249:                                              ; preds = %235
  %250 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 1, i32 3), align 8
  %251 = and i32 %250, %2
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %210

253:                                              ; preds = %249, %235
  %254 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 2, i32 0), align 16
  %255 = icmp eq i16 %203, %254
  br i1 %255, label %256, label %260

256:                                              ; preds = %253
  %257 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 2, i32 3), align 16
  %258 = and i32 %257, %2
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %210

260:                                              ; preds = %256, %253
  %261 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 3, i32 0), align 8
  %262 = icmp eq i16 %203, %261
  br i1 %262, label %263, label %267

263:                                              ; preds = %260
  %264 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 3, i32 3), align 8
  %265 = and i32 %264, %2
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %210

267:                                              ; preds = %263, %260
  %268 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 4, i32 0), align 16
  %269 = icmp eq i16 %203, %268
  br i1 %269, label %270, label %274

270:                                              ; preds = %267
  %271 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 4, i32 3), align 16
  %272 = and i32 %271, %2
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %210

274:                                              ; preds = %270, %267
  %275 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 5, i32 0), align 8
  %276 = icmp eq i16 %203, %275
  br i1 %276, label %277, label %281

277:                                              ; preds = %274
  %278 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 5, i32 3), align 8
  %279 = and i32 %278, %2
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %210

281:                                              ; preds = %277, %274
  %282 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 6, i32 0), align 16
  %283 = icmp eq i16 %203, %282
  br i1 %283, label %284, label %288

284:                                              ; preds = %281
  %285 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 6, i32 3), align 16
  %286 = and i32 %285, %2
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %210

288:                                              ; preds = %284, %281
  %289 = load i16, i16* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 7, i32 0), align 8
  %290 = icmp eq i16 %203, %289
  br i1 %290, label %291, label %238

291:                                              ; preds = %288
  %292 = load i32, i32* getelementptr inbounds ([8 x %"struct.blink::EntityDescription"], [8 x %"struct.blink::EntityDescription"]* @_ZZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskEE11kEntityMaps, i64 0, i64 7, i32 3), align 8
  %293 = and i32 %292, %2
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %238, label %210

295:                                              ; preds = %132, %133, %244, %245
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink15MarkupFormatterC2ENS_12AbsoluteURLsENS_17SerializationTypeE(%"class.blink::MarkupFormatter"* nocapture, i32, i32) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::MarkupFormatter", %"class.blink::MarkupFormatter"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::MarkupFormatter", %"class.blink::MarkupFormatter"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15MarkupFormatter18ResolveURLIfNeededERKNS_7ElementERKNS_9AttributeE(%"class.blink::MarkupFormatter"* nocapture readonly, %"class.blink::Element"* dereferenceable(104), %"class.blink::Attribute"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %8, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #10
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #10
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.blink::MarkupFormatter", %"class.blink::MarkupFormatter"* %0, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  switch i32 %31, label %102 [
    i32 1, label %32
    i32 2, label %64
  ]

32:                                               ; preds = %29
  %33 = bitcast %"class.blink::Element"* %1 to i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)***
  %34 = load i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)**, i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)*, i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)** %34, i64 93
  %36 = load i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)*, i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::Element"* %1, %"class.blink::Attribute"* dereferenceable(16) %2) #10
  br i1 %37, label %38, label %102

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %5, %"class.blink::Document"* %43, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %44 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 4, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %105, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %105

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #10
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %52
  call void @llvm.trap() #10
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %105

64:                                               ; preds = %29
  %65 = bitcast %"class.blink::Element"* %1 to i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)***
  %66 = load i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)**, i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)*** %65, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)*, i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)** %66, i64 93
  %68 = load i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)*, i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.blink::Element"* %1, %"class.blink::Attribute"* dereferenceable(16) %2) #10
  br i1 %69, label %70, label %102

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %72 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %72, i64 0, i32 2, i32 0, i32 0
  %74 = load %"class.blink::Document"*, %"class.blink::Document"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %74, i64 0, i32 19
  %76 = tail call zeroext i1 @_ZNK5blink4KURL11IsLocalFileEv(%"class.blink::KURL"* %75) #10
  br i1 %76, label %102, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %78) #10
  %79 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %71, align 8
  %80 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %79, i64 0, i32 2, i32 0, i32 0
  %81 = load %"class.blink::Document"*, %"class.blink::Document"** %80, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %6, %"class.blink::Document"* %81, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %82 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 4, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %105, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %105

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i33
  %94 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #10
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !3

99:                                               ; preds = %90
  call void @llvm.trap() #10
  unreachable

100:                                              ; preds = %90
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %91, align 4
  br label %105

102:                                              ; preds = %29, %32, %70, %64
  %103 = bitcast %"class.WTF::String"* %4 to i64*
  %104 = load i64, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  br label %125

105:                                              ; preds = %100, %85, %77, %62, %47, %38
  %106 = phi %"class.blink::KURL"* [ %5, %38 ], [ %5, %47 ], [ %5, %62 ], [ %6, %77 ], [ %6, %85 ], [ %6, %100 ]
  %107 = phi i8* [ %39, %38 ], [ %39, %47 ], [ %39, %62 ], [ %78, %77 ], [ %78, %85 ], [ %78, %100 ]
  %108 = phi %"class.WTF::StringImpl"* [ %45, %38 ], [ %45, %47 ], [ %45, %62 ], [ %83, %77 ], [ %83, %85 ], [ %83, %100 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %106) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %107) #10
  %109 = ptrtoint %"class.WTF::StringImpl"* %108 to i64
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #10
  br label %125

125:                                              ; preds = %102, %105, %121, %124
  %126 = phi i64 [ %104, %102 ], [ %109, %105 ], [ %109, %121 ], [ %109, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %127 = inttoptr i64 %126 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %127
}

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #5

declare zeroext i1 @_ZNK5blink4KURL11IsLocalFileEv(%"class.blink::KURL"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter17AppendStartMarkupERN3WTF13StringBuilderERKNS_4NodeE(%"class.blink::MarkupFormatter"* nocapture readnone, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = bitcast %"class.blink::Node"* %2 to i32 (%"class.blink::Node"*)***
  %11 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %11, i64 30
  %13 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::Node"* %2) #10
  switch i32 %14, label %119 [
    i32 4, label %77
    i32 8, label %15
    i32 9, label %57
    i32 7, label %61
    i32 10, label %59
  ]

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %17 = bitcast %"class.blink::Node"* %16 to i8*
  %18 = load i8, i8* %17, align 8, !range !4
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1, i32 0, i32 0, i32 1
  %22 = bitcast %"class.blink::TraceWrapperV8Reference"* %21 to %"class.blink::ParkableString"*
  %23 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %22) #10
  br label %27

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1, i32 1
  %26 = bitcast i32* %25 to %"class.WTF::String"*
  br label %27

27:                                               ; preds = %20, %24
  %28 = phi %"class.WTF::String"* [ %23, %20 ], [ %26, %24 ]
  %29 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  %30 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %31 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 4, i32* %33, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  %34 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %39, align 8
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %41 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %40, i64* %41, align 8
  br label %49

42:                                               ; preds = %27
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 1
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %48 = bitcast i8** %47 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %48, align 8
  br label %49

49:                                               ; preds = %38, %42
  %50 = phi i32 [ %45, %42 ], [ 0, %38 ]
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %50, i32* %51, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #10
  %52 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #10
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %54 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 3, i32* %56, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #10
  br label %119

57:                                               ; preds = %3
  %58 = bitcast %"class.blink::Node"* %2 to %"class.blink::Document"*
  tail call void @_ZN5blink15MarkupFormatter20AppendXMLDeclarationERN3WTF13StringBuilderERKNS_8DocumentE(%"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.blink::Document"* dereferenceable(2848) %58)
  br label %119

59:                                               ; preds = %3
  %60 = bitcast %"class.blink::Node"* %2 to %"class.blink::DocumentType"*
  tail call void @_ZN5blink15MarkupFormatter18AppendDocumentTypeERN3WTF13StringBuilderERKNS_12DocumentTypeE(%"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.blink::DocumentType"* dereferenceable(88) %60)
  br label %119

61:                                               ; preds = %3
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1, i32 6
  %63 = bitcast %"class.blink::Member.41"* %62 to %"class.WTF::String"*
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %65 = bitcast %"class.blink::Node"* %64 to i8*
  %66 = load i8, i8* %65, align 8, !range !4
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1, i32 0, i32 0, i32 1
  %70 = bitcast %"class.blink::TraceWrapperV8Reference"* %69 to %"class.blink::ParkableString"*
  %71 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %70) #10
  br label %75

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1, i32 1
  %74 = bitcast i32* %73 to %"class.WTF::String"*
  br label %75

75:                                               ; preds = %68, %72
  %76 = phi %"class.WTF::String"* [ %71, %68 ], [ %74, %72 ]
  tail call void @_ZN5blink15MarkupFormatter27AppendProcessingInstructionERN3WTF13StringBuilderERKNS1_6StringES6_(%"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.WTF::String"* dereferenceable(8) %63, %"class.WTF::String"* dereferenceable(8) %76)
  br label %119

77:                                               ; preds = %3
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %79 = bitcast %"class.blink::Node"* %78 to i8*
  %80 = load i8, i8* %79, align 8, !range !4
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1, i32 0, i32 0, i32 1
  %84 = bitcast %"class.blink::TraceWrapperV8Reference"* %83 to %"class.blink::ParkableString"*
  %85 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %84) #10
  br label %89

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1, i32 1
  %88 = bitcast i32* %87 to %"class.WTF::String"*
  br label %89

89:                                               ; preds = %82, %86
  %90 = phi %"class.WTF::String"* [ %85, %82 ], [ %88, %86 ]
  %91 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #10
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %93 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), i8** %94, align 8
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 9, i32* %95, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #10
  %96 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #10
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %100, label %104

100:                                              ; preds = %89
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %101, align 8
  %102 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %103 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %102, i64* %103, align 8
  br label %111

104:                                              ; preds = %89
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 1
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %110 = bitcast i8** %109 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %110, align 8
  br label %111

111:                                              ; preds = %100, %104
  %112 = phi i32 [ %107, %104 ], [ 0, %100 ]
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %112, i32* %113, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #10
  %114 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #10
  %115 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %116 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i8** %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 3, i32* %118, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #10
  br label %119

119:                                              ; preds = %3, %111, %75, %59, %57, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter13AppendCommentERN3WTF13StringBuilderERKNS1_6StringE(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %8 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %10, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  %11 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %16, align 8
  %17 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %18 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %17, i64* %18, align 8
  br label %26

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %25, align 8
  br label %26

26:                                               ; preds = %15, %19
  %27 = phi i32 [ %22, %19 ], [ 0, %15 ]
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %27, i32* %28, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  %29 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  %30 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %31 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 3, i32* %33, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter20AppendXMLDeclarationERN3WTF13StringBuilderERKNS_8DocumentE(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Document"* nocapture readonly dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 93
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, 4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %144, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %17 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %18 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 15, i32* %20, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  %21 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 92, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %47

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #10
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !3

39:                                               ; preds = %30
  call void @llvm.trap() #10
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %47

42:                                               ; preds = %15
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %43, align 8
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %45 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 0, i32* %46, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  br label %66

47:                                               ; preds = %25, %40
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %53 = bitcast i8** %52 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %50, i32* %54, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  %55 = load atomic i32, i32* %26 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %47
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %47
  %63 = phi i32 [ %61, %60 ], [ %59, %47 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #10
  br label %66

66:                                               ; preds = %42, %62, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  %67 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 91, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %104, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %87

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i33
  %79 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #10
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85, !prof !3

84:                                               ; preds = %75
  call void @llvm.trap() #10
  unreachable

85:                                               ; preds = %75
  %86 = trunc i33 %81 to i32
  store i32 %86, i32* %76, align 4
  br label %87

87:                                               ; preds = %85, %70
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %104, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #10
  %93 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %94 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8** %95, align 8
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 12, i32* %96, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #10
  %97 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #10
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %98, align 8
  %99 = load i32, i32* %88, align 4
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 1
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %102 = bitcast i8** %101 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %102, align 8
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %99, i32* %103, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #10
  br label %104

104:                                              ; preds = %66, %91, %87
  %105 = load i8, i8* %11, align 8
  %106 = and i8 %105, 3
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %125, label %108

108:                                              ; preds = %104
  %109 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #10
  %110 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %111 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i8** %112, align 8
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 14, i32* %113, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #10
  %114 = load i8, i8* %11, align 8
  %115 = and i8 %114, 3
  %116 = icmp eq i8 %115, 1
  %117 = select i1 %116, %"class.WTF::StringView"* %8, %"class.WTF::StringView"* %9
  %118 = select i1 %116, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)
  %119 = select i1 %116, i32 3, i32 2
  %120 = bitcast %"class.WTF::StringView"* %117 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #10
  %121 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %122 = bitcast %"class.WTF::StringView"* %117 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %117, i64 0, i32 1
  store i8* %118, i8** %123, align 8
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %117, i64 0, i32 2
  store i32 %119, i32* %124, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %117)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #10
  br label %125

125:                                              ; preds = %108, %104
  %126 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #10
  %127 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %128 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i8** %129, align 8
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 3, i32* %130, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #10
  br i1 %69, label %144, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #10
  br label %144

144:                                              ; preds = %2, %143, %140, %125
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter18AppendDocumentTypeERN3WTF13StringBuilderERKNS_12DocumentTypeE(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::DocumentType"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = getelementptr inbounds %"class.blink::DocumentType", %"class.blink::DocumentType"* %1, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %133, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %133, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %21 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 10, i32* %23, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  %24 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %28, align 8
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %30 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %29, i64* %30, align 8
  br label %38

31:                                               ; preds = %18
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 1
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %37 = bitcast i8** %36 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %37, align 8
  br label %38

38:                                               ; preds = %27, %31
  %39 = phi i32 [ %34, %31 ], [ 0, %27 ]
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %39, i32* %40, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  %41 = getelementptr inbounds %"class.blink::DocumentType", %"class.blink::DocumentType"* %1, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %101, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %101, label %48

48:                                               ; preds = %44
  %49 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #10
  %50 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %51 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8** %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 9, i32* %53, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #10
  %54 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #10
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %57, label %61

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %58, align 8
  %59 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %60 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %59, i64* %60, align 8
  br label %68

61:                                               ; preds = %48
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 1
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %67 = bitcast i8** %66 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %67, align 8
  br label %68

68:                                               ; preds = %57, %61
  %69 = phi i32 [ %64, %61 ], [ 0, %57 ]
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %69, i32* %70, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #10
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %0, i8 zeroext 34) #10
  %71 = getelementptr inbounds %"class.blink::DocumentType", %"class.blink::DocumentType"* %1, i64 0, i32 3, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %132, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %132, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #10
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %81 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i8** %82, align 8
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 2, i32* %83, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #10
  %84 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #10
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %87, label %91

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %88, align 8
  %89 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %90 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %89, i64* %90, align 8
  br label %98

91:                                               ; preds = %78
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"** %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 1
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %97 = bitcast i8** %96 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %95, %"class.WTF::StringImpl"** %97, align 8
  br label %98

98:                                               ; preds = %87, %91
  %99 = phi i32 [ %94, %91 ], [ 0, %87 ]
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %99, i32* %100, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #10
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %0, i8 zeroext 34) #10
  br label %132

101:                                              ; preds = %38, %44
  %102 = getelementptr inbounds %"class.blink::DocumentType", %"class.blink::DocumentType"* %1, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %132, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %132, label %109

109:                                              ; preds = %105
  %110 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #10
  %111 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %112 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i8** %113, align 8
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 9, i32* %114, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #10
  %115 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #10
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %118, label %122

118:                                              ; preds = %109
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %119, align 8
  %120 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %121 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %120, i64* %121, align 8
  br label %129

122:                                              ; preds = %109
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %123, align 8
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 1
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %128 = bitcast i8** %127 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %126, %"class.WTF::StringImpl"** %128, align 8
  br label %129

129:                                              ; preds = %118, %122
  %130 = phi i32 [ %125, %122 ], [ 0, %118 ]
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %130, i32* %131, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #10
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %0, i8 zeroext 34) #10
  br label %132

132:                                              ; preds = %101, %68, %105, %129, %74, %98
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %0, i8 zeroext 62) #10
  br label %133

133:                                              ; preds = %2, %14, %132
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter27AppendProcessingInstructionERN3WTF13StringBuilderERKNS1_6StringES6_(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %10 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 2, i32* %12, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  %13 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %18, align 8
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %20 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %19, i64* %20, align 8
  br label %28

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %27 = bitcast i8** %26 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %27, align 8
  br label %28

28:                                               ; preds = %17, %21
  %29 = phi i32 [ %24, %21 ], [ 0, %17 ]
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %29, i32* %30, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %0, i8 zeroext 32) #10
  %31 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %36, align 8
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %37, i64* %38, align 8
  br label %46

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 1
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %45 = bitcast i8** %44 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %45, align 8
  br label %46

46:                                               ; preds = %35, %39
  %47 = phi i32 [ %42, %39 ], [ 0, %35 ]
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %47, i32* %48, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  %49 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #10
  %50 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %51 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i8** %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 2, i32* %53, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter18AppendCDATASectionERN3WTF13StringBuilderERKNS1_6StringE(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %8 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 9, i32* %10, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  %11 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %16, align 8
  %17 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %18 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %17, i64* %18, align 8
  br label %26

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %25, align 8
  br label %26

26:                                               ; preds = %15, %19
  %27 = phi i32 [ %22, %19 ], [ 0, %15 ]
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %27, i32* %28, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  %29 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  %30 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %31 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 3, i32* %33, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter15AppendEndMarkupERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::MarkupFormatter"* nocapture readonly, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 3
  tail call void @_ZN5blink15MarkupFormatter15AppendEndMarkupERN3WTF13StringBuilderERKNS_7ElementERKNS1_12AtomicStringES9_(%"class.blink::MarkupFormatter"* %0, %"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.blink::Element"* dereferenceable(104) %2, %"class.WTF::AtomicString"* dereferenceable(8) %6, %"class.WTF::AtomicString"* dereferenceable(8) %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter15AppendEndMarkupERN3WTF13StringBuilderERKNS_7ElementERKNS1_12AtomicStringES9_(%"class.blink::MarkupFormatter"* nocapture readonly, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Element"* dereferenceable(104), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = getelementptr inbounds %"class.blink::MarkupFormatter", %"class.blink::MarkupFormatter"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %17, label %25

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 48
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %77

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %24 = tail call zeroext i1 @_ZN5blink23ElementCannotHaveEndTagERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %23) #10
  br i1 %24, label %77, label %25

25:                                               ; preds = %5, %13, %22
  %26 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %31 = tail call zeroext i1 @_ZN5blink23ElementCannotHaveEndTagERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %30) #10
  br i1 %31, label %77, label %32

32:                                               ; preds = %25, %29
  %33 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %35 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 2, i32* %37, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #10
  %38 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #10
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %47, align 8
  %48 = load i32, i32* %42, align 4
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %51 = bitcast i8** %50 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %48, i32* %52, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #10
  %53 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #10
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %55 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 1, i32* %57, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #10
  br label %58

58:                                               ; preds = %32, %45, %41
  %59 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #10
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %63, label %67

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %64, align 8
  %65 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %66 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %65, i64* %66, align 8
  br label %74

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 1
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %73 = bitcast i8** %72 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %73, align 8
  br label %74

74:                                               ; preds = %63, %67
  %75 = phi i32 [ %70, %67 ], [ 0, %63 ]
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %75, i32* %76, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #10
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 62) #10
  br label %77

77:                                               ; preds = %22, %17, %29, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15MarkupFormatter15ShouldSelfCloseERKNS_7ElementE(%"class.blink::MarkupFormatter"* nocapture readonly, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MarkupFormatter", %"class.blink::MarkupFormatter"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %19

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 48
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink23ElementCannotHaveEndTagERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %16) #10
  br i1 %17, label %18, label %19

18:                                               ; preds = %15, %10
  br label %19

19:                                               ; preds = %6, %15, %2, %18
  %20 = phi i1 [ true, %18 ], [ false, %2 ], [ false, %6 ], [ false, %15 ]
  ret i1 %20
}

declare zeroext i1 @_ZN5blink23ElementCannotHaveEndTagERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #10
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #10
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #10
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #10
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #10
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter20AppendAttributeValueERN3WTF13StringBuilderERKNS1_6StringEb(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.WTF::String"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %10, align 8
  %11 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %12 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %11, i64* %12, align 8
  br label %20

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 1
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %19 = bitcast i8** %18 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %19, align 8
  br label %20

20:                                               ; preds = %9, %13
  %21 = phi i32 [ %16, %13 ], [ 0, %9 ]
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %21, i32* %22, align 8
  %23 = select i1 %2, i32 25, i32 239
  call void @_ZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskE(%"class.WTF::StringBuilder"* dereferenceable(48) %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %4, i32 %23)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter15AppendAttributeERN3WTF13StringBuilderERKNS1_12AtomicStringES6_RKNS1_6StringEb(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %0, i8 zeroext 32) #10
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %25, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %19, align 8
  %20 = load i32, i32* %14, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %20, i32* %24, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %0, i8 zeroext 58) #10
  br label %25

25:                                               ; preds = %5, %17, %13
  %26 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %31, align 8
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %33 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %32, i64* %33, align 8
  br label %41

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 1
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %40 = bitcast i8** %39 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %40, align 8
  br label %41

41:                                               ; preds = %30, %34
  %42 = phi i32 [ %37, %34 ], [ 0, %30 ]
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %42, i32* %43, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  %44 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #10
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %46 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8** %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 2, i32* %48, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #10
  %49 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #10
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %53, label %57

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %54, align 8
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %56 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %55, i64* %56, align 8
  br label %64

57:                                               ; preds = %41
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 1
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %63 = bitcast i8** %62 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %63, align 8
  br label %64

64:                                               ; preds = %53, %57
  %65 = phi i32 [ %60, %57 ], [ 0, %53 ]
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %65, i32* %66, align 8
  %67 = select i1 %4, i32 25, i32 239
  call void @_ZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskE(%"class.WTF::StringBuilder"* dereferenceable(48) %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %6, i32 %67) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #10
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %0, i8 zeroext 34) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter10AppendTextERN3WTF13StringBuilderERKNS_4TextE(%"class.blink::MarkupFormatter"* nocapture readonly, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Text"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %2, i64 0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %2, i64 0, i32 0, i32 2
  %11 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %10) #10
  br label %14

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %2, i64 0, i32 0, i32 3
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi %"class.WTF::String"* [ %11, %9 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %20, align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %22 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %21, i64* %22, align 8
  br label %30

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 1
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %29 = bitcast i8** %28 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %29, align 8
  br label %30

30:                                               ; preds = %19, %23
  %31 = phi i32 [ %26, %23 ], [ 0, %19 ]
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %31, i32* %32, align 8
  %33 = tail call i32 @_ZNK5blink15MarkupFormatter17EntityMaskForTextERKNS_4TextE(%"class.blink::MarkupFormatter"* %0, %"class.blink::Text"* dereferenceable(88) %2)
  call void @_ZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskE(%"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %4, i32 %33)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15MarkupFormatter17EntityMaskForTextERKNS_4TextE(%"class.blink::MarkupFormatter"* nocapture readonly, %"class.blink::Text"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MarkupFormatter", %"class.blink::MarkupFormatter"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %100

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 0
  %8 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %7) #10
  %9 = icmp eq %"class.blink::ContainerNode"* %8, null
  br i1 %9, label %100, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %8, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %100

15:                                               ; preds = %10
  %16 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %7) #10
  %17 = icmp eq %"class.blink::ContainerNode"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %16, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 12
  %22 = icmp eq i32 %21, 0
  %23 = bitcast %"class.blink::ContainerNode"* %16 to %"class.blink::Element"*
  %24 = select i1 %22, %"class.blink::Element"* %23, %"class.blink::Element"* null
  br label %25

25:                                               ; preds = %18, %15
  %26 = phi %"class.blink::Element"* [ %24, %18 ], [ null, %15 ]
  %27 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %26, i64 0, i32 2
  %28 = icmp eq %"class.blink::QualifiedName"* %27, null
  br i1 %28, label %100, label %29

29:                                               ; preds = %25
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoscriptTagE to %"class.blink::QualifiedName"**), align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, %34
  br i1 %35, label %36, label %61

36:                                               ; preds = %29
  %37 = bitcast %"class.blink::Text"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %38 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %38, i64 10
  %40 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %39, align 8
  %41 = tail call %"class.blink::ExecutionContext"* %40(%"class.blink::Node"* %7) #10
  %42 = icmp eq %"class.blink::ExecutionContext"* %41, null
  br i1 %42, label %61, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %47, i64 0, i32 12, i32 0, i32 0
  %49 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %48, align 8
  %50 = icmp eq %"class.blink::LocalDOMWindow"* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %43
  %52 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %37, align 8
  %53 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %52, i64 10
  %54 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %53, align 8
  %55 = tail call %"class.blink::ExecutionContext"* %54(%"class.blink::Node"* %7) #10
  %56 = bitcast %"class.blink::ExecutionContext"* %55 to i1 (%"class.blink::ExecutionContext"*, i32)***
  %57 = load i1 (%"class.blink::ExecutionContext"*, i32)**, i1 (%"class.blink::ExecutionContext"*, i32)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*, i32)*, i1 (%"class.blink::ExecutionContext"*, i32)** %57, i64 26
  %59 = load i1 (%"class.blink::ExecutionContext"*, i32)*, i1 (%"class.blink::ExecutionContext"*, i32)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.blink::ExecutionContext"* %55, i32 1) #10
  br label %61

61:                                               ; preds = %43, %36, %51, %29
  %62 = phi i1 [ false, %43 ], [ false, %36 ], [ false, %29 ], [ %60, %51 ]
  %63 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %63, i64 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, %66
  br i1 %67, label %100, label %68

68:                                               ; preds = %61
  %69 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, %71
  br i1 %72, label %100, label %73

73:                                               ; preds = %68
  %74 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kXmpTagE to %"class.blink::QualifiedName"**), align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %77 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, %76
  br i1 %77, label %100, label %78

78:                                               ; preds = %73
  %79 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE to %"class.blink::QualifiedName"**), align 8
  %80 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %79, i64 0, i32 0, i32 0
  %81 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8
  %82 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, %81
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names13kPlaintextTagE to %"class.blink::QualifiedName"**), align 8
  %85 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %85, align 8
  %87 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, %86
  br i1 %87, label %100, label %88

88:                                               ; preds = %83
  %89 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kNoembedTagE to %"class.blink::QualifiedName"**), align 8
  %90 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %92 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, %91
  br i1 %92, label %100, label %93

93:                                               ; preds = %88
  %94 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoframesTagE to %"class.blink::QualifiedName"**), align 8
  %95 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %94, i64 0, i32 0, i32 0
  %96 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %95, align 8
  %97 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, %96
  %98 = or i1 %62, %97
  %99 = select i1 %98, i32 0, i32 23
  ret i32 %99

100:                                              ; preds = %10, %6, %61, %68, %73, %78, %83, %88, %25, %2
  %101 = phi i32 [ 7, %2 ], [ 0, %61 ], [ 0, %68 ], [ 0, %73 ], [ 0, %78 ], [ 0, %83 ], [ 0, %88 ], [ 23, %25 ], [ 23, %10 ], [ 23, %6 ]
  ret i32 %101
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter18AppendStartTagOpenERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::MarkupFormatter"* nocapture readnone, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Element"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 3
  tail call void @_ZN5blink15MarkupFormatter18AppendStartTagOpenERN3WTF13StringBuilderERKNS1_12AtomicStringES6_(%"class.blink::MarkupFormatter"* undef, %"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.WTF::AtomicString"* dereferenceable(8) %6, %"class.WTF::AtomicString"* dereferenceable(8) %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter18AppendStartTagOpenERN3WTF13StringBuilderERKNS1_12AtomicStringES6_(%"class.blink::MarkupFormatter"* nocapture readnone, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 60) #10
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %17, align 8
  %18 = load i32, i32* %12, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %21 = bitcast i8** %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %18, i32* %22, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  %23 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 1, i32* %27, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  br label %28

28:                                               ; preds = %4, %15, %11
  %29 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %35, i64* %36, align 8
  br label %44

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  br label %44

44:                                               ; preds = %33, %37
  %45 = phi i32 [ %40, %37 ], [ 0, %33 ]
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %45, i32* %46, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter19AppendStartTagCloseERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::MarkupFormatter"* nocapture readonly, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::MarkupFormatter", %"class.blink::MarkupFormatter"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %11, label %27

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 48
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %18 = tail call zeroext i1 @_ZN5blink23ElementCannotHaveEndTagERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %17) #10
  br i1 %18, label %19, label %27

19:                                               ; preds = %16
  %20 = load i32, i32* %12, align 8
  br label %21

21:                                               ; preds = %19, %11
  %22 = phi i32 [ %20, %19 ], [ %13, %11 ]
  %23 = and i32 %22, 48
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 32) #10
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 47) #10
  br label %27

27:                                               ; preds = %16, %7, %3, %26
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 62) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter21AppendAttributeAsHTMLERN3WTF13StringBuilderERKNS_9AttributeERKNS1_6StringE(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Attribute"* nocapture readonly dereferenceable(16), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::QualifiedName", align 8
  %5 = bitcast %"class.blink::QualifiedName"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %9 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777216
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %16) #10
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  br label %18

18:                                               ; preds = %3, %10, %15
  %19 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ null, %3 ], [ %8, %10 ], [ %17, %15 ]
  %20 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink11xmlns_names13kNamespaceURIE, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %22, %24
  br i1 %25, label %26, label %38

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %30, label %52

30:                                               ; preds = %26
  %31 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_xmlns_atomE, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %52, label %37

37:                                               ; preds = %30
  call void @_ZN5blink13QualifiedName9SetPrefixERKN3WTF12AtomicStringE(%"class.blink::QualifiedName"* nonnull %4, %"class.WTF::AtomicString"* dereferenceable(8) %31)
  br label %52

38:                                               ; preds = %18
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink9xml_names13kNamespaceURIE, align 8
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %22, %41
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  %44 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF10g_xml_atomE, align 8
  call void @_ZN5blink13QualifiedName9SetPrefixERKN3WTF12AtomicStringE(%"class.blink::QualifiedName"* nonnull %4, %"class.WTF::AtomicString"* dereferenceable(8) %44)
  br label %52

45:                                               ; preds = %38
  %46 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink11xlink_names13kNamespaceURIE, align 8
  %47 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %22, %48
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_xlink_atomE, align 8
  call void @_ZN5blink13QualifiedName9SetPrefixERKN3WTF12AtomicStringE(%"class.blink::QualifiedName"* nonnull %4, %"class.WTF::AtomicString"* dereferenceable(8) %51)
  br label %52

52:                                               ; preds = %30, %26, %43, %50, %45, %37
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 2
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 3
  call void @_ZN5blink15MarkupFormatter15AppendAttributeERN3WTF13StringBuilderERKNS1_12AtomicStringES6_RKNS1_6StringEb(%"class.WTF::StringBuilder"* dereferenceable(48) %0, %"class.WTF::AtomicString"* dereferenceable(8) %54, %"class.WTF::AtomicString"* dereferenceable(8) %55, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext true)
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13QualifiedName9SetPrefixERKN3WTF12AtomicStringE(%"class.blink::QualifiedName"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::QualifiedName", align 8
  %4 = bitcast %"class.blink::QualifiedName"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 3
  %8 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 4
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %3, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %7, %"class.WTF::AtomicString"* dereferenceable(8) %8) #10
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777216
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %18) #10
  br label %19

19:                                               ; preds = %17, %12, %2
  %20 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %10 to i64
  %21 = bitcast %"class.blink::QualifiedName"* %0 to i64*
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  store i64 %20, i64* %21, align 8
  %23 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %22, null
  br i1 %23, label %36, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 16777216
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #10
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %22) #10
  %35 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %22 to i8*
  call void @free(i8* %35) #10
  br label %36

36:                                               ; preds = %19, %24, %29, %34
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15MarkupFormatter36AppendAttributeAsXMLWithoutNamespaceERN3WTF13StringBuilderERKNS_9AttributeERKNS1_6StringE(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Attribute"* nocapture readonly dereferenceable(16), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %7 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %8, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #10
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #10
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink11xmlns_names13kNamespaceURIE, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %32, %34
  br i1 %35, label %36, label %83

36:                                               ; preds = %29
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %41, label %146

41:                                               ; preds = %36
  %42 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_xmlns_atomE, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %42, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %44, %46
  br i1 %47, label %146, label %48

48:                                               ; preds = %41
  %49 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #10
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !3

64:                                               ; preds = %55
  tail call void @llvm.trap() #10
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %65, %50, %48
  %68 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %69 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  store i64 %68, i64* %69, align 8
  br i1 %11, label %146, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %146

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #10
  br label %146

83:                                               ; preds = %29
  %84 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink9xml_names13kNamespaceURIE, align 8
  %85 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %32, %86
  br i1 %87, label %88, label %114

88:                                               ; preds = %83
  br i1 %11, label %89, label %146

89:                                               ; preds = %88
  %90 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF10g_xml_atomE, align 8
  %91 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %111, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %111

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i33
  %103 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %102, i33 1) #10
  %104 = extractvalue { i33, i1 } %103, 1
  %105 = extractvalue { i33, i1 } %103, 0
  %106 = icmp slt i33 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %109, !prof !3

108:                                              ; preds = %99
  tail call void @llvm.trap() #10
  unreachable

109:                                              ; preds = %99
  %110 = trunc i33 %105 to i32
  store i32 %110, i32* %100, align 4
  br label %111

111:                                              ; preds = %89, %94, %109
  %112 = ptrtoint %"class.WTF::StringImpl"* %92 to i64
  %113 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  store i64 %112, i64* %113, align 8
  br label %146

114:                                              ; preds = %83
  %115 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink11xlink_names13kNamespaceURIE, align 8
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %115, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp ne %"class.WTF::StringImpl"* %32, %117
  %119 = icmp ne %"class.WTF::StringImpl"* %10, null
  %120 = or i1 %119, %118
  br i1 %120, label %146, label %121

121:                                              ; preds = %114
  %122 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_xlink_atomE, align 8
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %143, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i33
  %135 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #10
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !3

140:                                              ; preds = %131
  tail call void @llvm.trap() #10
  unreachable

141:                                              ; preds = %131
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %132, align 4
  br label %143

143:                                              ; preds = %121, %126, %141
  %144 = ptrtoint %"class.WTF::StringImpl"* %124 to i64
  %145 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  store i64 %144, i64* %145, align 8
  br label %146

146:                                              ; preds = %82, %79, %114, %88, %36, %41, %67, %111, %143
  %147 = phi %"class.WTF::StringImpl"* [ %46, %67 ], [ %92, %111 ], [ %124, %143 ], [ %10, %41 ], [ %10, %36 ], [ %10, %88 ], [ %10, %114 ], [ %46, %79 ], [ %46, %82 ]
  %148 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %149 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %148, i64 0, i32 3
  call void @_ZN5blink15MarkupFormatter15AppendAttributeERN3WTF13StringBuilderERKNS1_12AtomicStringES6_RKNS1_6StringEb(%"class.WTF::StringBuilder"* dereferenceable(48) %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %149, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext false)
  %150 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #10
  br label %164

164:                                              ; preds = %146, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink15MarkupFormatter15SerializeAsHTMLEv(%"class.blink::MarkupFormatter"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::MarkupFormatter", %"class.blink::MarkupFormatter"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #4

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #10
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon* %16 to %"class.WTF::Vector.1"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"* %30, i16* nonnull dereferenceable(2) %3) #10
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #10
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"* %41, i8* nonnull dereferenceable(1) %4) #10
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1"*, i16* dereferenceable(2)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"* %0, i32 %5) #10
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"* %0, i32 %5) #10
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.20, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #10
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #10
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1"* %0, i32 %27) #10
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #10
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %19, i16* nonnull %6) #10
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #10
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #10
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !5

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #10
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !5

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"* %53, i16* %48) #10
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.23, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2"*, i16*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"*, i8* dereferenceable(1)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #10
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #10
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.20, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #10
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #10
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #10
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %18, i8* nonnull %6) #10
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !5

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #10
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !5

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %46, i8* %42) #10
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.23, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #10
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"*, i8*) local_unnamed_addr #9 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #10
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

declare void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2000, i32 1}
