; ModuleID = '../../third_party/swiftshader/third_party/subzero/src/IceInst.cpp'
source_filename = "../../third_party/swiftshader/third_party/subzero/src/IceInst.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" = type { i8*, i8 }
%"struct.Ice::(anonymous namespace)::InstCastAttributes_" = type { i8* }
%"struct.Ice::(anonymous namespace)::InstIcmpAttributes_" = type { i8*, i32 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.Ice::Inst" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.25", i32, [4 x i8] }>
%"class.llvm::ilist_node" = type { %"class.llvm::ilist_node_impl" }
%"class.llvm::ilist_node_impl" = type { %"class.llvm::ilist_node_base" }
%"class.llvm::ilist_node_base" = type { %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.Ice::Operand"**, %"class.Ice::Operand"**, %"class.std::__1::__compressed_pair.27" }
%"class.Ice::Operand" = type { i32 (...)**, i32, i32, i32, %"class.Ice::Variable"**, i8* }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28", %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.Ice::Operand"** }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.Ice::sz_allocator.30" }
%"struct.Ice::sz_allocator.30" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::BumpPtrAllocatorImpl" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.1", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase" }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon" }
%"class.llvm::SmallVectorTemplateCommon" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [8 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [3 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallVector.1" = type <{ %"class.llvm::SmallVectorImpl.2", %"struct.llvm::SmallVectorStorage.7", [7 x i8] }>
%"class.llvm::SmallVectorImpl.2" = type { %"class.llvm::SmallVectorTemplateBase.3" }
%"class.llvm::SmallVectorTemplateBase.3" = type { %"class.llvm::SmallVectorTemplateCommon.4" }
%"class.llvm::SmallVectorTemplateCommon.4" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.5" }
%"struct.llvm::AlignedCharArrayUnion.5" = type { %"struct.llvm::AlignedCharArray.6" }
%"struct.llvm::AlignedCharArray.6" = type { [16 x i8] }
%"struct.llvm::SmallVectorStorage.7" = type { i8 }
%"class.llvm::MallocAllocator" = type { i8 }
%"class.Ice::Cfg" = type <{ %"class.std::__1::unique_ptr.31", %"class.Ice::GlobalContext"*, i32, i32, i32, [4 x i8], %"class.Ice::StringID.96", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.Ice::CfgNode"*, %"class.std::__1::vector.234", i32, [4 x i8], %"class.std::__1::vector.240", %"class.std::__1::vector.240", %"class.std::__1::vector.240", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.176", %"class.std::__1::vector.301", %"class.Ice::CfgNode"*, %"class.std::__1::vector.307", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::GlobalContext" = type { %"class.std::__1::mutex", %"class.llvm::BumpPtrAllocatorImpl", [16 x i8], %"class.std::__1::mutex", %"class.Ice::VariableDeclarationList", [8 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.40", %"class.std::__1::mutex", %"class.std::__1::unique_ptr.54", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::unique_ptr.88", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.94", %"class.std::__1::mutex", %"class.Ice::ErrorCode", %"class.std::__1::mutex", %"class.Ice::GlobalContext::CodeStats", %"class.std::__1::mutex", %"class.Ice::GlobalContext::TimerList", %"class.std::__1::mutex", %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"struct.std::__1::atomic", [63 x i8], %"class.std::__1::unique_ptr.156", i64, %"class.Ice::BoundedProducerConsumerQueue", %"class.Ice::BoundedProducerConsumerQueue.172", %"class.std::__1::unique_ptr.209", i8, %"class.std::__1::unique_ptr.215", i8, [15 x %"class.Ice::Constant"*], %"class.Ice::Constant"*, [36 x %"class.Ice::Constant"*], %"class.llvm::SmallVector.221", %"class.llvm::SmallVector.227", %"class.llvm::SmallVector.227" }
%"class.Ice::VariableDeclarationList" = type { %"class.std::__1::unique_ptr.31", %"class.std::__1::vector.35", %"class.std::__1::vector.40", %"class.std::__1::vector.47" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.Ice::VariableDeclaration"**, %"class.Ice::VariableDeclaration"**, %"class.std::__1::__compressed_pair.37" }
%"class.Ice::VariableDeclaration" = type opaque
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.Ice::VariableDeclaration"** }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::unique_ptr.31"* }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::function"* }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.Ice::ConstantPool"* }
%"class.Ice::ConstantPool" = type opaque
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"class.Ice::JumpTableData"*, %"class.Ice::JumpTableData"*, %"class.std::__1::__compressed_pair.104" }
%"class.Ice::JumpTableData" = type { %"class.Ice::StringID.96", %"class.Ice::StringID.96", i32, %"class.std::__1::vector.97" }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { i64*, i64*, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i64* }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.Ice::JumpTableData"* }
%"class.Ice::ErrorCode" = type <{ %"class.std::__1::error_code", i8, [7 x i8] }>
%"class.std::__1::error_code" = type { i32, %"class.std::__1::error_category"* }
%"class.std::__1::error_category" = type { i32 (...)** }
%"class.Ice::GlobalContext::CodeStats" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [6 x i32] }
%"class.Ice::GlobalContext::TimerList" = type { %"class.std::__1::vector.109" }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"class.Ice::TimerStack"*, %"class.Ice::TimerStack"*, %"class.std::__1::__compressed_pair.151" }
%"class.Ice::TimerStack" = type { %"class.std::__1::basic_string", double, double, i64, %"class.std::__1::map", %"class.std::__1::vector.123", %"class.std::__1::vector.130", %"class.std::__1::vector.144", %"class.std::__1::vector.132", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"class.Ice::TimerStack::TimerTreeNode"*, %"class.Ice::TimerStack::TimerTreeNode"*, %"class.std::__1::__compressed_pair.139" }
%"class.Ice::TimerStack::TimerTreeNode" = type { %"class.std::__1::vector.132", i64, i32, double, i64 }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.Ice::TimerStack::TimerTreeNode"* }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { double*, double*, %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { double* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { i64*, i64*, %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { i64* }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.Ice::TimerStack"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.Ice::ELFObjectWriter"* }
%"class.Ice::ELFObjectWriter" = type opaque
%"class.Ice::BoundedProducerConsumerQueue" = type <{ [65536 x %"class.std::__1::unique_ptr.162"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.Ice::OptWorkItem"* }
%"class.Ice::OptWorkItem" = type { i32 (...)** }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.168, %union.anon.170, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.168 = type { i64 }
%union.anon.170 = type { i64 }
%"class.Ice::BoundedProducerConsumerQueue.172" = type <{ [128 x %"class.std::__1::unique_ptr.173"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.Ice::EmitterWorkItem"* }
%"class.Ice::EmitterWorkItem" = type { i32, i32, %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.199" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.Ice::Cfg"* }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.Ice::TargetDataLowering"* }
%"class.Ice::TargetDataLowering" = type { i32 (...)**, %"class.Ice::GlobalContext"* }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.Ice::Instrumentation"* }
%"class.Ice::Instrumentation" = type { i32 (...)**, %"class.Ice::GlobalContext"*, i8, %"class.std::__1::mutex", %"class.std::__1::condition_variable" }
%"class.Ice::Constant" = type <{ %"class.Ice::Operand", %"class.Ice::StringID.96", i8, i8, [6 x i8] }>
%"class.llvm::SmallVector.221" = type { %"class.llvm::SmallVectorImpl.222", %"struct.llvm::SmallVectorStorage.226" }
%"class.llvm::SmallVectorImpl.222" = type { %"class.llvm::SmallVectorTemplateBase.223" }
%"class.llvm::SmallVectorTemplateBase.223" = type { %"class.llvm::SmallVectorTemplateCommon.224" }
%"class.llvm::SmallVectorTemplateCommon.224" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.225" }
%"struct.llvm::AlignedCharArrayUnion.225" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.226" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.225"] }
%"class.llvm::SmallVector.227" = type { %"class.llvm::SmallVectorImpl.228", %"struct.llvm::SmallVectorStorage.232" }
%"class.llvm::SmallVectorImpl.228" = type { %"class.llvm::SmallVectorTemplateBase.229" }
%"class.llvm::SmallVectorTemplateBase.229" = type { %"class.llvm::SmallVectorTemplateCommon.230" }
%"class.llvm::SmallVectorTemplateCommon.230" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.231" }
%"struct.llvm::AlignedCharArrayUnion.231" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.232" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.231"] }
%"class.Ice::StringID.96" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"**, %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.Ice::CfgNode"** }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.Ice::sz_allocator.239" }
%"struct.Ice::sz_allocator.239" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.240" = type { %"class.std::__1::__vector_base.241" }
%"class.std::__1::__vector_base.241" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243", %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.Ice::Variable"** }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.Ice::sz_allocator.245" }
%"struct.Ice::sz_allocator.245" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.Ice::StringPool"* }
%"class.Ice::StringPool" = type { i64, %"class.std::__1::unordered_map.57" }
%"class.std::__1::unordered_map.57" = type { %"class.std::__1::__hash_table.58" }
%"class.std::__1::__hash_table.58" = type <{ %"class.std::__1::unique_ptr.59", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", [4 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61", %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.std::__1::__hash_node_base.62"** }
%"struct.std::__1::__hash_node_base.62" = type { %"struct.std::__1::__hash_node_base.62"* }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::__bucket_list_deallocator.64" }
%"class.std::__1::__bucket_list_deallocator.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.std::__1::__hash_node_base.62" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { float }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.Ice::Liveness"* }
%"class.Ice::Liveness" = type { %"class.std::__1::unique_ptr.31", %"struct.Ice::sz_allocator_scope", %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.249", %"class.std::__1::vector.268", %"class.std::__1::vector.251", %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl", i32, i32 }
%"struct.Ice::sz_allocator_scope" = type { i8 }
%"class.std::__1::vector.249" = type { %"class.std::__1::__vector_base.250" }
%"class.std::__1::__vector_base.250" = type { %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"*, %"class.std::__1::__compressed_pair.264" }
%"class.Ice::Liveness::LivenessNode" = type { i32, i32, %"class.std::__1::vector.251", %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl", %"class.std::__1::vector.257", %"class.std::__1::vector.257" }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.std::__1::pair.259"*, %"struct.std::__1::pair.259"*, %"class.std::__1::__compressed_pair.260" }
%"struct.std::__1::pair.259" = type { i32, i32 }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::pair.259"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.Ice::sz_allocator.263" }
%"struct.Ice::sz_allocator.263" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265", %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.Ice::Liveness::LivenessNode"* }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"struct.Ice::sz_allocator.267" }
%"struct.Ice::sz_allocator.267" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.268" = type { %"class.std::__1::__vector_base.269" }
%"class.std::__1::__vector_base.269" = type { i32*, i32*, %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271", %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.271" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.Ice::sz_allocator.273" }
%"struct.Ice::sz_allocator.273" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.251" = type { %"class.std::__1::__vector_base.252" }
%"class.std::__1::__vector_base.252" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.243", %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.Ice::sz_allocator.255" }
%"struct.Ice::sz_allocator.255" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::BitVectorTmpl" = type { i64*, i32, i32, %"struct.Ice::sz_allocator.256" }
%"struct.Ice::sz_allocator.256" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.Ice::TargetLowering"* }
%"class.Ice::TargetLowering" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.Ice::Cfg"*, %"class.Ice::GlobalContext"*, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.Ice::LoweringContext", i32, [4 x i8] }>
%"class.Ice::LoweringContext" = type { %"class.Ice::CfgNode"*, %"class.Ice::Inst"*, %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.Ice::Variable"*, %"class.Ice::Variable"* }
%"class.llvm::ilist_iterator" = type { %"class.llvm::ilist_node_impl"* }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.Ice::VariablesMetadata"* }
%"class.Ice::VariablesMetadata" = type { %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.286" }
%"class.std::__1::vector.286" = type { %"class.std::__1::__vector_base.287" }
%"class.std::__1::__vector_base.287" = type { %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"*, %"class.std::__1::__compressed_pair.294" }
%"class.Ice::VariableTracking" = type <{ i32, i32, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::vector.288", %"class.Ice::Inst"*, %"class.Ice::RegWeight", [4 x i8] }>
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"class.Ice::Inst"**, %"class.Ice::Inst"**, %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291", %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.Ice::Inst"** }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.Ice::sz_allocator.293" }
%"struct.Ice::sz_allocator.293" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::RegWeight" = type { i32 }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295", %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.Ice::VariableTracking"* }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"struct.Ice::sz_allocator.297" }
%"struct.Ice::sz_allocator.297" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.Ice::Assembler"* }
%"class.Ice::Assembler" = type { i32 (...)**, i32, [4 x i8], %"class.llvm::BumpPtrAllocatorImpl.185", %"class.Ice::StringID.96", i8, i8, [6 x i8], %"class.Ice::AssemblerBuffer" }
%"class.llvm::BumpPtrAllocatorImpl.185" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.1", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.Ice::AssemblerBuffer" = type <{ i8, [7 x i8], i64, i64, i64, %"class.Ice::Assembler"*, %"class.std::__1::vector.188", i8, [7 x i8] }>
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"class.Ice::AssemblerFixup"**, %"class.Ice::AssemblerFixup"**, %"class.std::__1::__compressed_pair.191" }
%"class.Ice::AssemblerFixup" = type { i32 (...)**, i64, i32, i32, i8, %union.anon.190 }
%union.anon.190 = type { %"class.Ice::Constant"* }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.Ice::AssemblerFixup"** }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.Ice::VariableDeclarationList"* }
%"class.std::__1::vector.301" = type { %"class.std::__1::__vector_base.302" }
%"class.std::__1::__vector_base.302" = type { %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"**, %"class.std::__1::__compressed_pair.303" }
%"class.Ice::InstJumpTable" = type { %"class.Ice::InstHighLevel.base", i32, i32, %"class.Ice::CfgNode"**, %"class.Ice::StringID.96", %"class.Ice::StringID.96" }
%"class.Ice::InstHighLevel.base" = type { %"class.Ice::Inst.base" }
%"class.Ice::Inst.base" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.25", i32 }>
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304", %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.Ice::InstJumpTable"** }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.Ice::sz_allocator.306" }
%"struct.Ice::sz_allocator.306" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::CfgNode" = type { %"class.Ice::Cfg"*, i32, i32, %"class.Ice::StringID.233", i32, i8, i8, i8, i32, %"class.std::__1::vector.234", %"class.std::__1::vector.234", %"class.llvm::iplist", %"class.llvm::iplist", i8* }
%"class.Ice::StringID.233" = type { i64 }
%"class.llvm::iplist" = type { %"class.llvm::iplist_impl" }
%"class.llvm::iplist_impl" = type { %"class.llvm::simple_ilist" }
%"class.llvm::simple_ilist" = type { %"class.llvm::ilist_sentinel" }
%"class.llvm::ilist_sentinel" = type { %"class.llvm::ilist_node_impl" }
%"class.std::__1::vector.307" = type { %"class.std::__1::__vector_base.308" }
%"class.std::__1::__vector_base.308" = type { %"struct.Ice::Loop"*, %"struct.Ice::Loop"*, %"class.std::__1::__compressed_pair.332" }
%"struct.Ice::Loop" = type { %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.309" }
%"class.std::__1::__hash_table.309" = type <{ %"class.std::__1::unique_ptr.310", %"class.std::__1::__compressed_pair.319", %"class.std::__1::__compressed_pair.323", %"class.std::__1::__compressed_pair.327", [4 x i8] }>
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312", %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"struct.std::__1::__hash_node_base.313"** }
%"struct.std::__1::__hash_node_base.313" = type { %"struct.std::__1::__hash_node_base.313"* }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.std::__1::__bucket_list_deallocator.315" }
%"class.std::__1::__bucket_list_deallocator.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.Ice::sz_allocator.318" }
%"struct.Ice::sz_allocator.318" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320", %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.std::__1::__hash_node_base.313" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.Ice::sz_allocator.322" }
%"struct.Ice::sz_allocator.322" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.Ice::Loop"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.Ice::sz_allocator.335" }
%"struct.Ice::sz_allocator.335" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::Variable" = type { %"class.Ice::Operand", i32, %"class.Ice::StringID", i8, i8, i8, i8, i8, i8, %"class.Ice::RegNumT", %"class.Ice::RegNumT", i32, %"class.Ice::LiveRange", [1 x %"class.Ice::Variable"*], %"class.Ice::Variable"*, i8* }
%"class.Ice::StringID" = type { i64 }
%"class.Ice::RegNumT" = type { i32 }
%"class.Ice::LiveRange" = type { %"class.std::__1::vector", %"class.std::__1::unordered_map", %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"struct.Ice::sz_allocator" }
%"struct.Ice::sz_allocator" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.22", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.Ice::sz_allocator.15" }
%"struct.Ice::sz_allocator.15" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::__hash_node_base" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.Ice::sz_allocator.19" }
%"struct.Ice::sz_allocator.19" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair"* }
%"class.Ice::InstAlloca" = type <{ %"class.Ice::InstHighLevel.base", i32, i8, [7 x i8] }>
%"class.Ice::InstArithmetic" = type { %"class.Ice::InstHighLevel.base", i32 }
%"class.Ice::InstAssign" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstBr" = type { %"class.Ice::InstHighLevel.base", %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"* }
%"class.Ice::InstCast" = type { %"class.Ice::InstHighLevel.base", i32 }
%"class.Ice::InstExtractElement" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstFcmp" = type { %"class.Ice::InstHighLevel.base", i32 }
%"class.Ice::InstIcmp" = type { %"class.Ice::InstHighLevel.base", i32 }
%"class.Ice::InstInsertElement" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstLoad" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstPhi" = type { %"class.Ice::InstHighLevel.base", %"class.std::__1::vector.234" }
%"class.Ice::InstRet" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstSelect" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstStore" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstSwitch" = type { %"class.Ice::InstHighLevel.base", %"class.Ice::CfgNode"*, i32, i64*, %"class.Ice::CfgNode"** }
%"class.Ice::InstUnreachable" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstBundleLock" = type { %"class.Ice::InstHighLevel.base", i32 }
%"class.Ice::InstBundleUnlock" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstFakeDef" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstFakeUse" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstFakeKill" = type { %"class.Ice::InstHighLevel.base", %"class.Ice::Inst"* }
%"class.Ice::InstShuffleVector" = type { %"class.Ice::InstHighLevel.base", %"class.Ice::ConstantPrimitive"**, i32, i32 }
%"class.Ice::ConstantPrimitive" = type { %"class.Ice::Constant.base", i32 }
%"class.Ice::Constant.base" = type <{ %"class.Ice::Operand", %"class.Ice::StringID.96", i8, i8 }>
%"class.Ice::InstBreakpoint" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.Ice::Variable64On32" = type { %"class.Ice::Variable", %"class.Ice::Variable"*, %"class.Ice::Variable"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.Ice::Label" = type { i32 (...)**, i64 }
%"class.Ice::InstCall" = type { %"class.Ice::InstHighLevel.base", i8, i8, i8, i8 }
%"class.Ice::InstTarget" = type { %"class.Ice::Inst.base", [4 x i8] }
%"class.Ice::InstHighLevel" = type { %"class.Ice::Inst.base", [4 x i8] }
%"struct.std::__1::pair.340" = type { i8*, i64 }
%"class.Ice::LockedPtr" = type { %"class.Ice::StringPool"*, %"class.std::__1::mutex"* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::tuple.349" = type { i8 }
%"struct.std::__1::default_delete.344" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352", %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.62", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.346" }
%"struct.std::__1::pair.346" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.341" }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.72"*, i8, [7 x i8] }>
%"class.std::__1::allocator.72" = type { i8 }

$_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm = comdat any

$_ZN3Ice4Inst9addSourceEPNS_7OperandE = comdat any

$_ZNSt3__16vectorIPN3Ice7CfgNodeENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm = comdat any

$_ZN3Ice14Variable64On328initHiLoEPNS_3CfgE = comdat any

$_ZNSt3__16vectorIlNS_9allocatorIlEEEC2Em = comdat any

$_ZNK3Ice4Inst18getTerminatorEdgesEv = comdat any

$_ZNK3Ice4Inst21isUnconditionalBranchEv = comdat any

$_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ = comdat any

$_ZNK3Ice4Inst11isVarAssignEv = comdat any

$_ZNK3Ice4Inst7isLabelEv = comdat any

$_ZNK3Ice4Inst25getIntraBlockBranchTargetEv = comdat any

$_ZNK3Ice4Inst16getEmitInstCountEv = comdat any

$_ZNK3Ice4Inst4emitEPKNS_3CfgE = comdat any

$_ZNK3Ice4Inst7emitIASEPKNS_3CfgE = comdat any

$_ZNK3Ice4Inst17isRedundantAssignEv = comdat any

$_ZN3Ice4InstD0Ev = comdat any

$_ZN3Ice4Inst7destroyEPNS_3CfgE = comdat any

$_ZNK3Ice8InstCall13isMemoryWriteEv = comdat any

$_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE = comdat any

$_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE = comdat any

$_ZN3Ice8InstCallD0Ev = comdat any

$_ZNK3Ice10InstTarget13isMemoryWriteEv = comdat any

$_ZNK3Ice10InstTarget16getEmitInstCountEv = comdat any

$_ZN3Ice10InstTargetD0Ev = comdat any

$_ZNK3Ice10InstAlloca13isMemoryWriteEv = comdat any

$_ZN3Ice10InstAllocaD0Ev = comdat any

$_ZNK3Ice14InstArithmetic13isMemoryWriteEv = comdat any

$_ZN3Ice14InstArithmeticD0Ev = comdat any

$_ZNK3Ice10InstAssign13isMemoryWriteEv = comdat any

$_ZN3Ice10InstAssignD0Ev = comdat any

$_ZNK3Ice6InstBr21isUnconditionalBranchEv = comdat any

$_ZNK3Ice6InstBr13isMemoryWriteEv = comdat any

$_ZN3Ice6InstBrD0Ev = comdat any

$_ZNK3Ice8InstCast13isMemoryWriteEv = comdat any

$_ZN3Ice8InstCastD0Ev = comdat any

$_ZNK3Ice18InstExtractElement13isMemoryWriteEv = comdat any

$_ZN3Ice18InstExtractElementD0Ev = comdat any

$_ZNK3Ice8InstFcmp13isMemoryWriteEv = comdat any

$_ZN3Ice8InstFcmpD0Ev = comdat any

$_ZNK3Ice8InstIcmp13isMemoryWriteEv = comdat any

$_ZN3Ice8InstIcmpD0Ev = comdat any

$_ZNK3Ice17InstInsertElement13isMemoryWriteEv = comdat any

$_ZN3Ice17InstInsertElementD0Ev = comdat any

$_ZNK3Ice8InstLoad13isMemoryWriteEv = comdat any

$_ZN3Ice8InstLoadD0Ev = comdat any

$_ZNK3Ice7InstPhi13isMemoryWriteEv = comdat any

$_ZN3Ice7InstPhiD2Ev = comdat any

$_ZN3Ice7InstPhiD0Ev = comdat any

$_ZN3Ice7InstPhi7destroyEPNS_3CfgE = comdat any

$_ZNK3Ice7InstRet18getTerminatorEdgesEv = comdat any

$_ZNK3Ice7InstRet13isMemoryWriteEv = comdat any

$_ZN3Ice7InstRetD0Ev = comdat any

$_ZNK3Ice10InstSelect13isMemoryWriteEv = comdat any

$_ZN3Ice10InstSelectD0Ev = comdat any

$_ZNK3Ice9InstStore13isMemoryWriteEv = comdat any

$_ZN3Ice9InstStoreD0Ev = comdat any

$_ZNK3Ice10InstSwitch13isMemoryWriteEv = comdat any

$_ZN3Ice10InstSwitchD0Ev = comdat any

$_ZN3Ice10InstSwitch7destroyEPNS_3CfgE = comdat any

$_ZNK3Ice15InstUnreachable18getTerminatorEdgesEv = comdat any

$_ZNK3Ice15InstUnreachable13isMemoryWriteEv = comdat any

$_ZN3Ice15InstUnreachableD0Ev = comdat any

$_ZNK3Ice14InstBundleLock13isMemoryWriteEv = comdat any

$_ZNK3Ice14InstBundleLock7emitIASEPKNS_3CfgE = comdat any

$_ZN3Ice14InstBundleLockD0Ev = comdat any

$_ZNK3Ice16InstBundleUnlock13isMemoryWriteEv = comdat any

$_ZNK3Ice16InstBundleUnlock7emitIASEPKNS_3CfgE = comdat any

$_ZN3Ice16InstBundleUnlockD0Ev = comdat any

$_ZNK3Ice11InstFakeDef13isMemoryWriteEv = comdat any

$_ZNK3Ice11InstFakeDef7emitIASEPKNS_3CfgE = comdat any

$_ZN3Ice11InstFakeDefD0Ev = comdat any

$_ZNK3Ice11InstFakeUse13isMemoryWriteEv = comdat any

$_ZNK3Ice11InstFakeUse7emitIASEPKNS_3CfgE = comdat any

$_ZN3Ice11InstFakeUseD0Ev = comdat any

$_ZNK3Ice12InstFakeKill13isMemoryWriteEv = comdat any

$_ZNK3Ice12InstFakeKill7emitIASEPKNS_3CfgE = comdat any

$_ZN3Ice4InstD2Ev = comdat any

$_ZN3Ice12InstFakeKillD0Ev = comdat any

$_ZNK3Ice17InstShuffleVector13isMemoryWriteEv = comdat any

$_ZN3Ice17InstShuffleVectorD0Ev = comdat any

$_ZN3Ice17InstShuffleVector7destroyEPNS_3CfgE = comdat any

$_ZNK3Ice13InstJumpTable13isMemoryWriteEv = comdat any

$_ZNK3Ice13InstJumpTable4emitEPKNS_3CfgE = comdat any

$_ZNK3Ice13InstJumpTable7emitIASEPKNS_3CfgE = comdat any

$_ZN3Ice13InstJumpTableD0Ev = comdat any

$_ZN3Ice13InstJumpTable7destroyEPNS_3CfgE = comdat any

$_ZNK3Ice14InstBreakpoint13isMemoryWriteEv = comdat any

$_ZN3Ice14InstBreakpointD0Ev = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm = comdat any

$_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_ = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_ = comdat any

$_ZN3Ice8StringIDINS_22GlobalStringPoolTraitsEEC2EPKNS_13GlobalContextERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE = comdat any

$_ZN3Ice10StringPool14getOrAddStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSR_IJEEEEEENS8_INS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS5_ISY_EEEEEEmOT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm = comdat any

$_ZNKSt3__114default_deleteINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEclEPS6_ = comdat any

$_ZNSt3__16vectorIlNS_9allocatorIlEEEC2ERKS3_ = comdat any

$_ZNSt3__16vectorIlNS_9allocatorIlEEE11__vallocateEm = comdat any

$_ZN3Ice12sz_allocatorINSt3__14pairIjiEENS_23LivenessAllocatorTraitsEE8allocateEm = comdat any

$_ZNSt3__16uniqueINS_11__wrap_iterIPPN3Ice7CfgNodeEEENS_10__equal_toIS4_S4_EEEET_S9_S9_T0_ = comdat any

$_ZTVN3Ice14InstBreakpointE = comdat any

@_ZTVN3Ice4InstE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@.str = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"Failed to find splice operand\00", align 1
@.str.2 = private unnamed_addr constant [50 x i8] c"Attempt to call base Inst::isMemoryWrite() method\00", align 1
@_ZTVN3Ice10InstAllocaE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstAlloca"*)* @_ZNK3Ice10InstAlloca13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstAlloca"*, %"class.Ice::Cfg"*)* @_ZNK3Ice10InstAlloca4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstAlloca"*)* @_ZN3Ice10InstAllocaD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice14InstArithmeticE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::InstArithmetic"*)* @_ZNK3Ice14InstArithmetic11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstArithmetic"*)* @_ZNK3Ice14InstArithmetic13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstArithmetic"*, %"class.Ice::Cfg"*)* @_ZNK3Ice14InstArithmetic4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstArithmetic"*)* @_ZN3Ice14InstArithmeticD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZN3Ice12_GLOBAL__N_124InstArithmeticAttributesE = internal unnamed_addr constant [18 x %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_"] [%"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), i8 1 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8 1 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8 0 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8 0 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i8 1 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i8 1 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i8 0 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i8 0 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8 0 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i8 0 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i8 0 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), i8 0 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i8 0 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i8 0 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i8 0 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), i8 1 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0), i8 1 }, %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i8 1 }], align 16
@_ZTVN3Ice10InstAssignE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::InstAssign"*)* @_ZNK3Ice10InstAssign11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstAssign"*)* @_ZNK3Ice10InstAssign13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstAssign"*, %"class.Ice::Cfg"*)* @_ZNK3Ice10InstAssign4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstAssign"*)* @_ZN3Ice10InstAssignD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice6InstBrE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::InstBr"*)* @_ZNK3Ice6InstBr18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::InstBr"*)* @_ZNK3Ice6InstBr21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::InstBr"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice6InstBr12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstBr"*)* @_ZNK3Ice6InstBr13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstBr"*, %"class.Ice::Cfg"*)* @_ZNK3Ice6InstBr4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstBr"*)* @_ZN3Ice6InstBrD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice8InstCastE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstCast"*)* @_ZNK3Ice8InstCast13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstCast"*, %"class.Ice::Cfg"*)* @_ZNK3Ice8InstCast4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstCast"*)* @_ZN3Ice8InstCastD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice18InstExtractElementE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstExtractElement"*)* @_ZNK3Ice18InstExtractElement13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstExtractElement"*, %"class.Ice::Cfg"*)* @_ZNK3Ice18InstExtractElement4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstExtractElement"*)* @_ZN3Ice18InstExtractElementD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice8InstFcmpE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstFcmp"*)* @_ZNK3Ice8InstFcmp13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstFcmp"*, %"class.Ice::Cfg"*)* @_ZNK3Ice8InstFcmp4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstFcmp"*)* @_ZN3Ice8InstFcmpD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice8InstIcmpE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstIcmp"*)* @_ZNK3Ice8InstIcmp13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstIcmp"*, %"class.Ice::Cfg"*)* @_ZNK3Ice8InstIcmp4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstIcmp"*)* @_ZN3Ice8InstIcmpD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice17InstInsertElementE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstInsertElement"*)* @_ZNK3Ice17InstInsertElement13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstInsertElement"*, %"class.Ice::Cfg"*)* @_ZNK3Ice17InstInsertElement4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstInsertElement"*)* @_ZN3Ice17InstInsertElementD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice8InstLoadE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstLoad"*)* @_ZNK3Ice8InstLoad13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstLoad"*, %"class.Ice::Cfg"*)* @_ZNK3Ice8InstLoad4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstLoad"*)* @_ZN3Ice8InstLoadD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice7InstPhiE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstPhi"*)* @_ZNK3Ice7InstPhi13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstPhi"*, %"class.Ice::Cfg"*)* @_ZNK3Ice7InstPhi4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::InstPhi"*)* @_ZN3Ice7InstPhiD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstPhi"*)* @_ZN3Ice7InstPhiD0Ev to i8*), i8* bitcast (void (%"class.Ice::InstPhi"*, %"class.Ice::Cfg"*)* @_ZN3Ice7InstPhi7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice7InstRetE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::InstRet"*)* @_ZNK3Ice7InstRet18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstRet"*)* @_ZNK3Ice7InstRet13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstRet"*, %"class.Ice::Cfg"*)* @_ZNK3Ice7InstRet4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstRet"*)* @_ZN3Ice7InstRetD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice10InstSelectE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstSelect"*)* @_ZNK3Ice10InstSelect13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstSelect"*, %"class.Ice::Cfg"*)* @_ZNK3Ice10InstSelect4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstSelect"*)* @_ZN3Ice10InstSelectD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice9InstStoreE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstStore"*)* @_ZNK3Ice9InstStore13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstStore"*, %"class.Ice::Cfg"*)* @_ZNK3Ice9InstStore4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstStore"*)* @_ZN3Ice9InstStoreD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice10InstSwitchE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::InstSwitch"*)* @_ZNK3Ice10InstSwitch18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::InstSwitch"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice10InstSwitch12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstSwitch"*)* @_ZNK3Ice10InstSwitch13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstSwitch"*, %"class.Ice::Cfg"*)* @_ZNK3Ice10InstSwitch4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstSwitch"*)* @_ZN3Ice10InstSwitchD0Ev to i8*), i8* bitcast (void (%"class.Ice::InstSwitch"*, %"class.Ice::Cfg"*)* @_ZN3Ice10InstSwitch7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice15InstUnreachableE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::InstUnreachable"*)* @_ZNK3Ice15InstUnreachable18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstUnreachable"*)* @_ZNK3Ice15InstUnreachable13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstUnreachable"*, %"class.Ice::Cfg"*)* @_ZNK3Ice15InstUnreachable4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstUnreachable"*)* @_ZN3Ice15InstUnreachableD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice14InstBundleLockE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstBundleLock"*)* @_ZNK3Ice14InstBundleLock13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstBundleLock"*, %"class.Ice::Cfg"*)* @_ZNK3Ice14InstBundleLock4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstBundleLock"*, %"class.Ice::Cfg"*)* @_ZNK3Ice14InstBundleLock7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstBundleLock"*, %"class.Ice::Cfg"*)* @_ZNK3Ice14InstBundleLock4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstBundleLock"*)* @_ZN3Ice14InstBundleLockD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice16InstBundleUnlockE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstBundleUnlock"*)* @_ZNK3Ice16InstBundleUnlock13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstBundleUnlock"*, %"class.Ice::Cfg"*)* @_ZNK3Ice16InstBundleUnlock4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstBundleUnlock"*, %"class.Ice::Cfg"*)* @_ZNK3Ice16InstBundleUnlock7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstBundleUnlock"*, %"class.Ice::Cfg"*)* @_ZNK3Ice16InstBundleUnlock4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstBundleUnlock"*)* @_ZN3Ice16InstBundleUnlockD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice11InstFakeDefE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstFakeDef"*)* @_ZNK3Ice11InstFakeDef13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstFakeDef"*, %"class.Ice::Cfg"*)* @_ZNK3Ice11InstFakeDef4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstFakeDef"*, %"class.Ice::Cfg"*)* @_ZNK3Ice11InstFakeDef7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstFakeDef"*, %"class.Ice::Cfg"*)* @_ZNK3Ice11InstFakeDef4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstFakeDef"*)* @_ZN3Ice11InstFakeDefD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice11InstFakeUseE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstFakeUse"*)* @_ZNK3Ice11InstFakeUse13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstFakeUse"*, %"class.Ice::Cfg"*)* @_ZNK3Ice11InstFakeUse4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstFakeUse"*, %"class.Ice::Cfg"*)* @_ZNK3Ice11InstFakeUse7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstFakeUse"*, %"class.Ice::Cfg"*)* @_ZNK3Ice11InstFakeUse4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstFakeUse"*)* @_ZN3Ice11InstFakeUseD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice12InstFakeKillE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstFakeKill"*)* @_ZNK3Ice12InstFakeKill13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstFakeKill"*, %"class.Ice::Cfg"*)* @_ZNK3Ice12InstFakeKill4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstFakeKill"*, %"class.Ice::Cfg"*)* @_ZNK3Ice12InstFakeKill7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstFakeKill"*, %"class.Ice::Cfg"*)* @_ZNK3Ice12InstFakeKill4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstFakeKill"*)* @_ZN3Ice12InstFakeKillD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice17InstShuffleVectorE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstShuffleVector"*)* @_ZNK3Ice17InstShuffleVector13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstShuffleVector"*, %"class.Ice::Cfg"*)* @_ZNK3Ice17InstShuffleVector4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstShuffleVector"*)* @_ZN3Ice17InstShuffleVectorD0Ev to i8*), i8* bitcast (void (%"class.Ice::InstShuffleVector"*, %"class.Ice::Cfg"*)* @_ZN3Ice17InstShuffleVector7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice13InstJumpTableE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::InstJumpTable"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice13InstJumpTable12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstJumpTable"*)* @_ZNK3Ice13InstJumpTable13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstJumpTable"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstJumpTable4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstJumpTable"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstJumpTable7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstJumpTable"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstJumpTable4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstJumpTable"*)* @_ZN3Ice13InstJumpTableD0Ev to i8*), i8* bitcast (void (%"class.Ice::InstJumpTable"*, %"class.Ice::Cfg"*)* @_ZN3Ice13InstJumpTable7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZN3Ice12_GLOBAL__N_118InstCastAttributesE = internal unnamed_addr constant [10 x %"struct.Ice::(anonymous namespace)::InstCastAttributes_"] [%"struct.Ice::(anonymous namespace)::InstCastAttributes_" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::InstCastAttributes_" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::InstCastAttributes_" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::InstCastAttributes_" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::InstCastAttributes_" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::InstCastAttributes_" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::InstCastAttributes_" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::InstCastAttributes_" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::InstCastAttributes_" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::InstCastAttributes_" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0) }], align 16
@_ZTVN3Ice14InstBreakpointE = linkonce_odr hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstBreakpoint"*)* @_ZNK3Ice14InstBreakpoint13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstBreakpoint"*)* @_ZN3Ice14InstBreakpointD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, comdat, align 8
@_ZN3Ice12_GLOBAL__N_118InstIcmpAttributesE = internal unnamed_addr constant [10 x %"struct.Ice::(anonymous namespace)::InstIcmpAttributes_"] [%"struct.Ice::(anonymous namespace)::InstIcmpAttributes_" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i32 0, i32 0), i32 0 }, %"struct.Ice::(anonymous namespace)::InstIcmpAttributes_" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i32 0, i32 0), i32 1 }, %"struct.Ice::(anonymous namespace)::InstIcmpAttributes_" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i32 4 }, %"struct.Ice::(anonymous namespace)::InstIcmpAttributes_" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i32 5 }, %"struct.Ice::(anonymous namespace)::InstIcmpAttributes_" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i32 2 }, %"struct.Ice::(anonymous namespace)::InstIcmpAttributes_" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0), i32 3 }, %"struct.Ice::(anonymous namespace)::InstIcmpAttributes_" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), i32 8 }, %"struct.Ice::(anonymous namespace)::InstIcmpAttributes_" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i32 0, i32 0), i32 9 }, %"struct.Ice::(anonymous namespace)::InstIcmpAttributes_" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i32 6 }, %"struct.Ice::(anonymous namespace)::InstIcmpAttributes_" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i32 0, i32 0), i32 7 }], align 16
@_ZTVN3Ice8InstCallE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstCall"*)* @_ZNK3Ice8InstCall13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*)* @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstCall"*, %"class.Ice::Cfg"*)* @_ZNK3Ice8InstCall4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstCall"*)* @_ZN3Ice8InstCallD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@_ZTVN3Ice10InstTargetE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11getInstNameEv to i8*), i8* bitcast (void (%"class.std::__1::vector.234"*, %"class.Ice::Inst"*)* @_ZNK3Ice4Inst18getTerminatorEdgesEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst21isUnconditionalBranchEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_ to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst11isVarAssignEv to i8*), i8* bitcast (i1 (%"class.Ice::InstTarget"*)* @_ZNK3Ice10InstTarget13isMemoryWriteEv to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst7isLabelEv to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv to i8*), i8* bitcast (i32 (%"class.Ice::InstTarget"*)* @_ZNK3Ice10InstTarget16getEmitInstCountEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst4emitEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst7emitIASEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::InstTarget"*, %"class.Ice::Cfg"*)* @_ZNK3Ice10InstTarget4dumpEPKNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE to i8*), i8* bitcast (i1 (%"class.Ice::Inst"*)* @_ZNK3Ice4Inst17isRedundantAssignEv to i8*), i8* bitcast (void (%"class.Ice::Inst"*)* @_ZN3Ice4InstD2Ev to i8*), i8* bitcast (void (%"class.Ice::InstTarget"*)* @_ZN3Ice10InstTargetD0Ev to i8*), i8* bitcast (void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)* @_ZN3Ice4Inst7destroyEPNS_3CfgE to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [26 x i8] c"Inst unexpectedly deleted\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"fadd\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"fsub\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"mul\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"fmul\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"udiv\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"sdiv\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"fdiv\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"urem\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"srem\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"frem\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"shl\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"lshr\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"ashr\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"xor\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c".L\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"$jumptable$__\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"$J\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"trunc\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"zext\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"sext\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"fptrunc\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"fpext\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"fptoui\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"fptosi\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"uitofp\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"sitofp\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"bitcast\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"eq\00", align 1
@.str.39 = private unnamed_addr constant [3 x i8] c"ne\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"ugt\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"uge\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"ult\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"ule\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"sgt\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"sge\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"slt\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"sle\00", align 1

@_ZN3Ice4InstC1EPNS_3CfgENS0_8InstKindEjPNS_8VariableE = hidden unnamed_addr alias void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*, i32, i32, %"class.Ice::Variable"*), void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*, i32, i32, %"class.Ice::Variable"*)* @_ZN3Ice4InstC2EPNS_3CfgENS0_8InstKindEjPNS_8VariableE
@_ZN3Ice10InstAllocaC1EPNS_3CfgEPNS_8VariableEPNS_7OperandEj = hidden unnamed_addr alias void (%"class.Ice::InstAlloca"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*, i32), void (%"class.Ice::InstAlloca"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*, i32)* @_ZN3Ice10InstAllocaC2EPNS_3CfgEPNS_8VariableEPNS_7OperandEj
@_ZN3Ice14InstArithmeticC1EPNS_3CfgENS0_6OpKindEPNS_8VariableEPNS_7OperandES7_ = hidden unnamed_addr alias void (%"class.Ice::InstArithmetic"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*), void (%"class.Ice::InstArithmetic"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*)* @_ZN3Ice14InstArithmeticC2EPNS_3CfgENS0_6OpKindEPNS_8VariableEPNS_7OperandES7_
@_ZN3Ice10InstAssignC1EPNS_3CfgEPNS_8VariableEPNS_7OperandE = hidden unnamed_addr alias void (%"class.Ice::InstAssign"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*), void (%"class.Ice::InstAssign"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*)* @_ZN3Ice10InstAssignC2EPNS_3CfgEPNS_8VariableEPNS_7OperandE
@_ZN3Ice6InstBrC1EPNS_3CfgEPNS_7OperandEPNS_7CfgNodeES6_ = hidden unnamed_addr alias void (%"class.Ice::InstBr"*, %"class.Ice::Cfg"*, %"class.Ice::Operand"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*), void (%"class.Ice::InstBr"*, %"class.Ice::Cfg"*, %"class.Ice::Operand"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)* @_ZN3Ice6InstBrC2EPNS_3CfgEPNS_7OperandEPNS_7CfgNodeES6_
@_ZN3Ice6InstBrC1EPNS_3CfgEPNS_7CfgNodeE = hidden unnamed_addr alias void (%"class.Ice::InstBr"*, %"class.Ice::Cfg"*, %"class.Ice::CfgNode"*), void (%"class.Ice::InstBr"*, %"class.Ice::Cfg"*, %"class.Ice::CfgNode"*)* @_ZN3Ice6InstBrC2EPNS_3CfgEPNS_7CfgNodeE
@_ZN3Ice8InstCastC1EPNS_3CfgENS0_6OpKindEPNS_8VariableEPNS_7OperandE = hidden unnamed_addr alias void (%"class.Ice::InstCast"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*), void (%"class.Ice::InstCast"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*)* @_ZN3Ice8InstCastC2EPNS_3CfgENS0_6OpKindEPNS_8VariableEPNS_7OperandE
@_ZN3Ice18InstExtractElementC1EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_ = hidden unnamed_addr alias void (%"class.Ice::InstExtractElement"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*), void (%"class.Ice::InstExtractElement"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*)* @_ZN3Ice18InstExtractElementC2EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_
@_ZN3Ice8InstFcmpC1EPNS_3CfgENS0_5FCondEPNS_8VariableEPNS_7OperandES7_ = hidden unnamed_addr alias void (%"class.Ice::InstFcmp"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*), void (%"class.Ice::InstFcmp"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*)* @_ZN3Ice8InstFcmpC2EPNS_3CfgENS0_5FCondEPNS_8VariableEPNS_7OperandES7_
@_ZN3Ice8InstIcmpC1EPNS_3CfgENS0_5ICondEPNS_8VariableEPNS_7OperandES7_ = hidden unnamed_addr alias void (%"class.Ice::InstIcmp"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*), void (%"class.Ice::InstIcmp"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*)* @_ZN3Ice8InstIcmpC2EPNS_3CfgENS0_5ICondEPNS_8VariableEPNS_7OperandES7_
@_ZN3Ice17InstInsertElementC1EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_S6_ = hidden unnamed_addr alias void (%"class.Ice::InstInsertElement"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*), void (%"class.Ice::InstInsertElement"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*)* @_ZN3Ice17InstInsertElementC2EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_S6_
@_ZN3Ice8InstLoadC1EPNS_3CfgEPNS_8VariableEPNS_7OperandE = hidden unnamed_addr alias void (%"class.Ice::InstLoad"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*), void (%"class.Ice::InstLoad"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*)* @_ZN3Ice8InstLoadC2EPNS_3CfgEPNS_8VariableEPNS_7OperandE
@_ZN3Ice7InstPhiC1EPNS_3CfgEjPNS_8VariableE = hidden unnamed_addr alias void (%"class.Ice::InstPhi"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Variable"*), void (%"class.Ice::InstPhi"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Variable"*)* @_ZN3Ice7InstPhiC2EPNS_3CfgEjPNS_8VariableE
@_ZN3Ice7InstRetC1EPNS_3CfgEPNS_7OperandE = hidden unnamed_addr alias void (%"class.Ice::InstRet"*, %"class.Ice::Cfg"*, %"class.Ice::Operand"*), void (%"class.Ice::InstRet"*, %"class.Ice::Cfg"*, %"class.Ice::Operand"*)* @_ZN3Ice7InstRetC2EPNS_3CfgEPNS_7OperandE
@_ZN3Ice10InstSelectC1EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_S6_ = hidden unnamed_addr alias void (%"class.Ice::InstSelect"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*), void (%"class.Ice::InstSelect"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*)* @_ZN3Ice10InstSelectC2EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_S6_
@_ZN3Ice9InstStoreC1EPNS_3CfgEPNS_7OperandES4_ = hidden unnamed_addr alias void (%"class.Ice::InstStore"*, %"class.Ice::Cfg"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*), void (%"class.Ice::InstStore"*, %"class.Ice::Cfg"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*)* @_ZN3Ice9InstStoreC2EPNS_3CfgEPNS_7OperandES4_
@_ZN3Ice10InstSwitchC1EPNS_3CfgEjPNS_7OperandEPNS_7CfgNodeE = hidden unnamed_addr alias void (%"class.Ice::InstSwitch"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Operand"*, %"class.Ice::CfgNode"*), void (%"class.Ice::InstSwitch"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Operand"*, %"class.Ice::CfgNode"*)* @_ZN3Ice10InstSwitchC2EPNS_3CfgEjPNS_7OperandEPNS_7CfgNodeE
@_ZN3Ice15InstUnreachableC1EPNS_3CfgE = hidden unnamed_addr alias void (%"class.Ice::InstUnreachable"*, %"class.Ice::Cfg"*), void (%"class.Ice::InstUnreachable"*, %"class.Ice::Cfg"*)* @_ZN3Ice15InstUnreachableC2EPNS_3CfgE
@_ZN3Ice14InstBundleLockC1EPNS_3CfgENS0_6OptionE = hidden unnamed_addr alias void (%"class.Ice::InstBundleLock"*, %"class.Ice::Cfg"*, i32), void (%"class.Ice::InstBundleLock"*, %"class.Ice::Cfg"*, i32)* @_ZN3Ice14InstBundleLockC2EPNS_3CfgENS0_6OptionE
@_ZN3Ice16InstBundleUnlockC1EPNS_3CfgE = hidden unnamed_addr alias void (%"class.Ice::InstBundleUnlock"*, %"class.Ice::Cfg"*), void (%"class.Ice::InstBundleUnlock"*, %"class.Ice::Cfg"*)* @_ZN3Ice16InstBundleUnlockC2EPNS_3CfgE
@_ZN3Ice11InstFakeDefC1EPNS_3CfgEPNS_8VariableES4_ = hidden unnamed_addr alias void (%"class.Ice::InstFakeDef"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*), void (%"class.Ice::InstFakeDef"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)* @_ZN3Ice11InstFakeDefC2EPNS_3CfgEPNS_8VariableES4_
@_ZN3Ice11InstFakeUseC1EPNS_3CfgEPNS_8VariableEj = hidden unnamed_addr alias void (%"class.Ice::InstFakeUse"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, i32), void (%"class.Ice::InstFakeUse"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, i32)* @_ZN3Ice11InstFakeUseC2EPNS_3CfgEPNS_8VariableEj
@_ZN3Ice12InstFakeKillC1EPNS_3CfgEPKNS_4InstE = hidden unnamed_addr alias void (%"class.Ice::InstFakeKill"*, %"class.Ice::Cfg"*, %"class.Ice::Inst"*), void (%"class.Ice::InstFakeKill"*, %"class.Ice::Cfg"*, %"class.Ice::Inst"*)* @_ZN3Ice12InstFakeKillC2EPNS_3CfgEPKNS_4InstE
@_ZN3Ice17InstShuffleVectorC1EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_ = hidden unnamed_addr alias void (%"class.Ice::InstShuffleVector"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*), void (%"class.Ice::InstShuffleVector"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*)* @_ZN3Ice17InstShuffleVectorC2EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_
@_ZN3Ice13InstJumpTableC1EPNS_3CfgEjPNS_7CfgNodeE = hidden unnamed_addr alias void (%"class.Ice::InstJumpTable"*, %"class.Ice::Cfg"*, i32, %"class.Ice::CfgNode"*), void (%"class.Ice::InstJumpTable"*, %"class.Ice::Cfg"*, i32, %"class.Ice::CfgNode"*)* @_ZN3Ice13InstJumpTableC2EPNS_3CfgEjPNS_7CfgNodeE
@_ZN3Ice14InstBreakpointC1EPNS_3CfgE = hidden unnamed_addr alias void (%"class.Ice::InstBreakpoint"*, %"class.Ice::Cfg"*), void (%"class.Ice::InstBreakpoint"*, %"class.Ice::Cfg"*)* @_ZN3Ice14InstBreakpointC2EPNS_3CfgE

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice4InstC2EPNS_3CfgENS0_8InstKindEjPNS_8VariableE(%"class.Ice::Inst"*, %"class.Ice::Cfg"* nocapture, i32, i32, %"class.Ice::Variable"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 1
  %7 = bitcast %"class.llvm::ilist_node"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #16
  %8 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 2
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  store i32 %12, i32* %10, align 4
  %14 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 9
  store i8* null, i8** %15, align 8
  %16 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 10
  %17 = bitcast i8* %14 to i32*
  store i32 0, i32* %17, align 8
  store %"class.Ice::Variable"* %4, %"class.Ice::Variable"** %16, align 8
  %18 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 11
  store i32 %3, i32* %18, align 8
  %19 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13
  %20 = zext i32 %3 to i64
  %21 = bitcast %"class.std::__1::vector.25"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 36, i1 false)
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %19, i64 %20) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.Ice::Operand"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.25"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %11, label %42

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.Ice::Operand"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %7
  %16 = ashr exact i64 %15, 3
  %17 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  %18 = shl i64 %1, 3
  %19 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %17, i64 %18, i64 8) #19
  %20 = bitcast i8* %19 to %"class.Ice::Operand"**
  %21 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %20, i64 %16
  %22 = ptrtoint %"class.Ice::Operand"** %21 to i64
  %23 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %20, i64 %1
  %24 = ptrtoint %"class.Ice::Operand"** %23 to i64
  %25 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 0
  %26 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %25, align 8
  %27 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %12, align 8
  %28 = icmp eq %"class.Ice::Operand"** %27, %26
  br i1 %28, label %40, label %29

29:                                               ; preds = %11, %29
  %30 = phi %"class.Ice::Operand"** [ %32, %29 ], [ %21, %11 ]
  %31 = phi %"class.Ice::Operand"** [ %33, %29 ], [ %27, %11 ]
  %32 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %30, i64 -1
  %33 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %31, i64 -1
  %34 = bitcast %"class.Ice::Operand"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.Ice::Operand"** %32 to i64*
  store i64 %35, i64* %36, align 8
  %37 = icmp eq %"class.Ice::Operand"** %33, %26
  br i1 %37, label %38, label %29

38:                                               ; preds = %29
  %39 = ptrtoint %"class.Ice::Operand"** %32 to i64
  br label %40

40:                                               ; preds = %11, %38
  %41 = phi i64 [ %39, %38 ], [ %22, %11 ]
  store i64 %41, i64* %6, align 8
  store i64 %22, i64* %13, align 8
  store i64 %24, i64* %4, align 8
  ret void

42:                                               ; preds = %2
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i8* @_ZNK3Ice4Inst11getInstNameEv(%"class.Ice::Inst"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3Ice4Inst8renumberEPNS_3CfgE(%"class.Ice::Inst"* nocapture, %"class.Ice::Cfg"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 8
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %8, %6 ], [ -1, %2 ]
  %12 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 3
  store i32 %11, i32* %12, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3Ice4Inst12deleteIfDeadEv(%"class.Ice::Inst"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 4
  store i8 1, i8* %6, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3Ice4Inst9isLastUseEPKNS_7OperandE(%"class.Ice::Inst"* nocapture readonly, %"class.Ice::Operand"* readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %59, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -18
  %10 = icmp ugt i32 %9, 14
  %11 = bitcast %"class.Ice::Operand"* %1 to %"class.Ice::Variable"*
  %12 = icmp eq %"class.Ice::Operand"* %1, null
  %13 = or i1 %12, %10
  br i1 %13, label %59, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13
  %16 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13, i32 0, i32 1
  %17 = bitcast %"class.Ice::Operand"*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.25"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = lshr exact i64 %21, 3
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %23, 0
  %25 = inttoptr i64 %20 to %"class.Ice::Operand"**
  br i1 %24, label %59, label %26

26:                                               ; preds = %14
  %27 = and i64 %22, 4294967295
  br label %28

28:                                               ; preds = %55, %26
  %29 = phi i64 [ 0, %26 ], [ %57, %55 ]
  %30 = phi i32 [ %4, %26 ], [ %56, %55 ]
  %31 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %25, i64 %29
  %32 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %31, align 8
  %33 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %32, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %55, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %32, i64 0, i32 4
  %38 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %37, align 8
  %39 = zext i32 %34 to i64
  br label %40

40:                                               ; preds = %52, %36
  %41 = phi i64 [ 0, %36 ], [ %53, %52 ]
  %42 = phi i32 [ %30, %36 ], [ %50, %52 ]
  %43 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %38, i64 %41
  %44 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %43, align 8
  %45 = icmp eq %"class.Ice::Variable"* %44, %11
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = and i32 %42, 1
  %48 = icmp ne i32 %47, 0
  br label %59

49:                                               ; preds = %40
  %50 = lshr i32 %42, 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %49
  %53 = add nuw nsw i64 %41, 1
  %54 = icmp eq i64 %53, %39
  br i1 %54, label %55, label %40

55:                                               ; preds = %52, %28
  %56 = phi i32 [ %30, %28 ], [ %50, %52 ]
  %57 = add nuw nsw i64 %29, 1
  %58 = icmp eq i64 %57, %27
  br i1 %58, label %59, label %28

59:                                               ; preds = %55, %49, %14, %2, %6, %46
  %60 = phi i1 [ %48, %46 ], [ false, %6 ], [ false, %2 ], [ false, %14 ], [ false, %49 ], [ false, %55 ]
  ret i1 %60
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice4Inst18spliceLivenessInfoEPS0_S1_(%"class.Ice::Inst"* nocapture, %"class.Ice::Inst"* nocapture readonly, %"class.Ice::Inst"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 6
  %5 = load i8, i8* %4, align 2, !range !2
  %6 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 6
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = or i8 %7, %5
  store i8 %8, i8* %6, align 2
  %9 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %2, i64 0, i32 6
  %10 = load i8, i8* %9, align 2, !range !2
  %11 = or i8 %10, %8
  store i8 %11, i8* %6, align 2
  %12 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 13
  %13 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 13, i32 0, i32 1
  %14 = bitcast %"class.Ice::Operand"*** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.25"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = lshr exact i64 %18, 3
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %20, 0
  %22 = inttoptr i64 %17 to %"class.Ice::Operand"**
  br i1 %21, label %44, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %2, i64 0, i32 10
  %25 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %24, align 8
  %26 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %25, i64 0, i32 0
  %27 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13, i32 0, i32 0
  %28 = and i64 %19, 4294967295
  br label %29

29:                                               ; preds = %23, %35
  %30 = phi i64 [ 0, %23 ], [ %42, %35 ]
  %31 = phi i32 [ 0, %23 ], [ %41, %35 ]
  %32 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %22, i64 %30
  %33 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %32, align 8
  %34 = icmp eq %"class.Ice::Operand"* %33, %26
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %27, align 8
  %37 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %36, i64 %30
  %38 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %37, align 8
  %39 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %38, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = add i32 %40, %31
  %42 = add nuw nsw i64 %30, 1
  %43 = icmp ult i64 %42, %28
  br i1 %43, label %29, label %44

44:                                               ; preds = %35, %3
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i1 zeroext true) #20
  unreachable

45:                                               ; preds = %29
  %46 = and i64 %30, 4294967295
  %47 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 14
  %48 = load i32, i32* %47, align 8
  %49 = shl nsw i32 -1, %31
  %50 = xor i32 %49, -1
  %51 = and i32 %48, %50
  %52 = add i32 %31, 1
  %53 = lshr i32 %48, %52
  %54 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %2, i64 0, i32 14
  %55 = load i32, i32* %54, align 8
  %56 = shl i32 %55, %31
  %57 = or i32 %56, %51
  %58 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %27, align 8
  %59 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %58, i64 %46
  %60 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %59, align 8
  %61 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %60, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = add i32 %62, %31
  %64 = shl i32 %53, %63
  %65 = or i32 %57, %64
  %66 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 14
  store i32 %65, i32* %66, align 8
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZN4llvm18report_fatal_errorEPKcb(i8*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: noreturn nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3Ice4Inst13isMemoryWriteEv(%"class.Ice::Inst"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice4Inst19livenessLightweightEPNS_3CfgERNS_13BitVectorTmplINS_17LivenessAllocatorEEE(%"class.Ice::Inst"* nocapture, %"class.Ice::Cfg"* nocapture readonly, %"class.Ice::BitVectorTmpl"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 14
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 24, i32 0, i32 0, i32 0
  %6 = load %"class.Ice::VariablesMetadata"*, %"class.Ice::VariablesMetadata"** %5, align 8
  %7 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13
  %8 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.25"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = lshr exact i64 %13, 3
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %3
  %18 = inttoptr i64 %12 to %"class.Ice::Operand"**
  %19 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13, i32 0, i32 0
  %20 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %2, i64 0, i32 0
  %21 = and i64 %14, 4294967295
  br label %23

22:                                               ; preds = %66, %3
  ret void

23:                                               ; preds = %70, %17
  %24 = phi %"class.Ice::Operand"** [ %18, %17 ], [ %71, %70 ]
  %25 = phi i64 [ 0, %17 ], [ %68, %70 ]
  %26 = phi i32 [ 0, %17 ], [ %67, %70 ]
  %27 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %24, i64 %25
  %28 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %27, align 8
  %29 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %28, i64 0, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %28, i64 0, i32 4
  %34 = zext i32 %30 to i64
  br label %35

35:                                               ; preds = %62, %32
  %36 = phi i64 [ 0, %32 ], [ %63, %62 ]
  %37 = phi i32 [ %26, %32 ], [ %64, %62 ]
  %38 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %33, align 8
  %39 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %38, i64 %36
  %40 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %39, align 8
  %41 = tail call zeroext i1 @_ZNK3Ice17VariablesMetadata12isMultiBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %6, %"class.Ice::Variable"* %40) #19
  br i1 %41, label %62, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %40, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = load i64*, i64** %20, align 8
  %46 = lshr i32 %44, 6
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i64, i64* %45, i64 %47
  %49 = and i32 %44, 63
  %50 = load i64, i64* %48, align 8
  %51 = zext i32 %49 to i64
  %52 = shl i64 1, %51
  %53 = and i64 %52, %50
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %42
  %56 = or i64 %52, %50
  store i64 %56, i64* %48, align 8
  %57 = icmp ult i32 %37, 32
  br i1 %57, label %58, label %62

58:                                               ; preds = %55
  %59 = shl i32 1, %37
  %60 = load i32, i32* %4, align 8
  %61 = or i32 %60, %59
  store i32 %61, i32* %4, align 8
  br label %62

62:                                               ; preds = %42, %58, %55, %35
  %63 = add nuw nsw i64 %36, 1
  %64 = add i32 %37, 1
  %65 = icmp eq i64 %63, %34
  br i1 %65, label %66, label %35

66:                                               ; preds = %62, %23
  %67 = phi i32 [ %26, %23 ], [ %64, %62 ]
  %68 = add nuw nsw i64 %25, 1
  %69 = icmp eq i64 %68, %21
  br i1 %69, label %22, label %70

70:                                               ; preds = %66
  %71 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %19, align 8
  br label %23
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK3Ice17VariablesMetadata12isMultiBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"*, %"class.Ice::Variable"*) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice4Inst8livenessEiRNS_13BitVectorTmplINS_17LivenessAllocatorEEEPNS_8LivenessEPNSt3__16vectorINS7_4pairIjiEENS_12sz_allocatorISA_NS_23LivenessAllocatorTraitsEEEEESF_(%"class.Ice::Inst"*, i32, %"class.Ice::BitVectorTmpl"* nocapture readonly dereferenceable(24), %"class.Ice::Liveness"* nocapture readonly, %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 5
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 10
  %9 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %8, align 8
  %10 = icmp eq %"class.Ice::Variable"* %9, null
  br i1 %10, label %131, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %9, i64 0, i32 6
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %128

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %9, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %3, i64 0, i32 5, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %18
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %2, i64 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = lshr i32 %22, 6
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i64, i64* %24, i64 %26
  %28 = and i32 %22, 63
  %29 = load i64, i64* %27, align 8
  %30 = zext i32 %28 to i64
  %31 = shl i64 1, %30
  %32 = and i64 %31, %29
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %123, label %34

34:                                               ; preds = %15
  %35 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 7
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %128

38:                                               ; preds = %34
  %39 = xor i64 %31, -1
  %40 = and i64 %29, %39
  store i64 %40, i64* %27, align 8
  %41 = icmp eq %"class.std::__1::vector.257"* %4, null
  br i1 %41, label %128, label %42

42:                                               ; preds = %38
  %43 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %8, align 8
  %44 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 63
  %47 = zext i32 %46 to i64
  %48 = shl i64 1, %47
  %49 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %3, i64 0, i32 7, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = lshr i32 %45, 6
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i64, i64* %50, i64 %52
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %48, %54
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %128, label %57

57:                                               ; preds = %42
  %58 = zext i32 %1 to i64
  %59 = shl nuw i64 %58, 32
  %60 = zext i32 %22 to i64
  %61 = or i64 %59, %60
  %62 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %4, i64 0, i32 0, i32 1
  %63 = load %"struct.std::__1::pair.259"*, %"struct.std::__1::pair.259"** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %65 = load %"struct.std::__1::pair.259"*, %"struct.std::__1::pair.259"** %64, align 8
  %66 = icmp ult %"struct.std::__1::pair.259"* %63, %65
  %67 = ptrtoint %"struct.std::__1::pair.259"* %65 to i64
  br i1 %66, label %68, label %73

68:                                               ; preds = %57
  %69 = bitcast %"struct.std::__1::pair.259"* %63 to i64*
  store i64 %61, i64* %69, align 4
  %70 = getelementptr inbounds %"struct.std::__1::pair.259", %"struct.std::__1::pair.259"* %63, i64 1
  %71 = ptrtoint %"struct.std::__1::pair.259"* %70 to i64
  %72 = bitcast %"struct.std::__1::pair.259"** %62 to i64*
  store i64 %71, i64* %72, align 8
  br label %128

73:                                               ; preds = %57
  %74 = ptrtoint %"struct.std::__1::pair.259"* %63 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %4, i64 0, i32 0, i32 2, i32 1, i32 0
  %76 = bitcast %"struct.std::__1::pair.259"** %62 to i64*
  %77 = bitcast %"class.std::__1::vector.257"* %4 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %74, %78
  %80 = ashr exact i64 %79, 3
  %81 = add nsw i64 %80, 1
  %82 = icmp ugt i64 %81, 2305843009213693951
  br i1 %82, label %83, label %85

83:                                               ; preds = %73
  %84 = bitcast %"class.std::__1::vector.257"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %84) #20
  unreachable

85:                                               ; preds = %73
  %86 = bitcast %"struct.std::__1::pair.259"** %64 to i64*
  %87 = sub i64 %67, %78
  %88 = ashr exact i64 %87, 3
  %89 = icmp ult i64 %88, 1152921504606846975
  br i1 %89, label %90, label %95

90:                                               ; preds = %85
  %91 = ashr exact i64 %87, 2
  %92 = icmp ult i64 %91, %81
  %93 = select i1 %92, i64 %81, i64 %91
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %90, %85
  %96 = phi i64 [ %93, %90 ], [ 2305843009213693951, %85 ]
  %97 = tail call %"struct.std::__1::pair.259"* @_ZN3Ice12sz_allocatorINSt3__14pairIjiEENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.263"* %75, i64 %96) #19
  br label %98

98:                                               ; preds = %95, %90
  %99 = phi i64 [ %96, %95 ], [ 0, %90 ]
  %100 = phi %"struct.std::__1::pair.259"* [ %97, %95 ], [ null, %90 ]
  %101 = getelementptr inbounds %"struct.std::__1::pair.259", %"struct.std::__1::pair.259"* %100, i64 %80
  %102 = getelementptr inbounds %"struct.std::__1::pair.259", %"struct.std::__1::pair.259"* %100, i64 %99
  %103 = ptrtoint %"struct.std::__1::pair.259"* %102 to i64
  %104 = bitcast %"struct.std::__1::pair.259"* %101 to i64*
  store i64 %61, i64* %104, align 4
  %105 = getelementptr inbounds %"struct.std::__1::pair.259", %"struct.std::__1::pair.259"* %101, i64 1
  %106 = ptrtoint %"struct.std::__1::pair.259"* %105 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %4, i64 0, i32 0, i32 0
  %108 = load %"struct.std::__1::pair.259"*, %"struct.std::__1::pair.259"** %107, align 8
  %109 = load %"struct.std::__1::pair.259"*, %"struct.std::__1::pair.259"** %62, align 8
  %110 = icmp eq %"struct.std::__1::pair.259"* %109, %108
  br i1 %110, label %120, label %111

111:                                              ; preds = %98, %111
  %112 = phi %"struct.std::__1::pair.259"* [ %114, %111 ], [ %101, %98 ]
  %113 = phi %"struct.std::__1::pair.259"* [ %115, %111 ], [ %109, %98 ]
  %114 = getelementptr inbounds %"struct.std::__1::pair.259", %"struct.std::__1::pair.259"* %112, i64 -1
  %115 = getelementptr inbounds %"struct.std::__1::pair.259", %"struct.std::__1::pair.259"* %113, i64 -1
  %116 = bitcast %"struct.std::__1::pair.259"* %115 to i64*
  %117 = bitcast %"struct.std::__1::pair.259"* %114 to i64*
  %118 = load i64, i64* %116, align 4
  store i64 %118, i64* %117, align 4
  %119 = icmp eq %"struct.std::__1::pair.259"* %115, %108
  br i1 %119, label %120, label %111

120:                                              ; preds = %111, %98
  %121 = phi %"struct.std::__1::pair.259"* [ %101, %98 ], [ %114, %111 ]
  %122 = ptrtoint %"struct.std::__1::pair.259"* %121 to i64
  store i64 %122, i64* %77, align 8
  store i64 %106, i64* %76, align 8
  store i64 %103, i64* %86, align 8
  br label %128

123:                                              ; preds = %15
  %124 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 6
  %125 = load i8, i8* %124, align 2, !range !2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %123
  store i8 1, i8* %7, align 1
  br label %291

128:                                              ; preds = %42, %34, %123, %11, %38, %68, %120
  %129 = load i8, i8* %7, align 1
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %291

131:                                              ; preds = %6, %128
  %132 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 2
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %133, 12
  %135 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 14
  store i32 0, i32* %135, align 8
  %136 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13
  %137 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13, i32 0, i32 1
  %138 = bitcast %"class.Ice::Operand"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.std::__1::vector.25"* %136 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %139, %141
  %143 = lshr exact i64 %142, 3
  %144 = trunc i64 %143 to i32
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %291, label %146

146:                                              ; preds = %131
  %147 = inttoptr i64 %141 to %"class.Ice::Operand"**
  %148 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13, i32 0, i32 0
  %149 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %3, i64 0, i32 5, i32 0, i32 0
  %150 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %2, i64 0, i32 0
  %151 = icmp eq %"class.std::__1::vector.257"* %5, null
  %152 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %3, i64 0, i32 7, i32 0
  %153 = zext i32 %1 to i64
  %154 = shl nuw i64 %153, 32
  %155 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %5, i64 0, i32 0, i32 1
  %156 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %157 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %5, i64 0, i32 0, i32 2, i32 1, i32 0
  %158 = bitcast %"struct.std::__1::pair.259"** %155 to i64*
  %159 = bitcast %"class.std::__1::vector.257"* %5 to i64*
  %160 = bitcast %"struct.std::__1::pair.259"** %156 to i64*
  %161 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %5, i64 0, i32 0, i32 0
  %162 = and i64 %143, 4294967295
  br label %163

163:                                              ; preds = %289, %146
  %164 = phi %"class.Ice::Operand"** [ %147, %146 ], [ %290, %289 ]
  %165 = phi i64 [ 0, %146 ], [ %287, %289 ]
  %166 = phi i32 [ 0, %146 ], [ %286, %289 ]
  %167 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %164, i64 %165
  %168 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %167, align 8
  %169 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %168, i64 0, i32 3
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %285, label %172

172:                                              ; preds = %163
  %173 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %168, i64 0, i32 4
  %174 = zext i32 %170 to i64
  br label %175

175:                                              ; preds = %281, %172
  %176 = phi i64 [ 0, %172 ], [ %282, %281 ]
  %177 = phi i32 [ %166, %172 ], [ %283, %281 ]
  %178 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %173, align 8
  %179 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %178, i64 %176
  %180 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %179, align 8
  %181 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %180, i64 0, i32 6
  %182 = load i8, i8* %181, align 1, !range !2
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %184, label %281

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %180, i64 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = zext i32 %186 to i64
  %188 = load i32*, i32** %149, align 8
  %189 = getelementptr inbounds i32, i32* %188, i64 %187
  %190 = load i32, i32* %189, align 4
  %191 = load i64*, i64** %150, align 8
  %192 = lshr i32 %190, 6
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds i64, i64* %191, i64 %193
  %195 = and i32 %190, 63
  %196 = load i64, i64* %194, align 8
  %197 = zext i32 %195 to i64
  %198 = shl i64 1, %197
  %199 = and i64 %198, %196
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %281

201:                                              ; preds = %184
  %202 = icmp ult i32 %177, 32
  br i1 %202, label %203, label %207

203:                                              ; preds = %201
  %204 = shl i32 1, %177
  %205 = load i32, i32* %135, align 8
  %206 = or i32 %205, %204
  store i32 %206, i32* %135, align 8
  br label %207

207:                                              ; preds = %201, %203
  br i1 %134, label %281, label %208

208:                                              ; preds = %207
  %209 = load i64*, i64** %150, align 8
  %210 = getelementptr inbounds i64, i64* %209, i64 %193
  %211 = load i64, i64* %210, align 8
  %212 = or i64 %211, %198
  store i64 %212, i64* %210, align 8
  br i1 %151, label %281, label %213

213:                                              ; preds = %208
  %214 = load i32, i32* %185, align 8
  %215 = and i32 %214, 63
  %216 = zext i32 %215 to i64
  %217 = shl i64 1, %216
  %218 = load i64*, i64** %152, align 8
  %219 = lshr i32 %214, 6
  %220 = zext i32 %219 to i64
  %221 = getelementptr inbounds i64, i64* %218, i64 %220
  %222 = load i64, i64* %221, align 8
  %223 = and i64 %217, %222
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %281, label %225

225:                                              ; preds = %213
  %226 = zext i32 %190 to i64
  %227 = or i64 %154, %226
  %228 = load %"struct.std::__1::pair.259"*, %"struct.std::__1::pair.259"** %155, align 8
  %229 = load %"struct.std::__1::pair.259"*, %"struct.std::__1::pair.259"** %156, align 8
  %230 = icmp ult %"struct.std::__1::pair.259"* %228, %229
  %231 = ptrtoint %"struct.std::__1::pair.259"* %229 to i64
  br i1 %230, label %232, label %236

232:                                              ; preds = %225
  %233 = bitcast %"struct.std::__1::pair.259"* %228 to i64*
  store i64 %227, i64* %233, align 4
  %234 = getelementptr inbounds %"struct.std::__1::pair.259", %"struct.std::__1::pair.259"* %228, i64 1
  %235 = ptrtoint %"struct.std::__1::pair.259"* %234 to i64
  store i64 %235, i64* %158, align 8
  br label %281

236:                                              ; preds = %225
  %237 = ptrtoint %"struct.std::__1::pair.259"* %228 to i64
  %238 = load i64, i64* %159, align 8
  %239 = sub i64 %237, %238
  %240 = ashr exact i64 %239, 3
  %241 = add nsw i64 %240, 1
  %242 = icmp ugt i64 %241, 2305843009213693951
  br i1 %242, label %243, label %245

243:                                              ; preds = %236
  %244 = bitcast %"class.std::__1::vector.257"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %244) #20
  unreachable

245:                                              ; preds = %236
  %246 = sub i64 %231, %238
  %247 = ashr exact i64 %246, 3
  %248 = icmp ult i64 %247, 1152921504606846975
  br i1 %248, label %249, label %254

249:                                              ; preds = %245
  %250 = ashr exact i64 %246, 2
  %251 = icmp ult i64 %250, %241
  %252 = select i1 %251, i64 %241, i64 %250
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %257, label %254

254:                                              ; preds = %249, %245
  %255 = phi i64 [ %252, %249 ], [ 2305843009213693951, %245 ]
  %256 = tail call %"struct.std::__1::pair.259"* @_ZN3Ice12sz_allocatorINSt3__14pairIjiEENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.263"* %157, i64 %255) #19
  br label %257

257:                                              ; preds = %254, %249
  %258 = phi i64 [ %255, %254 ], [ 0, %249 ]
  %259 = phi %"struct.std::__1::pair.259"* [ %256, %254 ], [ null, %249 ]
  %260 = getelementptr inbounds %"struct.std::__1::pair.259", %"struct.std::__1::pair.259"* %259, i64 %240
  %261 = getelementptr inbounds %"struct.std::__1::pair.259", %"struct.std::__1::pair.259"* %259, i64 %258
  %262 = ptrtoint %"struct.std::__1::pair.259"* %261 to i64
  %263 = bitcast %"struct.std::__1::pair.259"* %260 to i64*
  store i64 %227, i64* %263, align 4
  %264 = getelementptr inbounds %"struct.std::__1::pair.259", %"struct.std::__1::pair.259"* %260, i64 1
  %265 = ptrtoint %"struct.std::__1::pair.259"* %264 to i64
  %266 = load %"struct.std::__1::pair.259"*, %"struct.std::__1::pair.259"** %161, align 8
  %267 = load %"struct.std::__1::pair.259"*, %"struct.std::__1::pair.259"** %155, align 8
  %268 = icmp eq %"struct.std::__1::pair.259"* %267, %266
  br i1 %268, label %278, label %269

269:                                              ; preds = %257, %269
  %270 = phi %"struct.std::__1::pair.259"* [ %272, %269 ], [ %260, %257 ]
  %271 = phi %"struct.std::__1::pair.259"* [ %273, %269 ], [ %267, %257 ]
  %272 = getelementptr inbounds %"struct.std::__1::pair.259", %"struct.std::__1::pair.259"* %270, i64 -1
  %273 = getelementptr inbounds %"struct.std::__1::pair.259", %"struct.std::__1::pair.259"* %271, i64 -1
  %274 = bitcast %"struct.std::__1::pair.259"* %273 to i64*
  %275 = bitcast %"struct.std::__1::pair.259"* %272 to i64*
  %276 = load i64, i64* %274, align 4
  store i64 %276, i64* %275, align 4
  %277 = icmp eq %"struct.std::__1::pair.259"* %273, %266
  br i1 %277, label %278, label %269

278:                                              ; preds = %269, %257
  %279 = phi %"struct.std::__1::pair.259"* [ %260, %257 ], [ %272, %269 ]
  %280 = ptrtoint %"struct.std::__1::pair.259"* %279 to i64
  store i64 %280, i64* %159, align 8
  store i64 %265, i64* %158, align 8
  store i64 %262, i64* %160, align 8
  br label %281

281:                                              ; preds = %213, %184, %175, %207, %208, %232, %278
  %282 = add nuw nsw i64 %176, 1
  %283 = add i32 %177, 1
  %284 = icmp eq i64 %282, %174
  br i1 %284, label %285, label %175

285:                                              ; preds = %281, %163
  %286 = phi i32 [ %166, %163 ], [ %283, %281 ]
  %287 = add nuw nsw i64 %165, 1
  %288 = icmp eq i64 %287, %162
  br i1 %288, label %291, label %289

289:                                              ; preds = %285
  %290 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %148, align 8
  br label %163

291:                                              ; preds = %285, %131, %127, %128
  %292 = phi i1 [ false, %128 ], [ false, %127 ], [ true, %131 ], [ true, %285 ]
  ret i1 %292
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10InstAllocaC2EPNS_3CfgEPNS_8VariableEPNS_7OperandEj(%"class.Ice::InstAlloca"*, %"class.Ice::Cfg"* nocapture, %"class.Ice::Variable"*, %"class.Ice::Operand"*, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.Ice::InstAlloca", %"class.Ice::InstAlloca"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.llvm::ilist_node"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #16
  %8 = getelementptr inbounds %"class.Ice::InstAlloca", %"class.Ice::InstAlloca"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.Ice::InstAlloca", %"class.Ice::InstAlloca"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.Ice::InstAlloca", %"class.Ice::InstAlloca"* %0, i64 0, i32 0, i32 0, i32 3
  %11 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  store i32 %12, i32* %10, align 4
  %14 = getelementptr inbounds %"class.Ice::InstAlloca", %"class.Ice::InstAlloca"* %0, i64 0, i32 0, i32 0, i32 4
  %15 = getelementptr inbounds %"class.Ice::InstAlloca", %"class.Ice::InstAlloca"* %0, i64 0, i32 0, i32 0, i32 9
  store i8* null, i8** %15, align 8
  %16 = getelementptr inbounds %"class.Ice::InstAlloca", %"class.Ice::InstAlloca"* %0, i64 0, i32 0, i32 0, i32 10
  %17 = bitcast i8* %14 to i32*
  store i32 0, i32* %17, align 8
  store %"class.Ice::Variable"* %2, %"class.Ice::Variable"** %16, align 8
  %18 = getelementptr inbounds %"class.Ice::InstAlloca", %"class.Ice::InstAlloca"* %0, i64 0, i32 0, i32 0, i32 11
  store i32 1, i32* %18, align 8
  %19 = getelementptr inbounds %"class.Ice::InstAlloca", %"class.Ice::InstAlloca"* %0, i64 0, i32 0, i32 0, i32 13
  %20 = bitcast %"class.std::__1::vector.25"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %19, i64 1) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice10InstAllocaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %21 = getelementptr inbounds %"class.Ice::InstAlloca", %"class.Ice::InstAlloca"* %0, i64 0, i32 1
  store i32 %4, i32* %21, align 4
  %22 = getelementptr inbounds %"class.Ice::InstAlloca", %"class.Ice::InstAlloca"* %0, i64 0, i32 2
  store i8 0, i8* %22, align 8
  %23 = bitcast %"class.Ice::InstAlloca"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %23, %"class.Ice::Operand"* %3) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"*, %"class.Ice::Operand"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.Ice::Operand"* %1 to i64
  %4 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13
  %5 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13, i32 0, i32 1
  %6 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %5, align 8
  %7 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %7, align 8
  %9 = icmp eq %"class.Ice::Operand"** %6, %8
  %10 = ptrtoint %"class.Ice::Operand"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.Ice::Operand"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %6, i64 1
  %14 = ptrtoint %"class.Ice::Operand"** %13 to i64
  %15 = bitcast %"class.Ice::Operand"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %68

16:                                               ; preds = %2
  %17 = ptrtoint %"class.Ice::Operand"** %6 to i64
  %18 = bitcast %"class.Ice::Operand"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.25"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.25"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #20
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.Ice::Operand"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %35, %32 ], [ 2305843009213693951, %27 ]
  %39 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  %40 = shl i64 %38, 3
  %41 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %39, i64 %40, i64 8) #19
  %42 = bitcast i8* %41 to %"class.Ice::Operand"**
  br label %43

43:                                               ; preds = %37, %32
  %44 = phi i64 [ %38, %37 ], [ 0, %32 ]
  %45 = phi %"class.Ice::Operand"** [ %42, %37 ], [ null, %32 ]
  %46 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %45, i64 %22
  %47 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %45, i64 %44
  %48 = ptrtoint %"class.Ice::Operand"** %47 to i64
  %49 = bitcast %"class.Ice::Operand"** %46 to i64*
  store i64 %3, i64* %49, align 8
  %50 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %46, i64 1
  %51 = ptrtoint %"class.Ice::Operand"** %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %4, i64 0, i32 0, i32 0
  %53 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %52, align 8
  %54 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %5, align 8
  %55 = icmp eq %"class.Ice::Operand"** %54, %53
  br i1 %55, label %65, label %56

56:                                               ; preds = %43, %56
  %57 = phi %"class.Ice::Operand"** [ %59, %56 ], [ %46, %43 ]
  %58 = phi %"class.Ice::Operand"** [ %60, %56 ], [ %54, %43 ]
  %59 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %57, i64 -1
  %60 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %58, i64 -1
  %61 = bitcast %"class.Ice::Operand"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.Ice::Operand"** %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = icmp eq %"class.Ice::Operand"** %60, %53
  br i1 %64, label %65, label %56

65:                                               ; preds = %56, %43
  %66 = phi %"class.Ice::Operand"** [ %46, %43 ], [ %59, %56 ]
  %67 = ptrtoint %"class.Ice::Operand"** %66 to i64
  store i64 %67, i64* %19, align 8
  store i64 %51, i64* %18, align 8
  store i64 %48, i64* %28, align 8
  br label %68

68:                                               ; preds = %11, %65
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14InstArithmeticC2EPNS_3CfgENS0_6OpKindEPNS_8VariableEPNS_7OperandES7_(%"class.Ice::InstArithmetic"*, %"class.Ice::Cfg"* nocapture, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.Ice::InstArithmetic", %"class.Ice::InstArithmetic"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.llvm::ilist_node"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #16
  %9 = getelementptr inbounds %"class.Ice::InstArithmetic", %"class.Ice::InstArithmetic"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.Ice::InstArithmetic", %"class.Ice::InstArithmetic"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 2, i32* %10, align 8
  %11 = getelementptr inbounds %"class.Ice::InstArithmetic", %"class.Ice::InstArithmetic"* %0, i64 0, i32 0, i32 0, i32 3
  %12 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  store i32 %13, i32* %11, align 4
  %15 = getelementptr inbounds %"class.Ice::InstArithmetic", %"class.Ice::InstArithmetic"* %0, i64 0, i32 0, i32 0, i32 4
  %16 = getelementptr inbounds %"class.Ice::InstArithmetic", %"class.Ice::InstArithmetic"* %0, i64 0, i32 0, i32 0, i32 9
  store i8* null, i8** %16, align 8
  %17 = getelementptr inbounds %"class.Ice::InstArithmetic", %"class.Ice::InstArithmetic"* %0, i64 0, i32 0, i32 0, i32 10
  %18 = bitcast i8* %15 to i32*
  store i32 0, i32* %18, align 8
  store %"class.Ice::Variable"* %3, %"class.Ice::Variable"** %17, align 8
  %19 = getelementptr inbounds %"class.Ice::InstArithmetic", %"class.Ice::InstArithmetic"* %0, i64 0, i32 0, i32 0, i32 11
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.Ice::InstArithmetic", %"class.Ice::InstArithmetic"* %0, i64 0, i32 0, i32 0, i32 13
  %21 = bitcast %"class.std::__1::vector.25"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %20, i64 2) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice14InstArithmeticE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %22 = getelementptr inbounds %"class.Ice::InstArithmetic", %"class.Ice::InstArithmetic"* %0, i64 0, i32 1
  store i32 %2, i32* %22, align 4
  %23 = bitcast %"class.Ice::InstArithmetic"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %23, %"class.Ice::Operand"* %4) #18
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %23, %"class.Ice::Operand"* %5) #18
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i8* @_ZNK3Ice14InstArithmetic11getInstNameEv(%"class.Ice::InstArithmetic"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i8* @_ZN3Ice14InstArithmetic9getOpNameENS0_6OpKindE(i32) local_unnamed_addr #1 align 2 {
  %2 = icmp slt i32 %0, 18
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = zext i32 %0 to i64
  %5 = getelementptr inbounds [18 x %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_"], [18 x %"struct.Ice::(anonymous namespace)::InstArithmeticAttributes_"]* @_ZN3Ice12_GLOBAL__N_124InstArithmeticAttributesE, i64 0, i64 %4, i32 0
  %6 = load i8*, i8** %5, align 16
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i8* [ %6, %3 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), %1 ]
  ret i8* %8
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3Ice14InstArithmetic13isCommutativeEv(%"class.Ice::InstArithmetic"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstArithmetic", %"class.Ice::InstArithmetic"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = zext i32 %3 to i64
  %5 = lshr i64 229427, %4
  %6 = and i64 %5, 1
  %7 = icmp ne i64 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10InstAssignC2EPNS_3CfgEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstAssign"*, %"class.Ice::Cfg"* nocapture, %"class.Ice::Variable"*, %"class.Ice::Operand"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.Ice::InstAssign", %"class.Ice::InstAssign"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.llvm::ilist_node"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #16
  %7 = getelementptr inbounds %"class.Ice::InstAssign", %"class.Ice::InstAssign"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.Ice::InstAssign", %"class.Ice::InstAssign"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 17, i32* %8, align 8
  %9 = getelementptr inbounds %"class.Ice::InstAssign", %"class.Ice::InstAssign"* %0, i64 0, i32 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  store i32 %11, i32* %9, align 4
  %13 = getelementptr inbounds %"class.Ice::InstAssign", %"class.Ice::InstAssign"* %0, i64 0, i32 0, i32 0, i32 4
  %14 = getelementptr inbounds %"class.Ice::InstAssign", %"class.Ice::InstAssign"* %0, i64 0, i32 0, i32 0, i32 9
  store i8* null, i8** %14, align 8
  %15 = getelementptr inbounds %"class.Ice::InstAssign", %"class.Ice::InstAssign"* %0, i64 0, i32 0, i32 0, i32 10
  %16 = bitcast i8* %13 to i32*
  store i32 0, i32* %16, align 8
  store %"class.Ice::Variable"* %2, %"class.Ice::Variable"** %15, align 8
  %17 = getelementptr inbounds %"class.Ice::InstAssign", %"class.Ice::InstAssign"* %0, i64 0, i32 0, i32 0, i32 11
  store i32 1, i32* %17, align 8
  %18 = getelementptr inbounds %"class.Ice::InstAssign", %"class.Ice::InstAssign"* %0, i64 0, i32 0, i32 0, i32 13
  %19 = bitcast %"class.std::__1::vector.25"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %18, i64 1) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice10InstAssignE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %20 = bitcast %"class.Ice::InstAssign"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %20, %"class.Ice::Operand"* %3) #18
  ret void
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3Ice10InstAssign11isVarAssignEv(%"class.Ice::InstAssign"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstAssign", %"class.Ice::InstAssign"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %3 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %2, align 8
  %4 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -18
  %8 = icmp ult i32 %7, 15
  ret i1 %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice6InstBrC2EPNS_3CfgEPNS_7OperandEPNS_7CfgNodeES6_(%"class.Ice::InstBr"*, %"class.Ice::Cfg"* nocapture, %"class.Ice::Operand"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.llvm::ilist_node"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #16
  %8 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 3
  %11 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  store i32 %12, i32* %10, align 4
  %14 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 4
  %15 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 9
  %16 = bitcast i8* %14 to i32*
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 11
  %18 = bitcast i8** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  store i32 1, i32* %17, align 8
  %19 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 13
  %20 = bitcast %"class.std::__1::vector.25"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %19, i64 1) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice6InstBrE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %21 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 1
  store %"class.Ice::CfgNode"* %4, %"class.Ice::CfgNode"** %21, align 8
  %22 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 2
  store %"class.Ice::CfgNode"* %3, %"class.Ice::CfgNode"** %22, align 8
  %23 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %2, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp ne i32 %24, 1
  %26 = icmp eq %"class.Ice::Operand"* %2, null
  %27 = or i1 %26, %25
  %28 = ptrtoint %"class.Ice::CfgNode"* %3 to i64
  br i1 %27, label %36, label %29

29:                                               ; preds = %5
  %30 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %2, i64 1, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.Ice::CfgNode"** %21 to i64*
  store i64 %28, i64* %34, align 8
  br label %35

35:                                               ; preds = %29, %33
  store %"class.Ice::CfgNode"* null, %"class.Ice::CfgNode"** %22, align 8
  br label %41

36:                                               ; preds = %5
  %37 = icmp eq %"class.Ice::CfgNode"* %3, %4
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  store %"class.Ice::CfgNode"* null, %"class.Ice::CfgNode"** %22, align 8
  br label %41

39:                                               ; preds = %36
  %40 = bitcast %"class.Ice::InstBr"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %40, %"class.Ice::Operand"* %2) #18
  br label %41

41:                                               ; preds = %38, %39, %35
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice6InstBrC2EPNS_3CfgEPNS_7CfgNodeE(%"class.Ice::InstBr"*, %"class.Ice::Cfg"* nocapture, %"class.Ice::CfgNode"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.llvm::ilist_node"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #16
  %6 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 3, i32* %7, align 8
  %8 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 3
  %9 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  store i32 %10, i32* %8, align 4
  %12 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 4
  %13 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 9
  %14 = bitcast i8* %12 to i32*
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 13
  %16 = bitcast %"class.std::__1::vector.25"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 36, i1 false) #16
  %17 = bitcast i8** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false)
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %15, i64 0) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice6InstBrE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %18 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 1
  store %"class.Ice::CfgNode"* %2, %"class.Ice::CfgNode"** %18, align 8
  %19 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 2
  store %"class.Ice::CfgNode"* null, %"class.Ice::CfgNode"** %19, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK3Ice6InstBr18getTerminatorEdgesEv(%"class.std::__1::vector.234"* noalias sret, %"class.Ice::InstBr"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.234"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #16
  %7 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %1, i64 0, i32 2
  %8 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %7, align 8
  %9 = icmp eq %"class.Ice::CfgNode"* %8, null
  %10 = select i1 %9, i64 1, i64 2
  tail call void @_ZNSt3__16vectorIPN3Ice7CfgNodeENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.234"* %0, i64 %10) #18
  %11 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %1, i64 0, i32 1
  %12 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %4, align 8
  %13 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %5, align 8
  %14 = icmp eq %"class.Ice::CfgNode"** %12, %13
  %15 = ptrtoint %"class.Ice::CfgNode"** %13 to i64
  br i1 %14, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.Ice::CfgNode"** %11 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.Ice::CfgNode"** %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %12, i64 1
  %21 = ptrtoint %"class.Ice::CfgNode"** %20 to i64
  %22 = bitcast %"class.Ice::CfgNode"*** %4 to i64*
  store i64 %21, i64* %22, align 8
  br label %79

23:                                               ; preds = %2
  %24 = ptrtoint %"class.Ice::CfgNode"** %12 to i64
  %25 = bitcast %"class.Ice::CfgNode"*** %4 to i64*
  %26 = bitcast %"class.std::__1::vector.234"* %0 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 2305843009213693951
  %32 = inttoptr i64 %27 to %"class.Ice::CfgNode"**
  br i1 %31, label %33, label %35

33:                                               ; preds = %23
  %34 = bitcast %"class.std::__1::vector.234"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #20
  unreachable

35:                                               ; preds = %23
  %36 = bitcast %"class.Ice::CfgNode"*** %5 to i64*
  %37 = sub i64 %15, %27
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %38, 1152921504606846975
  br i1 %39, label %40, label %45

40:                                               ; preds = %35
  %41 = ashr exact i64 %37, 2
  %42 = icmp ult i64 %41, %30
  %43 = select i1 %42, i64 %30, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40, %35
  %46 = phi i64 [ %43, %40 ], [ 2305843009213693951, %35 ]
  %47 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  %48 = shl i64 %46, 3
  %49 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %47, i64 %48, i64 8) #19
  %50 = bitcast i8* %49 to %"class.Ice::CfgNode"**
  %51 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %3, align 8
  %52 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %4, align 8
  br label %53

53:                                               ; preds = %45, %40
  %54 = phi %"class.Ice::CfgNode"** [ %52, %45 ], [ %12, %40 ]
  %55 = phi %"class.Ice::CfgNode"** [ %51, %45 ], [ %32, %40 ]
  %56 = phi i64 [ %46, %45 ], [ 0, %40 ]
  %57 = phi %"class.Ice::CfgNode"** [ %50, %45 ], [ null, %40 ]
  %58 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %57, i64 %29
  %59 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %57, i64 %56
  %60 = ptrtoint %"class.Ice::CfgNode"** %59 to i64
  %61 = bitcast %"class.Ice::CfgNode"** %11 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.Ice::CfgNode"** %58 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %58, i64 1
  %65 = ptrtoint %"class.Ice::CfgNode"** %64 to i64
  %66 = icmp eq %"class.Ice::CfgNode"** %54, %55
  br i1 %66, label %76, label %67

67:                                               ; preds = %53, %67
  %68 = phi %"class.Ice::CfgNode"** [ %70, %67 ], [ %58, %53 ]
  %69 = phi %"class.Ice::CfgNode"** [ %71, %67 ], [ %54, %53 ]
  %70 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %68, i64 -1
  %71 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %69, i64 -1
  %72 = bitcast %"class.Ice::CfgNode"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.Ice::CfgNode"** %70 to i64*
  store i64 %73, i64* %74, align 8
  %75 = icmp eq %"class.Ice::CfgNode"** %71, %55
  br i1 %75, label %76, label %67

76:                                               ; preds = %67, %53
  %77 = phi %"class.Ice::CfgNode"** [ %58, %53 ], [ %70, %67 ]
  %78 = ptrtoint %"class.Ice::CfgNode"** %77 to i64
  store i64 %78, i64* %26, align 8
  store i64 %65, i64* %25, align 8
  store i64 %60, i64* %36, align 8
  br label %79

79:                                               ; preds = %16, %76
  %80 = phi %"class.Ice::CfgNode"** [ %20, %16 ], [ %64, %76 ]
  %81 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %7, align 8
  %82 = icmp eq %"class.Ice::CfgNode"* %81, null
  %83 = ptrtoint %"class.Ice::CfgNode"* %81 to i64
  br i1 %82, label %147, label %84

84:                                               ; preds = %79
  %85 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %5, align 8
  %86 = icmp eq %"class.Ice::CfgNode"** %80, %85
  br i1 %86, label %92, label %87

87:                                               ; preds = %84
  %88 = bitcast %"class.Ice::CfgNode"** %80 to i64*
  store i64 %83, i64* %88, align 8
  %89 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %80, i64 1
  %90 = ptrtoint %"class.Ice::CfgNode"** %89 to i64
  %91 = bitcast %"class.Ice::CfgNode"*** %4 to i64*
  store i64 %90, i64* %91, align 8
  br label %147

92:                                               ; preds = %84
  %93 = ptrtoint %"class.Ice::CfgNode"** %85 to i64
  %94 = bitcast %"class.Ice::CfgNode"*** %4 to i64*
  %95 = bitcast %"class.std::__1::vector.234"* %0 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %93, %96
  %98 = ashr exact i64 %97, 3
  %99 = add nsw i64 %98, 1
  %100 = icmp ugt i64 %99, 2305843009213693951
  %101 = inttoptr i64 %96 to %"class.Ice::CfgNode"**
  br i1 %100, label %102, label %104

102:                                              ; preds = %92
  %103 = bitcast %"class.std::__1::vector.234"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %103) #20
  unreachable

104:                                              ; preds = %92
  %105 = bitcast %"class.Ice::CfgNode"*** %5 to i64*
  %106 = icmp ult i64 %98, 1152921504606846975
  br i1 %106, label %107, label %112

107:                                              ; preds = %104
  %108 = ashr exact i64 %97, 2
  %109 = icmp ult i64 %108, %99
  %110 = select i1 %109, i64 %99, i64 %108
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %122, label %112

112:                                              ; preds = %107, %104
  %113 = phi i64 [ %110, %107 ], [ 2305843009213693951, %104 ]
  %114 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  %115 = shl i64 %113, 3
  %116 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %114, i64 %115, i64 8) #19
  %117 = bitcast i8* %116 to %"class.Ice::CfgNode"**
  %118 = bitcast %"class.Ice::CfgNode"** %7 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %3, align 8
  %121 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %4, align 8
  br label %122

122:                                              ; preds = %107, %112
  %123 = phi %"class.Ice::CfgNode"** [ %121, %112 ], [ %80, %107 ]
  %124 = phi %"class.Ice::CfgNode"** [ %120, %112 ], [ %101, %107 ]
  %125 = phi i64 [ %119, %112 ], [ %83, %107 ]
  %126 = phi i64 [ %113, %112 ], [ 0, %107 ]
  %127 = phi %"class.Ice::CfgNode"** [ %117, %112 ], [ null, %107 ]
  %128 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %127, i64 %98
  %129 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %127, i64 %126
  %130 = ptrtoint %"class.Ice::CfgNode"** %129 to i64
  %131 = bitcast %"class.Ice::CfgNode"** %128 to i64*
  store i64 %125, i64* %131, align 8
  %132 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %128, i64 1
  %133 = ptrtoint %"class.Ice::CfgNode"** %132 to i64
  %134 = icmp eq %"class.Ice::CfgNode"** %123, %124
  br i1 %134, label %144, label %135

135:                                              ; preds = %122, %135
  %136 = phi %"class.Ice::CfgNode"** [ %138, %135 ], [ %128, %122 ]
  %137 = phi %"class.Ice::CfgNode"** [ %139, %135 ], [ %123, %122 ]
  %138 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %136, i64 -1
  %139 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %137, i64 -1
  %140 = bitcast %"class.Ice::CfgNode"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.Ice::CfgNode"** %138 to i64*
  store i64 %141, i64* %142, align 8
  %143 = icmp eq %"class.Ice::CfgNode"** %139, %124
  br i1 %143, label %144, label %135

144:                                              ; preds = %135, %122
  %145 = phi %"class.Ice::CfgNode"** [ %128, %122 ], [ %138, %135 ]
  %146 = ptrtoint %"class.Ice::CfgNode"** %145 to i64
  store i64 %146, i64* %95, align 8
  store i64 %133, i64* %94, align 8
  store i64 %130, i64* %105, align 8
  br label %147

147:                                              ; preds = %144, %87, %79
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice7CfgNodeENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.234"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.Ice::CfgNode"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.234"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %11, label %42

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.Ice::CfgNode"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %7
  %16 = ashr exact i64 %15, 3
  %17 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  %18 = shl i64 %1, 3
  %19 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %17, i64 %18, i64 8) #19
  %20 = bitcast i8* %19 to %"class.Ice::CfgNode"**
  %21 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %20, i64 %16
  %22 = ptrtoint %"class.Ice::CfgNode"** %21 to i64
  %23 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %20, i64 %1
  %24 = ptrtoint %"class.Ice::CfgNode"** %23 to i64
  %25 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 0
  %26 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %25, align 8
  %27 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %12, align 8
  %28 = icmp eq %"class.Ice::CfgNode"** %27, %26
  br i1 %28, label %40, label %29

29:                                               ; preds = %11, %29
  %30 = phi %"class.Ice::CfgNode"** [ %32, %29 ], [ %21, %11 ]
  %31 = phi %"class.Ice::CfgNode"** [ %33, %29 ], [ %27, %11 ]
  %32 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %30, i64 -1
  %33 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %31, i64 -1
  %34 = bitcast %"class.Ice::CfgNode"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.Ice::CfgNode"** %32 to i64*
  store i64 %35, i64* %36, align 8
  %37 = icmp eq %"class.Ice::CfgNode"** %33, %26
  br i1 %37, label %38, label %29

38:                                               ; preds = %29
  %39 = ptrtoint %"class.Ice::CfgNode"** %32 to i64
  br label %40

40:                                               ; preds = %11, %38
  %41 = phi i64 [ %39, %38 ], [ %22, %11 ]
  store i64 %41, i64* %6, align 8
  store i64 %22, i64* %13, align 8
  store i64 %24, i64* %4, align 8
  ret void

42:                                               ; preds = %2
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice6InstBr12repointEdgesEPNS_7CfgNodeES2_(%"class.Ice::InstBr"* nocapture, %"class.Ice::CfgNode"* readnone, %"class.Ice::CfgNode"*) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 1
  %5 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %4, align 8
  %6 = icmp eq %"class.Ice::CfgNode"* %5, %1
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  store %"class.Ice::CfgNode"* %2, %"class.Ice::CfgNode"** %4, align 8
  br label %8

8:                                                ; preds = %7, %3
  %9 = phi i1 [ true, %7 ], [ false, %3 ]
  %10 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 2
  %11 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %10, align 8
  %12 = icmp eq %"class.Ice::CfgNode"* %11, %1
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  store %"class.Ice::CfgNode"* %2, %"class.Ice::CfgNode"** %10, align 8
  br label %14

14:                                               ; preds = %13, %8
  %15 = phi i1 [ true, %13 ], [ %9, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice8InstCastC2EPNS_3CfgENS0_6OpKindEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstCast"*, %"class.Ice::Cfg"* nocapture, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.Ice::InstCast", %"class.Ice::InstCast"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.llvm::ilist_node"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #16
  %8 = getelementptr inbounds %"class.Ice::InstCast", %"class.Ice::InstCast"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.Ice::InstCast", %"class.Ice::InstCast"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 5, i32* %9, align 8
  %10 = getelementptr inbounds %"class.Ice::InstCast", %"class.Ice::InstCast"* %0, i64 0, i32 0, i32 0, i32 3
  %11 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  store i32 %12, i32* %10, align 4
  %14 = getelementptr inbounds %"class.Ice::InstCast", %"class.Ice::InstCast"* %0, i64 0, i32 0, i32 0, i32 4
  %15 = getelementptr inbounds %"class.Ice::InstCast", %"class.Ice::InstCast"* %0, i64 0, i32 0, i32 0, i32 9
  store i8* null, i8** %15, align 8
  %16 = getelementptr inbounds %"class.Ice::InstCast", %"class.Ice::InstCast"* %0, i64 0, i32 0, i32 0, i32 10
  %17 = bitcast i8* %14 to i32*
  store i32 0, i32* %17, align 8
  store %"class.Ice::Variable"* %3, %"class.Ice::Variable"** %16, align 8
  %18 = getelementptr inbounds %"class.Ice::InstCast", %"class.Ice::InstCast"* %0, i64 0, i32 0, i32 0, i32 11
  store i32 1, i32* %18, align 8
  %19 = getelementptr inbounds %"class.Ice::InstCast", %"class.Ice::InstCast"* %0, i64 0, i32 0, i32 0, i32 13
  %20 = bitcast %"class.std::__1::vector.25"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %19, i64 1) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice8InstCastE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %21 = getelementptr inbounds %"class.Ice::InstCast", %"class.Ice::InstCast"* %0, i64 0, i32 1
  store i32 %2, i32* %21, align 4
  %22 = bitcast %"class.Ice::InstCast"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %22, %"class.Ice::Operand"* %4) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice18InstExtractElementC2EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_(%"class.Ice::InstExtractElement"*, %"class.Ice::Cfg"* nocapture, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.Ice::InstExtractElement", %"class.Ice::InstExtractElement"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.llvm::ilist_node"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #16
  %8 = getelementptr inbounds %"class.Ice::InstExtractElement", %"class.Ice::InstExtractElement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.Ice::InstExtractElement", %"class.Ice::InstExtractElement"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 6, i32* %9, align 8
  %10 = getelementptr inbounds %"class.Ice::InstExtractElement", %"class.Ice::InstExtractElement"* %0, i64 0, i32 0, i32 0, i32 3
  %11 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  store i32 %12, i32* %10, align 4
  %14 = getelementptr inbounds %"class.Ice::InstExtractElement", %"class.Ice::InstExtractElement"* %0, i64 0, i32 0, i32 0, i32 4
  %15 = getelementptr inbounds %"class.Ice::InstExtractElement", %"class.Ice::InstExtractElement"* %0, i64 0, i32 0, i32 0, i32 9
  store i8* null, i8** %15, align 8
  %16 = getelementptr inbounds %"class.Ice::InstExtractElement", %"class.Ice::InstExtractElement"* %0, i64 0, i32 0, i32 0, i32 10
  %17 = bitcast i8* %14 to i32*
  store i32 0, i32* %17, align 8
  store %"class.Ice::Variable"* %2, %"class.Ice::Variable"** %16, align 8
  %18 = getelementptr inbounds %"class.Ice::InstExtractElement", %"class.Ice::InstExtractElement"* %0, i64 0, i32 0, i32 0, i32 11
  store i32 2, i32* %18, align 8
  %19 = getelementptr inbounds %"class.Ice::InstExtractElement", %"class.Ice::InstExtractElement"* %0, i64 0, i32 0, i32 0, i32 13
  %20 = bitcast %"class.std::__1::vector.25"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %19, i64 2) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice18InstExtractElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %21 = bitcast %"class.Ice::InstExtractElement"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %21, %"class.Ice::Operand"* %3) #18
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %21, %"class.Ice::Operand"* %4) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice8InstFcmpC2EPNS_3CfgENS0_5FCondEPNS_8VariableEPNS_7OperandES7_(%"class.Ice::InstFcmp"*, %"class.Ice::Cfg"* nocapture, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.Ice::InstFcmp", %"class.Ice::InstFcmp"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.llvm::ilist_node"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #16
  %9 = getelementptr inbounds %"class.Ice::InstFcmp", %"class.Ice::InstFcmp"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.Ice::InstFcmp", %"class.Ice::InstFcmp"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 7, i32* %10, align 8
  %11 = getelementptr inbounds %"class.Ice::InstFcmp", %"class.Ice::InstFcmp"* %0, i64 0, i32 0, i32 0, i32 3
  %12 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  store i32 %13, i32* %11, align 4
  %15 = getelementptr inbounds %"class.Ice::InstFcmp", %"class.Ice::InstFcmp"* %0, i64 0, i32 0, i32 0, i32 4
  %16 = getelementptr inbounds %"class.Ice::InstFcmp", %"class.Ice::InstFcmp"* %0, i64 0, i32 0, i32 0, i32 9
  store i8* null, i8** %16, align 8
  %17 = getelementptr inbounds %"class.Ice::InstFcmp", %"class.Ice::InstFcmp"* %0, i64 0, i32 0, i32 0, i32 10
  %18 = bitcast i8* %15 to i32*
  store i32 0, i32* %18, align 8
  store %"class.Ice::Variable"* %3, %"class.Ice::Variable"** %17, align 8
  %19 = getelementptr inbounds %"class.Ice::InstFcmp", %"class.Ice::InstFcmp"* %0, i64 0, i32 0, i32 0, i32 11
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.Ice::InstFcmp", %"class.Ice::InstFcmp"* %0, i64 0, i32 0, i32 0, i32 13
  %21 = bitcast %"class.std::__1::vector.25"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %20, i64 2) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice8InstFcmpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %22 = getelementptr inbounds %"class.Ice::InstFcmp", %"class.Ice::InstFcmp"* %0, i64 0, i32 1
  store i32 %2, i32* %22, align 4
  %23 = bitcast %"class.Ice::InstFcmp"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %23, %"class.Ice::Operand"* %4) #18
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %23, %"class.Ice::Operand"* %5) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice8InstIcmpC2EPNS_3CfgENS0_5ICondEPNS_8VariableEPNS_7OperandES7_(%"class.Ice::InstIcmp"*, %"class.Ice::Cfg"* nocapture, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.llvm::ilist_node"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #16
  %9 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 8, i32* %10, align 8
  %11 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 0, i32 0, i32 3
  %12 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  store i32 %13, i32* %11, align 4
  %15 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 0, i32 0, i32 4
  %16 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 0, i32 0, i32 9
  store i8* null, i8** %16, align 8
  %17 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 0, i32 0, i32 10
  %18 = bitcast i8* %15 to i32*
  store i32 0, i32* %18, align 8
  store %"class.Ice::Variable"* %3, %"class.Ice::Variable"** %17, align 8
  %19 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 0, i32 0, i32 11
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 0, i32 0, i32 13
  %21 = bitcast %"class.std::__1::vector.25"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %20, i64 2) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice8InstIcmpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %22 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 1
  store i32 %2, i32* %22, align 4
  %23 = bitcast %"class.Ice::InstIcmp"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %23, %"class.Ice::Operand"* %4) #18
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %23, %"class.Ice::Operand"* %5) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice17InstInsertElementC2EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_S6_(%"class.Ice::InstInsertElement"*, %"class.Ice::Cfg"* nocapture, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.Ice::InstInsertElement", %"class.Ice::InstInsertElement"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.llvm::ilist_node"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #16
  %9 = getelementptr inbounds %"class.Ice::InstInsertElement", %"class.Ice::InstInsertElement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.Ice::InstInsertElement", %"class.Ice::InstInsertElement"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 10, i32* %10, align 8
  %11 = getelementptr inbounds %"class.Ice::InstInsertElement", %"class.Ice::InstInsertElement"* %0, i64 0, i32 0, i32 0, i32 3
  %12 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  store i32 %13, i32* %11, align 4
  %15 = getelementptr inbounds %"class.Ice::InstInsertElement", %"class.Ice::InstInsertElement"* %0, i64 0, i32 0, i32 0, i32 4
  %16 = getelementptr inbounds %"class.Ice::InstInsertElement", %"class.Ice::InstInsertElement"* %0, i64 0, i32 0, i32 0, i32 9
  store i8* null, i8** %16, align 8
  %17 = getelementptr inbounds %"class.Ice::InstInsertElement", %"class.Ice::InstInsertElement"* %0, i64 0, i32 0, i32 0, i32 10
  %18 = bitcast i8* %15 to i32*
  store i32 0, i32* %18, align 8
  store %"class.Ice::Variable"* %2, %"class.Ice::Variable"** %17, align 8
  %19 = getelementptr inbounds %"class.Ice::InstInsertElement", %"class.Ice::InstInsertElement"* %0, i64 0, i32 0, i32 0, i32 11
  store i32 3, i32* %19, align 8
  %20 = getelementptr inbounds %"class.Ice::InstInsertElement", %"class.Ice::InstInsertElement"* %0, i64 0, i32 0, i32 0, i32 13
  %21 = bitcast %"class.std::__1::vector.25"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %20, i64 3) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice17InstInsertElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %22 = bitcast %"class.Ice::InstInsertElement"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %22, %"class.Ice::Operand"* %3) #18
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %22, %"class.Ice::Operand"* %4) #18
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %22, %"class.Ice::Operand"* %5) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice8InstLoadC2EPNS_3CfgEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstLoad"*, %"class.Ice::Cfg"* nocapture, %"class.Ice::Variable"*, %"class.Ice::Operand"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.Ice::InstLoad", %"class.Ice::InstLoad"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.llvm::ilist_node"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #16
  %7 = getelementptr inbounds %"class.Ice::InstLoad", %"class.Ice::InstLoad"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.Ice::InstLoad", %"class.Ice::InstLoad"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 11, i32* %8, align 8
  %9 = getelementptr inbounds %"class.Ice::InstLoad", %"class.Ice::InstLoad"* %0, i64 0, i32 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  store i32 %11, i32* %9, align 4
  %13 = getelementptr inbounds %"class.Ice::InstLoad", %"class.Ice::InstLoad"* %0, i64 0, i32 0, i32 0, i32 4
  %14 = getelementptr inbounds %"class.Ice::InstLoad", %"class.Ice::InstLoad"* %0, i64 0, i32 0, i32 0, i32 9
  store i8* null, i8** %14, align 8
  %15 = getelementptr inbounds %"class.Ice::InstLoad", %"class.Ice::InstLoad"* %0, i64 0, i32 0, i32 0, i32 10
  %16 = bitcast i8* %13 to i32*
  store i32 0, i32* %16, align 8
  store %"class.Ice::Variable"* %2, %"class.Ice::Variable"** %15, align 8
  %17 = getelementptr inbounds %"class.Ice::InstLoad", %"class.Ice::InstLoad"* %0, i64 0, i32 0, i32 0, i32 11
  store i32 1, i32* %17, align 8
  %18 = getelementptr inbounds %"class.Ice::InstLoad", %"class.Ice::InstLoad"* %0, i64 0, i32 0, i32 0, i32 13
  %19 = bitcast %"class.std::__1::vector.25"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %18, i64 1) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice8InstLoadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %20 = bitcast %"class.Ice::InstLoad"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %20, %"class.Ice::Operand"* %3) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7InstPhiC2EPNS_3CfgEjPNS_8VariableE(%"class.Ice::InstPhi"*, %"class.Ice::Cfg"* nocapture, i32, %"class.Ice::Variable"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.llvm::ilist_node"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #16
  %7 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 12, i32* %8, align 8
  %9 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  store i32 %11, i32* %9, align 4
  %13 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 4
  %14 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 9
  store i8* null, i8** %14, align 8
  %15 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 10
  %16 = bitcast i8* %13 to i32*
  store i32 0, i32* %16, align 8
  store %"class.Ice::Variable"* %3, %"class.Ice::Variable"** %15, align 8
  %17 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 11
  store i32 %2, i32* %17, align 8
  %18 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 13
  %19 = zext i32 %2 to i64
  %20 = bitcast %"class.std::__1::vector.25"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %18, i64 %19) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice7InstPhiE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %21 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 1
  %22 = bitcast %"class.std::__1::vector.234"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7CfgNodeENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.234"* %21, i64 %19) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7InstPhi11addArgumentEPNS_7OperandEPNS_7CfgNodeE(%"class.Ice::InstPhi"*, %"class.Ice::Operand"*, %"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.Ice::CfgNode"* %2 to i64
  %5 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %6, align 8
  %8 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %8, align 8
  %10 = icmp eq %"class.Ice::CfgNode"** %7, %9
  %11 = ptrtoint %"class.Ice::CfgNode"** %9 to i64
  br i1 %10, label %17, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.Ice::CfgNode"** %7 to i64*
  store i64 %4, i64* %13, align 8
  %14 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %7, i64 1
  %15 = ptrtoint %"class.Ice::CfgNode"** %14 to i64
  %16 = bitcast %"class.Ice::CfgNode"*** %6 to i64*
  store i64 %15, i64* %16, align 8
  br label %69

17:                                               ; preds = %3
  %18 = ptrtoint %"class.Ice::CfgNode"** %7 to i64
  %19 = bitcast %"class.Ice::CfgNode"*** %6 to i64*
  %20 = bitcast %"class.std::__1::vector.234"* %5 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = icmp ugt i64 %24, 2305843009213693951
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::vector.234"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #20
  unreachable

28:                                               ; preds = %17
  %29 = bitcast %"class.Ice::CfgNode"*** %8 to i64*
  %30 = sub i64 %11, %21
  %31 = ashr exact i64 %30, 3
  %32 = icmp ult i64 %31, 1152921504606846975
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = ashr exact i64 %30, 2
  %35 = icmp ult i64 %34, %24
  %36 = select i1 %35, i64 %24, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %33, %28
  %39 = phi i64 [ %36, %33 ], [ 2305843009213693951, %28 ]
  %40 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  %41 = shl i64 %39, 3
  %42 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %40, i64 %41, i64 8) #19
  %43 = bitcast i8* %42 to %"class.Ice::CfgNode"**
  br label %44

44:                                               ; preds = %38, %33
  %45 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %46 = phi %"class.Ice::CfgNode"** [ %43, %38 ], [ null, %33 ]
  %47 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %46, i64 %23
  %48 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %46, i64 %45
  %49 = ptrtoint %"class.Ice::CfgNode"** %48 to i64
  %50 = bitcast %"class.Ice::CfgNode"** %47 to i64*
  store i64 %4, i64* %50, align 8
  %51 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %47, i64 1
  %52 = ptrtoint %"class.Ice::CfgNode"** %51 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %5, i64 0, i32 0, i32 0
  %54 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %53, align 8
  %55 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %6, align 8
  %56 = icmp eq %"class.Ice::CfgNode"** %55, %54
  br i1 %56, label %66, label %57

57:                                               ; preds = %44, %57
  %58 = phi %"class.Ice::CfgNode"** [ %60, %57 ], [ %47, %44 ]
  %59 = phi %"class.Ice::CfgNode"** [ %61, %57 ], [ %55, %44 ]
  %60 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %58, i64 -1
  %61 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %59, i64 -1
  %62 = bitcast %"class.Ice::CfgNode"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.Ice::CfgNode"** %60 to i64*
  store i64 %63, i64* %64, align 8
  %65 = icmp eq %"class.Ice::CfgNode"** %61, %54
  br i1 %65, label %66, label %57

66:                                               ; preds = %57, %44
  %67 = phi %"class.Ice::CfgNode"** [ %47, %44 ], [ %60, %57 ]
  %68 = ptrtoint %"class.Ice::CfgNode"** %67 to i64
  store i64 %68, i64* %20, align 8
  store i64 %52, i64* %19, align 8
  store i64 %49, i64* %29, align 8
  br label %69

69:                                               ; preds = %12, %66
  %70 = bitcast %"class.Ice::InstPhi"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %70, %"class.Ice::Operand"* %1) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.Ice::Operand"* @_ZNK3Ice7InstPhi19getOperandForTargetEPNS_7CfgNodeE(%"class.Ice::InstPhi"* nocapture readonly, %"class.Ice::CfgNode"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 13
  %4 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %5 = bitcast %"class.Ice::Operand"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.25"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = icmp eq i32 %11, 0
  %13 = inttoptr i64 %8 to %"class.Ice::Operand"**
  br i1 %12, label %30, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %15, align 8
  %17 = and i64 %10, 4294967295
  br label %20

18:                                               ; preds = %20
  %19 = icmp ult i64 %25, %17
  br i1 %19, label %20, label %30

20:                                               ; preds = %14, %18
  %21 = phi i64 [ 0, %14 ], [ %25, %18 ]
  %22 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %16, i64 %21
  %23 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %22, align 8
  %24 = icmp eq %"class.Ice::CfgNode"* %23, %1
  %25 = add nuw nsw i64 %21, 1
  br i1 %24, label %26, label %18

26:                                               ; preds = %20
  %27 = and i64 %21, 4294967295
  %28 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %13, i64 %27
  %29 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %28, align 8
  br label %30

30:                                               ; preds = %18, %2, %26
  %31 = phi %"class.Ice::Operand"* [ %29, %26 ], [ undef, %2 ], [ undef, %18 ]
  %32 = phi i1 [ true, %26 ], [ false, %2 ], [ false, %18 ]
  tail call void @llvm.assume(i1 %32)
  ret %"class.Ice::Operand"* %31
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7InstPhi21clearOperandForTargetEPNS_7CfgNodeE(%"class.Ice::InstPhi"* nocapture readonly, %"class.Ice::CfgNode"* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 13
  %4 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %5 = bitcast %"class.Ice::Operand"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.25"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %41, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %14, align 8
  %16 = and i64 %10, 4294967295
  br label %19

17:                                               ; preds = %19
  %18 = icmp ult i64 %24, %16
  br i1 %18, label %19, label %41

19:                                               ; preds = %13, %17
  %20 = phi i64 [ 0, %13 ], [ %24, %17 ]
  %21 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %15, i64 %20
  %22 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %21, align 8
  %23 = icmp eq %"class.Ice::CfgNode"* %22, %1
  %24 = add nuw nsw i64 %20, 1
  br i1 %23, label %25, label %17

25:                                               ; preds = %19
  %26 = and i64 %20, 4294967295
  %27 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 10
  %28 = bitcast %"class.Ice::Variable"** %27 to %"class.Ice::Operand"**
  %29 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %28, align 8
  %30 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %29, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 0
  %33 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %32, align 8
  %34 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %33, i64 0, i32 1
  %35 = load %"class.Ice::GlobalContext"*, %"class.Ice::GlobalContext"** %34, align 8
  %36 = tail call %"class.Ice::Constant"* @_ZN3Ice13GlobalContext15getConstantZeroENS_4TypeE(%"class.Ice::GlobalContext"* %35, i32 %31) #19
  %37 = getelementptr inbounds %"class.Ice::Constant", %"class.Ice::Constant"* %36, i64 0, i32 0
  %38 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %39 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %38, align 8
  %40 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %39, i64 %26
  store %"class.Ice::Operand"* %37, %"class.Ice::Operand"** %40, align 8
  br label %41

41:                                               ; preds = %17, %2, %25
  %42 = phi i1 [ true, %25 ], [ false, %2 ], [ false, %17 ]
  tail call void @llvm.assume(i1 %42)
  ret void
}

; Function Attrs: optsize
declare %"class.Ice::Constant"* @_ZN3Ice13GlobalContext15getConstantZeroENS_4TypeE(%"class.Ice::GlobalContext"*, i32) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7InstPhi18livenessPhiOperandERNS_13BitVectorTmplINS_17LivenessAllocatorEEEPNS_7CfgNodeEPNS_8LivenessE(%"class.Ice::InstPhi"* nocapture, %"class.Ice::BitVectorTmpl"* nocapture readonly dereferenceable(24), %"class.Ice::CfgNode"* readnone, %"class.Ice::Liveness"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 4
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %89

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 5
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %89

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 13
  %14 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %15 = bitcast %"class.Ice::Operand"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.25"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = lshr exact i64 %19, 3
  %21 = trunc i64 %20 to i32
  %22 = icmp eq i32 %21, 0
  %23 = inttoptr i64 %18 to %"class.Ice::Operand"**
  br i1 %22, label %87, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %25, align 8
  %27 = and i64 %20, 4294967295
  br label %28

28:                                               ; preds = %24, %84
  %29 = phi i64 [ 0, %24 ], [ %85, %84 ]
  %30 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %26, i64 %29
  %31 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %30, align 8
  %32 = icmp eq %"class.Ice::CfgNode"* %31, %2
  br i1 %32, label %33, label %84

33:                                               ; preds = %28
  %34 = trunc i64 %29 to i32
  %35 = and i64 %29, 4294967295
  %36 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %23, i64 %35
  %37 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %36, align 8
  %38 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %37, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, -18
  %41 = icmp ugt i32 %40, 14
  %42 = icmp eq %"class.Ice::Operand"* %37, null
  %43 = or i1 %42, %41
  br i1 %43, label %87, label %44

44:                                               ; preds = %33
  %45 = bitcast %"class.Ice::Operand"* %37 to %"class.Ice::Variable"*
  %46 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %45, i64 0, i32 6
  %47 = load i8, i8* %46, align 1, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %87

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %37, i64 1
  %51 = bitcast %"class.Ice::Operand"* %50 to i32*
  %52 = load i32, i32* %51, align 8
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %3, i64 0, i32 5, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %53
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %1, i64 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = lshr i32 %57, 6
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i64, i64* %59, i64 %61
  %63 = and i32 %57, 63
  %64 = load i64, i64* %62, align 8
  %65 = zext i32 %63 to i64
  %66 = shl i64 1, %65
  %67 = and i64 %66, %64
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %87

69:                                               ; preds = %49
  %70 = icmp ult i32 %34, 32
  br i1 %70, label %71, label %79

71:                                               ; preds = %69
  %72 = shl i32 1, %34
  %73 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 14
  %74 = load i32, i32* %73, align 8
  %75 = or i32 %74, %72
  store i32 %75, i32* %73, align 8
  %76 = load i64*, i64** %58, align 8
  %77 = getelementptr inbounds i64, i64* %76, i64 %61
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %69, %71
  %80 = phi i64 [ %64, %69 ], [ %78, %71 ]
  %81 = phi i64* [ %59, %69 ], [ %76, %71 ]
  %82 = getelementptr inbounds i64, i64* %81, i64 %61
  %83 = or i64 %80, %66
  store i64 %83, i64* %82, align 8
  br label %87

84:                                               ; preds = %28
  %85 = add nuw nsw i64 %29, 1
  %86 = icmp ult i64 %85, %27
  br i1 %86, label %28, label %87

87:                                               ; preds = %84, %12, %49, %44, %33, %79
  %88 = phi i1 [ true, %79 ], [ true, %49 ], [ true, %33 ], [ true, %44 ], [ false, %12 ], [ false, %84 ]
  tail call void @llvm.assume(i1 %88)
  br label %89

89:                                               ; preds = %4, %8, %87
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.Ice::Inst"* @_ZN3Ice7InstPhi5lowerEPNS_3CfgE(%"class.Ice::InstPhi"* nocapture, %"class.Ice::Cfg"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 10
  %4 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %4, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = tail call %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"* %1, i32 %6) #19
  %8 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %7, i64 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp ne i32 %9, 19
  %11 = icmp eq %"class.Ice::Variable"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.Ice::Variable"* %7 to %"class.Ice::Variable64On32"*
  tail call void @_ZN3Ice14Variable64On328initHiLoEPNS_3CfgE(%"class.Ice::Variable64On32"* nonnull %14, %"class.Ice::Cfg"* %1) #18
  br label %15

15:                                               ; preds = %2, %13
  store %"class.Ice::Variable"* %7, %"class.Ice::Variable"** %3, align 8
  %16 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %7, i64 0, i32 0
  %17 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %17, align 8
  %19 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %18, i64 104, i64 8) #19
  %20 = bitcast i8* %19 to %"class.Ice::InstAssign"*
  tail call void @_ZN3Ice10InstAssignC2EPNS_3CfgEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstAssign"* %20, %"class.Ice::Cfg"* %1, %"class.Ice::Variable"* %4, %"class.Ice::Operand"* %16) #19
  %21 = bitcast i8* %19 to %"class.Ice::Inst"*
  ret %"class.Ice::Inst"* %21
}

; Function Attrs: optsize
declare %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"*, i32) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14Variable64On328initHiLoEPNS_3CfgE(%"class.Ice::Variable64On32"*, %"class.Ice::Cfg"*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"* %1, i32 4) #19
  %4 = getelementptr inbounds %"class.Ice::Variable64On32", %"class.Ice::Variable64On32"* %0, i64 0, i32 1
  store %"class.Ice::Variable"* %3, %"class.Ice::Variable"** %4, align 8
  %5 = tail call %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"* %1, i32 4) #19
  %6 = getelementptr inbounds %"class.Ice::Variable64On32", %"class.Ice::Variable64On32"* %0, i64 0, i32 2
  store %"class.Ice::Variable"* %5, %"class.Ice::Variable"** %6, align 8
  %7 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %4, align 8
  %8 = getelementptr inbounds %"class.Ice::Variable64On32", %"class.Ice::Variable64On32"* %0, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp ne i8 %9, 0
  %11 = bitcast %"class.Ice::Variable"* %7 to void (%"class.Ice::Variable"*, i1)***
  %12 = load void (%"class.Ice::Variable"*, i1)**, void (%"class.Ice::Variable"*, i1)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.Ice::Variable"*, i1)*, void (%"class.Ice::Variable"*, i1)** %12, i64 7
  %14 = load void (%"class.Ice::Variable"*, i1)*, void (%"class.Ice::Variable"*, i1)** %13, align 8
  tail call void %14(%"class.Ice::Variable"* %7, i1 zeroext %10) #19
  %15 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %6, align 8
  %16 = load i8, i8* %8, align 8, !range !2
  %17 = icmp ne i8 %16, 0
  %18 = bitcast %"class.Ice::Variable"* %15 to void (%"class.Ice::Variable"*, i1)***
  %19 = load void (%"class.Ice::Variable"*, i1)**, void (%"class.Ice::Variable"*, i1)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.Ice::Variable"*, i1)*, void (%"class.Ice::Variable"*, i1)** %19, i64 7
  %21 = load void (%"class.Ice::Variable"*, i1)*, void (%"class.Ice::Variable"*, i1)** %20, align 8
  tail call void %21(%"class.Ice::Variable"* %15, i1 zeroext %17) #19
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7InstRetC2EPNS_3CfgEPNS_7OperandE(%"class.Ice::InstRet"*, %"class.Ice::Cfg"* nocapture, %"class.Ice::Operand"*) unnamed_addr #0 align 2 {
  %4 = icmp ne %"class.Ice::Operand"* %2, null
  %5 = zext i1 %4 to i32
  %6 = getelementptr inbounds %"class.Ice::InstRet", %"class.Ice::InstRet"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.llvm::ilist_node"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #16
  %8 = getelementptr inbounds %"class.Ice::InstRet", %"class.Ice::InstRet"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.Ice::InstRet", %"class.Ice::InstRet"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 13, i32* %9, align 8
  %10 = getelementptr inbounds %"class.Ice::InstRet", %"class.Ice::InstRet"* %0, i64 0, i32 0, i32 0, i32 3
  %11 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  store i32 %12, i32* %10, align 4
  %14 = getelementptr inbounds %"class.Ice::InstRet", %"class.Ice::InstRet"* %0, i64 0, i32 0, i32 0, i32 4
  %15 = getelementptr inbounds %"class.Ice::InstRet", %"class.Ice::InstRet"* %0, i64 0, i32 0, i32 0, i32 9
  %16 = bitcast i8* %14 to i32*
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.Ice::InstRet", %"class.Ice::InstRet"* %0, i64 0, i32 0, i32 0, i32 11
  %18 = bitcast i8** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  store i32 %5, i32* %17, align 8
  %19 = getelementptr inbounds %"class.Ice::InstRet", %"class.Ice::InstRet"* %0, i64 0, i32 0, i32 0, i32 13
  %20 = zext i1 %4 to i64
  %21 = bitcast %"class.std::__1::vector.25"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %19, i64 %20) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice7InstRetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  br i1 %4, label %22, label %24

22:                                               ; preds = %3
  %23 = bitcast %"class.Ice::InstRet"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %23, %"class.Ice::Operand"* nonnull %2) #18
  br label %24

24:                                               ; preds = %22, %3
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10InstSelectC2EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_S6_(%"class.Ice::InstSelect"*, %"class.Ice::Cfg"* nocapture, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.Ice::InstSelect", %"class.Ice::InstSelect"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.llvm::ilist_node"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #16
  %9 = getelementptr inbounds %"class.Ice::InstSelect", %"class.Ice::InstSelect"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.Ice::InstSelect", %"class.Ice::InstSelect"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 14, i32* %10, align 8
  %11 = getelementptr inbounds %"class.Ice::InstSelect", %"class.Ice::InstSelect"* %0, i64 0, i32 0, i32 0, i32 3
  %12 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  store i32 %13, i32* %11, align 4
  %15 = getelementptr inbounds %"class.Ice::InstSelect", %"class.Ice::InstSelect"* %0, i64 0, i32 0, i32 0, i32 4
  %16 = getelementptr inbounds %"class.Ice::InstSelect", %"class.Ice::InstSelect"* %0, i64 0, i32 0, i32 0, i32 9
  store i8* null, i8** %16, align 8
  %17 = getelementptr inbounds %"class.Ice::InstSelect", %"class.Ice::InstSelect"* %0, i64 0, i32 0, i32 0, i32 10
  %18 = bitcast i8* %15 to i32*
  store i32 0, i32* %18, align 8
  store %"class.Ice::Variable"* %2, %"class.Ice::Variable"** %17, align 8
  %19 = getelementptr inbounds %"class.Ice::InstSelect", %"class.Ice::InstSelect"* %0, i64 0, i32 0, i32 0, i32 11
  store i32 3, i32* %19, align 8
  %20 = getelementptr inbounds %"class.Ice::InstSelect", %"class.Ice::InstSelect"* %0, i64 0, i32 0, i32 0, i32 13
  %21 = bitcast %"class.std::__1::vector.25"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %20, i64 3) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice10InstSelectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %22 = bitcast %"class.Ice::InstSelect"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %22, %"class.Ice::Operand"* %3) #18
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %22, %"class.Ice::Operand"* %4) #18
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %22, %"class.Ice::Operand"* %5) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice9InstStoreC2EPNS_3CfgEPNS_7OperandES4_(%"class.Ice::InstStore"*, %"class.Ice::Cfg"* nocapture, %"class.Ice::Operand"*, %"class.Ice::Operand"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.Ice::InstStore", %"class.Ice::InstStore"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.llvm::ilist_node"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #16
  %7 = getelementptr inbounds %"class.Ice::InstStore", %"class.Ice::InstStore"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.Ice::InstStore", %"class.Ice::InstStore"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 15, i32* %8, align 8
  %9 = getelementptr inbounds %"class.Ice::InstStore", %"class.Ice::InstStore"* %0, i64 0, i32 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  store i32 %11, i32* %9, align 4
  %13 = getelementptr inbounds %"class.Ice::InstStore", %"class.Ice::InstStore"* %0, i64 0, i32 0, i32 0, i32 4
  %14 = getelementptr inbounds %"class.Ice::InstStore", %"class.Ice::InstStore"* %0, i64 0, i32 0, i32 0, i32 9
  %15 = bitcast i8* %13 to i32*
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.Ice::InstStore", %"class.Ice::InstStore"* %0, i64 0, i32 0, i32 0, i32 11
  %17 = bitcast i8** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  store i32 3, i32* %16, align 8
  %18 = getelementptr inbounds %"class.Ice::InstStore", %"class.Ice::InstStore"* %0, i64 0, i32 0, i32 0, i32 13
  %19 = bitcast %"class.std::__1::vector.25"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %18, i64 3) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice9InstStoreE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %20 = bitcast %"class.Ice::InstStore"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %20, %"class.Ice::Operand"* %2) #18
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %20, %"class.Ice::Operand"* %3) #18
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %20, %"class.Ice::Operand"* %2) #18
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.Ice::Variable"* @_ZNK3Ice9InstStore12getRmwBeaconEv(%"class.Ice::InstStore"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstStore", %"class.Ice::InstStore"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %3 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %2, align 8
  %4 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %3, i64 2
  %5 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %4, align 8
  %6 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -18
  %9 = icmp ult i32 %8, 15
  %10 = bitcast %"class.Ice::Operand"* %5 to %"class.Ice::Variable"*
  %11 = select i1 %9, %"class.Ice::Variable"* %10, %"class.Ice::Variable"* null
  ret %"class.Ice::Variable"* %11
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3Ice9InstStore12setRmwBeaconEPNS_8VariableE(%"class.Ice::InstStore"* nocapture, %"class.Ice::Variable"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.Ice::InstStore", %"class.Ice::InstStore"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %4, align 8
  %6 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -18
  %9 = icmp ult i32 %8, 15
  %10 = bitcast %"class.Ice::Operand"* %5 to %"class.Ice::Variable"*
  %11 = select i1 %9, %"class.Ice::Variable"* %10, %"class.Ice::Variable"* null
  %12 = getelementptr inbounds %"class.Ice::InstStore", %"class.Ice::InstStore"* %0, i64 0, i32 0, i32 0, i32 10
  store %"class.Ice::Variable"* %11, %"class.Ice::Variable"** %12, align 8
  %13 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 0
  %14 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %4, i64 2
  store %"class.Ice::Operand"* %13, %"class.Ice::Operand"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10InstSwitchC2EPNS_3CfgEjPNS_7OperandEPNS_7CfgNodeE(%"class.Ice::InstSwitch"*, %"class.Ice::Cfg"* nocapture, i32, %"class.Ice::Operand"*, %"class.Ice::CfgNode"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.llvm::ilist_node"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #16
  %8 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 16, i32* %9, align 8
  %10 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 0, i32 0, i32 3
  %11 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  store i32 %12, i32* %10, align 4
  %14 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 0, i32 0, i32 4
  %15 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 0, i32 0, i32 9
  %16 = bitcast i8* %14 to i32*
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 0, i32 0, i32 11
  %18 = bitcast i8** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  store i32 1, i32* %17, align 8
  %19 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 0, i32 0, i32 13
  %20 = bitcast %"class.std::__1::vector.25"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %19, i64 1) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice10InstSwitchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %21 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 1
  store %"class.Ice::CfgNode"* %4, %"class.Ice::CfgNode"** %21, align 8
  %22 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 2
  store i32 %2, i32* %22, align 8
  %23 = bitcast %"class.Ice::InstSwitch"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %23, %"class.Ice::Operand"* %3) #18
  %24 = zext i32 %2 to i64
  %25 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %25, align 8
  %27 = shl nuw nsw i64 %24, 3
  %28 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %26, i64 %27, i64 8) #19
  %29 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 3
  %30 = bitcast i64** %29 to i8**
  store i8* %28, i8** %30, align 8
  %31 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %25, align 8
  %32 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %31, i64 %27, i64 8) #19
  %33 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 4
  %34 = bitcast %"class.Ice::CfgNode"*** %33 to i8**
  store i8* %32, i8** %34, align 8
  %35 = icmp eq i32 %2, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %37, %5
  ret void

37:                                               ; preds = %5, %37
  %38 = phi i64 [ %43, %37 ], [ 0, %5 ]
  %39 = load i64*, i64** %29, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 %38
  store i64 0, i64* %40, align 8
  %41 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %33, align 8
  %42 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %41, i64 %38
  store %"class.Ice::CfgNode"* null, %"class.Ice::CfgNode"** %42, align 8
  %43 = add nuw nsw i64 %38, 1
  %44 = icmp eq i64 %43, %24
  br i1 %44, label %36, label %37
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3Ice10InstSwitch9addBranchEjmPNS_7CfgNodeE(%"class.Ice::InstSwitch"* nocapture readonly, i32, i64, %"class.Ice::CfgNode"*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 3
  %6 = load i64*, i64** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds i64, i64* %6, i64 %7
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 4
  %10 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %9, align 8
  %11 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %10, i64 %7
  store %"class.Ice::CfgNode"* %3, %"class.Ice::CfgNode"** %11, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK3Ice10InstSwitch18getTerminatorEdgesEv(%"class.std::__1::vector.234"* noalias sret, %"class.Ice::InstSwitch"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.234"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #16
  %7 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, 1
  %10 = zext i32 %9 to i64
  tail call void @_ZNSt3__16vectorIPN3Ice7CfgNodeENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.234"* %0, i64 %10) #18
  %11 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %1, i64 0, i32 1
  %12 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %4, align 8
  %13 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %5, align 8
  %14 = icmp eq %"class.Ice::CfgNode"** %12, %13
  %15 = ptrtoint %"class.Ice::CfgNode"** %13 to i64
  br i1 %14, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.Ice::CfgNode"** %11 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.Ice::CfgNode"** %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %12, i64 1
  %21 = ptrtoint %"class.Ice::CfgNode"** %20 to i64
  %22 = bitcast %"class.Ice::CfgNode"*** %4 to i64*
  store i64 %21, i64* %22, align 8
  br label %79

23:                                               ; preds = %2
  %24 = ptrtoint %"class.Ice::CfgNode"** %12 to i64
  %25 = bitcast %"class.Ice::CfgNode"*** %4 to i64*
  %26 = bitcast %"class.std::__1::vector.234"* %0 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 2305843009213693951
  %32 = inttoptr i64 %27 to %"class.Ice::CfgNode"**
  br i1 %31, label %33, label %35

33:                                               ; preds = %23
  %34 = bitcast %"class.std::__1::vector.234"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #20
  unreachable

35:                                               ; preds = %23
  %36 = bitcast %"class.Ice::CfgNode"*** %5 to i64*
  %37 = sub i64 %15, %27
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %38, 1152921504606846975
  br i1 %39, label %40, label %45

40:                                               ; preds = %35
  %41 = ashr exact i64 %37, 2
  %42 = icmp ult i64 %41, %30
  %43 = select i1 %42, i64 %30, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40, %35
  %46 = phi i64 [ %43, %40 ], [ 2305843009213693951, %35 ]
  %47 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  %48 = shl i64 %46, 3
  %49 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %47, i64 %48, i64 8) #19
  %50 = bitcast i8* %49 to %"class.Ice::CfgNode"**
  %51 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %3, align 8
  %52 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %4, align 8
  br label %53

53:                                               ; preds = %45, %40
  %54 = phi %"class.Ice::CfgNode"** [ %52, %45 ], [ %12, %40 ]
  %55 = phi %"class.Ice::CfgNode"** [ %51, %45 ], [ %32, %40 ]
  %56 = phi i64 [ %46, %45 ], [ 0, %40 ]
  %57 = phi %"class.Ice::CfgNode"** [ %50, %45 ], [ null, %40 ]
  %58 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %57, i64 %29
  %59 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %57, i64 %56
  %60 = ptrtoint %"class.Ice::CfgNode"** %59 to i64
  %61 = bitcast %"class.Ice::CfgNode"** %11 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.Ice::CfgNode"** %58 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %58, i64 1
  %65 = ptrtoint %"class.Ice::CfgNode"** %64 to i64
  %66 = icmp eq %"class.Ice::CfgNode"** %54, %55
  br i1 %66, label %76, label %67

67:                                               ; preds = %53, %67
  %68 = phi %"class.Ice::CfgNode"** [ %70, %67 ], [ %58, %53 ]
  %69 = phi %"class.Ice::CfgNode"** [ %71, %67 ], [ %54, %53 ]
  %70 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %68, i64 -1
  %71 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %69, i64 -1
  %72 = bitcast %"class.Ice::CfgNode"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.Ice::CfgNode"** %70 to i64*
  store i64 %73, i64* %74, align 8
  %75 = icmp eq %"class.Ice::CfgNode"** %71, %55
  br i1 %75, label %76, label %67

76:                                               ; preds = %67, %53
  %77 = phi %"class.Ice::CfgNode"** [ %58, %53 ], [ %70, %67 ]
  %78 = ptrtoint %"class.Ice::CfgNode"** %77 to i64
  store i64 %78, i64* %26, align 8
  store i64 %65, i64* %25, align 8
  store i64 %60, i64* %36, align 8
  br label %79

79:                                               ; preds = %16, %76
  %80 = phi %"class.Ice::CfgNode"** [ %20, %16 ], [ %64, %76 ]
  %81 = load i32, i32* %7, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %1, i64 0, i32 4
  %85 = bitcast %"class.Ice::CfgNode"*** %4 to i64*
  %86 = bitcast %"class.std::__1::vector.234"* %0 to i64*
  %87 = bitcast %"class.Ice::CfgNode"*** %5 to i64*
  br label %98

88:                                               ; preds = %162, %79
  %89 = phi %"class.Ice::CfgNode"** [ %80, %79 ], [ %163, %162 ]
  %90 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %3, align 8
  tail call fastcc void @"_ZNSt3__16__sortIRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEvT0_S8_T_"(%"class.Ice::CfgNode"** %90, %"class.Ice::CfgNode"** %89) #19
  %91 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %3, align 8
  %92 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %4, align 8
  %93 = tail call %"class.Ice::CfgNode"** @_ZNSt3__16uniqueINS_11__wrap_iterIPPN3Ice7CfgNodeEEENS_10__equal_toIS4_S4_EEEET_S9_S9_T0_(%"class.Ice::CfgNode"** %91, %"class.Ice::CfgNode"** %92) #19
  %94 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %4, align 8
  %95 = icmp eq %"class.Ice::CfgNode"** %93, %94
  br i1 %95, label %97, label %96

96:                                               ; preds = %88
  store %"class.Ice::CfgNode"** %93, %"class.Ice::CfgNode"*** %4, align 8
  br label %97

97:                                               ; preds = %88, %96
  ret void

98:                                               ; preds = %83, %162
  %99 = phi %"class.Ice::CfgNode"** [ %80, %83 ], [ %163, %162 ]
  %100 = phi i64 [ 0, %83 ], [ %164, %162 ]
  %101 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %84, align 8
  %102 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %101, i64 %100
  %103 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %5, align 8
  %104 = icmp eq %"class.Ice::CfgNode"** %99, %103
  br i1 %104, label %111, label %105

105:                                              ; preds = %98
  %106 = bitcast %"class.Ice::CfgNode"** %102 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.Ice::CfgNode"** %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %99, i64 1
  %110 = ptrtoint %"class.Ice::CfgNode"** %109 to i64
  store i64 %110, i64* %85, align 8
  br label %162

111:                                              ; preds = %98
  %112 = ptrtoint %"class.Ice::CfgNode"** %103 to i64
  %113 = load i64, i64* %86, align 8
  %114 = sub i64 %112, %113
  %115 = ashr exact i64 %114, 3
  %116 = add nsw i64 %115, 1
  %117 = icmp ugt i64 %116, 2305843009213693951
  %118 = inttoptr i64 %113 to %"class.Ice::CfgNode"**
  br i1 %117, label %119, label %121

119:                                              ; preds = %111
  %120 = bitcast %"class.std::__1::vector.234"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %120) #20
  unreachable

121:                                              ; preds = %111
  %122 = icmp ult i64 %115, 1152921504606846975
  br i1 %122, label %123, label %128

123:                                              ; preds = %121
  %124 = ashr exact i64 %114, 2
  %125 = icmp ult i64 %124, %116
  %126 = select i1 %125, i64 %116, i64 %124
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %136, label %128

128:                                              ; preds = %123, %121
  %129 = phi i64 [ %126, %123 ], [ 2305843009213693951, %121 ]
  %130 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  %131 = shl i64 %129, 3
  %132 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %130, i64 %131, i64 8) #19
  %133 = bitcast i8* %132 to %"class.Ice::CfgNode"**
  %134 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %3, align 8
  %135 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %4, align 8
  br label %136

136:                                              ; preds = %128, %123
  %137 = phi %"class.Ice::CfgNode"** [ %135, %128 ], [ %99, %123 ]
  %138 = phi %"class.Ice::CfgNode"** [ %134, %128 ], [ %118, %123 ]
  %139 = phi i64 [ %129, %128 ], [ 0, %123 ]
  %140 = phi %"class.Ice::CfgNode"** [ %133, %128 ], [ null, %123 ]
  %141 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %140, i64 %115
  %142 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %140, i64 %139
  %143 = ptrtoint %"class.Ice::CfgNode"** %142 to i64
  %144 = bitcast %"class.Ice::CfgNode"** %102 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.Ice::CfgNode"** %141 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %141, i64 1
  %148 = ptrtoint %"class.Ice::CfgNode"** %147 to i64
  %149 = icmp eq %"class.Ice::CfgNode"** %137, %138
  br i1 %149, label %159, label %150

150:                                              ; preds = %136, %150
  %151 = phi %"class.Ice::CfgNode"** [ %153, %150 ], [ %141, %136 ]
  %152 = phi %"class.Ice::CfgNode"** [ %154, %150 ], [ %137, %136 ]
  %153 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %151, i64 -1
  %154 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %152, i64 -1
  %155 = bitcast %"class.Ice::CfgNode"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.Ice::CfgNode"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = icmp eq %"class.Ice::CfgNode"** %154, %138
  br i1 %158, label %159, label %150

159:                                              ; preds = %150, %136
  %160 = phi %"class.Ice::CfgNode"** [ %141, %136 ], [ %153, %150 ]
  %161 = ptrtoint %"class.Ice::CfgNode"** %160 to i64
  store i64 %161, i64* %86, align 8
  store i64 %148, i64* %85, align 8
  store i64 %143, i64* %87, align 8
  br label %162

162:                                              ; preds = %105, %159
  %163 = phi %"class.Ice::CfgNode"** [ %109, %105 ], [ %147, %159 ]
  %164 = add nuw nsw i64 %100, 1
  %165 = load i32, i32* %7, align 8
  %166 = zext i32 %165 to i64
  %167 = icmp ult i64 %164, %166
  br i1 %167, label %98, label %88
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice10InstSwitch12repointEdgesEPNS_7CfgNodeES2_(%"class.Ice::InstSwitch"* nocapture, %"class.Ice::CfgNode"* readnone, %"class.Ice::CfgNode"*) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 1
  %5 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %4, align 8
  %6 = icmp eq %"class.Ice::CfgNode"* %5, %1
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  store %"class.Ice::CfgNode"* %2, %"class.Ice::CfgNode"** %4, align 8
  br label %8

8:                                                ; preds = %7, %3
  %9 = phi i8 [ 1, %7 ], [ 0, %3 ]
  %10 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 4
  br label %19

15:                                               ; preds = %29, %8
  %16 = phi i8 [ %9, %8 ], [ %31, %29 ]
  %17 = and i8 %16, 1
  %18 = icmp ne i8 %17, 0
  ret i1 %18

19:                                               ; preds = %13, %29
  %20 = phi i32 [ %11, %13 ], [ %30, %29 ]
  %21 = phi i64 [ 0, %13 ], [ %32, %29 ]
  %22 = phi i8 [ %9, %13 ], [ %31, %29 ]
  %23 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %14, align 8
  %24 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %23, i64 %21
  %25 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %24, align 8
  %26 = icmp eq %"class.Ice::CfgNode"* %25, %1
  br i1 %26, label %27, label %29

27:                                               ; preds = %19
  store %"class.Ice::CfgNode"* %2, %"class.Ice::CfgNode"** %24, align 8
  %28 = load i32, i32* %10, align 8
  br label %29

29:                                               ; preds = %19, %27
  %30 = phi i32 [ %28, %27 ], [ %20, %19 ]
  %31 = phi i8 [ 1, %27 ], [ %22, %19 ]
  %32 = add nuw nsw i64 %21, 1
  %33 = zext i32 %30 to i64
  %34 = icmp ult i64 %32, %33
  br i1 %34, label %19, label %15
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice15InstUnreachableC2EPNS_3CfgE(%"class.Ice::InstUnreachable"*, %"class.Ice::Cfg"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::InstUnreachable", %"class.Ice::InstUnreachable"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.llvm::ilist_node"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #16
  %5 = getelementptr inbounds %"class.Ice::InstUnreachable", %"class.Ice::InstUnreachable"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.Ice::InstUnreachable", %"class.Ice::InstUnreachable"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.Ice::InstUnreachable", %"class.Ice::InstUnreachable"* %0, i64 0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* %8, align 8
  store i32 %9, i32* %7, align 4
  %11 = getelementptr inbounds %"class.Ice::InstUnreachable", %"class.Ice::InstUnreachable"* %0, i64 0, i32 0, i32 0, i32 4
  %12 = getelementptr inbounds %"class.Ice::InstUnreachable", %"class.Ice::InstUnreachable"* %0, i64 0, i32 0, i32 0, i32 9
  %13 = bitcast i8* %11 to i32*
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.Ice::InstUnreachable", %"class.Ice::InstUnreachable"* %0, i64 0, i32 0, i32 0, i32 13
  %15 = bitcast %"class.std::__1::vector.25"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 36, i1 false) #16
  %16 = bitcast i8** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false)
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %14, i64 0) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice15InstUnreachableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14InstBundleLockC2EPNS_3CfgENS0_6OptionE(%"class.Ice::InstBundleLock"*, %"class.Ice::Cfg"* nocapture, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.Ice::InstBundleLock", %"class.Ice::InstBundleLock"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.llvm::ilist_node"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #16
  %6 = getelementptr inbounds %"class.Ice::InstBundleLock", %"class.Ice::InstBundleLock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.Ice::InstBundleLock", %"class.Ice::InstBundleLock"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 19, i32* %7, align 8
  %8 = getelementptr inbounds %"class.Ice::InstBundleLock", %"class.Ice::InstBundleLock"* %0, i64 0, i32 0, i32 0, i32 3
  %9 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  store i32 %10, i32* %8, align 4
  %12 = getelementptr inbounds %"class.Ice::InstBundleLock", %"class.Ice::InstBundleLock"* %0, i64 0, i32 0, i32 0, i32 4
  %13 = getelementptr inbounds %"class.Ice::InstBundleLock", %"class.Ice::InstBundleLock"* %0, i64 0, i32 0, i32 0, i32 9
  %14 = bitcast i8* %12 to i32*
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.Ice::InstBundleLock", %"class.Ice::InstBundleLock"* %0, i64 0, i32 0, i32 0, i32 13
  %16 = bitcast %"class.std::__1::vector.25"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 36, i1 false) #16
  %17 = bitcast i8** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false)
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %15, i64 0) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice14InstBundleLockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %18 = getelementptr inbounds %"class.Ice::InstBundleLock", %"class.Ice::InstBundleLock"* %0, i64 0, i32 1
  store i32 %2, i32* %18, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice16InstBundleUnlockC2EPNS_3CfgE(%"class.Ice::InstBundleUnlock"*, %"class.Ice::Cfg"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::InstBundleUnlock", %"class.Ice::InstBundleUnlock"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.llvm::ilist_node"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #16
  %5 = getelementptr inbounds %"class.Ice::InstBundleUnlock", %"class.Ice::InstBundleUnlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.Ice::InstBundleUnlock", %"class.Ice::InstBundleUnlock"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 20, i32* %6, align 8
  %7 = getelementptr inbounds %"class.Ice::InstBundleUnlock", %"class.Ice::InstBundleUnlock"* %0, i64 0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* %8, align 8
  store i32 %9, i32* %7, align 4
  %11 = getelementptr inbounds %"class.Ice::InstBundleUnlock", %"class.Ice::InstBundleUnlock"* %0, i64 0, i32 0, i32 0, i32 4
  %12 = getelementptr inbounds %"class.Ice::InstBundleUnlock", %"class.Ice::InstBundleUnlock"* %0, i64 0, i32 0, i32 0, i32 9
  %13 = bitcast i8* %11 to i32*
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.Ice::InstBundleUnlock", %"class.Ice::InstBundleUnlock"* %0, i64 0, i32 0, i32 0, i32 13
  %15 = bitcast %"class.std::__1::vector.25"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 36, i1 false) #16
  %16 = bitcast i8** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false)
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %14, i64 0) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice16InstBundleUnlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice11InstFakeDefC2EPNS_3CfgEPNS_8VariableES4_(%"class.Ice::InstFakeDef"*, %"class.Ice::Cfg"* nocapture, %"class.Ice::Variable"*, %"class.Ice::Variable"*) unnamed_addr #0 align 2 {
  %5 = icmp ne %"class.Ice::Variable"* %3, null
  %6 = zext i1 %5 to i32
  %7 = getelementptr inbounds %"class.Ice::InstFakeDef", %"class.Ice::InstFakeDef"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.llvm::ilist_node"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #16
  %9 = getelementptr inbounds %"class.Ice::InstFakeDef", %"class.Ice::InstFakeDef"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.Ice::InstFakeDef", %"class.Ice::InstFakeDef"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 21, i32* %10, align 8
  %11 = getelementptr inbounds %"class.Ice::InstFakeDef", %"class.Ice::InstFakeDef"* %0, i64 0, i32 0, i32 0, i32 3
  %12 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  store i32 %13, i32* %11, align 4
  %15 = getelementptr inbounds %"class.Ice::InstFakeDef", %"class.Ice::InstFakeDef"* %0, i64 0, i32 0, i32 0, i32 4
  %16 = getelementptr inbounds %"class.Ice::InstFakeDef", %"class.Ice::InstFakeDef"* %0, i64 0, i32 0, i32 0, i32 9
  store i8* null, i8** %16, align 8
  %17 = getelementptr inbounds %"class.Ice::InstFakeDef", %"class.Ice::InstFakeDef"* %0, i64 0, i32 0, i32 0, i32 10
  %18 = bitcast i8* %15 to i32*
  store i32 0, i32* %18, align 8
  store %"class.Ice::Variable"* %2, %"class.Ice::Variable"** %17, align 8
  %19 = getelementptr inbounds %"class.Ice::InstFakeDef", %"class.Ice::InstFakeDef"* %0, i64 0, i32 0, i32 0, i32 11
  store i32 %6, i32* %19, align 8
  %20 = getelementptr inbounds %"class.Ice::InstFakeDef", %"class.Ice::InstFakeDef"* %0, i64 0, i32 0, i32 0, i32 13
  %21 = zext i1 %5 to i64
  %22 = bitcast %"class.std::__1::vector.25"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %20, i64 %21) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice11InstFakeDefE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  br i1 %5, label %23, label %26

23:                                               ; preds = %4
  %24 = bitcast %"class.Ice::InstFakeDef"* %0 to %"class.Ice::Inst"*
  %25 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %3, i64 0, i32 0
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %24, %"class.Ice::Operand"* %25) #18
  br label %26

26:                                               ; preds = %23, %4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice11InstFakeUseC2EPNS_3CfgEPNS_8VariableEj(%"class.Ice::InstFakeUse"*, %"class.Ice::Cfg"* nocapture, %"class.Ice::Variable"*, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.Ice::InstFakeUse", %"class.Ice::InstFakeUse"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.llvm::ilist_node"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #16
  %7 = getelementptr inbounds %"class.Ice::InstFakeUse", %"class.Ice::InstFakeUse"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.Ice::InstFakeUse", %"class.Ice::InstFakeUse"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 22, i32* %8, align 8
  %9 = getelementptr inbounds %"class.Ice::InstFakeUse", %"class.Ice::InstFakeUse"* %0, i64 0, i32 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  store i32 %11, i32* %9, align 4
  %13 = getelementptr inbounds %"class.Ice::InstFakeUse", %"class.Ice::InstFakeUse"* %0, i64 0, i32 0, i32 0, i32 4
  %14 = getelementptr inbounds %"class.Ice::InstFakeUse", %"class.Ice::InstFakeUse"* %0, i64 0, i32 0, i32 0, i32 9
  %15 = bitcast i8* %13 to i32*
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.Ice::InstFakeUse", %"class.Ice::InstFakeUse"* %0, i64 0, i32 0, i32 0, i32 11
  %17 = bitcast i8** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  store i32 %3, i32* %16, align 8
  %18 = getelementptr inbounds %"class.Ice::InstFakeUse", %"class.Ice::InstFakeUse"* %0, i64 0, i32 0, i32 0, i32 13
  %19 = zext i32 %3 to i64
  %20 = bitcast %"class.std::__1::vector.25"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %18, i64 %19) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice11InstFakeUseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %21 = icmp eq i32 %3, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %4
  %23 = bitcast %"class.Ice::InstFakeUse"* %0 to %"class.Ice::Inst"*
  %24 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %2, i64 0, i32 0
  br label %26

25:                                               ; preds = %26, %4
  ret void

26:                                               ; preds = %26, %22
  %27 = phi i32 [ 0, %22 ], [ %28, %26 ]
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %23, %"class.Ice::Operand"* %24) #18
  %28 = add nuw i32 %27, 1
  %29 = icmp eq i32 %28, %3
  br i1 %29, label %25, label %26
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice12InstFakeKillC2EPNS_3CfgEPKNS_4InstE(%"class.Ice::InstFakeKill"*, %"class.Ice::Cfg"* nocapture, %"class.Ice::Inst"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.Ice::InstFakeKill", %"class.Ice::InstFakeKill"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.llvm::ilist_node"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #16
  %6 = getelementptr inbounds %"class.Ice::InstFakeKill", %"class.Ice::InstFakeKill"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.Ice::InstFakeKill", %"class.Ice::InstFakeKill"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 23, i32* %7, align 8
  %8 = getelementptr inbounds %"class.Ice::InstFakeKill", %"class.Ice::InstFakeKill"* %0, i64 0, i32 0, i32 0, i32 3
  %9 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  store i32 %10, i32* %8, align 4
  %12 = getelementptr inbounds %"class.Ice::InstFakeKill", %"class.Ice::InstFakeKill"* %0, i64 0, i32 0, i32 0, i32 4
  %13 = getelementptr inbounds %"class.Ice::InstFakeKill", %"class.Ice::InstFakeKill"* %0, i64 0, i32 0, i32 0, i32 9
  %14 = bitcast i8* %12 to i32*
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.Ice::InstFakeKill", %"class.Ice::InstFakeKill"* %0, i64 0, i32 0, i32 0, i32 13
  %16 = bitcast %"class.std::__1::vector.25"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 36, i1 false) #16
  %17 = bitcast i8** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false)
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %15, i64 0) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice12InstFakeKillE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %18 = getelementptr inbounds %"class.Ice::InstFakeKill", %"class.Ice::InstFakeKill"* %0, i64 0, i32 1
  store %"class.Ice::Inst"* %2, %"class.Ice::Inst"** %18, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice17InstShuffleVectorC2EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_(%"class.Ice::InstShuffleVector"*, %"class.Ice::Cfg"* nocapture, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.llvm::ilist_node"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #16
  %8 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 25, i32* %9, align 8
  %10 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 0, i32 0, i32 3
  %11 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  store i32 %12, i32* %10, align 4
  %14 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 0, i32 0, i32 4
  %15 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 0, i32 0, i32 9
  store i8* null, i8** %15, align 8
  %16 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 0, i32 0, i32 10
  %17 = bitcast i8* %14 to i32*
  store i32 0, i32* %17, align 8
  store %"class.Ice::Variable"* %2, %"class.Ice::Variable"** %16, align 8
  %18 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 0, i32 0, i32 11
  store i32 2, i32* %18, align 8
  %19 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 0, i32 0, i32 13
  %20 = bitcast %"class.std::__1::vector.25"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %19, i64 2) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice17InstShuffleVectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %21 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 2
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %2, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = tail call i64 @_ZN3Ice15typeNumElementsENS_4TypeE(i32 %24) #19
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %22, align 4
  %27 = bitcast %"class.Ice::InstShuffleVector"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %27, %"class.Ice::Operand"* %3) #18
  tail call void @_ZN3Ice4Inst9addSourceEPNS_7OperandE(%"class.Ice::Inst"* %27, %"class.Ice::Operand"* %4) #18
  %28 = load i32, i32* %22, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %30, align 8
  %32 = shl nuw nsw i64 %29, 3
  %33 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %31, i64 %32, i64 8) #19
  %34 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 1
  %35 = bitcast %"class.Ice::ConstantPrimitive"*** %34 to i8**
  store i8* %33, i8** %35, align 8
  ret void
}

; Function Attrs: optsize
declare i64 @_ZN3Ice15typeNumElementsENS_4TypeE(i32) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice13InstJumpTableC2EPNS_3CfgEjPNS_7CfgNodeE(%"class.Ice::InstJumpTable"*, %"class.Ice::Cfg"* nocapture, i32, %"class.Ice::CfgNode"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.Ice::StringID.96", align 8
  %6 = alloca %"class.Ice::StringID.96", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.llvm::ilist_node"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #16
  %18 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 24, i32* %19, align 8
  %20 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 0, i32 0, i32 3
  %21 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %22 = load i32, i32* %21, align 8
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %21, align 8
  store i32 %22, i32* %20, align 4
  %24 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 0, i32 0, i32 4
  %25 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 0, i32 0, i32 9
  %26 = bitcast i8* %24 to i32*
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 0, i32 0, i32 11
  %28 = bitcast i8** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false)
  store i32 1, i32* %27, align 8
  %29 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 0, i32 0, i32 13
  %30 = bitcast %"class.std::__1::vector.25"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 36, i1 false) #16
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %29, i64 1) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice13InstJumpTableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %31 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 1
  %32 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 23, i32 0, i32 0, i32 0
  %33 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %32, align 8
  %34 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %33, i64 0, i32 10
  %35 = load i32, i32* %34, align 8
  %36 = add i32 %35, 1
  store i32 %36, i32* %34, align 8
  store i32 %35, i32* %31, align 4
  %37 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 2
  store i32 %2, i32* %37, align 8
  %38 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 6, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 1
  %41 = load %"class.Ice::GlobalContext"*, %"class.Ice::GlobalContext"** %40, align 8
  %42 = icmp ne i64 %39, 0
  %43 = and i64 %39, 1
  %44 = icmp eq i64 %43, 0
  %45 = and i1 %42, %44
  br i1 %45, label %46, label %98

46:                                               ; preds = %4
  %47 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #16
  %48 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #16
  %49 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #16
  %50 = inttoptr i64 %39 to %"class.std::__1::basic_string"*
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %50) #19
  %51 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0)) #19, !noalias !3
  %52 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* align 8 %52, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #16, !noalias !3
  %53 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #16
  call void @_ZNSt3__19to_stringEj(%"class.std::__1::basic_string"* nonnull sret %10, i32 %35) #19
  %54 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1, !noalias !6
  %57 = icmp slt i8 %56, 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8, !noalias !6
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8, !noalias !6
  %62 = zext i8 %56 to i64
  %63 = select i1 %57, i8* %59, i8* %53
  %64 = select i1 %57, i64 %61, i64 %62
  %65 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %63, i64 %64) #19, !noalias !6
  %66 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 %66, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #16, !noalias !6
  %67 = bitcast %"class.Ice::StringID.96"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #16
  call void @_ZN3Ice8StringIDINS_22GlobalStringPoolTraitsEEC2EPKNS_13GlobalContextERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.Ice::StringID.96"* nonnull %6, %"class.Ice::GlobalContext"* %41, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #19
  %68 = getelementptr inbounds %"class.Ice::StringID.96", %"class.Ice::StringID.96"* %6, i64 0, i32 0
  %69 = load i64, i64* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #16
  %70 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %46
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #21
  br label %77

77:                                               ; preds = %74, %46
  %78 = load i8, i8* %55, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %77
  %81 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %81) #21
  br label %82

82:                                               ; preds = %80, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #16
  %83 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %89) #21
  br label %90

90:                                               ; preds = %87, %82
  %91 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %161

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #21
  br label %161

98:                                               ; preds = %4
  %99 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #16
  %100 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #16
  %101 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #16
  %102 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #16
  call void @_ZNSt3__19to_stringEm(%"class.std::__1::basic_string"* nonnull sret %14, i64 %39) #19
  %103 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %14, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0)) #19, !noalias !9
  %104 = bitcast %"class.std::__1::basic_string"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* align 8 %104, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #16, !noalias !9
  %105 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)) #19, !noalias !12
  %106 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %100, i8* align 8 %106, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false) #16, !noalias !12
  %107 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #16
  call void @_ZNSt3__19to_stringEj(%"class.std::__1::basic_string"* nonnull sret %15, i32 %35) #19
  %108 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1, !noalias !15
  %111 = icmp slt i8 %110, 0
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8, !noalias !15
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8, !noalias !15
  %116 = zext i8 %110 to i64
  %117 = select i1 %111, i8* %113, i8* %107
  %118 = select i1 %111, i64 %115, i64 %116
  %119 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %117, i64 %118) #19, !noalias !15
  %120 = bitcast %"class.std::__1::basic_string"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %99, i8* align 8 %120, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #16, !noalias !15
  %121 = bitcast %"class.Ice::StringID.96"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #16
  call void @_ZN3Ice8StringIDINS_22GlobalStringPoolTraitsEEC2EPKNS_13GlobalContextERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.Ice::StringID.96"* nonnull %5, %"class.Ice::GlobalContext"* %41, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #19
  %122 = getelementptr inbounds %"class.Ice::StringID.96", %"class.Ice::StringID.96"* %5, i64 0, i32 0
  %123 = load i64, i64* %122, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #16
  %124 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %98
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #21
  br label %131

131:                                              ; preds = %128, %98
  %132 = load i8, i8* %109, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %131
  %135 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %135) #21
  br label %136

136:                                              ; preds = %134, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #16
  %137 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  call void @_ZdlPv(i8* %143) #21
  br label %144

144:                                              ; preds = %141, %136
  %145 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  call void @_ZdlPv(i8* %151) #21
  br label %152

152:                                              ; preds = %149, %144
  %153 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #21
  br label %160

160:                                              ; preds = %157, %152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #16
  br label %161

161:                                              ; preds = %90, %95, %160
  %162 = phi i8* [ %101, %160 ], [ %49, %95 ], [ %49, %90 ]
  %163 = phi i8* [ %100, %160 ], [ %48, %95 ], [ %48, %90 ]
  %164 = phi i8* [ %99, %160 ], [ %47, %95 ], [ %47, %90 ]
  %165 = phi i64 [ %123, %160 ], [ %69, %95 ], [ %69, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #16
  %166 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 4, i32 0
  store i64 %165, i64* %166, align 8
  %167 = load i64, i64* %38, align 8
  %168 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 5, i32 0
  store i64 %167, i64* %168, align 8
  %169 = zext i32 %2 to i64
  %170 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %171 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %170, align 8
  %172 = shl nuw nsw i64 %169, 3
  %173 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %171, i64 %172, i64 8) #19
  %174 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 3
  %175 = bitcast %"class.Ice::CfgNode"*** %174 to i8**
  store i8* %173, i8** %175, align 8
  %176 = icmp eq i32 %2, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %161
  %178 = bitcast i8* %173 to %"class.Ice::CfgNode"**
  store %"class.Ice::CfgNode"* %3, %"class.Ice::CfgNode"** %178, align 8
  %179 = icmp eq i32 %2, 1
  br i1 %179, label %180, label %181

180:                                              ; preds = %181, %177, %161
  ret void

181:                                              ; preds = %177, %181
  %182 = phi i64 [ %185, %181 ], [ 1, %177 ]
  %183 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %174, align 8
  %184 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %183, i64 %182
  store %"class.Ice::CfgNode"* %3, %"class.Ice::CfgNode"** %184, align 8
  %185 = add nuw nsw i64 %182, 1
  %186 = icmp eq i64 %185, %169
  br i1 %186, label %180, label %181
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice13InstJumpTable12repointEdgesEPNS_7CfgNodeES2_(%"class.Ice::InstJumpTable"* nocapture readonly, %"class.Ice::CfgNode"* readnone, %"class.Ice::CfgNode"*) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 3
  br label %13

9:                                                ; preds = %23, %3
  %10 = phi i8 [ 0, %3 ], [ %25, %23 ]
  %11 = and i8 %10, 1
  %12 = icmp ne i8 %11, 0
  ret i1 %12

13:                                               ; preds = %7, %23
  %14 = phi i32 [ %5, %7 ], [ %24, %23 ]
  %15 = phi i64 [ 0, %7 ], [ %26, %23 ]
  %16 = phi i8 [ 0, %7 ], [ %25, %23 ]
  %17 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %8, align 8
  %18 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %17, i64 %15
  %19 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %18, align 8
  %20 = icmp eq %"class.Ice::CfgNode"* %19, %1
  br i1 %20, label %21, label %23

21:                                               ; preds = %13
  store %"class.Ice::CfgNode"* %2, %"class.Ice::CfgNode"** %18, align 8
  %22 = load i32, i32* %4, align 8
  br label %23

23:                                               ; preds = %13, %21
  %24 = phi i32 [ %22, %21 ], [ %14, %13 ]
  %25 = phi i8 [ 1, %21 ], [ %16, %13 ]
  %26 = add nuw nsw i64 %15, 1
  %27 = zext i32 %24 to i64
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %13, label %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK3Ice13InstJumpTable15toJumpTableDataEPNS_9AssemblerE(%"class.Ice::JumpTableData"* noalias sret, %"class.Ice::InstJumpTable"* nocapture readonly, %"class.Ice::Assembler"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.97", align 8
  %5 = bitcast %"class.std::__1::vector.97"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %1, i64 0, i32 2
  %9 = bitcast %"class.std::__1::vector.97"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load i32, i32* %8, align 8
  %11 = zext i32 %10 to i64
  call void @_ZNSt3__16vectorIlNS_9allocatorIlEEEC2Em(%"class.std::__1::vector.97"* nonnull %4, i64 %11) #18
  %12 = load i32, i32* %8, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %1, i64 0, i32 3
  %16 = bitcast %"class.Ice::Assembler"* %2 to %"class.Ice::Label"* (%"class.Ice::Assembler"*, i32)***
  br label %33

17:                                               ; preds = %33, %3
  %18 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %1, i64 0, i32 4, i32 0
  %19 = bitcast i64* %18 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  %21 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %1, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.Ice::JumpTableData"* %0 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %23, align 8
  %24 = getelementptr inbounds %"class.Ice::JumpTableData", %"class.Ice::JumpTableData"* %0, i64 0, i32 2
  store i32 %22, i32* %24, align 8
  %25 = getelementptr inbounds %"class.Ice::JumpTableData", %"class.Ice::JumpTableData"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorIlNS_9allocatorIlEEEC2ERKS3_(%"class.std::__1::vector.97"* %25, %"class.std::__1::vector.97"* nonnull dereferenceable(24) %4) #19
  %26 = load i64*, i64** %6, align 8
  %27 = icmp eq i64* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = ptrtoint i64* %26 to i64
  %30 = bitcast i64** %7 to i64*
  store i64 %29, i64* %30, align 8
  %31 = bitcast i64* %26 to i8*
  call void @_ZdlPv(i8* %31) #21
  br label %32

32:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void

33:                                               ; preds = %14, %33
  %34 = phi i64 [ 0, %14 ], [ %49, %33 ]
  %35 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %15, align 8
  %36 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %35, i64 %34
  %37 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %36, align 8
  %38 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %37, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = load %"class.Ice::Label"* (%"class.Ice::Assembler"*, i32)**, %"class.Ice::Label"* (%"class.Ice::Assembler"*, i32)*** %16, align 8
  %41 = getelementptr inbounds %"class.Ice::Label"* (%"class.Ice::Assembler"*, i32)*, %"class.Ice::Label"* (%"class.Ice::Assembler"*, i32)** %40, i64 7
  %42 = load %"class.Ice::Label"* (%"class.Ice::Assembler"*, i32)*, %"class.Ice::Label"* (%"class.Ice::Assembler"*, i32)** %41, align 8
  %43 = call %"class.Ice::Label"* %42(%"class.Ice::Assembler"* %2, i32 %39) #19
  %44 = getelementptr inbounds %"class.Ice::Label", %"class.Ice::Label"* %43, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 -4, %45
  %47 = load i64*, i64** %6, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 %34
  store i64 %46, i64* %48, align 8
  %49 = add nuw nsw i64 %34, 1
  %50 = load i32, i32* %8, align 8
  %51 = zext i32 %50 to i64
  %52 = icmp ult i64 %49, %51
  br i1 %52, label %33, label %17
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIlNS_9allocatorIlEEEC2Em(%"class.std::__1::vector.97"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.97"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #16
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %2
  tail call void @_ZNSt3__16vectorIlNS_9allocatorIlEEE11__vallocateEm(%"class.std::__1::vector.97"* %0, i64 %1) #18
  %6 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i64** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = inttoptr i64 %8 to i64*
  %10 = getelementptr inbounds i64, i64* %9, i64 %1
  %11 = inttoptr i64 %8 to i8*
  %12 = add i64 %1, -1
  %13 = getelementptr i64, i64* %9, i64 %12
  %14 = bitcast i64* %13 to i8*
  %15 = sub i64 0, %8
  %16 = getelementptr i8, i8* %14, i64 %15
  %17 = ptrtoint i8* %16 to i64
  %18 = add i64 %17, 8
  %19 = and i64 %18, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 %19, i1 false) #16
  %20 = ptrtoint i64* %10 to i64
  store i64 %20, i64* %7, align 8
  br label %21

21:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK3Ice8InstCall13getReturnTypeEv(%"class.Ice::InstCall"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstCall", %"class.Ice::InstCall"* %0, i64 0, i32 0, i32 0, i32 10
  %3 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %2, align 8
  %4 = icmp eq %"class.Ice::Variable"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %3, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ]
  ret i32 %9
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice4Inst13dumpDecoratedEPKNS_3CfgE(%"class.Ice::Inst"* nocapture, %"class.Ice::Cfg"* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice4Inst4dumpEPKNS_3CfgE(%"class.Ice::Inst"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice4Inst10dumpExtrasEPKNS_3CfgE(%"class.Ice::Inst"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice4Inst11dumpSourcesEPKNS_3CfgE(%"class.Ice::Inst"* nocapture, %"class.Ice::Cfg"* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice4Inst11emitSourcesEPKNS_3CfgE(%"class.Ice::Inst"* nocapture, %"class.Ice::Cfg"* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice4Inst8dumpDestEPKNS_3CfgE(%"class.Ice::Inst"* nocapture, %"class.Ice::Cfg"* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice10InstAlloca4dumpEPKNS_3CfgE(%"class.Ice::InstAlloca"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice14InstArithmetic4dumpEPKNS_3CfgE(%"class.Ice::InstArithmetic"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice10InstAssign4dumpEPKNS_3CfgE(%"class.Ice::InstAssign"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice6InstBr4dumpEPKNS_3CfgE(%"class.Ice::InstBr"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice8InstCall4dumpEPKNS_3CfgE(%"class.Ice::InstCall"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i8* @_ZN3Ice8InstCast11getCastNameENS0_6OpKindE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp slt i32 %0, 10
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds [10 x %"struct.Ice::(anonymous namespace)::InstCastAttributes_"], [10 x %"struct.Ice::(anonymous namespace)::InstCastAttributes_"]* @_ZN3Ice12_GLOBAL__N_118InstCastAttributesE, i64 0, i64 %3, i32 0
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice8InstCast4dumpEPKNS_3CfgE(%"class.Ice::InstCast"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice8InstIcmp4dumpEPKNS_3CfgE(%"class.Ice::InstIcmp"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice18InstExtractElement4dumpEPKNS_3CfgE(%"class.Ice::InstExtractElement"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice17InstInsertElement4dumpEPKNS_3CfgE(%"class.Ice::InstInsertElement"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice8InstFcmp4dumpEPKNS_3CfgE(%"class.Ice::InstFcmp"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice8InstLoad4dumpEPKNS_3CfgE(%"class.Ice::InstLoad"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice9InstStore4dumpEPKNS_3CfgE(%"class.Ice::InstStore"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice10InstSwitch4dumpEPKNS_3CfgE(%"class.Ice::InstSwitch"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice7InstPhi4dumpEPKNS_3CfgE(%"class.Ice::InstPhi"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice7InstRet4dumpEPKNS_3CfgE(%"class.Ice::InstRet"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice10InstSelect4dumpEPKNS_3CfgE(%"class.Ice::InstSelect"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice15InstUnreachable4dumpEPKNS_3CfgE(%"class.Ice::InstUnreachable"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice14InstBundleLock4emitEPKNS_3CfgE(%"class.Ice::InstBundleLock"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice14InstBundleLock4dumpEPKNS_3CfgE(%"class.Ice::InstBundleLock"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice16InstBundleUnlock4emitEPKNS_3CfgE(%"class.Ice::InstBundleUnlock"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice16InstBundleUnlock4dumpEPKNS_3CfgE(%"class.Ice::InstBundleUnlock"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice11InstFakeDef4emitEPKNS_3CfgE(%"class.Ice::InstFakeDef"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice11InstFakeDef4dumpEPKNS_3CfgE(%"class.Ice::InstFakeDef"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice11InstFakeUse4emitEPKNS_3CfgE(%"class.Ice::InstFakeUse"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice11InstFakeUse4dumpEPKNS_3CfgE(%"class.Ice::InstFakeUse"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice12InstFakeKill4emitEPKNS_3CfgE(%"class.Ice::InstFakeKill"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice12InstFakeKill4dumpEPKNS_3CfgE(%"class.Ice::InstFakeKill"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice17InstShuffleVector4dumpEPKNS_3CfgE(%"class.Ice::InstShuffleVector"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice13InstJumpTable4dumpEPKNS_3CfgE(%"class.Ice::InstJumpTable"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice10InstTarget4dumpEPKNS_3CfgE(%"class.Ice::InstTarget"* nocapture, %"class.Ice::Cfg"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14InstBreakpointC2EPNS_3CfgE(%"class.Ice::InstBreakpoint"*, %"class.Ice::Cfg"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::InstBreakpoint", %"class.Ice::InstBreakpoint"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.llvm::ilist_node"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #16
  %5 = getelementptr inbounds %"class.Ice::InstBreakpoint", %"class.Ice::InstBreakpoint"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.Ice::InstBreakpoint", %"class.Ice::InstBreakpoint"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 18, i32* %6, align 8
  %7 = getelementptr inbounds %"class.Ice::InstBreakpoint", %"class.Ice::InstBreakpoint"* %0, i64 0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 15
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* %8, align 8
  store i32 %9, i32* %7, align 4
  %11 = getelementptr inbounds %"class.Ice::InstBreakpoint", %"class.Ice::InstBreakpoint"* %0, i64 0, i32 0, i32 0, i32 4
  %12 = getelementptr inbounds %"class.Ice::InstBreakpoint", %"class.Ice::InstBreakpoint"* %0, i64 0, i32 0, i32 0, i32 9
  %13 = bitcast i8* %11 to i32*
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.Ice::InstBreakpoint", %"class.Ice::InstBreakpoint"* %0, i64 0, i32 0, i32 0, i32 13
  %15 = bitcast %"class.std::__1::vector.25"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 36, i1 false) #16
  %16 = bitcast i8** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false)
  tail call void @_ZNSt3__16vectorIPN3Ice7OperandENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.25"* %14, i64 0) #19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice14InstBreakpointE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3Ice8InstIcmp27reverseConditionAndOperandsEv(%"class.Ice::InstIcmp"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = zext i32 %3 to i64
  %5 = getelementptr inbounds [10 x %"struct.Ice::(anonymous namespace)::InstIcmpAttributes_"], [10 x %"struct.Ice::(anonymous namespace)::InstIcmpAttributes_"]* @_ZN3Ice12_GLOBAL__N_118InstIcmpAttributesE, i64 0, i64 %4, i32 1
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %2, align 4
  %7 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %8 = bitcast %"class.Ice::Operand"*** %7 to i64**
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast i64* %9 to <2 x i64>*
  %11 = load <2 x i64>, <2 x i64>* %10, align 8
  %12 = shufflevector <2 x i64> %11, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %13 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %13, align 8
  ret void
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZN3Ice23checkForRedundantAssignEPKNS_8VariableEPKNS_7OperandE(%"class.Ice::Variable"* nocapture readonly, %"class.Ice::Operand"* readonly) local_unnamed_addr #8 {
  %3 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -18
  %6 = icmp ugt i32 %5, 14
  %7 = icmp eq %"class.Ice::Operand"* %1, null
  %8 = or i1 %7, %6
  br i1 %8, label %78, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 9, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, -1
  %13 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %1, i64 1, i32 4
  %14 = bitcast %"class.Ice::Variable"*** %13 to i32*
  %15 = load i32, i32* %14, align 8
  br i1 %12, label %18, label %16

16:                                               ; preds = %9
  %17 = icmp eq i32 %11, %15
  br i1 %17, label %78, label %31

18:                                               ; preds = %9
  %19 = icmp eq i32 %15, -1
  br i1 %19, label %20, label %33

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 11
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, -2147483648
  br i1 %23, label %78, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %1, i64 1, i32 5
  %26 = bitcast i8** %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = icmp ne i32 %27, -2147483648
  %29 = icmp eq i32 %22, %27
  %30 = and i1 %29, %28
  ret i1 %30

31:                                               ; preds = %16
  %32 = icmp eq i32 %15, -1
  br i1 %32, label %77, label %33

33:                                               ; preds = %18, %31
  %34 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 11
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, -2147483648
  br i1 %36, label %77, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %0, i64 0, i32 14
  %39 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %38, align 8
  %40 = icmp eq %"class.Ice::Variable"* %39, null
  br i1 %40, label %77, label %41

41:                                               ; preds = %37, %52
  %42 = phi %"class.Ice::Variable"* [ %55, %52 ], [ %39, %37 ]
  %43 = phi %"class.Ice::Variable"* [ %53, %52 ], [ null, %37 ]
  %44 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %42, i64 0, i32 9, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %47, label %52

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %42, i64 0, i32 11
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, -2147483648
  %51 = select i1 %50, %"class.Ice::Variable"* %43, %"class.Ice::Variable"* %42
  br label %52

52:                                               ; preds = %47, %41
  %53 = phi %"class.Ice::Variable"* [ %43, %41 ], [ %51, %47 ]
  %54 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %42, i64 0, i32 14
  %55 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %54, align 8
  %56 = icmp eq %"class.Ice::Variable"* %55, null
  br i1 %56, label %57, label %41

57:                                               ; preds = %52
  %58 = icmp eq %"class.Ice::Variable"* %53, null
  br i1 %58, label %77, label %59

59:                                               ; preds = %57, %59
  %60 = phi %"class.Ice::Variable"* [ %62, %59 ], [ %39, %57 ]
  %61 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %60, i64 0, i32 14
  %62 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %61, align 8
  %63 = icmp eq %"class.Ice::Variable"* %62, null
  br i1 %63, label %64, label %59

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %1, i64 4, i32 4
  %66 = bitcast %"class.Ice::Variable"*** %65 to %"class.Ice::Variable"**
  %67 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %66, align 8
  %68 = icmp eq %"class.Ice::Variable"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %64, %69
  %70 = phi %"class.Ice::Variable"* [ %72, %69 ], [ %67, %64 ]
  %71 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %70, i64 0, i32 14
  %72 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %71, align 8
  %73 = icmp eq %"class.Ice::Variable"* %72, null
  br i1 %73, label %74, label %69

74:                                               ; preds = %69, %64
  %75 = phi %"class.Ice::Variable"* [ null, %64 ], [ %70, %69 ]
  %76 = icmp eq %"class.Ice::Variable"* %60, %75
  br i1 %76, label %78, label %77

77:                                               ; preds = %33, %31, %37, %57, %74
  br label %78

78:                                               ; preds = %20, %74, %16, %2, %77
  %79 = phi i1 [ false, %77 ], [ false, %2 ], [ true, %16 ], [ false, %20 ], [ true, %74 ]
  ret i1 %79
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice4Inst18getTerminatorEdgesEv(%"class.std::__1::vector.234"* noalias sret, %"class.Ice::Inst"*) unnamed_addr #0 comdat align 2 {
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice4Inst21isUnconditionalBranchEv(%"class.Ice::Inst"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3Ice4Inst12repointEdgesEPNS_7CfgNodeES2_(%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice4Inst11isVarAssignEv(%"class.Ice::Inst"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice4Inst7isLabelEv(%"class.Ice::Inst"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::Inst"* @_ZNK3Ice4Inst25getIntraBlockBranchTargetEv(%"class.Ice::Inst"*) unnamed_addr #0 comdat align 2 {
  ret %"class.Ice::Inst"* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice4Inst16getEmitInstCountEv(%"class.Ice::Inst"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice4Inst4emitEPKNS_3CfgE(%"class.Ice::Inst"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice4Inst7emitIASEPKNS_3CfgE(%"class.Ice::Inst"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.Ice::Inst"* %0 to void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)***
  %4 = load void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)**, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)** %4, i64 9
  %6 = load void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)** %5, align 8
  tail call void %6(%"class.Ice::Inst"* %0, %"class.Ice::Cfg"* %1) #19
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice4Inst17isRedundantAssignEv(%"class.Ice::Inst"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice4InstD0Ev(%"class.Ice::Inst"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice4Inst7destroyEPNS_3CfgE(%"class.Ice::Inst"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice8InstCall13isMemoryWriteEv(%"class.Ice::InstCall"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice13InstHighLevel4emitEPKNS_3CfgE(%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice13InstHighLevel7emitIASEPKNS_3CfgE(%"class.Ice::InstHighLevel"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  unreachable
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice8InstCallD0Ev(%"class.Ice::InstCall"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstCall", %"class.Ice::InstCall"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstCall", %"class.Ice::InstCall"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstCall", %"class.Ice::InstCall"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice10InstTarget13isMemoryWriteEv(%"class.Ice::InstTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice10InstTarget16getEmitInstCountEv(%"class.Ice::InstTarget"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice10InstTargetD0Ev(%"class.Ice::InstTarget"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstTarget", %"class.Ice::InstTarget"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstTarget", %"class.Ice::InstTarget"* %0, i64 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstTarget", %"class.Ice::InstTarget"* %0, i64 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice10InstAlloca13isMemoryWriteEv(%"class.Ice::InstAlloca"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice10InstAllocaD0Ev(%"class.Ice::InstAlloca"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstAlloca", %"class.Ice::InstAlloca"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstAlloca", %"class.Ice::InstAlloca"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstAlloca", %"class.Ice::InstAlloca"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice14InstArithmetic13isMemoryWriteEv(%"class.Ice::InstArithmetic"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14InstArithmeticD0Ev(%"class.Ice::InstArithmetic"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstArithmetic", %"class.Ice::InstArithmetic"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstArithmetic", %"class.Ice::InstArithmetic"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstArithmetic", %"class.Ice::InstArithmetic"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice10InstAssign13isMemoryWriteEv(%"class.Ice::InstAssign"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice10InstAssignD0Ev(%"class.Ice::InstAssign"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstAssign", %"class.Ice::InstAssign"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstAssign", %"class.Ice::InstAssign"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstAssign", %"class.Ice::InstAssign"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice6InstBr21isUnconditionalBranchEv(%"class.Ice::InstBr"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 2
  %3 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %2, align 8
  %4 = icmp eq %"class.Ice::CfgNode"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice6InstBr13isMemoryWriteEv(%"class.Ice::InstBr"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice6InstBrD0Ev(%"class.Ice::InstBr"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice8InstCast13isMemoryWriteEv(%"class.Ice::InstCast"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice8InstCastD0Ev(%"class.Ice::InstCast"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstCast", %"class.Ice::InstCast"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstCast", %"class.Ice::InstCast"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstCast", %"class.Ice::InstCast"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice18InstExtractElement13isMemoryWriteEv(%"class.Ice::InstExtractElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice18InstExtractElementD0Ev(%"class.Ice::InstExtractElement"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstExtractElement", %"class.Ice::InstExtractElement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstExtractElement", %"class.Ice::InstExtractElement"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstExtractElement", %"class.Ice::InstExtractElement"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice8InstFcmp13isMemoryWriteEv(%"class.Ice::InstFcmp"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice8InstFcmpD0Ev(%"class.Ice::InstFcmp"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstFcmp", %"class.Ice::InstFcmp"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstFcmp", %"class.Ice::InstFcmp"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstFcmp", %"class.Ice::InstFcmp"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice8InstIcmp13isMemoryWriteEv(%"class.Ice::InstIcmp"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice8InstIcmpD0Ev(%"class.Ice::InstIcmp"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstIcmp", %"class.Ice::InstIcmp"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice17InstInsertElement13isMemoryWriteEv(%"class.Ice::InstInsertElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice17InstInsertElementD0Ev(%"class.Ice::InstInsertElement"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstInsertElement", %"class.Ice::InstInsertElement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstInsertElement", %"class.Ice::InstInsertElement"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstInsertElement", %"class.Ice::InstInsertElement"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice8InstLoad13isMemoryWriteEv(%"class.Ice::InstLoad"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice8InstLoadD0Ev(%"class.Ice::InstLoad"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstLoad", %"class.Ice::InstLoad"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstLoad", %"class.Ice::InstLoad"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstLoad", %"class.Ice::InstLoad"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice7InstPhi13isMemoryWriteEv(%"class.Ice::InstPhi"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice7InstPhiD2Ev(%"class.Ice::InstPhi"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice7InstPhiE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %3, align 8
  %5 = icmp eq %"class.Ice::CfgNode"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::CfgNode"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.Ice::CfgNode"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %12 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %11, align 8
  %13 = icmp eq %"class.Ice::Operand"** %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"class.Ice::Operand"** %12 to i64
  %16 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %17 = bitcast %"class.Ice::Operand"*** %16 to i64*
  store i64 %15, i64* %17, align 8
  br label %18

18:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice7InstPhiD0Ev(%"class.Ice::InstPhi"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice7InstPhiE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %3, align 8
  %5 = icmp eq %"class.Ice::CfgNode"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::CfgNode"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.Ice::CfgNode"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %12 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %11, align 8
  %13 = icmp eq %"class.Ice::Operand"** %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"class.Ice::Operand"** %12 to i64
  %16 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %17 = bitcast %"class.Ice::Operand"*** %16 to i64*
  store i64 %15, i64* %17, align 8
  br label %18

18:                                               ; preds = %10, %14
  %19 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice7InstPhi7destroyEPNS_3CfgE(%"class.Ice::InstPhi"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice7InstRet18getTerminatorEdgesEv(%"class.std::__1::vector.234"* noalias sret, %"class.Ice::InstRet"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.234"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice7InstRet13isMemoryWriteEv(%"class.Ice::InstRet"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice7InstRetD0Ev(%"class.Ice::InstRet"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstRet", %"class.Ice::InstRet"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstRet", %"class.Ice::InstRet"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstRet", %"class.Ice::InstRet"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice10InstSelect13isMemoryWriteEv(%"class.Ice::InstSelect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice10InstSelectD0Ev(%"class.Ice::InstSelect"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstSelect", %"class.Ice::InstSelect"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstSelect", %"class.Ice::InstSelect"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstSelect", %"class.Ice::InstSelect"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice9InstStore13isMemoryWriteEv(%"class.Ice::InstStore"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice9InstStoreD0Ev(%"class.Ice::InstStore"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstStore", %"class.Ice::InstStore"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstStore", %"class.Ice::InstStore"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstStore", %"class.Ice::InstStore"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice10InstSwitch13isMemoryWriteEv(%"class.Ice::InstSwitch"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice10InstSwitchD0Ev(%"class.Ice::InstSwitch"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice10InstSwitch7destroyEPNS_3CfgE(%"class.Ice::InstSwitch"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice15InstUnreachable18getTerminatorEdgesEv(%"class.std::__1::vector.234"* noalias sret, %"class.Ice::InstUnreachable"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.234"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice15InstUnreachable13isMemoryWriteEv(%"class.Ice::InstUnreachable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15InstUnreachableD0Ev(%"class.Ice::InstUnreachable"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstUnreachable", %"class.Ice::InstUnreachable"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstUnreachable", %"class.Ice::InstUnreachable"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstUnreachable", %"class.Ice::InstUnreachable"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice14InstBundleLock13isMemoryWriteEv(%"class.Ice::InstBundleLock"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice14InstBundleLock7emitIASEPKNS_3CfgE(%"class.Ice::InstBundleLock"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14InstBundleLockD0Ev(%"class.Ice::InstBundleLock"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstBundleLock", %"class.Ice::InstBundleLock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstBundleLock", %"class.Ice::InstBundleLock"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstBundleLock", %"class.Ice::InstBundleLock"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice16InstBundleUnlock13isMemoryWriteEv(%"class.Ice::InstBundleUnlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice16InstBundleUnlock7emitIASEPKNS_3CfgE(%"class.Ice::InstBundleUnlock"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice16InstBundleUnlockD0Ev(%"class.Ice::InstBundleUnlock"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstBundleUnlock", %"class.Ice::InstBundleUnlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstBundleUnlock", %"class.Ice::InstBundleUnlock"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstBundleUnlock", %"class.Ice::InstBundleUnlock"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice11InstFakeDef13isMemoryWriteEv(%"class.Ice::InstFakeDef"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice11InstFakeDef7emitIASEPKNS_3CfgE(%"class.Ice::InstFakeDef"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice11InstFakeDefD0Ev(%"class.Ice::InstFakeDef"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstFakeDef", %"class.Ice::InstFakeDef"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstFakeDef", %"class.Ice::InstFakeDef"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstFakeDef", %"class.Ice::InstFakeDef"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice11InstFakeUse13isMemoryWriteEv(%"class.Ice::InstFakeUse"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice11InstFakeUse7emitIASEPKNS_3CfgE(%"class.Ice::InstFakeUse"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice11InstFakeUseD0Ev(%"class.Ice::InstFakeUse"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstFakeUse", %"class.Ice::InstFakeUse"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstFakeUse", %"class.Ice::InstFakeUse"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstFakeUse", %"class.Ice::InstFakeUse"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice12InstFakeKill13isMemoryWriteEv(%"class.Ice::InstFakeKill"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice12InstFakeKill7emitIASEPKNS_3CfgE(%"class.Ice::InstFakeKill"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice4InstD2Ev(%"class.Ice::Inst"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %0, i64 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice12InstFakeKillD0Ev(%"class.Ice::InstFakeKill"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstFakeKill", %"class.Ice::InstFakeKill"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstFakeKill", %"class.Ice::InstFakeKill"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstFakeKill", %"class.Ice::InstFakeKill"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice17InstShuffleVector13isMemoryWriteEv(%"class.Ice::InstShuffleVector"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice17InstShuffleVectorD0Ev(%"class.Ice::InstShuffleVector"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstShuffleVector", %"class.Ice::InstShuffleVector"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice17InstShuffleVector7destroyEPNS_3CfgE(%"class.Ice::InstShuffleVector"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice13InstJumpTable13isMemoryWriteEv(%"class.Ice::InstJumpTable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice13InstJumpTable4emitEPKNS_3CfgE(%"class.Ice::InstJumpTable"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice13InstJumpTable7emitIASEPKNS_3CfgE(%"class.Ice::InstJumpTable"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice13InstJumpTableD0Ev(%"class.Ice::InstJumpTable"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstJumpTable", %"class.Ice::InstJumpTable"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice13InstJumpTable7destroyEPNS_3CfgE(%"class.Ice::InstJumpTable"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice14InstBreakpoint13isMemoryWriteEv(%"class.Ice::InstBreakpoint"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14InstBreakpointD0Ev(%"class.Ice::InstBreakpoint"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::InstBreakpoint", %"class.Ice::InstBreakpoint"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice4InstE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::InstBreakpoint", %"class.Ice::InstBreakpoint"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 0
  %4 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %3, align 8
  %5 = icmp eq %"class.Ice::Operand"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::Operand"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::InstBreakpoint", %"class.Ice::InstBreakpoint"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %9 = bitcast %"class.Ice::Operand"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #19
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #20
  unreachable
}

; Function Attrs: optsize
declare %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.340", align 8
  %5 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %1
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = ptrtoint i8* %9 to i64
  %11 = add i64 %2, -1
  %12 = add i64 %11, %10
  %13 = sub i64 0, %2
  %14 = and i64 %12, %13
  %15 = sub i64 %14, %10
  %16 = add i64 %15, %1
  %17 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %10
  %21 = icmp ugt i64 %16, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds i8, i8* %9, i64 %15
  %24 = getelementptr inbounds i8, i8* %23, i64 %1
  store i8* %24, i8** %8, align 8
  br label %45

25:                                               ; preds = %3
  %26 = add i64 %11, %1
  %27 = icmp ugt i64 %26, 1048576
  br i1 %27, label %28, label %38

28:                                               ; preds = %25
  %29 = tail call noalias i8* @malloc(i64 %26) #19
  %30 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::pair.340"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #16
  %32 = getelementptr inbounds %"struct.std::__1::pair.340", %"struct.std::__1::pair.340"* %4, i64 0, i32 0
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.340", %"struct.std::__1::pair.340"* %4, i64 0, i32 1
  store i64 %26, i64* %33, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.3"* %30, %"struct.std::__1::pair.340"* nonnull dereferenceable(16) %4) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #16
  %34 = ptrtoint i8* %29 to i64
  %35 = add i64 %11, %34
  %36 = and i64 %35, %13
  %37 = inttoptr i64 %36 to i8*
  br label %45

38:                                               ; preds = %25
  tail call void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"* %0) #18
  %39 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %11
  %42 = and i64 %41, %13
  %43 = inttoptr i64 %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %1
  store i8* %44, i8** %8, align 8
  br label %45

45:                                               ; preds = %28, %38, %22
  %46 = phi i8* [ %23, %22 ], [ %37, %28 ], [ %43, %38 ]
  ret i8* %46
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.3"*, %"struct.std::__1::pair.340"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.3", %"class.llvm::SmallVectorTemplateBase.3"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.3", %"class.llvm::SmallVectorTemplateBase.3"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !18

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.3", %"class.llvm::SmallVectorTemplateBase.3"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.3", %"class.llvm::SmallVectorTemplateBase.3"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 16) #19
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = bitcast i8** %3 to %"struct.std::__1::pair.340"**
  %15 = bitcast %"struct.std::__1::pair.340"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 8 %15, i64 16, i1 false)
  %16 = load %"struct.std::__1::pair.340"*, %"struct.std::__1::pair.340"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.340", %"struct.std::__1::pair.340"* %16, i64 1
  store %"struct.std::__1::pair.340"* %17, %"struct.std::__1::pair.340"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.llvm::SmallVector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr i64 %9, 10
  %11 = and i64 %10, 33554431
  %12 = icmp ult i64 %11, 30
  %13 = select i1 %12, i64 %11, i64 30
  %14 = shl i64 1048576, %13
  %15 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  %16 = tail call noalias i8* @malloc(i64 %14) #19
  store i8* %16, i8** %2, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %3, i64 0, i32 0, i32 0
  call void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"* %17, i8** nonnull dereferenceable(8) %2) #18
  %18 = bitcast i8** %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  store i64 %19, i64* %20, align 8
  %21 = inttoptr i64 %19 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %14
  %23 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  store i8* %22, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: optsize
declare void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"*, i8*, i64, i64) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %10, !prof !18

8:                                                ; preds = %2
  %9 = bitcast i8* %4 to i64*
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %11, i8* %12, i64 0, i64 8) #19
  %13 = bitcast i8** %3 to i64**
  %14 = load i64*, i64** %13, align 8
  br label %15

15:                                               ; preds = %8, %10
  %16 = phi i64* [ %9, %8 ], [ %14, %10 ]
  %17 = bitcast i8** %3 to i8***
  %18 = bitcast i8** %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 1
  %20 = load i8**, i8*** %17, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  store i8** %21, i8*** %17, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7

; Function Attrs: optsize
declare void @_ZNSt3__19to_stringEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #7

; Function Attrs: optsize
declare void @_ZNSt3__19to_stringEm(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice8StringIDINS_22GlobalStringPoolTraitsEEC2EPKNS_13GlobalContextERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.Ice::StringID.96"*, %"class.Ice::GlobalContext"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.Ice::LockedPtr", align 8
  %5 = getelementptr inbounds %"class.Ice::StringID.96", %"class.Ice::StringID.96"* %0, i64 0, i32 0
  %6 = bitcast %"class.Ice::LockedPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  call void @_ZN3Ice22GlobalStringPoolTraits10getStringsEPKNS_13GlobalContextE(%"class.Ice::LockedPtr"* nonnull sret %4, %"class.Ice::GlobalContext"* %1) #19
  %7 = getelementptr inbounds %"class.Ice::LockedPtr", %"class.Ice::LockedPtr"* %4, i64 0, i32 0
  %8 = load %"class.Ice::StringPool"*, %"class.Ice::StringPool"** %7, align 8
  %9 = call i64 @_ZN3Ice10StringPool14getOrAddStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::StringPool"* %8, %"class.std::__1::basic_string"* dereferenceable(24) %2) #18
  %10 = getelementptr inbounds %"class.Ice::LockedPtr", %"class.Ice::LockedPtr"* %4, i64 0, i32 1
  %11 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %10, align 8
  %12 = icmp eq %"class.std::__1::mutex"* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* nonnull %11) #19
  br label %14

14:                                               ; preds = %3, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  store i64 %9, i64* %5, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN3Ice22GlobalStringPoolTraits10getStringsEPKNS_13GlobalContextE(%"class.Ice::LockedPtr"* sret, %"class.Ice::GlobalContext"*) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZN3Ice10StringPool14getOrAddStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::StringPool"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.349", align 1
  %5 = getelementptr inbounds %"class.Ice::StringPool", %"class.Ice::StringPool"* %0, i64 0, i32 1, i32 0
  %6 = tail call %"struct.std::__1::__hash_node_base.62"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_(%"class.std::__1::__hash_table.58"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1) #19
  %7 = icmp eq %"struct.std::__1::__hash_node_base.62"* %6, null
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = tail call i8* @_Znwm(i64 24) #21
  %10 = bitcast i8* %9 to %"class.std::__1::basic_string"*
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %16, i64 24, i1 false) #16
  br label %22

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %19, i64 %21) #19
  br label %22

22:                                               ; preds = %15, %17
  %23 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #16
  %24 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::tuple.349", %"class.std::__1::tuple.349"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #16
  %26 = call { %"struct.std::__1::__hash_node_base.62"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.58"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.349"* nonnull dereferenceable(1) %4) #19
  %27 = extractvalue { %"struct.std::__1::__hash_node_base.62"*, i8 } %26, 0
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %27, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #16
  %29 = bitcast %"struct.std::__1::__hash_node_base.62"* %28 to %"class.std::__1::basic_string"**
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = bitcast %"struct.std::__1::__hash_node_base.62"* %28 to i8**
  store i8* %9, i8** %31, align 8
  %32 = icmp eq %"class.std::__1::basic_string"* %30, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %22
  %34 = bitcast %"struct.std::__1::__hash_node_base.62"* %28 to %"struct.std::__1::default_delete.344"*
  call void @_ZNKSt3__114default_deleteINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEclEPS6_(%"struct.std::__1::default_delete.344"* %34, %"class.std::__1::basic_string"* nonnull %30) #19
  br label %39

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %6, i64 5
  %37 = bitcast %"struct.std::__1::__hash_node_base.62"* %36 to %"class.std::__1::basic_string"**
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  br label %39

39:                                               ; preds = %33, %22, %35
  %40 = phi %"class.std::__1::basic_string"* [ %38, %35 ], [ %10, %22 ], [ %10, %33 ]
  %41 = ptrtoint %"class.std::__1::basic_string"* %40 to i64
  ret i64 %41
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.62"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_(%"class.std::__1::__hash_table.58"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #16
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #16
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #16, !range !19
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.62"**, %"struct.std::__1::__hash_node_base.62"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.62"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.62"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base.62"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.62"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %17
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.62"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.62"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base.62"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base.62"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #16
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.62"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base.62"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base.62"* %112
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #9 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2) #18
  br label %212

9:                                                ; preds = %5
  %10 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm(i8* %1, i64 %2) #18
  br label %212

11:                                               ; preds = %3
  %12 = icmp ult i64 %2, 65
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm(i8* %1, i64 %2) #18
  br label %212

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -40
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = getelementptr inbounds i8, i8* %16, i64 -16
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 1
  %23 = getelementptr inbounds i8, i8* %16, i64 -56
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 1
  %26 = add i64 %25, %22
  %27 = getelementptr inbounds i8, i8* %16, i64 -48
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 1
  %30 = add i64 %29, %2
  %31 = getelementptr inbounds i8, i8* %16, i64 -24
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 1
  %34 = xor i64 %33, %30
  %35 = mul i64 %34, -7070675565921424023
  %36 = lshr i64 %35, 47
  %37 = xor i64 %35, %33
  %38 = xor i64 %37, %36
  %39 = mul i64 %38, -7070675565921424023
  %40 = lshr i64 %39, 47
  %41 = xor i64 %40, %39
  %42 = mul i64 %41, -7070675565921424023
  %43 = getelementptr inbounds i8, i8* %16, i64 -64
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 1
  %46 = add i64 %45, %2
  %47 = add i64 %19, %46
  %48 = add i64 %47, %42
  %49 = lshr i64 %48, 21
  %50 = shl i64 %48, 43
  %51 = or i64 %50, %49
  %52 = add i64 %46, %25
  %53 = add i64 %52, %29
  %54 = lshr i64 %53, 44
  %55 = shl i64 %53, 20
  %56 = or i64 %55, %54
  %57 = add i64 %53, %19
  %58 = add i64 %56, %46
  %59 = add i64 %58, %51
  %60 = getelementptr inbounds i8, i8* %16, i64 -32
  %61 = add i64 %26, -5435081209227447693
  %62 = bitcast i8* %60 to i64*
  %63 = load i64, i64* %62, align 1
  %64 = getelementptr inbounds i8, i8* %60, i64 24
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 1
  %67 = add i64 %61, %63
  %68 = add i64 %67, %19
  %69 = add i64 %68, %66
  %70 = lshr i64 %69, 21
  %71 = shl i64 %69, 43
  %72 = or i64 %71, %70
  %73 = add i64 %67, %33
  %74 = add i64 %73, %22
  %75 = lshr i64 %74, 44
  %76 = shl i64 %74, 20
  %77 = or i64 %76, %75
  %78 = add i64 %74, %66
  %79 = add i64 %77, %67
  %80 = add i64 %79, %72
  %81 = mul i64 %19, -5435081209227447693
  %82 = bitcast i8* %1 to i64*
  %83 = load i64, i64* %82, align 1
  %84 = add i64 %83, %81
  %85 = add i64 %2, -1
  %86 = and i64 %85, -64
  br label %87

87:                                               ; preds = %175, %15
  %88 = phi i64 [ %83, %15 ], [ %177, %175 ]
  %89 = phi i64 [ %80, %15 ], [ %171, %175 ]
  %90 = phi i64 [ %78, %15 ], [ %169, %175 ]
  %91 = phi i64 [ %57, %15 ], [ %147, %175 ]
  %92 = phi i64 [ %59, %15 ], [ %149, %175 ]
  %93 = phi i64 [ %42, %15 ], [ %117, %175 ]
  %94 = phi i64 [ %84, %15 ], [ %127, %175 ]
  %95 = phi i64 [ %86, %15 ], [ %173, %175 ]
  %96 = phi i8* [ %1, %15 ], [ %172, %175 ]
  %97 = phi i64 [ %26, %15 ], [ %122, %175 ]
  %98 = getelementptr inbounds i8, i8* %96, i64 8
  %99 = bitcast i8* %98 to i64*
  %100 = load i64, i64* %99, align 1
  %101 = add i64 %94, %91
  %102 = add i64 %101, %97
  %103 = add i64 %102, %100
  %104 = lshr i64 %103, 37
  %105 = shl i64 %103, 27
  %106 = or i64 %105, %104
  %107 = mul i64 %106, -5435081209227447693
  %108 = add i64 %97, %92
  %109 = getelementptr inbounds i8, i8* %96, i64 48
  %110 = bitcast i8* %109 to i64*
  %111 = load i64, i64* %110, align 1
  %112 = add i64 %108, %111
  %113 = lshr i64 %112, 42
  %114 = shl i64 %112, 22
  %115 = or i64 %114, %113
  %116 = mul i64 %115, -5435081209227447693
  %117 = xor i64 %107, %89
  %118 = getelementptr inbounds i8, i8* %96, i64 40
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %119, align 1
  %121 = add i64 %120, %91
  %122 = add i64 %121, %116
  %123 = add i64 %93, %90
  %124 = lshr i64 %123, 33
  %125 = shl i64 %123, 31
  %126 = or i64 %125, %124
  %127 = mul i64 %126, -5435081209227447693
  %128 = mul i64 %92, -5435081209227447693
  %129 = getelementptr inbounds i8, i8* %96, i64 16
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 1
  %132 = getelementptr inbounds i8, i8* %96, i64 24
  %133 = bitcast i8* %132 to i64*
  %134 = load i64, i64* %133, align 1
  %135 = add i64 %88, %128
  %136 = add i64 %135, %90
  %137 = add i64 %136, %134
  %138 = add i64 %137, %117
  %139 = lshr i64 %138, 21
  %140 = shl i64 %138, 43
  %141 = or i64 %140, %139
  %142 = add i64 %135, %100
  %143 = add i64 %142, %131
  %144 = lshr i64 %143, 44
  %145 = shl i64 %143, 20
  %146 = or i64 %145, %144
  %147 = add i64 %143, %134
  %148 = add i64 %146, %135
  %149 = add i64 %148, %141
  %150 = getelementptr inbounds i8, i8* %96, i64 32
  %151 = add i64 %127, %89
  %152 = add i64 %122, %131
  %153 = bitcast i8* %150 to i64*
  %154 = load i64, i64* %153, align 1
  %155 = getelementptr inbounds i8, i8* %96, i64 56
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 1
  %158 = add i64 %151, %154
  %159 = add i64 %152, %158
  %160 = add i64 %159, %157
  %161 = lshr i64 %160, 21
  %162 = shl i64 %160, 43
  %163 = or i64 %162, %161
  %164 = add i64 %158, %120
  %165 = add i64 %164, %111
  %166 = lshr i64 %165, 44
  %167 = shl i64 %165, 20
  %168 = or i64 %167, %166
  %169 = add i64 %165, %157
  %170 = add i64 %168, %158
  %171 = add i64 %170, %163
  %172 = getelementptr inbounds i8, i8* %96, i64 64
  %173 = add i64 %95, -64
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %87
  %176 = bitcast i8* %172 to i64*
  %177 = load i64, i64* %176, align 1
  br label %87

178:                                              ; preds = %87
  %179 = xor i64 %169, %147
  %180 = mul i64 %179, -7070675565921424023
  %181 = lshr i64 %180, 47
  %182 = xor i64 %180, %169
  %183 = xor i64 %182, %181
  %184 = mul i64 %183, -7070675565921424023
  %185 = lshr i64 %184, 47
  %186 = xor i64 %185, %184
  %187 = mul i64 %186, -7070675565921424023
  %188 = lshr i64 %122, 47
  %189 = xor i64 %188, %122
  %190 = mul i64 %189, -5435081209227447693
  %191 = add i64 %190, %117
  %192 = add i64 %191, %187
  %193 = xor i64 %171, %149
  %194 = mul i64 %193, -7070675565921424023
  %195 = lshr i64 %194, 47
  %196 = xor i64 %194, %171
  %197 = xor i64 %196, %195
  %198 = mul i64 %197, -7070675565921424023
  %199 = lshr i64 %198, 47
  %200 = xor i64 %199, %198
  %201 = mul i64 %200, -7070675565921424023
  %202 = add i64 %201, %127
  %203 = xor i64 %202, %192
  %204 = mul i64 %203, -7070675565921424023
  %205 = lshr i64 %204, 47
  %206 = xor i64 %204, %202
  %207 = xor i64 %206, %205
  %208 = mul i64 %207, -7070675565921424023
  %209 = lshr i64 %208, 47
  %210 = xor i64 %209, %208
  %211 = mul i64 %210, -7070675565921424023
  br label %212

212:                                              ; preds = %178, %13, %9, %7
  %213 = phi i64 [ %8, %7 ], [ %10, %9 ], [ %14, %13 ], [ %211, %178 ]
  ret i64 %213
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to i64*
  %4 = load i64, i64* %3, align 1
  %5 = mul i64 %4, -5435081209227447693
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 1
  %9 = getelementptr inbounds i8, i8* %0, i64 %1
  %10 = getelementptr inbounds i8, i8* %9, i64 -8
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = mul i64 %12, -7286425919675154353
  %14 = getelementptr inbounds i8, i8* %9, i64 -16
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = mul i64 %16, -4348849565147123417
  %18 = sub i64 %5, %8
  %19 = lshr i64 %18, 43
  %20 = shl i64 %18, 21
  %21 = or i64 %20, %19
  %22 = lshr i64 %13, 30
  %23 = mul i64 %12, -4737503975807385600
  %24 = or i64 %22, %23
  %25 = add i64 %17, %21
  %26 = add i64 %25, %24
  %27 = xor i64 %8, -3942382747735136937
  %28 = lshr i64 %27, 20
  %29 = shl i64 %27, 44
  %30 = or i64 %29, %28
  %31 = add i64 %5, %1
  %32 = sub i64 %31, %13
  %33 = add i64 %32, %30
  %34 = xor i64 %33, %26
  %35 = mul i64 %34, -7070675565921424023
  %36 = lshr i64 %35, 47
  %37 = xor i64 %35, %33
  %38 = xor i64 %37, %36
  %39 = mul i64 %38, -7070675565921424023
  %40 = lshr i64 %39, 47
  %41 = xor i64 %40, %39
  %42 = mul i64 %41, -7070675565921424023
  ret i64 %42
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %0, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 1
  %6 = bitcast i8* %0 to i64*
  %7 = load i64, i64* %6, align 1
  %8 = getelementptr inbounds i8, i8* %0, i64 %1
  %9 = getelementptr inbounds i8, i8* %8, i64 -16
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = add i64 %11, %1
  %13 = mul i64 %12, -4348849565147123417
  %14 = add i64 %13, %7
  %15 = add i64 %14, %5
  %16 = lshr i64 %15, 52
  %17 = shl i64 %15, 12
  %18 = or i64 %17, %16
  %19 = lshr i64 %14, 37
  %20 = shl i64 %14, 27
  %21 = or i64 %20, %19
  %22 = getelementptr inbounds i8, i8* %0, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = add i64 %14, %24
  %26 = lshr i64 %25, 7
  %27 = shl i64 %25, 57
  %28 = or i64 %27, %26
  %29 = getelementptr inbounds i8, i8* %0, i64 16
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 1
  %32 = add i64 %25, %31
  %33 = lshr i64 %32, 31
  %34 = shl i64 %32, 33
  %35 = or i64 %34, %33
  %36 = add i64 %28, %21
  %37 = add i64 %36, %18
  %38 = add i64 %37, %35
  %39 = getelementptr inbounds i8, i8* %8, i64 -32
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 1
  %42 = add i64 %41, %31
  %43 = getelementptr inbounds i8, i8* %8, i64 -8
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 1
  %46 = add i64 %45, %5
  %47 = add i64 %46, %42
  %48 = lshr i64 %47, 52
  %49 = shl i64 %47, 12
  %50 = or i64 %49, %48
  %51 = lshr i64 %42, 37
  %52 = shl i64 %42, 27
  %53 = or i64 %52, %51
  %54 = getelementptr inbounds i8, i8* %8, i64 -24
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 1
  %57 = add i64 %56, %42
  %58 = lshr i64 %57, 7
  %59 = shl i64 %57, 57
  %60 = or i64 %59, %58
  %61 = add i64 %57, %11
  %62 = add i64 %61, %46
  %63 = lshr i64 %61, 31
  %64 = shl i64 %61, 33
  %65 = or i64 %64, %63
  %66 = add i64 %32, %5
  %67 = add i64 %66, %53
  %68 = add i64 %67, %60
  %69 = add i64 %68, %50
  %70 = add i64 %69, %65
  %71 = mul i64 %70, -7286425919675154353
  %72 = add i64 %62, %38
  %73 = mul i64 %72, -4348849565147123417
  %74 = add i64 %71, %73
  %75 = lshr i64 %74, 47
  %76 = xor i64 %75, %74
  %77 = mul i64 %76, -4348849565147123417
  %78 = add i64 %77, %38
  %79 = lshr i64 %78, 47
  %80 = xor i64 %79, %78
  %81 = mul i64 %80, -7286425919675154353
  ret i64 %81
}

; Function Attrs: optsize
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.62"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.58"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.349"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = alloca %"class.std::__1::unique_ptr.350", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %17 = zext i8 %10 to i64
  %18 = select i1 %11, i8* %13, i8* %16
  %19 = select i1 %11, i64 %15, i64 %17
  %20 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #16
  %21 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %18, i64 %19) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #16
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %115, label %25

25:                                               ; preds = %5
  %26 = call i64 @llvm.ctpop.i64(i64 %23) #16, !range !19
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %23, -1
  %30 = and i64 %29, %21
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %21, %23
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %21, %23
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %21, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.62"**, %"struct.std::__1::__hash_node_base.62"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.62"* %40, null
  br i1 %41, label %115, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %40, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.62"* %44, null
  br i1 %45, label %115, label %46

46:                                               ; preds = %42
  %47 = add i64 %23, -1
  %48 = load i8, i8* %9, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %14, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  %53 = load i8*, i8** %12, align 8
  %54 = select i1 %49, i8* %53, i8* %16
  %55 = icmp eq i64 %52, 0
  br label %56

56:                                               ; preds = %46, %99
  %57 = phi %"struct.std::__1::__hash_node_base.62"* [ %44, %46 ], [ %101, %99 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.62"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %21
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  br i1 %27, label %65, label %63

63:                                               ; preds = %62
  %64 = and i64 %60, %47
  br label %69

65:                                               ; preds = %62
  %66 = icmp ult i64 %60, %23
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %60, %23
  br label %69

69:                                               ; preds = %63, %65, %67
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %60, %65 ]
  %71 = icmp eq i64 %70, %36
  br i1 %71, label %72, label %115

72:                                               ; preds = %56, %69
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %57, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base.62"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %57, i64 3
  %79 = bitcast %"struct.std::__1::__hash_node_base.62"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %76 to i64
  %82 = select i1 %77, i64 %80, i64 %81
  %83 = icmp eq i64 %82, %52
  br i1 %83, label %84, label %99

84:                                               ; preds = %72
  %85 = bitcast %"struct.std::__1::__hash_node_base.62"* %73 to i8**
  %86 = load i8*, i8** %85, align 8
  %87 = bitcast %"struct.std::__1::__hash_node_base.62"* %73 to i8*
  %88 = select i1 %77, i8* %86, i8* %87
  br i1 %77, label %95, label %89

89:                                               ; preds = %84
  br i1 %55, label %207, label %90

90:                                               ; preds = %89
  %91 = ptrtoint i8* %86 to i64
  %92 = trunc i64 %91 to i8
  %93 = load i8, i8* %54, align 1
  %94 = icmp eq i8 %93, %92
  br i1 %94, label %103, label %99

95:                                               ; preds = %84
  br i1 %55, label %207, label %96

96:                                               ; preds = %95
  %97 = call i32 @bcmp(i8* %88, i8* %54, i64 %52) #16
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %207, label %99

99:                                               ; preds = %110, %90, %72, %96
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %57, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.62"* %101, null
  br i1 %102, label %115, label %56

103:                                              ; preds = %90, %110
  %104 = phi i64 [ %107, %110 ], [ %81, %90 ]
  %105 = phi i8* [ %108, %110 ], [ %87, %90 ]
  %106 = phi i8* [ %111, %110 ], [ %54, %90 ]
  %107 = add i64 %104, -1
  %108 = getelementptr inbounds i8, i8* %105, i64 1
  %109 = icmp eq i64 %107, 0
  br i1 %109, label %207, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds i8, i8* %106, i64 1
  %112 = load i8, i8* %108, align 1
  %113 = load i8, i8* %111, align 1
  %114 = icmp eq i8 %112, %113
  br i1 %114, label %103, label %99

115:                                              ; preds = %69, %99, %42, %35, %5
  %116 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %42 ], [ %36, %99 ], [ %36, %69 ]
  %117 = bitcast %"class.std::__1::unique_ptr.350"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #16
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.350", %"class.std::__1::unique_ptr.350"* %7, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %"class.std::__1::unique_ptr.350"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSR_IJEEEEEENS8_INS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS5_ISY_EEEEEEmOT_DpOT0_(%"class.std::__1::unique_ptr.350"* nonnull sret %7, %"class.std::__1::__hash_table.58"* %0, i64 %21, %"struct.std::__1::piecewise_construct_t"* dereferenceable(1) %2, %"class.std::__1::tuple"* dereferenceable(8) %3, %"class.std::__1::tuple.349"* dereferenceable(1) %4) #18
  %120 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 2, i32 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 1
  %123 = uitofp i64 %122 to float
  %124 = uitofp i64 %23 to float
  %125 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 3, i32 0, i32 0
  %126 = load float, float* %125, align 4
  %127 = fmul float %126, %124
  %128 = fcmp olt float %127, %123
  %129 = or i1 %24, %128
  br i1 %129, label %130, label %153

130:                                              ; preds = %115
  %131 = shl i64 %23, 1
  %132 = icmp ult i64 %23, 3
  %133 = call i64 @llvm.ctpop.i64(i64 %23) #16, !range !19
  %134 = icmp ugt i64 %133, 1
  %135 = or i1 %132, %134
  %136 = zext i1 %135 to i64
  %137 = or i64 %131, %136
  %138 = fdiv float %123, %126
  %139 = call float @llvm.ceil.f32(float %138) #16
  %140 = fptoui float %139 to i64
  %141 = icmp ult i64 %137, %140
  %142 = select i1 %141, i64 %140, i64 %137
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6rehashEm(%"class.std::__1::__hash_table.58"* %0, i64 %142) #18
  %143 = load i64, i64* %22, align 8
  %144 = call i64 @llvm.ctpop.i64(i64 %143) #16, !range !19
  %145 = icmp ugt i64 %144, 1
  br i1 %145, label %149, label %146

146:                                              ; preds = %130
  %147 = add i64 %143, -1
  %148 = and i64 %147, %21
  br label %153

149:                                              ; preds = %130
  %150 = icmp ult i64 %21, %143
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = urem i64 %21, %143
  br label %153

153:                                              ; preds = %151, %149, %146, %115
  %154 = phi i64 [ %23, %115 ], [ %143, %146 ], [ %143, %149 ], [ %143, %151 ]
  %155 = phi i64 [ %116, %115 ], [ %148, %146 ], [ %21, %149 ], [ %152, %151 ]
  %156 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = load %"struct.std::__1::__hash_node_base.62"**, %"struct.std::__1::__hash_node_base.62"*** %156, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %157, i64 %155
  %159 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %158, align 8
  %160 = icmp eq %"struct.std::__1::__hash_node_base.62"* %159, null
  br i1 %160, label %161, label %194

161:                                              ; preds = %153
  %162 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 1, i32 0, i32 0
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %162, i64 0, i32 0
  %164 = bitcast %"struct.std::__1::__hash_node_base.62"* %162 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"class.std::__1::unique_ptr.350"* %7 to i64**
  %167 = load i64*, i64** %166, align 8
  store i64 %165, i64* %167, align 8
  %168 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %118, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %168, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.62"* %169, %"struct.std::__1::__hash_node_base.62"** %163, align 8
  %170 = load %"struct.std::__1::__hash_node_base.62"**, %"struct.std::__1::__hash_node_base.62"*** %156, align 8
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %170, i64 %155
  store %"struct.std::__1::__hash_node_base.62"* %162, %"struct.std::__1::__hash_node_base.62"** %171, align 8
  %172 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %118, align 8
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %172, i64 0, i32 0, i32 0
  %174 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %173, align 8
  %175 = icmp eq %"struct.std::__1::__hash_node_base.62"* %174, null
  br i1 %175, label %202, label %176

176:                                              ; preds = %161
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %172, i64 0, i32 0
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %174, i64 1
  %179 = bitcast %"struct.std::__1::__hash_node_base.62"* %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = call i64 @llvm.ctpop.i64(i64 %154) #16, !range !19
  %182 = icmp ugt i64 %181, 1
  br i1 %182, label %186, label %183

183:                                              ; preds = %176
  %184 = add i64 %154, -1
  %185 = and i64 %180, %184
  br label %190

186:                                              ; preds = %176
  %187 = icmp ult i64 %180, %154
  br i1 %187, label %190, label %188

188:                                              ; preds = %186
  %189 = urem i64 %180, %154
  br label %190

190:                                              ; preds = %183, %186, %188
  %191 = phi i64 [ %185, %183 ], [ %189, %188 ], [ %180, %186 ]
  %192 = load %"struct.std::__1::__hash_node_base.62"**, %"struct.std::__1::__hash_node_base.62"*** %156, align 8
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %192, i64 %191
  store %"struct.std::__1::__hash_node_base.62"* %177, %"struct.std::__1::__hash_node_base.62"** %193, align 8
  br label %202

194:                                              ; preds = %153
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %159, i64 0, i32 0
  %196 = bitcast %"struct.std::__1::__hash_node_base.62"* %159 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.std::__1::unique_ptr.350"* %7 to i64**
  %199 = load i64*, i64** %198, align 8
  store i64 %197, i64* %199, align 8
  %200 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %118, align 8
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %200, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.62"* %201, %"struct.std::__1::__hash_node_base.62"** %195, align 8
  br label %202

202:                                              ; preds = %194, %190, %161
  %203 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %118, align 8
  %204 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %203, i64 0, i32 0
  %205 = load i64, i64* %120, align 8
  %206 = add i64 %205, 1
  store i64 %206, i64* %120, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #16
  br label %207

207:                                              ; preds = %89, %95, %96, %103, %202
  %208 = phi i8 [ 1, %202 ], [ 0, %103 ], [ 0, %96 ], [ 0, %95 ], [ 0, %89 ]
  %209 = phi %"struct.std::__1::__hash_node_base.62"* [ %204, %202 ], [ %57, %103 ], [ %57, %96 ], [ %57, %95 ], [ %57, %89 ]
  %210 = insertvalue { %"struct.std::__1::__hash_node_base.62"*, i8 } undef, %"struct.std::__1::__hash_node_base.62"* %209, 0
  %211 = insertvalue { %"struct.std::__1::__hash_node_base.62"*, i8 } %210, i8 %208, 1
  ret { %"struct.std::__1::__hash_node_base.62"*, i8 } %211
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSR_IJEEEEEENS8_INS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS5_ISY_EEEEEEmOT_DpOT0_(%"class.std::__1::unique_ptr.350"* noalias sret, %"class.std::__1::__hash_table.58"*, i64, %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.349"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.350", %"class.std::__1::unique_ptr.350"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.350", %"class.std::__1::unique_ptr.350"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.350"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 24, i1 false)
  %11 = tail call i8* @_Znwm(i64 48) #21
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.std::__1::unique_ptr.350"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = bitcast %"class.std::__1::allocator.72"** %8 to %"class.std::__1::__compressed_pair.69"**
  store %"class.std::__1::__compressed_pair.69"* %7, %"class.std::__1::__compressed_pair.69"** %14, align 8
  store i8 0, i8* %9, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 16
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %6
  %23 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %23, i64 24, i1 false) #16
  br label %30

24:                                               ; preds = %6
  %25 = bitcast i8* %15 to %"class.std::__1::basic_string"*
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %25, i8* %27, i64 %29) #19
  br label %30

30:                                               ; preds = %22, %24
  %31 = getelementptr inbounds i8, i8* %11, i64 40
  %32 = bitcast i8* %31 to i64*
  store i64 0, i64* %32, align 8
  store i8 1, i8* %9, align 8
  %33 = getelementptr inbounds i8, i8* %11, i64 8
  %34 = bitcast i8* %33 to i64*
  store i64 %2, i64* %34, align 8
  %35 = bitcast i8* %11 to %"struct.std::__1::__hash_node_base.62"**
  store %"struct.std::__1::__hash_node_base.62"* null, %"struct.std::__1::__hash_node_base.62"** %35, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE6rehashEm(%"class.std::__1::__hash_table.58"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !19
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #19
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.58"* %0, i64 %10) #18
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !19
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !19
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #19
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.58"* %0, i64 %42) #18
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #12

; Function Attrs: optsize
declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIS7_NS_14default_deleteIS7_EEEEEENS_22__unordered_map_hasherIS7_SC_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SC_SH_SF_Lb1EEENS5_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.58"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %159, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.62"**, %"struct.std::__1::__hash_node_base.62"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.58"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.62"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.62"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.64", %"class.std::__1::__bucket_list_deallocator.64"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  br label %24

19:                                               ; preds = %24
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %20, i64 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.62"* %22, null
  br i1 %23, label %167, label %30

24:                                               ; preds = %24, %17
  %25 = phi i64 [ %28, %24 ], [ 0, %17 ]
  %26 = load %"struct.std::__1::__hash_node_base.62"**, %"struct.std::__1::__hash_node_base.62"*** %11, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %26, i64 %25
  store %"struct.std::__1::__hash_node_base.62"* null, %"struct.std::__1::__hash_node_base.62"** %27, align 8
  %28 = add nuw i64 %25, 1
  %29 = icmp eq i64 %28, %1
  br i1 %29, label %19, label %24

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %22, i64 1
  %32 = bitcast %"struct.std::__1::__hash_node_base.62"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !19
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = add i64 %1, -1
  %38 = and i64 %33, %37
  br label %43

39:                                               ; preds = %30
  %40 = icmp ult i64 %33, %1
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %33, %1
  br label %43

43:                                               ; preds = %36, %39, %41
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %33, %39 ]
  %45 = load %"struct.std::__1::__hash_node_base.62"**, %"struct.std::__1::__hash_node_base.62"*** %11, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base.62"* %20, %"struct.std::__1::__hash_node_base.62"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %22, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.62"* %48, null
  br i1 %49, label %167, label %50

50:                                               ; preds = %43
  %51 = add i64 %1, -1
  br label %52

52:                                               ; preds = %50, %153
  %53 = phi %"struct.std::__1::__hash_node_base.62"* [ %48, %50 ], [ %157, %153 ]
  %54 = phi i64 [ %44, %50 ], [ %155, %153 ]
  %55 = phi %"struct.std::__1::__hash_node_base.62"* [ %22, %50 ], [ %154, %153 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %53, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base.62"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  br i1 %35, label %61, label %59

59:                                               ; preds = %52
  %60 = and i64 %58, %51
  br label %65

61:                                               ; preds = %52
  %62 = icmp ult i64 %58, %1
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %58, %1
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %58, %61 ]
  %67 = icmp eq i64 %66, %54
  br i1 %67, label %153, label %68

68:                                               ; preds = %65
  %69 = load %"struct.std::__1::__hash_node_base.62"**, %"struct.std::__1::__hash_node_base.62"*** %11, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %69, i64 %66
  %71 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.62"* %71, null
  br i1 %72, label %91, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %53, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.62"* %75, null
  br i1 %76, label %139, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %53, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base.62"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %53, i64 3
  %84 = bitcast %"struct.std::__1::__hash_node_base.62"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %81 to i64
  %87 = select i1 %82, i64 %85, i64 %86
  %88 = bitcast %"struct.std::__1::__hash_node_base.62"* %78 to i8**
  %89 = bitcast %"struct.std::__1::__hash_node_base.62"* %78 to i8*
  %90 = icmp eq i64 %87, 0
  br label %92

91:                                               ; preds = %68
  store %"struct.std::__1::__hash_node_base.62"* %55, %"struct.std::__1::__hash_node_base.62"** %70, align 8
  br label %153

92:                                               ; preds = %77, %135
  %93 = phi %"struct.std::__1::__hash_node_base.62"* [ %75, %77 ], [ %137, %135 ]
  %94 = phi %"struct.std::__1::__hash_node_base.62"* [ %53, %77 ], [ %93, %135 ]
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %93, i64 2
  %96 = bitcast %"struct.std::__1::__hash_node_base.62"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %93, i64 3
  %101 = bitcast %"struct.std::__1::__hash_node_base.62"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = zext i8 %98 to i64
  %104 = select i1 %99, i64 %102, i64 %103
  %105 = icmp eq i64 %87, %104
  br i1 %105, label %106, label %139

106:                                              ; preds = %92
  %107 = load i8*, i8** %88, align 8
  %108 = select i1 %82, i8* %107, i8* %89
  %109 = bitcast %"struct.std::__1::__hash_node_base.62"* %95 to i8**
  %110 = load i8*, i8** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.62"* %95 to i8*
  %112 = select i1 %99, i8* %110, i8* %111
  br i1 %82, label %119, label %113

113:                                              ; preds = %106
  br i1 %90, label %135, label %114

114:                                              ; preds = %113
  %115 = ptrtoint i8* %107 to i64
  %116 = trunc i64 %115 to i8
  %117 = load i8, i8* %112, align 1
  %118 = icmp eq i8 %117, %116
  br i1 %118, label %120, label %139

119:                                              ; preds = %106
  br i1 %90, label %135, label %132

120:                                              ; preds = %114, %127
  %121 = phi i64 [ %124, %127 ], [ %86, %114 ]
  %122 = phi i8* [ %125, %127 ], [ %89, %114 ]
  %123 = phi i8* [ %128, %127 ], [ %112, %114 ]
  %124 = add i64 %121, -1
  %125 = getelementptr inbounds i8, i8* %122, i64 1
  %126 = icmp eq i64 %124, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds i8, i8* %123, i64 1
  %129 = load i8, i8* %125, align 1
  %130 = load i8, i8* %128, align 1
  %131 = icmp eq i8 %129, %130
  br i1 %131, label %120, label %139

132:                                              ; preds = %119
  %133 = tail call i32 @bcmp(i8* %108, i8* %112, i64 %87) #16
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %139

135:                                              ; preds = %120, %113, %119, %132
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %93, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.62"* %137, null
  br i1 %138, label %139, label %92

139:                                              ; preds = %132, %135, %92, %114, %127, %73
  %140 = phi %"struct.std::__1::__hash_node_base.62"* [ %53, %73 ], [ %94, %127 ], [ %94, %132 ], [ %93, %135 ], [ %94, %92 ], [ %94, %114 ]
  %141 = bitcast %"struct.std::__1::__hash_node_base.62"* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"struct.std::__1::__hash_node_base.62"* %55 to i64*
  store i64 %142, i64* %143, align 8
  %144 = load %"struct.std::__1::__hash_node_base.62"**, %"struct.std::__1::__hash_node_base.62"*** %11, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %144, i64 %66
  %146 = bitcast %"struct.std::__1::__hash_node_base.62"** %145 to i64**
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* %141, align 8
  %149 = load %"struct.std::__1::__hash_node_base.62"**, %"struct.std::__1::__hash_node_base.62"*** %11, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %149, i64 %66
  %151 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %150, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %151, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.62"* %53, %"struct.std::__1::__hash_node_base.62"** %152, align 8
  br label %153

153:                                              ; preds = %65, %139, %91
  %154 = phi %"struct.std::__1::__hash_node_base.62"* [ %53, %91 ], [ %55, %139 ], [ %53, %65 ]
  %155 = phi i64 [ %66, %91 ], [ %54, %139 ], [ %54, %65 ]
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.62", %"struct.std::__1::__hash_node_base.62"* %154, i64 0, i32 0
  %157 = load %"struct.std::__1::__hash_node_base.62"*, %"struct.std::__1::__hash_node_base.62"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base.62"* %157, null
  br i1 %158, label %167, label %52

159:                                              ; preds = %2
  %160 = getelementptr inbounds %"class.std::__1::__hash_table.58", %"class.std::__1::__hash_table.58"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = load %"struct.std::__1::__hash_node_base.62"**, %"struct.std::__1::__hash_node_base.62"*** %160, align 8
  store %"struct.std::__1::__hash_node_base.62"** null, %"struct.std::__1::__hash_node_base.62"*** %160, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base.62"** %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.std::__1::__hash_node_base.62"** %161 to i8*
  tail call void @_ZdlPv(i8* %164) #21
  br label %165

165:                                              ; preds = %159, %163
  %166 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.64", %"class.std::__1::__bucket_list_deallocator.64"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %166, align 8
  br label %167

167:                                              ; preds = %153, %43, %19, %165
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEclEPS6_(%"struct.std::__1::default_delete.344"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::basic_string"* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #21
  br label %12

12:                                               ; preds = %4, %9
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @_ZdlPv(i8* %13) #21
  br label %14

14:                                               ; preds = %12, %2
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #15

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #7

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #7

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIlNS_9allocatorIlEEEC2ERKS3_(%"class.std::__1::vector.97"*, %"class.std::__1::vector.97"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.97"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #16
  %4 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %1, i64 0, i32 0, i32 1
  %5 = bitcast i64** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.97"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %31, label %11

11:                                               ; preds = %2
  %12 = ashr exact i64 %9, 3
  tail call void @_ZNSt3__16vectorIlNS_9allocatorIlEEE11__vallocateEm(%"class.std::__1::vector.97"* %0, i64 %12) #18
  %13 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %1, i64 0, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = load i64, i64* %5, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = ptrtoint i64* %14 to i64
  %20 = sub i64 %15, %19
  %21 = icmp sgt i64 %20, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %11
  %23 = lshr exact i64 %20, 3
  %24 = inttoptr i64 %18 to i8*
  %25 = bitcast i64* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 %20, i1 false) #16
  %26 = inttoptr i64 %18 to i64*
  %27 = getelementptr inbounds i64, i64* %26, i64 %23
  %28 = ptrtoint i64* %27 to i64
  br label %29

29:                                               ; preds = %11, %22
  %30 = phi i64 [ %28, %22 ], [ %18, %11 ]
  store i64 %30, i64* %17, align 8
  br label %31

31:                                               ; preds = %2, %29
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIlNS_9allocatorIlEEE11__vallocateEm(%"class.std::__1::vector.97"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.97"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #20
  unreachable

6:                                                ; preds = %2
  %7 = shl i64 %1, 3
  %8 = tail call i8* @_Znwm(i64 %7) #21
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 1
  %11 = bitcast i64** %10 to i8**
  store i8* %8, i8** %11, align 8
  %12 = bitcast %"class.std::__1::vector.97"* %0 to i8**
  store i8* %8, i8** %12, align 8
  %13 = getelementptr inbounds i64, i64* %9, i64 %1
  %14 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %13, i64** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.259"* @_ZN3Ice12sz_allocatorINSt3__14pairIjiEENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.263"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.Ice::sz_allocator.263", %"struct.Ice::sz_allocator.263"* %0, i64 0, i32 0
  %4 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  %5 = icmp eq %"class.llvm::BumpPtrAllocatorImpl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice23LivenessAllocatorTraits7currentEv() #19
  store %"class.llvm::BumpPtrAllocatorImpl"* %7, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.llvm::BumpPtrAllocatorImpl"* [ %7, %6 ], [ %4, %2 ]
  %10 = shl i64 %1, 3
  %11 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 %10, i64 4) #19
  %12 = bitcast i8* %11 to %"struct.std::__1::pair.259"*
  ret %"struct.std::__1::pair.259"* %12
}

; Function Attrs: optsize
declare %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice23LivenessAllocatorTraits7currentEv() local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEvT0_S8_T_"(%"class.Ice::CfgNode"**, %"class.Ice::CfgNode"**) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %239, %2
  %4 = phi %"class.Ice::CfgNode"** [ %1, %2 ], [ %215, %239 ]
  %5 = phi %"class.Ice::CfgNode"** [ %0, %2 ], [ %13, %239 ]
  %6 = ptrtoint %"class.Ice::CfgNode"** %4 to i64
  %7 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %4, i64 -1
  %8 = bitcast %"class.Ice::CfgNode"** %7 to i64*
  %9 = ptrtoint %"class.Ice::CfgNode"** %4 to i64
  br label %10

10:                                               ; preds = %248, %3
  %11 = phi %"class.Ice::CfgNode"** [ %5, %3 ], [ %249, %248 ]
  br label %12

12:                                               ; preds = %156, %10
  %13 = phi %"class.Ice::CfgNode"** [ %11, %10 ], [ %141, %156 ]
  %14 = ptrtoint %"class.Ice::CfgNode"** %13 to i64
  %15 = sub i64 %6, %14
  %16 = ashr exact i64 %15, 3
  switch i64 %16, label %46 [
    i64 0, label %252
    i64 1, label %252
    i64 2, label %17
    i64 3, label %31
    i64 4, label %35
    i64 5, label %40
  ]

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %4, i64 -1
  %19 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %18, align 8
  %20 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, align 8
  %21 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %19, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp ult i32 %22, %24
  br i1 %25, label %26, label %252

26:                                               ; preds = %17
  %27 = ptrtoint %"class.Ice::CfgNode"* %19 to i64
  %28 = ptrtoint %"class.Ice::CfgNode"* %20 to i64
  %29 = bitcast %"class.Ice::CfgNode"** %13 to i64*
  %30 = bitcast %"class.Ice::CfgNode"** %18 to i64*
  store i64 %27, i64* %29, align 8
  store i64 %28, i64* %30, align 8
  br label %252

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, i64 1
  %33 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %4, i64 -1
  %34 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_T_"(%"class.Ice::CfgNode"** %13, %"class.Ice::CfgNode"** %32, %"class.Ice::CfgNode"** %33) #18
  br label %252

35:                                               ; preds = %12
  %36 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, i64 1
  %37 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, i64 2
  %38 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %4, i64 -1
  %39 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_S8_T_"(%"class.Ice::CfgNode"** %13, %"class.Ice::CfgNode"** %36, %"class.Ice::CfgNode"** %37, %"class.Ice::CfgNode"** %38) #18
  br label %252

40:                                               ; preds = %12
  %41 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, i64 1
  %42 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, i64 2
  %43 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, i64 3
  %44 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %4, i64 -1
  %45 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_S8_S8_T_"(%"class.Ice::CfgNode"** %13, %"class.Ice::CfgNode"** %41, %"class.Ice::CfgNode"** %42, %"class.Ice::CfgNode"** %43, %"class.Ice::CfgNode"** %44) #18
  br label %252

46:                                               ; preds = %12
  %47 = icmp slt i64 %15, 248
  br i1 %47, label %48, label %85

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, i64 2
  %50 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, i64 1
  %51 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_T_"(%"class.Ice::CfgNode"** %13, %"class.Ice::CfgNode"** %50, %"class.Ice::CfgNode"** %49) #19
  %52 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, i64 3
  %53 = icmp eq %"class.Ice::CfgNode"** %52, %4
  br i1 %53, label %252, label %54

54:                                               ; preds = %48, %82
  %55 = phi %"class.Ice::CfgNode"** [ %83, %82 ], [ %52, %48 ]
  %56 = phi %"class.Ice::CfgNode"** [ %55, %82 ], [ %49, %48 ]
  %57 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %55, align 8
  %58 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %56, align 8
  %59 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %57, i64 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %58, i64 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp ult i32 %60, %62
  %64 = ptrtoint %"class.Ice::CfgNode"* %57 to i64
  br i1 %63, label %65, label %82

65:                                               ; preds = %54, %72
  %66 = phi %"class.Ice::CfgNode"** [ %67, %72 ], [ %55, %54 ]
  %67 = phi %"class.Ice::CfgNode"** [ %73, %72 ], [ %56, %54 ]
  %68 = bitcast %"class.Ice::CfgNode"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.Ice::CfgNode"** %66 to i64*
  store i64 %69, i64* %70, align 8
  %71 = icmp eq %"class.Ice::CfgNode"** %67, %13
  br i1 %71, label %79, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %67, i64 -1
  %74 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %73, align 8
  %75 = load i32, i32* %59, align 8
  %76 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %74, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = icmp ult i32 %75, %77
  br i1 %78, label %65, label %79

79:                                               ; preds = %65, %72
  %80 = phi %"class.Ice::CfgNode"** [ %67, %72 ], [ %13, %65 ]
  %81 = bitcast %"class.Ice::CfgNode"** %80 to i64*
  store i64 %64, i64* %81, align 8
  br label %82

82:                                               ; preds = %79, %54
  %83 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %55, i64 1
  %84 = icmp eq %"class.Ice::CfgNode"** %83, %4
  br i1 %84, label %252, label %54

85:                                               ; preds = %46
  %86 = icmp sgt i64 %15, 7992
  %87 = sdiv i64 %16, 2
  %88 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, i64 %87
  br i1 %86, label %89, label %94

89:                                               ; preds = %85
  %90 = sdiv i64 %16, 4
  %91 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, i64 %90
  %92 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %88, i64 %90
  %93 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_S8_S8_T_"(%"class.Ice::CfgNode"** %13, %"class.Ice::CfgNode"** %91, %"class.Ice::CfgNode"** %88, %"class.Ice::CfgNode"** %92, %"class.Ice::CfgNode"** %7) #18
  br label %96

94:                                               ; preds = %85
  %95 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_T_"(%"class.Ice::CfgNode"** %13, %"class.Ice::CfgNode"** %88, %"class.Ice::CfgNode"** %7) #18
  br label %96

96:                                               ; preds = %94, %89
  %97 = phi i32 [ %93, %89 ], [ %95, %94 ]
  %98 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, align 8
  %99 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %88, align 8
  %100 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %98, i64 0, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %99, i64 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = icmp ult i32 %101, %103
  br i1 %104, label %173, label %105

105:                                              ; preds = %96, %162
  %106 = phi %"class.Ice::CfgNode"** [ %107, %162 ], [ %7, %96 ]
  %107 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %106, i64 -1
  %108 = icmp eq %"class.Ice::CfgNode"** %13, %107
  br i1 %108, label %109, label %162

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, i64 1
  %111 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %7, align 8
  %112 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %111, i64 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = icmp ult i32 %101, %113
  %115 = ptrtoint %"class.Ice::CfgNode"* %111 to i64
  br i1 %114, label %131, label %116

116:                                              ; preds = %109
  %117 = icmp eq %"class.Ice::CfgNode"** %110, %7
  br i1 %117, label %252, label %118

118:                                              ; preds = %116, %128
  %119 = phi %"class.Ice::CfgNode"** [ %129, %128 ], [ %110, %116 ]
  %120 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %119, align 8
  %121 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %120, i64 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = icmp ult i32 %101, %122
  br i1 %123, label %124, label %128

124:                                              ; preds = %118
  %125 = ptrtoint %"class.Ice::CfgNode"* %120 to i64
  %126 = bitcast %"class.Ice::CfgNode"** %119 to i64*
  store i64 %115, i64* %126, align 8
  store i64 %125, i64* %8, align 8
  %127 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %119, i64 1
  br label %131

128:                                              ; preds = %118
  %129 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %119, i64 1
  %130 = icmp eq %"class.Ice::CfgNode"** %129, %7
  br i1 %130, label %252, label %118

131:                                              ; preds = %124, %109
  %132 = phi %"class.Ice::CfgNode"** [ %110, %109 ], [ %127, %124 ]
  %133 = icmp eq %"class.Ice::CfgNode"** %132, %7
  br i1 %133, label %252, label %134

134:                                              ; preds = %131, %158
  %135 = phi %"class.Ice::CfgNode"** [ %146, %158 ], [ %132, %131 ]
  %136 = phi %"class.Ice::CfgNode"** [ %151, %158 ], [ %7, %131 ]
  %137 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, align 8
  %138 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %137, i64 0, i32 1
  %139 = load i32, i32* %138, align 8
  br label %140

140:                                              ; preds = %140, %134
  %141 = phi %"class.Ice::CfgNode"** [ %135, %134 ], [ %146, %140 ]
  %142 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %141, align 8
  %143 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %142, i64 0, i32 1
  %144 = load i32, i32* %143, align 8
  %145 = icmp ult i32 %139, %144
  %146 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %141, i64 1
  br i1 %145, label %147, label %140

147:                                              ; preds = %140
  %148 = ptrtoint %"class.Ice::CfgNode"* %142 to i64
  br label %149

149:                                              ; preds = %147, %149
  %150 = phi %"class.Ice::CfgNode"** [ %151, %149 ], [ %136, %147 ]
  %151 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %150, i64 -1
  %152 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %151, align 8
  %153 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %152, i64 0, i32 1
  %154 = load i32, i32* %153, align 8
  %155 = icmp ult i32 %139, %154
  br i1 %155, label %149, label %156

156:                                              ; preds = %149
  %157 = icmp ult %"class.Ice::CfgNode"** %141, %151
  br i1 %157, label %158, label %12

158:                                              ; preds = %156
  %159 = ptrtoint %"class.Ice::CfgNode"* %152 to i64
  %160 = bitcast %"class.Ice::CfgNode"** %141 to i64*
  %161 = bitcast %"class.Ice::CfgNode"** %151 to i64*
  store i64 %159, i64* %160, align 8
  store i64 %148, i64* %161, align 8
  br label %134

162:                                              ; preds = %105
  %163 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %107, align 8
  %164 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %163, i64 0, i32 1
  %165 = load i32, i32* %164, align 8
  %166 = icmp ult i32 %165, %103
  br i1 %166, label %167, label %105

167:                                              ; preds = %162
  %168 = ptrtoint %"class.Ice::CfgNode"* %98 to i64
  %169 = ptrtoint %"class.Ice::CfgNode"* %163 to i64
  %170 = bitcast %"class.Ice::CfgNode"** %13 to i64*
  %171 = bitcast %"class.Ice::CfgNode"** %107 to i64*
  store i64 %169, i64* %170, align 8
  store i64 %168, i64* %171, align 8
  %172 = add i32 %97, 1
  br label %173

173:                                              ; preds = %96, %167
  %174 = phi i32 [ %172, %167 ], [ %97, %96 ]
  %175 = phi %"class.Ice::CfgNode"** [ %107, %167 ], [ %7, %96 ]
  %176 = ptrtoint %"class.Ice::CfgNode"** %13 to i64
  %177 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %13, i64 1
  %178 = icmp ult %"class.Ice::CfgNode"** %177, %175
  br i1 %178, label %179, label %212

179:                                              ; preds = %173, %205
  %180 = phi %"class.Ice::CfgNode"** [ %211, %205 ], [ %88, %173 ]
  %181 = phi i32 [ %209, %205 ], [ %174, %173 ]
  %182 = phi %"class.Ice::CfgNode"** [ %193, %205 ], [ %177, %173 ]
  %183 = phi %"class.Ice::CfgNode"** [ %198, %205 ], [ %175, %173 ]
  %184 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %180, align 8
  %185 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %184, i64 0, i32 1
  %186 = load i32, i32* %185, align 8
  br label %187

187:                                              ; preds = %187, %179
  %188 = phi %"class.Ice::CfgNode"** [ %182, %179 ], [ %193, %187 ]
  %189 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %188, align 8
  %190 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %189, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  %192 = icmp ult i32 %191, %186
  %193 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %188, i64 1
  br i1 %192, label %187, label %194

194:                                              ; preds = %187
  %195 = ptrtoint %"class.Ice::CfgNode"* %189 to i64
  br label %196

196:                                              ; preds = %194, %196
  %197 = phi %"class.Ice::CfgNode"** [ %198, %196 ], [ %183, %194 ]
  %198 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %197, i64 -1
  %199 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %198, align 8
  %200 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %199, i64 0, i32 1
  %201 = load i32, i32* %200, align 8
  %202 = icmp ult i32 %201, %186
  br i1 %202, label %203, label %196

203:                                              ; preds = %196
  %204 = icmp ugt %"class.Ice::CfgNode"** %188, %198
  br i1 %204, label %212, label %205

205:                                              ; preds = %203
  %206 = ptrtoint %"class.Ice::CfgNode"* %199 to i64
  %207 = bitcast %"class.Ice::CfgNode"** %188 to i64*
  %208 = bitcast %"class.Ice::CfgNode"** %198 to i64*
  store i64 %206, i64* %207, align 8
  store i64 %195, i64* %208, align 8
  %209 = add i32 %181, 1
  %210 = icmp eq %"class.Ice::CfgNode"** %180, %188
  %211 = select i1 %210, %"class.Ice::CfgNode"** %198, %"class.Ice::CfgNode"** %180
  br label %179

212:                                              ; preds = %203, %173
  %213 = phi %"class.Ice::CfgNode"** [ %88, %173 ], [ %180, %203 ]
  %214 = phi i32 [ %174, %173 ], [ %181, %203 ]
  %215 = phi %"class.Ice::CfgNode"** [ %177, %173 ], [ %188, %203 ]
  %216 = icmp eq %"class.Ice::CfgNode"** %215, %213
  br i1 %216, label %231, label %217

217:                                              ; preds = %212
  %218 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %213, align 8
  %219 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %215, align 8
  %220 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %218, i64 0, i32 1
  %221 = load i32, i32* %220, align 8
  %222 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %219, i64 0, i32 1
  %223 = load i32, i32* %222, align 8
  %224 = icmp ult i32 %221, %223
  br i1 %224, label %225, label %231

225:                                              ; preds = %217
  %226 = ptrtoint %"class.Ice::CfgNode"* %218 to i64
  %227 = ptrtoint %"class.Ice::CfgNode"* %219 to i64
  %228 = bitcast %"class.Ice::CfgNode"** %215 to i64*
  %229 = bitcast %"class.Ice::CfgNode"** %213 to i64*
  store i64 %226, i64* %228, align 8
  store i64 %227, i64* %229, align 8
  %230 = add i32 %214, 1
  br label %231

231:                                              ; preds = %212, %225, %217
  %232 = phi i32 [ %230, %225 ], [ %214, %217 ], [ %214, %212 ]
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %241

234:                                              ; preds = %231
  %235 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEbT0_S8_T_"(%"class.Ice::CfgNode"** %13, %"class.Ice::CfgNode"** %215) #18
  %236 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %215, i64 1
  %237 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEbT0_S8_T_"(%"class.Ice::CfgNode"** %236, %"class.Ice::CfgNode"** %4) #18
  br i1 %237, label %238, label %240

238:                                              ; preds = %234
  br i1 %235, label %252, label %239

239:                                              ; preds = %238, %250
  br label %3

240:                                              ; preds = %234
  br i1 %235, label %248, label %241

241:                                              ; preds = %240, %231
  %242 = ptrtoint %"class.Ice::CfgNode"** %215 to i64
  %243 = sub i64 %242, %176
  %244 = sub i64 %9, %242
  %245 = icmp slt i64 %243, %244
  br i1 %245, label %246, label %250

246:                                              ; preds = %241
  tail call fastcc void @"_ZNSt3__16__sortIRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEvT0_S8_T_"(%"class.Ice::CfgNode"** %13, %"class.Ice::CfgNode"** %215) #18
  %247 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %215, i64 1
  br label %248

248:                                              ; preds = %246, %240
  %249 = phi %"class.Ice::CfgNode"** [ %236, %240 ], [ %247, %246 ]
  br label %10

250:                                              ; preds = %241
  %251 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %215, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEvT0_S8_T_"(%"class.Ice::CfgNode"** %251, %"class.Ice::CfgNode"** %4) #18
  br label %239

252:                                              ; preds = %238, %131, %12, %12, %116, %128, %82, %48, %17, %26, %31, %35, %40
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_T_"(%"class.Ice::CfgNode"** nocapture, %"class.Ice::CfgNode"** nocapture, %"class.Ice::CfgNode"** nocapture) unnamed_addr #2 {
  %4 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %1, align 8
  %5 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %0, align 8
  %6 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %4, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %7, %9
  %11 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %2, align 8
  %12 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ult i32 %13, %7
  %15 = ptrtoint %"class.Ice::CfgNode"* %4 to i64
  %16 = ptrtoint %"class.Ice::CfgNode"* %11 to i64
  %17 = ptrtoint %"class.Ice::CfgNode"* %5 to i64
  br i1 %10, label %33, label %18

18:                                               ; preds = %3
  br i1 %14, label %19, label %47

19:                                               ; preds = %18
  %20 = bitcast %"class.Ice::CfgNode"** %1 to i64*
  %21 = bitcast %"class.Ice::CfgNode"** %2 to i64*
  store i64 %16, i64* %20, align 8
  store i64 %15, i64* %21, align 8
  %22 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %1, align 8
  %23 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %0, align 8
  %24 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %22, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp ult i32 %25, %27
  br i1 %28, label %29, label %47

29:                                               ; preds = %19
  %30 = ptrtoint %"class.Ice::CfgNode"* %22 to i64
  %31 = ptrtoint %"class.Ice::CfgNode"* %23 to i64
  %32 = bitcast %"class.Ice::CfgNode"** %0 to i64*
  store i64 %30, i64* %32, align 8
  store i64 %31, i64* %20, align 8
  br label %47

33:                                               ; preds = %3
  %34 = bitcast %"class.Ice::CfgNode"** %0 to i64*
  br i1 %14, label %35, label %37

35:                                               ; preds = %33
  %36 = bitcast %"class.Ice::CfgNode"** %2 to i64*
  store i64 %16, i64* %34, align 8
  store i64 %17, i64* %36, align 8
  br label %47

37:                                               ; preds = %33
  %38 = bitcast %"class.Ice::CfgNode"** %1 to i64*
  store i64 %15, i64* %34, align 8
  store i64 %17, i64* %38, align 8
  %39 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %2, align 8
  %40 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %39, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load i32, i32* %8, align 8
  %43 = icmp ult i32 %41, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = ptrtoint %"class.Ice::CfgNode"* %39 to i64
  %46 = bitcast %"class.Ice::CfgNode"** %2 to i64*
  store i64 %45, i64* %38, align 8
  store i64 %17, i64* %46, align 8
  br label %47

47:                                               ; preds = %37, %44, %19, %29, %18, %35
  %48 = phi i32 [ 1, %35 ], [ 0, %18 ], [ 2, %29 ], [ 1, %19 ], [ 2, %44 ], [ 1, %37 ]
  ret i32 %48
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_S8_T_"(%"class.Ice::CfgNode"** nocapture, %"class.Ice::CfgNode"** nocapture, %"class.Ice::CfgNode"** nocapture, %"class.Ice::CfgNode"** nocapture) unnamed_addr #2 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_T_"(%"class.Ice::CfgNode"** %0, %"class.Ice::CfgNode"** %1, %"class.Ice::CfgNode"** %2) #18
  %6 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %3, align 8
  %7 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %2, align 8
  %8 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %6, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %9, %11
  br i1 %12, label %13, label %43

13:                                               ; preds = %4
  %14 = ptrtoint %"class.Ice::CfgNode"* %6 to i64
  %15 = ptrtoint %"class.Ice::CfgNode"* %7 to i64
  %16 = bitcast %"class.Ice::CfgNode"** %2 to i64*
  %17 = bitcast %"class.Ice::CfgNode"** %3 to i64*
  store i64 %14, i64* %16, align 8
  store i64 %15, i64* %17, align 8
  %18 = add i32 %5, 1
  %19 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %2, align 8
  %20 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %1, align 8
  %21 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %19, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp ult i32 %22, %24
  br i1 %25, label %26, label %43

26:                                               ; preds = %13
  %27 = ptrtoint %"class.Ice::CfgNode"* %19 to i64
  %28 = ptrtoint %"class.Ice::CfgNode"* %20 to i64
  %29 = bitcast %"class.Ice::CfgNode"** %1 to i64*
  store i64 %27, i64* %29, align 8
  store i64 %28, i64* %16, align 8
  %30 = add i32 %5, 2
  %31 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %1, align 8
  %32 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %0, align 8
  %33 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %31, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp ult i32 %34, %36
  br i1 %37, label %38, label %43

38:                                               ; preds = %26
  %39 = ptrtoint %"class.Ice::CfgNode"* %31 to i64
  %40 = ptrtoint %"class.Ice::CfgNode"* %32 to i64
  %41 = bitcast %"class.Ice::CfgNode"** %0 to i64*
  store i64 %39, i64* %41, align 8
  store i64 %40, i64* %29, align 8
  %42 = add i32 %5, 3
  br label %43

43:                                               ; preds = %13, %38, %26, %4
  %44 = phi i32 [ %42, %38 ], [ %30, %26 ], [ %18, %13 ], [ %5, %4 ]
  ret i32 %44
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_S8_S8_T_"(%"class.Ice::CfgNode"** nocapture, %"class.Ice::CfgNode"** nocapture, %"class.Ice::CfgNode"** nocapture, %"class.Ice::CfgNode"** nocapture, %"class.Ice::CfgNode"** nocapture) unnamed_addr #2 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_S8_T_"(%"class.Ice::CfgNode"** %0, %"class.Ice::CfgNode"** %1, %"class.Ice::CfgNode"** %2, %"class.Ice::CfgNode"** %3) #18
  %7 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %4, align 8
  %8 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %3, align 8
  %9 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %7, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %10, %12
  br i1 %13, label %14, label %56

14:                                               ; preds = %5
  %15 = ptrtoint %"class.Ice::CfgNode"* %7 to i64
  %16 = ptrtoint %"class.Ice::CfgNode"* %8 to i64
  %17 = bitcast %"class.Ice::CfgNode"** %3 to i64*
  %18 = bitcast %"class.Ice::CfgNode"** %4 to i64*
  store i64 %15, i64* %17, align 8
  store i64 %16, i64* %18, align 8
  %19 = add i32 %6, 1
  %20 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %3, align 8
  %21 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %2, align 8
  %22 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %20, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %21, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp ult i32 %23, %25
  br i1 %26, label %27, label %56

27:                                               ; preds = %14
  %28 = ptrtoint %"class.Ice::CfgNode"* %20 to i64
  %29 = ptrtoint %"class.Ice::CfgNode"* %21 to i64
  %30 = bitcast %"class.Ice::CfgNode"** %2 to i64*
  store i64 %28, i64* %30, align 8
  store i64 %29, i64* %17, align 8
  %31 = add i32 %6, 2
  %32 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %2, align 8
  %33 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %1, align 8
  %34 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %32, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %33, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp ult i32 %35, %37
  br i1 %38, label %39, label %56

39:                                               ; preds = %27
  %40 = ptrtoint %"class.Ice::CfgNode"* %32 to i64
  %41 = ptrtoint %"class.Ice::CfgNode"* %33 to i64
  %42 = bitcast %"class.Ice::CfgNode"** %1 to i64*
  store i64 %40, i64* %42, align 8
  store i64 %41, i64* %30, align 8
  %43 = add i32 %6, 3
  %44 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %1, align 8
  %45 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %0, align 8
  %46 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %44, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %45, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp ult i32 %47, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %39
  %52 = ptrtoint %"class.Ice::CfgNode"* %44 to i64
  %53 = ptrtoint %"class.Ice::CfgNode"* %45 to i64
  %54 = bitcast %"class.Ice::CfgNode"** %0 to i64*
  store i64 %52, i64* %54, align 8
  store i64 %53, i64* %42, align 8
  %55 = add i32 %6, 4
  br label %56

56:                                               ; preds = %14, %39, %51, %27, %5
  %57 = phi i32 [ %55, %51 ], [ %43, %39 ], [ %31, %27 ], [ %19, %14 ], [ %6, %5 ]
  ret i32 %57
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEbT0_S8_T_"(%"class.Ice::CfgNode"**, %"class.Ice::CfgNode"**) unnamed_addr #0 {
  %3 = ptrtoint %"class.Ice::CfgNode"** %1 to i64
  %4 = ptrtoint %"class.Ice::CfgNode"** %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 3
  switch i64 %6, label %36 [
    i64 0, label %80
    i64 1, label %80
    i64 2, label %7
    i64 3, label %21
    i64 4, label %25
    i64 5, label %30
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %1, i64 -1
  %9 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %8, align 8
  %10 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %0, align 8
  %11 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %9, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp ult i32 %12, %14
  br i1 %15, label %16, label %80

16:                                               ; preds = %7
  %17 = ptrtoint %"class.Ice::CfgNode"* %9 to i64
  %18 = ptrtoint %"class.Ice::CfgNode"* %10 to i64
  %19 = bitcast %"class.Ice::CfgNode"** %0 to i64*
  %20 = bitcast %"class.Ice::CfgNode"** %8 to i64*
  store i64 %17, i64* %19, align 8
  store i64 %18, i64* %20, align 8
  br label %80

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %0, i64 1
  %23 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %1, i64 -1
  %24 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_T_"(%"class.Ice::CfgNode"** %0, %"class.Ice::CfgNode"** %22, %"class.Ice::CfgNode"** %23) #18
  br label %80

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %0, i64 1
  %27 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %0, i64 2
  %28 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %1, i64 -1
  %29 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_S8_T_"(%"class.Ice::CfgNode"** %0, %"class.Ice::CfgNode"** %26, %"class.Ice::CfgNode"** %27, %"class.Ice::CfgNode"** %28) #18
  br label %80

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %0, i64 1
  %32 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %0, i64 2
  %33 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %0, i64 3
  %34 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %1, i64 -1
  %35 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_S8_S8_T_"(%"class.Ice::CfgNode"** %0, %"class.Ice::CfgNode"** %31, %"class.Ice::CfgNode"** %32, %"class.Ice::CfgNode"** %33, %"class.Ice::CfgNode"** %34) #18
  br label %80

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %0, i64 2
  %38 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %0, i64 1
  %39 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK3Ice10InstSwitch18getTerminatorEdgesEvE3$_0PPNS1_7CfgNodeEEEjT0_S8_S8_T_"(%"class.Ice::CfgNode"** %0, %"class.Ice::CfgNode"** %38, %"class.Ice::CfgNode"** %37) #18
  %40 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %0, i64 3
  %41 = icmp eq %"class.Ice::CfgNode"** %40, %1
  br i1 %41, label %80, label %42

42:                                               ; preds = %36, %73
  %43 = phi %"class.Ice::CfgNode"** [ %75, %73 ], [ %40, %36 ]
  %44 = phi i32 [ %74, %73 ], [ 0, %36 ]
  %45 = phi %"class.Ice::CfgNode"** [ %43, %73 ], [ %37, %36 ]
  %46 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %43, align 8
  %47 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %45, align 8
  %48 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %46, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %47, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = icmp ult i32 %49, %51
  %53 = ptrtoint %"class.Ice::CfgNode"* %46 to i64
  br i1 %52, label %54, label %73

54:                                               ; preds = %42, %61
  %55 = phi %"class.Ice::CfgNode"** [ %56, %61 ], [ %43, %42 ]
  %56 = phi %"class.Ice::CfgNode"** [ %62, %61 ], [ %45, %42 ]
  %57 = bitcast %"class.Ice::CfgNode"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.Ice::CfgNode"** %55 to i64*
  store i64 %58, i64* %59, align 8
  %60 = icmp eq %"class.Ice::CfgNode"** %56, %0
  br i1 %60, label %68, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %56, i64 -1
  %63 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %62, align 8
  %64 = load i32, i32* %48, align 8
  %65 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %63, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = icmp ult i32 %64, %66
  br i1 %67, label %54, label %68

68:                                               ; preds = %54, %61
  %69 = phi %"class.Ice::CfgNode"** [ %56, %61 ], [ %0, %54 ]
  %70 = bitcast %"class.Ice::CfgNode"** %69 to i64*
  store i64 %53, i64* %70, align 8
  %71 = add i32 %44, 1
  %72 = icmp eq i32 %71, 8
  br i1 %72, label %77, label %73

73:                                               ; preds = %68, %42
  %74 = phi i32 [ %71, %68 ], [ %44, %42 ]
  %75 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %43, i64 1
  %76 = icmp eq %"class.Ice::CfgNode"** %75, %1
  br i1 %76, label %80, label %42

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %43, i64 1
  %79 = icmp eq %"class.Ice::CfgNode"** %78, %1
  br label %80

80:                                               ; preds = %73, %77, %36, %7, %16, %2, %2, %30, %25, %21
  %81 = phi i1 [ true, %30 ], [ true, %25 ], [ true, %21 ], [ true, %2 ], [ true, %2 ], [ true, %16 ], [ true, %7 ], [ true, %36 ], [ %79, %77 ], [ true, %73 ]
  ret i1 %81
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::CfgNode"** @_ZNSt3__16uniqueINS_11__wrap_iterIPPN3Ice7CfgNodeEEENS_10__equal_toIS4_S4_EEEET_S9_S9_T0_(%"class.Ice::CfgNode"**, %"class.Ice::CfgNode"**) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.Ice::CfgNode"** %0, %1
  br i1 %3, label %14, label %4

4:                                                ; preds = %2, %10
  %5 = phi %"class.Ice::CfgNode"** [ %6, %10 ], [ %0, %2 ]
  %6 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %5, i64 1
  %7 = icmp eq %"class.Ice::CfgNode"** %6, %1
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = ptrtoint %"class.Ice::CfgNode"** %1 to i64
  br label %44

10:                                               ; preds = %4
  %11 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %5, align 8
  %12 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %6, align 8
  %13 = icmp eq %"class.Ice::CfgNode"* %11, %12
  br i1 %13, label %14, label %4

14:                                               ; preds = %10, %2
  %15 = phi %"class.Ice::CfgNode"** [ %0, %2 ], [ %5, %10 ]
  %16 = ptrtoint %"class.Ice::CfgNode"** %15 to i64
  %17 = icmp eq %"class.Ice::CfgNode"** %15, %1
  br i1 %17, label %44, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %15, i64 2
  %20 = icmp eq %"class.Ice::CfgNode"** %19, %1
  br i1 %20, label %40, label %21

21:                                               ; preds = %18, %33
  %22 = phi %"class.Ice::CfgNode"** [ %37, %33 ], [ %15, %18 ]
  %23 = phi %"class.Ice::CfgNode"** [ %35, %33 ], [ %19, %18 ]
  %24 = phi i64 [ %34, %33 ], [ %16, %18 ]
  %25 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %22, align 8
  %26 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %23, align 8
  %27 = icmp eq %"class.Ice::CfgNode"* %25, %26
  br i1 %27, label %33, label %28

28:                                               ; preds = %21
  %29 = ptrtoint %"class.Ice::CfgNode"* %26 to i64
  %30 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %22, i64 1
  %31 = ptrtoint %"class.Ice::CfgNode"** %30 to i64
  %32 = bitcast %"class.Ice::CfgNode"** %30 to i64*
  store i64 %29, i64* %32, align 8
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi i64 [ %24, %21 ], [ %31, %28 ]
  %35 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %23, i64 1
  %36 = icmp eq %"class.Ice::CfgNode"** %35, %1
  %37 = inttoptr i64 %34 to %"class.Ice::CfgNode"**
  br i1 %36, label %38, label %21

38:                                               ; preds = %33
  %39 = inttoptr i64 %34 to %"class.Ice::CfgNode"**
  br label %40

40:                                               ; preds = %38, %18
  %41 = phi %"class.Ice::CfgNode"** [ %15, %18 ], [ %39, %38 ]
  %42 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %41, i64 1
  %43 = ptrtoint %"class.Ice::CfgNode"** %42 to i64
  br label %44

44:                                               ; preds = %14, %8, %40
  %45 = phi i64 [ %43, %40 ], [ %16, %14 ], [ %9, %8 ]
  %46 = inttoptr i64 %45 to %"class.Ice::CfgNode"**
  ret %"class.Ice::CfgNode"** %46
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #16

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #17

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { nofree nounwind readonly }
attributes #18 = { optsize }
attributes #19 = { nounwind optsize }
attributes #20 = { noreturn nounwind optsize }
attributes #21 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!18 = !{!"branch_weights", i32 2000, i32 1}
!19 = !{i64 0, i64 65}
