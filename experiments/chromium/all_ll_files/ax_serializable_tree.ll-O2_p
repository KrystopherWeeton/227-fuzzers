; ModuleID = '../../ui/accessibility/ax_serializable_tree.cc'
source_filename = "../../ui/accessibility/ax_serializable_tree.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.19" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.std::__1::pair.26"*, %"struct.std::__1::pair.26"*, %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::pair.26" = type opaque
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::pair.26"* }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.std::__1::pair.34"*, %"struct.std::__1::pair.34"*, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::pair.34" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::pair.34"* }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.std::__1::pair.42"*, %"struct.std::__1::pair.42"*, %"class.std::__1::__compressed_pair.43" }
%"struct.std::__1::pair.42" = type opaque
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::pair.42"* }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.std::__1::pair.50"*, %"struct.std::__1::pair.50"*, %"class.std::__1::__compressed_pair.51" }
%"struct.std::__1::pair.50" = type opaque
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::pair.50"* }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"struct.std::__1::pair.58"*, %"struct.std::__1::pair.58"*, %"class.std::__1::__compressed_pair.59" }
%"struct.std::__1::pair.58" = type opaque
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::pair.58"* }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"struct.std::__1::pair.66"*, %"struct.std::__1::pair.66"*, %"class.std::__1::__compressed_pair.67" }
%"struct.std::__1::pair.66" = type opaque
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::pair.66"* }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { i32*, i32*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i32* }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.ui::AXSerializableTree" = type { %"class.ui::AXTree" }
%"class.ui::AXTree" = type { %"class.ui::AXNode::OwnerTree", %"class.std::__1::unique_ptr", %"class.base::ObserverList", %"class.ui::AXNode"*, %"class.std::__1::unordered_map", %"class.std::__1::basic_string.122", %"struct.ui::AXTreeData", %"class.std::__1::map.132", %"class.std::__1::map.143", %"class.std::__1::map.154", %"class.std::__1::unordered_map.165", i32, [4 x i8], %"class.std::__1::unordered_map.189", i8, i8, %"class.std::__1::vector.213" }
%"class.ui::AXNode::OwnerTree" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::AXLanguageDetectionManager"* }
%"class.ui::AXLanguageDetectionManager" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.7" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AXNode" = type { i32 (...)**, %"class.ui::AXNode::OwnerTree"*, i64, i64, i64, %"class.ui::AXNode"*, %"class.std::__1::vector.10", %"struct.ui::AXNodeData", %"struct.ui::AXHypertext", %"struct.ui::AXHypertext", %"class.std::__1::unique_ptr.98" }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.ui::AXNode"**, %"class.ui::AXNode"**, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.ui::AXNode"** }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.17", %"class.std::__1::vector.24", %"class.std::__1::vector.32", %"class.std::__1::vector.40", %"class.std::__1::vector.48", %"class.std::__1::vector.56", %"class.std::__1::vector.64", %"class.std::__1::vector.72", %"struct.ui::AXRelativeBounds" }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.79" }
%"struct.ui::AXHypertext" = type { i8, %"class.std::__1::map", %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.ui::AXLanguageInfo"* }
%"struct.ui::AXLanguageInfo" = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.104", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.119", [4 x i8] }>
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106", %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { float }
%"class.std::__1::basic_string.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.125 }
%union.anon.125 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string.122", i8, [3 x i8], float, %"class.std::__1::basic_string.122", %"class.std::__1::basic_string.122", %"class.std::__1::basic_string.122", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.131 }
%union.anon.131 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map.132" = type { %"class.std::__1::__tree.133" }
%"class.std::__1::__tree.133" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.134", %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.143" = type { %"class.std::__1::__tree.144" }
%"class.std::__1::__tree.144" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.154" = type { %"class.std::__1::__tree.155" }
%"class.std::__1::__tree.155" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.156", %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::unordered_map.165" = type { %"class.std::__1::__hash_table.166" }
%"class.std::__1::__hash_table.166" = type <{ %"class.std::__1::unique_ptr.167", %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.185", [4 x i8] }>
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169", %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::__hash_node_base.170"** }
%"struct.std::__1::__hash_node_base.170" = type { %"struct.std::__1::__hash_node_base.170"* }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.std::__1::__bucket_list_deallocator.172" }
%"class.std::__1::__bucket_list_deallocator.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::__hash_node_base.170" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::unordered_map.189" = type { %"class.std::__1::__hash_table.190" }
%"class.std::__1::__hash_table.190" = type <{ %"class.std::__1::unique_ptr.191", %"class.std::__1::__compressed_pair.201", %"class.std::__1::__compressed_pair.206", %"class.std::__1::__compressed_pair.209", [4 x i8] }>
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193", %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::__hash_node_base.194"** }
%"struct.std::__1::__hash_node_base.194" = type { %"struct.std::__1::__hash_node_base.194"* }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::__bucket_list_deallocator.196" }
%"class.std::__1::__bucket_list_deallocator.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.std::__1::__hash_node_base.194" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"*, %"class.std::__1::__compressed_pair.215" }
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.ui::AXEventIntent"* }
%"struct.ui::AXTreeUpdate" = type { i8, [7 x i8], %"struct.ui::AXTreeData", i32, i32, %"class.std::__1::vector.220", i32, i32, %"class.std::__1::vector.213" }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.ui::AXNodeData"* }
%"class.ui::AXTreeSource" = type { i32 (...)** }
%"class.ui::AXTableInfo" = type opaque
%"struct.ui::AXNode::OwnerTree::Selection" = type { i8, i32, i32, i32, i32, i32, i32 }
%"class.ui::AXTreeSourceAdapter" = type { %"class.ui::AXTreeSource", %"class.ui::AXTree"* }
%"class.std::__1::vector.232" = type { %"class.std::__1::__vector_base.233" }
%"class.std::__1::__vector_base.233" = type { %"class.ui::AXNode"**, %"class.ui::AXNode"**, %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.ui::AXNode"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.126 }
%struct.anon.126 = type { i8 }

$_ZN2ui12AXTreeSourceIPKNS_6AXNodeEED2Ev = comdat any

$_ZN2ui19AXTreeSourceAdapterD0Ev = comdat any

$_ZNK2ui19AXTreeSourceAdapter11GetTreeDataEPNS_10AXTreeDataE = comdat any

$_ZNK2ui19AXTreeSourceAdapter7GetRootEv = comdat any

$_ZNK2ui19AXTreeSourceAdapter9GetFromIdEi = comdat any

$_ZNK2ui19AXTreeSourceAdapter5GetIdEPKNS_6AXNodeE = comdat any

$_ZNK2ui19AXTreeSourceAdapter11GetChildrenEPKNS_6AXNodeEPNSt3__16vectorIS3_NS4_9allocatorIS3_EEEE = comdat any

$_ZNK2ui19AXTreeSourceAdapter9GetParentEPKNS_6AXNodeE = comdat any

$_ZNK2ui19AXTreeSourceAdapter7IsValidEPKNS_6AXNodeE = comdat any

$_ZNK2ui19AXTreeSourceAdapter9IsIgnoredEPKNS_6AXNodeE = comdat any

$_ZNK2ui19AXTreeSourceAdapter7IsEqualEPKNS_6AXNodeES3_ = comdat any

$_ZNK2ui19AXTreeSourceAdapter7GetNullEv = comdat any

$_ZNK2ui19AXTreeSourceAdapter13SerializeNodeEPKNS_6AXNodeEPNS_10AXNodeDataE = comdat any

$_ZNK2ui12AXTreeSourceIPKNS_6AXNodeEE14GetDebugStringES3_ = comdat any

$_ZN2ui12AXTreeSourceIPKNS_6AXNodeEE21SerializerClearedNodeEi = comdat any

$_ZN2ui10AXTreeDataaSERKS0_ = comdat any

$_ZTVN2ui19AXTreeSourceAdapterE = comdat any

@_ZTVN2ui18AXSerializableTreeE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::AXTreeID"*, %"class.ui::AXTree"*)* @_ZNK2ui6AXTree11GetAXTreeIDEv to i8*), i8* bitcast (%"class.ui::AXTableInfo"* (%"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZNK2ui6AXTree12GetTableInfoEPKNS_6AXNodeE to i8*), i8* bitcast (%"class.ui::AXNode"* (%"class.ui::AXTree"*, i32)* @_ZNK2ui6AXTree9GetFromIdEi to i8*), i8* bitcast (%"struct.ui::AXTreeData"* (%"class.ui::AXTree"*)* @_ZNK2ui6AXTree4dataEv to i8*), i8* bitcast (i64 (%"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui6AXTree11GetPosInSetERKNS_6AXNodeE to i8*), i8* bitcast (i64 (%"class.ui::AXTree"*, %"class.ui::AXNode"*)* @_ZN2ui6AXTree10GetSetSizeERKNS_6AXNodeE to i8*), i8* bitcast (void (%"struct.ui::AXNode::OwnerTree::Selection"*, %"class.ui::AXTree"*)* @_ZNK2ui6AXTree21GetUnignoredSelectionEv to i8*), i8* bitcast (i1 (%"class.ui::AXTree"*)* @_ZNK2ui6AXTree28GetTreeUpdateInProgressStateEv to i8*), i8* bitcast (i1 (%"class.ui::AXTree"*)* @_ZNK2ui6AXTree20HasPaginationSupportEv to i8*), i8* bitcast (void (%"class.ui::AXSerializableTree"*)* @_ZN2ui18AXSerializableTreeD2Ev to i8*), i8* bitcast (void (%"class.ui::AXSerializableTree"*)* @_ZN2ui18AXSerializableTreeD0Ev to i8*), i8* bitcast (i1 (%"class.ui::AXTree"*, %"struct.ui::AXTreeUpdate"*)* @_ZN2ui6AXTree11UnserializeERKNS_12AXTreeUpdateE to i8*), i8* bitcast (void (%"class.ui::AXTree"*, %"struct.ui::AXTreeData"*)* @_ZN2ui6AXTree10UpdateDataERKNS_10AXTreeDataE to i8*), i8* bitcast (%"class.ui::AXTreeSource"* (%"class.ui::AXSerializableTree"*)* @_ZN2ui18AXSerializableTree16CreateTreeSourceEv to i8*)] }, align 8
@_ZTVN2ui19AXTreeSourceAdapterE = linkonce_odr hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::AXTreeSource"*)* @_ZN2ui12AXTreeSourceIPKNS_6AXNodeEED2Ev to i8*), i8* bitcast (void (%"class.ui::AXTreeSourceAdapter"*)* @_ZN2ui19AXTreeSourceAdapterD0Ev to i8*), i8* bitcast (i1 (%"class.ui::AXTreeSourceAdapter"*, %"struct.ui::AXTreeData"*)* @_ZNK2ui19AXTreeSourceAdapter11GetTreeDataEPNS_10AXTreeDataE to i8*), i8* bitcast (%"class.ui::AXNode"* (%"class.ui::AXTreeSourceAdapter"*)* @_ZNK2ui19AXTreeSourceAdapter7GetRootEv to i8*), i8* bitcast (%"class.ui::AXNode"* (%"class.ui::AXTreeSourceAdapter"*, i32)* @_ZNK2ui19AXTreeSourceAdapter9GetFromIdEi to i8*), i8* bitcast (i32 (%"class.ui::AXTreeSourceAdapter"*, %"class.ui::AXNode"*)* @_ZNK2ui19AXTreeSourceAdapter5GetIdEPKNS_6AXNodeE to i8*), i8* bitcast (void (%"class.ui::AXTreeSourceAdapter"*, %"class.ui::AXNode"*, %"class.std::__1::vector.232"*)* @_ZNK2ui19AXTreeSourceAdapter11GetChildrenEPKNS_6AXNodeEPNSt3__16vectorIS3_NS4_9allocatorIS3_EEEE to i8*), i8* bitcast (%"class.ui::AXNode"* (%"class.ui::AXTreeSourceAdapter"*, %"class.ui::AXNode"*)* @_ZNK2ui19AXTreeSourceAdapter9GetParentEPKNS_6AXNodeE to i8*), i8* bitcast (i1 (%"class.ui::AXTreeSourceAdapter"*, %"class.ui::AXNode"*)* @_ZNK2ui19AXTreeSourceAdapter7IsValidEPKNS_6AXNodeE to i8*), i8* bitcast (i1 (%"class.ui::AXTreeSourceAdapter"*, %"class.ui::AXNode"*)* @_ZNK2ui19AXTreeSourceAdapter9IsIgnoredEPKNS_6AXNodeE to i8*), i8* bitcast (i1 (%"class.ui::AXTreeSourceAdapter"*, %"class.ui::AXNode"*, %"class.ui::AXNode"*)* @_ZNK2ui19AXTreeSourceAdapter7IsEqualEPKNS_6AXNodeES3_ to i8*), i8* bitcast (%"class.ui::AXNode"* (%"class.ui::AXTreeSourceAdapter"*)* @_ZNK2ui19AXTreeSourceAdapter7GetNullEv to i8*), i8* bitcast (void (%"class.ui::AXTreeSourceAdapter"*, %"class.ui::AXNode"*, %"struct.ui::AXNodeData"*)* @_ZNK2ui19AXTreeSourceAdapter13SerializeNodeEPKNS_6AXNodeEPNS_10AXNodeDataE to i8*), i8* bitcast (void (%"class.std::__1::basic_string.122"*, %"class.ui::AXTreeSource"*, %"class.ui::AXNode"*)* @_ZNK2ui12AXTreeSourceIPKNS_6AXNodeEE14GetDebugStringES3_ to i8*), i8* bitcast (void (%"class.ui::AXTreeSource"*, i32)* @_ZN2ui12AXTreeSourceIPKNS_6AXNodeEE21SerializerClearedNodeEi to i8*)] }, comdat, align 8
@__const._ZNK2ui12AXTreeSourceIPKNS_6AXNodeEE14GetDebugStringES3_.node_data = private unnamed_addr constant { i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.17", %"class.std::__1::vector.24", %"class.std::__1::vector.32", %"class.std::__1::vector.40", %"class.std::__1::vector.48", %"class.std::__1::vector.56", %"class.std::__1::vector.64", %"class.std::__1::vector.72", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.79" } } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, %"class.std::__1::vector.17" { %"class.std::__1::__vector_base.18" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"class.std::__1::__compressed_pair.19" { %"struct.std::__1::__compressed_pair_elem.20" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*) } } } }, %"class.std::__1::vector.24" { %"class.std::__1::__vector_base.25" { %"struct.std::__1::pair.26"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.26"*), %"struct.std::__1::pair.26"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.26"*), %"class.std::__1::__compressed_pair.27" { %"struct.std::__1::__compressed_pair_elem.28" { %"struct.std::__1::pair.26"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.26"*) } } } }, %"class.std::__1::vector.32" { %"class.std::__1::__vector_base.33" { %"struct.std::__1::pair.34"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.34"*), %"struct.std::__1::pair.34"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.34"*), %"class.std::__1::__compressed_pair.35" { %"struct.std::__1::__compressed_pair_elem.36" { %"struct.std::__1::pair.34"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.34"*) } } } }, %"class.std::__1::vector.40" { %"class.std::__1::__vector_base.41" { %"struct.std::__1::pair.42"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.42"*), %"struct.std::__1::pair.42"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.42"*), %"class.std::__1::__compressed_pair.43" { %"struct.std::__1::__compressed_pair_elem.44" { %"struct.std::__1::pair.42"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.42"*) } } } }, %"class.std::__1::vector.48" { %"class.std::__1::__vector_base.49" { %"struct.std::__1::pair.50"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.50"*), %"struct.std::__1::pair.50"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.50"*), %"class.std::__1::__compressed_pair.51" { %"struct.std::__1::__compressed_pair_elem.52" { %"struct.std::__1::pair.50"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.50"*) } } } }, %"class.std::__1::vector.56" { %"class.std::__1::__vector_base.57" { %"struct.std::__1::pair.58"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.58"*), %"struct.std::__1::pair.58"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.58"*), %"class.std::__1::__compressed_pair.59" { %"struct.std::__1::__compressed_pair_elem.60" { %"struct.std::__1::pair.58"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.58"*) } } } }, %"class.std::__1::vector.64" { %"class.std::__1::__vector_base.65" { %"struct.std::__1::pair.66"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.66"*), %"struct.std::__1::pair.66"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.66"*), %"class.std::__1::__compressed_pair.67" { %"struct.std::__1::__compressed_pair_elem.68" { %"struct.std::__1::pair.66"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.66"*) } } } }, %"class.std::__1::vector.72" { %"class.std::__1::__vector_base.73" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.74" { %"struct.std::__1::__compressed_pair_elem.75" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.79" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.79" { %"class.std::__1::__compressed_pair.80" { %"struct.std::__1::__compressed_pair_elem.81" { %"class.gfx::Transform"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Transform"*) } } } } }, align 8

@_ZN2ui18AXSerializableTreeC1Ev = hidden unnamed_addr alias void (%"class.ui::AXSerializableTree"*), void (%"class.ui::AXSerializableTree"*)* @_ZN2ui18AXSerializableTreeC2Ev
@_ZN2ui18AXSerializableTreeC1ERKNS_12AXTreeUpdateE = hidden unnamed_addr alias void (%"class.ui::AXSerializableTree"*, %"struct.ui::AXTreeUpdate"*), void (%"class.ui::AXSerializableTree"*, %"struct.ui::AXTreeUpdate"*)* @_ZN2ui18AXSerializableTreeC2ERKNS_12AXTreeUpdateE
@_ZN2ui18AXSerializableTreeD1Ev = hidden unnamed_addr alias void (%"class.ui::AXSerializableTree"*), void (%"class.ui::AXSerializableTree"*)* @_ZN2ui18AXSerializableTreeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18AXSerializableTreeC2Ev(%"class.ui::AXSerializableTree"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXSerializableTree", %"class.ui::AXSerializableTree"* %0, i64 0, i32 0
  tail call void @_ZN2ui6AXTreeC2Ev(%"class.ui::AXTree"* %2) #9
  %3 = getelementptr inbounds %"class.ui::AXSerializableTree", %"class.ui::AXSerializableTree"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN2ui18AXSerializableTreeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN2ui6AXTreeC2Ev(%"class.ui::AXTree"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18AXSerializableTreeC2ERKNS_12AXTreeUpdateE(%"class.ui::AXSerializableTree"*, %"struct.ui::AXTreeUpdate"* dereferenceable(320)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXSerializableTree", %"class.ui::AXSerializableTree"* %0, i64 0, i32 0
  tail call void @_ZN2ui6AXTreeC2ERKNS_12AXTreeUpdateE(%"class.ui::AXTree"* %3, %"struct.ui::AXTreeUpdate"* dereferenceable(320) %1) #9
  %4 = getelementptr inbounds %"class.ui::AXSerializableTree", %"class.ui::AXSerializableTree"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN2ui18AXSerializableTreeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN2ui6AXTreeC2ERKNS_12AXTreeUpdateE(%"class.ui::AXTree"*, %"struct.ui::AXTreeUpdate"* dereferenceable(320)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui6AXTreeD2Ev(%"class.ui::AXTree"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18AXSerializableTreeD2Ev(%"class.ui::AXSerializableTree"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXSerializableTree", %"class.ui::AXSerializableTree"* %0, i64 0, i32 0
  tail call void @_ZN2ui6AXTreeD2Ev(%"class.ui::AXTree"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18AXSerializableTreeD0Ev(%"class.ui::AXSerializableTree"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXSerializableTree", %"class.ui::AXSerializableTree"* %0, i64 0, i32 0
  tail call void @_ZN2ui6AXTreeD2Ev(%"class.ui::AXTree"* %2) #9
  %3 = bitcast %"class.ui::AXSerializableTree"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %"class.ui::AXTreeSource"* @_ZN2ui18AXSerializableTree16CreateTreeSourceEv(%"class.ui::AXSerializableTree"*) unnamed_addr #4 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #10
  %3 = getelementptr inbounds %"class.ui::AXSerializableTree", %"class.ui::AXSerializableTree"* %0, i64 0, i32 0
  %4 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN2ui19AXTreeSourceAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to %"class.ui::AXTree"**
  store %"class.ui::AXTree"* %3, %"class.ui::AXTree"** %6, align 8
  %7 = bitcast i8* %2 to %"class.ui::AXTreeSource"*
  ret %"class.ui::AXTreeSource"* %7
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZNK2ui6AXTree11GetAXTreeIDEv(%"class.ui::AXTreeID"* sret, %"class.ui::AXTree"*) unnamed_addr #1

declare %"class.ui::AXTableInfo"* @_ZNK2ui6AXTree12GetTableInfoEPKNS_6AXNodeE(%"class.ui::AXTree"*, %"class.ui::AXNode"*) unnamed_addr #1

declare %"class.ui::AXNode"* @_ZNK2ui6AXTree9GetFromIdEi(%"class.ui::AXTree"*, i32) unnamed_addr #1

declare dereferenceable(248) %"struct.ui::AXTreeData"* @_ZNK2ui6AXTree4dataEv(%"class.ui::AXTree"*) unnamed_addr #1

declare i64 @_ZN2ui6AXTree11GetPosInSetERKNS_6AXNodeE(%"class.ui::AXTree"*, %"class.ui::AXNode"* dereferenceable(456)) unnamed_addr #1

declare i64 @_ZN2ui6AXTree10GetSetSizeERKNS_6AXNodeE(%"class.ui::AXTree"*, %"class.ui::AXNode"* dereferenceable(456)) unnamed_addr #1

declare void @_ZNK2ui6AXTree21GetUnignoredSelectionEv(%"struct.ui::AXNode::OwnerTree::Selection"* sret, %"class.ui::AXTree"*) unnamed_addr #1

declare zeroext i1 @_ZNK2ui6AXTree28GetTreeUpdateInProgressStateEv(%"class.ui::AXTree"*) unnamed_addr #1

declare zeroext i1 @_ZNK2ui6AXTree20HasPaginationSupportEv(%"class.ui::AXTree"*) unnamed_addr #1

declare zeroext i1 @_ZN2ui6AXTree11UnserializeERKNS_12AXTreeUpdateE(%"class.ui::AXTree"*, %"struct.ui::AXTreeUpdate"* dereferenceable(320)) unnamed_addr #1

declare void @_ZN2ui6AXTree10UpdateDataERKNS_10AXTreeDataE(%"class.ui::AXTree"*, %"struct.ui::AXTreeData"* dereferenceable(248)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui12AXTreeSourceIPKNS_6AXNodeEED2Ev(%"class.ui::AXTreeSource"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui19AXTreeSourceAdapterD0Ev(%"class.ui::AXTreeSourceAdapter"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.ui::AXTreeSourceAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2ui19AXTreeSourceAdapter11GetTreeDataEPNS_10AXTreeDataE(%"class.ui::AXTreeSourceAdapter"*, %"struct.ui::AXTreeData"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.ui::AXTreeSourceAdapter", %"class.ui::AXTreeSourceAdapter"* %0, i64 0, i32 1
  %4 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %3, align 8
  %5 = bitcast %"class.ui::AXTree"* %4 to %"struct.ui::AXTreeData"* (%"class.ui::AXTree"*)***
  %6 = load %"struct.ui::AXTreeData"* (%"class.ui::AXTree"*)**, %"struct.ui::AXTreeData"* (%"class.ui::AXTree"*)*** %5, align 8
  %7 = getelementptr inbounds %"struct.ui::AXTreeData"* (%"class.ui::AXTree"*)*, %"struct.ui::AXTreeData"* (%"class.ui::AXTree"*)** %6, i64 3
  %8 = load %"struct.ui::AXTreeData"* (%"class.ui::AXTree"*)*, %"struct.ui::AXTreeData"* (%"class.ui::AXTree"*)** %7, align 8
  %9 = tail call dereferenceable(248) %"struct.ui::AXTreeData"* %8(%"class.ui::AXTree"* %4) #9
  %10 = tail call dereferenceable(248) %"struct.ui::AXTreeData"* @_ZN2ui10AXTreeDataaSERKS0_(%"struct.ui::AXTreeData"* %1, %"struct.ui::AXTreeData"* dereferenceable(248) %9)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.ui::AXNode"* @_ZNK2ui19AXTreeSourceAdapter7GetRootEv(%"class.ui::AXTreeSourceAdapter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.ui::AXTreeSourceAdapter", %"class.ui::AXTreeSourceAdapter"* %0, i64 0, i32 1
  %3 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %2, align 8
  %4 = getelementptr inbounds %"class.ui::AXTree", %"class.ui::AXTree"* %3, i64 0, i32 3
  %5 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %4, align 8
  ret %"class.ui::AXNode"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.ui::AXNode"* @_ZNK2ui19AXTreeSourceAdapter9GetFromIdEi(%"class.ui::AXTreeSourceAdapter"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.ui::AXTreeSourceAdapter", %"class.ui::AXTreeSourceAdapter"* %0, i64 0, i32 1
  %4 = load %"class.ui::AXTree"*, %"class.ui::AXTree"** %3, align 8
  %5 = bitcast %"class.ui::AXTree"* %4 to %"class.ui::AXNode"* (%"class.ui::AXTree"*, i32)***
  %6 = load %"class.ui::AXNode"* (%"class.ui::AXTree"*, i32)**, %"class.ui::AXNode"* (%"class.ui::AXTree"*, i32)*** %5, align 8
  %7 = getelementptr inbounds %"class.ui::AXNode"* (%"class.ui::AXTree"*, i32)*, %"class.ui::AXNode"* (%"class.ui::AXTree"*, i32)** %6, i64 2
  %8 = load %"class.ui::AXNode"* (%"class.ui::AXTree"*, i32)*, %"class.ui::AXNode"* (%"class.ui::AXTree"*, i32)** %7, align 8
  %9 = tail call %"class.ui::AXNode"* %8(%"class.ui::AXTree"* %4, i32 %1) #9
  ret %"class.ui::AXNode"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2ui19AXTreeSourceAdapter5GetIdEPKNS_6AXNodeE(%"class.ui::AXTreeSourceAdapter"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 7, i32 1
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2ui19AXTreeSourceAdapter11GetChildrenEPKNS_6AXNodeEPNSt3__16vectorIS3_NS4_9allocatorIS3_EEEE(%"class.ui::AXTreeSourceAdapter"*, %"class.ui::AXNode"*, %"class.std::__1::vector.232"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.232", align 8
  %5 = bitcast %"class.std::__1::vector.232"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 6, i32 0, i32 0
  %7 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %6, align 8
  %8 = bitcast %"class.ui::AXNode"** %7 to i8*
  %9 = ptrtoint %"class.ui::AXNode"** %7 to i64
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 6, i32 0, i32 1
  %11 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %10, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #9
  %12 = ptrtoint %"class.ui::AXNode"** %11 to i64
  %13 = sub i64 %12, %9
  %14 = ashr exact i64 %13, 3
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %209, label %16

16:                                               ; preds = %3
  %17 = icmp ugt i64 %14, 2305843009213693951
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector.232"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %19) #11
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #10
  %22 = bitcast i8* %21 to %"class.ui::AXNode"**
  %23 = getelementptr inbounds %"class.std::__1::vector.232", %"class.std::__1::vector.232"* %4, i64 0, i32 0, i32 1
  %24 = bitcast %"class.ui::AXNode"*** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector.232"* %4 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %22, i64 %14
  %27 = getelementptr inbounds %"class.std::__1::vector.232", %"class.std::__1::vector.232"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.ui::AXNode"** %26, %"class.ui::AXNode"*** %27, align 8
  %28 = bitcast %"class.ui::AXNode"*** %23 to i64*
  %29 = ptrtoint i8* %21 to i64
  %30 = icmp eq %"class.ui::AXNode"** %7, %11
  br i1 %30, label %207, label %31

31:                                               ; preds = %20
  %32 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %11, i64 -1
  %33 = ptrtoint %"class.ui::AXNode"** %32 to i64
  %34 = sub i64 %33, %9
  %35 = lshr i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = icmp ult i64 %36, 4
  br i1 %37, label %133, label %38

38:                                               ; preds = %31
  %39 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %11, i64 -1
  %40 = ptrtoint %"class.ui::AXNode"** %39 to i64
  %41 = sub i64 %40, %9
  %42 = lshr i64 %41, 3
  %43 = add i64 %41, 8
  %44 = and i64 %43, -8
  %45 = getelementptr i8, i8* %21, i64 %44
  %46 = add nuw nsw i64 %42, 1
  %47 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %7, i64 %46
  %48 = bitcast %"class.ui::AXNode"** %47 to i8*
  %49 = icmp ult i8* %21, %48
  %50 = icmp ugt i8* %45, %8
  %51 = and i1 %49, %50
  br i1 %51, label %133, label %52

52:                                               ; preds = %38
  %53 = and i64 %36, 4611686018427387900
  %54 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %22, i64 %53
  %55 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %7, i64 %53
  %56 = add nsw i64 %53, -4
  %57 = lshr exact i64 %56, 2
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 12
  br i1 %60, label %112, label %61

61:                                               ; preds = %52
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %22, i64 %64
  %67 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %7, i64 %64
  %68 = bitcast %"class.ui::AXNode"** %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8, !alias.scope !2
  %70 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %67, i64 2
  %71 = bitcast %"class.ui::AXNode"** %70 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8, !alias.scope !2
  %73 = bitcast %"class.ui::AXNode"** %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %73, align 8, !alias.scope !5, !noalias !2
  %74 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %66, i64 2
  %75 = bitcast %"class.ui::AXNode"** %74 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %75, align 8, !alias.scope !5, !noalias !2
  %76 = or i64 %64, 4
  %77 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %22, i64 %76
  %78 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %7, i64 %76
  %79 = bitcast %"class.ui::AXNode"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !2
  %81 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %78, i64 2
  %82 = bitcast %"class.ui::AXNode"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !2
  %84 = bitcast %"class.ui::AXNode"** %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 8, !alias.scope !5, !noalias !2
  %85 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %77, i64 2
  %86 = bitcast %"class.ui::AXNode"** %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 8, !alias.scope !5, !noalias !2
  %87 = or i64 %64, 8
  %88 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %22, i64 %87
  %89 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %7, i64 %87
  %90 = bitcast %"class.ui::AXNode"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !2
  %92 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %89, i64 2
  %93 = bitcast %"class.ui::AXNode"** %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8, !alias.scope !2
  %95 = bitcast %"class.ui::AXNode"** %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 8, !alias.scope !5, !noalias !2
  %96 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %88, i64 2
  %97 = bitcast %"class.ui::AXNode"** %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8, !alias.scope !5, !noalias !2
  %98 = or i64 %64, 12
  %99 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %22, i64 %98
  %100 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %7, i64 %98
  %101 = bitcast %"class.ui::AXNode"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !2
  %103 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %100, i64 2
  %104 = bitcast %"class.ui::AXNode"** %103 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8, !alias.scope !2
  %106 = bitcast %"class.ui::AXNode"** %99 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %106, align 8, !alias.scope !5, !noalias !2
  %107 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %99, i64 2
  %108 = bitcast %"class.ui::AXNode"** %107 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %108, align 8, !alias.scope !5, !noalias !2
  %109 = add i64 %64, 16
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !7

112:                                              ; preds = %63, %52
  %113 = phi i64 [ 0, %52 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %22, i64 %116
  %119 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %7, i64 %116
  %120 = bitcast %"class.ui::AXNode"** %119 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 8, !alias.scope !2
  %122 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %119, i64 2
  %123 = bitcast %"class.ui::AXNode"** %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !2
  %125 = bitcast %"class.ui::AXNode"** %118 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %125, align 8, !alias.scope !5, !noalias !2
  %126 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %118, i64 2
  %127 = bitcast %"class.ui::AXNode"** %126 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %127, align 8, !alias.scope !5, !noalias !2
  %128 = add i64 %116, 4
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !9

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %36, %53
  br i1 %132, label %204, label %133

133:                                              ; preds = %131, %38, %31
  %134 = phi %"class.ui::AXNode"** [ %22, %38 ], [ %22, %31 ], [ %54, %131 ]
  %135 = phi %"class.ui::AXNode"** [ %7, %38 ], [ %7, %31 ], [ %55, %131 ]
  %136 = ptrtoint %"class.ui::AXNode"** %135 to i64
  %137 = getelementptr %"class.ui::AXNode"*, %"class.ui::AXNode"** %11, i64 -1
  %138 = ptrtoint %"class.ui::AXNode"** %137 to i64
  %139 = sub i64 %138, %136
  %140 = lshr i64 %139, 3
  %141 = add nuw nsw i64 %140, 1
  %142 = and i64 %141, 7
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %133, %144
  %145 = phi %"class.ui::AXNode"** [ %152, %144 ], [ %134, %133 ]
  %146 = phi %"class.ui::AXNode"** [ %151, %144 ], [ %135, %133 ]
  %147 = phi i64 [ %153, %144 ], [ %142, %133 ]
  %148 = bitcast %"class.ui::AXNode"** %145 to i64*
  %149 = bitcast %"class.ui::AXNode"** %146 to i64*
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %148, align 8
  %151 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %146, i64 1
  %152 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %145, i64 1
  %153 = add i64 %147, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %144, !llvm.loop !11

155:                                              ; preds = %144, %133
  %156 = phi %"class.ui::AXNode"** [ undef, %133 ], [ %152, %144 ]
  %157 = phi %"class.ui::AXNode"** [ %134, %133 ], [ %152, %144 ]
  %158 = phi %"class.ui::AXNode"** [ %135, %133 ], [ %151, %144 ]
  %159 = icmp ult i64 %139, 56
  br i1 %159, label %204, label %160

160:                                              ; preds = %155, %160
  %161 = phi %"class.ui::AXNode"** [ %202, %160 ], [ %157, %155 ]
  %162 = phi %"class.ui::AXNode"** [ %201, %160 ], [ %158, %155 ]
  %163 = bitcast %"class.ui::AXNode"** %161 to i64*
  %164 = bitcast %"class.ui::AXNode"** %162 to i64*
  %165 = load i64, i64* %164, align 8
  store i64 %165, i64* %163, align 8
  %166 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %162, i64 1
  %167 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %161, i64 1
  %168 = bitcast %"class.ui::AXNode"** %167 to i64*
  %169 = bitcast %"class.ui::AXNode"** %166 to i64*
  %170 = load i64, i64* %169, align 8
  store i64 %170, i64* %168, align 8
  %171 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %162, i64 2
  %172 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %161, i64 2
  %173 = bitcast %"class.ui::AXNode"** %172 to i64*
  %174 = bitcast %"class.ui::AXNode"** %171 to i64*
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %173, align 8
  %176 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %162, i64 3
  %177 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %161, i64 3
  %178 = bitcast %"class.ui::AXNode"** %177 to i64*
  %179 = bitcast %"class.ui::AXNode"** %176 to i64*
  %180 = load i64, i64* %179, align 8
  store i64 %180, i64* %178, align 8
  %181 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %162, i64 4
  %182 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %161, i64 4
  %183 = bitcast %"class.ui::AXNode"** %182 to i64*
  %184 = bitcast %"class.ui::AXNode"** %181 to i64*
  %185 = load i64, i64* %184, align 8
  store i64 %185, i64* %183, align 8
  %186 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %162, i64 5
  %187 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %161, i64 5
  %188 = bitcast %"class.ui::AXNode"** %187 to i64*
  %189 = bitcast %"class.ui::AXNode"** %186 to i64*
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %188, align 8
  %191 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %162, i64 6
  %192 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %161, i64 6
  %193 = bitcast %"class.ui::AXNode"** %192 to i64*
  %194 = bitcast %"class.ui::AXNode"** %191 to i64*
  %195 = load i64, i64* %194, align 8
  store i64 %195, i64* %193, align 8
  %196 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %162, i64 7
  %197 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %161, i64 7
  %198 = bitcast %"class.ui::AXNode"** %197 to i64*
  %199 = bitcast %"class.ui::AXNode"** %196 to i64*
  %200 = load i64, i64* %199, align 8
  store i64 %200, i64* %198, align 8
  %201 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %162, i64 8
  %202 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %161, i64 8
  %203 = icmp eq %"class.ui::AXNode"** %201, %11
  br i1 %203, label %204, label %160, !llvm.loop !12

204:                                              ; preds = %155, %160, %131
  %205 = phi %"class.ui::AXNode"** [ %54, %131 ], [ %156, %155 ], [ %202, %160 ]
  %206 = ptrtoint %"class.ui::AXNode"** %205 to i64
  br label %207

207:                                              ; preds = %204, %20
  %208 = phi i64 [ %29, %20 ], [ %206, %204 ]
  store i64 %208, i64* %28, align 8
  br label %209

209:                                              ; preds = %3, %207
  %210 = phi i64 [ 0, %3 ], [ %208, %207 ]
  %211 = phi i64 [ 0, %3 ], [ %29, %207 ]
  %212 = getelementptr inbounds %"class.std::__1::vector.232", %"class.std::__1::vector.232"* %2, i64 0, i32 0, i32 0
  %213 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %212, align 8
  %214 = icmp eq %"class.ui::AXNode"** %213, null
  br i1 %214, label %221, label %215

215:                                              ; preds = %209
  %216 = ptrtoint %"class.ui::AXNode"** %213 to i64
  %217 = getelementptr inbounds %"class.std::__1::vector.232", %"class.std::__1::vector.232"* %2, i64 0, i32 0, i32 1
  %218 = bitcast %"class.ui::AXNode"*** %217 to i64*
  store i64 %216, i64* %218, align 8
  %219 = bitcast %"class.ui::AXNode"** %213 to i8*
  tail call void @_ZdlPv(i8* %219) #10
  %220 = bitcast %"class.std::__1::vector.232"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %220, i8 0, i64 24, i1 false) #9
  br label %221

221:                                              ; preds = %215, %209
  %222 = bitcast %"class.std::__1::vector.232"* %2 to i64*
  store i64 %211, i64* %222, align 8
  %223 = getelementptr inbounds %"class.std::__1::vector.232", %"class.std::__1::vector.232"* %2, i64 0, i32 0, i32 1
  %224 = bitcast %"class.ui::AXNode"*** %223 to i64*
  store i64 %210, i64* %224, align 8
  %225 = getelementptr inbounds %"class.std::__1::vector.232", %"class.std::__1::vector.232"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %226 = bitcast %"class.ui::AXNode"*** %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = getelementptr inbounds %"class.std::__1::vector.232", %"class.std::__1::vector.232"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %229 = bitcast %"class.ui::AXNode"*** %228 to i64*
  store i64 %227, i64* %229, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.ui::AXNode"* @_ZNK2ui19AXTreeSourceAdapter9GetParentEPKNS_6AXNodeE(%"class.ui::AXTreeSourceAdapter"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 5
  %4 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %3, align 8
  ret %"class.ui::AXNode"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2ui19AXTreeSourceAdapter7IsValidEPKNS_6AXNodeE(%"class.ui::AXTreeSourceAdapter"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp ne %"class.ui::AXNode"* %1, null
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2ui19AXTreeSourceAdapter9IsIgnoredEPKNS_6AXNodeE(%"class.ui::AXTreeSourceAdapter"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  %3 = tail call zeroext i1 @_ZNK2ui6AXNode9IsIgnoredEv(%"class.ui::AXNode"* %1) #9
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2ui19AXTreeSourceAdapter7IsEqualEPKNS_6AXNodeES3_(%"class.ui::AXTreeSourceAdapter"*, %"class.ui::AXNode"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"class.ui::AXNode"* %1, %2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.ui::AXNode"* @_ZNK2ui19AXTreeSourceAdapter7GetNullEv(%"class.ui::AXTreeSourceAdapter"*) unnamed_addr #0 comdat align 2 {
  ret %"class.ui::AXNode"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2ui19AXTreeSourceAdapter13SerializeNodeEPKNS_6AXNodeEPNS_10AXNodeDataE(%"class.ui::AXTreeSourceAdapter"*, %"class.ui::AXNode"*, %"struct.ui::AXNodeData"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.ui::AXNodeData", align 8
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 7
  call void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"* nonnull %4, %"struct.ui::AXNodeData"* dereferenceable(264) %5) #9
  %6 = call dereferenceable(264) %"struct.ui::AXNodeData"* @_ZN2ui10AXNodeDataaSES0_(%"struct.ui::AXNodeData"* %2, %"struct.ui::AXNodeData"* nonnull %4) #9
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2ui12AXTreeSourceIPKNS_6AXNodeEE14GetDebugStringES3_(%"class.std::__1::basic_string.122"* noalias sret, %"class.ui::AXTreeSource"*, %"class.ui::AXNode"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.ui::AXNodeData", align 8
  %5 = bitcast %"struct.ui::AXNodeData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %5) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.17", %"class.std::__1::vector.24", %"class.std::__1::vector.32", %"class.std::__1::vector.40", %"class.std::__1::vector.48", %"class.std::__1::vector.56", %"class.std::__1::vector.64", %"class.std::__1::vector.72", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.79" } }* @__const._ZNK2ui12AXTreeSourceIPKNS_6AXNodeEE14GetDebugStringES3_.node_data to i8*), i64 264, i1 false)
  call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* nonnull %4) #9
  %6 = bitcast %"class.ui::AXTreeSource"* %1 to void (%"class.ui::AXTreeSource"*, %"class.ui::AXNode"*, %"struct.ui::AXNodeData"*)***
  %7 = load void (%"class.ui::AXTreeSource"*, %"class.ui::AXNode"*, %"struct.ui::AXNodeData"*)**, void (%"class.ui::AXTreeSource"*, %"class.ui::AXNode"*, %"struct.ui::AXNodeData"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::AXTreeSource"*, %"class.ui::AXNode"*, %"struct.ui::AXNodeData"*)*, void (%"class.ui::AXTreeSource"*, %"class.ui::AXNode"*, %"struct.ui::AXNodeData"*)** %7, i64 12
  %9 = load void (%"class.ui::AXTreeSource"*, %"class.ui::AXNode"*, %"struct.ui::AXNodeData"*)*, void (%"class.ui::AXTreeSource"*, %"class.ui::AXNode"*, %"struct.ui::AXNodeData"*)** %8, align 8
  call void %9(%"class.ui::AXTreeSource"* %1, %"class.ui::AXNode"* %2, %"struct.ui::AXNodeData"* nonnull %4) #9
  call void @_ZNK2ui10AXNodeData8ToStringEv(%"class.std::__1::basic_string.122"* sret %0, %"struct.ui::AXNodeData"* nonnull %4) #9
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui12AXTreeSourceIPKNS_6AXNodeEE21SerializerClearedNodeEi(%"class.ui::AXTreeSource"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(248) %"struct.ui::AXTreeData"* @_ZN2ui10AXTreeDataaSERKS0_(%"struct.ui::AXTreeData"*, %"struct.ui::AXTreeData"* dereferenceable(248)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 1
  %5 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %3, %"class.ui::AXTreeID"* dereferenceable(32) %4) #9
  %6 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 2
  %8 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %6, %"class.ui::AXTreeID"* dereferenceable(32) %7) #9
  %9 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 3
  %11 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %9, %"class.ui::AXTreeID"* dereferenceable(32) %10) #9
  %12 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 4
  %14 = icmp eq %"struct.ui::AXTreeData"* %0, %1
  br i1 %14, label %111, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string.122"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = bitcast %"class.std::__1::basic_string.122"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %19, label %34, label %24

24:                                               ; preds = %15
  br i1 %23, label %28, label %25

25:                                               ; preds = %24
  %26 = bitcast %"class.std::__1::basic_string.122"* %12 to i8*
  %27 = bitcast %"class.std::__1::basic_string.122"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #9
  br label %44

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::basic_string.122", %"class.std::__1::basic_string.122"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string.122"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.122"* %12, i8* %30, i64 %32) #9
  br label %44

34:                                               ; preds = %15
  %35 = getelementptr inbounds %"class.std::__1::basic_string.122", %"class.std::__1::basic_string.122"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::basic_string.122"* %13 to i8*
  %40 = zext i8 %22 to i64
  %41 = select i1 %23, i8* %36, i8* %39
  %42 = select i1 %23, i64 %38, i64 %40
  %43 = tail call dereferenceable(24) %"class.std::__1::basic_string.122"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.122"* %12, i8* %41, i64 %42) #9
  br label %44

44:                                               ; preds = %25, %28, %34
  %45 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 5
  %46 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 5
  %47 = bitcast i8* %46 to i64*
  %48 = bitcast i8* %45 to i64*
  %49 = load i64, i64* %47, align 8
  store i64 %49, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 8
  %51 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 8
  %52 = bitcast %"class.std::__1::basic_string.122"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  %56 = bitcast %"class.std::__1::basic_string.122"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %55, label %70, label %60

60:                                               ; preds = %44
  br i1 %59, label %64, label %61

61:                                               ; preds = %60
  %62 = bitcast %"class.std::__1::basic_string.122"* %50 to i8*
  %63 = bitcast %"class.std::__1::basic_string.122"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false) #9
  br label %80

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.std::__1::basic_string.122", %"class.std::__1::basic_string.122"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = tail call dereferenceable(24) %"class.std::__1::basic_string.122"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.122"* %50, i8* %66, i64 %68) #9
  br label %80

70:                                               ; preds = %44
  %71 = getelementptr inbounds %"class.std::__1::basic_string.122", %"class.std::__1::basic_string.122"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.std::__1::basic_string.122"* %51 to i8*
  %76 = zext i8 %58 to i64
  %77 = select i1 %59, i8* %72, i8* %75
  %78 = select i1 %59, i64 %74, i64 %76
  %79 = tail call dereferenceable(24) %"class.std::__1::basic_string.122"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.122"* %50, i8* %77, i64 %78) #9
  br label %80

80:                                               ; preds = %61, %64, %70
  %81 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 9
  %82 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 9
  %83 = bitcast %"class.std::__1::basic_string.122"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = bitcast %"class.std::__1::basic_string.122"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %86, label %101, label %91

91:                                               ; preds = %80
  br i1 %90, label %95, label %92

92:                                               ; preds = %91
  %93 = bitcast %"class.std::__1::basic_string.122"* %81 to i8*
  %94 = bitcast %"class.std::__1::basic_string.122"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 24, i1 false) #9
  br label %117

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.std::__1::basic_string.122", %"class.std::__1::basic_string.122"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = tail call dereferenceable(24) %"class.std::__1::basic_string.122"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.122"* %81, i8* %97, i64 %99) #9
  br label %117

101:                                              ; preds = %80
  %102 = getelementptr inbounds %"class.std::__1::basic_string.122", %"class.std::__1::basic_string.122"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.std::__1::basic_string.122"* %82 to i8*
  %107 = zext i8 %89 to i64
  %108 = select i1 %90, i8* %103, i8* %106
  %109 = select i1 %90, i64 %105, i64 %107
  %110 = tail call dereferenceable(24) %"class.std::__1::basic_string.122"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.122"* %81, i8* %108, i64 %109) #9
  br label %117

111:                                              ; preds = %2
  %112 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 5
  %113 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 5
  %114 = bitcast i8* %113 to i64*
  %115 = bitcast i8* %112 to i64*
  %116 = load i64, i64* %114, align 8
  store i64 %116, i64* %115, align 8
  br label %148

117:                                              ; preds = %92, %95, %101
  %118 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 10
  %119 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 10
  %120 = bitcast %"class.std::__1::basic_string.122"* %118 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  %124 = bitcast %"class.std::__1::basic_string.122"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %123, label %138, label %128

128:                                              ; preds = %117
  br i1 %127, label %132, label %129

129:                                              ; preds = %128
  %130 = bitcast %"class.std::__1::basic_string.122"* %118 to i8*
  %131 = bitcast %"class.std::__1::basic_string.122"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 24, i1 false) #9
  br label %148

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.std::__1::basic_string.122", %"class.std::__1::basic_string.122"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = tail call dereferenceable(24) %"class.std::__1::basic_string.122"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.122"* %118, i8* %134, i64 %136) #9
  br label %148

138:                                              ; preds = %117
  %139 = getelementptr inbounds %"class.std::__1::basic_string.122", %"class.std::__1::basic_string.122"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.std::__1::basic_string.122"* %119 to i8*
  %144 = zext i8 %126 to i64
  %145 = select i1 %127, i8* %140, i8* %143
  %146 = select i1 %127, i64 %142, i64 %144
  %147 = tail call dereferenceable(24) %"class.std::__1::basic_string.122"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.122"* %118, i8* %145, i64 %146) #9
  br label %148

148:                                              ; preds = %111, %129, %132, %138
  %149 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 11
  %150 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 11
  %151 = bitcast i32* %149 to i8*
  %152 = bitcast i32* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 36, i1 false)
  ret %"struct.ui::AXTreeData"* %0
}

declare dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"*, %"class.ui::AXTreeID"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

declare dereferenceable(24) %"class.std::__1::basic_string.122"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.122"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.122"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.122"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare zeroext i1 @_ZNK2ui6AXNode9IsIgnoredEv(%"class.ui::AXNode"*) local_unnamed_addr #1

declare void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"* dereferenceable(264)) unnamed_addr #1

declare dereferenceable(264) %"struct.ui::AXNodeData"* @_ZN2ui10AXNodeDataaSES0_(%"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #2

declare void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #1

declare void @_ZNK2ui10AXNodeData8ToStringEv(%"class.std::__1::basic_string.122"* sret, %"struct.ui::AXNodeData"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
