; ModuleID = '../../third_party/boringssl/src/crypto/pkcs7/pkcs7.c'
source_filename = "../../third_party/boringssl/src/crypto/pkcs7/pkcs7.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cbs_st = type { i8*, i64 }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%struct.crypto_buffer_pool_st = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.crypto_buffer_st = type opaque
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }

@kPKCS7SignedData = internal constant [9 x i8] c"*\86H\86\F7\0D\01\07\02", align 1
@.str = private unnamed_addr constant [53 x i8] c"../../third_party/boringssl/src/crypto/pkcs7/pkcs7.c\00", align 1
@kPKCS7Data = internal constant [9 x i8] c"*\86H\86\F7\0D\01\07\01", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pkcs7_parse_header(i8**, %struct.cbs_st*, %struct.cbs_st*) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca %struct.cbs_st, align 8
  %9 = alloca i64, align 8
  %10 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #3
  %11 = bitcast %struct.cbs_st* %5 to i8*
  %12 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #3
  %13 = bitcast %struct.cbs_st* %6 to i8*
  %14 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #3
  %15 = bitcast %struct.cbs_st* %7 to i8*
  %16 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #3
  %17 = bitcast %struct.cbs_st* %8 to i8*
  %18 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #3
  %19 = bitcast i64* %9 to i8*
  %20 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #3
  store i64 -6148914691236517206, i64* %9, align 8
  store i8* null, i8** %0, align 8
  %21 = call i32 @CBS_asn1_ber_to_der(%struct.cbs_st* %2, %struct.cbs_st* nonnull %4, i8** %0) #3
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %55, label %23

23:                                               ; preds = %3
  %24 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %5, i32 536870928) #3
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6, i32 6) #3
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %26
  %30 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kPKCS7SignedData, i64 0, i64 0), i64 9) #3
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @ERR_put_error(i32 18, i32 0, i32 101, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 58) #3
  br label %55

33:                                               ; preds = %29
  %34 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %7, i32 -1610612736) #3
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %55, label %36

36:                                               ; preds = %33
  %37 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %8, i32 536870928) #3
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %55, label %39

39:                                               ; preds = %36
  %40 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %8, i64* nonnull %9) #3
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* null, i32 536870929) #3
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %42
  %46 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %8, %struct.cbs_st* null, i32 536870928) #3
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %45
  %49 = load i64, i64* %9, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @ERR_put_error(i32 18, i32 0, i32 100, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 73) #3
  br label %55

52:                                               ; preds = %48
  %53 = call i8* @CBS_data(%struct.cbs_st* nonnull %8) #3
  %54 = call i64 @CBS_len(%struct.cbs_st* nonnull %8) #3
  call void @CBS_init(%struct.cbs_st* %1, i8* %53, i64 %54) #3
  br label %57

55:                                               ; preds = %45, %42, %39, %36, %33, %26, %23, %3, %51, %32
  %56 = load i8*, i8** %0, align 8
  call void @OPENSSL_free(i8* %56) #3
  store i8* null, i8** %0, align 8
  br label %57

57:                                               ; preds = %55, %52
  %58 = phi i32 [ 0, %55 ], [ 1, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #3
  ret i32 %58
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @CBS_asn1_ber_to_der(%struct.cbs_st*, %struct.cbs_st*, i8**) local_unnamed_addr #2

declare i32 @CBS_get_asn1(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #2

declare i32 @CBS_mem_equal(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare i32 @CBS_get_asn1_uint64(%struct.cbs_st*, i64*) local_unnamed_addr #2

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PKCS7_get_raw_certificates(%struct.stack_st_CRYPTO_BUFFER*, %struct.cbs_st*, %struct.crypto_buffer_pool_st*) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.cbs_st, align 8
  %9 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #3
  %10 = bitcast %struct.cbs_st* %5 to i8*
  %11 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #3
  %12 = bitcast i8** %6 to i8*
  %13 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #3
  store i8* null, i8** %6, align 8
  %14 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #3
  store i32 -1431655766, i32* %7, align 4
  %15 = bitcast %struct.stack_st_CRYPTO_BUFFER* %0 to %struct.stack_st*
  %16 = tail call i64 @sk_num(%struct.stack_st* %15) #3
  %17 = call i32 @pkcs7_parse_header(i8** nonnull %6, %struct.cbs_st* nonnull %4, %struct.cbs_st* %1)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %49, label %19

19:                                               ; preds = %3
  %20 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %5, i32* nonnull %7, i32 -1610612736) #3
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %49, label %22

22:                                               ; preds = %19
  %23 = load i32, i32* %7, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @CBS_init(%struct.cbs_st* nonnull %5, i8* null, i64 0) #3
  br label %26

26:                                               ; preds = %22, %25
  %27 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #3
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = bitcast %struct.cbs_st* %8 to i8*
  %31 = bitcast %struct.cbs_st* %8 to i8*
  br label %34

32:                                               ; preds = %46, %26
  %33 = load i8*, i8** %6, align 8
  call void @OPENSSL_free(i8* %33) #3
  br label %58

34:                                               ; preds = %29, %46
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false)
  %35 = call i32 @CBS_get_asn1_element(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %8, i32 536870928) #3
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %34
  %38 = call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new_from_CBS(%struct.cbs_st* nonnull %8, %struct.crypto_buffer_pool_st* %2) #3
  %39 = icmp eq %struct.crypto_buffer_st* %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %37
  %41 = bitcast %struct.crypto_buffer_st* %38 to i8*
  %42 = call i64 @sk_push(%struct.stack_st* %15, i8* nonnull %41) #3
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %40, %37
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* %38) #3
  br label %45

45:                                               ; preds = %34, %44
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #3
  br label %49

46:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #3
  %47 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #3
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %32, label %34

49:                                               ; preds = %45, %19, %3
  %50 = load i8*, i8** %6, align 8
  call void @OPENSSL_free(i8* %50) #3
  %51 = call i64 @sk_num(%struct.stack_st* %15) #3
  %52 = icmp eq i64 %51, %16
  br i1 %52, label %58, label %53

53:                                               ; preds = %49, %53
  %54 = call i8* @sk_pop(%struct.stack_st* %15) #3
  %55 = bitcast i8* %54 to %struct.crypto_buffer_st*
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* %55) #3
  %56 = call i64 @sk_num(%struct.stack_st* %15) #3
  %57 = icmp eq i64 %56, %16
  br i1 %57, label %58, label %53

58:                                               ; preds = %53, %49, %32
  %59 = phi i32 [ 1, %32 ], [ 0, %49 ], [ 0, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #3
  ret i32 %59
}

declare i32 @CBS_get_optional_asn1(%struct.cbs_st*, %struct.cbs_st*, i32*, i32) local_unnamed_addr #2

declare i32 @CBS_get_asn1_element(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #2

declare %struct.crypto_buffer_st* @CRYPTO_BUFFER_new_from_CBS(%struct.cbs_st*, %struct.crypto_buffer_pool_st*) local_unnamed_addr #2

declare void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pkcs7_bundle(%struct.cbb_st*, i32 (%struct.cbb_st*, i8*)* nocapture, i8*) local_unnamed_addr #0 {
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = alloca %struct.cbb_st, align 8
  %8 = alloca %struct.cbb_st, align 8
  %9 = alloca %struct.cbb_st, align 8
  %10 = alloca %struct.cbb_st, align 8
  %11 = alloca %struct.cbb_st, align 8
  %12 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = bitcast %struct.cbb_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = bitcast %struct.cbb_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = bitcast %struct.cbb_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = bitcast %struct.cbb_st* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  %19 = bitcast %struct.cbb_st* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %20 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %4, i32 536870928) #3
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %60, label %22

22:                                               ; preds = %3
  %23 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 6) #3
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %60, label %25

25:                                               ; preds = %22
  %26 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kPKCS7SignedData, i64 0, i64 0), i64 9) #3
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %60, label %28

28:                                               ; preds = %25
  %29 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %6, i32 -1610612736) #3
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %60, label %31

31:                                               ; preds = %28
  %32 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %7, i32 536870928) #3
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %60, label %34

34:                                               ; preds = %31
  %35 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %7, %struct.cbb_st* nonnull %8, i32 2) #3
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %60, label %37

37:                                               ; preds = %34
  %38 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %8, i8 zeroext 1) #3
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %60, label %40

40:                                               ; preds = %37
  %41 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %7, %struct.cbb_st* nonnull %9, i32 536870929) #3
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %60, label %43

43:                                               ; preds = %40
  %44 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %7, %struct.cbb_st* nonnull %10, i32 536870928) #3
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %60, label %46

46:                                               ; preds = %43
  %47 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %10, %struct.cbb_st* nonnull %5, i32 6) #3
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %46
  %50 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @kPKCS7Data, i64 0, i64 0), i64 9) #3
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %49
  %53 = call i32 %1(%struct.cbb_st* nonnull %7, i8* %2) #3
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %52
  %56 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %7, %struct.cbb_st* nonnull %11, i32 536870929) #3
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = call i32 @CBB_flush(%struct.cbb_st* %0) #3
  br label %60

60:                                               ; preds = %3, %22, %25, %28, %31, %34, %37, %40, %43, %46, %49, %52, %55, %58
  %61 = phi i32 [ %59, %58 ], [ 0, %55 ], [ 0, %52 ], [ 0, %49 ], [ 0, %46 ], [ 0, %43 ], [ 0, %40 ], [ 0, %37 ], [ 0, %34 ], [ 0, %31 ], [ 0, %28 ], [ 0, %25 ], [ 0, %22 ], [ 0, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #3
  ret i32 %61
}

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

declare i32 @CBB_add_u8(%struct.cbb_st*, i8 zeroext) local_unnamed_addr #2

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #2

declare i8* @sk_pop(%struct.stack_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
