; ModuleID = '../../third_party/skia/src/core/SkATrace.cpp'
source_filename = "../../third_party/skia/src/core/SkATrace.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.SkATrace = type { %class.SkEventTracer, void (i8*)*, void ()*, i1 ()* }
%class.SkEventTracer = type { i32 (...)** }

$_ZN13SkEventTracerD2Ev = comdat any

$_ZN8SkATraceD0Ev = comdat any

$_ZN8SkATrace20getCategoryGroupNameEPKh = comdat any

$_ZZN8SkATrace20getCategoryGroupNameEPKhE8category = comdat any

@_ZTV8SkATrace = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkEventTracer*)* @_ZN13SkEventTracerD2Ev to i8*), i8* bitcast (void (%class.SkATrace*)* @_ZN8SkATraceD0Ev to i8*), i8* bitcast (i8* (%class.SkATrace*, i8*)* @_ZN8SkATrace23getCategoryGroupEnabledEPKc to i8*), i8* bitcast (i8* (%class.SkATrace*, i8*)* @_ZN8SkATrace20getCategoryGroupNameEPKh to i8*), i8* bitcast (i64 (%class.SkATrace*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)* @_ZN8SkATrace13addTraceEventEcPKhPKcmiPS3_S1_PKmh to i8*), i8* bitcast (void (%class.SkATrace*, i8*, i8*, i64)* @_ZN8SkATrace24updateTraceEventDurationEPKhPKcm to i8*)] }, align 8
@_ZZN8SkATrace23getCategoryGroupEnabledEPKcE3yes = internal global i8 1, align 1
@_ZZN8SkATrace20getCategoryGroupNameEPKhE8category = linkonce_odr hidden local_unnamed_addr global i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), comdat, align 8
@.str = private unnamed_addr constant [11 x i8] c"skiaATrace\00", align 1

@_ZN8SkATraceC1Ev = hidden unnamed_addr alias void (%class.SkATrace*), void (%class.SkATrace*)* @_ZN8SkATraceC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8SkATraceC2Ev(%class.SkATrace* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkATrace, %class.SkATrace* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV8SkATrace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkATrace, %class.SkATrace* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkATrace, %class.SkATrace* %0, i64 0, i32 3
  %5 = bitcast void (i8*)** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  store i1 ()* @"_ZZN8SkATraceC1EvEN3$_08__invokeEv", i1 ()** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8SkATrace13addTraceEventEcPKhPKcmiPS3_S1_PKmh(%class.SkATrace* nocapture readonly, i8 signext, i8* nocapture readnone, i8*, i64, i32, i8** nocapture readnone, i8* nocapture readnone, i64* nocapture readnone, i8 zeroext) unnamed_addr #1 align 2 {
  %11 = getelementptr inbounds %class.SkATrace, %class.SkATrace* %0, i64 0, i32 3
  %12 = load i1 ()*, i1 ()** %11, align 8
  %13 = tail call zeroext i1 %12() #7
  br i1 %13, label %14, label %22

14:                                               ; preds = %10
  switch i8 %1, label %22 [
    i8 88, label %15
    i8 73, label %15
  ]

15:                                               ; preds = %14, %14
  %16 = getelementptr inbounds %class.SkATrace, %class.SkATrace* %0, i64 0, i32 1
  %17 = load void (i8*)*, void (i8*)** %16, align 8
  tail call void %17(i8* %3) #7
  %18 = icmp eq i8 %1, 73
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.SkATrace, %class.SkATrace* %0, i64 0, i32 2
  %21 = load void ()*, void ()** %20, align 8
  tail call void %21() #7
  br label %22

22:                                               ; preds = %14, %15, %19, %10
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkATrace24updateTraceEventDurationEPKhPKcm(%class.SkATrace* nocapture readonly, i8* nocapture readnone, i8* nocapture readnone, i64) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkATrace, %class.SkATrace* %0, i64 0, i32 3
  %6 = load i1 ()*, i1 ()** %5, align 8
  %7 = tail call zeroext i1 %6() #7
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkATrace, %class.SkATrace* %0, i64 0, i32 2
  %10 = load void ()*, void ()** %9, align 8
  tail call void %10() #7
  br label %11

11:                                               ; preds = %8, %4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZN8SkATrace23getCategoryGroupEnabledEPKc(%class.SkATrace* nocapture readnone, i8* nocapture readnone) unnamed_addr #2 align 2 {
  ret i8* @_ZZN8SkATrace23getCategoryGroupEnabledEPKcE3yes
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkEventTracerD2Ev(%class.SkEventTracer*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkATraceD0Ev(%class.SkATrace*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %class.SkATrace* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN8SkATrace20getCategoryGroupNameEPKh(%class.SkATrace*, i8*) unnamed_addr #1 comdat align 2 {
  %3 = load i8*, i8** @_ZZN8SkATrace20getCategoryGroupNameEPKhE8category, align 8
  ret i8* %3
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @"_ZZN8SkATraceC1EvEN3$_08__invokeEv"() #4 align 2 {
  ret i1 false
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
