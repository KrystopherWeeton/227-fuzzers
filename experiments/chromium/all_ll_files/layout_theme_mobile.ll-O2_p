; ModuleID = '../../third_party/blink/renderer/core/layout/layout_theme_mobile.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_theme_mobile.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::LayoutThemeMobile" = type { %"class.blink::LayoutThemeDefault" }
%"class.blink::LayoutThemeDefault" = type { %"class.blink::LayoutTheme.base", %"class.blink::ThemePainterDefault", float, float }
%"class.blink::LayoutTheme.base" = type <{ i32 (...)**, %"class.WTF::RefCounted", %"class.blink::Color", i8, [7 x i8], %"class.base::TimeDelta", i8 }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Color" = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::ThemePainterDefault" = type { %"class.blink::ThemePainter", %"class.blink::LayoutThemeDefault"* }
%"class.blink::ThemePainter" = type { i32 (...)** }
%"class.blink::LayoutTheme" = type <{ i32 (...)**, %"class.WTF::RefCounted", %"class.blink::Color", i8, [7 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.3", %"class.WTF::String" }
%"class.WTF::StringAppend.3" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.WTF::StringImpl"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.606", %"class.std::__1::unique_ptr.608" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.248", %"class.blink::DataRef.320", %"class.blink::DataRef.324", %"class.blink::DataRef.524", %"class.blink::DataRef.589", %"class.blink::DataRef.593", %"class.blink::DataRef.597", %"class.blink::DataRef.601", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.5", %"class.blink::DataRef.7", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.5" = type { %"class.base::RefCounted.6" }
%"class.base::RefCounted.6" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.7" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.9", %"class.blink::Font" }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.33 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.12, %class.scoped_refptr.15, %class.scoped_refptr.25, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.32 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.11 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.11 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.628", [4 x i8] }>
%"class.WTF::RefCounted.628" = type { %"class.base::RefCounted.629" }
%"class.base::RefCounted.629" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.12 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.13", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.13" = type { %"class.base::RefCounted.14" }
%"class.base::RefCounted.14" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.15 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.16", %"class.WTF::RefCounted.23", [4 x i8] }>
%"class.blink::FontSettings.16" = type { %"class.WTF::Vector.17" }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19" }
%"class.WTF::VectorBufferBase.19" = type { %"class.blink::FontTagValuePair.20"*, i32, i32 }
%"class.blink::FontTagValuePair.20" = type { i32, float }
%"class.WTF::RefCounted.23" = type { %"class.base::RefCounted.24" }
%"class.base::RefCounted.24" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.25 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.26", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.29, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.29 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.30", [4 x i8] }>
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.32 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.33 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.34", %"class.WTF::Vector.36", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.34" = type { %"class.base::RefCounted.35" }
%"class.base::RefCounted.35" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.36" = type { %"class.WTF::VectorBuffer.37" }
%"class.WTF::VectorBuffer.37" = type { %"class.WTF::VectorBufferBase.38", [8 x i8] }
%"class.WTF::VectorBufferBase.38" = type { %class.scoped_refptr.39*, i32, i32 }
%class.scoped_refptr.39 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.40", [4 x i8] }>
%"class.WTF::RefCounted.40" = type { %"class.base::RefCounted.41" }
%"class.base::RefCounted.41" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.60, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.40" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.44 }
%union.anon.44 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.55, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.45" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.45" }>
%"struct.std::__1::atomic.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl.48" }
%"struct.std::__1::__cxx_atomic_impl.48" = type { %"struct.std::__1::__cxx_atomic_base_impl.49" }
%"struct.std::__1::__cxx_atomic_base_impl.49" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.50" }
%"struct.std::__1::atomic.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl.53" }
%"struct.std::__1::__cxx_atomic_impl.53" = type { %"struct.std::__1::__cxx_atomic_base_impl.54" }
%"struct.std::__1::__cxx_atomic_base_impl.54" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.55 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.58, %class.scoped_refptr.58 }
%class.scoped_refptr.58 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.60 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.61", [4 x i8] }>
%"class.WTF::RefCounted.61" = type { %"class.base::RefCounted.62" }
%"class.base::RefCounted.62" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.63", i32, [4 x i8], %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.201", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.242", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.181", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl.102" }
%"struct.std::__1::__cxx_atomic_impl.102" = type { %"struct.std::__1::__cxx_atomic_base_impl.103" }
%"struct.std::__1::__cxx_atomic_base_impl.103" = type { i64 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.159", %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.175", [4 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161", %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { i64 }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { float }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.184", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.193" }
%"class.WTF::Vector.193" = type { %"class.WTF::VectorBuffer.194" }
%"class.WTF::VectorBuffer.194" = type { %"class.WTF::VectorBufferBase.195" }
%"class.WTF::VectorBufferBase.195" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.209" }
%"class.WTF::VectorBuffer.209" = type { %"class.WTF::VectorBufferBase.210" }
%"class.WTF::VectorBufferBase.210" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.223" }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.110"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.623" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.241 }
%class.scoped_refptr.241 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.242" = type { %"struct.std::__1::__atomic_base.243" }
%"struct.std::__1::__atomic_base.243" = type { %"struct.std::__1::__cxx_atomic_impl.244" }
%"struct.std::__1::__cxx_atomic_impl.244" = type { %"struct.std::__1::__cxx_atomic_base_impl.245" }
%"struct.std::__1::__cxx_atomic_base_impl.245" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.246 }
%class.scoped_refptr.246 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.45" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.50" }
%"class.blink::Length" = type <{ %union.anon.247, i8, i8, i8, i8 }>
%union.anon.247 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.blink::DataRef.252", %"class.blink::DataRef.284", %"class.WTF::Vector.288", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.293, %class.scoped_refptr.302, %"class.blink::Persistent.310", %"class.blink::Persistent.312", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.252" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.254", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.256, %class.scoped_refptr.263, %"class.blink::Persistent.274", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.254" = type { %"class.base::RefCounted.255" }
%"class.base::RefCounted.255" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.256 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.257", %"class.WTF::Vector.258" }
%"class.base::RefCountedThreadSafe.257" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.258" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260" }
%"class.WTF::VectorBufferBase.260" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.263 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.264", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.264" = type { %"class.base::RefCounted.265" }
%"class.base::RefCounted.265" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.640 }
%class.scoped_refptr.640 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.641", %"class.WTF::Vector.507", %"class.WTF::Vector.643", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.641" = type { %"class.base::RefCounted.642" }
%"class.base::RefCounted.642" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.507" = type { %"class.WTF::VectorBuffer.508" }
%"class.WTF::VectorBuffer.508" = type { %"class.WTF::VectorBufferBase.509" }
%"class.WTF::VectorBufferBase.509" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.643" = type { %"class.WTF::VectorBuffer.644" }
%"class.WTF::VectorBuffer.644" = type { %"class.WTF::VectorBufferBase.645" }
%"class.WTF::VectorBufferBase.645" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.646 }
%union.anon.646 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.268" }
%"class.blink::PersistentBase.268" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.269" }
%"class.WTF::HashMap.269" = type { %"class.WTF::HashTable.270" }
%"class.WTF::HashTable.270" = type <{ %"struct.WTF::KeyValuePair.272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.272" = type opaque
%"class.blink::PersistentNodePtr.273" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.274" = type { %"class.blink::PersistentBase.275" }
%"class.blink::PersistentBase.275" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.278" }
%"class.WTF::Vector.278" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280" }
%"class.WTF::VectorBufferBase.280" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.284" = type { %class.scoped_refptr.285 }
%class.scoped_refptr.285 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.286", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.286" = type { %"class.base::RefCounted.287" }
%"class.base::RefCounted.287" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.288" = type { %"class.WTF::VectorBuffer.289" }
%"class.WTF::VectorBuffer.289" = type { %"class.WTF::VectorBufferBase.290" }
%"class.WTF::VectorBufferBase.290" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.293 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.294", %"class.WTF::Vector.296" }
%"class.WTF::RefCounted.294" = type { %"class.base::RefCounted.295" }
%"class.base::RefCounted.295" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.296" = type { %"class.WTF::VectorBuffer.297" }
%"class.WTF::VectorBuffer.297" = type { %"class.WTF::VectorBufferBase.298" }
%"class.WTF::VectorBufferBase.298" = type { %"struct.std::__1::pair.299"*, i32, i32 }
%"struct.std::__1::pair.299" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.302 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.303", [4 x i8], %"class.WTF::Vector.305" }
%"class.WTF::RefCounted.303" = type { %"class.base::RefCounted.304" }
%"class.base::RefCounted.304" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.305" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.307", [28 x i8] }>
%"class.WTF::VectorBufferBase.307" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.310" = type { %"class.blink::PersistentBase.311" }
%"class.blink::PersistentBase.311" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::Persistent.312" = type { %"class.blink::PersistentBase.313" }
%"class.blink::PersistentBase.313" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.316", %"class.blink::Member.318" }
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type opaque
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.320" = type { %class.scoped_refptr.321 }
%class.scoped_refptr.321 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.322", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.322" = type { %"class.base::RefCounted.323" }
%"class.base::RefCounted.323" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.324" = type { %class.scoped_refptr.325 }
%class.scoped_refptr.325 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.326", [4 x i8], %"class.blink::DataRef.328", %"class.blink::DataRef.394", %"class.blink::TransformOperations", %class.scoped_refptr.302, %"class.blink::Persistent.518", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.326" = type { %"class.base::RefCounted.327" }
%"class.base::RefCounted.327" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.328" = type { %class.scoped_refptr.329 }
%class.scoped_refptr.329 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.330", [4 x i8], %"class.blink::DataRef.332", %"class.blink::Persistent.370", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.330" = type { %"class.base::RefCounted.331" }
%"class.base::RefCounted.331" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.332" = type { %class.scoped_refptr.333 }
%class.scoped_refptr.333 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.334", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.352, %class.scoped_refptr.355, %class.scoped_refptr.358, %class.scoped_refptr.361, %class.scoped_refptr.362, %class.scoped_refptr.363, %"class.blink::Persistent.370", %"class.blink::Persistent.385", %"class.absl::optional.389", %"class.absl::optional.389", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.334" = type { %"class.base::RefCounted.335" }
%"class.base::RefCounted.335" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.336", %"class.std::__1::unique_ptr.341" }
%"class.WTF::Vector.336" = type { %"class.WTF::VectorBuffer.337" }
%"class.WTF::VectorBuffer.337" = type { %"class.WTF::VectorBufferBase.338" }
%"class.WTF::VectorBufferBase.338" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.344", %"class.WTF::Vector.336", i32, i32 }
%"class.WTF::Vector.344" = type { %"class.WTF::VectorBuffer.345" }
%"class.WTF::VectorBuffer.345" = type { %"class.WTF::VectorBufferBase.346" }
%"class.WTF::VectorBufferBase.346" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.352 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.353", [4 x i8] }>
%"class.WTF::RefCounted.353" = type { %"class.base::RefCounted.354" }
%"class.base::RefCounted.354" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.355 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.356", [4 x i8] }>
%"class.WTF::RefCounted.356" = type { %"class.base::RefCounted.357" }
%"class.base::RefCounted.357" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.358 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.359" }>
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.361 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.362 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.363 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.364", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.364" = type { %"class.base::RefCounted.365" }
%"class.base::RefCounted.365" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.366" }
%"class.blink::DataRef.366" = type { %class.scoped_refptr.367 }
%class.scoped_refptr.367 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.310", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.368" }
%"class.WTF::RefCounted.368" = type { %"class.base::RefCounted.369" }
%"class.base::RefCounted.369" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.385" = type { %"class.blink::PersistentBase.386" }
%"class.blink::PersistentBase.386" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.355, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.389" = type { %"class.absl::optional_internal::optional_data.390" }
%"class.absl::optional_internal::optional_data.390" = type { %"class.absl::optional_internal::optional_data_base.391" }
%"class.absl::optional_internal::optional_data_base.391" = type { %"class.absl::optional_internal::optional_data_dtor_base.392" }
%"class.absl::optional_internal::optional_data_dtor_base.392" = type { i8, [3 x i8], %union.anon.393 }
%union.anon.393 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.370" = type { %"class.blink::PersistentBase.371" }
%"class.blink::PersistentBase.371" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.374" }
%"class.blink::HeapVector.374" = type { %"class.WTF::Vector.377" }
%"class.WTF::Vector.377" = type { %"class.WTF::VectorBuffer.378" }
%"class.WTF::VectorBuffer.378" = type { %"class.WTF::VectorBufferBase.379" }
%"class.WTF::VectorBufferBase.379" = type { %"class.blink::Member.380"*, i32, i32 }
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.394" = type { %class.scoped_refptr.395 }
%class.scoped_refptr.395 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.396", %"class.blink::DataRef.398", %"class.blink::DataRef.402", %"class.blink::DataRef.411", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.441", %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.490", %"class.std::__1::unique_ptr.501", %"class.WTF::Vector.507", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.396" = type { %"class.base::RefCounted.397" }
%"class.base::RefCounted.397" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.398" = type { %class.scoped_refptr.399 }
%class.scoped_refptr.399 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.400", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.400" = type { %"class.base::RefCounted.401" }
%"class.base::RefCounted.401" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.402" = type { %class.scoped_refptr.403 }
%class.scoped_refptr.403 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.404", [4 x i8], %"class.WTF::Vector.406", i8, [7 x i8] }>
%"class.WTF::RefCounted.404" = type { %"class.base::RefCounted.405" }
%"class.base::RefCounted.405" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.406" = type { %"class.WTF::VectorBuffer.407" }
%"class.WTF::VectorBuffer.407" = type { %"class.WTF::VectorBufferBase.408" }
%"class.WTF::VectorBufferBase.408" = type { i32*, i32, i32 }
%"class.blink::DataRef.411" = type { %class.scoped_refptr.412 }
%class.scoped_refptr.412 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.413", [4 x i8], %"class.WTF::HashMap.415", %"class.WTF::HashMap.415", %"class.WTF::HashMap.415", %"class.WTF::HashMap.415", %"class.WTF::HashMap.415", %"class.WTF::HashMap.415", %"class.WTF::HashMap.420", %"class.WTF::HashMap.420", %"class.WTF::HashMap.420", %"class.WTF::HashMap.420", %"class.WTF::HashMap.425", %"class.WTF::Vector.336", %"class.WTF::Vector.336", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.413" = type { %"class.base::RefCounted.414" }
%"class.base::RefCounted.414" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ %"struct.WTF::KeyValuePair.419"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.419" = type { %"class.WTF::String", %"class.WTF::Vector.630" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { i64*, i32, i32 }
%"class.WTF::HashMap.420" = type { %"class.WTF::HashTable.421" }
%"class.WTF::HashTable.421" = type <{ %"struct.WTF::KeyValuePair.424"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.424" = type { i64, %"class.WTF::Vector.507" }
%"class.WTF::HashMap.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"struct.WTF::KeyValuePair.429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.429" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.433" }
%"class.WTF::HashMap.433" = type { %"class.WTF::HashTable.434" }
%"class.WTF::HashTable.434" = type <{ %"struct.WTF::KeyValuePair.437"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.437" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.635", %"class.absl::optional.635", %"class.absl::optional.635" }
%"class.absl::optional.635" = type { %"class.absl::optional_internal::optional_data.636" }
%"class.absl::optional_internal::optional_data.636" = type { %"class.absl::optional_internal::optional_data_base.637" }
%"class.absl::optional_internal::optional_data_base.637" = type { %"class.absl::optional_internal::optional_data_dtor_base.638" }
%"class.absl::optional_internal::optional_data_dtor_base.638" = type { i8, %union.anon.639 }
%union.anon.639 = type { i32 }
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.288", %"class.WTF::Vector.456", %"class.WTF::Vector.444", %"class.WTF::Vector.461", %"class.WTF::Vector.466", %"class.WTF::Vector.471" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.444", %"class.WTF::Vector.444", %"class.WTF::Vector.449" }
%"class.WTF::Vector.449" = type { %"class.WTF::VectorBuffer.450" }
%"class.WTF::VectorBuffer.450" = type { %"class.WTF::VectorBufferBase.451" }
%"class.WTF::VectorBufferBase.451" = type { %class.scoped_refptr.452*, i32, i32 }
%class.scoped_refptr.452 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.453" }
%"class.base::RefCountedThreadSafe.453" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.456" = type { %"class.WTF::VectorBuffer.457" }
%"class.WTF::VectorBuffer.457" = type { %"class.WTF::VectorBufferBase.458" }
%"class.WTF::VectorBufferBase.458" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.444" = type { %"class.WTF::VectorBuffer.445" }
%"class.WTF::VectorBuffer.445" = type { %"class.WTF::VectorBufferBase.446" }
%"class.WTF::VectorBufferBase.446" = type { double*, i32, i32 }
%"class.WTF::Vector.461" = type { %"class.WTF::VectorBuffer.462" }
%"class.WTF::VectorBuffer.462" = type { %"class.WTF::VectorBufferBase.463" }
%"class.WTF::VectorBufferBase.463" = type { i32*, i32, i32 }
%"class.WTF::Vector.466" = type { %"class.WTF::VectorBuffer.467" }
%"class.WTF::VectorBuffer.467" = type { %"class.WTF::VectorBufferBase.468" }
%"class.WTF::VectorBufferBase.468" = type { i32*, i32, i32 }
%"class.WTF::Vector.471" = type { %"class.WTF::VectorBuffer.472" }
%"class.WTF::VectorBuffer.472" = type { %"class.WTF::VectorBufferBase.473" }
%"class.WTF::VectorBufferBase.473" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.482" }
%"class.WTF::Vector.482" = type { %"class.WTF::VectorBuffer.483" }
%"class.WTF::VectorBuffer.483" = type { %"class.WTF::VectorBufferBase.484" }
%"class.WTF::VectorBufferBase.484" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.493" }
%"class.WTF::Vector.493" = type { %"class.WTF::VectorBuffer.494" }
%"class.WTF::VectorBuffer.494" = type { %"class.WTF::VectorBufferBase.495" }
%"class.WTF::VectorBufferBase.495" = type { %"class.blink::Persistent.310"*, i32, i32 }
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.310", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.512" }
%"class.WTF::Vector.512" = type { %"class.WTF::VectorBuffer.513" }
%"class.WTF::VectorBuffer.513" = type { %"class.WTF::VectorBufferBase.514" }
%"class.WTF::VectorBufferBase.514" = type { %class.scoped_refptr.515*, i32, i32 }
%class.scoped_refptr.515 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.359", [4 x i8] }>
%"class.blink::Persistent.518" = type { %"class.blink::PersistentBase.519" }
%"class.blink::PersistentBase.519" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.522" }
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.524" = type { %class.scoped_refptr.525 }
%class.scoped_refptr.525 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.526", [4 x i8], %"class.blink::DataRef.528", %"class.blink::DataRef.532", %"class.blink::DataRef.549", %"class.blink::DataRef.569", %"class.blink::DataRef.581", %"class.blink::DataRef.585", %class.scoped_refptr.553, i32, [4 x i8] }>
%"class.WTF::RefCounted.526" = type { %"class.base::RefCounted.527" }
%"class.base::RefCounted.527" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.528" = type { %class.scoped_refptr.529 }
%class.scoped_refptr.529 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.530", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.530" = type { %"class.base::RefCounted.531" }
%"class.base::RefCounted.531" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.532" = type { %class.scoped_refptr.533 }
%class.scoped_refptr.533 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.534", %class.scoped_refptr.536, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.534" = type { %"class.base::RefCounted.535" }
%"class.base::RefCounted.535" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.536 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.537", %"class.std::__1::unique_ptr.543", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.356" }>
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.549" = type { %class.scoped_refptr.550 }
%class.scoped_refptr.550 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.551", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.551" = type { %"class.base::RefCounted.552" }
%"class.base::RefCounted.552" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.553, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.569" = type { %class.scoped_refptr.570 }
%class.scoped_refptr.570 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.571", [4 x i8], %class.scoped_refptr.573, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.571" = type { %"class.base::RefCounted.572" }
%"class.base::RefCounted.572" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.573 = type { %"class.base::RefCountedData.574"* }
%"class.base::RefCountedData.574" = type { %"class.base::RefCountedThreadSafe.575", %"class.WTF::Vector.576" }
%"class.base::RefCountedThreadSafe.575" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.576" = type { %"class.WTF::VectorBuffer.577" }
%"class.WTF::VectorBuffer.577" = type { %"class.WTF::VectorBufferBase.578" }
%"class.WTF::VectorBufferBase.578" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.581" = type { %class.scoped_refptr.582 }
%class.scoped_refptr.582 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.583", %class.scoped_refptr.553, %class.scoped_refptr.553, %class.scoped_refptr.553 }
%"class.WTF::RefCounted.583" = type { %"class.base::RefCounted.584" }
%"class.base::RefCounted.584" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.585" = type { %class.scoped_refptr.586 }
%class.scoped_refptr.586 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.587", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.587" = type { %"class.base::RefCounted.588" }
%"class.base::RefCounted.588" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.553 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.554", %"class.blink::Persistent.556", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.554" = type { %"class.base::RefCounted.555" }
%"class.base::RefCounted.555" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.556" = type { %"class.blink::PersistentBase.557" }
%"class.blink::PersistentBase.557" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.560", %"class.blink::HeapHashMap.562" }
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapHashMap.562" = type { %"class.WTF::HashMap.565" }
%"class.WTF::HashMap.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"struct.WTF::KeyValuePair.568"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.568" = type opaque
%"class.blink::DataRef.589" = type { %class.scoped_refptr.590 }
%class.scoped_refptr.590 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.591", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.591" = type { %"class.base::RefCounted.592" }
%"class.base::RefCounted.592" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.593" = type { %class.scoped_refptr.594 }
%class.scoped_refptr.594 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.595", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.595" = type { %"class.base::RefCounted.596" }
%"class.base::RefCounted.596" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.597" = type { %class.scoped_refptr.598 }
%class.scoped_refptr.598 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.599", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.599" = type { %"class.base::RefCounted.600" }
%"class.base::RefCounted.600" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.601" = type { %class.scoped_refptr.602 }
%class.scoped_refptr.602 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.603", %class.scoped_refptr.605 }
%"class.WTF::RefCounted.603" = type { %"class.base::RefCounted.604" }
%"class.base::RefCounted.604" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.605 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.621", %"class.blink::StyleVariables", %class.scoped_refptr.605 }
%"class.WTF::RefCounted.621" = type { %"class.base::RefCounted.622" }
%"class.base::RefCounted.622" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.606" = type { %"class.base::RefCounted.607" }
%"class.base::RefCounted.607" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.611" }
%"class.std::__1::unique_ptr.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.WTF::Vector.614"* }
%"class.WTF::Vector.614" = type opaque
%"class.blink::Platform" = type { i32 (...)** }
%"class.blink::WebThemeEngine" = type { i32 (...)** }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.248", %"class.blink::DataRef.320", %"class.blink::DataRef.324", %"class.blink::DataRef.524", %"class.blink::DataRef.589", %"class.blink::DataRef.593", %"class.blink::DataRef.597", %"class.blink::DataRef.601", [20 x i8], [4 x i8] }>
%"class.blink::LocalFrame" = type opaque
%"class.blink::File" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringTypeAdapter.650" = type { %"class.WTF::StringTypeAdapter.651" }
%"class.WTF::StringTypeAdapter.651" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>

$_ZN3WTFplINS_6StringES1_S1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_ = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_EcvS1_Ev = comdat any

$_ZN5blink17ComputedStyleBase8SetWidthEONS_6LengthE = comdat any

$_ZN5blink17ComputedStyleBase11SetMinWidthEONS_6LengthE = comdat any

$_ZN5blink18LayoutThemeDefault7PainterEv = comdat any

$_ZNK5blink17LayoutThemeMobile25PlatformTapHighlightColorEv = comdat any

$_ZNK5blink11LayoutTheme41PlatformDefaultCompositionBackgroundColorEv = comdat any

$_ZNK5blink11LayoutTheme19PopsMenuByArrowKeysEv = comdat any

$_ZNK5blink11LayoutTheme19PopsMenuByReturnKeyEv = comdat any

$_ZNK5blink11LayoutTheme33SupportsSelectionForegroundColorsEv = comdat any

$_ZNK5blink11LayoutTheme23IsAccentColorCustomizedENS_5mojom11ColorSchemeE = comdat any

$_ZNK5blink11LayoutTheme14GetAccentColorENS_5mojom11ColorSchemeE = comdat any

$_ZNK5blink17LayoutThemeMobile38PlatformActiveSelectionBackgroundColorENS_5mojom11ColorSchemeE = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringES1_EES1_EC2ES2_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

@_ZTVN5blink17LayoutThemeMobileE = hidden unnamed_addr constant { [55 x i8*] } { [55 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutThemeMobile"*)* @_ZN5blink17LayoutThemeMobileD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutThemeMobile"*)* @_ZN5blink17LayoutThemeMobileD0Ev to i8*), i8* bitcast (%"class.blink::ThemePainter"* (%"class.blink::LayoutThemeDefault"*)* @_ZN5blink18LayoutThemeDefault7PainterEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutThemeMobile"*)* @_ZN5blink17LayoutThemeMobile22ExtraDefaultStyleSheetEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutThemeDefault"*)* @_ZN5blink18LayoutThemeDefault21ExtraQuirksStyleSheetEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutThemeMobile"*)* @_ZN5blink17LayoutThemeMobile25ExtraFullscreenStyleSheetEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTheme"*, i32, %"class.blink::ComputedStyle"*)* @_ZNK5blink11LayoutTheme15IsControlStyledENS_11ControlPartERKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTheme"*, %"class.WTF::AtomicString"*)* @_ZNK5blink11LayoutTheme22SupportsCalendarPickerERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, i32, i32, i32, i32)* @_ZN5blink18LayoutThemeDefault18SetSelectionColorsENS_5ColorES1_S1_S1_ to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme36PlatformSpellingMarkerUnderlineColorEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme35PlatformGrammarMarkerUnderlineColorEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*, i32)* @_ZNK5blink11LayoutTheme14FocusRingColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*)* @_ZNK5blink18LayoutThemeDefault22PlatformFocusRingColorEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeMobile"*)* @_ZNK5blink17LayoutThemeMobile25PlatformTapHighlightColorEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme41PlatformDefaultCompositionBackgroundColorEv to i8*), i8* bitcast (void (%"class.blink::LayoutTheme"*)* @_ZN5blink11LayoutTheme20ColorSchemeDidChangeEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme18CaretBlinkIntervalEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*, i32, i32)* @_ZNK5blink11LayoutTheme11SystemColorENS_10CSSValueIDENS_5mojom11ColorSchemeE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault21AdjustSliderThumbSizeERNS_13ComputedStyleE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault25PopupInternalPaddingStartERKNS_13ComputedStyleE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault23PopupInternalPaddingEndEPNS_10LocalFrameERKNS_13ComputedStyleE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault23PopupInternalPaddingTopERKNS_13ComputedStyleE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault26PopupInternalPaddingBottomERKNS_13ComputedStyleE to i8*), i8* bitcast (i64 (%"class.blink::LayoutThemeDefault"*)* @_ZNK5blink18LayoutThemeDefault14SliderTickSizeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*)* @_ZNK5blink18LayoutThemeDefault31SliderTickOffsetFromTrackCenterEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme26DelegatesMenuListRenderingEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme19PopsMenuByArrowKeysEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme19PopsMenuByReturnKeyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutTheme"*, %"class.blink::File"*)* @_ZNK5blink11LayoutTheme18DisplayNameForFileERKNS_4FileE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTheme"*)* @_ZNK5blink11LayoutTheme33SupportsSelectionForegroundColorsEv to i8*), i8* bitcast (void (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)* @_ZN5blink11LayoutTheme22AdjustControlPartStyleERNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutTheme"*, i32)* @_ZNK5blink11LayoutTheme23IsAccentColorCustomizedENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*, i32)* @_ZNK5blink11LayoutTheme14GetAccentColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeMobile"*, i32)* @_ZNK5blink17LayoutThemeMobile38PlatformActiveSelectionBackgroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, i32)* @_ZNK5blink18LayoutThemeDefault40PlatformInactiveSelectionBackgroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, i32)* @_ZNK5blink18LayoutThemeDefault38PlatformActiveSelectionForegroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutThemeDefault"*, i32)* @_ZNK5blink18LayoutThemeDefault40PlatformInactiveSelectionForegroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*, i32)* @_ZNK5blink11LayoutTheme45PlatformActiveListBoxSelectionBackgroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*, i32)* @_ZNK5blink11LayoutTheme47PlatformInactiveListBoxSelectionBackgroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*, i32)* @_ZNK5blink11LayoutTheme45PlatformActiveListBoxSelectionForegroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutTheme"*, i32)* @_ZNK5blink11LayoutTheme47PlatformInactiveListBoxSelectionForegroundColorENS_5mojom11ColorSchemeE to i8*), i8* bitcast (void (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink11LayoutTheme19AdjustCheckboxStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault15SetCheckboxSizeERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink11LayoutTheme16AdjustRadioStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault12SetRadioSizeERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault17AdjustButtonStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeMobile"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink17LayoutThemeMobile26AdjustInnerSpinButtonStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault19AdjustMenuListStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault25AdjustMenuListButtonStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutTheme"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink11LayoutTheme26AdjustSliderContainerStyleERKNS_7ElementERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink11LayoutTheme22AdjustSliderThumbStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault22AdjustSearchFieldStyleERNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink18LayoutThemeDefault34AdjustSearchFieldCancelButtonStyleERNS_13ComputedStyleE to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.1 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

@_ZN5blink17LayoutThemeMobileD1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutThemeMobile"*), void (%"class.blink::LayoutThemeMobile"*)* @_ZN5blink17LayoutThemeMobileD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutTheme"* @_ZN5blink17LayoutThemeMobile6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call noalias i8* @malloc(i64 64) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 64, i1 false)
  %2 = bitcast i8* %1 to %"class.blink::LayoutThemeDefault"*
  tail call void @_ZN5blink18LayoutThemeDefaultC2Ev(%"class.blink::LayoutThemeDefault"* %2) #8
  %3 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [55 x i8*] }, { [55 x i8*] }* @_ZTVN5blink17LayoutThemeMobileE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast i8* %1 to %"class.blink::LayoutTheme"*
  ret %"class.blink::LayoutTheme"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN5blink18LayoutThemeDefaultD2Ev(%"class.blink::LayoutThemeDefault"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutThemeMobileD2Ev(%"class.blink::LayoutThemeMobile"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutThemeMobile", %"class.blink::LayoutThemeMobile"* %0, i64 0, i32 0
  tail call void @_ZN5blink18LayoutThemeDefaultD2Ev(%"class.blink::LayoutThemeDefault"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutThemeMobileD0Ev(%"class.blink::LayoutThemeMobile"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutThemeMobile", %"class.blink::LayoutThemeMobile"* %0, i64 0, i32 0
  tail call void @_ZN5blink18LayoutThemeDefaultD2Ev(%"class.blink::LayoutThemeDefault"* %2) #8
  %3 = bitcast %"class.blink::LayoutThemeMobile"* %0 to i8*
  tail call void @free(i8* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17LayoutThemeMobile22ExtraDefaultStyleSheetEv(%"class.blink::LayoutThemeMobile"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringAppend", align 8
  %3 = alloca %"class.WTF::StringAppend.3", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::StringAppend"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = bitcast %"class.WTF::StringAppend.3"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.blink::LayoutThemeMobile", %"class.blink::LayoutThemeMobile"* %0, i64 0, i32 0
  %9 = tail call %"class.WTF::StringImpl"* @_ZN5blink18LayoutThemeDefault22ExtraDefaultStyleSheetEv(%"class.blink::LayoutThemeDefault"* %8) #8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink31UncompressResourceAsASCIIStringEi(i32 24695) #8
  %12 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::StringImpl"* %11)
  %13 = getelementptr inbounds %"class.WTF::StringAppend.3", %"class.WTF::StringAppend.3"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %12, 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringAppend.3", %"class.WTF::StringAppend.3"* %3, i64 0, i32 1, i32 0, i32 0
  %16 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %12, 1
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %15, align 8
  %17 = call %"class.WTF::StringImpl"* @_ZN5blink31UncompressResourceAsASCIIStringEi(i32 24693) #8
  call void @_ZN3WTFplINS_6StringES1_S1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_(%"class.WTF::StringAppend"* nonnull sret %2, %"class.WTF::StringAppend.3"* nonnull dereferenceable(16) %3, %"class.WTF::StringImpl"* %17)
  %18 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %2)
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %2, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #8
  br label %35

35:                                               ; preds = %34, %31, %1
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #8
  br label %52

52:                                               ; preds = %51, %48, %35
  %53 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #8
  br label %69

69:                                               ; preds = %52, %65, %68
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #8
  br label %85

85:                                               ; preds = %84, %81, %69
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #8
  br label %101

101:                                              ; preds = %85, %97, %100
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #8
  br label %117

117:                                              ; preds = %101, %113, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  ret %"class.WTF::StringImpl"* %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringES1_S1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.3"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.3", %"class.WTF::StringAppend.3"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #8
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #8
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = getelementptr inbounds %"class.WTF::StringAppend.3", %"class.WTF::StringAppend.3"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #8
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !2

42:                                               ; preds = %33
  tail call void @llvm.trap() #8
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %45

45:                                               ; preds = %24, %28, %43
  %46 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %65

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #8
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #8
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %65

64:                                               ; preds = %45
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringES1_EES1_EC2ES2_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"* null)
  br label %77

65:                                               ; preds = %47, %62
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringES1_EES1_EC2ES2_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"* nonnull %2)
  %66 = load atomic i32, i32* %48 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %65
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %65
  %74 = phi i32 [ %72, %71 ], [ %70, %65 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %77

77:                                               ; preds = %64, %73, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend.3", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #8
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #8
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #8
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #8
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.3"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.3"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #8
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.3", %"class.WTF::StringAppend.3"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.3", %"class.WTF::StringAppend.3"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

declare %"class.WTF::StringImpl"* @_ZN5blink18LayoutThemeDefault22ExtraDefaultStyleSheetEv(%"class.blink::LayoutThemeDefault"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink31UncompressResourceAsASCIIStringEi(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i16*, align 8
  %4 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = select i1 %6, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %5
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = select i1 %11, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %10
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %67, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %67, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %67, label %31

31:                                               ; preds = %26
  %32 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  %33 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %34 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %33, i8** nonnull dereferenceable(8) %2) #8
  %35 = load i8*, i8** %2, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %35)
  %36 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %36, label %103, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %54

44:                                               ; preds = %37
  %45 = zext i32 %43 to i33
  %46 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #8
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %44
  call void @llvm.trap() #8
  unreachable

52:                                               ; preds = %44
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %42, align 4
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi i32 [ %53, %52 ], [ %43, %37 ]
  %56 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %57 = load atomic i32, i32* %38 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %62 = add i32 %55, -1
  store i32 %62, i32* %61, align 4
  br label %63

63:                                               ; preds = %60, %54
  %64 = phi i32 [ %62, %60 ], [ %55, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %103

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #8
  br label %103

67:                                               ; preds = %26, %1, %19
  %68 = bitcast i16** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %3, align 8
  %69 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %70 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %69, i16** nonnull dereferenceable(8) %3) #8
  %71 = load i16*, i16** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %71)
  %72 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %72, label %103, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #8
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %80
  call void @llvm.trap() #8
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #8
  br label %103

103:                                              ; preds = %102, %99, %67, %66, %63, %31
  %104 = phi i8* [ %32, %31 ], [ %32, %63 ], [ %32, %66 ], [ %68, %67 ], [ %68, %99 ], [ %68, %102 ]
  %105 = phi i64 [ 0, %31 ], [ %56, %63 ], [ %56, %66 ], [ 0, %67 ], [ %92, %99 ], [ %92, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #8
  %106 = inttoptr i64 %105 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %106
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17LayoutThemeMobile25ExtraFullscreenStyleSheetEv(%"class.blink::LayoutThemeMobile"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call %"class.WTF::StringImpl"* @_ZN5blink31UncompressResourceAsASCIIStringEi(i32 24694) #8
  ret %"class.WTF::StringImpl"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17LayoutThemeMobile26AdjustInnerSpinButtonStyleERNS_13ComputedStyleE(%"class.blink::LayoutThemeMobile"* nocapture readnone, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Length", align 4
  %4 = alloca %"class.blink::Length", align 4
  %5 = tail call zeroext i1 @_ZN5blink14WebTestSupport16IsRunningWebTestEv() #8
  br i1 %5, label %6, label %38

6:                                                ; preds = %2
  %7 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #8
  %8 = bitcast %"class.blink::Platform"* %7 to %"class.blink::WebThemeEngine"* (%"class.blink::Platform"*)***
  %9 = load %"class.blink::WebThemeEngine"* (%"class.blink::Platform"*)**, %"class.blink::WebThemeEngine"* (%"class.blink::Platform"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::WebThemeEngine"* (%"class.blink::Platform"*)*, %"class.blink::WebThemeEngine"* (%"class.blink::Platform"*)** %9, i64 3
  %11 = load %"class.blink::WebThemeEngine"* (%"class.blink::Platform"*)*, %"class.blink::WebThemeEngine"* (%"class.blink::Platform"*)** %10, align 8
  %12 = tail call %"class.blink::WebThemeEngine"* %11(%"class.blink::Platform"* %7) #8
  %13 = bitcast %"class.blink::WebThemeEngine"* %12 to i64 (%"class.blink::WebThemeEngine"*, i32)***
  %14 = load i64 (%"class.blink::WebThemeEngine"*, i32)**, i64 (%"class.blink::WebThemeEngine"*, i32)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.blink::WebThemeEngine"*, i32)*, i64 (%"class.blink::WebThemeEngine"*, i32)** %14, i64 2
  %16 = load i64 (%"class.blink::WebThemeEngine"*, i32)*, i64 (%"class.blink::WebThemeEngine"*, i32)** %15, align 8
  %17 = tail call i64 %16(%"class.blink::WebThemeEngine"* %12, i32 16) #8
  %18 = trunc i64 %17 to i32
  %19 = bitcast %"class.blink::ComputedStyle"* %1 to %"class.blink::ComputedStyleBase"*
  %20 = bitcast %"class.blink::Length"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  %21 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 0, i32 0
  store i32 %18, i32* %21, align 4, !alias.scope !3
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 1
  store i8 0, i8* %22, align 4, !alias.scope !3
  %23 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 2
  store i8 2, i8* %23, align 1, !alias.scope !3
  %24 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 3
  store i8 0, i8* %24, align 2, !alias.scope !3
  call void @_ZN5blink17ComputedStyleBase8SetWidthEONS_6LengthE(%"class.blink::ComputedStyleBase"* %19, %"class.blink::Length"* nonnull dereferenceable(8) %3)
  %25 = load i8, i8* %23, align 1
  %26 = icmp eq i8 %25, 8
  br i1 %26, label %27, label %28

27:                                               ; preds = %6
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %3) #8
  br label %28

28:                                               ; preds = %6, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  %29 = bitcast %"class.blink::Length"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 0, i32 0
  store i32 %18, i32* %30, align 4, !alias.scope !6
  %31 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 1
  store i8 0, i8* %31, align 4, !alias.scope !6
  %32 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  store i8 2, i8* %32, align 1, !alias.scope !6
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 3
  store i8 0, i8* %33, align 2, !alias.scope !6
  call void @_ZN5blink17ComputedStyleBase11SetMinWidthEONS_6LengthE(%"class.blink::ComputedStyleBase"* %19, %"class.blink::Length"* nonnull dereferenceable(8) %4)
  %34 = load i8, i8* %32, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %37

36:                                               ; preds = %28
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #8
  br label %37

37:                                               ; preds = %28, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %38

38:                                               ; preds = %37, %2
  ret void
}

declare zeroext i1 @_ZN5blink14WebTestSupport16IsRunningWebTestEv() local_unnamed_addr #3

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase8SetWidthEONS_6LengthE(%"class.blink::ComputedStyleBase"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.blink::DataRef.589", %"class.blink::DataRef.589"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 8, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %8, %10
  br i1 %11, label %12, label %50

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 8, i32 1
  %14 = load i8, i8* %13, align 4, !range !9
  %15 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 1
  %16 = load i8, i8* %15, align 4, !range !9
  %17 = icmp eq i8 %14, %16
  br i1 %17, label %18, label %50

18:                                               ; preds = %12
  %19 = icmp eq i8 %8, 12
  br i1 %19, label %84, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 8, i32 3
  %22 = load i8, i8* %21, align 2, !range !9
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::Length"* %6 to float*
  %26 = load float, float* %25, align 4
  br label %31

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = sitofp i32 %29 to float
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi float [ %26, %24 ], [ %30, %27 ]
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %34 = load i8, i8* %33, align 2, !range !9
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::Length"* %1 to float*
  %38 = load float, float* %37, align 4
  br label %43

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = sitofp i32 %41 to float
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi float [ %38, %36 ], [ %42, %39 ]
  %45 = fcmp oeq float %32, %44
  br i1 %45, label %84, label %46

46:                                               ; preds = %43
  %47 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %6, %"class.blink::Length"* dereferenceable(8) %1) #8
  br i1 %47, label %84, label %48

48:                                               ; preds = %46
  %49 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  br label %50

50:                                               ; preds = %48, %2, %12
  %51 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %49, %48 ], [ %5, %2 ], [ %5, %12 ]
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %69, label %55

55:                                               ; preds = %50
  %56 = tail call noalias i8* @malloc(i64 96) #8
  %57 = bitcast i8* %56 to %"class.blink::ComputedStyleBase::StyleBoxData"*
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleBoxData"* %57, %"class.blink::ComputedStyleBase::StyleBoxData"* dereferenceable(96) %51) #8
  %58 = ptrtoint i8* %56 to i64
  %59 = bitcast %"class.blink::DataRef.589"* %3 to i64*
  %60 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  store i64 %58, i64* %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %60) #8
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %60 to i8*
  tail call void @free(i8* %68) #8
  br label %69

69:                                               ; preds = %50, %55, %62, %67
  %70 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %70, i64 0, i32 8
  %72 = load i8, i8* %9, align 1
  %73 = icmp eq i8 %72, 8
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %1) #8
  br label %75

75:                                               ; preds = %74, %69
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %70, i64 0, i32 8, i32 2
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 8
  br i1 %78, label %79, label %80

79:                                               ; preds = %75
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #8
  br label %80

80:                                               ; preds = %75, %79
  %81 = bitcast %"class.blink::Length"* %1 to i64*
  %82 = bitcast %"class.blink::Length"* %71 to i64*
  %83 = load i64, i64* %81, align 4
  store i64 %83, i64* %82, align 4
  br label %84

84:                                               ; preds = %18, %43, %80, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase11SetMinWidthEONS_6LengthE(%"class.blink::ComputedStyleBase"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.blink::DataRef.589", %"class.blink::DataRef.589"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 7
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 7, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %8, %10
  br i1 %11, label %12, label %50

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 7, i32 1
  %14 = load i8, i8* %13, align 4, !range !9
  %15 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 1
  %16 = load i8, i8* %15, align 4, !range !9
  %17 = icmp eq i8 %14, %16
  br i1 %17, label %18, label %50

18:                                               ; preds = %12
  %19 = icmp eq i8 %8, 12
  br i1 %19, label %84, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 7, i32 3
  %22 = load i8, i8* %21, align 2, !range !9
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::Length"* %6 to float*
  %26 = load float, float* %25, align 4
  br label %31

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = sitofp i32 %29 to float
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi float [ %26, %24 ], [ %30, %27 ]
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %34 = load i8, i8* %33, align 2, !range !9
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::Length"* %1 to float*
  %38 = load float, float* %37, align 4
  br label %43

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = sitofp i32 %41 to float
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi float [ %38, %36 ], [ %42, %39 ]
  %45 = fcmp oeq float %32, %44
  br i1 %45, label %84, label %46

46:                                               ; preds = %43
  %47 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %6, %"class.blink::Length"* dereferenceable(8) %1) #8
  br i1 %47, label %84, label %48

48:                                               ; preds = %46
  %49 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  br label %50

50:                                               ; preds = %48, %2, %12
  %51 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %49, %48 ], [ %5, %2 ], [ %5, %12 ]
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %69, label %55

55:                                               ; preds = %50
  %56 = tail call noalias i8* @malloc(i64 96) #8
  %57 = bitcast i8* %56 to %"class.blink::ComputedStyleBase::StyleBoxData"*
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleBoxData"* %57, %"class.blink::ComputedStyleBase::StyleBoxData"* dereferenceable(96) %51) #8
  %58 = ptrtoint i8* %56 to i64
  %59 = bitcast %"class.blink::DataRef.589"* %3 to i64*
  %60 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  store i64 %58, i64* %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %60) #8
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %60 to i8*
  tail call void @free(i8* %68) #8
  br label %69

69:                                               ; preds = %50, %55, %62, %67
  %70 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %70, i64 0, i32 7
  %72 = load i8, i8* %9, align 1
  %73 = icmp eq i8 %72, 8
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %1) #8
  br label %75

75:                                               ; preds = %74, %69
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %70, i64 0, i32 7, i32 2
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 8
  br i1 %78, label %79, label %80

79:                                               ; preds = %75
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #8
  br label %80

80:                                               ; preds = %75, %79
  %81 = bitcast %"class.blink::Length"* %1 to i64*
  %82 = bitcast %"class.blink::Length"* %71 to i64*
  %83 = load i64, i64* %81, align 4
  store i64 %83, i64* %82, align 4
  br label %84

84:                                               ; preds = %18, %43, %80, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::ThemePainter"* @_ZN5blink18LayoutThemeDefault7PainterEv(%"class.blink::LayoutThemeDefault"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutThemeDefault", %"class.blink::LayoutThemeDefault"* %0, i64 0, i32 1, i32 0
  ret %"class.blink::ThemePainter"* %2
}

declare %"class.WTF::StringImpl"* @_ZN5blink18LayoutThemeDefault21ExtraQuirksStyleSheetEv(%"class.blink::LayoutThemeDefault"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink11LayoutTheme15IsControlStyledENS_11ControlPartERKNS_13ComputedStyleE(%"class.blink::LayoutTheme"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare zeroext i1 @_ZNK5blink11LayoutTheme22SupportsCalendarPickerERKN3WTF12AtomicStringE(%"class.blink::LayoutTheme"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN5blink18LayoutThemeDefault18SetSelectionColorsENS_5ColorES1_S1_S1_(%"class.blink::LayoutThemeDefault"*, i32, i32, i32, i32) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme36PlatformSpellingMarkerUnderlineColorEv(%"class.blink::LayoutTheme"*) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme35PlatformGrammarMarkerUnderlineColorEv(%"class.blink::LayoutTheme"*) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme14FocusRingColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault22PlatformFocusRingColorEv(%"class.blink::LayoutThemeDefault"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink17LayoutThemeMobile25PlatformTapHighlightColorEv(%"class.blink::LayoutThemeMobile"*) unnamed_addr #0 comdat align 2 {
  ret i32 1714664933
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutTheme41PlatformDefaultCompositionBackgroundColorEv(%"class.blink::LayoutTheme"*) unnamed_addr #0 comdat align 2 {
  ret i32 -8875
}

declare void @_ZN5blink11LayoutTheme20ColorSchemeDidChangeEv(%"class.blink::LayoutTheme"*) unnamed_addr #3

declare i64 @_ZNK5blink11LayoutTheme18CaretBlinkIntervalEv(%"class.blink::LayoutTheme"*) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme11SystemColorENS_10CSSValueIDENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32, i32) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault21AdjustSliderThumbSizeERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault25PopupInternalPaddingStartERKNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault23PopupInternalPaddingEndEPNS_10LocalFrameERKNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault23PopupInternalPaddingTopERKNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault26PopupInternalPaddingBottomERKNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare i64 @_ZNK5blink18LayoutThemeDefault14SliderTickSizeEv(%"class.blink::LayoutThemeDefault"*) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault31SliderTickOffsetFromTrackCenterEv(%"class.blink::LayoutThemeDefault"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink11LayoutTheme26DelegatesMenuListRenderingEv(%"class.blink::LayoutTheme"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutTheme19PopsMenuByArrowKeysEv(%"class.blink::LayoutTheme"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutTheme19PopsMenuByReturnKeyEv(%"class.blink::LayoutTheme"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.WTF::StringImpl"* @_ZNK5blink11LayoutTheme18DisplayNameForFileERKNS_4FileE(%"class.blink::LayoutTheme"*, %"class.blink::File"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutTheme33SupportsSelectionForegroundColorsEv(%"class.blink::LayoutTheme"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink11LayoutTheme22AdjustControlPartStyleERNS_13ComputedStyleE(%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutTheme23IsAccentColorCustomizedENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutTheme14GetAccentColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink17LayoutThemeMobile38PlatformActiveSelectionBackgroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutThemeMobile"*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 1714664933
}

declare i32 @_ZNK5blink18LayoutThemeDefault40PlatformInactiveSelectionBackgroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutThemeDefault"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault38PlatformActiveSelectionForegroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutThemeDefault"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink18LayoutThemeDefault40PlatformInactiveSelectionForegroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutThemeDefault"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme45PlatformActiveListBoxSelectionBackgroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme47PlatformInactiveListBoxSelectionBackgroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme45PlatformActiveListBoxSelectionForegroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme47PlatformInactiveListBoxSelectionForegroundColorENS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i32) unnamed_addr #3

declare void @_ZNK5blink11LayoutTheme19AdjustCheckboxStyleERNS_13ComputedStyleE(%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault15SetCheckboxSizeERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare void @_ZNK5blink11LayoutTheme16AdjustRadioStyleERNS_13ComputedStyleE(%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault12SetRadioSizeERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault17AdjustButtonStyleERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault19AdjustMenuListStyleERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault25AdjustMenuListButtonStyleERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare void @_ZNK5blink11LayoutTheme26AdjustSliderContainerStyleERKNS_7ElementERNS_13ComputedStyleE(%"class.blink::LayoutTheme"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare void @_ZNK5blink11LayoutTheme22AdjustSliderThumbStyleERNS_13ComputedStyleE(%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault22AdjustSearchFieldStyleERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

declare void @_ZNK5blink18LayoutThemeDefault34AdjustSearchFieldCancelButtonStyleERNS_13ComputedStyleE(%"class.blink::LayoutThemeDefault"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare void @_ZN5blink18LayoutThemeDefaultC2Ev(%"class.blink::LayoutThemeDefault"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink17ComputedStyleBase12StyleBoxDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"* dereferenceable(96)) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #8
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #8
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #8
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #8
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #8
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #8
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #8
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #8
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.3"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.3", %"class.WTF::StringAppend.3"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #8
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #8
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.3", %"class.WTF::StringAppend.3"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #8
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %33
  tail call void @llvm.trap() #8
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #8
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringES1_EES1_EC2ES2_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %5, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #8
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #8
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %4
  %25 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %25, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #8
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %32
  tail call void @llvm.trap() #8
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %24, %27, %42
  %45 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %45, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %46, label %76, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %64

54:                                               ; preds = %47
  %55 = zext i32 %53 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #8
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %54
  tail call void @llvm.trap() #8
  unreachable

62:                                               ; preds = %54
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %52, align 4
  br label %64

64:                                               ; preds = %47, %62
  %65 = phi i32 [ %63, %62 ], [ %53, %47 ]
  %66 = load atomic i32, i32* %48 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %71 = add i32 %65, -1
  store i32 %71, i32* %70, align 4
  br label %72

72:                                               ; preds = %69, %64
  %73 = phi i32 [ %71, %69 ], [ %65, %64 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #8
  br label %76

76:                                               ; preds = %44, %72, %75
  br i1 %26, label %90, label %77

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %90

90:                                               ; preds = %89, %86, %76
  br i1 %6, label %104, label %91

91:                                               ; preds = %90
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #8
  br label %104

104:                                              ; preds = %90, %100, %103
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.3"* %8) #8
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.3"* %8) #8
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* %26, i8* %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #8
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.650", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.650", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.650", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.650"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.650"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.650"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.650"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #8
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %35, %33
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.650"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.650"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #8
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %4, i64 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %4, i64 0, i32 0, i32 0, i32 2
  %49 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false) #8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %41
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %60

54:                                               ; preds = %41
  %55 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 1
  %59 = bitcast %"class.WTF::StringImpl"* %58 to i8*
  br label %60

60:                                               ; preds = %52, %54
  %61 = phi i8* [ null, %52 ], [ %59, %54 ]
  %62 = phi i64 [ %53, %52 ], [ %55, %54 ]
  %63 = phi i32 [ 0, %52 ], [ %57, %54 ]
  %64 = bitcast %"class.WTF::StringTypeAdapter.650"* %4 to i64*
  store i64 %62, i64* %64, align 8
  store i8* %61, i8** %47, align 8
  store i32 %63, i32* %48, align 8
  %65 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.651"* nonnull %65, i8* %1) #8
  %66 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %4, i64 0, i32 0
  %67 = load i32, i32* %29, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %1, i64 %68
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.651"* nonnull %66, i8* %69) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8
  %70 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %5, i64 0, i32 0
  %71 = call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.3"* %6) #8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %1, i64 %72
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.651"* nonnull %70, i8* %73) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EES1_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.650", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.650", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.650", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.650"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.650"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.650"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.650"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #8
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %35, %33
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.650"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.650"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #8
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %4, i64 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %4, i64 0, i32 0, i32 0, i32 2
  %49 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false) #8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %41
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %60

54:                                               ; preds = %41
  %55 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 1
  %59 = bitcast %"class.WTF::StringImpl"* %58 to i8*
  br label %60

60:                                               ; preds = %52, %54
  %61 = phi i8* [ null, %52 ], [ %59, %54 ]
  %62 = phi i64 [ %53, %52 ], [ %55, %54 ]
  %63 = phi i32 [ 0, %52 ], [ %57, %54 ]
  %64 = bitcast %"class.WTF::StringTypeAdapter.650"* %4 to i64*
  store i64 %62, i64* %64, align 8
  store i8* %61, i8** %47, align 8
  store i32 %63, i32* %48, align 8
  %65 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.651"* nonnull %65, i16* %1) #8
  %66 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %4, i64 0, i32 0
  %67 = load i32, i32* %29, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i16, i16* %1, i64 %68
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.651"* nonnull %66, i16* %69) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8
  %70 = getelementptr inbounds %"class.WTF::StringTypeAdapter.650", %"class.WTF::StringTypeAdapter.650"* %5, i64 0, i32 0
  %71 = call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.3"* %6) #8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i16, i16* %1, i64 %72
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.651"* nonnull %70, i16* %73) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.3"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3", %"class.WTF::StringAppend.3"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.3", %"class.WTF::StringAppend.3"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #8
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* %31, i8* %32) #8
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #8
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #8
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* %46, i8* %47) #8
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #8
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #8
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  ret i32 %24
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.651"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.651"*, i16*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink6Length5FixedIiEES0_T_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink6Length5FixedIiEES0_T_"}
!9 = !{i8 0, i8 2}
