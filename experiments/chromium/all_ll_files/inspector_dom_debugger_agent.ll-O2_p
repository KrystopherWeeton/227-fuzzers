; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_dom_debugger_agent.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_dom_debugger_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon.2051 = type { i8* }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.692", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.692" = type { %"class.base::RefCounted.693" }
%"class.base::RefCounted.693" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.696" }
%"class.blink::HeapHashMap.696" = type { %"class.WTF::HashMap.699" }
%"class.WTF::HashMap.699" = type { %"class.WTF::HashTable.700" }
%"class.WTF::HashTable.700" = type <{ %"struct.WTF::KeyValuePair.702"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.702" = type { %"class.blink::WeakMember.703", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.703" = type { %"class.blink::MemberBase.704" }
%"class.blink::MemberBase.704" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.705", i32, [4 x i8], %"class.std::__1::unique_ptr.843", %"class.std::__1::unique_ptr.843", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.849", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.855", %"class.std::__1::unique_ptr.861", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.873", %"class.std::__1::unique_ptr.879", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.196", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.708", %"class.std::__1::unique_ptr.714", %"class.std::__1::unique_ptr.720", %"class.std::__1::unique_ptr.726", %"class.std::__1::unique_ptr.732", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.749", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.763", %"class.std::__1::unique_ptr.770", %"class.std::__1::unique_ptr.777", %"class.std::__1::unique_ptr.777", %"class.std::__1::unique_ptr.784", %"class.std::__1::unique_ptr.791", %"class.std::__1::unique_ptr.798", %"class.std::__1::unique_ptr.823", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.741" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.741" = type { %"struct.std::__1::__atomic_base.742" }
%"struct.std::__1::__atomic_base.742" = type { %"struct.std::__1::__atomic_base.743" }
%"struct.std::__1::__atomic_base.743" = type { %"struct.std::__1::__cxx_atomic_impl.744" }
%"struct.std::__1::__cxx_atomic_impl.744" = type { %"struct.std::__1::__cxx_atomic_base_impl.745" }
%"struct.std::__1::__cxx_atomic_base_impl.745" = type { i64 }
%"class.std::__1::unique_ptr.749" = type { %"class.std::__1::__compressed_pair.750" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"class.blink::Worklist.752"* }
%"class.blink::Worklist.752" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.741" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::Worklist.759"* }
%"class.blink::Worklist.759" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.741" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"class.blink::Worklist.766"* }
%"class.blink::Worklist.766" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.741" }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"class.blink::Worklist.773"* }
%"class.blink::Worklist.773" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.741" }
%"class.std::__1::unique_ptr.777" = type { %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"class.blink::Worklist.780"* }
%"class.blink::Worklist.780" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.741" }
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.blink::Worklist.787"* }
%"class.blink::Worklist.787" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.741" }
%"class.std::__1::unique_ptr.791" = type { %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.793" }
%"struct.std::__1::__compressed_pair_elem.793" = type { %"class.blink::Worklist.794"* }
%"class.blink::Worklist.794" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.741" }
%"class.std::__1::unique_ptr.798" = type { %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.801", %"class.std::__1::__compressed_pair.809", %"class.std::__1::__compressed_pair.814", %"class.std::__1::__compressed_pair.816", [4 x i8] }>
%"class.std::__1::unique_ptr.801" = type { %"class.std::__1::__compressed_pair.802" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803", %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { i64 }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { float }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.826", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.826" = type { %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.835" }
%"class.WTF::Vector.835" = type { %"class.WTF::VectorBuffer.836" }
%"class.WTF::VectorBuffer.836" = type { %"class.WTF::VectorBufferBase.837" }
%"class.WTF::VectorBufferBase.837" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.843" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.849" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.852" }
%"class.WTF::VectorBuffer.852" = type { %"class.WTF::VectorBufferBase.853" }
%"class.WTF::VectorBufferBase.853" = type { %"struct.std::__1::pair.854"*, i32, i32 }
%"struct.std::__1::pair.854" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.855" = type { %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.861" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.867" }
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.752"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.759"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.766"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.773"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.780"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1104" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.885 }
%class.scoped_refptr.885 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.104" }
%"struct.std::__1::atomic.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__cxx_atomic_impl.107" }
%"struct.std::__1::__cxx_atomic_impl.107" = type { %"struct.std::__1::__cxx_atomic_base_impl.108" }
%"struct.std::__1::__cxx_atomic_base_impl.108" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::InspectorDOMDebuggerAgent" = type { %"class.blink::InspectorBaseAgent", %"class.v8::Isolate"*, %"class.blink::Member.1590", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashMap.1661", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOMDebugger::Backend", %"class.blink::Member.1203", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.1584" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::DOMDebugger::Backend" = type { i32 (...)** }
%"class.blink::Member.1203" = type { %"class.blink::MemberBase.1204" }
%"class.blink::MemberBase.1204" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1214", %"class.blink::HeapListHashSet.1225", %"class.blink::HeapListHashSet.1236", %"class.blink::HeapListHashSet.1247", %"class.blink::HeapListHashSet.1258", %"class.blink::HeapListHashSet.1269", %"class.blink::HeapListHashSet.1280", %"class.blink::HeapListHashSet.1291", %"class.blink::HeapListHashSet.1302", %"class.blink::HeapListHashSet.1313", %"class.blink::HeapListHashSet.1324", %"class.blink::HeapListHashSet.1335", %"class.blink::HeapListHashSet.1346", %"class.blink::HeapListHashSet.1357", %"class.blink::HeapListHashSet.1368", %"class.blink::HeapListHashSet.1379", %"class.blink::HeapListHashSet.1390", %"class.blink::HeapListHashSet.1401", %"class.blink::HeapListHashSet.1412" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1210", %"class.blink::Member.1212", %"class.blink::Member.1212", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1210" = type <{ %"class.blink::Member.1212"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1426", %"class.blink::Member.1212", %"class.blink::Member.1212" }
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.628", %"class.WTF::Vector.650", i32, [4 x i8], %"class.blink::HeapHashMap.1430", i32, i8, [3 x i8] }>
%"class.blink::Member.628" = type { %"class.blink::MemberBase.629" }
%"class.blink::MemberBase.629" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1156", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1164", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1172", %"class.blink::FrameLoader", %"class.blink::Member.1193", %"class.blink::Member.21", %"class.blink::Member.1195", %"class.blink::Member.1197", %"class.blink::Member.1199", %"class.blink::Member.1201", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1203", %class.scoped_refptr.1423, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1437", %"class.blink::Member.1439", %"class.blink::Member.1441", %"class.blink::Member.1443", %"class.blink::Member.1445", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1447", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1450", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1456", %"class.std::__1::unique_ptr.1457", %"class.absl::optional.1144", i32, [4 x i8], %"class.std::__1::unique_ptr.1463", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1471", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1476", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1481", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1484", %"class.blink::Member.1486", %"class.blink::Member.1488", %"class.blink::Member.1490", %"class.mojo::StructPtr.1493", %"class.blink::Member.1502", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1504", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1121", %"class.blink::Member.1123", %"class.blink::Member.1125", i8, i32, i8, i32, %"class.blink::Member.1127", %"class.blink::Member.141", %"class.blink::FrameLifecycle", %"class.blink::Member.139", %"class.blink::Member.139", %"class.blink::Member.139", %"class.blink::Member.139", %"class.blink::Member.139", %"class.blink::Member.139", %"class.blink::Member.628", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1137", i8, %"class.base::UnguessableToken", %"class.absl::optional.1139", %"class.absl::optional.1144", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.139", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.1121" = type { %"class.blink::MemberBase.1122" }
%"class.blink::MemberBase.1122" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1123" = type { %"class.blink::MemberBase.1124" }
%"class.blink::MemberBase.1124" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.139", %"class.blink::Member.141", %"class.blink::Member.143", %"class.blink::Member.145", i8, %"class.WTF::Vector.147" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.115" }
%"class.blink::HeapVector.115" = type { %"class.WTF::Vector.118" }
%"class.WTF::Vector.118" = type { %"class.WTF::VectorBuffer.119" }
%"class.WTF::VectorBuffer.119" = type { %"class.WTF::VectorBufferBase.120", [32 x i8] }
%"class.WTF::VectorBufferBase.120" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.121" }
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::HeapVector.123"* }
%"class.blink::HeapVector.123" = type { %"class.WTF::Vector.126" }
%"class.WTF::Vector.126" = type { %"class.WTF::VectorBuffer.127" }
%"class.WTF::VectorBuffer.127" = type { %"class.WTF::VectorBufferBase.128", [16 x i8] }
%"class.WTF::VectorBufferBase.128" = type { %"class.blink::RegisteredEventListener"*, i32, i32 }
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.129", i8, [7 x i8] }>
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::EventListener"* }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.137"* }
%"class.WTF::Vector.137" = type opaque
%"class.blink::Member.143" = type { %"class.blink::MemberBase.144" }
%"class.blink::MemberBase.144" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.145" = type { %"class.blink::MemberBase.146" }
%"class.blink::MemberBase.146" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.147" = type { %"class.WTF::VectorBuffer.148" }
%"class.WTF::VectorBuffer.148" = type { %"class.WTF::VectorBufferBase.149" }
%"class.WTF::VectorBufferBase.149" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.323" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.150, %"class.std::__1::unique_ptr.273", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.152, i32 }>
%class.scoped_refptr.150 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.152, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.239", %"class.absl::optional.244", %"class.absl::optional.200", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.264", i8, [7 x i8], %class.scoped_refptr.152, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.151" }>
%"class.base::RefCountedThreadSafe.151" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.104" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.156 }
%union.anon.156 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.170 }
%class.scoped_refptr.170 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.171", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.171" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.172" }
%"struct.std::__1::atomic.172" = type { %"struct.std::__1::__atomic_base.173" }
%"struct.std::__1::__atomic_base.173" = type { %"struct.std::__1::__atomic_base.174" }
%"struct.std::__1::__atomic_base.174" = type { %"struct.std::__1::__cxx_atomic_impl.175" }
%"struct.std::__1::__cxx_atomic_impl.175" = type { %"struct.std::__1::__cxx_atomic_base_impl.176" }
%"struct.std::__1::__cxx_atomic_base_impl.176" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.152, %"class.std::__1::unique_ptr.177", %"class.absl::optional.186", %"struct.std::__1::atomic.196", i8, i8, i8, i8, i32, i32, %"class.absl::optional.200", %"class.std::__1::unique_ptr.205", i8, i64, %class.scoped_refptr.235, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.238" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.103 }
%class.scoped_refptr.103 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.152, i8, %"class.mojo::ScopedHandleBase.180", %class.scoped_refptr.181, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.182" }
%"class.mojo::ScopedHandleBase.180" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.181 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.182" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.186" = type { %"class.absl::optional_internal::optional_data.187" }
%"class.absl::optional_internal::optional_data.187" = type { %"class.absl::optional_internal::optional_data_base.188" }
%"class.absl::optional_internal::optional_data_base.188" = type { %"class.absl::optional_internal::optional_data_dtor_base.189" }
%"class.absl::optional_internal::optional_data_dtor_base.189" = type { i8, %union.anon.190 }
%union.anon.190 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.191", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.191" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.208", i8, i64, %class.scoped_refptr.209, %class.scoped_refptr.231 }
%"class.base::RepeatingCallback.208" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.209 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.210", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.220", i8, [7 x i8] }>
%"class.base::RefCounted.210" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.211 }
%class.scoped_refptr.211 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.212", %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.220" = type { %"class.std::__1::__tree.221" }
%"class.std::__1::__tree.221" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.222", %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%class.scoped_refptr.231 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.235 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.236 }
%class.scoped_refptr.236 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1984", [4 x i8], %"class.base::RepeatingCallback.276", %class.scoped_refptr.152, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1984" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.276" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.238" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.239" = type { %"class.absl::optional_internal::optional_data.240" }
%"class.absl::optional_internal::optional_data.240" = type { %"class.absl::optional_internal::optional_data_base.241" }
%"class.absl::optional_internal::optional_data_base.241" = type { %"class.absl::optional_internal::optional_data_dtor_base.242" }
%"class.absl::optional_internal::optional_data_dtor_base.242" = type { i8, %union.anon.243 }
%union.anon.243 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.244" = type { %"class.absl::optional_internal::optional_data.245" }
%"class.absl::optional_internal::optional_data.245" = type { %"class.absl::optional_internal::optional_data_base.246" }
%"class.absl::optional_internal::optional_data_base.246" = type { %"class.absl::optional_internal::optional_data_dtor_base.247" }
%"class.absl::optional_internal::optional_data_dtor_base.247" = type { i8, [7 x i8], %union.anon.248 }
%union.anon.248 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.200" = type { %"class.absl::optional_internal::optional_data.201" }
%"class.absl::optional_internal::optional_data.201" = type { %"class.absl::optional_internal::optional_data_base.202" }
%"class.absl::optional_internal::optional_data_base.202" = type { %"class.absl::optional_internal::optional_data_dtor_base.203" }
%"class.absl::optional_internal::optional_data_dtor_base.203" = type { i8, %union.anon.204 }
%union.anon.204 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.249 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.249 = type { %"class.std::__1::map.252" }
%"class.std::__1::map.252" = type { %"class.std::__1::__tree.253" }
%"class.std::__1::__tree.253" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.254", %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.263"*, i64 }
%"class.std::__1::unique_ptr.263" = type opaque
%"class.std::__1::map.264" = type { %"class.std::__1::__tree.265" }
%"class.std::__1::__tree.265" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.276", %"class.base::OnceCallback.277", %"class.absl::optional.278", %"class.absl::optional.283", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.290", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.298", %"class.std::__1::map.309", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.318", i8, %class.scoped_refptr.152, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.319" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.277" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.278" = type { %"class.absl::optional_internal::optional_data.279" }
%"class.absl::optional_internal::optional_data.279" = type { %"class.absl::optional_internal::optional_data_base.280" }
%"class.absl::optional_internal::optional_data_base.280" = type { %"class.absl::optional_internal::optional_data_dtor_base.281" }
%"class.absl::optional_internal::optional_data_dtor_base.281" = type { i8, %union.anon.282 }
%union.anon.282 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.283" = type { %"class.absl::optional_internal::optional_data.284" }
%"class.absl::optional_internal::optional_data.284" = type { %"class.absl::optional_internal::optional_data_base.285" }
%"class.absl::optional_internal::optional_data_base.285" = type { %"class.absl::optional_internal::optional_data_dtor_base.286" }
%"class.absl::optional_internal::optional_data_dtor_base.286" = type { i8, %union.anon.287 }
%union.anon.287 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.152, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.288" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.288" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.289 }
%class.scoped_refptr.289 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.293", %class.scoped_refptr.294 }
%"class.base::RepeatingCallback.293" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.294 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.151", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.298" = type { %"class.std::__1::__tree.299" }
%"class.std::__1::__tree.299" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.309" = type { %"class.std::__1::__tree.310" }
%"class.std::__1::__tree.310" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.311", %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.base::OnceCallback.318" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.319" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.152 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.153" }>
%"class.base::RefCountedThreadSafe.153" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.141" = type { %"class.blink::MemberBase.142" }
%"class.blink::MemberBase.142" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.139" = type { %"class.blink::MemberBase.140" }
%"class.blink::MemberBase.140" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.139", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1129" }
%"class.std::__1::vector.1129" = type { %"class.std::__1::__vector_base.1130" }
%"class.std::__1::__vector_base.1130" = type { %"struct.std::__1::pair.1131"*, %"struct.std::__1::pair.1131"*, %"class.std::__1::__compressed_pair.1132" }
%"struct.std::__1::pair.1131" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"struct.std::__1::pair.1131"* }
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1139" = type { %"class.absl::optional_internal::optional_data.1140" }
%"class.absl::optional_internal::optional_data.1140" = type { %"class.absl::optional_internal::optional_data_base.1141" }
%"class.absl::optional_internal::optional_data_base.1141" = type { %"class.absl::optional_internal::optional_data_dtor_base.1142" }
%"class.absl::optional_internal::optional_data_dtor_base.1142" = type { i8, %union.anon.1143 }
%union.anon.1143 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.687 }
%class.scoped_refptr.687 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1149" }
%"class.blink::HeapHashSet.1149" = type { %"class.WTF::HashSet.1152" }
%"class.WTF::HashSet.1152" = type { %"class.WTF::HashTable.1153" }
%"class.WTF::HashTable.1153" = type <{ %"class.blink::WeakMember.1155"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1155" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1156" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1157" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.1157" = type { %"class.WTF::HashMap.1160" }
%"class.WTF::HashMap.1160" = type { %"class.WTF::HashTable.1161" }
%"class.WTF::HashTable.1161" = type <{ %"struct.WTF::KeyValuePair.1163"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1163" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.613", %"class.base::WeakPtrFactory.618" }
%"class.WTF::HashMap.613" = type { %"class.WTF::HashTable.614" }
%"class.WTF::HashTable.614" = type <{ %"struct.WTF::KeyValuePair.617"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.617" = type opaque
%"class.base::WeakPtrFactory.618" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1170" }
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.626" }
%"class.blink::WeakMember.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.339" }
%"class.blink::HeapHashSet.339" = type { %"class.WTF::HashSet.342" }
%"class.WTF::HashSet.342" = type { %"class.WTF::HashTable.343" }
%"class.WTF::HashTable.343" = type <{ %"class.blink::WeakMember.345"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.345" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.276", %"class.base::RepeatingCallback.2125", i64, %"class.std::__1::map.2126", i8*, i64, %"class.base::WeakPtrFactory.2135" }
%"class.base::RepeatingCallback.2125" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2126" = type { %"class.std::__1::__tree.2127" }
%"class.std::__1::__tree.2127" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2128", %"class.std::__1::__compressed_pair.2132" }
%"class.std::__1::__compressed_pair.2128" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.2132" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.base::WeakPtrFactory.2135" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1172" = type { %"class.WTF::HashSet.1175" }
%"class.WTF::HashSet.1175" = type { %"class.WTF::HashTable.1176" }
%"class.WTF::HashTable.1176" = type <{ %"class.blink::WeakMember.1178"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1178" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.628", %"class.blink::Member.1179", %"class.blink::Member.1181", %"class.std::__1::unique_ptr.1183", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1189" }
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1181" = type { %"class.blink::MemberBase.1182" }
%"class.blink::MemberBase.1182" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1183" = type { %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.671" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.671" = type { %"class.std::__1::__compressed_pair.672" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.1189" = type { %"class.WTF::HashTable.1190" }
%"class.WTF::HashTable.1190" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1699", %"class.blink::Member.628", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1704", i8, i32, %"class.blink::Color", %"class.absl::optional.1706", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1711", %"class.blink::Member.1713", %"class.blink::Member.1713", %"class.std::__1::unique_ptr.1716", i32, [4 x i8], %"class.WTF::HashSet.1719", %"class.blink::Member.1726", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1728", %"class.blink::HeapHashSet.1735", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1743", i8, %"class.blink::Member.1749", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1761", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1775", i8, %"class.std::__1::unique_ptr.1781", %"class.std::__1::unique_ptr.1898", %"class.WTF::Vector.1904", i32, %class.scoped_refptr.1909, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1910", %"class.blink::Member.1912", %"class.blink::Member.1914", %"class.blink::HeapHashSet.1916", %"class.blink::HeapHashSet.1923", %"class.std::__1::unique_ptr.1930", %"class.std::__1::unique_ptr.1937", %"class.WTF::Vector.100" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1699" = type { %"class.WTF::HashTable.1700" }
%"class.WTF::HashTable.1700" = type <{ %class.scoped_refptr.1703*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1703 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1704" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1705", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.888, %"class.base::WeakPtrFactory.889" }
%class.scoped_refptr.888 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.889" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1705" = type { %"class.blink::MemberBase.1194" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1706" = type { %"class.absl::optional_internal::optional_data.1707" }
%"class.absl::optional_internal::optional_data.1707" = type { %"class.absl::optional_internal::optional_data_base.1708" }
%"class.absl::optional_internal::optional_data_base.1708" = type { %"class.absl::optional_internal::optional_data_dtor_base.1709" }
%"class.absl::optional_internal::optional_data_dtor_base.1709" = type { i8, %union.anon.1710 }
%union.anon.1710 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1711" = type { %"class.blink::MemberBase.1712" }
%"class.blink::MemberBase.1712" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1713" = type { %"class.blink::MemberBase.1714" }
%"class.blink::MemberBase.1714" = type { %"class.blink::HeapHashSet.1715"* }
%"class.blink::HeapHashSet.1715" = type opaque
%"class.std::__1::unique_ptr.1716" = type { %"class.std::__1::__compressed_pair.1717" }
%"class.std::__1::__compressed_pair.1717" = type { %"struct.std::__1::__compressed_pair_elem.1718" }
%"struct.std::__1::__compressed_pair_elem.1718" = type { %"class.WTF::HashSet.1719"* }
%"class.WTF::HashSet.1719" = type { %"class.WTF::HashTable.1720" }
%"class.WTF::HashTable.1720" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1726" = type { %"class.blink::MemberBase.1727" }
%"class.blink::MemberBase.1727" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1728" = type { %"class.WTF::HashSet.1731" }
%"class.WTF::HashSet.1731" = type { %"class.WTF::HashTable.1732" }
%"class.WTF::HashTable.1732" = type <{ %"class.blink::Member.1734"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1734" = type opaque
%"class.blink::HeapHashSet.1735" = type { %"class.WTF::HashSet.1738" }
%"class.WTF::HashSet.1738" = type { %"class.WTF::HashTable.1739" }
%"class.WTF::HashTable.1739" = type <{ %"class.blink::Member.1741"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1741" = type { %"class.blink::MemberBase.1742" }
%"class.blink::MemberBase.1742" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1971", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1982", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.21" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1973", %"class.blink::Member.1974", %"class.blink::Member.1976", %"class.blink::Member.1978", %"class.blink::Member.1980", %"class.WTF::Vector.100", i16, %class.scoped_refptr.888 }
%"class.blink::ThreadState::PrefinalizerRegistration.1973" = type { i8 }
%"class.blink::Member.1974" = type { %"class.blink::MemberBase.1975" }
%"class.blink::MemberBase.1975" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1976" = type { %"class.blink::MemberBase.1977" }
%"class.blink::MemberBase.1977" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1978" = type { %"class.blink::MemberBase.1979" }
%"class.blink::MemberBase.1979" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1980" = type { %"class.blink::MemberBase.1981" }
%"class.blink::MemberBase.1981" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1982" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1983", { i64, i64 } }
%"class.blink::WeakMember.1983" = type { %"class.blink::MemberBase.1742" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1743" = type { %"class.std::__1::__compressed_pair.1744" }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1749" = type { %"class.blink::MemberBase.1750" }
%"class.blink::MemberBase.1750" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1753", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1753" = type { %"class.WTF::HashTable.1754" }
%"class.WTF::HashTable.1754" = type <{ %"struct.WTF::KeyValuePair.1756"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1756" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1757", i32, i32 }
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759" }
%"class.WTF::VectorBufferBase.1759" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1761" = type { %"class.WTF::LinkedHashSet.1764" }
%"class.WTF::LinkedHashSet.1764" = type { %"class.WTF::HashMap.1765", %"class.WTF::VectorBackedLinkedList.1769" }
%"class.WTF::HashMap.1765" = type { %"class.WTF::HashTable.1766" }
%"class.WTF::HashTable.1766" = type <{ %"struct.WTF::KeyValuePair.1768"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1768" = type opaque
%"class.WTF::VectorBackedLinkedList.1769" = type { %"class.WTF::Vector.1770", i32, i32 }
%"class.WTF::Vector.1770" = type { %"class.WTF::VectorBuffer.1771" }
%"class.WTF::VectorBuffer.1771" = type { %"class.WTF::VectorBufferBase.1772" }
%"class.WTF::VectorBufferBase.1772" = type { %"class.WTF::VectorBackedLinkedListNode.1773"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1773" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1781" = type { %"class.std::__1::__compressed_pair.1782" }
%"class.std::__1::__compressed_pair.1782" = type { %"struct.std::__1::__compressed_pair_elem.1783" }
%"struct.std::__1::__compressed_pair_elem.1783" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1784, %class.scoped_refptr.1784, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1875", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1880", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1784 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1785", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1792" }
%"class.WTF::RefCounted.1785" = type { %"class.base::RefCounted.1786" }
%"class.base::RefCounted.1786" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1787", i32, [4 x i8] }>
%"class.WTF::Vector.1787" = type { %"class.WTF::VectorBuffer.1788" }
%"class.WTF::VectorBuffer.1788" = type { %"class.WTF::VectorBufferBase.1789" }
%"class.WTF::VectorBufferBase.1789" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1792" = type { %"class.WTF::VectorBuffer.1793" }
%"class.WTF::VectorBuffer.1793" = type { %"class.WTF::VectorBufferBase.1794" }
%"class.WTF::VectorBufferBase.1794" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1798", %"class.std::__1::unique_ptr.1847", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1795, %class.scoped_refptr.1796, %class.scoped_refptr.1797 }
%class.scoped_refptr.1795 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1811", i8, i8, %class.scoped_refptr.1795, i32, i32 }
%"class.WTF::RefCounted.1811" = type { %"class.base::RefCounted.1812" }
%"class.base::RefCounted.1812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1796 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1966" }
%"class.blink::PaintPropertyNode.1966" = type { %"class.WTF::RefCounted.1967", i8, i8, %class.scoped_refptr.1796, i32, i32 }
%"class.WTF::RefCounted.1967" = type { %"class.base::RefCounted.1968" }
%"class.base::RefCounted.1968" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1797 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1963" }
%"class.blink::PaintPropertyNode.1963" = type { %"class.WTF::RefCounted.1964", i8, i8, %class.scoped_refptr.1797, i32, i32 }
%"class.WTF::RefCounted.1964" = type { %"class.base::RefCounted.1965" }
%"class.base::RefCounted.1965" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1798" = type { %"class.std::__1::__compressed_pair.1799" }
%"class.std::__1::__compressed_pair.1799" = type { %"struct.std::__1::__compressed_pair_elem.1800" }
%"struct.std::__1::__compressed_pair_elem.1800" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1801", %"class.WTF::Vector.1806", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1801" = type { %"class.WTF::VectorBuffer.1802" }
%"class.WTF::VectorBuffer.1802" = type { %"class.WTF::VectorBufferBase.1803" }
%"class.WTF::VectorBufferBase.1803" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1806" = type { %"class.WTF::VectorBuffer.1807" }
%"class.WTF::VectorBuffer.1807" = type { %"class.WTF::VectorBufferBase.1808" }
%"class.WTF::VectorBufferBase.1808" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1826" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1819, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1820", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1813" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1819 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1948", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1948" = type { %"class.WTF::RefCounted.1949", i8, i8, %class.scoped_refptr.1819, i32, i32 }
%"class.WTF::RefCounted.1949" = type { %"class.base::RefCounted.1950" }
%"class.base::RefCounted.1950" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1951" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1951" = type { %"class.absl::optional_internal::optional_data.1952" }
%"class.absl::optional_internal::optional_data.1952" = type { %"class.absl::optional_internal::optional_data_base.1953" }
%"class.absl::optional_internal::optional_data_base.1953" = type { %"class.absl::optional_internal::optional_data_dtor_base.1954" }
%"class.absl::optional_internal::optional_data_dtor_base.1954" = type { i8, %union.anon.1955 }
%union.anon.1955 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1956", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1956" = type { %"class.std::__1::__vector_base.1957" }
%"class.std::__1::__vector_base.1957" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1958" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1958" = type { %"struct.std::__1::__compressed_pair_elem.1959" }
%"struct.std::__1::__compressed_pair_elem.1959" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1820" = type { %"class.std::__1::__compressed_pair.1821" }
%"class.std::__1::__compressed_pair.1821" = type { %"struct.std::__1::__compressed_pair_elem.1822" }
%"struct.std::__1::__compressed_pair_elem.1822" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1826" = type { %"class.std::__1::__compressed_pair.1827" }
%"class.std::__1::__compressed_pair.1827" = type { %"struct.std::__1::__compressed_pair_elem.1828" }
%"struct.std::__1::__compressed_pair_elem.1828" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1829", %"class.std::__1::unique_ptr.1835", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1835" = type { %"class.std::__1::__compressed_pair.1836" }
%"class.std::__1::__compressed_pair.1836" = type { %"struct.std::__1::__compressed_pair_elem.1837" }
%"struct.std::__1::__compressed_pair_elem.1837" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1847" = type { %"class.std::__1::__compressed_pair.1848" }
%"class.std::__1::__compressed_pair.1848" = type { %"struct.std::__1::__compressed_pair_elem.1849" }
%"struct.std::__1::__compressed_pair_elem.1849" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1850", %"class.absl::optional.1850" }
%"class.absl::optional.1850" = type { %"class.absl::optional_internal::optional_data.1851" }
%"class.absl::optional_internal::optional_data.1851" = type { %"class.absl::optional_internal::optional_data_base.1852" }
%"class.absl::optional_internal::optional_data_base.1852" = type { %"class.absl::optional_internal::optional_data_dtor_base.1853" }
%"class.absl::optional_internal::optional_data_dtor_base.1853" = type { i8, [3 x i8], %union.anon.1854 }
%union.anon.1854 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1792"*, %"class.absl::optional.1860", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1860" = type { %"class.absl::optional_internal::optional_data.1861" }
%"class.absl::optional_internal::optional_data.1861" = type { %"class.absl::optional_internal::optional_data_base.1862" }
%"class.absl::optional_internal::optional_data_base.1862" = type { %"class.absl::optional_internal::optional_data_dtor_base.1863" }
%"class.absl::optional_internal::optional_data_dtor_base.1863" = type { i8, %union.anon.1864 }
%union.anon.1864 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1865", %"class.WTF::Vector.1870" }
%"class.WTF::Vector.1865" = type { %"class.WTF::VectorBuffer.1866" }
%"class.WTF::VectorBuffer.1866" = type { %"class.WTF::VectorBufferBase.1867", [128 x i8] }
%"class.WTF::VectorBufferBase.1867" = type { i32*, i32, i32 }
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872", [128 x i8] }
%"class.WTF::VectorBufferBase.1872" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1875" = type { %"class.WTF::VectorBuffer.1876" }
%"class.WTF::VectorBuffer.1876" = type { %"class.WTF::VectorBufferBase.1877" }
%"class.WTF::VectorBufferBase.1877" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1880" = type { %"class.WTF::HashTable.1881" }
%"class.WTF::HashTable.1881" = type <{ %"struct.WTF::KeyValuePair.1884"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1884" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1885", %"class.WTF::Vector.1890" }
%"class.WTF::HashMap.1885" = type { %"class.WTF::HashTable.1886" }
%"class.WTF::HashTable.1886" = type <{ %"struct.WTF::KeyValuePair.1889"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1889" = type opaque
%"class.WTF::Vector.1890" = type { %"class.WTF::VectorBuffer.1891" }
%"class.WTF::VectorBuffer.1891" = type { %"class.WTF::VectorBufferBase.1892" }
%"class.WTF::VectorBufferBase.1892" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1898" = type { %"class.std::__1::__compressed_pair.1899" }
%"class.std::__1::__compressed_pair.1899" = type { %"struct.std::__1::__compressed_pair_elem.1900" }
%"struct.std::__1::__compressed_pair_elem.1900" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1904" = type { %"class.WTF::VectorBuffer.1905" }
%"class.WTF::VectorBuffer.1905" = type { %"class.WTF::VectorBufferBase.1906" }
%"class.WTF::VectorBufferBase.1906" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1909 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1910" = type { %"class.blink::MemberBase.1911" }
%"class.blink::MemberBase.1911" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1912" = type { %"class.blink::MemberBase.1913" }
%"class.blink::MemberBase.1913" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1914" = type { %"class.blink::MemberBase.1915" }
%"class.blink::MemberBase.1915" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1916" = type { %"class.WTF::HashSet.1919" }
%"class.WTF::HashSet.1919" = type { %"class.WTF::HashTable.1920" }
%"class.WTF::HashTable.1920" = type <{ %"class.blink::WeakMember.1922"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1922" = type opaque
%"class.blink::HeapHashSet.1923" = type { %"class.WTF::HashSet.1926" }
%"class.WTF::HashSet.1926" = type { %"class.WTF::HashTable.1927" }
%"class.WTF::HashTable.1927" = type <{ %"class.blink::WeakMember.1929"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1929" = type opaque
%"class.std::__1::unique_ptr.1930" = type { %"class.std::__1::__compressed_pair.1931" }
%"class.std::__1::__compressed_pair.1931" = type { %"struct.std::__1::__compressed_pair_elem.1932" }
%"struct.std::__1::__compressed_pair_elem.1932" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1933" }
%"class.base::time_internal::TimeBase.1933" = type { i64 }
%"class.std::__1::unique_ptr.1937" = type { %"class.std::__1::__compressed_pair.1938" }
%"class.std::__1::__compressed_pair.1938" = type { %"struct.std::__1::__compressed_pair_elem.1939" }
%"struct.std::__1::__compressed_pair_elem.1939" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1940", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1940" = type { %"class.absl::optional_internal::optional_data.1941" }
%"class.absl::optional_internal::optional_data.1941" = type { %"class.absl::optional_internal::optional_data_base.1942" }
%"class.absl::optional_internal::optional_data_base.1942" = type { %"class.absl::optional_internal::optional_data_dtor_base.1943" }
%"class.absl::optional_internal::optional_data_dtor_base.1943" = type { i8, %union.anon.1944 }
%union.anon.1944 = type { %"class.base::Time" }
%"class.WTF::Vector.100" = type { %"class.WTF::VectorBuffer.101" }
%"class.WTF::VectorBuffer.101" = type { %"class.WTF::VectorBufferBase.102" }
%"class.WTF::VectorBufferBase.102" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.42", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.51", %"class.blink::HeapVector.53" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.100", %"class.WTF::Vector.100", i8, i32, %"class.blink::Member.111", %"class.blink::Member.396", %"class.blink::Member.663", %"class.blink::Member.665", %"class.blink::Member.667", %"class.blink::Member.669", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.677", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.683", %"class.blink::Member.685", %"class.blink::Member.59", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.688", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.639", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.898", double, double, i64, i64, %"class.blink::HeapHashSet.900", %"class.blink::HeapHashSet.907", i16, i8, %"class.blink::Member.914", %"class.blink::Member.916", %"class.blink::Member.918", %"class.blink::Member.920", %"class.blink::TextLinkColors", %"class.blink::Member.922", i8, [7 x i8], %"class.blink::HeapHashMap.924", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.931", %"class.blink::Member.936", %"class.blink::Member.940", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.942", %"class.blink::HeapVector.944", %"class.std::__1::unique_ptr.952", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.958", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.971", %"class.WTF::Vector.973", i8, i8, %"class.std::__1::unique_ptr.978", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.984", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.992", i8, i32, %"class.blink::Member.994", %"class.blink::Member.996", %"class.blink::Member.998", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1000", %"class.WTF::HashMap.1002", %"class.blink::Member.1007", %"class.blink::Member.1009", %"class.blink::Member.1011", %"class.blink::Member.1013", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1015", i8, i32, %"class.blink::Member.1022", %"class.blink::Member.1024", i32, %"class.blink::Member.1026", %"class.blink::Member.1028", %"class.blink::Member.1030", %"class.std::__1::unique_ptr.1032", i64, %"class.std::__1::unique_ptr.1038", i32, i32, %"class.blink::Member.1044", %"class.blink::Member.1046", %"class.blink::Member.1048", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1050", %"class.WTF::Vector.650", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1052", %"class.blink::Member.1059", %"class.std::__1::unique_ptr.1061", %"class.blink::Member.1067", i8, i8, %"class.WTF::String", %"class.blink::Member.1069", i8, [7 x i8], %"class.blink::HeapHashMap.1071", %"class.blink::HeapObserverSet.1078", %"class.blink::Member.1086", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1088", i32, i8, i8, %"class.blink::WeakMember.1090", %"class.blink::Member.1091" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.93" }
%"class.blink::HeapHashMap.93" = type { %"class.WTF::HashMap.96" }
%"class.WTF::HashMap.96" = type { %"class.WTF::HashTable.97" }
%"class.WTF::HashTable.97" = type <{ %"struct.WTF::KeyValuePair.99"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.99" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.496", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.504", %"class.blink::Member.8", %"class.blink::Member.506", i8, %"class.blink::Member.508", %"class.blink::Member.510", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.512", %"class.blink::Member.514", %"class.blink::Member.516", %"class.blink::Member.518", %"class.blink::Member.520", %"class.blink::Member.522", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.453", %"class.blink::Member.524", %class.scoped_refptr.526, %"class.blink::HeapHashSet.588", %"class.blink::Member.595", %"class.blink::HeapHashMap.603", %"class.std::__1::unique_ptr.610", %"class.blink::Member.622", %"class.blink::Member.643", %"class.blink::Member.645", %"class.blink::Member.647", %"class.WTF::Vector.650", %"class.util::TokenType", %"class.WTF::HashSet.655", %"class.WTF::Deque" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.331", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.402", i32, i8, [3 x i8], %"class.blink::HeapVector.404", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.412", %"class.blink::Member.414", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.423", %"class.blink::Member.482", %"class.blink::Member.484", i8 }>
%"class.blink::Supplementable.331" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.346" }
%"class.blink::Supplementable.346" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.347" }
%"class.blink::HeapHashMap.347" = type { %"class.WTF::HashMap.350" }
%"class.WTF::HashMap.350" = type { %"class.WTF::HashTable.351" }
%"class.WTF::HashTable.351" = type <{ %"struct.WTF::KeyValuePair.353"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.353" = type { i8*, %"class.blink::Member.2113" }
%"class.blink::Member.2113" = type { %"class.blink::MemberBase.2114" }
%"class.blink::MemberBase.2114" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2115" }
%"class.blink::Member.2115" = type { %"class.blink::MemberBase.2116" }
%"class.blink::MemberBase.2116" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.354, %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.390", %"class.std::__1::unique_ptr.390", %"class.blink::Member.396", i32, [4 x i8], %"class.WTF::HashSet.398", i32, i32 }
%class.scoped_refptr.354 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.355", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.357", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.362 }
%"class.WTF::RefCounted.355" = type { %"class.base::RefCounted.356" }
%"class.base::RefCounted.356" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.357" = type { %"class.absl::optional_internal::optional_data.358" }
%"class.absl::optional_internal::optional_data.358" = type { %"class.absl::optional_internal::optional_data_base.359" }
%"class.absl::optional_internal::optional_data_base.359" = type { %"class.absl::optional_internal::optional_data_dtor_base.360" }
%"class.absl::optional_internal::optional_data_dtor_base.360" = type { i8, %union.anon.361 }
%union.anon.361 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.362 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.366", %"class.std::__1::map.377", %"class.std::__1::map.386"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.357" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.366" = type { %"class.std::__1::__tree.367" }
%"class.std::__1::__tree.367" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.368", %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.377" = type { %"class.std::__1::__tree.378" }
%"class.std::__1::__tree.378" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.379", %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.386" = type opaque
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.398" = type { %"class.WTF::HashTable.399" }
%"class.WTF::HashTable.399" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.404" = type { %"class.WTF::Vector.407" }
%"class.WTF::Vector.407" = type { %"class.WTF::VectorBuffer.408" }
%"class.WTF::VectorBuffer.408" = type { %"class.WTF::VectorBufferBase.409" }
%"class.WTF::VectorBufferBase.409" = type { %"class.blink::Member.410"*, i32, i32 }
%"class.blink::Member.410" = type opaque
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.416", i32, i32 }
%"class.blink::HeapHashMap.416" = type { %"class.WTF::HashMap.419" }
%"class.WTF::HashMap.419" = type { %"class.WTF::HashTable.420" }
%"class.WTF::HashTable.420" = type <{ %"struct.WTF::KeyValuePair.422"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.422" = type opaque
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.426" }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.429" }
%"class.WTF::Vector.429" = type { %"class.WTF::VectorBuffer.430" }
%"class.WTF::VectorBuffer.430" = type { %"class.WTF::VectorBufferBase.431" }
%"class.WTF::VectorBufferBase.431" = type { %"class.mojo::StructPtr.432"*, i32, i32 }
%"class.mojo::StructPtr.432" = type { %"class.std::__1::unique_ptr.433" }
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.436", %"class.WTF::HashMap.443", %"class.WTF::HashMap.448", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.453", i32, %"class.mojo::StructPtr.458", %"class.WTF::Vector.453" }
%"class.mojo::StructPtr.436" = type { %"class.std::__1::unique_ptr.437" }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.443" = type { %"class.WTF::HashTable.444" }
%"class.WTF::HashTable.444" = type <{ %"struct.WTF::KeyValuePair.447"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.447" = type opaque
%"class.WTF::HashMap.448" = type { %"class.WTF::HashTable.449" }
%"class.WTF::HashTable.449" = type <{ %"struct.WTF::KeyValuePair.452"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.452" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.458" = type { %"class.std::__1::unique_ptr.459" }
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.453", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.473" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.273", i32 }>
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.414", i8, [7 x i8], %"class.WTF::Vector.429", %"class.blink::HeapVector.488", i8, [7 x i8], %"class.WTF::HashSet.398", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.488" = type { %"class.WTF::Vector.491" }
%"class.WTF::Vector.491" = type { %"class.WTF::VectorBuffer.492" }
%"class.WTF::VectorBuffer.492" = type { %"class.WTF::VectorBufferBase.493" }
%"class.WTF::VectorBufferBase.493" = type { %"class.blink::Member.494"*, i32, i32 }
%"class.blink::Member.494" = type opaque
%"class.blink::Supplementable.496" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.497" }
%"class.blink::HeapHashMap.497" = type { %"class.WTF::HashMap.500" }
%"class.WTF::HashMap.500" = type { %"class.WTF::HashTable.501" }
%"class.WTF::HashTable.501" = type <{ %"struct.WTF::KeyValuePair.503"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.503" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.453" = type { %"class.WTF::VectorBuffer.454" }
%"class.WTF::VectorBuffer.454" = type { %"class.WTF::VectorBufferBase.455" }
%"class.WTF::VectorBufferBase.455" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.524" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.526 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.528", i64, %"class.WTF::Vector.532", %"class.WTF::Vector.537", %"class.WTF::Vector.543", %"class.WTF::Vector.561", %class.scoped_refptr.354, %"class.WTF::HashMap.567", %"class.WTF::Vector.572", %"class.WTF::Vector.532", %"class.WTF::Vector.578", %"class.WTF::HashMap.583", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.527" }
%"class.base::RefCountedThreadSafe.527" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { i8* }
%"class.WTF::Vector.537" = type { %"class.WTF::VectorBuffer.538" }
%"class.WTF::VectorBuffer.538" = type { %"class.WTF::VectorBufferBase.539", [8 x i8] }
%"class.WTF::VectorBufferBase.539" = type { %class.scoped_refptr.540*, i32, i32 }
%class.scoped_refptr.540 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.543" = type { %"class.WTF::VectorBuffer.544" }
%"class.WTF::VectorBuffer.544" = type { %"class.WTF::VectorBufferBase.545" }
%"class.WTF::VectorBufferBase.545" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.547", %"class.std::__1::unique_ptr.553" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.546 }
%class.scoped_refptr.546 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.547" = type { %"class.std::__1::__compressed_pair.548" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.561" = type { %"class.WTF::VectorBuffer.562" }
%"class.WTF::VectorBuffer.562" = type { %"class.WTF::VectorBufferBase.563" }
%"class.WTF::VectorBufferBase.563" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.564", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.564" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.567" = type { %"class.WTF::HashTable.568" }
%"class.WTF::HashTable.568" = type <{ %"struct.WTF::KeyValuePair.571"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.571" = type opaque
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %"class.mojo::ScopedHandleBase.575"*, i32, i32 }
%"class.mojo::ScopedHandleBase.575" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.532" = type { %"class.WTF::VectorBuffer.533" }
%"class.WTF::VectorBuffer.533" = type { %"class.WTF::VectorBufferBase.534", [16 x i8] }
%"class.WTF::VectorBufferBase.534" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.578" = type { %"class.WTF::VectorBuffer.579" }
%"class.WTF::VectorBuffer.579" = type { %"class.WTF::VectorBufferBase.580" }
%"class.WTF::VectorBufferBase.580" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.583" = type { %"class.WTF::HashTable.584" }
%"class.WTF::HashTable.584" = type <{ %"struct.WTF::KeyValuePair.587"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.587" = type { i8**, %"class.std::__1::unique_ptr.2117" }
%"class.std::__1::unique_ptr.2117" = type { %"class.std::__1::__compressed_pair.2118" }
%"class.std::__1::__compressed_pair.2118" = type { %"struct.std::__1::__compressed_pair_elem.2119" }
%"struct.std::__1::__compressed_pair_elem.2119" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.588" = type { %"class.WTF::HashSet.591" }
%"class.WTF::HashSet.591" = type { %"class.WTF::HashTable.592" }
%"class.WTF::HashTable.592" = type <{ %"class.blink::WeakMember.594"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.594" = type opaque
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.597", %"class.blink::Member.597", %"class.blink::Member.599", %"class.blink::Member.601", %"class.base::TimeTicks" }
%"class.blink::Member.597" = type { %"class.blink::MemberBase.598" }
%"class.blink::MemberBase.598" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.599" = type { %"class.blink::MemberBase.600" }
%"class.blink::MemberBase.600" = type { %"class.blink::Event"* }
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.603" = type { %"class.WTF::HashMap.606" }
%"class.WTF::HashMap.606" = type { %"class.WTF::HashTable.607" }
%"class.WTF::HashTable.607" = type <{ %"struct.WTF::KeyValuePair.609"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.609" = type opaque
%"class.std::__1::unique_ptr.610" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.628", %"class.blink::CachedTextInputInfo", %"class.blink::Member.639", %"class.blink::Member.641", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.630", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.632", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.630" = type { %"class.blink::MemberBase.631" }
%"class.blink::MemberBase.631" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.632" = type { %"class.WTF::HashMap.635" }
%"class.WTF::HashMap.635" = type { %"class.WTF::HashTable.636" }
%"class.WTF::HashTable.636" = type <{ %"struct.WTF::KeyValuePair.638"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.638" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.111", %"class.blink::Member.1115", %"class.blink::Member.1117" }
%"class.blink::Member.1115" = type { %"class.blink::MemberBase.1116" }
%"class.blink::MemberBase.1116" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.111", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1111" }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::HeapHashMap.649"* }
%"class.blink::HeapHashMap.649" = type opaque
%"class.WTF::HashSet.655" = type { %"class.WTF::HashTable.656" }
%"class.WTF::HashTable.656" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.661" }
%"class.WTF::VectorBuffer.661" = type { %"class.WTF::VectorBufferBase.662" }
%"class.WTF::VectorBufferBase.662" = type { i64*, i32, i32 }
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.331", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.402", i32, i8, [3 x i8], %"class.blink::HeapVector.404", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.412", %"class.blink::Member.414", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.423", %"class.blink::Member.482", %"class.blink::Member.484", i8, [7 x i8] }>
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.677" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.61", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.63, %"class.WTF::Vector.64", %"class.WTF::Vector.64", %"class.blink::Member", %"class.blink::Member.69", %"class.blink::HeapHashSet", %"class.blink::Member.8", %"class.WTF::HashSet.77", %"class.WTF::TextPosition", %"class.blink::Member.81", %"class.blink::HeapVector.83", %"class.blink::Member.90" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.63 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.71" }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.75" }
%"class.WTF::HashTable.75" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.83" = type { %"class.WTF::Vector.86" }
%"class.WTF::Vector.86" = type { %"class.WTF::VectorBuffer.87" }
%"class.WTF::VectorBuffer.87" = type { %"class.WTF::VectorBufferBase.88" }
%"class.WTF::VectorBufferBase.88" = type { %"class.blink::Member.69"*, i32, i32 }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.688" = type { %"class.WTF::VectorBuffer.689" }
%"class.WTF::VectorBuffer.689" = type { %"class.WTF::VectorBufferBase.690" }
%"class.WTF::VectorBufferBase.690" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.691 }
%class.scoped_refptr.691 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.8", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.891" }
%"class.blink::HeapHashMap.891" = type { %"class.WTF::HashMap.894" }
%"class.WTF::HashMap.894" = type { %"class.WTF::HashTable.895" }
%"class.WTF::HashTable.895" = type <{ %"struct.WTF::KeyValuePair.897"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.897" = type opaque
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.900" = type { %"class.WTF::HashSet.903" }
%"class.WTF::HashSet.903" = type { %"class.WTF::HashTable.904" }
%"class.WTF::HashTable.904" = type <{ %"class.blink::WeakMember.906"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.906" = type opaque
%"class.blink::HeapHashSet.907" = type { %"class.WTF::HashSet.910" }
%"class.WTF::HashSet.910" = type { %"class.WTF::HashTable.911" }
%"class.WTF::HashTable.911" = type <{ %"class.blink::WeakMember.913"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.913" = type opaque
%"class.blink::Member.914" = type { %"class.blink::MemberBase.915" }
%"class.blink::MemberBase.915" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.53" }
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.924" = type { %"class.WTF::HashMap.927" }
%"class.WTF::HashMap.927" = type { %"class.WTF::HashTable.928" }
%"class.WTF::HashTable.928" = type <{ %"struct.WTF::KeyValuePair.930"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.930" = type opaque
%"class.WTF::Vector.931" = type { %"class.WTF::VectorBuffer.932" }
%"class.WTF::VectorBuffer.932" = type { %"class.WTF::VectorBufferBase.933" }
%"class.WTF::VectorBufferBase.933" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.944" = type { %"class.WTF::Vector.947" }
%"class.WTF::Vector.947" = type { %"class.WTF::VectorBuffer.948" }
%"class.WTF::VectorBuffer.948" = type { %"class.WTF::VectorBufferBase.949" }
%"class.WTF::VectorBufferBase.949" = type { %"class.blink::Member.950"*, i32, i32 }
%"class.blink::Member.950" = type opaque
%"class.std::__1::unique_ptr.952" = type { %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.958" = type { %"class.WTF::HashSet.961" }
%"class.WTF::HashSet.961" = type { %"class.WTF::HashTable.962" }
%"class.WTF::HashTable.962" = type <{ %"class.blink::WeakMember.964"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.964" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.965", i32, [4 x i8] }>
%"class.WTF::Vector.965" = type { %"class.WTF::VectorBuffer.966" }
%"class.WTF::VectorBuffer.966" = type { %"class.WTF::VectorBufferBase.967" }
%"class.WTF::VectorBufferBase.967" = type { %"struct.std::__1::pair.968"*, i32, i32 }
%"struct.std::__1::pair.968" = type opaque
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.973" = type { %"class.WTF::VectorBuffer.974" }
%"class.WTF::VectorBuffer.974" = type { %"class.WTF::VectorBufferBase.975" }
%"class.WTF::VectorBufferBase.975" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.984" = type { %"class.WTF::Vector.987" }
%"class.WTF::Vector.987" = type { %"class.WTF::VectorBuffer.988" }
%"class.WTF::VectorBuffer.988" = type { %"class.WTF::VectorBufferBase.989" }
%"class.WTF::VectorBufferBase.989" = type { %"class.blink::Member.990"*, i32, i32 }
%"class.blink::Member.990" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.996" = type { %"class.blink::MemberBase.997" }
%"class.blink::MemberBase.997" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1002" = type { %"class.WTF::HashTable.1003" }
%"class.WTF::HashTable.1003" = type <{ %"struct.WTF::KeyValuePair.1006"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1006" = type opaque
%"class.blink::Member.1007" = type { %"class.blink::MemberBase.1008" }
%"class.blink::MemberBase.1008" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1009" = type { %"class.blink::MemberBase.1010" }
%"class.blink::MemberBase.1010" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1011" = type { %"class.blink::MemberBase.1012" }
%"class.blink::MemberBase.1012" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1013" = type { %"class.blink::MemberBase.1014" }
%"class.blink::MemberBase.1014" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.890", { i64, i64 } }
%"class.blink::WeakMember.890" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.1015" = type { %"class.WTF::HashSet.1018" }
%"class.WTF::HashSet.1018" = type { %"class.WTF::HashTable.1019" }
%"class.WTF::HashTable.1019" = type <{ %"class.blink::Member.1021"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1021" = type opaque
%"class.blink::Member.1022" = type { %"class.blink::MemberBase.1023" }
%"class.blink::MemberBase.1023" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1024" = type { %"class.blink::MemberBase.1025" }
%"class.blink::MemberBase.1025" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1026" = type { %"class.blink::MemberBase.1027" }
%"class.blink::MemberBase.1027" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1032" = type { %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1038" = type { %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1040" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1046" = type { %"class.blink::MemberBase.1047" }
%"class.blink::MemberBase.1047" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1052" = type { %"class.WTF::HashMap.1055" }
%"class.WTF::HashMap.1055" = type { %"class.WTF::HashTable.1056" }
%"class.WTF::HashTable.1056" = type <{ %"struct.WTF::KeyValuePair.1058"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1058" = type opaque
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1071" = type { %"class.WTF::HashMap.1074" }
%"class.WTF::HashMap.1074" = type { %"class.WTF::HashTable.1075" }
%"class.WTF::HashTable.1075" = type <{ %"struct.WTF::KeyValuePair.1077"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1077" = type opaque
%"class.blink::HeapObserverSet.1078" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1079" }
%"class.blink::HeapHashSet.1079" = type { %"class.WTF::HashSet.1082" }
%"class.WTF::HashSet.1082" = type { %"class.WTF::HashTable.1083" }
%"class.WTF::HashTable.1083" = type <{ %"class.blink::WeakMember.1085"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1085" = type opaque
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.1095", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1102", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1095" = type { %"class.WTF::HashSet.1098" }
%"class.WTF::HashSet.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"class.blink::Member.1101"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1101" = type opaque
%"class.blink::HeapTaskRunnerTimer.1102" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1103", { i64, i64 } }
%"class.blink::WeakMember.1103" = type { %"class.blink::MemberBase.1089" }
%"class.blink::WeakMember.1090" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapHashMap.50"* }
%"class.blink::HeapHashMap.50" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.33", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.33" = type { %"class.base::RefCounted.34" }
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1199" = type { %"class.blink::MemberBase.1200" }
%"class.blink::MemberBase.1200" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1201" = type { %"class.blink::MemberBase.1202" }
%"class.blink::MemberBase.1202" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%class.scoped_refptr.1423 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1437" = type { %"class.blink::MemberBase.1438" }
%"class.blink::MemberBase.1438" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1439" = type { %"class.blink::MemberBase.1440" }
%"class.blink::MemberBase.1440" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1441" = type { %"class.blink::MemberBase.1442" }
%"class.blink::MemberBase.1442" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1443" = type { %"class.blink::MemberBase.1444" }
%"class.blink::MemberBase.1444" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1447" = type { %"class.blink::Member.1448" }
%"class.blink::Member.1448" = type { %"class.blink::MemberBase.1449" }
%"class.blink::MemberBase.1449" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2138" }
%"class.mojo::Remote.2138" = type { %"class.mojo::internal::InterfacePtrState.2139" }
%"class.mojo::internal::InterfacePtrState.2139" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2140" }
%"class.std::__1::unique_ptr.2140" = type { %"class.std::__1::__compressed_pair.2141" }
%"class.std::__1::__compressed_pair.2141" = type { %"struct.std::__1::__compressed_pair_elem.2142" }
%"struct.std::__1::__compressed_pair_elem.2142" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1450" = type { %"class.std::__1::__compressed_pair.1451" }
%"class.std::__1::__compressed_pair.1451" = type { %"struct.std::__1::__compressed_pair_elem.1452" }
%"struct.std::__1::__compressed_pair_elem.1452" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1456" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1457" = type { %"class.std::__1::__compressed_pair.1458" }
%"class.std::__1::__compressed_pair.1458" = type { %"struct.std::__1::__compressed_pair_elem.1459" }
%"struct.std::__1::__compressed_pair_elem.1459" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1144" = type { %"class.absl::optional_internal::optional_data.1145" }
%"class.absl::optional_internal::optional_data.1145" = type { %"class.absl::optional_internal::optional_data_base.1146" }
%"class.absl::optional_internal::optional_data_base.1146" = type { %"class.absl::optional_internal::optional_data_dtor_base.1147" }
%"class.absl::optional_internal::optional_data_dtor_base.1147" = type { i8, %union.anon.1148 }
%union.anon.1148 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1463" = type { %"class.std::__1::__compressed_pair.1464" }
%"class.std::__1::__compressed_pair.1464" = type { %"struct.std::__1::__compressed_pair_elem.1465" }
%"struct.std::__1::__compressed_pair_elem.1465" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1469" }
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1470" }
%"class.blink::MemberBase.1470" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2148" }
%"class.mojo::AssociatedRemote.2148" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2149" }
%"class.mojo::internal::AssociatedInterfacePtrState.2149" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2150" }
%"class.std::__1::unique_ptr.2150" = type { %"class.std::__1::__compressed_pair.2151" }
%"class.std::__1::__compressed_pair.2151" = type { %"struct.std::__1::__compressed_pair_elem.2152" }
%"struct.std::__1::__compressed_pair_elem.2152" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1471" = type { %"class.blink::Member.1472" }
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2158" }
%"class.mojo::AssociatedRemote.2158" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2159" }
%"class.mojo::internal::AssociatedInterfacePtrState.2159" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2160" }
%"class.std::__1::unique_ptr.2160" = type { %"class.std::__1::__compressed_pair.2161" }
%"class.std::__1::__compressed_pair.2161" = type { %"struct.std::__1::__compressed_pair_elem.2162" }
%"struct.std::__1::__compressed_pair_elem.2162" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1474" }
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2168", %"class.blink::Member.628", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2168" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2169" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.273" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2169" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1476" = type { %"class.blink::Member.1477" }
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2172", %"class.blink::Member.628", %"class.mojo::AssociatedReceiver.2173" }
%"class.blink::ThreadState::PrefinalizerRegistration.2172" = type { i8 }
%"class.mojo::AssociatedReceiver.2173" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2174" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2174" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1479" }
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2177", %"class.blink::Member.628", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2177" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.150, %"class.std::__1::unique_ptr.273", %"class.base::WeakPtrFactory.2178" }
%"class.base::WeakPtrFactory.2178" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1481" = type { %"class.blink::Member.1482" }
%"class.blink::Member.1482" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2181", %"class.blink::Member.628", %"class.mojo::AssociatedReceiver.2182" }
%"class.blink::ThreadState::PrefinalizerRegistration.2181" = type { i8 }
%"class.mojo::AssociatedReceiver.2182" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2183" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2183" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1484" = type { %"class.blink::MemberBase.1485" }
%"class.blink::MemberBase.1485" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1486" = type { %"class.blink::MemberBase.1487" }
%"class.blink::MemberBase.1487" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1488" = type { %"class.blink::MemberBase.1489" }
%"class.blink::MemberBase.1489" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1490" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::HeapHashMap.1492"* }
%"class.blink::HeapHashMap.1492" = type opaque
%"class.mojo::StructPtr.1493" = type { %"class.std::__1::unique_ptr.1494" }
%"class.std::__1::unique_ptr.1494" = type { %"class.std::__1::__compressed_pair.1495" }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.1496" }
%"struct.std::__1::__compressed_pair_elem.1496" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1497", %"class.mojo::InlinedStructPtr.1498" }
%"class.mojo::InlinedStructPtr.1497" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1498" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1502" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1504" = type { %"class.absl::optional_internal::optional_data.1505" }
%"class.absl::optional_internal::optional_data.1505" = type { %"class.absl::optional_internal::optional_data_base.1506" }
%"class.absl::optional_internal::optional_data_base.1506" = type { %"class.absl::optional_internal::optional_data_dtor_base.1507" }
%"class.absl::optional_internal::optional_data_dtor_base.1507" = type { i8, %union.anon.1508 }
%union.anon.1508 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.650" = type { %"class.WTF::VectorBuffer.651" }
%"class.WTF::VectorBuffer.651" = type { %"class.WTF::VectorBufferBase.652" }
%"class.WTF::VectorBufferBase.652" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1430" = type { %"class.WTF::HashMap.1433" }
%"class.WTF::HashMap.1433" = type { %"class.WTF::HashTable.1434" }
%"class.WTF::HashTable.1434" = type <{ %"struct.WTF::KeyValuePair.1436"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1436" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1214" = type { %"class.WTF::ListHashSet.base.1224", [7 x i8] }
%"class.WTF::ListHashSet.base.1224" = type <{ %"class.WTF::HashTable.1219", %"class.blink::Member.1221", %"class.blink::Member.1221", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1219" = type <{ %"class.blink::Member.1221"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::HeapListHashSetNode.1223"* }
%"class.blink::HeapListHashSetNode.1223" = type { %"class.blink::Member.1693", %"class.blink::Member.1221", %"class.blink::Member.1221" }
%"class.blink::Member.1693" = type { %"class.blink::MemberBase.1694" }
%"class.blink::MemberBase.1694" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1225" = type { %"class.WTF::ListHashSet.base.1235", [7 x i8] }
%"class.WTF::ListHashSet.base.1235" = type <{ %"class.WTF::HashTable.1230", %"class.blink::Member.1232", %"class.blink::Member.1232", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1230" = type <{ %"class.blink::Member.1232"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::HeapListHashSetNode.1234"* }
%"class.blink::HeapListHashSetNode.1234" = type { %"class.blink::Member.1689", %"class.blink::Member.1232", %"class.blink::Member.1232" }
%"class.blink::Member.1689" = type { %"class.blink::MemberBase.1690" }
%"class.blink::MemberBase.1690" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1236" = type { %"class.WTF::ListHashSet.base.1246", [7 x i8] }
%"class.WTF::ListHashSet.base.1246" = type <{ %"class.WTF::HashTable.1241", %"class.blink::Member.1243", %"class.blink::Member.1243", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1241" = type <{ %"class.blink::Member.1243"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1243" = type { %"class.blink::MemberBase.1244" }
%"class.blink::MemberBase.1244" = type { %"class.blink::HeapListHashSetNode.1245"* }
%"class.blink::HeapListHashSetNode.1245" = type { %"class.blink::Member.1685", %"class.blink::Member.1243", %"class.blink::Member.1243" }
%"class.blink::Member.1685" = type { %"class.blink::MemberBase.1686" }
%"class.blink::MemberBase.1686" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1247" = type { %"class.WTF::ListHashSet.base.1257", [7 x i8] }
%"class.WTF::ListHashSet.base.1257" = type <{ %"class.WTF::HashTable.1252", %"class.blink::Member.1254", %"class.blink::Member.1254", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1252" = type <{ %"class.blink::Member.1254"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1254" = type { %"class.blink::MemberBase.1255" }
%"class.blink::MemberBase.1255" = type { %"class.blink::HeapListHashSetNode.1256"* }
%"class.blink::HeapListHashSetNode.1256" = type { %"class.blink::Member.1681", %"class.blink::Member.1254", %"class.blink::Member.1254" }
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1258" = type { %"class.WTF::ListHashSet.base.1268", [7 x i8] }
%"class.WTF::ListHashSet.base.1268" = type <{ %"class.WTF::HashTable.1263", %"class.blink::Member.1265", %"class.blink::Member.1265", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1263" = type <{ %"class.blink::Member.1265"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::HeapListHashSetNode.1267"* }
%"class.blink::HeapListHashSetNode.1267" = type { %"class.blink::Member.1677", %"class.blink::Member.1265", %"class.blink::Member.1265" }
%"class.blink::Member.1677" = type { %"class.blink::MemberBase.1678" }
%"class.blink::MemberBase.1678" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1269" = type { %"class.WTF::ListHashSet.base.1279", [7 x i8] }
%"class.WTF::ListHashSet.base.1279" = type <{ %"class.WTF::HashTable.1274", %"class.blink::Member.1276", %"class.blink::Member.1276", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1274" = type <{ %"class.blink::Member.1276"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1276" = type { %"class.blink::MemberBase.1277" }
%"class.blink::MemberBase.1277" = type { %"class.blink::HeapListHashSetNode.1278"* }
%"class.blink::HeapListHashSetNode.1278" = type { %"class.blink::Member.1590", %"class.blink::Member.1276", %"class.blink::Member.1276" }
%"class.blink::HeapListHashSet.1280" = type { %"class.WTF::ListHashSet.base.1290", [7 x i8] }
%"class.WTF::ListHashSet.base.1290" = type <{ %"class.WTF::HashTable.1285", %"class.blink::Member.1287", %"class.blink::Member.1287", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1285" = type <{ %"class.blink::Member.1287"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1287" = type { %"class.blink::MemberBase.1288" }
%"class.blink::MemberBase.1288" = type { %"class.blink::HeapListHashSetNode.1289"* }
%"class.blink::HeapListHashSetNode.1289" = type { %"class.blink::Member.1553", %"class.blink::Member.1287", %"class.blink::Member.1287" }
%"class.blink::Member.1553" = type { %"class.blink::MemberBase.1554" }
%"class.blink::MemberBase.1554" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::HeapListHashSet.1291" = type { %"class.WTF::ListHashSet.base.1301", [7 x i8] }
%"class.WTF::ListHashSet.base.1301" = type <{ %"class.WTF::HashTable.1296", %"class.blink::Member.1298", %"class.blink::Member.1298", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1296" = type <{ %"class.blink::Member.1298"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1298" = type { %"class.blink::MemberBase.1299" }
%"class.blink::MemberBase.1299" = type { %"class.blink::HeapListHashSetNode.1300"* }
%"class.blink::HeapListHashSetNode.1300" = type { %"class.blink::Member.1549", %"class.blink::Member.1298", %"class.blink::Member.1298" }
%"class.blink::Member.1549" = type { %"class.blink::MemberBase.1550" }
%"class.blink::MemberBase.1550" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1302" = type { %"class.WTF::ListHashSet.base.1312", [7 x i8] }
%"class.WTF::ListHashSet.base.1312" = type <{ %"class.WTF::HashTable.1307", %"class.blink::Member.1309", %"class.blink::Member.1309", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1307" = type <{ %"class.blink::Member.1309"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1309" = type { %"class.blink::MemberBase.1310" }
%"class.blink::MemberBase.1310" = type { %"class.blink::HeapListHashSetNode.1311"* }
%"class.blink::HeapListHashSetNode.1311" = type { %"class.blink::Member.1545", %"class.blink::Member.1309", %"class.blink::Member.1309" }
%"class.blink::Member.1545" = type { %"class.blink::MemberBase.1546" }
%"class.blink::MemberBase.1546" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1313" = type { %"class.WTF::ListHashSet.base.1323", [7 x i8] }
%"class.WTF::ListHashSet.base.1323" = type <{ %"class.WTF::HashTable.1318", %"class.blink::Member.1320", %"class.blink::Member.1320", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1318" = type <{ %"class.blink::Member.1320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::HeapListHashSetNode.1322"* }
%"class.blink::HeapListHashSetNode.1322" = type { %"class.blink::Member.1439", %"class.blink::Member.1320", %"class.blink::Member.1320" }
%"class.blink::HeapListHashSet.1324" = type { %"class.WTF::ListHashSet.base.1334", [7 x i8] }
%"class.WTF::ListHashSet.base.1334" = type <{ %"class.WTF::HashTable.1329", %"class.blink::Member.1331", %"class.blink::Member.1331", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1329" = type <{ %"class.blink::Member.1331"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1331" = type { %"class.blink::MemberBase.1332" }
%"class.blink::MemberBase.1332" = type { %"class.blink::HeapListHashSetNode.1333"* }
%"class.blink::HeapListHashSetNode.1333" = type { %"class.blink::Member.1539", %"class.blink::Member.1331", %"class.blink::Member.1331" }
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1335" = type { %"class.WTF::ListHashSet.base.1345", [7 x i8] }
%"class.WTF::ListHashSet.base.1345" = type <{ %"class.WTF::HashTable.1340", %"class.blink::Member.1342", %"class.blink::Member.1342", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1340" = type <{ %"class.blink::Member.1342"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::HeapListHashSetNode.1344"* }
%"class.blink::HeapListHashSetNode.1344" = type { %"class.blink::Member.1535", %"class.blink::Member.1342", %"class.blink::Member.1342" }
%"class.blink::Member.1535" = type { %"class.blink::MemberBase.1536" }
%"class.blink::MemberBase.1536" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1346" = type { %"class.WTF::ListHashSet.base.1356", [7 x i8] }
%"class.WTF::ListHashSet.base.1356" = type <{ %"class.WTF::HashTable.1351", %"class.blink::Member.1353", %"class.blink::Member.1353", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1351" = type <{ %"class.blink::Member.1353"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1353" = type { %"class.blink::MemberBase.1354" }
%"class.blink::MemberBase.1354" = type { %"class.blink::HeapListHashSetNode.1355"* }
%"class.blink::HeapListHashSetNode.1355" = type { %"class.blink::Member.1531", %"class.blink::Member.1353", %"class.blink::Member.1353" }
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1357" = type { %"class.WTF::ListHashSet.base.1367", [7 x i8] }
%"class.WTF::ListHashSet.base.1367" = type <{ %"class.WTF::HashTable.1362", %"class.blink::Member.1364", %"class.blink::Member.1364", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1362" = type <{ %"class.blink::Member.1364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1364" = type { %"class.blink::MemberBase.1365" }
%"class.blink::MemberBase.1365" = type { %"class.blink::HeapListHashSetNode.1366"* }
%"class.blink::HeapListHashSetNode.1366" = type { %"class.blink::Member.1527", %"class.blink::Member.1364", %"class.blink::Member.1364" }
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1368" = type { %"class.WTF::ListHashSet.base.1378", [7 x i8] }
%"class.WTF::ListHashSet.base.1378" = type <{ %"class.WTF::HashTable.1373", %"class.blink::Member.1375", %"class.blink::Member.1375", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1373" = type <{ %"class.blink::Member.1375"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::HeapListHashSetNode.1377"* }
%"class.blink::HeapListHashSetNode.1377" = type { %"class.blink::Member.1523", %"class.blink::Member.1375", %"class.blink::Member.1375" }
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1379" = type { %"class.WTF::ListHashSet.base.1389", [7 x i8] }
%"class.WTF::ListHashSet.base.1389" = type <{ %"class.WTF::HashTable.1384", %"class.blink::Member.1386", %"class.blink::Member.1386", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1384" = type <{ %"class.blink::Member.1386"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1386" = type { %"class.blink::MemberBase.1387" }
%"class.blink::MemberBase.1387" = type { %"class.blink::HeapListHashSetNode.1388"* }
%"class.blink::HeapListHashSetNode.1388" = type { %"class.blink::Member.1519", %"class.blink::Member.1386", %"class.blink::Member.1386" }
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1390" = type { %"class.WTF::ListHashSet.base.1400", [7 x i8] }
%"class.WTF::ListHashSet.base.1400" = type <{ %"class.WTF::HashTable.1395", %"class.blink::Member.1397", %"class.blink::Member.1397", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1395" = type <{ %"class.blink::Member.1397"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1397" = type { %"class.blink::MemberBase.1398" }
%"class.blink::MemberBase.1398" = type { %"class.blink::HeapListHashSetNode.1399"* }
%"class.blink::HeapListHashSetNode.1399" = type { %"class.blink::Member.1515", %"class.blink::Member.1397", %"class.blink::Member.1397" }
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1401" = type { %"class.WTF::ListHashSet.base.1411", [7 x i8] }
%"class.WTF::ListHashSet.base.1411" = type <{ %"class.WTF::HashTable.1406", %"class.blink::Member.1408", %"class.blink::Member.1408", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1406" = type <{ %"class.blink::Member.1408"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1408" = type { %"class.blink::MemberBase.1409" }
%"class.blink::MemberBase.1409" = type { %"class.blink::HeapListHashSetNode.1410"* }
%"class.blink::HeapListHashSetNode.1410" = type { %"class.blink::Member.1441", %"class.blink::Member.1408", %"class.blink::Member.1408" }
%"class.blink::HeapListHashSet.1412" = type { %"class.WTF::ListHashSet.base.1422", [7 x i8] }
%"class.WTF::ListHashSet.base.1422" = type <{ %"class.WTF::HashTable.1417", %"class.blink::Member.1419", %"class.blink::Member.1419", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type { %"class.blink::MemberBase.1420" }
%"class.blink::MemberBase.1420" = type { %"class.blink::HeapListHashSetNode.1421"* }
%"class.blink::HeapListHashSetNode.1421" = type { %"class.blink::Member.1424", %"class.blink::Member.1419", %"class.blink::Member.1419" }
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector.1557" }
%"class.WTF::Vector.1557" = type { %"class.WTF::VectorBuffer.1558" }
%"class.WTF::VectorBuffer.1558" = type { %"class.WTF::VectorBufferBase.1559" }
%"class.WTF::VectorBufferBase.1559" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr.1560", %"class.mojo::StructPtr.1560" }
%"class.mojo::StructPtr.1560" = type { %"class.std::__1::unique_ptr.1561" }
%"class.std::__1::unique_ptr.1561" = type { %"class.std::__1::__compressed_pair.1562" }
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap.1564" }
%"class.WTF::HashMap.1564" = type { %"class.WTF::HashTable.1565" }
%"class.WTF::HashTable.1565" = type <{ %"struct.WTF::KeyValuePair.1568"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1568" = type { %"class.WTF::String", %"class.absl::optional.1569" }
%"class.absl::optional.1569" = type { %"class.absl::optional_internal::optional_data.1570" }
%"class.absl::optional_internal::optional_data.1570" = type { %"class.absl::optional_internal::optional_data_base.1571" }
%"class.absl::optional_internal::optional_data_base.1571" = type { %"class.absl::optional_internal::optional_data_dtor_base.1572" }
%"class.absl::optional_internal::optional_data_dtor_base.1572" = type { i8, %union.anon.1573 }
%union.anon.1573 = type { %"class.WTF::Vector.1574" }
%"class.WTF::Vector.1574" = type { %"class.WTF::VectorBuffer.1575" }
%"class.WTF::VectorBuffer.1575" = type { %"class.WTF::VectorBufferBase.1576" }
%"class.WTF::VectorBufferBase.1576" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::protocol::DOMDebugger::Frontend"* }
%"class.blink::protocol::DOMDebugger::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::HeapHashMap.1661" = type { %"class.WTF::HashMap.1664" }
%"class.WTF::HashMap.1664" = type { %"class.WTF::HashTable.1665" }
%"class.WTF::HashTable.1665" = type <{ %"struct.WTF::KeyValuePair.1667"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1667" = type <{ %"class.blink::Member", i32, [4 x i8] }>
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.blink::InspectorAgentState::MapField" = type { %"class.blink::InspectorAgentState::Field", i8, [7 x i8], %"class.WTF::HashMap.1668" }
%"class.WTF::HashMap.1668" = type { %"class.WTF::HashTable.1669" }
%"class.WTF::HashTable.1669" = type <{ %"struct.WTF::KeyValuePair.1672"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1672" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::InspectorDOMAgent" = type { %"class.blink::InspectorBaseAgent.1592", %"class.v8::Isolate"*, %"class.blink::Member.1599", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashSet.1601", %"class.blink::Member.1608", %"class.blink::HeapVector.1611", %"class.blink::HeapHashMap.1618", %"class.blink::HeapHashMap.1625", %"class.blink::HeapHashMap.1632", %"class.WTF::HashSet.1639", %"class.WTF::HashSet.1639", %"class.WTF::HashMap.1643", i32, %"class.blink::Member.8", %"class.blink::HeapHashMap.1648", %"class.blink::Member.1655", %"class.blink::Member.1657", %"class.blink::Member.1659", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent.1592" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOM::Backend", %"class.blink::Member.1203", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.1593" }
%"class.blink::protocol::DOM::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1593" = type { %"class.std::__1::__compressed_pair.1594" }
%"class.std::__1::__compressed_pair.1594" = type { %"struct.std::__1::__compressed_pair_elem.1595" }
%"struct.std::__1::__compressed_pair_elem.1595" = type { %"class.blink::protocol::DOM::Frontend"* }
%"class.blink::protocol::DOM::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::InspectedFrames"* }
%"class.blink::InspectedFrames" = type opaque
%"class.blink::HeapHashSet.1601" = type { %"class.WTF::HashSet.1604" }
%"class.WTF::HashSet.1604" = type { %"class.WTF::HashTable.1605" }
%"class.WTF::HashTable.1605" = type <{ %"class.blink::Member.1607"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1607" = type opaque
%"class.blink::Member.1608" = type { %"class.blink::MemberBase.1609" }
%"class.blink::MemberBase.1609" = type { %"class.blink::HeapHashMap.1610"* }
%"class.blink::HeapHashMap.1610" = type opaque
%"class.blink::HeapVector.1611" = type { %"class.WTF::Vector.1614" }
%"class.WTF::Vector.1614" = type { %"class.WTF::VectorBuffer.1615" }
%"class.WTF::VectorBuffer.1615" = type { %"class.WTF::VectorBufferBase.1616" }
%"class.WTF::VectorBufferBase.1616" = type { %"class.blink::Member.1608"*, i32, i32 }
%"class.blink::HeapHashMap.1618" = type { %"class.WTF::HashMap.1621" }
%"class.WTF::HashMap.1621" = type { %"class.WTF::HashTable.1622" }
%"class.WTF::HashTable.1622" = type <{ %"struct.WTF::KeyValuePair.1624"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1624" = type opaque
%"class.blink::HeapHashMap.1625" = type { %"class.WTF::HashMap.1628" }
%"class.WTF::HashMap.1628" = type { %"class.WTF::HashTable.1629" }
%"class.WTF::HashTable.1629" = type <{ %"struct.WTF::KeyValuePair.1631"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1631" = type opaque
%"class.blink::HeapHashMap.1632" = type { %"class.WTF::HashMap.1635" }
%"class.WTF::HashMap.1635" = type { %"class.WTF::HashTable.1636" }
%"class.WTF::HashTable.1636" = type <{ %"struct.WTF::KeyValuePair.1638"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1638" = type opaque
%"class.WTF::HashSet.1639" = type { %"class.WTF::HashTable.1640" }
%"class.WTF::HashTable.1640" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1643" = type { %"class.WTF::HashTable.1644" }
%"class.WTF::HashTable.1644" = type <{ %"struct.WTF::KeyValuePair.1647"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1647" = type opaque
%"class.blink::HeapHashMap.1648" = type { %"class.WTF::HashMap.1651" }
%"class.WTF::HashMap.1651" = type { %"class.WTF::HashTable.1652" }
%"class.WTF::HashTable.1652" = type <{ %"struct.WTF::KeyValuePair.1654"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1654" = type opaque
%"class.blink::Member.1655" = type { %"class.blink::MemberBase.1656" }
%"class.blink::MemberBase.1656" = type { %"class.blink::InspectorRevalidateDOMTask"* }
%"class.blink::InspectorRevalidateDOMTask" = type opaque
%"class.blink::Member.1657" = type { %"class.blink::MemberBase.1658" }
%"class.blink::MemberBase.1658" = type { %"class.blink::InspectorHistory"* }
%"class.blink::InspectorHistory" = type opaque
%"class.blink::Member.1659" = type { %"class.blink::MemberBase.1660" }
%"class.blink::MemberBase.1660" = type { %"class.blink::DOMEditor"* }
%"class.blink::DOMEditor" = type opaque
%"class.v8_inspector::V8InspectorSession" = type { i32 (...)** }
%"class.v8::Value" = type { i8 }
%"class.WTF::Vector.1985" = type { %"class.WTF::VectorBuffer.1986" }
%"class.WTF::VectorBuffer.1986" = type { %"class.WTF::VectorBufferBase.1987" }
%"class.WTF::VectorBufferBase.1987" = type { %"struct.blink::V8EventListenerInfo"*, i32, i32 }
%"struct.blink::V8EventListenerInfo" = type { %"class.WTF::AtomicString", i8, i8, i8, %"class.v8::Local.1988", %"class.v8::Local.1989", i64 }
%"class.v8::Local.1988" = type { %"class.v8::Object"* }
%"class.v8::Local.1989" = type { %"class.v8::Function"* }
%"class.v8::Function" = type { i8 }
%"class.WTF::Vector.1992" = type { %"class.WTF::VectorBuffer.1993" }
%"class.WTF::VectorBuffer.1993" = type { %"class.WTF::VectorBufferBase" }
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVector.1997" = type { %"class.WTF::Vector.2000" }
%"class.WTF::Vector.2000" = type { %"class.WTF::VectorBuffer.2001" }
%"class.WTF::VectorBuffer.2001" = type { %"class.WTF::VectorBufferBase.2002" }
%"class.WTF::VectorBufferBase.2002" = type { %"class.blink::Member"*, i32, i32 }
%"class.base::RepeatingCallback.2004" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.2222", %"class.WTF::HashMap.2222", %"class.WTF::HashMap.2227", %"class.std::__1::unique_ptr.2232", %"class.std::__1::unique_ptr.2274", %"class.blink::Persistent.2285", i8, i8, i8, %"class.WTF::Vector.100", %"class.std::__1::unique_ptr.2287", %"class.blink::Persistent.2293", %"class.blink::Persistent.2297", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.2204", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.2210", %"class.std::__1::unique_ptr.2216", i32, i32 }
%"class.std::__1::unique_ptr.2204" = type { %"class.std::__1::__compressed_pair.2205" }
%"class.std::__1::__compressed_pair.2205" = type { %"struct.std::__1::__compressed_pair_elem.2206" }
%"struct.std::__1::__compressed_pair_elem.2206" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.2210" = type { %"class.std::__1::__compressed_pair.2211" }
%"class.std::__1::__compressed_pair.2211" = type { %"struct.std::__1::__compressed_pair_elem.2212" }
%"struct.std::__1::__compressed_pair_elem.2212" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.2216" = type { %"class.std::__1::__compressed_pair.2217" }
%"class.std::__1::__compressed_pair.2217" = type { %"struct.std::__1::__compressed_pair_elem.2218" }
%"struct.std::__1::__compressed_pair_elem.2218" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.2222" = type { %"class.WTF::HashTable.2223" }
%"class.WTF::HashTable.2223" = type <{ %"struct.WTF::KeyValuePair.2226"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2226" = type opaque
%"class.WTF::HashMap.2227" = type { %"class.WTF::HashTable.2228" }
%"class.WTF::HashTable.2228" = type <{ %"struct.WTF::KeyValuePair.2231"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2231" = type opaque
%"class.std::__1::unique_ptr.2232" = type { %"class.std::__1::__compressed_pair.2233" }
%"class.std::__1::__compressed_pair.2233" = type { %"struct.std::__1::__compressed_pair_elem.2234" }
%"struct.std::__1::__compressed_pair_elem.2234" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.2240", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.2235", i8* }
%"class.WTF::HashMap.2235" = type { %"class.WTF::HashTable.2236" }
%"class.WTF::HashTable.2236" = type <{ %"struct.WTF::KeyValuePair.2239"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2239" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.2240" = type { %"class.v8::PersistentValueMapBase.2241" }
%"class.v8::PersistentValueMapBase.2241" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.2242", i8* }
%"class.WTF::HashMap.2242" = type { %"class.WTF::HashTable.2243" }
%"class.WTF::HashTable.2243" = type <{ %"struct.WTF::KeyValuePair.2246"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2246" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.2247", %"class.WTF::String", %"class.std::__1::unique_ptr.2249" }
%"class.WTF::RefCounted.2247" = type { %"class.base::RefCounted.2248" }
%"class.base::RefCounted.2248" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2249" = type { %"class.std::__1::__compressed_pair.2250" }
%"class.std::__1::__compressed_pair.2250" = type { %"struct.std::__1::__compressed_pair_elem.2251" }
%"struct.std::__1::__compressed_pair_elem.2251" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2252", %"class.std::__1::unique_ptr.2258", %"class.WTF::Vector.2264", i8, i32 }
%"class.std::__1::unique_ptr.2252" = type { %"class.std::__1::__compressed_pair.2253" }
%"class.std::__1::__compressed_pair.2253" = type { %"struct.std::__1::__compressed_pair_elem.2254" }
%"struct.std::__1::__compressed_pair_elem.2254" = type { %"class.WTF::Vector.1574"* }
%"class.std::__1::unique_ptr.2258" = type { %"class.std::__1::__compressed_pair.2259" }
%"class.std::__1::__compressed_pair.2259" = type { %"struct.std::__1::__compressed_pair_elem.2260" }
%"struct.std::__1::__compressed_pair_elem.2260" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.2264" = type { %"class.WTF::VectorBuffer.2265" }
%"class.WTF::VectorBuffer.2265" = type { %"class.WTF::VectorBufferBase.1576", [32 x i8] }
%"class.std::__1::unique_ptr.2274" = type { %"class.std::__1::__compressed_pair.2275" }
%"class.std::__1::__compressed_pair.2275" = type { %"struct.std::__1::__compressed_pair_elem.2276" }
%"struct.std::__1::__compressed_pair_elem.2276" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent", %"class.WTF::HashMap.2277" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.2277" = type { %"class.WTF::HashTable.2278" }
%"class.WTF::HashTable.2278" = type <{ %"struct.WTF::KeyValuePair.2281"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2281" = type opaque
%"class.blink::Persistent.2285" = type { %"class.blink::PersistentBase.2286" }
%"class.blink::PersistentBase.2286" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent.2314", %class.scoped_refptr.2317, %"class.blink::Member.2318", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2320" }
%"class.blink::ScopedPersistent.2314" = type { %"class.v8::Persistent.2315" }
%"class.v8::Persistent.2315" = type { %"class.v8::PersistentBase.2316" }
%"class.v8::PersistentBase.2316" = type { %"class.v8::Context"* }
%class.scoped_refptr.2317 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2318" = type { %"class.blink::MemberBase.2319" }
%"class.blink::MemberBase.2319" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2285" }
%"class.util::TokenType.2320" = type { %"class.base::StrongAlias.2321" }
%"class.base::StrongAlias.2321" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2287" = type { %"class.std::__1::__compressed_pair.2288" }
%"class.std::__1::__compressed_pair.2288" = type { %"struct.std::__1::__compressed_pair_elem.2289" }
%"struct.std::__1::__compressed_pair_elem.2289" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.2293" = type { %"class.blink::PersistentBase.2294" }
%"class.blink::PersistentBase.2294" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.2297" = type { %"class.blink::PersistentBase.2298" }
%"class.blink::PersistentBase.2298" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.2301", i64 }
%"class.blink::HeapVector.2301" = type { %"class.WTF::Vector.2304" }
%"class.WTF::Vector.2304" = type { %"class.WTF::VectorBuffer.2305" }
%"class.WTF::VectorBuffer.2305" = type { %"class.WTF::VectorBufferBase.2306" }
%"class.WTF::VectorBufferBase.2306" = type { %"struct.std::__1::pair.2307"*, i32, i32 }
%"struct.std::__1::pair.2307" = type { %"class.blink::UntracedMember", %"class.blink::Member.2309" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.2308" }
%"class.blink::MemberBase.2308" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2309" = type { %"class.blink::MemberBase.2310" }
%"class.blink::MemberBase.2310" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2089" }
%"class.std::__1::vector.2089" = type { %"class.std::__1::__vector_base.2090" }
%"class.std::__1::__vector_base.2090" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2091" }
%"class.std::__1::__compressed_pair.2091" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.WTF::StringAppend" = type { %"class.WTF::String", %"class.WTF::String" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringTypeAdapter.2197" = type { %"class.WTF::StringTypeAdapter.2198" }
%"class.WTF::StringTypeAdapter.2198" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.2194" = type { %"class.WTF::StringAppend.2096", i8* }
%"class.WTF::StringAppend.2096" = type { %"class.WTF::String", i8* }
%"class.WTF::StringAppend.2195" = type { %"class.WTF::StringAppend.2096", %"class.WTF::String" }
%"class.v8_inspector::StringView" = type { i8, i64, %union.anon.2051 }
%"class.blink::protocol::DictionaryValue" = type { %"class.blink::protocol::Value.base", [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::vector.2008" }
%"class.blink::protocol::Value.base" = type <{ %"class.crdtp::Serializable", i32 }>
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.2062" }
%"class.std::__1::__hash_table.2062" = type <{ %"class.std::__1::unique_ptr.2063", %"class.std::__1::__compressed_pair.2073", %"class.std::__1::__compressed_pair.2078", %"class.std::__1::__compressed_pair.2081", [4 x i8] }>
%"class.std::__1::unique_ptr.2063" = type { %"class.std::__1::__compressed_pair.2064" }
%"class.std::__1::__compressed_pair.2064" = type { %"struct.std::__1::__compressed_pair_elem.2065", %"struct.std::__1::__compressed_pair_elem.2067" }
%"struct.std::__1::__compressed_pair_elem.2065" = type { %"struct.std::__1::__hash_node_base.2066"** }
%"struct.std::__1::__hash_node_base.2066" = type { %"struct.std::__1::__hash_node_base.2066"* }
%"struct.std::__1::__compressed_pair_elem.2067" = type { %"class.std::__1::__bucket_list_deallocator.2068" }
%"class.std::__1::__bucket_list_deallocator.2068" = type { %"class.std::__1::__compressed_pair.2069" }
%"class.std::__1::__compressed_pair.2069" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::__compressed_pair.2073" = type { %"struct.std::__1::__compressed_pair_elem.2074" }
%"struct.std::__1::__compressed_pair_elem.2074" = type { %"struct.std::__1::__hash_node_base.2066" }
%"class.std::__1::__compressed_pair.2078" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::__compressed_pair.2081" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"class.std::__1::vector.2008" = type { %"class.std::__1::__vector_base.2009" }
%"class.std::__1::__vector_base.2009" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.2010" }
%"class.std::__1::__compressed_pair.2010" = type { %"struct.std::__1::__compressed_pair_elem.2011" }
%"struct.std::__1::__compressed_pair_elem.2011" = type { %"class.WTF::String"* }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.WTF::StringAppend.2095" = type { i8*, %"class.WTF::String" }
%"class.crdtp::detail::ValueMaybe.2032" = type { i8, i32 }
%"class.crdtp::detail::ValueMaybe.2044" = type { i8, i8 }
%"class.std::__1::unique_ptr.2018" = type { %"class.std::__1::__compressed_pair.2019" }
%"class.std::__1::__compressed_pair.2019" = type { %"struct.std::__1::__compressed_pair_elem.2020" }
%"struct.std::__1::__compressed_pair_elem.2020" = type { %"class.std::__1::vector.2021"* }
%"class.std::__1::vector.2021" = type { %"class.std::__1::__vector_base.2022" }
%"class.std::__1::__vector_base.2022" = type { %"class.std::__1::unique_ptr.2023"*, %"class.std::__1::unique_ptr.2023"*, %"class.std::__1::__compressed_pair.2036" }
%"class.std::__1::unique_ptr.2023" = type { %"class.std::__1::__compressed_pair.2024" }
%"class.std::__1::__compressed_pair.2024" = type { %"struct.std::__1::__compressed_pair_elem.2025" }
%"struct.std::__1::__compressed_pair_elem.2025" = type { %"class.blink::protocol::DOMDebugger::EventListener"* }
%"class.blink::protocol::DOMDebugger::EventListener" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", i8, i8, i8, %"class.WTF::String", i32, i32, %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::ValueMaybe.2032" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.2026" }
%"class.std::__1::unique_ptr.2026" = type { %"class.std::__1::__compressed_pair.2027" }
%"class.std::__1::__compressed_pair.2027" = type { %"struct.std::__1::__compressed_pair_elem.2028" }
%"struct.std::__1::__compressed_pair_elem.2028" = type { %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* }
%"class.v8_inspector::protocol::Runtime::API::RemoteObject" = type { %"class.v8_inspector::protocol::Exported" }
%"class.v8_inspector::protocol::Exported" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.2036" = type { %"struct.std::__1::__compressed_pair_elem.2037" }
%"struct.std::__1::__compressed_pair_elem.2037" = type { %"class.std::__1::unique_ptr.2023"* }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.v8::Local.1996" = type { %"class.v8::Context"* }
%"class.std::__1::unique_ptr.2045" = type { %"class.std::__1::__compressed_pair.2046" }
%"class.std::__1::__compressed_pair.2046" = type { %"struct.std::__1::__compressed_pair_elem.2047" }
%"struct.std::__1::__compressed_pair_elem.2047" = type { %"class.v8_inspector::StringBuffer"* }
%"class.v8_inspector::StringBuffer" = type { i32 (...)** }
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2196" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::probe::ExecuteScript" = type <{ %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, i32, [4 x i8] }>
%"class.blink::probe::ProbeBase" = type { %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::probe::UserCallback" = type { %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::ExecutionContext"*, i8*, %"class.WTF::AtomicString"*, i8, %"class.blink::EventTarget"* }
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.2097", %"class.std::__1::vector.2105" }
%"class.std::__1::vector.2097" = type { %"class.std::__1::__vector_base.2098" }
%"class.std::__1::__vector_base.2098" = type { %"struct.std::__1::pair.2099"*, %"struct.std::__1::pair.2099"*, %"class.std::__1::__compressed_pair.2100" }
%"struct.std::__1::pair.2099" = type opaque
%"class.std::__1::__compressed_pair.2100" = type { %"struct.std::__1::__compressed_pair_elem.2101" }
%"struct.std::__1::__compressed_pair_elem.2101" = type { %"struct.std::__1::pair.2099"* }
%"class.std::__1::vector.2105" = type { %"class.std::__1::__vector_base.2106" }
%"class.std::__1::__vector_base.2106" = type { %"struct.std::__1::pair.2107"*, %"struct.std::__1::pair.2107"*, %"class.std::__1::__compressed_pair.2108" }
%"struct.std::__1::pair.2107" = type opaque
%"class.std::__1::__compressed_pair.2108" = type { %"struct.std::__1::__compressed_pair_elem.2109" }
%"struct.std::__1::__compressed_pair_elem.2109" = type { %"struct.std::__1::pair.2107"* }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN3WTF6VectorIN5blink23RegisteredEventListenerELj1ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbED2Ev = comdat any

$_ZN5blink19InspectorAgentState5FieldD2Ev = comdat any

$_ZNK5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE5TraceEPNS_7VisitorE = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE = comdat any

$_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_ = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZNK5blink19InspectorAgentState8MapFieldIbE4KeysEv = comdat any

$_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE7DisposeEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE6DecodeEv = comdat any

$_ZN5blink19InspectorAgentState5FieldD0Ev = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEED2Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEED0Ev = comdat any

$_ZN5blink14InspectorAgent7RestoreEv = comdat any

$_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE7disableEv = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEED1Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEED0Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE7disableEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_EcvS1_Ev = comdat any

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink19V8EventListenerInfoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink19V8EventListenerInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19V8EventListenerInfoEEEmm = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbPN5blink4NodeEEJEEES6_E3RunEPNS0_13BindStateBaseES5_ = comdat any

$_ZN4base8internal9BindStateIPFbPN5blink4NodeEEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_ = comdat any

$_ZN5blink10TraceTraitINS_17InspectorDOMAgentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_jEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMDebugger13EventListenerENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZTVN5blink19InspectorAgentState8MapFieldIbEE = comdat any

$_ZTVN5blink19InspectorAgentState5FieldE = comdat any

$_ZTVN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEEE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink25InspectorDOMDebuggerAgentE = hidden unnamed_addr constant { [21 x i8*], [15 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorDOMDebuggerAgent"*)* @_ZN5blink25InspectorDOMDebuggerAgentD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorDOMDebuggerAgent"*)* @_ZN5blink25InspectorDOMDebuggerAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink25InspectorDOMDebuggerAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorDOMDebuggerAgent"*)* @_ZN5blink25InspectorDOMDebuggerAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink25InspectorDOMDebuggerAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*)* @_ZN5blink25InspectorDOMDebuggerAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.std::__1::vector.2008"*)* @_ZN5blink25InspectorDOMDebuggerAgent22setBreakOnCSPViolationENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, i32, %"class.WTF::String"*)* @_ZN5blink25InspectorDOMDebuggerAgent16setDOMBreakpointEiRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, i32, %"class.WTF::String"*)* @_ZN5blink25InspectorDOMDebuggerAgent19removeDOMBreakpointEiRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZN5blink25InspectorDOMDebuggerAgent26setEventListenerBreakpointERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZN5blink25InspectorDOMDebuggerAgent29removeEventListenerBreakpointERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"*)* @_ZN5blink25InspectorDOMDebuggerAgent28setInstrumentationBreakpointERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"*)* @_ZN5blink25InspectorDOMDebuggerAgent31removeInstrumentationBreakpointERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"*)* @_ZN5blink25InspectorDOMDebuggerAgent16setXHRBreakpointERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"*)* @_ZN5blink25InspectorDOMDebuggerAgent19removeXHRBreakpointERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.2032"*, %"class.crdtp::detail::ValueMaybe.2044"*, %"class.std::__1::unique_ptr.2018"*)* @_ZN5blink25InspectorDOMDebuggerAgent17getEventListenersERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEENS7_IbEEPNSt3__110unique_ptrINSA_6vectorINSB_INS_8protocol11DOMDebugger13EventListenerENSA_14default_deleteISF_EEEENSA_9allocatorISI_EEEENSG_ISL_EEEE to i8*)], [15 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorDOMDebuggerAgent"*)* @_ZThn8_N5blink25InspectorDOMDebuggerAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorDOMDebuggerAgent"*)* @_ZThn8_N5blink25InspectorDOMDebuggerAgentD0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.2032"*, %"class.crdtp::detail::ValueMaybe.2044"*, %"class.std::__1::unique_ptr.2018"*)* @_ZThn8_N5blink25InspectorDOMDebuggerAgent17getEventListenersERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEENS7_IbEEPNSt3__110unique_ptrINSA_6vectorINSB_INS_8protocol11DOMDebugger13EventListenerENSA_14default_deleteISF_EEEENSA_9allocatorISI_EEEENSG_ISL_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, i32, %"class.WTF::String"*)* @_ZThn8_N5blink25InspectorDOMDebuggerAgent19removeDOMBreakpointEiRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZThn8_N5blink25InspectorDOMDebuggerAgent29removeEventListenerBreakpointERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"*)* @_ZThn8_N5blink25InspectorDOMDebuggerAgent31removeInstrumentationBreakpointERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"*)* @_ZThn8_N5blink25InspectorDOMDebuggerAgent19removeXHRBreakpointERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.std::__1::vector.2008"*)* @_ZThn8_N5blink25InspectorDOMDebuggerAgent22setBreakOnCSPViolationENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, i32, %"class.WTF::String"*)* @_ZThn8_N5blink25InspectorDOMDebuggerAgent16setDOMBreakpointEiRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZThn8_N5blink25InspectorDOMDebuggerAgent26setEventListenerBreakpointERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"*)* @_ZThn8_N5blink25InspectorDOMDebuggerAgent28setInstrumentationBreakpointERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"*)* @_ZThn8_N5blink25InspectorDOMDebuggerAgent16setXHRBreakpointERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorDOMDebuggerAgent"*)* @_ZThn8_N5blink25InspectorDOMDebuggerAgent7disableEv to i8*)] }, align 8
@_ZN12_GLOBAL__N_125listenerEventCategoryTypeE = internal constant [10 x i8] c"listener:\00", align 1
@_ZN12_GLOBAL__N_132instrumentationEventCategoryTypeE = internal constant [17 x i8] c"instrumentation:\00", align 16
@.str = private unnamed_addr constant [20 x i8] c"Event name is empty\00", align 1
@_ZN5blink8protocol11DOMDebugger20CSPViolationTypeEnum24TrustedtypeSinkViolationE = external constant [0 x i8], align 1
@_ZN5blink8protocol11DOMDebugger20CSPViolationTypeEnum26TrustedtypePolicyViolationE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"Invalid violation type\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"targetNodeId\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"insertion\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"nodeId\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@_ZN12v8_inspector8protocol8Debugger3API6Paused10ReasonEnum3DOME = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol8Debugger3API6Paused10ReasonEnum13EventListenerE = external local_unnamed_addr global i8*, align 8
@.str.6 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"eventName\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"targetName\00", align 1
@_ZN12_GLOBAL__N_125kWebglErrorFiredEventNameE = internal constant [16 x i8] c"webglErrorFired\00", align 16
@_ZN12_GLOBAL__N_123kWebglErrorNamePropertyE = internal constant [15 x i8] c"webglErrorName\00", align 1
@_ZN12_GLOBAL__N_127kWebglWarningFiredEventNameE = internal constant [18 x i8] c"webglWarningFired\00", align 16
@.str.9 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@_ZN12_GLOBAL__N_128kScriptBlockedByCSPEventNameE = internal constant [19 x i8] c"scriptBlockedByCSP\00", align 16
@.str.10 = private unnamed_addr constant [14 x i8] c"directiveText\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"scriptFirstStatement\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c".callback\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.13 = private unnamed_addr constant [14 x i8] c"breakpointURL\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@_ZN12v8_inspector8protocol8Debugger3API6Paused10ReasonEnum3XHRE = external local_unnamed_addr global i8*, align 8
@_ZN12_GLOBAL__N_130kCanvasContextCreatedEventNameE = internal constant [21 x i8] c"canvasContextCreated\00", align 16
@_ZN12_GLOBAL__N_129kAudioContextCreatedEventNameE = internal constant [20 x i8] c"audioContextCreated\00", align 16
@_ZN12_GLOBAL__N_128kAudioContextClosedEventNameE = internal constant [19 x i8] c"audioContextClosed\00", align 16
@_ZN12_GLOBAL__N_129kAudioContextResumedEventNameE = internal constant [20 x i8] c"audioContextResumed\00", align 16
@_ZN12_GLOBAL__N_131kAudioContextSuspendedEventNameE = internal constant [22 x i8] c"audioContextSuspended\00", align 16
@.str.15 = private unnamed_addr constant [14 x i8] c"violationType\00", align 1
@__const._ZN5blink25InspectorDOMDebuggerAgent32OnContentSecurityPolicyViolationENS_21ContentSecurityPolicy34ContentSecurityPolicyViolationTypeE.json_view = private unnamed_addr constant { i8, [7 x i8], i64, %union.anon.2051 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206, %union.anon.2051 { i8* inttoptr (i64 -6148914691236517206 to i8*) } }, align 8
@_ZN12v8_inspector8protocol8Debugger3API6Paused10ReasonEnum12CSPViolationE = external local_unnamed_addr global i8*, align 8
@_ZTVN5blink19InspectorAgentState8MapFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIbED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@_ZTVN5blink19InspectorAgentState5FieldE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.16 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.17 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEbEEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, bool>]\00", align 1
@_ZTVN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [15 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE7disableEv to i8*)], [15 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEED1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE7disableEv to i8*)] }, comdat, align 8
@.str.18 = private unnamed_addr constant [3 x i8] c"$$\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.20 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"subtree-modified\00", align 1
@.str.23 = private unnamed_addr constant [19 x i8] c"attribute-modified\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"node-removed\00", align 1
@.str.25 = private unnamed_addr constant [30 x i8] c"Unknown DOM breakpoint type: \00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink8protocol11DOMDebugger13EventListenerE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.27 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.28 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.29 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.30 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.31 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19V8EventListenerInfoEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::V8EventListenerInfo]\00", align 1
@_ZN5blink6V8Node18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink13V8EventTarget18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@_ZN5blink8protocol11DOMDebugger8Metainfo10domainNameE = external constant [0 x i8], align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.32 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.33 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.35 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.36 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.37 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.38 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

@_ZN5blink25InspectorDOMDebuggerAgentC1EPN2v87IsolateEPNS_17InspectorDOMAgentEPN12v8_inspector18V8InspectorSessionE = hidden unnamed_addr alias void (%"class.blink::InspectorDOMDebuggerAgent"*, %"class.v8::Isolate"*, %"class.blink::InspectorDOMAgent"*, %"class.v8_inspector::V8InspectorSession"*), void (%"class.blink::InspectorDOMDebuggerAgent"*, %"class.v8::Isolate"*, %"class.blink::InspectorDOMAgent"*, %"class.v8_inspector::V8InspectorSession"*)* @_ZN5blink25InspectorDOMDebuggerAgentC2EPN2v87IsolateEPNS_17InspectorDOMAgentEPN12v8_inspector18V8InspectorSessionE
@_ZN5blink25InspectorDOMDebuggerAgentD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorDOMDebuggerAgent"*), void (%"class.blink::InspectorDOMDebuggerAgent"*)* @_ZN5blink25InspectorDOMDebuggerAgentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent21CollectEventListenersEPN2v87IsolateEPNS_11EventTargetENS1_5LocalINS1_5ValueEEEPNS_4NodeEbPN3WTF6VectorINS_19V8EventListenerInfoELj0ENSB_18PartitionAllocatorEEE(%"class.v8::Isolate"*, %"class.blink::EventTarget"*, %"class.v8::Value"* nocapture readnone, %"class.blink::Node"*, i1 zeroext, %"class.WTF::Vector.1985"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::Vector.1992", align 8
  %8 = alloca %"struct.blink::V8EventListenerInfo", align 8
  %9 = bitcast %"class.blink::EventTarget"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)***
  %10 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)**, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %10, i64 10
  %12 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %11, align 8
  %13 = tail call %"class.blink::ExecutionContext"* %12(%"class.blink::EventTarget"* %1) #13
  %14 = icmp eq %"class.blink::ExecutionContext"* %13, null
  br i1 %14, label %253, label %15

15:                                               ; preds = %6
  %16 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)**, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*** %9, align 8
  %17 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %16, i64 10
  %18 = load %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)*, %"class.blink::ExecutionContext"* (%"class.blink::EventTarget"*)** %17, align 8
  %19 = tail call %"class.blink::ExecutionContext"* %18(%"class.blink::EventTarget"* %1) #13
  %20 = bitcast %"class.WTF::Vector.1992"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.WTF::Vector.1992", %"class.WTF::Vector.1992"* %7, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.WTF::Vector.1992", %"class.WTF::Vector.1992"* %7, i64 0, i32 0, i32 0, i32 2
  %23 = bitcast %"class.WTF::Vector.1992"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  call void @_ZN5blink11EventTarget10EventTypesEv(%"class.WTF::Vector.1992"* nonnull sret %7, %"class.blink::EventTarget"* %1) #13
  %24 = load i32, i32* %22, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %42, label %26

26:                                               ; preds = %15
  %27 = icmp eq %"class.blink::Node"* %3, null
  %28 = bitcast %"struct.blink::V8EventListenerInfo"* %8 to i8*
  %29 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %8, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %8, i64 0, i32 2
  %32 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %8, i64 0, i32 3
  %33 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %8, i64 0, i32 4, i32 0
  %34 = bitcast %"class.v8::Object"** %33 to %"class.v8::Value"**
  %35 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %8, i64 0, i32 5, i32 0
  %36 = bitcast %"class.v8::Function"** %35 to %"class.v8::Value"**
  %37 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %8, i64 0, i32 6
  %38 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %5, i64 0, i32 0, i32 0, i32 2
  %39 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %5, i64 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %5, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.blink::V8EventListenerInfo"* %8 to i64*
  br label %79

42:                                               ; preds = %249, %15
  %43 = phi i32 [ 0, %15 ], [ %251, %249 ]
  %44 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %21, align 8
  %45 = icmp eq %"class.WTF::AtomicString"* %44, null
  br i1 %45, label %78, label %46, !prof !2

46:                                               ; preds = %42
  %47 = bitcast %"class.WTF::AtomicString"* %44 to i8*
  %48 = icmp eq i32 %43, 0
  br i1 %48, label %76, label %49, !prof !3

49:                                               ; preds = %46
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %44, i64 %50
  br label %52

52:                                               ; preds = %70, %49
  %53 = phi %"class.WTF::AtomicString"* [ %71, %70 ], [ %44, %49 ]
  %54 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #13
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %53, i64 1
  %72 = icmp eq %"class.WTF::AtomicString"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %22, align 4
  %74 = bitcast %"class.WTF::Vector.1992"* %7 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %73, %46
  %77 = phi i8* [ %75, %73 ], [ %47, %46 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %77) #13
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %21, align 8
  br label %78

78:                                               ; preds = %42, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #13
  br label %253

79:                                               ; preds = %26, %249
  %80 = phi i32 [ 0, %26 ], [ %250, %249 ]
  %81 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1992"* nonnull %7, i32 %80) #13
  %82 = call %"class.blink::HeapVector.123"* @_ZN5blink11EventTarget17GetEventListenersERKN3WTF12AtomicStringE(%"class.blink::EventTarget"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %81) #13
  %83 = icmp eq %"class.blink::HeapVector.123"* %82, null
  br i1 %83, label %249, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::HeapVector.123", %"class.blink::HeapVector.123"* %82, i64 0, i32 0
  %86 = getelementptr inbounds %"class.blink::HeapVector.123", %"class.blink::HeapVector.123"* %82, i64 0, i32 0, i32 0, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %249, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %81, i64 0, i32 0, i32 0, i32 0
  br label %91

91:                                               ; preds = %89, %245
  %92 = phi i32 [ 0, %89 ], [ %246, %245 ]
  %93 = call dereferenceable(16) %"class.blink::RegisteredEventListener"* @_ZN3WTF6VectorIN5blink23RegisteredEventListenerELj1ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.126"* %85, i32 %92)
  %94 = getelementptr inbounds %"class.blink::RegisteredEventListener", %"class.blink::RegisteredEventListener"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.blink::EventListener"*, %"class.blink::EventListener"** %94, align 8
  %96 = icmp eq %"class.blink::EventListener"* %95, null
  br i1 %96, label %245, label %97

97:                                               ; preds = %91
  %98 = bitcast %"class.blink::EventListener"* %95 to i1 (%"class.blink::EventListener"*)***
  %99 = load i1 (%"class.blink::EventListener"*)**, i1 (%"class.blink::EventListener"*)*** %98, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::EventListener"*)*, i1 (%"class.blink::EventListener"*)** %99, i64 10
  %101 = load i1 (%"class.blink::EventListener"*)*, i1 (%"class.blink::EventListener"*)** %100, align 8
  %102 = call zeroext i1 %101(%"class.blink::EventListener"* nonnull %95) #13
  %103 = bitcast %"class.blink::EventListener"* %95 to %"class.blink::JSBasedEventListener"*
  br i1 %102, label %104, label %245

104:                                              ; preds = %97
  %105 = bitcast %"class.blink::EventListener"* %95 to %"class.blink::DOMWrapperWorld"* (%"class.blink::JSBasedEventListener"*)***
  %106 = load %"class.blink::DOMWrapperWorld"* (%"class.blink::JSBasedEventListener"*)**, %"class.blink::DOMWrapperWorld"* (%"class.blink::JSBasedEventListener"*)*** %105, align 8
  %107 = getelementptr inbounds %"class.blink::DOMWrapperWorld"* (%"class.blink::JSBasedEventListener"*)*, %"class.blink::DOMWrapperWorld"* (%"class.blink::JSBasedEventListener"*)** %106, i64 20
  %108 = load %"class.blink::DOMWrapperWorld"* (%"class.blink::JSBasedEventListener"*)*, %"class.blink::DOMWrapperWorld"* (%"class.blink::JSBasedEventListener"*)** %107, align 8
  %109 = call dereferenceable(32) %"class.blink::DOMWrapperWorld"* %108(%"class.blink::JSBasedEventListener"* nonnull %103) #13
  %110 = call %"class.v8::Context"* @_ZN5blink11ToV8ContextEPNS_16ExecutionContextERNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"* %19, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %109) #13
  br i1 %4, label %124, label %111

111:                                              ; preds = %104
  %112 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #13
  %113 = icmp eq %"class.v8::Context"* %110, null
  %114 = icmp eq %"class.v8::Context"* %112, null
  %115 = or i1 %113, %114
  br i1 %115, label %122, label %116

116:                                              ; preds = %111
  %117 = bitcast %"class.v8::Context"* %112 to i64*
  %118 = bitcast %"class.v8::Context"* %110 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = load i64, i64* %117, align 8
  %121 = icmp eq i64 %119, %120
  br i1 %121, label %124, label %245

122:                                              ; preds = %111
  %123 = and i1 %113, %114
  br i1 %123, label %124, label %245

124:                                              ; preds = %116, %122, %104
  %125 = bitcast %"class.blink::EventListener"* %95 to %"class.v8::Value"* (%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"*)***
  %126 = load %"class.v8::Value"* (%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"*)**, %"class.v8::Value"* (%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"*)*** %125, align 8
  %127 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"*)** %126, i64 12
  %128 = load %"class.v8::Value"* (%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"*)** %127, align 8
  %129 = call %"class.v8::Value"* %128(%"class.blink::JSBasedEventListener"* nonnull %103, %"class.blink::EventTarget"* dereferenceable(16) %1) #13
  %130 = icmp eq %"class.v8::Value"* %129, null
  br i1 %130, label %245, label %131

131:                                              ; preds = %124
  %132 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %129) #13
  br i1 %132, label %133, label %245

133:                                              ; preds = %131
  %134 = load %"class.v8::Value"* (%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"*)**, %"class.v8::Value"* (%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"*)*** %125, align 8
  %135 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"*)** %134, i64 13
  %136 = load %"class.v8::Value"* (%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"*)*, %"class.v8::Value"* (%"class.blink::JSBasedEventListener"*, %"class.blink::EventTarget"*)** %135, align 8
  %137 = call %"class.v8::Value"* %136(%"class.blink::JSBasedEventListener"* nonnull %103, %"class.blink::EventTarget"* dereferenceable(16) %1) #13
  %138 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %137) #13
  br i1 %138, label %139, label %245

139:                                              ; preds = %133
  br i1 %27, label %147, label %140

140:                                              ; preds = %139
  %141 = call i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"* nonnull %3) #13
  br i1 %4, label %144, label %142

142:                                              ; preds = %140
  %143 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #13
  br label %144

144:                                              ; preds = %140, %142
  %145 = phi %"class.v8::Context"* [ %143, %142 ], [ %110, %140 ]
  %146 = call %"class.v8::Value"* @_ZN5blink11NodeV8ValueEN2v85LocalINS0_7ContextEEEPNS_4NodeE(%"class.v8::Context"* %145, %"class.blink::Node"* nonnull %3) #13
  br label %147

147:                                              ; preds = %139, %144
  %148 = phi i32 [ %141, %144 ], [ 0, %139 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #13
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %168, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %168

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = zext i32 %158 to i33
  %160 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %159, i33 1) #13
  %161 = extractvalue { i33, i1 } %160, 1
  %162 = extractvalue { i33, i1 } %160, 0
  %163 = icmp slt i33 %162, 0
  %164 = or i1 %161, %163
  br i1 %164, label %165, label %166, !prof !3

165:                                              ; preds = %156
  call void @llvm.trap() #13
  unreachable

166:                                              ; preds = %156
  %167 = trunc i33 %162 to i32
  store i32 %167, i32* %157, align 4
  br label %168

168:                                              ; preds = %147, %151, %166
  %169 = call dereferenceable(16) %"class.blink::RegisteredEventListener"* @_ZN3WTF6VectorIN5blink23RegisteredEventListenerELj1ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.126"* %85, i32 %92)
  %170 = getelementptr inbounds %"class.blink::RegisteredEventListener", %"class.blink::RegisteredEventListener"* %169, i64 0, i32 1
  %171 = load i8, i8* %170, align 8
  %172 = and i8 %171, 1
  %173 = call dereferenceable(16) %"class.blink::RegisteredEventListener"* @_ZN3WTF6VectorIN5blink23RegisteredEventListenerELj1ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.126"* %85, i32 %92)
  %174 = getelementptr inbounds %"class.blink::RegisteredEventListener", %"class.blink::RegisteredEventListener"* %173, i64 0, i32 1
  %175 = load i8, i8* %174, align 8
  %176 = call dereferenceable(16) %"class.blink::RegisteredEventListener"* @_ZN3WTF6VectorIN5blink23RegisteredEventListenerELj1ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.126"* %85, i32 %92)
  %177 = getelementptr inbounds %"class.blink::RegisteredEventListener", %"class.blink::RegisteredEventListener"* %176, i64 0, i32 1
  %178 = load i8, i8* %177, align 8
  %179 = sext i32 %148 to i64
  %180 = lshr i8 %175, 1
  %181 = and i8 %180, 1
  %182 = lshr i8 %178, 2
  %183 = and i8 %182, 1
  store %"class.WTF::StringImpl"* %149, %"class.WTF::StringImpl"** %29, align 8
  br i1 %150, label %213, label %184

184:                                              ; preds = %168
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %201

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = zext i32 %191 to i33
  %193 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %192, i33 1) #13
  %194 = extractvalue { i33, i1 } %193, 1
  %195 = extractvalue { i33, i1 } %193, 0
  %196 = icmp slt i33 %195, 0
  %197 = or i1 %194, %196
  br i1 %197, label %198, label %199, !prof !3

198:                                              ; preds = %189
  call void @llvm.trap() #13
  unreachable

199:                                              ; preds = %189
  %200 = trunc i33 %195 to i32
  store i32 %200, i32* %190, align 4
  br label %201

201:                                              ; preds = %184, %199
  store i8 %172, i8* %30, align 8
  store i8 %181, i8* %31, align 1
  store i8 %183, i8* %32, align 2
  store %"class.v8::Value"* %129, %"class.v8::Value"** %34, align 8
  store %"class.v8::Value"* %137, %"class.v8::Value"** %36, align 8
  store i64 %179, i64* %37, align 8
  %202 = load atomic i32, i32* %185 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %201
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %201
  %210 = phi i32 [ %208, %207 ], [ %206, %201 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %214

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #13
  br label %214

213:                                              ; preds = %168
  store i8 %172, i8* %30, align 8
  store i8 %181, i8* %31, align 1
  store i8 %183, i8* %32, align 2
  store %"class.v8::Value"* %129, %"class.v8::Value"** %34, align 8
  store %"class.v8::Value"* %137, %"class.v8::Value"** %36, align 8
  store i64 %179, i64* %37, align 8
  br label %214

214:                                              ; preds = %213, %209, %212
  %215 = load i32, i32* %38, align 4
  %216 = load i32, i32* %39, align 8
  %217 = icmp eq i32 %215, %216
  br i1 %217, label %227, label %218, !prof !3

218:                                              ; preds = %214
  %219 = load %"struct.blink::V8EventListenerInfo"*, %"struct.blink::V8EventListenerInfo"** %40, align 8
  %220 = zext i32 %215 to i64
  %221 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %219, i64 %220
  %222 = load i64, i64* %41, align 8
  %223 = bitcast %"struct.blink::V8EventListenerInfo"* %221 to i64*
  store i64 %222, i64* %223, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %224 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %219, i64 %220, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %224, i8* align 8 %30, i64 32, i1 false) #13
  %225 = load i32, i32* %38, align 4
  %226 = add i32 %225, 1
  store i32 %226, i32* %38, align 4
  br label %228

227:                                              ; preds = %214
  call void @_ZN3WTF6VectorIN5blink19V8EventListenerInfoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1985"* %5, %"struct.blink::V8EventListenerInfo"* nonnull dereferenceable(40) %8) #13
  br label %228

228:                                              ; preds = %218, %227
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %230 = icmp eq %"class.WTF::StringImpl"* %229, null
  br i1 %230, label %244, label %231

231:                                              ; preds = %228
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %240

238:                                              ; preds = %231
  %239 = add i32 %237, -1
  store i32 %239, i32* %236, align 4
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %239, %238 ], [ %237, %231 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %229) #13
  br label %244

244:                                              ; preds = %228, %240, %243
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #13
  br label %245

245:                                              ; preds = %116, %122, %97, %91, %244, %133, %124, %131
  %246 = add nuw i32 %92, 1
  %247 = load i32, i32* %86, align 4
  %248 = icmp ult i32 %246, %247
  br i1 %248, label %91, label %249

249:                                              ; preds = %245, %84, %79
  %250 = add nuw i32 %80, 1
  %251 = load i32, i32* %22, align 4
  %252 = icmp ult i32 %250, %251
  br i1 %252, label %79, label %42

253:                                              ; preds = %6, %78
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink11EventTarget10EventTypesEv(%"class.WTF::Vector.1992"* sret, %"class.blink::EventTarget"*) local_unnamed_addr #2

declare %"class.blink::HeapVector.123"* @_ZN5blink11EventTarget17GetEventListenersERKN3WTF12AtomicStringE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::RegisteredEventListener"* @_ZN3WTF6VectorIN5blink23RegisteredEventListenerELj1ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.126"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.28, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.126", %"class.WTF::Vector.126"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::RegisteredEventListener"*, %"class.blink::RegisteredEventListener"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::RegisteredEventListener", %"class.blink::RegisteredEventListener"* %24, i64 %25
  ret %"class.blink::RegisteredEventListener"* %26
}

declare %"class.v8::Context"* @_ZN5blink11ToV8ContextEPNS_16ExecutionContextERNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN5blink11NodeV8ValueEN2v85LocalINS0_7ContextEEEPNS_4NodeE(%"class.v8::Context"*, %"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent27EventListenersInfoForTargetEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPN3WTF6VectorINS_19V8EventListenerInfoELj0ENS7_18PartitionAllocatorEEE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.WTF::Vector.1985"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent27EventListenersInfoForTargetEPN2v87IsolateENS1_5LocalINS1_5ValueEEEibPN3WTF6VectorINS_19V8EventListenerInfoELj0ENS7_18PartitionAllocatorEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, i32 1, i1 zeroext false, %"class.WTF::Vector.1985"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent27EventListenersInfoForTargetEPN2v87IsolateENS1_5LocalINS1_5ValueEEEibPN3WTF6VectorINS_19V8EventListenerInfoELj0ENS7_18PartitionAllocatorEEE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, i1 zeroext, %"class.WTF::Vector.1985"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::HeapVector.1997", align 8
  %7 = alloca %"class.base::RepeatingCallback.2004", align 8
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 8
  %10 = inttoptr i64 %9 to %"class.blink::V8PerIsolateData"**
  %11 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %10, align 8
  %12 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %11, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %1) #13
  br i1 %12, label %13, label %61

13:                                               ; preds = %5
  %14 = bitcast %"class.v8::Value"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = and i64 %15, -4294967296
  %20 = zext i32 %18 to i64
  %21 = or i64 %19, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load i16, i16* %23, align 2
  switch i16 %24, label %29 [
    i16 1057, label %25
    i16 1056, label %25
    i16 1040, label %25
  ]

25:                                               ; preds = %13, %13, %13
  %26 = add i64 %15, 19
  %27 = inttoptr i64 %26 to i8**
  %28 = load i8*, i8** %27, align 1
  br label %32

29:                                               ; preds = %13
  %30 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %31 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %30, i32 1) #13
  br label %32

32:                                               ; preds = %25, %29
  %33 = phi i8* [ %28, %25 ], [ %31, %29 ]
  %34 = icmp eq i8* %33, null
  br i1 %34, label %61, label %35

35:                                               ; preds = %32
  %36 = bitcast i8* %33 to %"class.blink::Node"*
  %37 = icmp ult i32 %2, 2147483647
  %38 = select i1 %37, i32 %2, i32 2147483647
  %39 = bitcast %"class.blink::HeapVector.1997"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.blink::HeapVector.1997", %"class.blink::HeapVector.1997"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::HeapVector.1997", %"class.blink::HeapVector.1997"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 16, i1 false) #13
  %42 = tail call i8* @_Znwm(i64 48) #14, !noalias !4
  %43 = bitcast i8* %42 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %43, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Node"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbPN5blink4NodeEEJEEES6_E3RunEPNS0_13BindStateBaseES5_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbPN5blink4NodeEEJEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !4
  %44 = getelementptr inbounds i8, i8* %42, i64 32
  %45 = bitcast i8* %44 to i64*
  store i64 ptrtoint (i1 (%"class.blink::Node"*)* @_ZN5blinkL24FilterNodesWithListenersEPNS_4NodeE to i64), i64* %45, align 8, !noalias !4
  %46 = bitcast %"class.base::RepeatingCallback.2004"* %7 to i8**
  store i8* %42, i8** %46, align 8, !alias.scope !4
  call void @_ZN5blink17InspectorDOMAgent12CollectNodesEPNS_4NodeEibN4base17RepeatingCallbackIFbS2_EEEPNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Node"* nonnull %36, i32 %38, i1 zeroext %3, %"class.base::RepeatingCallback.2004"* nonnull %7, %"class.blink::HeapVector.1997"* nonnull %6) #13
  %47 = getelementptr inbounds %"class.base::RepeatingCallback.2004", %"class.base::RepeatingCallback.2004"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #13
  %48 = load %"class.blink::Member"*, %"class.blink::Member"** %40, align 8
  %49 = load i32, i32* %41, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %48, i64 %50
  %52 = icmp eq i32 %49, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %54, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #13
  br label %93

54:                                               ; preds = %35, %54
  %55 = phi %"class.blink::Member"* [ %59, %54 ], [ %48, %35 ]
  %56 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %57, i64 0, i32 0
  call void @_ZN5blink25InspectorDOMDebuggerAgent21CollectEventListenersEPN2v87IsolateEPNS_11EventTargetENS1_5LocalINS1_5ValueEEEPNS_4NodeEbPN3WTF6VectorINS_19V8EventListenerInfoELj0ENSB_18PartitionAllocatorEEE(%"class.v8::Isolate"* %0, %"class.blink::EventTarget"* %58, %"class.v8::Value"* undef, %"class.blink::Node"* %57, i1 zeroext %3, %"class.WTF::Vector.1985"* %4)
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %55, i64 1
  %60 = icmp eq %"class.blink::Member"* %59, %51
  br i1 %60, label %53, label %54

61:                                               ; preds = %5, %32
  %62 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %10, align 8
  %63 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %62, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8EventTarget18wrapper_type_info_E, %"class.v8::Value"* %1) #13
  br i1 %63, label %64, label %87

64:                                               ; preds = %61
  %65 = bitcast %"class.v8::Value"* %1 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, -1
  %68 = inttoptr i64 %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = and i64 %66, -4294967296
  %71 = zext i32 %69 to i64
  %72 = or i64 %70, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load i16, i16* %74, align 2
  switch i16 %75, label %80 [
    i16 1057, label %76
    i16 1056, label %76
    i16 1040, label %76
  ]

76:                                               ; preds = %64, %64, %64
  %77 = add i64 %66, 19
  %78 = inttoptr i64 %77 to i8**
  %79 = load i8*, i8** %78, align 1
  br label %83

80:                                               ; preds = %64
  %81 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %82 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %81, i32 1) #13
  br label %83

83:                                               ; preds = %76, %80
  %84 = phi i8* [ %79, %76 ], [ %82, %80 ]
  %85 = bitcast i8* %84 to %"class.blink::EventTarget"*
  %86 = icmp eq i8* %84, null
  br i1 %86, label %87, label %91

87:                                               ; preds = %61, %83
  %88 = tail call %"class.blink::DOMWindow"* @_ZN5blink11ToDOMWindowEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #13
  %89 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %88, i64 0, i32 0, i32 0
  %90 = icmp eq %"class.blink::DOMWindow"* %88, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %83, %87
  %92 = phi %"class.blink::EventTarget"* [ %89, %87 ], [ %85, %83 ]
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent21CollectEventListenersEPN2v87IsolateEPNS_11EventTargetENS1_5LocalINS1_5ValueEEEPNS_4NodeEbPN3WTF6VectorINS_19V8EventListenerInfoELj0ENSB_18PartitionAllocatorEEE(%"class.v8::Isolate"* %0, %"class.blink::EventTarget"* nonnull %92, %"class.v8::Value"* undef, %"class.blink::Node"* null, i1 zeroext false, %"class.WTF::Vector.1985"* %4)
  br label %93

93:                                               ; preds = %91, %87, %53
  ret void
}

declare void @_ZN5blink17InspectorDOMAgent12CollectNodesEPNS_4NodeEibN4base17RepeatingCallbackIFbS2_EEEPNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Node"*, i32, i1 zeroext, %"class.base::RepeatingCallback.2004"*, %"class.blink::HeapVector.1997"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL24FilterNodesWithListenersEPNS_4NodeE(%"class.blink::Node"*) #0 {
  %2 = alloca %"class.WTF::Vector.1992", align 8
  %3 = bitcast %"class.WTF::Vector.1992"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.WTF::Vector.1992", %"class.WTF::Vector.1992"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.1992", %"class.WTF::Vector.1992"* %2, i64 0, i32 0, i32 0, i32 2
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::Vector.1992"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZN5blink11EventTarget10EventTypesEv(%"class.WTF::Vector.1992"* nonnull sret %2, %"class.blink::EventTarget"* %6) #13
  %8 = load i32, i32* %5, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %1, %19
  %11 = phi i32 [ %20, %19 ], [ 0, %1 ]
  %12 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1992"* nonnull %2, i32 %11) #13
  %13 = call %"class.blink::HeapVector.123"* @_ZN5blink11EventTarget17GetEventListenersERKN3WTF12AtomicStringE(%"class.blink::EventTarget"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %12) #13
  %14 = icmp eq %"class.blink::HeapVector.123"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::HeapVector.123", %"class.blink::HeapVector.123"* %13, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %10, %15
  %20 = add nuw i32 %11, 1
  %21 = load i32, i32* %5, align 4
  %22 = icmp ult i32 %20, %21
  br i1 %22, label %10, label %23

23:                                               ; preds = %15, %19, %1
  %24 = phi i1 [ false, %1 ], [ false, %19 ], [ true, %15 ]
  %25 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  %26 = icmp eq %"class.WTF::AtomicString"* %25, null
  br i1 %26, label %60, label %27, !prof !2

27:                                               ; preds = %23
  %28 = bitcast %"class.WTF::AtomicString"* %25 to i8*
  %29 = load i32, i32* %5, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %58, label %31, !prof !3

31:                                               ; preds = %27
  %32 = zext i32 %29 to i64
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 %32
  br label %34

34:                                               ; preds = %52, %31
  %35 = phi %"class.WTF::AtomicString"* [ %53, %52 ], [ %25, %31 ]
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #13
  br label %52

52:                                               ; preds = %51, %48, %34
  %53 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %35, i64 1
  %54 = icmp eq %"class.WTF::AtomicString"* %53, %33
  br i1 %54, label %55, label %34

55:                                               ; preds = %52
  store i32 0, i32* %5, align 4
  %56 = bitcast %"class.WTF::Vector.1992"* %2 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %27
  %59 = phi i8* [ %57, %55 ], [ %28, %27 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #13
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %4, align 8
  br label %60

60:                                               ; preds = %23, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  ret i1 %24
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare %"class.blink::DOMWindow"* @_ZN5blink11ToDOMWindowEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgentC2EPN2v87IsolateEPNS_17InspectorDOMAgentEPN12v8_inspector18V8InspectorSessionE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.v8::Isolate"*, %"class.blink::InspectorDOMAgent"*, %"class.v8_inspector::V8InspectorSession"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.blink::InspectorDOMDebuggerAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [15 x i8*] }, { [11 x i8*], [15 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [15 x i8*] }, { [11 x i8*], [15 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CoreProbeSink"* null, %"class.blink::CoreProbeSink"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 0, i32 3
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol11DOMDebugger8Metainfo10domainNameE, i64 0, i64 0)) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol11DOMDebugger8Metainfo10domainNameE, i64 0, i64 0), i64 %10) #13
  call void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %5) #13
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #13
  br label %27

27:                                               ; preds = %4, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %28 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 0, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.1584"* %28 to i64*
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.blink::InspectorDOMDebuggerAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [15 x i8*] }, { [21 x i8*], [15 x i8*] }* @_ZTVN5blink25InspectorDOMDebuggerAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [15 x i8*] }, { [21 x i8*], [15 x i8*] }* @_ZTVN5blink25InspectorDOMDebuggerAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %30, align 8
  %31 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 1
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::InspectorDOMAgent"* %2, %"class.blink::InspectorDOMAgent"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 3
  store %"class.v8_inspector::V8InspectorSession"* %3, %"class.v8_inspector::V8InspectorSession"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4
  %35 = bitcast %"class.blink::HeapHashMap.1661"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 20, i1 false) #13
  %36 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5
  %37 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %36, i64 0, i32 0
  %38 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %36, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %37) #13
  %40 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %40, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %41 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 1
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 2
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 6
  %44 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %43, i64 0, i32 0
  %45 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %43, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %44) #13
  %47 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %47, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %48 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 6, i32 1
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 6, i32 2
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 7
  %51 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %50, i64 0, i32 0
  %52 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %50, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %53 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %51) #13
  %54 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %55 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 7, i32 1
  store i8 0, i8* %55, align 8
  %56 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 7, i32 3
  %57 = bitcast %"class.WTF::HashMap.1668"* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 20, i1 false) #13
  %58 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 8
  %59 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %58, i64 0, i32 0
  %60 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %58, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %59) #13
  %62 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %62, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %63 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 8, i32 1
  store i8 0, i8* %63, align 8
  %64 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 8, i32 3
  %65 = bitcast %"class.WTF::HashMap.1668"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 20, i1 false) #13
  %66 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 9
  %67 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %66, i64 0, i32 0
  %68 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %66, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %69 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %67) #13
  %70 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %70, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %71 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 9, i32 1
  store i8 0, i8* %71, align 8
  %72 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 9, i32 3
  %73 = bitcast %"class.WTF::HashMap.1668"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 20, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgentD2Ev(%"class.blink::InspectorDOMDebuggerAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InspectorDOMDebuggerAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [15 x i8*] }, { [21 x i8*], [15 x i8*] }* @_ZTVN5blink25InspectorDOMDebuggerAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [15 x i8*] }, { [21 x i8*], [15 x i8*] }* @_ZTVN5blink25InspectorDOMDebuggerAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 9, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 9, i32 3, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1672"* %5, null
  br i1 %6, label %39, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 9, i32 3, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11

11:                                               ; preds = %7
  %12 = zext i32 %9 to i64
  br label %13

13:                                               ; preds = %34, %11
  %14 = phi i64 [ 0, %11 ], [ %35, %34 ]
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %5, i64 %14
  %16 = bitcast %"struct.WTF::KeyValuePair.1672"* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast i8* %17 to %"class.WTF::StringImpl"*
  %19 = ptrtoint i8* %17 to i64
  switch i64 %19, label %20 [
    i64 -1, label %34
    i64 0, label %34
  ]

20:                                               ; preds = %13
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = bitcast i8* %17 to i32*
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %20
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %20
  %31 = phi i32 [ %29, %28 ], [ %27, %20 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #13
  br label %34

34:                                               ; preds = %33, %30, %13, %13
  %35 = add nuw nsw i64 %14, 1
  %36 = icmp eq i64 %35, %12
  br i1 %36, label %37, label %13

37:                                               ; preds = %34, %7
  %38 = bitcast %"struct.WTF::KeyValuePair.1672"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #13
  store %"struct.WTF::KeyValuePair.1672"* null, %"struct.WTF::KeyValuePair.1672"** %4, align 8
  br label %39

39:                                               ; preds = %37, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %40 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #13
  br label %56

56:                                               ; preds = %39, %52, %55
  %57 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 8, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 8, i32 3, i32 0, i32 0
  %59 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %58, align 8
  %60 = icmp eq %"struct.WTF::KeyValuePair.1672"* %59, null
  br i1 %60, label %93, label %61, !prof !2

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 8, i32 3, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %91, label %65

65:                                               ; preds = %61
  %66 = zext i32 %63 to i64
  br label %67

67:                                               ; preds = %88, %65
  %68 = phi i64 [ 0, %65 ], [ %89, %88 ]
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %59, i64 %68
  %70 = bitcast %"struct.WTF::KeyValuePair.1672"* %69 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = bitcast i8* %71 to %"class.WTF::StringImpl"*
  %73 = ptrtoint i8* %71 to i64
  switch i64 %73, label %74 [
    i64 -1, label %88
    i64 0, label %88
  ]

74:                                               ; preds = %67
  %75 = getelementptr inbounds i8, i8* %71, i64 8
  %76 = bitcast i8* %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = bitcast i8* %71 to i32*
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %74
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %74
  %85 = phi i32 [ %83, %82 ], [ %81, %74 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #13
  br label %88

88:                                               ; preds = %87, %84, %67, %67
  %89 = add nuw nsw i64 %68, 1
  %90 = icmp eq i64 %89, %66
  br i1 %90, label %91, label %67

91:                                               ; preds = %88, %61
  %92 = bitcast %"struct.WTF::KeyValuePair.1672"* %59 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %92) #13
  store %"struct.WTF::KeyValuePair.1672"* null, %"struct.WTF::KeyValuePair.1672"** %58, align 8
  br label %93

93:                                               ; preds = %91, %56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %94 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #13
  br label %110

110:                                              ; preds = %93, %106, %109
  %111 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 7, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %112 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 7, i32 3, i32 0, i32 0
  %113 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %112, align 8
  %114 = icmp eq %"struct.WTF::KeyValuePair.1672"* %113, null
  br i1 %114, label %147, label %115, !prof !2

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 7, i32 3, i32 0, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %145, label %119

119:                                              ; preds = %115
  %120 = zext i32 %117 to i64
  br label %121

121:                                              ; preds = %142, %119
  %122 = phi i64 [ 0, %119 ], [ %143, %142 ]
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %113, i64 %122
  %124 = bitcast %"struct.WTF::KeyValuePair.1672"* %123 to i8**
  %125 = load i8*, i8** %124, align 8
  %126 = bitcast i8* %125 to %"class.WTF::StringImpl"*
  %127 = ptrtoint i8* %125 to i64
  switch i64 %127, label %128 [
    i64 -1, label %142
    i64 0, label %142
  ]

128:                                              ; preds = %121
  %129 = getelementptr inbounds i8, i8* %125, i64 8
  %130 = bitcast i8* %129 to i32*
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = bitcast i8* %125 to i32*
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %128
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %128
  %139 = phi i32 [ %137, %136 ], [ %135, %128 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #13
  br label %142

142:                                              ; preds = %141, %138, %121, %121
  %143 = add nuw nsw i64 %122, 1
  %144 = icmp eq i64 %143, %120
  br i1 %144, label %145, label %121

145:                                              ; preds = %142, %115
  %146 = bitcast %"struct.WTF::KeyValuePair.1672"* %113 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %146) #13
  store %"struct.WTF::KeyValuePair.1672"* null, %"struct.WTF::KeyValuePair.1672"** %112, align 8
  br label %147

147:                                              ; preds = %145, %110
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %148 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #13
  br label %164

164:                                              ; preds = %147, %160, %163
  %165 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 6, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %165, align 8
  %166 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #13
  br label %182

182:                                              ; preds = %164, %178, %181
  %183 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %183, align 8
  %184 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %185) #13
  br label %200

200:                                              ; preds = %182, %196, %199
  %201 = bitcast %"class.blink::InspectorDOMDebuggerAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [15 x i8*] }, { [11 x i8*], [15 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [15 x i8*] }, { [11 x i8*], [15 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %201, align 8
  %202 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %203 = load %"class.blink::protocol::DOMDebugger::Frontend"*, %"class.blink::protocol::DOMDebugger::Frontend"** %202, align 8
  store %"class.blink::protocol::DOMDebugger::Frontend"* null, %"class.blink::protocol::DOMDebugger::Frontend"** %202, align 8
  %204 = icmp eq %"class.blink::protocol::DOMDebugger::Frontend"* %203, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %200
  %206 = bitcast %"class.blink::protocol::DOMDebugger::Frontend"* %203 to i8*
  tail call void @_ZdlPv(i8* %206) #14
  br label %207

207:                                              ; preds = %205, %200
  %208 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %209 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %208, align 8
  %210 = icmp eq %"class.blink::InspectorAgentState::Field"** %209, null
  %211 = bitcast %"class.blink::InspectorAgentState::Field"** %209 to i8*
  br i1 %210, label %218, label %212, !prof !2

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %217, label %216, !prof !3

216:                                              ; preds = %212
  store i32 0, i32* %213, align 4
  br label %217

217:                                              ; preds = %216, %212
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %211) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %208, align 8
  br label %218

218:                                              ; preds = %217, %207
  %219 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %235, label %222

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  br i1 %226, label %229, label %231

229:                                              ; preds = %222
  %230 = add i32 %228, -1
  store i32 %230, i32* %227, align 4
  br label %231

231:                                              ; preds = %229, %222
  %232 = phi i32 [ %230, %229 ], [ %228, %222 ]
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #13
  br label %235

235:                                              ; preds = %218, %231, %234
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbED2Ev(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1672"* %4, null
  br i1 %5, label %38, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %4, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.1672"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #13
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"struct.WTF::KeyValuePair.1672"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #13
  store %"struct.WTF::KeyValuePair.1672"* null, %"struct.WTF::KeyValuePair.1672"** %3, align 8
  br label %38

38:                                               ; preds = %1, %36
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #13
  br label %55

55:                                               ; preds = %38, %51, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD2Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorDOMDebuggerAgentD1Ev(%"class.blink::InspectorDOMDebuggerAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 -1, i32 9, i32 3, i32 0, i32 3
  %3 = bitcast i32* %2 to %"class.blink::InspectorDOMDebuggerAgent"*
  tail call void @_ZN5blink25InspectorDOMDebuggerAgentD2Ev(%"class.blink::InspectorDOMDebuggerAgent"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgentD0Ev(%"class.blink::InspectorDOMDebuggerAgent"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink25InspectorDOMDebuggerAgentD2Ev(%"class.blink::InspectorDOMDebuggerAgent"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorDOMDebuggerAgentD0Ev(%"class.blink::InspectorDOMDebuggerAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 -1, i32 9, i32 3, i32 0, i32 3
  %3 = bitcast i32* %2 to %"class.blink::InspectorDOMDebuggerAgent"*
  tail call void @_ZN5blink25InspectorDOMDebuggerAgentD2Ev(%"class.blink::InspectorDOMDebuggerAgent"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25InspectorDOMDebuggerAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.1590"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17InspectorDOMAgentEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::HeapHashMap.1661"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = bitcast %"class.blink::HeapHashMap.1661"* %14 to i8**
  %18 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %1, i8** %17) #13
  %22 = icmp eq i64 %16, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #13
  br label %29

29:                                               ; preds = %13, %23
  %30 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 0, i32 2
  %31 = bitcast %"class.blink::Member.1203"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #13
  br label %40

40:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE5TraceEPNS_7VisitorE(%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.1203"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5
  %5 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 2
  %6 = load i8, i8* %5, align 1, !range !11
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %30, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 1
  %10 = load i8, i8* %9, align 8, !range !11
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %4 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %14 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %14, i64 2
  %16 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %15, align 8
  tail call void %16(%"class.blink::InspectorAgentState::SimpleField"* %4) #13
  br label %30

17:                                               ; preds = %8
  store i8 0, i8* %5, align 1
  %18 = bitcast %"class.blink::WebVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext false, %"class.blink::WebVector"* nonnull %3) #13
  %20 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 0, i32 2
  %21 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %21, %"class.WTF::String"* dereferenceable(8) %22, %"class.blink::WebVector"* nonnull %3) #13
  %23 = load i8*, i8** %19, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 1
  %27 = ptrtoint i8* %23 to i64
  %28 = bitcast i8** %26 to i64*
  store i64 %27, i64* %28, align 8
  call void @_ZdlPv(i8* nonnull %23) #14
  br label %29

29:                                               ; preds = %25, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #13
  br label %30

30:                                               ; preds = %2, %12, %29
  %31 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %31, align 8
  call void @_ZN5blink13CoreProbeSink31RemoveInspectorDOMDebuggerAgentEPNS_25InspectorDOMDebuggerAgentE(%"class.blink::CoreProbeSink"* %32, %"class.blink::InspectorDOMDebuggerAgent"* %1) #13
  %33 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 4, i32 0
  %34 = getelementptr inbounds %"class.WTF::HashMap.1664", %"class.WTF::HashMap.1664"* %33, i64 0, i32 0, i32 0
  %35 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %34, align 8
  %36 = icmp eq %"struct.WTF::KeyValuePair.1667"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %39 = bitcast %"struct.WTF::KeyValuePair.1667"* %35 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %39) #13
  %40 = bitcast %"class.WTF::HashMap.1664"* %33 to i64*
  store atomic i64 0, i64* %40 monotonic, align 8
  store i32 0, i32* %38, align 8
  %41 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 0, i32* %41, align 4
  br label %42

42:                                               ; preds = %30, %37
  %43 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 0, i32 3
  call void @_ZN5blink19InspectorAgentState14ClearAllFieldsEv(%"class.blink::InspectorAgentState"* %43) #13
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent10SetEnabledEb(%"class.blink::InspectorDOMDebuggerAgent"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5
  %5 = zext i1 %1 to i8
  %6 = zext i1 %1 to i32
  %7 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 2
  %8 = load i8, i8* %7, align 1, !range !11
  %9 = zext i8 %8 to i32
  %10 = icmp eq i32 %6, %9
  br i1 %10, label %34, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 1
  %13 = load i8, i8* %12, align 8, !range !11
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %6, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %4 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %18 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %18, i64 2
  %20 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %19, align 8
  tail call void %20(%"class.blink::InspectorAgentState::SimpleField"* %4) #13
  br label %34

21:                                               ; preds = %11
  store i8 %5, i8* %7, align 1
  %22 = bitcast %"class.blink::WebVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %1, %"class.blink::WebVector"* nonnull %3) #13
  %24 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 0, i32 2
  %25 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %25, %"class.WTF::String"* dereferenceable(8) %26, %"class.blink::WebVector"* nonnull %3) #13
  %27 = load i8*, i8** %23, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 1
  %31 = ptrtoint i8* %27 to i64
  %32 = bitcast i8** %30 to i64*
  store i64 %31, i64* %32, align 8
  call void @_ZdlPv(i8* nonnull %27) #14
  br label %33

33:                                               ; preds = %29, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #13
  br label %34

34:                                               ; preds = %2, %16, %33
  %35 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %35, align 8
  br i1 %1, label %37, label %38

37:                                               ; preds = %34
  call void @_ZN5blink13CoreProbeSink28AddInspectorDOMDebuggerAgentEPNS_25InspectorDOMDebuggerAgentE(%"class.blink::CoreProbeSink"* %36, %"class.blink::InspectorDOMDebuggerAgent"* %0) #13
  br label %39

38:                                               ; preds = %34
  call void @_ZN5blink13CoreProbeSink31RemoveInspectorDOMDebuggerAgentEPNS_25InspectorDOMDebuggerAgentE(%"class.blink::CoreProbeSink"* %36, %"class.blink::InspectorDOMDebuggerAgent"* %0) #13
  br label %39

39:                                               ; preds = %38, %37
  ret void
}

declare void @_ZN5blink19InspectorAgentState14ClearAllFieldsEv(%"class.blink::InspectorAgentState"*) local_unnamed_addr #2

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorDOMDebuggerAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 -1, i32 9, i32 3, i32 0, i32 3
  %4 = bitcast i32* %3 to %"class.blink::InspectorDOMDebuggerAgent"*
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent7disableEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent7RestoreEv(%"class.blink::InspectorDOMDebuggerAgent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 2
  %3 = load i8, i8* %2, align 1, !range !11
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %6, align 8
  tail call void @_ZN5blink13CoreProbeSink28AddInspectorDOMDebuggerAgentEPNS_25InspectorDOMDebuggerAgentE(%"class.blink::CoreProbeSink"* %7, %"class.blink::InspectorDOMDebuggerAgent"* %0) #13
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN5blink13CoreProbeSink28AddInspectorDOMDebuggerAgentEPNS_25InspectorDOMDebuggerAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorDOMDebuggerAgent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent26setEventListenerBreakpointERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  %11 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN12_GLOBAL__N_125listenerEventCategoryTypeE, i64 0, i64 0), i64 9) #13
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #13
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %4, %15, %30
  %33 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::StringImpl"* %13)
  %34 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 0, i32 0
  %35 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %33, 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1, i32 0, i32 0
  %37 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %33, 1
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %36, align 8
  %38 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %6)
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 0
  %43 = load i8, i8* %42, align 8, !range !11
  %44 = icmp eq i8 %43, 0
  %45 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 1
  %46 = select i1 %44, %"class.WTF::String"* %8, %"class.WTF::String"* %45
  call void @_ZN5blink25InspectorDOMDebuggerAgent13SetBreakpointERKN3WTF6StringES4_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %46)
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %32
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #13
  br label %62

62:                                               ; preds = %32, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  %63 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #13
  br label %77

77:                                               ; preds = %62, %73, %76
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #13
  br label %93

93:                                               ; preds = %92, %89, %77
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #13
  br label %109

109:                                              ; preds = %93, %105, %108
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #13
  br label %126

126:                                              ; preds = %109, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent13SetBreakpointERKN3WTF6StringES4_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::WebVector", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %25

15:                                               ; preds = %4, %11
  %16 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 19, i8* %17, align 1
  %18 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 19, i1 false) #13
  %19 = getelementptr inbounds i8, i8* %18, i64 19
  store i8 0, i8* %19, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %6) #13
  %20 = load i8, i8* %17, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %76

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #14
  br label %76

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 8
  %27 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  %28 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_126EventListenerBreakpointKeyERKN3WTF6StringES4_(%"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3)
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  call void @_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb(%"class.blink::InspectorAgentState::MapField"* %26, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext true)
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #13
  br label %45

45:                                               ; preds = %25, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  %46 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5
  %47 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 2
  %48 = load i8, i8* %47, align 1, !range !11
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %75

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 1
  %52 = load i8, i8* %51, align 8, !range !11
  %53 = icmp eq i8 %52, 1
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %46 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %56 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %56, i64 2
  %58 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %57, align 8
  call void %58(%"class.blink::InspectorAgentState::SimpleField"* %46) #13
  br label %72

59:                                               ; preds = %50
  store i8 1, i8* %47, align 1
  %60 = bitcast %"class.blink::WebVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #13
  %61 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %5, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector"* nonnull %5) #13
  %62 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 0, i32 2
  %63 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %63, %"class.WTF::String"* dereferenceable(8) %64, %"class.blink::WebVector"* nonnull %5) #13
  %65 = load i8*, i8** %61, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %5, i64 0, i32 0, i32 0, i32 1
  %69 = ptrtoint i8* %65 to i64
  %70 = bitcast i8** %68 to i64*
  store i64 %69, i64* %70, align 8
  call void @_ZdlPv(i8* nonnull %65) #14
  br label %71

71:                                               ; preds = %67, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #13
  br label %72

72:                                               ; preds = %71, %54
  %73 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %74 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %73, align 8
  call void @_ZN5blink13CoreProbeSink28AddInspectorDOMDebuggerAgentEPNS_25InspectorDOMDebuggerAgentE(%"class.blink::CoreProbeSink"* %74, %"class.blink::InspectorDOMDebuggerAgent"* %1) #13
  br label %75

75:                                               ; preds = %45, %72
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %76

76:                                               ; preds = %22, %15, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #13
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %31
  tail call void @llvm.trap() #13
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #13
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2197", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2197", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2197", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2197", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #13
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter.2197"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #13
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter.2197"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter.2197"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #13
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #13
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter.2197"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2198"* nonnull %67, i8* %30) #13
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2198"* nonnull %68, i8* %71) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #13
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %80
  call void @llvm.trap() #13
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #13
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter.2197"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #13
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #13
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter.2197"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter.2197"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #13
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #13
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter.2197"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2198"* nonnull %144, i16* %107) #13
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2198"* nonnull %145, i16* %148) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #13
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #13
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !3

164:                                              ; preds = %157
  call void @llvm.trap() #13
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #13
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #13
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorDOMDebuggerAgent26setEventListenerBreakpointERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 -1, i32 9, i32 3, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorDOMDebuggerAgent"*
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent26setEventListenerBreakpointERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %6, %"class.WTF::String"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent28setInstrumentationBreakpointERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN12_GLOBAL__N_132instrumentationEventCategoryTypeE, i64 0, i64 0), i64 16) #13
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #13
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !3

28:                                               ; preds = %19
  call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %3, %14, %29
  %32 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::StringImpl"* %12)
  %33 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 0, i32 0
  %34 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %32, 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1, i32 0, i32 0
  %36 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %32, 1
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %35, align 8
  %37 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %5)
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  %39 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  call void @_ZN5blink25InspectorDOMDebuggerAgent13SetBreakpointERKN3WTF6StringES4_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %7)
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #13
  br label %56

56:                                               ; preds = %31, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  %57 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #13
  br label %71

71:                                               ; preds = %56, %67, %70
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #13
  br label %87

87:                                               ; preds = %86, %83, %71
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #13
  br label %103

103:                                              ; preds = %87, %99, %102
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #13
  br label %120

120:                                              ; preds = %103, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorDOMDebuggerAgent28setInstrumentationBreakpointERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 -1, i32 9, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorDOMDebuggerAgent"*
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent28setInstrumentationBreakpointERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %5, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

declare void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb(%"class.blink::InspectorAgentState::MapField"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.blink::WebVector", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %4, align 1
  %9 = zext i1 %2 to i32
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !11
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %9, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE(%"class.blink::InspectorAgentState::MapField"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  br label %135

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.WTF::HashMap.1668", %"class.WTF::HashMap.1668"* %16, i64 0, i32 0
  %18 = tail call { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1669"* %17, %"class.WTF::String"* dereferenceable(8) %1) #13
  %19 = extractvalue { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } %18, 0
  %20 = getelementptr inbounds %"class.WTF::HashMap.1668", %"class.WTF::HashMap.1668"* %16, i64 0, i32 0, i32 0
  %21 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %21, i64 %24
  %26 = icmp eq %"struct.WTF::KeyValuePair.1672"* %19, %25
  br i1 %26, label %31, label %27

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %19, i64 0, i32 1
  %29 = load i8, i8* %28, align 8, !range !11
  %30 = icmp eq i8 %29, %8
  br i1 %30, label %135, label %31

31:                                               ; preds = %15, %27
  %32 = call { %"struct.WTF::KeyValuePair.1672"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.1669"* %17, %"class.WTF::String"* dereferenceable(8) %1, i8* nonnull dereferenceable(1) %4) #13
  %33 = extractvalue { %"struct.WTF::KeyValuePair.1672"*, i8 } %32, 1
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = load i8, i8* %4, align 1, !range !11
  br label %42

38:                                               ; preds = %31
  %39 = extractvalue { %"struct.WTF::KeyValuePair.1672"*, i8 } %32, 0
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %39, i64 0, i32 1
  %41 = load i8, i8* %4, align 1, !range !11
  store i8 %41, i8* %40, align 1
  br label %42

42:                                               ; preds = %36, %38
  %43 = phi i8 [ %37, %36 ], [ %41, %38 ]
  %44 = bitcast %"class.blink::WebVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #13
  %45 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %5, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %5, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #13
  %47 = icmp ne i8 %43, 0
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %47, %"class.blink::WebVector"* nonnull %5) #13
  %48 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %49 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %48, align 8
  %50 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #13
  %51 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13
  %52 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %42
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #13
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !3

70:                                               ; preds = %61
  call void @llvm.trap() #13
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %42, %56, %71
  %74 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %52, %"class.WTF::StringImpl"* %54)
  %75 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 0, i32 0
  %76 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %74, 0
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1, i32 0, i32 0
  %78 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %74, 1
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %77, align 8
  %79 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %7)
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %80, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %49, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::WebVector"* nonnull %5) #13
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #13
  br label %96

96:                                               ; preds = %73, %92, %95
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #13
  br label %112

112:                                              ; preds = %111, %108, %96
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #13
  br label %128

128:                                              ; preds = %112, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #13
  %129 = load i8*, i8** %45, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %128
  %132 = ptrtoint i8* %129 to i64
  %133 = bitcast i8** %46 to i64*
  store i64 %132, i64* %133, align 8
  call void @_ZdlPv(i8* nonnull %129) #14
  br label %134

134:                                              ; preds = %128, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #13
  br label %135

135:                                              ; preds = %134, %27, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_126EventListenerBreakpointKeyERKN3WTF6StringES4_(%"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringAppend.2194", align 8
  %6 = alloca %"class.WTF::StringAppend.2195", align 8
  %7 = alloca %"class.WTF::StringAppend.2096", align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %29, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %17, align 8
  %18 = load i32, i32* %12, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %21 = bitcast i8** %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %18, i32* %22, align 8
  %23 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 1, i32* %27, align 8
  %28 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #13
  br i1 %28, label %29, label %160

29:                                               ; preds = %2, %15, %11
  %30 = bitcast %"class.WTF::StringAppend.2194"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %109, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %51

41:                                               ; preds = %34
  %42 = zext i32 %40 to i33
  %43 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #13
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !3

48:                                               ; preds = %41
  call void @llvm.trap() #13
  unreachable

49:                                               ; preds = %41
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %39, align 4
  br label %51

51:                                               ; preds = %34, %49
  %52 = phi i32 [ %50, %49 ], [ %40, %34 ]
  %53 = load atomic i32, i32* %35 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  br i1 %55, label %57, label %67

57:                                               ; preds = %51
  %58 = zext i32 %52 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #13
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !3

64:                                               ; preds = %57
  call void @llvm.trap() #13
  unreachable

65:                                               ; preds = %57
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %65, %51
  %68 = phi i32 [ %66, %65 ], [ %52, %51 ]
  %69 = load atomic i32, i32* %35 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %67
  %73 = add i32 %68, -1
  store i32 %73, i32* %56, align 4
  br label %74

74:                                               ; preds = %72, %67
  %75 = phi i32 [ %73, %72 ], [ %68, %67 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %78

78:                                               ; preds = %74, %77
  %79 = load atomic i32, i32* %35 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %93

82:                                               ; preds = %78
  %83 = load i32, i32* %56, align 4
  %84 = zext i32 %83 to i33
  %85 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #13
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !3

90:                                               ; preds = %82
  call void @llvm.trap() #13
  unreachable

91:                                               ; preds = %82
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %56, align 4
  br label %93

93:                                               ; preds = %78, %91
  %94 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %94, align 8
  %95 = load atomic i32, i32* %35 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %114

98:                                               ; preds = %93
  %99 = load i32, i32* %56, align 4
  %100 = zext i32 %99 to i33
  %101 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #13
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !3

106:                                              ; preds = %98
  call void @llvm.trap() #13
  unreachable

107:                                              ; preds = %98
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %56, align 4
  br label %114

109:                                              ; preds = %29
  %110 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %110, align 8
  %111 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %5, i64 0, i32 0, i32 1
  %112 = bitcast i8** %111 to i64*
  store i64 ptrtoint ([3 x i8]* @.str.18 to i64), i64* %112, align 8
  %113 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i8** %113, align 8
  br label %128

114:                                              ; preds = %107, %93
  %115 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %5, i64 0, i32 0, i32 1
  %116 = bitcast i8** %115 to i64*
  store i64 ptrtoint ([3 x i8]* @.str.18 to i64), i64* %116, align 8
  %117 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i8** %117, align 8
  %118 = load atomic i32, i32* %35 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = load i32, i32* %56, align 4
  br i1 %120, label %122, label %124

122:                                              ; preds = %114
  %123 = add i32 %121, -1
  store i32 %123, i32* %56, align 4
  br label %124

124:                                              ; preds = %122, %114
  %125 = phi i32 [ %123, %122 ], [ %121, %114 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %128

128:                                              ; preds = %109, %124, %127
  %129 = phi %"class.WTF::StringImpl"** [ %110, %109 ], [ %94, %124 ], [ %94, %127 ]
  %130 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_EcvS1_Ev(%"class.WTF::StringAppend.2194"* nonnull %5)
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %146, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #13
  br label %146

146:                                              ; preds = %128, %142, %145
  br i1 %33, label %265, label %147

147:                                              ; preds = %146
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %265

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %265

160:                                              ; preds = %15
  %161 = bitcast %"class.WTF::StringAppend.2195"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %161) #13
  %162 = bitcast %"class.WTF::StringAppend.2096"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162) #13
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %210, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %183

173:                                              ; preds = %166
  %174 = zext i32 %172 to i33
  %175 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %174, i33 1) #13
  %176 = extractvalue { i33, i1 } %175, 1
  %177 = extractvalue { i33, i1 } %175, 0
  %178 = icmp slt i33 %177, 0
  %179 = or i1 %176, %178
  br i1 %179, label %180, label %181, !prof !3

180:                                              ; preds = %173
  call void @llvm.trap() #13
  unreachable

181:                                              ; preds = %173
  %182 = trunc i33 %177 to i32
  store i32 %182, i32* %171, align 4
  br label %183

183:                                              ; preds = %166, %181
  %184 = phi i32 [ %182, %181 ], [ %172, %166 ]
  %185 = load atomic i32, i32* %167 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  br i1 %187, label %189, label %199

189:                                              ; preds = %183
  %190 = zext i32 %184 to i33
  %191 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %190, i33 1) #13
  %192 = extractvalue { i33, i1 } %191, 1
  %193 = extractvalue { i33, i1 } %191, 0
  %194 = icmp slt i33 %193, 0
  %195 = or i1 %192, %194
  br i1 %195, label %196, label %197, !prof !3

196:                                              ; preds = %189
  call void @llvm.trap() #13
  unreachable

197:                                              ; preds = %189
  %198 = trunc i33 %193 to i32
  store i32 %198, i32* %188, align 4
  br label %199

199:                                              ; preds = %197, %183
  %200 = phi i32 [ %198, %197 ], [ %184, %183 ]
  %201 = load atomic i32, i32* %167 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %199
  %205 = add i32 %200, -1
  store i32 %205, i32* %188, align 4
  br label %206

206:                                              ; preds = %204, %199
  %207 = phi i32 [ %205, %204 ], [ %200, %199 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #13
  br label %210

210:                                              ; preds = %160, %206, %209
  %211 = getelementptr inbounds %"class.WTF::StringAppend.2096", %"class.WTF::StringAppend.2096"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %164, %"class.WTF::StringImpl"** %211, align 8
  %212 = getelementptr inbounds %"class.WTF::StringAppend.2096", %"class.WTF::StringAppend.2096"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i8** %212, align 8
  %213 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* %1) #13
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2195"* nonnull sret %6, %"class.WTF::StringAppend.2096"* nonnull dereferenceable(16) %7, %"class.WTF::StringImpl"* %213)
  %214 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend.2195"* nonnull %6)
  %215 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %6, i64 0, i32 1, i32 0, i32 0
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %231, label %218

218:                                              ; preds = %210
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %227

225:                                              ; preds = %218
  %226 = add i32 %224, -1
  store i32 %226, i32* %223, align 4
  br label %227

227:                                              ; preds = %225, %218
  %228 = phi i32 [ %226, %225 ], [ %224, %218 ]
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #13
  br label %231

231:                                              ; preds = %230, %227, %210
  %232 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %232, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %233, null
  br i1 %234, label %248, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %235
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %235
  %245 = phi i32 [ %243, %242 ], [ %241, %235 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %233) #13
  br label %248

248:                                              ; preds = %231, %244, %247
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #13
  br label %264

264:                                              ; preds = %248, %260, %263
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #13
  br label %265

265:                                              ; preds = %159, %156, %146, %264
  %266 = phi i8* [ %161, %264 ], [ %30, %146 ], [ %30, %156 ], [ %30, %159 ]
  %267 = phi %"class.WTF::StringImpl"* [ %214, %264 ], [ %130, %146 ], [ %130, %156 ], [ %130, %159 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %266) #13
  ret %"class.WTF::StringImpl"* %267
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent16DidAddBreakpointEv(%"class.blink::InspectorDOMDebuggerAgent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::WebVector", align 8
  %3 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 2
  %5 = load i8, i8* %4, align 1, !range !11
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %32

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 1
  %9 = load i8, i8* %8, align 8, !range !11
  %10 = icmp eq i8 %9, 1
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %3 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %13 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %13, i64 2
  %15 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %14, align 8
  tail call void %15(%"class.blink::InspectorAgentState::SimpleField"* %3) #13
  br label %29

16:                                               ; preds = %7
  store i8 1, i8* %4, align 1
  %17 = bitcast %"class.blink::WebVector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %2, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector"* nonnull %2) #13
  %19 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 0, i32 2
  %20 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %20, %"class.WTF::String"* dereferenceable(8) %21, %"class.blink::WebVector"* nonnull %2) #13
  %22 = load i8*, i8** %18, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %2, i64 0, i32 0, i32 0, i32 1
  %26 = ptrtoint i8* %22 to i64
  %27 = bitcast i8** %25 to i64*
  store i64 %26, i64* %27, align 8
  call void @_ZdlPv(i8* nonnull %22) #14
  br label %28

28:                                               ; preds = %24, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #13
  br label %29

29:                                               ; preds = %11, %28
  %30 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %30, align 8
  call void @_ZN5blink13CoreProbeSink28AddInspectorDOMDebuggerAgentEPNS_25InspectorDOMDebuggerAgentE(%"class.blink::CoreProbeSink"* %31, %"class.blink::InspectorDOMDebuggerAgent"* %0) #13
  br label %32

32:                                               ; preds = %1, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent29removeEventListenerBreakpointERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  %11 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN12_GLOBAL__N_125listenerEventCategoryTypeE, i64 0, i64 0), i64 9) #13
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #13
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %4, %15, %30
  %33 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::StringImpl"* %13)
  %34 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 0, i32 0
  %35 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %33, 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1, i32 0, i32 0
  %37 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %33, 1
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %36, align 8
  %38 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %6)
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 0
  %43 = load i8, i8* %42, align 8, !range !11
  %44 = icmp eq i8 %43, 0
  %45 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 1
  %46 = select i1 %44, %"class.WTF::String"* %8, %"class.WTF::String"* %45
  call void @_ZN5blink25InspectorDOMDebuggerAgent16RemoveBreakpointERKN3WTF6StringES4_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %46)
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %32
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #13
  br label %62

62:                                               ; preds = %32, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  %63 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #13
  br label %77

77:                                               ; preds = %62, %73, %76
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #13
  br label %93

93:                                               ; preds = %92, %89, %77
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #13
  br label %109

109:                                              ; preds = %93, %105, %108
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #13
  br label %126

126:                                              ; preds = %109, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent16RemoveBreakpointERKN3WTF6StringES4_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %24

14:                                               ; preds = %4, %10
  %15 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  store i8 19, i8* %16, align 1
  %17 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 19, i1 false) #13
  %18 = getelementptr inbounds i8, i8* %17, i64 19
  store i8 0, i8* %18, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #13
  %19 = load i8, i8* %16, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %45

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #14
  br label %45

24:                                               ; preds = %10
  %25 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 8
  %26 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  %27 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_126EventListenerBreakpointKeyERKN3WTF6StringES4_(%"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3)
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE(%"class.blink::InspectorAgentState::MapField"* %25, %"class.WTF::String"* nonnull dereferenceable(8) %6)
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %44

44:                                               ; preds = %24, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  call void @_ZN5blink25InspectorDOMDebuggerAgent19DidRemoveBreakpointEv(%"class.blink::InspectorDOMDebuggerAgent"* %1)
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %45

45:                                               ; preds = %21, %14, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorDOMDebuggerAgent29removeEventListenerBreakpointERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 -1, i32 9, i32 3, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorDOMDebuggerAgent"*
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent29removeEventListenerBreakpointERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %6, %"class.WTF::String"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent31removeInstrumentationBreakpointERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN12_GLOBAL__N_132instrumentationEventCategoryTypeE, i64 0, i64 0), i64 16) #13
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #13
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !3

28:                                               ; preds = %19
  call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %3, %14, %29
  %32 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::StringImpl"* %12)
  %33 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 0, i32 0
  %34 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %32, 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1, i32 0, i32 0
  %36 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %32, 1
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %35, align 8
  %37 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %5)
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  %39 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  call void @_ZN5blink25InspectorDOMDebuggerAgent16RemoveBreakpointERKN3WTF6StringES4_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %7)
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #13
  br label %56

56:                                               ; preds = %31, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  %57 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #13
  br label %71

71:                                               ; preds = %56, %67, %70
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #13
  br label %87

87:                                               ; preds = %86, %83, %71
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #13
  br label %103

103:                                              ; preds = %87, %99, %102
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #13
  br label %120

120:                                              ; preds = %103, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorDOMDebuggerAgent31removeInstrumentationBreakpointERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 -1, i32 9, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorDOMDebuggerAgent"*
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent31removeInstrumentationBreakpointERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %5, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE(%"class.blink::InspectorAgentState::MapField"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.WTF::HashMap.1668", %"class.WTF::HashMap.1668"* %5, i64 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1669"* %6, %"class.WTF::String"* dereferenceable(8) %1) #13
  %8 = extractvalue { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.1668", %"class.WTF::HashMap.1668"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair.1672"* %8, %14
  br i1 %15, label %98, label %16

16:                                               ; preds = %2
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.1669"* %6, %"struct.WTF::KeyValuePair.1672"* %8) #13
  %17 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %18 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %17, align 8
  %19 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #13
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !3

39:                                               ; preds = %30
  tail call void @llvm.trap() #13
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %16, %25, %40
  %43 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %21, %"class.WTF::StringImpl"* %23)
  %44 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 0, i32 0
  %45 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1, i32 0, i32 0
  %47 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 1
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %46, align 8
  %48 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %4)
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %18, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::WebVector"* null) #13
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #13
  br label %65

65:                                               ; preds = %42, %61, %64
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #13
  br label %81

81:                                               ; preds = %80, %77, %65
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #13
  br label %97

97:                                               ; preds = %81, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %98

98:                                               ; preds = %2, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent19DidRemoveBreakpointEv(%"class.blink::InspectorDOMDebuggerAgent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::WebVector", align 8
  %3 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %52

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 9, i32 3, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 8, i32 3, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %52

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 7, i32 3, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %52

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 6, i32 2
  %20 = load i8, i8* %19, align 1, !range !11
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %52

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5
  %24 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 2
  %25 = load i8, i8* %24, align 1, !range !11
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %49, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 1
  %29 = load i8, i8* %28, align 8, !range !11
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %23 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %33 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %33, i64 2
  %35 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %34, align 8
  tail call void %35(%"class.blink::InspectorAgentState::SimpleField"* %23) #13
  br label %49

36:                                               ; preds = %27
  store i8 0, i8* %24, align 1
  %37 = bitcast %"class.blink::WebVector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13
  %38 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %2, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext false, %"class.blink::WebVector"* nonnull %2) #13
  %39 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 0, i32 2
  %40 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 5, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %40, %"class.WTF::String"* dereferenceable(8) %41, %"class.blink::WebVector"* nonnull %2) #13
  %42 = load i8*, i8** %38, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %2, i64 0, i32 0, i32 0, i32 1
  %46 = ptrtoint i8* %42 to i64
  %47 = bitcast i8** %45 to i64*
  store i64 %46, i64* %47, align 8
  call void @_ZdlPv(i8* nonnull %42) #14
  br label %48

48:                                               ; preds = %44, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13
  br label %49

49:                                               ; preds = %22, %31, %48
  %50 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %50, align 8
  call void @_ZN5blink13CoreProbeSink31RemoveInspectorDOMDebuggerAgentEPNS_25InspectorDOMDebuggerAgentE(%"class.blink::CoreProbeSink"* %51, %"class.blink::InspectorDOMDebuggerAgent"* %0) #13
  br label %52

52:                                               ; preds = %18, %14, %10, %6, %1, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent22DidInvalidateStyleAttrEPNS_4NodeE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = bitcast %"class.blink::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  store %"class.blink::Node"* %1, %"class.blink::Node"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK5blink17InspectorDOMAgent7EnabledEv(%"class.blink::InspectorDOMAgent"* %6) #13
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  br label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0
  %11 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1664"* %10, %"class.blink::Node"** nonnull dereferenceable(8) %3) #13
  %12 = and i32 %11, 131074
  %13 = icmp eq i32 %12, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  call void @_ZN5blink25InspectorDOMDebuggerAgent22BreakProgramOnDOMEventEPNS_4NodeEib(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::Node"* %1, i32 1, i1 zeroext false)
  br label %15

15:                                               ; preds = %9, %8, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink25InspectorDOMDebuggerAgent13HasBreakpointEPNS_4NodeEi(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::Node"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Node"*, align 8
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK5blink17InspectorDOMAgent7EnabledEv(%"class.blink::InspectorDOMAgent"* %6) #13
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = shl i32 1, %2
  %10 = shl i32 %9, 16
  %11 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0
  %12 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1664"* %11, %"class.blink::Node"** nonnull dereferenceable(8) %4)
  %13 = or i32 %10, %9
  %14 = and i32 %12, %13
  %15 = icmp ne i32 %14, 0
  br label %16

16:                                               ; preds = %3, %8
  %17 = phi i1 [ %15, %8 ], [ false, %3 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent22BreakProgramOnDOMEventEPNS_4NodeEib(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::Node"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::Node"*, align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.std::__1::vector.2089", align 8
  %13 = alloca %"class.std::__1::vector.2089", align 8
  %14 = alloca %"class.v8_inspector::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.v8_inspector::StringView", align 8
  %17 = tail call i8* @_Znwm(i64 80) #14
  %18 = bitcast i8* %17 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %18) #13
  %19 = bitcast %"class.blink::Node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  store %"class.blink::Node"* %1, %"class.blink::Node"** %6, align 8
  %20 = shl i32 1, %2
  %21 = icmp eq i32 %2, 0
  br i1 %21, label %22, label %79

22:                                               ; preds = %4
  %23 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i64 12) #13
  %24 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %24, align 8
  %26 = call i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %25, %"class.blink::Node"* %1) #13
  call void @_ZN5blink8protocol15DictionaryValue10setIntegerERKN3WTF6StringEi(%"class.blink::protocol::DictionaryValue"* nonnull %18, %"class.WTF::String"* nonnull dereferenceable(8) %7, i32 %26) #13
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %22, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br i1 %3, label %46, label %44

44:                                               ; preds = %43
  %45 = call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent15InnerParentNodeEPNS_4NodeE(%"class.blink::Node"* %1) #13
  store %"class.blink::Node"* %45, %"class.blink::Node"** %6, align 8
  br label %46

46:                                               ; preds = %44, %43
  %47 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0
  %48 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1664"* %47, %"class.blink::Node"** nonnull dereferenceable(8) %6)
  %49 = and i32 %48, %20
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %59

51:                                               ; preds = %46, %55
  %52 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %53 = call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent15InnerParentNodeEPNS_4NodeE(%"class.blink::Node"* %52) #13
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  store %"class.blink::Node"* %53, %"class.blink::Node"** %6, align 8
  %56 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1664"* %47, %"class.blink::Node"** nonnull dereferenceable(8) %6)
  %57 = and i32 %56, %20
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %51, label %59

59:                                               ; preds = %51, %55, %46
  %60 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 9) #13
  call void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"* nonnull %18, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext %3) #13
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #13
  br label %77

77:                                               ; preds = %59, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #13
  %78 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  br label %79

79:                                               ; preds = %77, %4
  %80 = phi %"class.blink::Node"* [ %78, %77 ], [ %1, %4 ]
  %81 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %81, align 8
  %83 = call i32 @_ZN5blink17InspectorDOMAgent11BoundNodeIdEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %82, %"class.blink::Node"* %80) #13
  %84 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #13
  call void @_ZN5blink8protocol15DictionaryValue10setIntegerERKN3WTF6StringEi(%"class.blink::protocol::DictionaryValue"* nonnull %18, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 %83) #13
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #13
  br label %101

101:                                              ; preds = %79, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #13
  %102 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #13
  %103 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #13
  %104 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104)
  switch i32 %2, label %108 [
    i32 0, label %105
    i32 1, label %106
    i32 2, label %107
  ]

105:                                              ; preds = %101
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i64 16) #13
  br label %131

106:                                              ; preds = %101
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i64 0, i64 0), i64 18) #13
  br label %131

107:                                              ; preds = %101
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i64 12) #13
  br label %131

108:                                              ; preds = %101
  %109 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %111, %"class.WTF::StringImpl"** %112, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %113, label %131, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i33
  %123 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #13
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !3

128:                                              ; preds = %119
  call void @llvm.trap() #13
  unreachable

129:                                              ; preds = %119
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %120, align 4
  br label %131

131:                                              ; preds = %105, %106, %107, %108, %114, %129
  %132 = bitcast %"class.WTF::String"* %5 to i64*
  %133 = load i64, i64* %132, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104)
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %135 = bitcast %"class.WTF::String"* %11 to i64*
  store i64 %133, i64* %135, align 8
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %18, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11) #13
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #13
  br label %151

151:                                              ; preds = %131, %147, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #13
  %152 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #13
  br label %168

168:                                              ; preds = %151, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #13
  %169 = bitcast %"class.std::__1::vector.2089"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #13
  %170 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %12, i64 0, i32 0, i32 0
  %171 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %12, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 0, i64 24, i1 false) #13
  %172 = bitcast %"class.std::__1::vector.2089"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #13
  %173 = bitcast i8* %17 to %"class.crdtp::Serializable"*
  call void @_ZNK5crdtp12Serializable9SerializeEv(%"class.std::__1::vector.2089"* nonnull sret %13, %"class.crdtp::Serializable"* nonnull %173) #13
  %174 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %13, i64 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %13, i64 0, i32 0, i32 1
  %177 = bitcast i8** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = ptrtoint i8* %175 to i64
  %180 = sub i64 %178, %179
  %181 = call { i32, i64 } @_ZN5crdtp4json17ConvertCBORToJSONENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %175, i64 %180, %"class.std::__1::vector.2089"* nonnull %12) #13
  %182 = load i8*, i8** %174, align 8
  %183 = icmp eq i8* %182, null
  br i1 %183, label %186, label %184

184:                                              ; preds = %168
  %185 = ptrtoint i8* %182 to i64
  store i64 %185, i64* %177, align 8
  call void @_ZdlPv(i8* nonnull %182) #14
  br label %186

186:                                              ; preds = %168, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #13
  %187 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 3
  %188 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %187, align 8
  %189 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #13
  %190 = load i8*, i8** @_ZN12v8_inspector8protocol8Debugger3API6Paused10ReasonEnum3DOME, align 8
  %191 = icmp eq i8* %190, null
  br i1 %191, label %198, label %192

192:                                              ; preds = %186
  %193 = call i64 @strlen(i8* nonnull %190) #15
  %194 = icmp ult i64 %193, 4294967296
  br i1 %194, label %196, label %195, !prof !2

195:                                              ; preds = %192
  call void @llvm.trap() #13
  unreachable

196:                                              ; preds = %192
  %197 = trunc i64 %193 to i32
  br label %198

198:                                              ; preds = %186, %196
  %199 = phi i32 [ %197, %196 ], [ 0, %186 ]
  %200 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %201 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %200, i64* %201, align 8
  %202 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* %190, i8** %202, align 8
  %203 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %199, i32* %203, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #13
  %204 = bitcast %"class.std::__1::vector.2089"* %12 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast i8** %171 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = sub i64 %207, %205
  %209 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %16, i64 0, i32 0
  store i8 1, i8* %209, align 8
  %210 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %16, i64 0, i32 1
  store i64 %208, i64* %210, align 8
  %211 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %16, i64 0, i32 2, i32 0
  %212 = bitcast i8** %211 to i64*
  store i64 %205, i64* %212, align 8
  %213 = bitcast %"class.v8_inspector::V8InspectorSession"* %188 to void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)***
  %214 = load void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)**, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*** %213, align 8
  %215 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)** %214, i64 9
  %216 = load void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)** %215, align 8
  call void %216(%"class.v8_inspector::V8InspectorSession"* %188, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %14, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %16) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #13
  %217 = load i8*, i8** %170, align 8
  %218 = icmp eq i8* %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %198
  %220 = ptrtoint i8* %217 to i64
  store i64 %220, i64* %206, align 8
  call void @_ZdlPv(i8* nonnull %217) #14
  br label %221

221:                                              ; preds = %198, %219
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %222 = bitcast i8* %17 to void (%"class.blink::protocol::DictionaryValue"*)***
  %223 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %223, i64 2
  %225 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %224, align 8
  call void %225(%"class.blink::protocol::DictionaryValue"* nonnull %18) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent16DidInsertDOMNodeEPNS_4NodeE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0
  %9 = bitcast %"class.blink::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent15InnerParentNodeEPNS_4NodeE(%"class.blink::Node"* %1) #13
  store %"class.blink::Node"* %10, %"class.blink::Node"** %3, align 8
  %11 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1664"* %8, %"class.blink::Node"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %12 = lshr i32 %11, 16
  %13 = or i32 %12, %11
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %7
  call void @_ZN5blink25InspectorDOMDebuggerAgent24UpdateSubtreeBreakpointsEPNS_4NodeEjb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::Node"* %1, i32 %14, i1 zeroext true)
  br label %17

17:                                               ; preds = %16, %7, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1664"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %1, align 8
  %4 = ptrtoint %"class.blink::Node"* %3 to i64
  %5 = getelementptr inbounds %"class.WTF::HashMap.1664", %"class.WTF::HashMap.1664"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.1667"* %6, null
  br i1 %7, label %73, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashMap.1664", %"class.WTF::HashMap.1664"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %6, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, %3
  br i1 %37, label %67, label %38

38:                                               ; preds = %8
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %58, %38
  %53 = phi i64 [ %33, %38 ], [ %62, %58 ]
  %54 = phi i64 [ 0, %38 ], [ %60, %58 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %6, i64 %53, i32 0, i32 0, i32 0
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %55, align 8
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %51, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %12
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %6, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, %3
  br i1 %66, label %67, label %52

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.1667"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.1667"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %68, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  br label %73

73:                                               ; preds = %52, %2, %67, %70
  %74 = phi i32 [ %72, %70 ], [ 0, %67 ], [ 0, %2 ], [ 0, %52 ]
  ret i32 %74
}

declare %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent15InnerParentNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent24UpdateSubtreeBreakpointsEPNS_4NodeEjb(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::Node"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = alloca i32, align 4
  store %"class.blink::Node"* %1, %"class.blink::Node"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0
  %8 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1664"* %7, %"class.blink::Node"** nonnull dereferenceable(8) %5)
  %9 = shl i32 %2, 16
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #13
  %11 = or i32 %8, %9
  %12 = xor i32 %9, -1
  %13 = and i32 %8, %12
  %14 = select i1 %3, i32 %11, i32 %13
  store i32 %14, i32* %6, align 4
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashMap.1664", %"class.WTF::HashMap.1664"* %7, i64 0, i32 0
  br i1 %15, label %26, label %17

17:                                               ; preds = %4
  %18 = call { %"struct.WTF::KeyValuePair.1667"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.1665"* %16, %"class.blink::Node"** nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %6) #13
  %19 = extractvalue { %"struct.WTF::KeyValuePair.1667"*, i8 } %18, 1
  %20 = and i8 %19, 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %38

22:                                               ; preds = %17
  %23 = extractvalue { %"struct.WTF::KeyValuePair.1667"*, i8 } %18, 0
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %23, i64 0, i32 1
  %25 = load i32, i32* %6, align 4
  store i32 %25, i32* %24, align 4
  br label %38

26:                                               ; preds = %4
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %28 = call { %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.1665"* %16, %"class.blink::Node"* %27) #13
  %29 = extractvalue { %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"* } %28, 0
  %30 = getelementptr inbounds %"class.WTF::HashMap.1664", %"class.WTF::HashMap.1664"* %7, i64 0, i32 0, i32 0
  %31 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %31, i64 %34
  %36 = icmp eq %"struct.WTF::KeyValuePair.1667"* %35, %29
  br i1 %36, label %38, label %37

37:                                               ; preds = %26
  call void @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.1665"* %16, %"struct.WTF::KeyValuePair.1667"* %29) #13
  br label %38

38:                                               ; preds = %37, %26, %22, %17
  %39 = load i32, i32* %6, align 4
  %40 = xor i32 %39, -1
  %41 = and i32 %40, %2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %45 = call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent15InnerFirstChildEPNS_4NodeE(%"class.blink::Node"* %44) #13
  %46 = icmp eq %"class.blink::Node"* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %43, %47
  %48 = phi %"class.blink::Node"* [ %49, %47 ], [ %45, %43 ]
  call void @_ZN5blink25InspectorDOMDebuggerAgent24UpdateSubtreeBreakpointsEPNS_4NodeEjb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::Node"* nonnull %48, i32 %41, i1 zeroext %3)
  %49 = call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent16InnerNextSiblingEPNS_4NodeE(%"class.blink::Node"* nonnull %48) #13
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %43, %38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent16DidRemoveDOMNodeEPNS_4NodeE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.1997", align 8
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0
  %7 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %124, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashMap.1664", %"class.WTF::HashMap.1664"* %6, i64 0, i32 0
  %12 = tail call { %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.1665"* %11, %"class.blink::Node"* %1) #13
  %13 = extractvalue { %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"* } %12, 0
  %14 = getelementptr inbounds %"class.WTF::HashMap.1664", %"class.WTF::HashMap.1664"* %6, i64 0, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %15, i64 %18
  %20 = icmp eq %"struct.WTF::KeyValuePair.1667"* %19, %13
  br i1 %20, label %22, label %21

21:                                               ; preds = %10
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.1665"* %11, %"struct.WTF::KeyValuePair.1667"* %13) #13
  br label %22

22:                                               ; preds = %10, %21
  %23 = bitcast %"class.blink::HeapVector.1997"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.blink::HeapVector.1997", %"class.blink::HeapVector.1997"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::HeapVector.1997", %"class.blink::HeapVector.1997"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.blink::HeapVector.1997", %"class.blink::HeapVector.1997"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %27 = bitcast %"class.blink::HeapVector.1997"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  %28 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent15InnerFirstChildEPNS_4NodeE(%"class.blink::Node"* %1) #13
  %29 = ptrtoint %"class.blink::Node"* %28 to i64
  %30 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 1) #13
  %31 = ptrtoint %"class.blink::HeapVectorBacking"* %30 to i64
  %32 = bitcast %"class.blink::HeapVector.1997"* %3 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  store i32 1, i32* %25, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %30, i64 0, i32 0
  %37 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %36) #13
  br label %38

38:                                               ; preds = %35, %22
  store i32 1, i32* %26, align 4
  %39 = bitcast %"class.blink::HeapVectorBacking"* %30 to i64*
  store atomic i64 %29, i64* %39 monotonic, align 8
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::Node"* %28 to i8*
  %44 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %43) #13
  br label %45

45:                                               ; preds = %42, %38
  %46 = getelementptr inbounds %"class.blink::HeapVector.1997", %"class.blink::HeapVector.1997"* %3, i64 0, i32 0
  %47 = bitcast %"class.blink::Node"** %4 to i8*
  %48 = bitcast %"class.blink::Node"** %5 to i8*
  %49 = load i32, i32* %26, align 4
  br label %50

50:                                               ; preds = %45, %120
  %51 = phi i32 [ %49, %45 ], [ %121, %120 ]
  %52 = add i32 %51, -1
  %53 = call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2000"* nonnull %46, i32 %52) #13
  %54 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %56 = load i32, i32* %26, align 4
  %57 = add i32 %56, -1
  %58 = load %"class.blink::Member"*, %"class.blink::Member"** %24, align 8
  %59 = zext i32 %57 to i64
  %60 = zext i32 %56 to i64
  %61 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %58, i64 %59
  %62 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %58, i64 %60
  %63 = bitcast %"class.blink::Member"* %61 to i8*
  %64 = ptrtoint %"class.blink::Member"* %62 to i64
  %65 = ptrtoint %"class.blink::Member"* %61 to i64
  %66 = sub i64 %64, %65
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %63, i64 %66) #13
  store i32 %57, i32* %26, align 4
  %67 = icmp eq %"class.blink::Node"* %55, null
  br i1 %67, label %120, label %68

68:                                               ; preds = %50
  %69 = call { %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.1665"* %11, %"class.blink::Node"* nonnull %55) #13
  %70 = extractvalue { %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"* } %69, 0
  %71 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %14, align 8
  %72 = load i32, i32* %16, align 8
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %71, i64 %73
  %75 = icmp eq %"struct.WTF::KeyValuePair.1667"* %74, %70
  br i1 %75, label %77, label %76

76:                                               ; preds = %68
  call void @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.1665"* %11, %"struct.WTF::KeyValuePair.1667"* %70) #13
  br label %77

77:                                               ; preds = %68, %76
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  %78 = call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent15InnerFirstChildEPNS_4NodeE(%"class.blink::Node"* nonnull %55) #13
  store %"class.blink::Node"* %78, %"class.blink::Node"** %4, align 8
  %79 = load i32, i32* %26, align 4
  %80 = load i32, i32* %25, align 8
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %96, label %82, !prof !3

82:                                               ; preds = %77
  %83 = ptrtoint %"class.blink::Node"* %78 to i64
  %84 = load %"class.blink::Member"*, %"class.blink::Member"** %24, align 8
  %85 = zext i32 %79 to i64
  %86 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %84, i64 %85
  %87 = bitcast %"class.blink::Member"* %86 to i64*
  store atomic i64 %83, i64* %87 monotonic, align 8
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %82
  %91 = bitcast %"class.blink::Node"* %78 to i8*
  %92 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %91) #13
  br label %93

93:                                               ; preds = %90, %82
  %94 = load i32, i32* %26, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %26, align 4
  br label %97

96:                                               ; preds = %77
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2000"* nonnull %46, %"class.blink::Node"** nonnull dereferenceable(8) %4) #13
  br label %97

97:                                               ; preds = %93, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #13
  %98 = call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent16InnerNextSiblingEPNS_4NodeE(%"class.blink::Node"* nonnull %55) #13
  store %"class.blink::Node"* %98, %"class.blink::Node"** %5, align 8
  %99 = load i32, i32* %26, align 4
  %100 = load i32, i32* %25, align 8
  %101 = icmp eq i32 %99, %100
  br i1 %101, label %116, label %102, !prof !3

102:                                              ; preds = %97
  %103 = ptrtoint %"class.blink::Node"* %98 to i64
  %104 = load %"class.blink::Member"*, %"class.blink::Member"** %24, align 8
  %105 = zext i32 %99 to i64
  %106 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %104, i64 %105
  %107 = bitcast %"class.blink::Member"* %106 to i64*
  store atomic i64 %103, i64* %107 monotonic, align 8
  %108 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %102
  %111 = bitcast %"class.blink::Node"* %98 to i8*
  %112 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %111) #13
  br label %113

113:                                              ; preds = %110, %102
  %114 = load i32, i32* %26, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %26, align 4
  br label %118

116:                                              ; preds = %97
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2000"* nonnull %46, %"class.blink::Node"** nonnull dereferenceable(8) %5) #13
  %117 = load i32, i32* %26, align 4
  br label %118

118:                                              ; preds = %113, %116
  %119 = phi i32 [ %115, %113 ], [ %117, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #13
  br label %120

120:                                              ; preds = %50, %118
  %121 = phi i32 [ %57, %50 ], [ %119, %118 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %50

123:                                              ; preds = %120
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #13
  br label %124

124:                                              ; preds = %2, %123
  ret void
}

declare %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent15InnerFirstChildEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent16InnerNextSiblingEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20IsValidViolationTypeERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %21

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %20, align 8
  br label %21

21:                                               ; preds = %14, %10
  %22 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  %24 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol11DOMDebugger20CSPViolationTypeEnum24TrustedtypeSinkViolationE, i64 0, i64 0)) #15
  %26 = icmp ult i64 %25, 4294967296
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %21
  tail call void @llvm.trap() #13
  unreachable

28:                                               ; preds = %21
  %29 = trunc i64 %25 to i32
  %30 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %31 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol11DOMDebugger20CSPViolationTypeEnum24TrustedtypeSinkViolationE, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %29, i32* %33, align 8
  %34 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  br i1 %34, label %64, label %35

35:                                               ; preds = %28
  %36 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #13
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %40, align 8
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %41, i64* %42, align 8
  br label %50

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %49 = bitcast i8** %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %49, align 8
  br label %50

50:                                               ; preds = %43, %39
  %51 = phi i32 [ %46, %43 ], [ 0, %39 ]
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %51, i32* %52, align 8
  %53 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #13
  %54 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol11DOMDebugger20CSPViolationTypeEnum26TrustedtypePolicyViolationE, i64 0, i64 0)) #15
  %55 = icmp ult i64 %54, 4294967296
  br i1 %55, label %57, label %56, !prof !2

56:                                               ; preds = %50
  call void @llvm.trap() #13
  unreachable

57:                                               ; preds = %50
  %58 = trunc i64 %54 to i32
  %59 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %60 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol11DOMDebugger20CSPViolationTypeEnum26TrustedtypePolicyViolationE, i64 0, i64 0), i8** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %58, i32* %62, align 8
  %63 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #13
  br label %64

64:                                               ; preds = %57, %28
  %65 = phi i1 [ true, %28 ], [ %63, %57 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent22setBreakOnCSPViolationENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.std::__1::vector.2008"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 9
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv(%"class.blink::InspectorAgentState::MapField"* %6)
  %7 = getelementptr inbounds %"class.std::__1::vector.2008", %"class.std::__1::vector.2008"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.2008", %"class.std::__1::vector.2008"* %2, i64 0, i32 0, i32 1
  %10 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  %11 = icmp eq %"class.WTF::String"* %8, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent19DidRemoveBreakpointEv(%"class.blink::InspectorDOMDebuggerAgent"* %1)
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %60

13:                                               ; preds = %3, %26
  %14 = phi %"class.WTF::String"* [ %27, %26 ], [ %8, %3 ]
  %15 = tail call zeroext i1 @_ZN5blink20IsValidViolationTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %14)
  br i1 %15, label %26, label %16

16:                                               ; preds = %13
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv(%"class.blink::InspectorAgentState::MapField"* %6)
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent19DidRemoveBreakpointEv(%"class.blink::InspectorDOMDebuggerAgent"* %1)
  %17 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  store i8 22, i8* %18, align 1
  %19 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i64 22, i1 false) #13
  %20 = getelementptr inbounds i8, i8* %19, i64 22
  store i8 0, i8* %20, align 2
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #13
  %21 = load i8, i8* %18, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %60

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #14
  br label %60

26:                                               ; preds = %13
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb(%"class.blink::InspectorAgentState::MapField"* %6, %"class.WTF::String"* dereferenceable(8) %14, i1 zeroext true)
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 1
  %28 = icmp eq %"class.WTF::String"* %27, %10
  br i1 %28, label %29, label %13

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5
  %31 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 2
  %32 = load i8, i8* %31, align 1, !range !11
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %59

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 1
  %36 = load i8, i8* %35, align 8, !range !11
  %37 = icmp eq i8 %36, 1
  br i1 %37, label %38, label %43

38:                                               ; preds = %34
  %39 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %30 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %40 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %40, i64 2
  %42 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %41, align 8
  tail call void %42(%"class.blink::InspectorAgentState::SimpleField"* %30) #13
  br label %56

43:                                               ; preds = %34
  store i8 1, i8* %31, align 1
  %44 = bitcast %"class.blink::WebVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #13
  %45 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector"* nonnull %4) #13
  %46 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 0, i32 2
  %47 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %47, %"class.WTF::String"* dereferenceable(8) %48, %"class.blink::WebVector"* nonnull %4) #13
  %49 = load i8*, i8** %45, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %4, i64 0, i32 0, i32 0, i32 1
  %53 = ptrtoint i8* %49 to i64
  %54 = bitcast i8** %52 to i64*
  store i64 %53, i64* %54, align 8
  call void @_ZdlPv(i8* nonnull %49) #14
  br label %55

55:                                               ; preds = %51, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #13
  br label %56

56:                                               ; preds = %55, %38
  %57 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %58 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %57, align 8
  call void @_ZN5blink13CoreProbeSink28AddInspectorDOMDebuggerAgentEPNS_25InspectorDOMDebuggerAgentE(%"class.blink::CoreProbeSink"* %58, %"class.blink::InspectorDOMDebuggerAgent"* %1) #13
  br label %59

59:                                               ; preds = %29, %56
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %60

60:                                               ; preds = %23, %16, %59, %12
  %61 = icmp eq %"class.std::__1::vector.2008"* %2, null
  br i1 %61, label %97, label %62

62:                                               ; preds = %60
  %63 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %64 = icmp eq %"class.WTF::String"* %63, null
  br i1 %64, label %95, label %65

65:                                               ; preds = %62
  %66 = bitcast %"class.WTF::String"* %63 to i8*
  %67 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  %68 = icmp eq %"class.WTF::String"* %67, %63
  br i1 %68, label %93, label %69

69:                                               ; preds = %65, %88
  %70 = phi %"class.WTF::String"* [ %71, %88 ], [ %67, %65 ]
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 -1
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #13
  br label %88

88:                                               ; preds = %87, %84, %69
  %89 = icmp eq %"class.WTF::String"* %71, %63
  br i1 %89, label %90, label %69

90:                                               ; preds = %88
  %91 = bitcast %"class.std::__1::vector.2008"* %2 to i8**
  %92 = load i8*, i8** %91, align 8
  br label %93

93:                                               ; preds = %90, %65
  %94 = phi i8* [ %92, %90 ], [ %66, %65 ]
  store %"class.WTF::String"* %63, %"class.WTF::String"** %9, align 8
  call void @_ZdlPv(i8* %94) #14
  br label %95

95:                                               ; preds = %93, %62
  %96 = bitcast %"class.std::__1::vector.2008"* %2 to i8*
  call void @_ZdlPv(i8* %96) #14
  br label %97

97:                                               ; preds = %60, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.1668", %"class.WTF::HashMap.1668"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %9, i64 %12
  br i1 %7, label %36, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"struct.WTF::KeyValuePair.1672"* [ %21, %20 ], [ %9, %14 ]
  %18 = bitcast %"struct.WTF::KeyValuePair.1672"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %17, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair.1672"* %21, %13
  br i1 %22, label %36, label %16

23:                                               ; preds = %16, %14
  %24 = phi %"struct.WTF::KeyValuePair.1672"* [ %9, %14 ], [ %17, %16 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair.1672"* %24, %13
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %28 = bitcast %"class.WTF::String"* %2 to i8*
  %29 = bitcast %"class.WTF::StringAppend"* %3 to i8*
  %30 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  br label %72

34:                                               ; preds = %147, %157, %154
  %35 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %8, align 8
  br label %36

36:                                               ; preds = %20, %1, %34, %23
  %37 = phi %"struct.WTF::KeyValuePair.1672"* [ %35, %34 ], [ %9, %23 ], [ %9, %1 ], [ %9, %20 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair.1672"* %37, null
  br i1 %38, label %71, label %39

39:                                               ; preds = %36
  %40 = load i32, i32* %10, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %68, label %42

42:                                               ; preds = %39
  %43 = zext i32 %40 to i64
  br label %44

44:                                               ; preds = %65, %42
  %45 = phi i64 [ 0, %42 ], [ %66, %65 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %37, i64 %45
  %47 = bitcast %"struct.WTF::KeyValuePair.1672"* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast i8* %48 to %"class.WTF::StringImpl"*
  %50 = ptrtoint i8* %48 to i64
  switch i64 %50, label %51 [
    i64 -1, label %65
    i64 0, label %65
  ]

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %48, i64 8
  %53 = bitcast i8* %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = bitcast i8* %48 to i32*
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %51
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %51
  %62 = phi i32 [ %60, %59 ], [ %58, %51 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #13
  br label %65

65:                                               ; preds = %64, %61, %44, %44
  %66 = add nuw nsw i64 %45, 1
  %67 = icmp eq i64 %66, %43
  br i1 %67, label %68, label %44

68:                                               ; preds = %65, %39
  %69 = bitcast %"struct.WTF::KeyValuePair.1672"* %37 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #13
  %70 = bitcast %"class.WTF::HashMap.1668"* %4 to i64*
  store atomic i64 0, i64* %70 monotonic, align 8
  store i32 0, i32* %10, align 8
  store i32 0, i32* %5, align 4
  br label %71

71:                                               ; preds = %36, %68
  ret void

72:                                               ; preds = %26, %157
  %73 = phi %"struct.WTF::KeyValuePair.1672"* [ %24, %26 ], [ %151, %157 ]
  %74 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #13
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %73, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #13
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %83
  call void @llvm.trap() #13
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %72, %78, %93
  %96 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %30, %"class.WTF::StringImpl"* %76)
  %97 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %96, 0
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %31, align 8
  %98 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %96, 1
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %32, align 8
  %99 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %3)
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %33, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %74, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.blink::WebVector"* null) #13
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #13
  br label %115

115:                                              ; preds = %95, %111, %114
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #13
  br label %131

131:                                              ; preds = %130, %127, %115
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #13
  br label %147

147:                                              ; preds = %131, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %73, i64 1
  %149 = icmp eq %"struct.WTF::KeyValuePair.1672"* %148, %13
  br i1 %149, label %34, label %150

150:                                              ; preds = %147, %154
  %151 = phi %"struct.WTF::KeyValuePair.1672"* [ %155, %154 ], [ %148, %147 ]
  %152 = bitcast %"struct.WTF::KeyValuePair.1672"* %151 to i64*
  %153 = load i64, i64* %152, align 8
  switch i64 %153, label %157 [
    i64 -1, label %154
    i64 0, label %154
  ]

154:                                              ; preds = %150, %150
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %151, i64 1
  %156 = icmp eq %"struct.WTF::KeyValuePair.1672"* %155, %13
  br i1 %156, label %34, label %150

157:                                              ; preds = %150
  %158 = icmp eq %"struct.WTF::KeyValuePair.1672"* %151, %13
  br i1 %158, label %34, label %72
}

declare void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorDOMDebuggerAgent22setBreakOnCSPViolationENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.std::__1::vector.2008"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 -1, i32 9, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorDOMDebuggerAgent"*
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent22setBreakOnCSPViolationENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %5, %"class.std::__1::vector.2008"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent16setDOMBreakpointEiRKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::WebVector", align 8
  %6 = alloca %"class.blink::Node"*, align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.crdtp::DispatchResponse", align 8
  %10 = alloca i32, align 4
  %11 = bitcast %"class.blink::Node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  store %"class.blink::Node"* null, %"class.blink::Node"** %6, align 8
  %12 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %13, align 8
  call void @_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.blink::InspectorDOMAgent"* %14, i32 %2, %"class.blink::Node"** nonnull dereferenceable(8) %6) #13
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %24, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %16, i32* %19, align 8
  %20 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #13
  br label %110

24:                                               ; preds = %4
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #13
  store i32 -1, i32* %8, align 4
  %26 = bitcast %"class.crdtp::DispatchResponse"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #13
  call fastcc void @_ZN5blinkL14DomTypeForNameERKN3WTF6StringERi(%"class.crdtp::DispatchResponse"* nonnull sret %9, %"class.WTF::String"* dereferenceable(8) %3, i32* nonnull dereferenceable(4) %8)
  %27 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %15, align 8
  %29 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %30 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #14
  %38 = load i32, i32* %15, align 8
  br label %39

39:                                               ; preds = %35, %24
  %40 = phi i32 [ %38, %35 ], [ %28, %24 ]
  %41 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #13
  %43 = icmp eq i32 %40, 1
  br i1 %43, label %48, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %40, i32* %45, align 8
  %46 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %41, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #13
  br label %110

48:                                               ; preds = %39
  %49 = load i32, i32* %8, align 4
  %50 = shl i32 1, %49
  %51 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 4, i32 0
  %52 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #13
  %53 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1664"* %51, %"class.blink::Node"** nonnull dereferenceable(8) %6)
  %54 = or i32 %53, %50
  store i32 %54, i32* %10, align 4
  %55 = getelementptr inbounds %"class.WTF::HashMap.1664", %"class.WTF::HashMap.1664"* %51, i64 0, i32 0
  %56 = call { %"struct.WTF::KeyValuePair.1667"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_jEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.1665"* %55, %"class.blink::Node"** nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %10) #13
  %57 = extractvalue { %"struct.WTF::KeyValuePair.1667"*, i8 } %56, 1
  %58 = and i8 %57, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %48
  %61 = extractvalue { %"struct.WTF::KeyValuePair.1667"*, i8 } %56, 0
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %61, i64 0, i32 1
  %63 = load i32, i32* %10, align 4
  store i32 %63, i32* %62, align 4
  br label %64

64:                                               ; preds = %48, %60
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #13
  %65 = icmp eq i32 %49, 0
  br i1 %65, label %66, label %74

66:                                               ; preds = %64
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %68 = call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent15InnerFirstChildEPNS_4NodeE(%"class.blink::Node"* %67) #13
  %69 = icmp eq %"class.blink::Node"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %66, %70
  %71 = phi %"class.blink::Node"* [ %72, %70 ], [ %68, %66 ]
  call void @_ZN5blink25InspectorDOMDebuggerAgent24UpdateSubtreeBreakpointsEPNS_4NodeEjb(%"class.blink::InspectorDOMDebuggerAgent"* %1, %"class.blink::Node"* nonnull %71, i32 %50, i1 zeroext true)
  %72 = call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent16InnerNextSiblingEPNS_4NodeE(%"class.blink::Node"* nonnull %71) #13
  %73 = icmp eq %"class.blink::Node"* %72, null
  br i1 %73, label %74, label %70

74:                                               ; preds = %70, %66, %64
  %75 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5
  %76 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 2
  %77 = load i8, i8* %76, align 1, !range !11
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %104

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 1
  %81 = load i8, i8* %80, align 8, !range !11
  %82 = icmp eq i8 %81, 1
  br i1 %82, label %83, label %88

83:                                               ; preds = %79
  %84 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %75 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %85 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %85, i64 2
  %87 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %86, align 8
  call void %87(%"class.blink::InspectorAgentState::SimpleField"* %75) #13
  br label %101

88:                                               ; preds = %79
  store i8 1, i8* %76, align 1
  %89 = bitcast %"class.blink::WebVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #13
  %90 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %5, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector"* nonnull %5) #13
  %91 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 0, i32 2
  %92 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %92, %"class.WTF::String"* dereferenceable(8) %93, %"class.blink::WebVector"* nonnull %5) #13
  %94 = load i8*, i8** %90, align 8
  %95 = icmp eq i8* %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %5, i64 0, i32 0, i32 0, i32 1
  %98 = ptrtoint i8* %94 to i64
  %99 = bitcast i8** %97 to i64*
  store i64 %98, i64* %99, align 8
  call void @_ZdlPv(i8* nonnull %94) #14
  br label %100

100:                                              ; preds = %96, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #13
  br label %101

101:                                              ; preds = %100, %83
  %102 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %103 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %102, align 8
  call void @_ZN5blink13CoreProbeSink28AddInspectorDOMDebuggerAgentEPNS_25InspectorDOMDebuggerAgentE(%"class.blink::CoreProbeSink"* %103, %"class.blink::InspectorDOMDebuggerAgent"* %1) #13
  br label %104

104:                                              ; preds = %101, %74
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  %105 = load i8, i8* %32, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #13
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %109) #14
  br label %110

110:                                              ; preds = %44, %18, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  ret void
}

declare void @_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL14DomTypeForNameERKN3WTF6StringERi(%"class.crdtp::DispatchResponse"* noalias sret, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32* nocapture dereferenceable(4)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::StringAppend.2095", align 8
  %13 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %18, align 8
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %20 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %19, i64* %20, align 8
  br label %29

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %27 = bitcast i8** %26 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %27, align 8
  %28 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

29:                                               ; preds = %21, %17
  %30 = phi i64 [ %28, %21 ], [ %19, %17 ]
  %31 = phi i32 [ %24, %21 ], [ 0, %17 ]
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %31, i32* %32, align 8
  %33 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #13
  %34 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %30, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i8** %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 16, i32* %36, align 8
  %37 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  store i32 0, i32* %2, align 4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %184

39:                                               ; preds = %29
  %40 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %44, align 8
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %46 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %45, i64* %46, align 8
  br label %55

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 1
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %53 = bitcast i8** %52 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %53, align 8
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %55

55:                                               ; preds = %47, %43
  %56 = phi i64 [ %54, %47 ], [ %45, %43 ]
  %57 = phi i32 [ %50, %47 ], [ 0, %43 ]
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %57, i32* %58, align 8
  %59 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #13
  %60 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %56, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i64 0, i64 0), i8** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 18, i32* %62, align 8
  %63 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13
  br i1 %63, label %64, label %65

64:                                               ; preds = %55
  store i32 1, i32* %2, align 4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %184

65:                                               ; preds = %55
  %66 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #13
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %69, label %73

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %70, align 8
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %72 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %71, i64* %72, align 8
  br label %81

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 1
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %79 = bitcast i8** %78 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %79, align 8
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %81

81:                                               ; preds = %73, %69
  %82 = phi i64 [ %80, %73 ], [ %71, %69 ]
  %83 = phi i32 [ %76, %73 ], [ 0, %69 ]
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %83, i32* %84, align 8
  %85 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #13
  %86 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %82, i64* %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8** %87, align 8
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 12, i32* %88, align 8
  %89 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #13
  br i1 %89, label %90, label %91

90:                                               ; preds = %81
  store i32 2, i32* %2, align 4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %184

91:                                               ; preds = %81
  %92 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #13
  %93 = bitcast %"class.WTF::StringAppend.2095"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #13
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %139, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %113

103:                                              ; preds = %96
  %104 = zext i32 %102 to i33
  %105 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #13
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !3

110:                                              ; preds = %103
  call void @llvm.trap() #13
  unreachable

111:                                              ; preds = %103
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %101, align 4
  br label %113

113:                                              ; preds = %111, %96
  %114 = phi i32 [ %112, %111 ], [ %102, %96 ]
  %115 = load atomic i32, i32* %97 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %128

118:                                              ; preds = %113
  %119 = zext i32 %114 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #13
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !3

125:                                              ; preds = %118
  call void @llvm.trap() #13
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %101, align 4
  br label %128

128:                                              ; preds = %126, %113
  %129 = phi i32 [ %127, %126 ], [ %114, %113 ]
  %130 = load atomic i32, i32* %97 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %128
  %134 = add i32 %129, -1
  store i32 %134, i32* %101, align 4
  br label %135

135:                                              ; preds = %133, %128
  %136 = phi i32 [ %134, %133 ], [ %129, %128 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #13
  br label %139

139:                                              ; preds = %91, %135, %138
  %140 = getelementptr inbounds %"class.WTF::StringAppend.2095", %"class.WTF::StringAppend.2095"* %12, i64 0, i32 0
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i8** %140, align 8
  %141 = getelementptr inbounds %"class.WTF::StringAppend.2095", %"class.WTF::StringAppend.2095"* %12, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %141, align 8
  %142 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.2095"* nonnull %12)
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %143, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.WTF::String"* nonnull %11, i32 0) #13
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %10) #13
  %144 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %151

148:                                              ; preds = %139
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  call void @_ZdlPv(i8* %150) #14
  br label %151

151:                                              ; preds = %139, %148
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #13
  br label %167

167:                                              ; preds = %151, %163, %166
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #13
  br label %183

183:                                              ; preds = %167, %179, %182
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #13
  br label %184

184:                                              ; preds = %183, %90, %64, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorDOMDebuggerAgent16setDOMBreakpointEiRKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 -1, i32 9, i32 3, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorDOMDebuggerAgent"*
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent16setDOMBreakpointEiRKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %6, i32 %2, %"class.WTF::String"* dereferenceable(8) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent19removeDOMBreakpointEiRKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca i32, align 4
  %10 = bitcast %"class.blink::Node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  store %"class.blink::Node"* null, %"class.blink::Node"** %5, align 8
  %11 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %12, align 8
  call void @_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.blink::InspectorDOMAgent"* %13, i32 %2, %"class.blink::Node"** nonnull dereferenceable(8) %5) #13
  %14 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %23, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %15, i32* %18, align 8
  %19 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #13
  br label %99

23:                                               ; preds = %4
  %24 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #13
  store i32 -1, i32* %7, align 4
  %25 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #13
  call fastcc void @_ZN5blinkL14DomTypeForNameERKN3WTF6StringERi(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.WTF::String"* dereferenceable(8) %3, i32* nonnull dereferenceable(4) %7)
  %26 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %14, align 8
  %28 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %29 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #14
  %37 = load i32, i32* %14, align 8
  br label %38

38:                                               ; preds = %34, %23
  %39 = phi i32 [ %37, %34 ], [ %27, %23 ]
  %40 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #13
  %42 = icmp eq i32 %39, 1
  br i1 %42, label %47, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %39, i32* %44, align 8
  %45 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %46 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %40, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #13
  br label %99

47:                                               ; preds = %38
  %48 = load i32, i32* %7, align 4
  %49 = shl i32 1, %48
  %50 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #13
  %51 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 4, i32 0
  %52 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1664"* %51, %"class.blink::Node"** nonnull dereferenceable(8) %5)
  %53 = xor i32 %49, -1
  %54 = and i32 %52, %53
  store i32 %54, i32* %9, align 4
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::HashMap.1664", %"class.WTF::HashMap.1664"* %51, i64 0, i32 0
  br i1 %55, label %66, label %57

57:                                               ; preds = %47
  %58 = call { %"struct.WTF::KeyValuePair.1667"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.1665"* %56, %"class.blink::Node"** nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %9) #13
  %59 = extractvalue { %"struct.WTF::KeyValuePair.1667"*, i8 } %58, 1
  %60 = and i8 %59, 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %78

62:                                               ; preds = %57
  %63 = extractvalue { %"struct.WTF::KeyValuePair.1667"*, i8 } %58, 0
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %63, i64 0, i32 1
  %65 = load i32, i32* %9, align 4
  store i32 %65, i32* %64, align 4
  br label %78

66:                                               ; preds = %47
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %68 = call { %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.1665"* %56, %"class.blink::Node"* %67) #13
  %69 = extractvalue { %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"* } %68, 0
  %70 = getelementptr inbounds %"class.WTF::HashMap.1664", %"class.WTF::HashMap.1664"* %51, i64 0, i32 0, i32 0
  %71 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %71, i64 %74
  %76 = icmp eq %"struct.WTF::KeyValuePair.1667"* %75, %69
  br i1 %76, label %78, label %77

77:                                               ; preds = %66
  call void @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.1665"* %56, %"struct.WTF::KeyValuePair.1667"* %69) #13
  br label %78

78:                                               ; preds = %77, %66, %62, %57
  %79 = icmp eq i32 %48, 0
  br i1 %79, label %80, label %93

80:                                               ; preds = %78
  %81 = load i32, i32* %9, align 4
  %82 = shl i32 %49, 16
  %83 = and i32 %81, %82
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %93

85:                                               ; preds = %80
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %87 = call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent15InnerFirstChildEPNS_4NodeE(%"class.blink::Node"* %86) #13
  %88 = icmp eq %"class.blink::Node"* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %85, %89
  %90 = phi %"class.blink::Node"* [ %91, %89 ], [ %87, %85 ]
  call void @_ZN5blink25InspectorDOMDebuggerAgent24UpdateSubtreeBreakpointsEPNS_4NodeEjb(%"class.blink::InspectorDOMDebuggerAgent"* %1, %"class.blink::Node"* nonnull %90, i32 %49, i1 zeroext false)
  %91 = call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent16InnerNextSiblingEPNS_4NodeE(%"class.blink::Node"* nonnull %90) #13
  %92 = icmp eq %"class.blink::Node"* %91, null
  br i1 %92, label %93, label %89

93:                                               ; preds = %89, %78, %80, %85
  call void @_ZN5blink25InspectorDOMDebuggerAgent19DidRemoveBreakpointEv(%"class.blink::InspectorDOMDebuggerAgent"* %1)
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #13
  %94 = load i8, i8* %31, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #13
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #14
  br label %99

99:                                               ; preds = %43, %17, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorDOMDebuggerAgent19removeDOMBreakpointEiRKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 -1, i32 9, i32 3, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorDOMDebuggerAgent"*
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent19removeDOMBreakpointEiRKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %6, i32 %2, %"class.WTF::String"* dereferenceable(8) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent17getEventListenersERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEENS7_IbEEPNSt3__110unique_ptrINSA_6vectorINSB_INS_8protocol11DOMDebugger13EventListenerENSA_14default_deleteISF_EEEENSA_9allocatorISI_EEEENSG_ISL_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe.2032"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2044"* nocapture readonly, %"class.std::__1::unique_ptr.2018"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::HandleScope", align 8
  %8 = alloca %"class.v8::Local", align 8
  %9 = alloca %"class.v8::Local.1996", align 8
  %10 = alloca %"class.std::__1::unique_ptr.2045", align 8
  %11 = alloca %"class.std::__1::unique_ptr.2045", align 8
  %12 = alloca %"class.v8_inspector::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::Vector.1985", align 8
  %17 = alloca i32, align 4
  %18 = alloca i8, align 1
  %19 = alloca %"class.v8_inspector::StringView", align 8
  %20 = bitcast %"class.v8::HandleScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 1
  %22 = bitcast %"class.v8::HandleScope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  %23 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %7, %"class.v8::Isolate"* %23) #13
  %24 = bitcast %"class.v8::Local"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %8, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %25, align 8
  %26 = bitcast %"class.v8::Local.1996"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.v8::Local.1996", %"class.v8::Local.1996"* %9, i64 0, i32 0
  store %"class.v8::Context"* null, %"class.v8::Context"** %27, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.2045"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.2045", %"class.std::__1::unique_ptr.2045"* %10, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::unique_ptr.2045"* %10 to i64*
  store i64 0, i64* %30, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.2045"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.2045", %"class.std::__1::unique_ptr.2045"* %11, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.std::__1::unique_ptr.2045"* %11 to i64*
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 3
  %35 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %34, align 8
  %36 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #13
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %6
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %41, align 8
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %43 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %42, i64* %43, align 8
  br label %51

44:                                               ; preds = %6
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %50 = bitcast i8** %49 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %50, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi i32 [ %47, %44 ], [ 0, %40 ]
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %52, i32* %53, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #13
  %54 = bitcast %"class.v8_inspector::V8InspectorSession"* %35 to i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.2045"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.1996"*, %"class.std::__1::unique_ptr.2045"*)***
  %55 = load i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.2045"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.1996"*, %"class.std::__1::unique_ptr.2045"*)**, i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.2045"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.1996"*, %"class.std::__1::unique_ptr.2045"*)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.2045"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.1996"*, %"class.std::__1::unique_ptr.2045"*)*, i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.2045"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.1996"*, %"class.std::__1::unique_ptr.2045"*)** %55, i64 15
  %57 = load i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.2045"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.1996"*, %"class.std::__1::unique_ptr.2045"*)*, i1 (%"class.v8_inspector::V8InspectorSession"*, %"class.std::__1::unique_ptr.2045"*, %"class.v8_inspector::StringView"*, %"class.v8::Local"*, %"class.v8::Local.1996"*, %"class.std::__1::unique_ptr.2045"*)** %56, align 8
  %58 = call zeroext i1 %57(%"class.v8_inspector::V8InspectorSession"* %35, %"class.std::__1::unique_ptr.2045"* nonnull %10, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %12, %"class.v8::Local"* nonnull %8, %"class.v8::Local.1996"* nonnull %9, %"class.std::__1::unique_ptr.2045"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #13
  br i1 %58, label %88, label %59

59:                                               ; preds = %51
  %60 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #13
  %61 = load %"class.v8_inspector::StringBuffer"*, %"class.v8_inspector::StringBuffer"** %29, align 8
  store %"class.v8_inspector::StringBuffer"* null, %"class.v8_inspector::StringBuffer"** %29, align 8
  %62 = call %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringENSt3__110unique_ptrIN12v8_inspector12StringBufferENS0_14default_deleteIS3_EEEE(%"class.v8_inspector::StringBuffer"* %61) #13
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %14, %"class.WTF::String"* nonnull %15, i32 0) #13
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %14) #13
  %64 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %70) #14
  br label %71

71:                                               ; preds = %59, %68
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #13
  br label %87

87:                                               ; preds = %71, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #13
  br label %189

88:                                               ; preds = %51
  %89 = load %"class.v8::Context"*, %"class.v8::Context"** %27, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %89) #13
  %90 = bitcast %"class.WTF::Vector.1985"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #13
  %91 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %16, i64 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %16, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 16, i1 false) #13
  %93 = load %"class.v8::Context"*, %"class.v8::Context"** %27, align 8
  %94 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %93) #13
  %95 = load %"class.v8::Value"*, %"class.v8::Value"** %25, align 8
  %96 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  store i32 1, i32* %17, align 4
  %97 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2032", %"class.crdtp::detail::ValueMaybe.2032"* %3, i64 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !11
  %99 = icmp eq i8 %98, 0
  %100 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2032", %"class.crdtp::detail::ValueMaybe.2032"* %3, i64 0, i32 1
  %101 = select i1 %99, i32* %17, i32* %100
  %102 = load i32, i32* %101, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18)
  store i8 0, i8* %18, align 1
  %103 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2044", %"class.crdtp::detail::ValueMaybe.2044"* %4, i64 0, i32 0
  %104 = load i8, i8* %103, align 1, !range !11
  %105 = icmp eq i8 %104, 0
  %106 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2044", %"class.crdtp::detail::ValueMaybe.2044"* %4, i64 0, i32 1
  %107 = select i1 %105, i8* %18, i8* %106
  %108 = load i8, i8* %107, align 1, !range !11
  %109 = icmp ne i8 %108, 0
  call void @_ZN5blink25InspectorDOMDebuggerAgent27EventListenersInfoForTargetEPN2v87IsolateENS1_5LocalINS1_5ValueEEEibPN3WTF6VectorINS_19V8EventListenerInfoELj0ENS7_18PartitionAllocatorEEE(%"class.v8::Isolate"* %94, %"class.v8::Value"* %95, i32 %102, i1 zeroext %109, %"class.WTF::Vector.1985"* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96)
  %110 = load %"class.v8::Context"*, %"class.v8::Context"** %27, align 8
  %111 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %19, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #13
  %112 = load %"class.v8_inspector::StringBuffer"*, %"class.v8_inspector::StringBuffer"** %32, align 8
  %113 = bitcast %"class.v8_inspector::StringBuffer"* %112 to void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)***
  %114 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)** %114, i64 2
  %116 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)** %115, align 8
  call void %116(%"class.v8_inspector::StringView"* nonnull sret %19, %"class.v8_inspector::StringBuffer"* %112) #13
  %117 = call %"class.std::__1::vector.2021"* @_ZN5blink25InspectorDOMDebuggerAgent29BuildObjectsForEventListenersERKN3WTF6VectorINS_19V8EventListenerInfoELj0ENS1_18PartitionAllocatorEEEN2v85LocalINS8_7ContextEEERKN12v8_inspector10StringViewE(%"class.blink::InspectorDOMDebuggerAgent"* %1, %"class.WTF::Vector.1985"* nonnull dereferenceable(16) %16, %"class.v8::Context"* %110, %"class.v8_inspector::StringView"* nonnull dereferenceable(24) %19)
  %118 = ptrtoint %"class.std::__1::vector.2021"* %117 to i64
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.2018", %"class.std::__1::unique_ptr.2018"* %5, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.std::__1::vector.2021"*, %"class.std::__1::vector.2021"** %119, align 8
  %121 = bitcast %"class.std::__1::unique_ptr.2018"* %5 to i64*
  store i64 %118, i64* %121, align 8
  %122 = icmp eq %"class.std::__1::vector.2021"* %120, null
  br i1 %122, label %152, label %123

123:                                              ; preds = %88
  %124 = getelementptr inbounds %"class.std::__1::vector.2021", %"class.std::__1::vector.2021"* %120, i64 0, i32 0, i32 0
  %125 = load %"class.std::__1::unique_ptr.2023"*, %"class.std::__1::unique_ptr.2023"** %124, align 8
  %126 = icmp eq %"class.std::__1::unique_ptr.2023"* %125, null
  br i1 %126, label %150, label %127

127:                                              ; preds = %123
  %128 = bitcast %"class.std::__1::unique_ptr.2023"* %125 to i8*
  %129 = getelementptr inbounds %"class.std::__1::vector.2021", %"class.std::__1::vector.2021"* %120, i64 0, i32 0, i32 1
  %130 = load %"class.std::__1::unique_ptr.2023"*, %"class.std::__1::unique_ptr.2023"** %129, align 8
  %131 = icmp eq %"class.std::__1::unique_ptr.2023"* %130, %125
  br i1 %131, label %148, label %132

132:                                              ; preds = %127, %143
  %133 = phi %"class.std::__1::unique_ptr.2023"* [ %134, %143 ], [ %130, %127 ]
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %133, i64 -1
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %134, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.blink::protocol::DOMDebugger::EventListener"*, %"class.blink::protocol::DOMDebugger::EventListener"** %135, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %135, align 8
  %137 = icmp eq %"class.blink::protocol::DOMDebugger::EventListener"* %136, null
  br i1 %137, label %143, label %138

138:                                              ; preds = %132
  %139 = bitcast %"class.blink::protocol::DOMDebugger::EventListener"* %136 to void (%"class.blink::protocol::DOMDebugger::EventListener"*)***
  %140 = load void (%"class.blink::protocol::DOMDebugger::EventListener"*)**, void (%"class.blink::protocol::DOMDebugger::EventListener"*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.blink::protocol::DOMDebugger::EventListener"*)*, void (%"class.blink::protocol::DOMDebugger::EventListener"*)** %140, i64 2
  %142 = load void (%"class.blink::protocol::DOMDebugger::EventListener"*)*, void (%"class.blink::protocol::DOMDebugger::EventListener"*)** %141, align 8
  call void %142(%"class.blink::protocol::DOMDebugger::EventListener"* nonnull %136) #13
  br label %143

143:                                              ; preds = %138, %132
  %144 = icmp eq %"class.std::__1::unique_ptr.2023"* %134, %125
  br i1 %144, label %145, label %132

145:                                              ; preds = %143
  %146 = bitcast %"class.std::__1::vector.2021"* %120 to i8**
  %147 = load i8*, i8** %146, align 8
  br label %148

148:                                              ; preds = %145, %127
  %149 = phi i8* [ %147, %145 ], [ %128, %127 ]
  store %"class.std::__1::unique_ptr.2023"* %125, %"class.std::__1::unique_ptr.2023"** %129, align 8
  call void @_ZdlPv(i8* %149) #14
  br label %150

150:                                              ; preds = %148, %123
  %151 = bitcast %"class.std::__1::vector.2021"* %120 to i8*
  call void @_ZdlPv(i8* %151) #14
  br label %152

152:                                              ; preds = %150, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #13
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  %153 = load %"struct.blink::V8EventListenerInfo"*, %"struct.blink::V8EventListenerInfo"** %91, align 8
  %154 = icmp eq %"struct.blink::V8EventListenerInfo"* %153, null
  br i1 %154, label %188, label %155, !prof !2

155:                                              ; preds = %152
  %156 = bitcast %"struct.blink::V8EventListenerInfo"* %153 to i8*
  %157 = load i32, i32* %92, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %186, label %159, !prof !3

159:                                              ; preds = %155
  %160 = zext i32 %157 to i64
  %161 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %153, i64 %160
  br label %162

162:                                              ; preds = %180, %159
  %163 = phi %"struct.blink::V8EventListenerInfo"* [ %181, %180 ], [ %153, %159 ]
  %164 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %163, i64 0, i32 0, i32 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #13
  br label %180

180:                                              ; preds = %179, %176, %162
  %181 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %163, i64 1
  %182 = icmp eq %"struct.blink::V8EventListenerInfo"* %181, %161
  br i1 %182, label %183, label %162

183:                                              ; preds = %180
  store i32 0, i32* %92, align 4
  %184 = bitcast %"class.WTF::Vector.1985"* %16 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %186

186:                                              ; preds = %183, %155
  %187 = phi i8* [ %185, %183 ], [ %156, %155 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %187) #13
  store %"struct.blink::V8EventListenerInfo"* null, %"struct.blink::V8EventListenerInfo"** %91, align 8
  br label %188

188:                                              ; preds = %152, %186
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #13
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %89) #13
  br label %189

189:                                              ; preds = %188, %87
  %190 = load %"class.v8_inspector::StringBuffer"*, %"class.v8_inspector::StringBuffer"** %32, align 8
  store %"class.v8_inspector::StringBuffer"* null, %"class.v8_inspector::StringBuffer"** %32, align 8
  %191 = icmp eq %"class.v8_inspector::StringBuffer"* %190, null
  br i1 %191, label %197, label %192

192:                                              ; preds = %189
  %193 = bitcast %"class.v8_inspector::StringBuffer"* %190 to void (%"class.v8_inspector::StringBuffer"*)***
  %194 = load void (%"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringBuffer"*)*** %193, align 8
  %195 = getelementptr inbounds void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %194, i64 1
  %196 = load void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %195, align 8
  call void %196(%"class.v8_inspector::StringBuffer"* nonnull %190) #13
  br label %197

197:                                              ; preds = %189, %192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  %198 = load %"class.v8_inspector::StringBuffer"*, %"class.v8_inspector::StringBuffer"** %29, align 8
  store %"class.v8_inspector::StringBuffer"* null, %"class.v8_inspector::StringBuffer"** %29, align 8
  %199 = icmp eq %"class.v8_inspector::StringBuffer"* %198, null
  br i1 %199, label %205, label %200

200:                                              ; preds = %197
  %201 = bitcast %"class.v8_inspector::StringBuffer"* %198 to void (%"class.v8_inspector::StringBuffer"*)***
  %202 = load void (%"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringBuffer"*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %202, i64 1
  %204 = load void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %203, align 8
  call void %204(%"class.v8_inspector::StringBuffer"* nonnull %198) #13
  br label %205

205:                                              ; preds = %197, %200
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #13
  ret void
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* sret, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringENSt3__110unique_ptrIN12v8_inspector12StringBufferENS0_14default_deleteIS3_EEEE(%"class.v8_inspector::StringBuffer"*) local_unnamed_addr #2

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.2021"* @_ZN5blink25InspectorDOMDebuggerAgent29BuildObjectsForEventListenersERKN3WTF6VectorINS_19V8EventListenerInfoELj0ENS1_18PartitionAllocatorEEEN2v85LocalINS8_7ContextEEERKN12v8_inspector10StringViewE(%"class.blink::InspectorDOMDebuggerAgent"* nocapture readonly, %"class.WTF::Vector.1985"* nocapture readonly dereferenceable(16), %"class.v8::Context"*, %"class.v8_inspector::StringView"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.2023", align 8
  %6 = alloca %"class.std::__1::unique_ptr.2023", align 8
  %7 = tail call i8* @_Znwm(i64 24) #14
  %8 = bitcast i8* %7 to %"class.std::__1::vector.2021"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #13
  %9 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.blink::V8EventListenerInfo"*, %"struct.blink::V8EventListenerInfo"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %100, label %16

16:                                               ; preds = %4
  %17 = bitcast %"class.std::__1::unique_ptr.2023"* %5 to i8*
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %5, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds i8, i8* %7, i64 8
  %20 = bitcast i8* %19 to %"class.std::__1::unique_ptr.2023"**
  %21 = getelementptr inbounds i8, i8* %7, i64 16
  %22 = bitcast i8* %21 to %"class.std::__1::unique_ptr.2023"**
  %23 = bitcast i8* %19 to i64*
  br label %38

24:                                               ; preds = %66
  %25 = load %"struct.blink::V8EventListenerInfo"*, %"struct.blink::V8EventListenerInfo"** %9, align 8
  %26 = load i32, i32* %11, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %25, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %100, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.std::__1::unique_ptr.2023"* %6 to i8*
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %6, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds i8, i8* %7, i64 8
  %34 = bitcast i8* %33 to %"class.std::__1::unique_ptr.2023"**
  %35 = getelementptr inbounds i8, i8* %7, i64 16
  %36 = bitcast i8* %35 to %"class.std::__1::unique_ptr.2023"**
  %37 = bitcast i8* %33 to i64*
  br label %69

38:                                               ; preds = %16, %66
  %39 = phi %"struct.blink::V8EventListenerInfo"* [ %10, %16 ], [ %67, %66 ]
  %40 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %39, i64 0, i32 1
  %41 = load i8, i8* %40, align 8, !range !11
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %66, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  store %"class.blink::protocol::DOMDebugger::EventListener"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::DOMDebugger::EventListener"*), %"class.blink::protocol::DOMDebugger::EventListener"** %18, align 8
  %44 = call %"class.blink::protocol::DOMDebugger::EventListener"* @_ZN5blink25InspectorDOMDebuggerAgent27BuildObjectForEventListenerEN2v85LocalINS1_7ContextEEERKNS_19V8EventListenerInfoERKN12v8_inspector10StringViewE(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.v8::Context"* %2, %"struct.blink::V8EventListenerInfo"* dereferenceable(40) %39, %"class.v8_inspector::StringView"* dereferenceable(24) %3)
  store %"class.blink::protocol::DOMDebugger::EventListener"* %44, %"class.blink::protocol::DOMDebugger::EventListener"** %18, align 8
  %45 = icmp eq %"class.blink::protocol::DOMDebugger::EventListener"* %44, null
  %46 = ptrtoint %"class.blink::protocol::DOMDebugger::EventListener"* %44 to i64
  br i1 %45, label %47, label %48

47:                                               ; preds = %43
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %18, align 8
  br label %65

48:                                               ; preds = %43
  %49 = load %"class.std::__1::unique_ptr.2023"*, %"class.std::__1::unique_ptr.2023"** %20, align 8
  %50 = load %"class.std::__1::unique_ptr.2023"*, %"class.std::__1::unique_ptr.2023"** %22, align 8
  %51 = icmp ult %"class.std::__1::unique_ptr.2023"* %49, %50
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %18, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.2023"* %49 to i64*
  store i64 %46, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %49, i64 1
  %55 = ptrtoint %"class.std::__1::unique_ptr.2023"* %54 to i64
  store i64 %55, i64* %23, align 8
  br label %57

56:                                               ; preds = %48
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMDebugger13EventListenerENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2021"* nonnull %8, %"class.std::__1::unique_ptr.2023"* nonnull dereferenceable(8) %5) #13
  br label %57

57:                                               ; preds = %56, %52
  %58 = load %"class.blink::protocol::DOMDebugger::EventListener"*, %"class.blink::protocol::DOMDebugger::EventListener"** %18, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %18, align 8
  %59 = icmp eq %"class.blink::protocol::DOMDebugger::EventListener"* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %57
  %61 = bitcast %"class.blink::protocol::DOMDebugger::EventListener"* %58 to void (%"class.blink::protocol::DOMDebugger::EventListener"*)***
  %62 = load void (%"class.blink::protocol::DOMDebugger::EventListener"*)**, void (%"class.blink::protocol::DOMDebugger::EventListener"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::protocol::DOMDebugger::EventListener"*)*, void (%"class.blink::protocol::DOMDebugger::EventListener"*)** %62, i64 2
  %64 = load void (%"class.blink::protocol::DOMDebugger::EventListener"*)*, void (%"class.blink::protocol::DOMDebugger::EventListener"*)** %63, align 8
  call void %64(%"class.blink::protocol::DOMDebugger::EventListener"* nonnull %58) #13
  br label %65

65:                                               ; preds = %47, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %66

66:                                               ; preds = %38, %65
  %67 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %39, i64 1
  %68 = icmp eq %"struct.blink::V8EventListenerInfo"* %67, %14
  br i1 %68, label %24, label %38

69:                                               ; preds = %30, %97
  %70 = phi %"struct.blink::V8EventListenerInfo"* [ %25, %30 ], [ %98, %97 ]
  %71 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %70, i64 0, i32 1
  %72 = load i8, i8* %71, align 8, !range !11
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %97

74:                                               ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  store %"class.blink::protocol::DOMDebugger::EventListener"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::DOMDebugger::EventListener"*), %"class.blink::protocol::DOMDebugger::EventListener"** %32, align 8
  %75 = call %"class.blink::protocol::DOMDebugger::EventListener"* @_ZN5blink25InspectorDOMDebuggerAgent27BuildObjectForEventListenerEN2v85LocalINS1_7ContextEEERKNS_19V8EventListenerInfoERKN12v8_inspector10StringViewE(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.v8::Context"* %2, %"struct.blink::V8EventListenerInfo"* dereferenceable(40) %70, %"class.v8_inspector::StringView"* dereferenceable(24) %3)
  store %"class.blink::protocol::DOMDebugger::EventListener"* %75, %"class.blink::protocol::DOMDebugger::EventListener"** %32, align 8
  %76 = icmp eq %"class.blink::protocol::DOMDebugger::EventListener"* %75, null
  %77 = ptrtoint %"class.blink::protocol::DOMDebugger::EventListener"* %75 to i64
  br i1 %76, label %78, label %79

78:                                               ; preds = %74
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %32, align 8
  br label %96

79:                                               ; preds = %74
  %80 = load %"class.std::__1::unique_ptr.2023"*, %"class.std::__1::unique_ptr.2023"** %34, align 8
  %81 = load %"class.std::__1::unique_ptr.2023"*, %"class.std::__1::unique_ptr.2023"** %36, align 8
  %82 = icmp ult %"class.std::__1::unique_ptr.2023"* %80, %81
  br i1 %82, label %83, label %87

83:                                               ; preds = %79
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %32, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2023"* %80 to i64*
  store i64 %77, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %80, i64 1
  %86 = ptrtoint %"class.std::__1::unique_ptr.2023"* %85 to i64
  store i64 %86, i64* %37, align 8
  br label %88

87:                                               ; preds = %79
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMDebugger13EventListenerENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2021"* nonnull %8, %"class.std::__1::unique_ptr.2023"* nonnull dereferenceable(8) %6) #13
  br label %88

88:                                               ; preds = %87, %83
  %89 = load %"class.blink::protocol::DOMDebugger::EventListener"*, %"class.blink::protocol::DOMDebugger::EventListener"** %32, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %32, align 8
  %90 = icmp eq %"class.blink::protocol::DOMDebugger::EventListener"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %88
  %92 = bitcast %"class.blink::protocol::DOMDebugger::EventListener"* %89 to void (%"class.blink::protocol::DOMDebugger::EventListener"*)***
  %93 = load void (%"class.blink::protocol::DOMDebugger::EventListener"*)**, void (%"class.blink::protocol::DOMDebugger::EventListener"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::protocol::DOMDebugger::EventListener"*)*, void (%"class.blink::protocol::DOMDebugger::EventListener"*)** %93, i64 2
  %95 = load void (%"class.blink::protocol::DOMDebugger::EventListener"*)*, void (%"class.blink::protocol::DOMDebugger::EventListener"*)** %94, align 8
  call void %95(%"class.blink::protocol::DOMDebugger::EventListener"* nonnull %89) #13
  br label %96

96:                                               ; preds = %78, %88, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %97

97:                                               ; preds = %69, %96
  %98 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %70, i64 1
  %99 = icmp eq %"struct.blink::V8EventListenerInfo"* %98, %28
  br i1 %99, label %100, label %69

100:                                              ; preds = %97, %4, %24
  ret %"class.std::__1::vector.2021"* %8
}

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorDOMDebuggerAgent17getEventListenersERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEENS7_IbEEPNSt3__110unique_ptrINSA_6vectorINSB_INS_8protocol11DOMDebugger13EventListenerENSA_14default_deleteISF_EEEENSA_9allocatorISI_EEEENSG_ISL_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe.2032"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2044"* nocapture readonly, %"class.std::__1::unique_ptr.2018"* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 -1, i32 9, i32 3, i32 0, i32 3
  %8 = bitcast i32* %7 to %"class.blink::InspectorDOMDebuggerAgent"*
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent17getEventListenersERKN3WTF6StringEN5crdtp6detail10ValueMaybeIiEENS7_IbEEPNSt3__110unique_ptrINSA_6vectorINSB_INS_8protocol11DOMDebugger13EventListenerENSA_14default_deleteISF_EEEENSA_9allocatorISI_EEEENSG_ISL_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %8, %"class.WTF::String"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe.2032"* %3, %"class.crdtp::detail::ValueMaybe.2044"* %4, %"class.std::__1::unique_ptr.2018"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::DOMDebugger::EventListener"* @_ZN5blink25InspectorDOMDebuggerAgent27BuildObjectForEventListenerEN2v85LocalINS1_7ContextEEERKNS_19V8EventListenerInfoERKN12v8_inspector10StringViewE(%"class.blink::InspectorDOMDebuggerAgent"* nocapture readonly, %"class.v8::Context"*, %"struct.blink::V8EventListenerInfo"* nocapture readonly dereferenceable(40), %"class.v8_inspector::StringView"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.v8_inspector::StringView", align 8
  %7 = alloca %"class.v8_inspector::StringView", align 8
  %8 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %2, i64 0, i32 4, i32 0
  %9 = load %"class.v8::Object"*, %"class.v8::Object"** %8, align 8
  %10 = icmp eq %"class.v8::Object"* %9, null
  br i1 %10, label %231, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %2, i64 0, i32 5, i32 0
  %13 = load %"class.v8::Function"*, %"class.v8::Function"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 64) #14
  %15 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol11DOMDebugger13EventListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = getelementptr inbounds i8, i8* %14, i64 24
  %18 = getelementptr inbounds i8, i8* %14, i64 60
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 11, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 33, i1 false) #13
  %20 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %38, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %38

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #13
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %41, !prof !3

37:                                               ; preds = %28
  tail call void @llvm.trap() #13
  unreachable

38:                                               ; preds = %23, %11
  %39 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %40 = bitcast i8* %16 to i64*
  store i64 %39, i64* %40, align 8
  br label %61

41:                                               ; preds = %28
  %42 = trunc i33 %34 to i32
  store i32 %42, i32* %29, align 4
  %43 = bitcast i8* %16 to %"class.WTF::StringImpl"**
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %46 = bitcast i8* %16 to i64*
  store i64 %45, i64* %46, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #13
  br label %61

61:                                               ; preds = %38, %41, %57, %60
  %62 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %2, i64 0, i32 1
  %63 = load i8, i8* %62, align 8, !range !11
  %64 = getelementptr inbounds i8, i8* %14, i64 16
  store i8 %63, i8* %64, align 8
  %65 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %2, i64 0, i32 2
  %66 = load i8, i8* %65, align 1, !range !11
  %67 = getelementptr inbounds i8, i8* %14, i64 17
  store i8 %66, i8* %67, align 1
  %68 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %2, i64 0, i32 3
  %69 = load i8, i8* %68, align 2, !range !11
  %70 = getelementptr inbounds i8, i8* %14, i64 18
  store i8 %69, i8* %70, align 2
  %71 = tail call i32 @_ZNK2v88Function8ScriptIdEv(%"class.v8::Function"* %13) #13
  %72 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %72) #13
  %73 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  %74 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %75 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %76 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 13
  %77 = icmp slt i32 %71, 0
  %78 = sub i32 0, %71
  %79 = select i1 %77, i32 %78, i32 %71
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 32, i1 false) #13
  store i8* %73, i8** %74, align 8
  %80 = urem i32 %79, 10
  %81 = udiv i32 %79, 10
  %82 = trunc i32 %80 to i8
  %83 = or i8 %82, 48
  store i8 %83, i8* %73, align 4
  %84 = icmp ugt i32 %79, 9
  br i1 %84, label %85, label %107

85:                                               ; preds = %61
  %86 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  store i8* %86, i8** %74, align 8
  %87 = urem i32 %81, 10
  %88 = trunc i32 %87 to i8
  %89 = or i8 %88, 48
  store i8 %89, i8* %86, align 1
  %90 = icmp ugt i32 %79, 99
  br i1 %90, label %91, label %107

91:                                               ; preds = %85
  %92 = udiv i32 %79, 100
  %93 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %93, i8** %74, align 8
  %94 = urem i32 %92, 10
  %95 = trunc i32 %94 to i8
  %96 = or i8 %95, 48
  store i8 %96, i8* %93, align 2
  %97 = icmp ugt i32 %79, 999
  br i1 %97, label %98, label %107

98:                                               ; preds = %91, %98
  %99 = phi i32 [ %101, %98 ], [ %92, %91 ]
  %100 = load i8*, i8** %74, align 8
  %101 = udiv i32 %99, 10
  %102 = getelementptr inbounds i8, i8* %100, i64 -1
  store i8* %102, i8** %74, align 8
  %103 = urem i32 %101, 10
  %104 = trunc i32 %103 to i8
  %105 = or i8 %104, 48
  store i8 %105, i8* %102, align 1
  %106 = icmp ugt i32 %99, 99
  br i1 %106, label %98, label %107

107:                                              ; preds = %98, %91, %85, %61
  br i1 %77, label %108, label %111

108:                                              ; preds = %107
  %109 = load i8*, i8** %74, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 -1
  store i8* %110, i8** %74, align 8
  store i8 45, i8* %110, align 1
  br label %111

111:                                              ; preds = %107, %108
  %112 = bitcast i8** %74 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = ptrtoint i8* %76 to i64
  %115 = sub i64 %114, %113
  %116 = trunc i64 %115 to i32
  store i32 %116, i32* %75, align 8
  %117 = inttoptr i64 %113 to i8*
  %118 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %117, i32 %116) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #13
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %137, label %120

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %137

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i33
  %129 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %128, i33 1) #13
  %130 = extractvalue { i33, i1 } %129, 1
  %131 = extractvalue { i33, i1 } %129, 0
  %132 = icmp slt i33 %131, 0
  %133 = or i1 %130, %132
  br i1 %133, label %134, label %135, !prof !3

134:                                              ; preds = %125
  call void @llvm.trap() #13
  unreachable

135:                                              ; preds = %125
  %136 = trunc i33 %131 to i32
  store i32 %136, i32* %126, align 4
  br label %137

137:                                              ; preds = %135, %120, %111
  %138 = ptrtoint %"class.WTF::StringImpl"* %118 to i64
  %139 = bitcast i8* %17 to i64*
  %140 = bitcast i8* %17 to %"class.WTF::StringImpl"**
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  store i64 %138, i64* %139, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #13
  br label %156

156:                                              ; preds = %137, %152, %155
  %157 = call i32 @_ZNK2v88Function19GetScriptLineNumberEv(%"class.v8::Function"* %13) #13
  %158 = getelementptr inbounds i8, i8* %14, i64 32
  %159 = bitcast i8* %158 to i32*
  store i32 %157, i32* %159, align 8
  %160 = call i32 @_ZNK2v88Function21GetScriptColumnNumberEv(%"class.v8::Function"* %13) #13
  %161 = getelementptr inbounds i8, i8* %14, i64 36
  %162 = bitcast i8* %161 to i32*
  store i32 %160, i32* %162, align 4
  %163 = ptrtoint i8* %14 to i64
  br i1 %119, label %177, label %164

164:                                              ; preds = %156
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #13
  br label %177

177:                                              ; preds = %176, %173, %156
  %178 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %3, i64 0, i32 1
  %179 = load i64, i64* %178, align 8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %231, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 3
  %183 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %182, align 8
  %184 = bitcast %"class.v8::Function"* %13 to %"class.v8::Value"*
  %185 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %6, i64 0, i32 0
  %186 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %3, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %185, i8* align 8 %186, i64 24, i1 false)
  %187 = bitcast %"class.v8_inspector::V8InspectorSession"* %183 to %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)***
  %188 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)**, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)*** %187, align 8
  %189 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)** %188, i64 14
  %190 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)** %189, align 8
  %191 = call %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %190(%"class.v8_inspector::V8InspectorSession"* %183, %"class.v8::Context"* %1, %"class.v8::Value"* %184, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %6, i1 zeroext false) #13
  %192 = ptrtoint %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %191 to i64
  %193 = getelementptr inbounds i8, i8* %14, i64 40
  %194 = bitcast i8* %193 to %"class.v8_inspector::protocol::Runtime::API::RemoteObject"**
  %195 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %194, align 8
  %196 = bitcast i8* %193 to i64*
  store i64 %192, i64* %196, align 8
  %197 = icmp eq %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %195, null
  br i1 %197, label %203, label %198

198:                                              ; preds = %181
  %199 = bitcast %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %195 to void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)***
  %200 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*** %199, align 8
  %201 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %200, i64 2
  %202 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %201, align 8
  call void %202(%"class.v8_inspector::protocol::Runtime::API::RemoteObject"* nonnull %195) #13
  br label %203

203:                                              ; preds = %181, %198
  %204 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %182, align 8
  %205 = bitcast %"class.v8::Object"** %8 to %"class.v8::Value"**
  %206 = load %"class.v8::Value"*, %"class.v8::Value"** %205, align 8
  %207 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %7, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %207, i8* align 8 %186, i64 24, i1 false)
  %208 = bitcast %"class.v8_inspector::V8InspectorSession"* %204 to %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)***
  %209 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)**, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)*** %208, align 8
  %210 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)** %209, i64 14
  %211 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)** %210, align 8
  %212 = call %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %211(%"class.v8_inspector::V8InspectorSession"* %204, %"class.v8::Context"* %1, %"class.v8::Value"* %206, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %7, i1 zeroext false) #13
  %213 = ptrtoint %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %212 to i64
  %214 = getelementptr inbounds i8, i8* %14, i64 48
  %215 = bitcast i8* %214 to %"class.v8_inspector::protocol::Runtime::API::RemoteObject"**
  %216 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %215, align 8
  %217 = bitcast i8* %214 to i64*
  store i64 %213, i64* %217, align 8
  %218 = icmp eq %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %216, null
  br i1 %218, label %224, label %219

219:                                              ; preds = %203
  %220 = bitcast %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %216 to void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)***
  %221 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %221, i64 2
  %223 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %222, align 8
  call void %223(%"class.v8_inspector::protocol::Runtime::API::RemoteObject"* nonnull %216) #13
  br label %224

224:                                              ; preds = %203, %219
  %225 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %2, i64 0, i32 6
  %226 = load i64, i64* %225, align 8
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %231, label %228

228:                                              ; preds = %224
  %229 = trunc i64 %226 to i32
  store i32 %229, i32* %19, align 4
  %230 = getelementptr inbounds i8, i8* %14, i64 56
  store i8 1, i8* %230, align 4
  br label %231

231:                                              ; preds = %224, %177, %228, %4
  %232 = phi i64 [ 0, %4 ], [ %163, %228 ], [ %163, %177 ], [ %163, %224 ]
  %233 = inttoptr i64 %232 to %"class.blink::protocol::DOMDebugger::EventListener"*
  ret %"class.blink::protocol::DOMDebugger::EventListener"* %233
}

declare i32 @_ZNK2v88Function8ScriptIdEv(%"class.v8::Function"*) local_unnamed_addr #2

declare i32 @_ZNK2v88Function19GetScriptLineNumberEv(%"class.v8::Function"*) local_unnamed_addr #2

declare i32 @_ZNK2v88Function21GetScriptColumnNumberEv(%"class.v8::Function"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent21AllowNativeBreakpointERKN3WTF6StringEPS3_b(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* %2)
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::protocol::DictionaryValue"* %5, i1 zeroext %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* nocapture readonly, %"class.blink::protocol::DictionaryValue"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.2089", align 8
  %5 = alloca %"class.std::__1::vector.2089", align 8
  %6 = alloca %"class.v8_inspector::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.v8_inspector::StringView", align 8
  %9 = alloca %"class.v8_inspector::StringView", align 8
  %10 = alloca %"class.v8_inspector::StringView", align 8
  %11 = alloca %"class.v8_inspector::StringView", align 8
  %12 = icmp eq %"class.blink::protocol::DictionaryValue"* %1, null
  br i1 %12, label %87, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.2089"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #13
  %17 = bitcast %"class.std::__1::vector.2089"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.blink::protocol::DictionaryValue", %"class.blink::protocol::DictionaryValue"* %1, i64 0, i32 0, i32 0
  call void @_ZNK5crdtp12Serializable9SerializeEv(%"class.std::__1::vector.2089"* nonnull sret %5, %"class.crdtp::Serializable"* %18) #13
  %19 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %5, i64 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %5, i64 0, i32 0, i32 1
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = ptrtoint i8* %20 to i64
  %25 = sub i64 %23, %24
  %26 = call { i32, i64 } @_ZN5crdtp4json17ConvertCBORToJSONENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %20, i64 %25, %"class.std::__1::vector.2089"* nonnull %4) #13
  %27 = load i8*, i8** %19, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %13
  %30 = ptrtoint i8* %27 to i64
  store i64 %30, i64* %22, align 8
  call void @_ZdlPv(i8* nonnull %27) #14
  br label %31

31:                                               ; preds = %13, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #13
  %32 = bitcast %"class.std::__1::vector.2089"* %4 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %16 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %35, %33
  %37 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false)
  %38 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13
  %39 = load i8*, i8** @_ZN12v8_inspector8protocol8Debugger3API6Paused10ReasonEnum13EventListenerE, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %31
  %42 = call i64 @strlen(i8* nonnull %39) #15
  %43 = icmp ult i64 %42, 4294967296
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %41
  call void @llvm.trap() #13
  unreachable

45:                                               ; preds = %41
  %46 = trunc i64 %42 to i32
  br label %47

47:                                               ; preds = %31, %45
  %48 = phi i32 [ %46, %45 ], [ 0, %31 ]
  %49 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %50 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* %39, i8** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %48, i32* %52, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13
  %53 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 3
  %54 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %53, align 8
  br i1 %2, label %55, label %66

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %8, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* nonnull align 8 %37, i64 24, i1 false)
  %57 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %9, i64 0, i32 0
  store i8 1, i8* %57, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* nonnull align 1 getelementptr inbounds ({ i8, [7 x i8], i64, %union.anon.2051 }, { i8, [7 x i8], i64, %union.anon.2051 }* @__const._ZN5blink25InspectorDOMDebuggerAgent32OnContentSecurityPolicyViolationENS_21ContentSecurityPolicy34ContentSecurityPolicyViolationTypeE.json_view, i64 0, i32 1, i64 0), i64 7, i1 false)
  %59 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %9, i64 0, i32 1
  store i64 %36, i64* %59, align 8
  %60 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %9, i64 0, i32 2, i32 0
  %61 = bitcast i8** %60 to i64*
  store i64 %33, i64* %61, align 8
  %62 = bitcast %"class.v8_inspector::V8InspectorSession"* %54 to void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)***
  %63 = load void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)**, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)** %63, i64 9
  %65 = load void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)** %64, align 8
  call void %65(%"class.v8_inspector::V8InspectorSession"* %54, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %8, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %9) #13
  br label %77

66:                                               ; preds = %47
  %67 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %10, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* nonnull align 8 %37, i64 24, i1 false)
  %68 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %11, i64 0, i32 0
  store i8 1, i8* %68, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* nonnull align 1 getelementptr inbounds ({ i8, [7 x i8], i64, %union.anon.2051 }, { i8, [7 x i8], i64, %union.anon.2051 }* @__const._ZN5blink25InspectorDOMDebuggerAgent32OnContentSecurityPolicyViolationENS_21ContentSecurityPolicy34ContentSecurityPolicyViolationTypeE.json_view, i64 0, i32 1, i64 0), i64 7, i1 false)
  %70 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %11, i64 0, i32 1
  store i64 %36, i64* %70, align 8
  %71 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %11, i64 0, i32 2, i32 0
  %72 = bitcast i8** %71 to i64*
  store i64 %33, i64* %72, align 8
  %73 = bitcast %"class.v8_inspector::V8InspectorSession"* %54 to void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)***
  %74 = load void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)**, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)** %74, i64 7
  %76 = load void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)** %75, align 8
  call void %76(%"class.v8_inspector::V8InspectorSession"* %54, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %10, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %11) #13
  br label %77

77:                                               ; preds = %66, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13
  %78 = load i8*, i8** %15, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = ptrtoint i8* %78 to i64
  store i64 %81, i64* %34, align 8
  call void @_ZdlPv(i8* nonnull %78) #14
  br label %82

82:                                               ; preds = %77, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  %83 = bitcast %"class.blink::protocol::DictionaryValue"* %1 to void (%"class.blink::protocol::DictionaryValue"*)***
  %84 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %84, i64 2
  %86 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %85, align 8
  call void %86(%"class.blink::protocol::DictionaryValue"* nonnull %1) #13
  br label %87

87:                                               ; preds = %3, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend.2095", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %12, align 8
  %13 = bitcast %"class.WTF::StringAppend.2095"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #13
  %14 = icmp ne %"class.WTF::String"* %2, null
  %15 = select i1 %14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN12_GLOBAL__N_125listenerEventCategoryTypeE, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN12_GLOBAL__N_132instrumentationEventCategoryTypeE, i64 0, i64 0)
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %62, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %36

26:                                               ; preds = %19
  %27 = zext i32 %25 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #13
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %26
  tail call void @llvm.trap() #13
  unreachable

34:                                               ; preds = %26
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %24, align 4
  br label %36

36:                                               ; preds = %34, %19
  %37 = phi i32 [ %35, %34 ], [ %25, %19 ]
  %38 = load atomic i32, i32* %20 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %51

41:                                               ; preds = %36
  %42 = zext i32 %37 to i33
  %43 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #13
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !3

48:                                               ; preds = %41
  tail call void @llvm.trap() #13
  unreachable

49:                                               ; preds = %41
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %24, align 4
  br label %51

51:                                               ; preds = %49, %36
  %52 = phi i32 [ %50, %49 ], [ %37, %36 ]
  %53 = load atomic i32, i32* %20 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = add i32 %52, -1
  store i32 %57, i32* %24, align 4
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi i32 [ %57, %56 ], [ %52, %51 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #13
  br label %62

62:                                               ; preds = %3, %58, %61
  %63 = getelementptr inbounds %"class.WTF::StringAppend.2095", %"class.WTF::StringAppend.2095"* %5, i64 0, i32 0
  store i8* %15, i8** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringAppend.2095", %"class.WTF::StringAppend.2095"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %64, align 8
  %65 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.2095"* nonnull %5)
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %12, align 8
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #13
  br label %81

81:                                               ; preds = %62, %77, %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #13
  %82 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13
  %83 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #13
  %84 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_126EventListenerBreakpointKeyERKN3WTF6StringES4_(%"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %7)
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %85, align 8
  %86 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 8, i32 3
  %87 = getelementptr inbounds %"class.WTF::HashMap.1668", %"class.WTF::HashMap.1668"* %86, i64 0, i32 0
  %88 = call { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1669"* %87, %"class.WTF::String"* nonnull dereferenceable(8) %6) #13
  %89 = extractvalue { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } %88, 0
  %90 = getelementptr inbounds %"class.WTF::HashMap.1668", %"class.WTF::HashMap.1668"* %86, i64 0, i32 0, i32 0
  %91 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 8, i32 3, i32 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %91, i64 %94
  %96 = icmp eq %"struct.WTF::KeyValuePair.1672"* %89, %95
  %97 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 8, i32 1
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %89, i64 0, i32 1
  %99 = select i1 %96, i8* %97, i8* %98
  %100 = load i8, i8* %99, align 8, !range !11
  %101 = icmp ne i8 %100, 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %81
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #13
  br label %117

117:                                              ; preds = %81, %113, %116
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #13
  br label %134

134:                                              ; preds = %117, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #13
  %135 = xor i1 %101, true
  %136 = and i1 %14, %135
  br i1 %136, label %137, label %168

137:                                              ; preds = %134
  %138 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #13
  %139 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_126EventListenerBreakpointKeyERKN3WTF6StringES4_(%"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %2)
  %140 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %139, %"class.WTF::StringImpl"** %140, align 8
  %141 = call { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1669"* %87, %"class.WTF::String"* nonnull dereferenceable(8) %8) #13
  %142 = extractvalue { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } %141, 0
  %143 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %90, align 8
  %144 = load i32, i32* %92, align 8
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %143, i64 %145
  %147 = icmp eq %"struct.WTF::KeyValuePair.1672"* %142, %146
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %142, i64 0, i32 1
  %149 = select i1 %147, i8* %97, i8* %148
  %150 = load i8, i8* %149, align 8, !range !11
  %151 = icmp eq i8 %150, 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %137
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #13
  br label %167

167:                                              ; preds = %137, %163, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #13
  br i1 %151, label %210, label %169

168:                                              ; preds = %134
  br i1 %101, label %169, label %210

169:                                              ; preds = %167, %168
  %170 = call i8* @_Znwm(i64 80) #14
  %171 = bitcast i8* %170 to %"class.blink::protocol::DictionaryValue"*
  call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %171) #13
  %172 = ptrtoint i8* %170 to i64
  %173 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i64 9) #13
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %171, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::String"* nonnull dereferenceable(8) %4) #13
  %174 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %190, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %186

184:                                              ; preds = %177
  %185 = add i32 %183, -1
  store i32 %185, i32* %182, align 4
  br label %186

186:                                              ; preds = %184, %177
  %187 = phi i32 [ %185, %184 ], [ %183, %177 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %175) #13
  br label %190

190:                                              ; preds = %169, %186, %189
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #13
  br i1 %14, label %191, label %210

191:                                              ; preds = %190
  %192 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i64 10) #13
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %171, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %2) #13
  %193 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %209, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  br i1 %200, label %203, label %205

203:                                              ; preds = %196
  %204 = add i32 %202, -1
  store i32 %204, i32* %201, align 4
  br label %205

205:                                              ; preds = %203, %196
  %206 = phi i32 [ %204, %203 ], [ %202, %196 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %194) #13
  br label %209

209:                                              ; preds = %191, %205, %208
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #13
  br label %210

210:                                              ; preds = %167, %209, %190, %168
  %211 = phi i64 [ 0, %167 ], [ 0, %168 ], [ %172, %190 ], [ %172, %209 ]
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %227, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #13
  br label %227

227:                                              ; preds = %210, %223, %226
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  %228 = inttoptr i64 %211 to %"class.blink::protocol::DictionaryValue"*
  ret %"class.blink::protocol::DictionaryValue"* %228
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent17WillInsertDOMNodeEPNS_4NodeE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = bitcast %"class.blink::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  store %"class.blink::Node"* %1, %"class.blink::Node"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK5blink17InspectorDOMAgent7EnabledEv(%"class.blink::InspectorDOMAgent"* %6) #13
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  br label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0
  %11 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1664"* %10, %"class.blink::Node"** nonnull dereferenceable(8) %3) #13
  %12 = and i32 %11, 65537
  %13 = icmp eq i32 %12, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  call void @_ZN5blink25InspectorDOMDebuggerAgent22BreakProgramOnDOMEventEPNS_4NodeEib(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::Node"* %1, i32 0, i1 zeroext true)
  br label %15

15:                                               ; preds = %9, %8, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent17WillRemoveDOMNodeEPNS_4NodeE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = tail call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent15InnerParentNodeEPNS_4NodeE(%"class.blink::Node"* %1) #13
  %6 = bitcast %"class.blink::Node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6)
  store %"class.blink::Node"* %1, %"class.blink::Node"** %4, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %7, align 8
  %9 = tail call zeroext i1 @_ZNK5blink17InspectorDOMAgent7EnabledEv(%"class.blink::InspectorDOMAgent"* %8) #13
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6)
  br label %17

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0
  %13 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1664"* %12, %"class.blink::Node"** nonnull dereferenceable(8) %4) #13
  %14 = and i32 %13, 262148
  %15 = icmp eq i32 %14, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6)
  br i1 %15, label %17, label %16

16:                                               ; preds = %11
  call void @_ZN5blink25InspectorDOMDebuggerAgent22BreakProgramOnDOMEventEPNS_4NodeEib(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::Node"* %1, i32 2, i1 zeroext false)
  br label %30

17:                                               ; preds = %11, %10
  %18 = icmp eq %"class.blink::Node"* %5, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %17
  %20 = bitcast %"class.blink::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  store %"class.blink::Node"* %5, %"class.blink::Node"** %3, align 8
  %21 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %7, align 8
  %22 = call zeroext i1 @_ZNK5blink17InspectorDOMAgent7EnabledEv(%"class.blink::InspectorDOMAgent"* %21) #13
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  br label %30

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0
  %26 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1664"* %25, %"class.blink::Node"** nonnull dereferenceable(8) %3) #13
  %27 = and i32 %26, 65537
  %28 = icmp eq i32 %27, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  br i1 %28, label %30, label %29

29:                                               ; preds = %24
  call void @_ZN5blink25InspectorDOMDebuggerAgent22BreakProgramOnDOMEventEPNS_4NodeEib(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::Node"* %1, i32 0, i1 zeroext false)
  br label %30

30:                                               ; preds = %24, %23, %17, %29, %16
  call void @_ZN5blink25InspectorDOMDebuggerAgent16DidRemoveDOMNodeEPNS_4NodeE(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::Node"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent17WillModifyDOMAttrEPNS_7ElementERKN3WTF12AtomicStringES6_(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::Element"*, %"class.WTF::AtomicString"* nocapture readnone dereferenceable(8), %"class.WTF::AtomicString"* nocapture readnone dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %7 = bitcast %"class.blink::Node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  store %"class.blink::Node"* %6, %"class.blink::Node"** %5, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK5blink17InspectorDOMAgent7EnabledEv(%"class.blink::InspectorDOMAgent"* %9) #13
  br i1 %10, label %12, label %11

11:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  br label %18

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0
  %14 = call i32 @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEEjNS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS7_IjEENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.1664"* %13, %"class.blink::Node"** nonnull dereferenceable(8) %5) #13
  %15 = and i32 %14, 131074
  %16 = icmp eq i32 %15, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  br i1 %16, label %18, label %17

17:                                               ; preds = %12
  call void @_ZN5blink25InspectorDOMDebuggerAgent22BreakProgramOnDOMEventEPNS_4NodeEib(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::Node"* %6, i32 1, i1 zeroext false)
  br label %18

18:                                               ; preds = %12, %11, %17
  ret void
}

declare void @_ZN5blink8protocol15DictionaryValue10setIntegerERKN3WTF6StringEi(%"class.blink::protocol::DictionaryValue"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #2

declare i32 @_ZN5blink17InspectorDOMAgent22PushNodePathToFrontendEPNS_4NodeE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink8protocol15DictionaryValue10setBooleanERKN3WTF6StringEb(%"class.blink::protocol::DictionaryValue"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #2

declare i32 @_ZN5blink17InspectorDOMAgent11BoundNodeIdEPNS_4NodeE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare { i32, i64 } @_ZN5crdtp4json17ConvertCBORToJSONENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector.2089"*) local_unnamed_addr #2

declare void @_ZNK5crdtp12Serializable9SerializeEv(%"class.std::__1::vector.2089"* sret, %"class.crdtp::Serializable"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17InspectorDOMAgent7EnabledEv(%"class.blink::InspectorDOMAgent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.2095"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2197", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2197", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2196"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2095", %"class.WTF::StringAppend.2095"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #13
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %6, i8* %11) #13
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2095", %"class.WTF::StringAppend.2095"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2095"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #13
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.2196"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2196", %"class.WTF::StringTypeAdapter.2196"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #13
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %4, i8* %28) #13
  %29 = bitcast %"class.WTF::StringTypeAdapter.2197"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #13
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.2197"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2196"* nonnull %4, i8* %25) #13
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2198"* nonnull %47, i8* %50) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #13
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #13
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %59
  call void @llvm.trap() #13
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2095"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #13
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter.2196"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #13
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2196", %"class.WTF::StringTypeAdapter.2196"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #13
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %2, i8* %89) #13
  %90 = bitcast %"class.WTF::StringTypeAdapter.2197"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #13
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #13
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.2197"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2196"* nonnull %2, i16* %86) #13
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2198"* nonnull %108, i16* %111) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #13
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #13
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %120
  call void @llvm.trap() #13
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #13
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #13
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent17DidFireWebGLErrorERKN3WTF6StringE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN12_GLOBAL__N_125kWebglErrorFiredEventNameE, i64 0, i64 0), i64 15) #13
  %6 = call %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* null)
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #13
  br label %23

23:                                               ; preds = %2, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %24 = icmp eq %"class.blink::protocol::DictionaryValue"* %6, null
  br i1 %24, label %53, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %52, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %52, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN12_GLOBAL__N_123kWebglErrorNamePropertyE, i64 0, i64 0), i64 14) #13
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %1) #13
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #13
  br label %51

51:                                               ; preds = %33, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %52

52:                                               ; preds = %29, %51, %25
  call void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::protocol::DictionaryValue"* nonnull %6, i1 zeroext true)
  br label %53

53:                                               ; preds = %23, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent19DidFireWebGLWarningEv(%"class.blink::InspectorDOMDebuggerAgent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZN12_GLOBAL__N_127kWebglWarningFiredEventNameE, i64 0, i64 0), i64 17) #13
  %4 = call %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* null)
  call void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::protocol::DictionaryValue"* %4, i1 zeroext true)
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #13
  br label %21

21:                                               ; preds = %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent26DidFireWebGLErrorOrWarningERKN3WTF6StringE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %8 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 5, i32* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  br label %36

15:                                               ; preds = %2
  %16 = call i32 @_ZN3WTF10StringImpl16FindIgnoringCaseERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %4, i32 0) #13
  %17 = icmp eq i32 %16, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  br i1 %17, label %36, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  call void @_ZN5blink25InspectorDOMDebuggerAgent17DidFireWebGLErrorERKN3WTF6StringE(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %5)
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %55, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %55

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br label %55

36:                                               ; preds = %14, %15
  %37 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZN12_GLOBAL__N_127kWebglWarningFiredEventNameE, i64 0, i64 0), i64 17) #13
  %38 = call %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* null) #13
  call void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::protocol::DictionaryValue"* %38, i1 zeroext true) #13
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #13
  br label %55

55:                                               ; preds = %54, %51, %36, %35, %32, %18
  %56 = phi i8* [ %19, %18 ], [ %19, %32 ], [ %19, %35 ], [ %37, %36 ], [ %37, %51 ], [ %37, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent22CancelNativeBreakpointEv(%"class.blink::InspectorDOMDebuggerAgent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 3
  %3 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %2, align 8
  %4 = bitcast %"class.v8_inspector::V8InspectorSession"* %3 to void (%"class.v8_inspector::V8InspectorSession"*)***
  %5 = load void (%"class.v8_inspector::V8InspectorSession"*)**, void (%"class.v8_inspector::V8InspectorSession"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorSession"*)*, void (%"class.v8_inspector::V8InspectorSession"*)** %5, i64 8
  %7 = load void (%"class.v8_inspector::V8InspectorSession"*)*, void (%"class.v8_inspector::V8InspectorSession"*)** %6, align 8
  tail call void %7(%"class.v8_inspector::V8InspectorSession"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent27ScriptExecutionBlockedByCSPERKN3WTF6StringE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZN12_GLOBAL__N_128kScriptBlockedByCSPEventNameE, i64 0, i64 0), i64 18) #13
  %6 = call %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* null)
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #13
  br label %23

23:                                               ; preds = %2, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %24 = icmp eq %"class.blink::protocol::DictionaryValue"* %6, null
  br i1 %24, label %44, label %25

25:                                               ; preds = %23
  %26 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i64 13) #13
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %1) #13
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %42, %39, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  call void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::protocol::DictionaryValue"* nonnull %6, i1 zeroext true)
  br label %44

44:                                               ; preds = %23, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent4WillERKNS_5probe13ExecuteScriptE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::probe::ExecuteScript"* nocapture readnone dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i64 20) #13
  %5 = call %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* null) #13
  call void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::protocol::DictionaryValue"* %5, i1 zeroext false) #13
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #13
  br label %22

22:                                               ; preds = %2, %18, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent3DidERKNS_5probe13ExecuteScriptE(%"class.blink::InspectorDOMDebuggerAgent"* nocapture readonly, %"class.blink::probe::ExecuteScript"* nocapture readnone dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 3
  %4 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %3, align 8
  %5 = bitcast %"class.v8_inspector::V8InspectorSession"* %4 to void (%"class.v8_inspector::V8InspectorSession"*)***
  %6 = load void (%"class.v8_inspector::V8InspectorSession"*)**, void (%"class.v8_inspector::V8InspectorSession"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorSession"*)*, void (%"class.v8_inspector::V8InspectorSession"*)** %6, i64 8
  %8 = load void (%"class.v8_inspector::V8InspectorSession"*)*, void (%"class.v8_inspector::V8InspectorSession"*)** %7, align 8
  tail call void %8(%"class.v8_inspector::V8InspectorSession"* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent4WillERKNS_5probe12UserCallbackE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.blink::probe::UserCallback"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend.2096", align 8
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::probe::UserCallback", %"class.blink::probe::UserCallback"* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @strlen(i8* nonnull %10) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* nonnull %10, i64 %13) #13
  br label %37

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::probe::UserCallback", %"class.blink::probe::UserCallback"* %1, i64 0, i32 4
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %8, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #13
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %25
  tail call void @llvm.trap() #13
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %37

37:                                               ; preds = %35, %20, %14, %12
  %38 = getelementptr inbounds %"class.blink::probe::UserCallback", %"class.blink::probe::UserCallback"* %1, i64 0, i32 6
  %39 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %38, align 8
  %40 = icmp eq %"class.blink::EventTarget"* %39, null
  br i1 %40, label %100, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.blink::EventTarget"* %39 to %"class.blink::Node"* (%"class.blink::EventTarget"*)***
  %43 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)**, %"class.blink::Node"* (%"class.blink::EventTarget"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %43, i64 11
  %45 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %44, align 8
  %46 = call %"class.blink::Node"* %45(%"class.blink::EventTarget"* nonnull %39) #13
  %47 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %48, align 8
  %49 = icmp eq %"class.blink::Node"* %46, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %41
  %51 = bitcast %"class.blink::Node"* %46 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %52 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %52, i64 27
  %54 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %53, align 8
  %55 = call %"class.WTF::StringImpl"* %54(%"class.blink::Node"* nonnull %46) #13
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %48, align 8
  br label %83

56:                                               ; preds = %41
  %57 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %38, align 8
  %58 = bitcast %"class.blink::EventTarget"* %57 to %"class.WTF::AtomicString"* (%"class.blink::EventTarget"*)***
  %59 = load %"class.WTF::AtomicString"* (%"class.blink::EventTarget"*)**, %"class.WTF::AtomicString"* (%"class.blink::EventTarget"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::EventTarget"*)*, %"class.WTF::AtomicString"* (%"class.blink::EventTarget"*)** %59, i64 9
  %61 = load %"class.WTF::AtomicString"* (%"class.blink::EventTarget"*)*, %"class.WTF::AtomicString"* (%"class.blink::EventTarget"*)** %60, align 8
  %62 = call dereferenceable(8) %"class.WTF::AtomicString"* %61(%"class.blink::EventTarget"* %57) #13
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %48, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #13
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !3

80:                                               ; preds = %71
  call void @llvm.trap() #13
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %81, %66, %56, %50
  %84 = call %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull %4) #13
  call void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::protocol::DictionaryValue"* %84, i1 zeroext false) #13
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %186, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %186

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #13
  br label %186

100:                                              ; preds = %37
  %101 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #13
  %102 = bitcast %"class.WTF::StringAppend.2096"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #13
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %149, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %122

112:                                              ; preds = %105
  %113 = zext i32 %111 to i33
  %114 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %113, i33 1) #13
  %115 = extractvalue { i33, i1 } %114, 1
  %116 = extractvalue { i33, i1 } %114, 0
  %117 = icmp slt i33 %116, 0
  %118 = or i1 %115, %117
  br i1 %118, label %119, label %120, !prof !3

119:                                              ; preds = %112
  call void @llvm.trap() #13
  unreachable

120:                                              ; preds = %112
  %121 = trunc i33 %116 to i32
  store i32 %121, i32* %110, align 4
  br label %122

122:                                              ; preds = %105, %120
  %123 = phi i32 [ %121, %120 ], [ %111, %105 ]
  %124 = load atomic i32, i32* %106 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  br i1 %126, label %128, label %138

128:                                              ; preds = %122
  %129 = zext i32 %123 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #13
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !3

135:                                              ; preds = %128
  call void @llvm.trap() #13
  unreachable

136:                                              ; preds = %128
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %127, align 4
  br label %138

138:                                              ; preds = %136, %122
  %139 = phi i32 [ %137, %136 ], [ %123, %122 ]
  %140 = load atomic i32, i32* %106 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %145

143:                                              ; preds = %138
  %144 = add i32 %139, -1
  store i32 %144, i32* %127, align 4
  br label %145

145:                                              ; preds = %143, %138
  %146 = phi i32 [ %144, %143 ], [ %139, %138 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #13
  br label %149

149:                                              ; preds = %100, %145, %148
  %150 = getelementptr inbounds %"class.WTF::StringAppend.2096", %"class.WTF::StringAppend.2096"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %150, align 8
  %151 = getelementptr inbounds %"class.WTF::StringAppend.2096", %"class.WTF::StringAppend.2096"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8** %151, align 8
  %152 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.2096"* nonnull %6)
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %152, %"class.WTF::StringImpl"** %153, align 8
  %154 = call %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* null) #13
  call void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::protocol::DictionaryValue"* %154, i1 zeroext false) #13
  %155 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #13
  br label %169

169:                                              ; preds = %149, %165, %168
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %185, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #13
  br label %185

185:                                              ; preds = %169, %181, %184
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #13
  br label %186

186:                                              ; preds = %99, %96, %83, %185
  %187 = phi i8* [ %101, %185 ], [ %47, %83 ], [ %47, %96 ], [ %47, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187) #13
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #13
  br label %203

203:                                              ; preds = %186, %199, %202
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.2096"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2197", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2197", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2096", %"class.WTF::StringAppend.2096"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.2196"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.WTF::StringAppend.2096", %"class.WTF::StringAppend.2096"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #13
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %6, i8* %16) #13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2096"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #13
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.2197"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #13
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter.2197"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.2196"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #13
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %5, i8* %45) #13
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2198"* nonnull %46, i8* %25) #13
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2196"* nonnull %5, i8* %49) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #13
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !3

65:                                               ; preds = %58
  call void @llvm.trap() #13
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2096"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #13
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter.2197"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #13
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #13
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter.2197"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.2196"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #13
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %3, i8* %105) #13
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2198"* nonnull %106, i16* %85) #13
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2196"* nonnull %3, i16* %109) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #13
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !3

125:                                              ; preds = %118
  call void @llvm.trap() #13
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #13
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #13
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent3DidERKNS_5probe12UserCallbackE(%"class.blink::InspectorDOMDebuggerAgent"* nocapture readonly, %"class.blink::probe::UserCallback"* nocapture readnone dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 3
  %4 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %3, align 8
  %5 = bitcast %"class.v8_inspector::V8InspectorSession"* %4 to void (%"class.v8_inspector::V8InspectorSession"*)***
  %6 = load void (%"class.v8_inspector::V8InspectorSession"*)**, void (%"class.v8_inspector::V8InspectorSession"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorSession"*)*, void (%"class.v8_inspector::V8InspectorSession"*)** %6, i64 8
  %8 = load void (%"class.v8_inspector::V8InspectorSession"*)*, void (%"class.v8_inspector::V8InspectorSession"*)** %7, align 8
  tail call void %8(%"class.v8_inspector::V8InspectorSession"* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent17BreakableLocationEPKc(%"class.blink::InspectorDOMDebuggerAgent"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  %5 = icmp eq i8* %1, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @strlen(i8* nonnull %1) #15
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i64 [ %7, %6 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %1, i64 %9) #13
  %10 = call %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* null) #13
  call void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::protocol::DictionaryValue"* %10, i1 zeroext true) #13
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #13
  br label %27

27:                                               ; preds = %8, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent16setXHRBreakpointERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector", align 8
  %5 = alloca %"class.blink::WebVector", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %40

13:                                               ; preds = %3, %9
  %14 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 6
  %15 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 6, i32 2
  %16 = load i8, i8* %15, align 1, !range !11
  %17 = icmp eq i8 %16, 1
  br i1 %17, label %42, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 6, i32 1
  %20 = load i8, i8* %19, align 8, !range !11
  %21 = icmp eq i8 %20, 1
  br i1 %21, label %22, label %27

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %14 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %24 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %24, i64 2
  %26 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %25, align 8
  tail call void %26(%"class.blink::InspectorAgentState::SimpleField"* %14) #13
  br label %42

27:                                               ; preds = %18
  store i8 1, i8* %15, align 1
  %28 = bitcast %"class.blink::WebVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector"* nonnull %4) #13
  %30 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 6, i32 0, i32 2
  %31 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 6, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %31, %"class.WTF::String"* dereferenceable(8) %32, %"class.blink::WebVector"* nonnull %4) #13
  %33 = load i8*, i8** %29, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %4, i64 0, i32 0, i32 0, i32 1
  %37 = ptrtoint i8* %33 to i64
  %38 = bitcast i8** %36 to i64*
  store i64 %37, i64* %38, align 8
  call void @_ZdlPv(i8* nonnull %33) #14
  br label %39

39:                                               ; preds = %35, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #13
  br label %42

40:                                               ; preds = %9
  %41 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 7
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb(%"class.blink::InspectorAgentState::MapField"* %41, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext true)
  br label %42

42:                                               ; preds = %39, %22, %13, %40
  %43 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5
  %44 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 2
  %45 = load i8, i8* %44, align 1, !range !11
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %72

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 1
  %49 = load i8, i8* %48, align 8, !range !11
  %50 = icmp eq i8 %49, 1
  br i1 %50, label %51, label %56

51:                                               ; preds = %47
  %52 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %43 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %53 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %53, i64 2
  %55 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %54, align 8
  call void %55(%"class.blink::InspectorAgentState::SimpleField"* %43) #13
  br label %69

56:                                               ; preds = %47
  store i8 1, i8* %44, align 1
  %57 = bitcast %"class.blink::WebVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #13
  %58 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %5, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector"* nonnull %5) #13
  %59 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 0, i32 2
  %60 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 5, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %60, %"class.WTF::String"* dereferenceable(8) %61, %"class.blink::WebVector"* nonnull %5) #13
  %62 = load i8*, i8** %58, align 8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %5, i64 0, i32 0, i32 0, i32 1
  %66 = ptrtoint i8* %62 to i64
  %67 = bitcast i8** %65 to i64*
  store i64 %66, i64* %67, align 8
  call void @_ZdlPv(i8* nonnull %62) #14
  br label %68

68:                                               ; preds = %64, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #13
  br label %69

69:                                               ; preds = %68, %51
  %70 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %70, align 8
  call void @_ZN5blink13CoreProbeSink28AddInspectorDOMDebuggerAgentEPNS_25InspectorDOMDebuggerAgentE(%"class.blink::CoreProbeSink"* %71, %"class.blink::InspectorDOMDebuggerAgent"* %1) #13
  br label %72

72:                                               ; preds = %42, %69
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorDOMDebuggerAgent16setXHRBreakpointERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 -1, i32 9, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorDOMDebuggerAgent"*
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent16setXHRBreakpointERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %5, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent19removeXHRBreakpointERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector", align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %39

12:                                               ; preds = %3, %8
  %13 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 6
  %14 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 6, i32 2
  %15 = load i8, i8* %14, align 1, !range !11
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %41, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 6, i32 1
  %19 = load i8, i8* %18, align 8, !range !11
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %17
  %22 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %13 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %23 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %23, i64 2
  %25 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %24, align 8
  tail call void %25(%"class.blink::InspectorAgentState::SimpleField"* %13) #13
  br label %41

26:                                               ; preds = %17
  store i8 0, i8* %14, align 1
  %27 = bitcast %"class.blink::WebVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext false, %"class.blink::WebVector"* nonnull %4) #13
  %29 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 6, i32 0, i32 2
  %30 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 6, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %30, %"class.WTF::String"* dereferenceable(8) %31, %"class.blink::WebVector"* nonnull %4) #13
  %32 = load i8*, i8** %28, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %4, i64 0, i32 0, i32 0, i32 1
  %36 = ptrtoint i8* %32 to i64
  %37 = bitcast i8** %35 to i64*
  store i64 %36, i64* %37, align 8
  call void @_ZdlPv(i8* nonnull %32) #14
  br label %38

38:                                               ; preds = %34, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #13
  br label %41

39:                                               ; preds = %8
  %40 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 0, i32 7
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE(%"class.blink::InspectorAgentState::MapField"* %40, %"class.WTF::String"* dereferenceable(8) %2)
  br label %41

41:                                               ; preds = %38, %21, %12, %39
  call void @_ZN5blink25InspectorDOMDebuggerAgent19DidRemoveBreakpointEv(%"class.blink::InspectorDOMDebuggerAgent"* %1)
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25InspectorDOMDebuggerAgent19removeXHRBreakpointERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %1, i64 -1, i32 9, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorDOMDebuggerAgent"*
  tail call void @_ZN5blink25InspectorDOMDebuggerAgent19removeXHRBreakpointERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorDOMDebuggerAgent"* %5, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink25InspectorDOMDebuggerAgent19MatchXHRBreakpointsERKN3WTF6StringE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.453", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 6, i32 2
  %6 = load i8, i8* %5, align 1, !range !11
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %31, label %8

8:                                                ; preds = %2
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %134, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %134

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #13
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !3

28:                                               ; preds = %19
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %134

31:                                               ; preds = %2
  %32 = bitcast %"class.WTF::Vector.453"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #13
  %33 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 7
  call void @_ZNK5blink19InspectorAgentState8MapFieldIbE4KeysEv(%"class.WTF::Vector.453"* nonnull sret %3, %"class.blink::InspectorAgentState::MapField"* %33)
  %34 = getelementptr inbounds %"class.WTF::Vector.453", %"class.WTF::Vector.453"* %3, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::Vector.453", %"class.WTF::Vector.453"* %3, i64 0, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %93, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.WTF::StringView"* %4 to i8*
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %45 = bitcast i8** %44 to %"class.WTF::StringImpl"**
  %46 = bitcast %"class.WTF::StringView"* %4 to i64*
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %41, %90
  %50 = phi %"class.WTF::String"* [ %35, %41 ], [ %91, %90 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #13
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %49
  store i8* null, i8** %44, align 8
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %55, i64* %46, align 8
  br label %60

56:                                               ; preds = %49
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %43, align 8
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %45, align 8
  br label %60

60:                                               ; preds = %54, %56
  %61 = phi i32 [ %58, %56 ], [ 0, %54 ]
  store i32 %61, i32* %47, align 8
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #13
  br label %90

65:                                               ; preds = %60
  %66 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %62, %"class.WTF::StringView"* nonnull dereferenceable(24) %4, i32 0) #13
  %67 = icmp eq i32 %66, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #13
  br i1 %67, label %90, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  %72 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %72, label %93, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %93

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #13
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %78
  call void @llvm.trap() #13
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %93

90:                                               ; preds = %65, %64
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 1
  %92 = icmp eq %"class.WTF::String"* %91, %39
  br i1 %92, label %93, label %49

93:                                               ; preds = %90, %31, %88, %73, %68
  %94 = phi i64 [ %71, %68 ], [ %71, %73 ], [ %71, %88 ], [ undef, %31 ], [ undef, %90 ]
  %95 = phi i32 [ 1, %68 ], [ 1, %73 ], [ 1, %88 ], [ 2, %31 ], [ 2, %90 ]
  %96 = load %"class.WTF::String"*, %"class.WTF::String"** %34, align 8
  %97 = icmp eq %"class.WTF::String"* %96, null
  br i1 %97, label %131, label %98, !prof !2

98:                                               ; preds = %93
  %99 = bitcast %"class.WTF::String"* %96 to i8*
  %100 = load i32, i32* %36, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %129, label %102, !prof !3

102:                                              ; preds = %98
  %103 = zext i32 %100 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %103
  br label %105

105:                                              ; preds = %123, %102
  %106 = phi %"class.WTF::String"* [ %124, %123 ], [ %96, %102 ]
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #13
  br label %123

123:                                              ; preds = %122, %119, %105
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 1
  %125 = icmp eq %"class.WTF::String"* %124, %104
  br i1 %125, label %126, label %105

126:                                              ; preds = %123
  store i32 0, i32* %36, align 4
  %127 = bitcast %"class.WTF::Vector.453"* %3 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %98
  %130 = phi i8* [ %128, %126 ], [ %99, %98 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %130) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %34, align 8
  br label %131

131:                                              ; preds = %93, %129
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #13
  %132 = icmp eq i32 %95, 2
  %133 = select i1 %132, i64 0, i64 %94
  br label %134

134:                                              ; preds = %131, %29, %14, %8
  %135 = phi i64 [ %12, %8 ], [ %12, %14 ], [ %12, %29 ], [ %133, %131 ]
  %136 = inttoptr i64 %135 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink19InspectorAgentState8MapFieldIbE4KeysEv(%"class.WTF::Vector.453"* noalias sret, %"class.blink::InspectorAgentState::MapField"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.453", %"class.WTF::Vector.453"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::Vector.453", %"class.WTF::Vector.453"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::Vector.453", %"class.WTF::Vector.453"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.WTF::Vector.453"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #13
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 3, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 3, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %11, i64 %14
  br i1 %9, label %28, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.1672"* [ %23, %22 ], [ %11, %16 ]
  %20 = bitcast %"struct.WTF::KeyValuePair.1672"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %25 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.1672"* %23, %15
  br i1 %24, label %28, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.1672"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.1672"* %26, %15
  br i1 %27, label %28, label %29

28:                                               ; preds = %22, %63, %73, %70, %2, %25
  ret void

29:                                               ; preds = %25, %75
  %30 = phi i32 [ %77, %75 ], [ 0, %25 ]
  %31 = phi i32 [ %76, %75 ], [ 0, %25 ]
  %32 = phi %"struct.WTF::KeyValuePair.1672"* [ %67, %75 ], [ %26, %25 ]
  %33 = icmp eq i32 %31, %30
  br i1 %33, label %61, label %34, !prof !3

34:                                               ; preds = %29
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %32, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %36, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #13
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.trap() #13
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %56, %41, %34
  %59 = load i32, i32* %5, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %5, align 4
  br label %63

61:                                               ; preds = %29
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %32, i64 0, i32 0
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.453"* %0, %"class.WTF::String"* dereferenceable(8) %62) #13
  br label %63

63:                                               ; preds = %58, %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %32, i64 1
  %65 = icmp eq %"struct.WTF::KeyValuePair.1672"* %64, %15
  br i1 %65, label %28, label %66

66:                                               ; preds = %63, %70
  %67 = phi %"struct.WTF::KeyValuePair.1672"* [ %71, %70 ], [ %64, %63 ]
  %68 = bitcast %"struct.WTF::KeyValuePair.1672"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  switch i64 %69, label %73 [
    i64 -1, label %70
    i64 0, label %70
  ]

70:                                               ; preds = %66, %66
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %67, i64 1
  %72 = icmp eq %"struct.WTF::KeyValuePair.1672"* %71, %15
  br i1 %72, label %28, label %66

73:                                               ; preds = %66
  %74 = icmp eq %"struct.WTF::KeyValuePair.1672"* %67, %15
  br i1 %74, label %28, label %75

75:                                               ; preds = %73
  %76 = load i32, i32* %5, align 4
  %77 = load i32, i32* %4, align 8
  br label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent36WillSendXMLHttpOrFetchNetworkRequestERKN3WTF6StringE(%"class.blink::InspectorDOMDebuggerAgent"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.std::__1::vector.2089", align 8
  %7 = alloca %"class.std::__1::vector.2089", align 8
  %8 = alloca %"class.v8_inspector::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.v8_inspector::StringView", align 8
  %11 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %13 = tail call %"class.WTF::StringImpl"* @_ZNK5blink25InspectorDOMDebuggerAgent19MatchXHRBreakpointsERKN3WTF6StringE(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %126, label %15

15:                                               ; preds = %2
  %16 = tail call i8* @_Znwm(i64 80) #14
  %17 = bitcast i8* %16 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %17) #13
  %18 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i64 13) #13
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %17, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %3) #13
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #13
  br label %35

35:                                               ; preds = %15, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %36 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i64 3) #13
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %17, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %1) #13
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #13
  br label %53

53:                                               ; preds = %35, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  %54 = bitcast %"class.std::__1::vector.2089"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #13
  %55 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %6, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 24, i1 false) #13
  %57 = bitcast %"class.std::__1::vector.2089"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #13
  %58 = bitcast i8* %16 to %"class.crdtp::Serializable"*
  call void @_ZNK5crdtp12Serializable9SerializeEv(%"class.std::__1::vector.2089"* nonnull sret %7, %"class.crdtp::Serializable"* nonnull %58) #13
  %59 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %7, i64 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %7, i64 0, i32 0, i32 1
  %62 = bitcast i8** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = ptrtoint i8* %60 to i64
  %65 = sub i64 %63, %64
  %66 = call { i32, i64 } @_ZN5crdtp4json17ConvertCBORToJSONENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %60, i64 %65, %"class.std::__1::vector.2089"* nonnull %6) #13
  %67 = load i8*, i8** %59, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %53
  %70 = ptrtoint i8* %67 to i64
  store i64 %70, i64* %62, align 8
  call void @_ZdlPv(i8* nonnull %67) #14
  br label %71

71:                                               ; preds = %53, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #13
  %72 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 3
  %73 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %72, align 8
  %74 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13
  %75 = load i8*, i8** @_ZN12v8_inspector8protocol8Debugger3API6Paused10ReasonEnum3XHRE, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %71
  %78 = call i64 @strlen(i8* nonnull %75) #15
  %79 = icmp ult i64 %78, 4294967296
  br i1 %79, label %81, label %80, !prof !2

80:                                               ; preds = %77
  call void @llvm.trap() #13
  unreachable

81:                                               ; preds = %77
  %82 = trunc i64 %78 to i32
  br label %83

83:                                               ; preds = %71, %81
  %84 = phi i32 [ %82, %81 ], [ 0, %71 ]
  %85 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %86 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* %75, i8** %87, align 8
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %84, i32* %88, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #13
  %89 = bitcast %"class.std::__1::vector.2089"* %6 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast i8** %56 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = sub i64 %92, %90
  %94 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %10, i64 0, i32 0
  store i8 1, i8* %94, align 8
  %95 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %10, i64 0, i32 1
  store i64 %93, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %10, i64 0, i32 2, i32 0
  %97 = bitcast i8** %96 to i64*
  store i64 %90, i64* %97, align 8
  %98 = bitcast %"class.v8_inspector::V8InspectorSession"* %73 to void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)***
  %99 = load void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)**, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)** %99, i64 9
  %101 = load void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)** %100, align 8
  call void %101(%"class.v8_inspector::V8InspectorSession"* %73, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %8, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %10) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13
  %102 = load i8*, i8** %55, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %83
  %105 = ptrtoint i8* %102 to i64
  store i64 %105, i64* %91, align 8
  call void @_ZdlPv(i8* nonnull %102) #14
  br label %106

106:                                              ; preds = %104, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #13
  %107 = bitcast i8* %16 to void (%"class.blink::protocol::DictionaryValue"*)***
  %108 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %108, i64 2
  %110 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %109, align 8
  call void %110(%"class.blink::protocol::DictionaryValue"* nonnull %17) #13
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #13
  br label %126

126:                                              ; preds = %2, %106, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent22DidCreateCanvasContextEv(%"class.blink::InspectorDOMDebuggerAgent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @_ZN12_GLOBAL__N_130kCanvasContextCreatedEventNameE, i64 0, i64 0), i64 20) #13
  %4 = call %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* null)
  call void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::protocol::DictionaryValue"* %4, i1 zeroext true)
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #13
  br label %21

21:                                               ; preds = %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #13
  ret void
}

declare void @_ZN5blink13CoreProbeSink31RemoveInspectorDOMDebuggerAgentEPNS_25InspectorDOMDebuggerAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorDOMDebuggerAgent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorDOMDebuggerAgent"* nocapture, %"class.blink::LocalFrame"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %"class.WTF::HashMap.1664", %"class.WTF::HashMap.1664"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1667"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.WTF::KeyValuePair.1667"* %5 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %9) #13
  %10 = bitcast %"class.WTF::HashMap.1664"* %3 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  store i32 0, i32* %8, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 0, i32* %11, align 4
  br label %12

12:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent21DidCreateAudioContextEv(%"class.blink::InspectorDOMDebuggerAgent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN12_GLOBAL__N_129kAudioContextCreatedEventNameE, i64 0, i64 0), i64 19) #13
  %4 = call %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* null)
  call void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::protocol::DictionaryValue"* %4, i1 zeroext true)
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #13
  br label %21

21:                                               ; preds = %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent20DidCloseAudioContextEv(%"class.blink::InspectorDOMDebuggerAgent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZN12_GLOBAL__N_128kAudioContextClosedEventNameE, i64 0, i64 0), i64 18) #13
  %4 = call %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* null)
  call void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::protocol::DictionaryValue"* %4, i1 zeroext true)
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #13
  br label %21

21:                                               ; preds = %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent21DidResumeAudioContextEv(%"class.blink::InspectorDOMDebuggerAgent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN12_GLOBAL__N_129kAudioContextResumedEventNameE, i64 0, i64 0), i64 19) #13
  %4 = call %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* null)
  call void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::protocol::DictionaryValue"* %4, i1 zeroext true)
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #13
  br label %21

21:                                               ; preds = %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent22DidSuspendAudioContextEv(%"class.blink::InspectorDOMDebuggerAgent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN12_GLOBAL__N_131kAudioContextSuspendedEventNameE, i64 0, i64 0), i64 21) #13
  %4 = call %"class.blink::protocol::DictionaryValue"* @_ZN5blink25InspectorDOMDebuggerAgent29PreparePauseOnNativeEventDataERKN3WTF6StringEPS3_(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* null)
  call void @_ZN5blink25InspectorDOMDebuggerAgent26PauseOnNativeEventIfNeededENSt3__110unique_ptrINS_8protocol15DictionaryValueENS1_14default_deleteIS4_EEEEb(%"class.blink::InspectorDOMDebuggerAgent"* %0, %"class.blink::protocol::DictionaryValue"* %4, i1 zeroext true)
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #13
  br label %21

21:                                               ; preds = %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink21ViolationTypeToStringENS_21ContentSecurityPolicy34ContentSecurityPolicyViolationTypeE(i32) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  switch i32 %0, label %7 [
    i32 3, label %3
    i32 4, label %5
  ]

3:                                                ; preds = %1
  %4 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol11DOMDebugger20CSPViolationTypeEnum24TrustedtypeSinkViolationE, i64 0, i64 0)) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol11DOMDebugger20CSPViolationTypeEnum24TrustedtypeSinkViolationE, i64 0, i64 0), i64 %4) #13
  br label %30

5:                                                ; preds = %1
  %6 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol11DOMDebugger20CSPViolationTypeEnum26TrustedtypePolicyViolationE, i64 0, i64 0)) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol11DOMDebugger20CSPViolationTypeEnum26TrustedtypePolicyViolationE, i64 0, i64 0), i64 %6) #13
  br label %30

7:                                                ; preds = %1
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #13
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %28, %13, %7, %5, %3
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  ret %"class.WTF::StringImpl"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25InspectorDOMDebuggerAgent32OnContentSecurityPolicyViolationENS_21ContentSecurityPolicy34ContentSecurityPolicyViolationTypeE(%"class.blink::InspectorDOMDebuggerAgent"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.std::__1::vector.2089", align 8
  %6 = alloca %"class.std::__1::vector.2089", align 8
  %7 = alloca %"class.v8_inspector::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.v8_inspector::StringView", align 8
  %10 = alloca %"class.v8_inspector::StringView", align 8
  %11 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %13 = tail call %"class.WTF::StringImpl"* @_ZN5blink21ViolationTypeToStringENS_21ContentSecurityPolicy34ContentSecurityPolicyViolationTypeE(i32 %1)
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 9, i32 3
  %15 = getelementptr inbounds %"class.WTF::HashMap.1668", %"class.WTF::HashMap.1668"* %14, i64 0, i32 0
  %16 = call { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1669"* %15, %"class.WTF::String"* nonnull dereferenceable(8) %3) #13
  %17 = extractvalue { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } %16, 0
  %18 = getelementptr inbounds %"class.WTF::HashMap.1668", %"class.WTF::HashMap.1668"* %14, i64 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 9, i32 3, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %19, i64 %22
  %24 = icmp eq %"struct.WTF::KeyValuePair.1672"* %17, %23
  %25 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 9, i32 1
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %17, i64 0, i32 1
  %27 = select i1 %24, i8* %25, i8* %26
  %28 = load i8, i8* %27, align 8, !range !11
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %111, label %30

30:                                               ; preds = %2
  %31 = call i8* @_Znwm(i64 80) #14
  %32 = bitcast i8* %31 to %"class.blink::protocol::DictionaryValue"*
  call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %32) #13
  %33 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0), i64 13) #13
  call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %32, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %3) #13
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #13
  br label %50

50:                                               ; preds = %30, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %51 = bitcast %"class.std::__1::vector.2089"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #13
  %52 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %5, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #13
  %54 = bitcast %"class.std::__1::vector.2089"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #13
  %55 = bitcast i8* %31 to %"class.crdtp::Serializable"*
  call void @_ZNK5crdtp12Serializable9SerializeEv(%"class.std::__1::vector.2089"* nonnull sret %6, %"class.crdtp::Serializable"* nonnull %55) #13
  %56 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %6, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector.2089", %"class.std::__1::vector.2089"* %6, i64 0, i32 0, i32 1
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = ptrtoint i8* %57 to i64
  %62 = sub i64 %60, %61
  %63 = call { i32, i64 } @_ZN5crdtp4json17ConvertCBORToJSONENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %57, i64 %62, %"class.std::__1::vector.2089"* nonnull %5) #13
  %64 = load i8*, i8** %56, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %50
  %67 = ptrtoint i8* %64 to i64
  store i64 %67, i64* %59, align 8
  call void @_ZdlPv(i8* nonnull %64) #14
  br label %68

68:                                               ; preds = %50, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #13
  %69 = bitcast %"class.std::__1::vector.2089"* %5 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast i8** %53 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %72, %70
  %74 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 24, i1 false)
  %75 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #13
  %76 = load i8*, i8** @_ZN12v8_inspector8protocol8Debugger3API6Paused10ReasonEnum12CSPViolationE, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %68
  %79 = call i64 @strlen(i8* nonnull %76) #15
  %80 = icmp ult i64 %79, 4294967296
  br i1 %80, label %82, label %81, !prof !2

81:                                               ; preds = %78
  call void @llvm.trap() #13
  unreachable

82:                                               ; preds = %78
  %83 = trunc i64 %79 to i32
  br label %84

84:                                               ; preds = %68, %82
  %85 = phi i32 [ %83, %82 ], [ 0, %68 ]
  %86 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %87 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* %76, i8** %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %85, i32* %89, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #13
  %90 = getelementptr inbounds %"class.blink::InspectorDOMDebuggerAgent", %"class.blink::InspectorDOMDebuggerAgent"* %0, i64 0, i32 3
  %91 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %90, align 8
  %92 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %9, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* nonnull align 8 %74, i64 24, i1 false)
  %93 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %10, i64 0, i32 0
  store i8 1, i8* %93, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %94, i8* nonnull align 1 getelementptr inbounds ({ i8, [7 x i8], i64, %union.anon.2051 }, { i8, [7 x i8], i64, %union.anon.2051 }* @__const._ZN5blink25InspectorDOMDebuggerAgent32OnContentSecurityPolicyViolationENS_21ContentSecurityPolicy34ContentSecurityPolicyViolationTypeE.json_view, i64 0, i32 1, i64 0), i64 7, i1 false)
  %95 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %10, i64 0, i32 1
  store i64 %73, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %10, i64 0, i32 2, i32 0
  %97 = bitcast i8** %96 to i64*
  store i64 %70, i64* %97, align 8
  %98 = bitcast %"class.v8_inspector::V8InspectorSession"* %91 to void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)***
  %99 = load void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)**, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)** %99, i64 9
  %101 = load void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)*, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*)** %100, align 8
  call void %101(%"class.v8_inspector::V8InspectorSession"* %91, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %9, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %10) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13
  %102 = load i8*, i8** %52, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %84
  %105 = ptrtoint i8* %102 to i64
  store i64 %105, i64* %71, align 8
  call void @_ZdlPv(i8* nonnull %102) #14
  br label %106

106:                                              ; preds = %84, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #13
  %107 = bitcast i8* %31 to void (%"class.blink::protocol::DictionaryValue"*)***
  %108 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %108, i64 2
  %110 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %109, align 8
  call void %110(%"class.blink::protocol::DictionaryValue"* nonnull %32) #13
  br label %111

111:                                              ; preds = %2, %106
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #13
  br label %127

127:                                              ; preds = %111, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE(%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::CoreProbeSink"* %1 to i64
  %7 = bitcast %"class.blink::Member.1203"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::CoreProbeSink"* %1 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #13
  br label %13

13:                                               ; preds = %4, %10
  %14 = tail call i8* @_Znwm(i64 8) #14
  %15 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %2, i64 0, i32 1
  %16 = bitcast %"class.crdtp::FrontendChannel"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::DOMDebugger::Frontend"*, %"class.blink::protocol::DOMDebugger::Frontend"** %19, align 8
  %21 = bitcast %"class.blink::protocol::DOMDebugger::Frontend"** %19 to i8**
  store i8* %14, i8** %21, align 8
  %22 = icmp eq %"class.blink::protocol::DOMDebugger::Frontend"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::protocol::DOMDebugger::Frontend"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %13, %23
  %26 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 1
  tail call void @_ZN5blink8protocol11DOMDebugger10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %2, %"class.blink::protocol::DOMDebugger::Backend"* %26) #13
  %27 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"* %27, %"class.blink::InspectorSessionState"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE7DisposeEv(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = bitcast %"class.blink::InspectorBaseAgent"* %0 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)***
  %4 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %4, i64 8
  %6 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %5, align 8
  call void %6(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorBaseAgent"* %0) #13
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #14
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::DOMDebugger::Frontend"*, %"class.blink::protocol::DOMDebugger::Frontend"** %16, align 8
  store %"class.blink::protocol::DOMDebugger::Frontend"* null, %"class.blink::protocol::DOMDebugger::Frontend"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::DOMDebugger::Frontend"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::protocol::DOMDebugger::Frontend"* %17 to i8*
  call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::Member.1203"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbED0Ev(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1672"* %4, null
  br i1 %5, label %38, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %4, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.1672"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #13
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"struct.WTF::KeyValuePair.1672"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #13
  store %"struct.WTF::KeyValuePair.1672"* null, %"struct.WTF::KeyValuePair.1672"** %3, align 8
  br label %38

38:                                               ; preds = %36, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #13
  br label %55

55:                                               ; preds = %38, %51, %54
  %56 = bitcast %"class.blink::InspectorAgentState::MapField"* %0 to i8*
  tail call void @_ZdlPv(i8* %56) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %6) #13
  %8 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %7, null
  br i1 %8, label %122, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair.1568"*, %"struct.WTF::KeyValuePair.1568"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %14, i64 %17
  br i1 %12, label %122, label %19

19:                                               ; preds = %9
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"struct.WTF::KeyValuePair.1568"* [ %26, %25 ], [ %14, %19 ]
  %23 = bitcast %"struct.WTF::KeyValuePair.1568"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %28 [
    i64 -1, label %25
    i64 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %22, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair.1568"* %26, %18
  br i1 %27, label %122, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"struct.WTF::KeyValuePair.1568"* [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair.1568"* %29, %18
  br i1 %30, label %122, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.WTF::StringView"* %2 to i8*
  %33 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  %37 = bitcast %"class.WTF::StringView"* %2 to i64*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %39 = bitcast %"class.WTF::String"* %3 to i8*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0
  br label %42

42:                                               ; preds = %31, %120
  %43 = phi %"struct.WTF::KeyValuePair.1568"* [ %29, %31 ], [ %114, %120 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %43, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #13
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  store i8* null, i8** %35, align 8
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %48, i64* %37, align 8
  br label %53

49:                                               ; preds = %42
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %34, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 1
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %36, align 8
  br label %53

53:                                               ; preds = %47, %49
  %54 = phi i32 [ %51, %49 ], [ 0, %47 ]
  store i32 %54, i32* %38, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %43, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = icmp eq i32 %54, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  br i1 %59, label %64, label %110

60:                                               ; preds = %53
  %61 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %56, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  br i1 %61, label %62, label %110

62:                                               ; preds = %60
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  br label %64

64:                                               ; preds = %62, %58
  %65 = phi %"class.WTF::StringImpl"* [ %63, %62 ], [ %45, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %40, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  br label %70

70:                                               ; preds = %64, %67
  %71 = phi i32 [ %69, %67 ], [ 0, %64 ]
  %72 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %44, i32 %71, i32 -1) #13
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 -86, i8* %4, align 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %74 = load i8, i8* %73, align 8, !range !11
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %77, !prof !3

76:                                               ; preds = %70
  call void @llvm.trap() #13
  unreachable

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %79, i64 %82, i8* nonnull %4) #13
  br i1 %83, label %84, label %93

84:                                               ; preds = %77
  %85 = call { %"struct.WTF::KeyValuePair.1672"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.1669"* %41, %"class.WTF::String"* nonnull dereferenceable(8) %3, i8* nonnull dereferenceable(1) %4) #13
  %86 = extractvalue { %"struct.WTF::KeyValuePair.1672"*, i8 } %85, 1
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %84
  %90 = extractvalue { %"struct.WTF::KeyValuePair.1672"*, i8 } %85, 0
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %90, i64 0, i32 1
  %92 = load i8, i8* %4, align 1, !range !11
  store i8 %92, i8* %91, align 1
  br label %93

93:                                               ; preds = %89, %84, %77
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #13
  br label %109

109:                                              ; preds = %93, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  br label %110

110:                                              ; preds = %58, %60, %109
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %43, i64 1
  %112 = icmp eq %"struct.WTF::KeyValuePair.1568"* %111, %18
  br i1 %112, label %122, label %113

113:                                              ; preds = %110, %117
  %114 = phi %"struct.WTF::KeyValuePair.1568"* [ %118, %117 ], [ %111, %110 ]
  %115 = bitcast %"struct.WTF::KeyValuePair.1568"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  switch i64 %116, label %120 [
    i64 -1, label %117
    i64 0, label %117
  ]

117:                                              ; preds = %113, %113
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %114, i64 1
  %119 = icmp eq %"struct.WTF::KeyValuePair.1568"* %118, %18
  br i1 %119, label %122, label %113

120:                                              ; preds = %113
  %121 = icmp eq %"struct.WTF::KeyValuePair.1568"* %114, %18
  br i1 %121, label %122, label %42

122:                                              ; preds = %25, %110, %120, %117, %9, %28, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD0Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8*, i64, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1672"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.1669"*, %"class.WTF::String"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1672"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1672"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1669"* %0, %"struct.WTF::KeyValuePair.1672"* null)
  %9 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1672"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.1672"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.1672"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.1672"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #13
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.1672"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.1672"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.1672"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #13
  %72 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.1672"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #13
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #13
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.1672"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #13
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %79, i64 0, i32 1
  %120 = load i8, i8* %2, align 1, !range !11
  store i8 %120, i8* %119, align 1
  %121 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair.1672"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1669"* %0, %"struct.WTF::KeyValuePair.1672"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair.1672"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair.1672"*, i8 } undef, %"struct.WTF::KeyValuePair.1672"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair.1672"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair.1672"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1672"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1669"*, %"struct.WTF::KeyValuePair.1672"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEbEEEEPKcv, i64 0, i64 0)) #13
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1672"*
  %37 = call %"struct.WTF::KeyValuePair.1672"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.1669"* %0, %"struct.WTF::KeyValuePair.1672"* %36, i32 %32, %"struct.WTF::KeyValuePair.1672"* %1) #13
  ret %"struct.WTF::KeyValuePair.1672"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1672"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.1669"*, %"struct.WTF::KeyValuePair.1672"*, i32, %"struct.WTF::KeyValuePair.1672"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1669", align 8
  %6 = bitcast %"class.WTF::HashTable.1669"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1669"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1672"* %1, %"struct.WTF::KeyValuePair.1672"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1672"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1669"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1669"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1672"* %22 to i64
  br label %71

24:                                               ; preds = %114
  %25 = bitcast %"class.WTF::HashTable.1669"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1669"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %115, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1672"* [ null, %16 ], [ %118, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %116, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.1672"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.1672"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #13
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.1672"* %33

71:                                               ; preds = %21, %114
  %72 = phi i64 [ %115, %114 ], [ %23, %21 ]
  %73 = phi i32 [ %116, %114 ], [ %13, %21 ]
  %74 = phi %"struct.WTF::KeyValuePair.1672"* [ %117, %114 ], [ %22, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair.1672"* [ %118, %114 ], [ null, %21 ]
  %76 = phi i32 [ %119, %114 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"struct.WTF::KeyValuePair.1672"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %114
    i64 0, label %114
  ]

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %78, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair.1672"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1669"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %83) #13
  %85 = extractvalue { %"struct.WTF::KeyValuePair.1672"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #13
  br label %102

102:                                              ; preds = %82, %98, %101
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair.1672"* %85 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %74, i64 %77, i32 1
  %107 = load i8, i8* %106, align 8, !range !11
  store i8 %107, i8* %105, align 8
  %108 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %15, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %108, i64 %77
  %110 = icmp eq %"struct.WTF::KeyValuePair.1672"* %109, %3
  %111 = select i1 %110, %"struct.WTF::KeyValuePair.1672"* %85, %"struct.WTF::KeyValuePair.1672"* %75
  %112 = load i32, i32* %12, align 8
  %113 = ptrtoint %"struct.WTF::KeyValuePair.1672"* %108 to i64
  br label %114

114:                                              ; preds = %71, %71, %102
  %115 = phi i64 [ %72, %71 ], [ %113, %102 ], [ %72, %71 ]
  %116 = phi i32 [ %73, %71 ], [ %112, %102 ], [ %73, %71 ]
  %117 = phi %"struct.WTF::KeyValuePair.1672"* [ %74, %71 ], [ %108, %102 ], [ %74, %71 ]
  %118 = phi %"struct.WTF::KeyValuePair.1672"* [ %75, %71 ], [ %111, %102 ], [ %75, %71 ]
  %119 = add i32 %76, 1
  %120 = icmp eq i32 %119, %116
  br i1 %120, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1672"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1669"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #13
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.1672"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.1672"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.1672"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.1672"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.1672"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.1672"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.1672"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.1672"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #13
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.1672"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.1672"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.1672"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.1672"*, i8 } undef, %"struct.WTF::KeyValuePair.1672"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1672"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.1672"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEED2Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorBaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [15 x i8*] }, { [11 x i8*], [15 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [15 x i8*] }, { [11 x i8*], [15 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::DOMDebugger::Frontend"*, %"class.blink::protocol::DOMDebugger::Frontend"** %3, align 8
  store %"class.blink::protocol::DOMDebugger::Frontend"* null, %"class.blink::protocol::DOMDebugger::Frontend"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::DOMDebugger::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::DOMDebugger::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  %11 = icmp eq %"class.blink::InspectorAgentState::Field"** %10, null
  %12 = bitcast %"class.blink::InspectorAgentState::Field"** %10 to i8*
  br i1 %11, label %19, label %13, !prof !2

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !3

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  br label %19

19:                                               ; preds = %18, %8
  %20 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent7RestoreEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEED1Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.1584"* %2 to %"class.blink::InspectorBaseAgent"*
  %4 = bitcast %"class.std::__1::unique_ptr.1584"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [15 x i8*] }, { [11 x i8*], [15 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [15 x i8*] }, { [11 x i8*], [15 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.1584", %"class.std::__1::unique_ptr.1584"* %2, i64 6, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::DOMDebugger::Frontend"*, %"class.blink::protocol::DOMDebugger::Frontend"** %5, align 8
  store %"class.blink::protocol::DOMDebugger::Frontend"* null, %"class.blink::protocol::DOMDebugger::Frontend"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::DOMDebugger::Frontend"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::protocol::DOMDebugger::Frontend"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.1584", %"class.std::__1::unique_ptr.1584"* %2, i64 4
  %12 = bitcast %"class.std::__1::unique_ptr.1584"* %11 to %"class.blink::InspectorAgentState::Field"***
  %13 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  %14 = icmp eq %"class.blink::InspectorAgentState::Field"** %13, null
  %15 = bitcast %"class.blink::InspectorAgentState::Field"** %13 to i8*
  br i1 %14, label %22, label %16, !prof !2

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %3, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  br label %22

22:                                               ; preds = %21, %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.1584", %"class.std::__1::unique_ptr.1584"* %2, i64 3
  %24 = bitcast %"class.std::__1::unique_ptr.1584"* %23 to %"class.WTF::StringImpl"**
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #13
  br label %40

40:                                               ; preds = %22, %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol11DOMDebugger8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_EcvS1_Ev(%"class.WTF::StringAppend.2194"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2196"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #13
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %3, i8* %8) #13
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.2196"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #13
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %2, i8* %16) #13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E6lengthEv(%"class.WTF::StringAppend.2194"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #13
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E7WriteToEPh(%"class.WTF::StringAppend.2194"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #13
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %34
  call void @llvm.trap() #13
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E6lengthEv(%"class.WTF::StringAppend.2194"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #13
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E7WriteToEPDs(%"class.WTF::StringAppend.2194"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #13
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %70
  call void @llvm.trap() #13
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #13
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #13
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2195"* noalias sret, %"class.WTF::StringAppend.2096"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2096", %"class.WTF::StringAppend.2096"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.2096", %"class.WTF::StringAppend.2096"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #13
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %34
  tail call void @llvm.trap() #13
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2195"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2195"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #13
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend.2195"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.2196"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #13
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %2, i8* %14) #13
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #13
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2195"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #13
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.2195"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %39
  call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2195"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #13
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.2195"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #13
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %75
  call void @llvm.trap() #13
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #13
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #13
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E6lengthEv(%"class.WTF::StringAppend.2194"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2196"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2196", %"class.WTF::StringTypeAdapter.2196"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2196"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %4, i8* %14) #13
  %15 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2096"* %9) #13
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2096"* %9) #13
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #13
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %25, i8* %26) #13
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #13
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #13
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E7WriteToEPh(%"class.WTF::StringAppend.2194"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2197", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2196"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2196"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %5, i8* %10) #13
  %11 = bitcast %"class.WTF::StringTypeAdapter.2197"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #13
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2197"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  %30 = bitcast %"class.WTF::StringTypeAdapter.2196"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false) #13
  %32 = load i8*, i8** %31, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %4, i8* %32) #13
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2198"* nonnull %33, i8* %1) #13
  %34 = load i32, i32* %13, align 8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2196"* nonnull %4, i8* %36) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  %37 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2096"* %6) #13
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2196"* nonnull %5, i8* %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES3_E7WriteToEPDs(%"class.WTF::StringAppend.2194"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2197", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2196"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2196"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %5, i8* %10) #13
  %11 = bitcast %"class.WTF::StringTypeAdapter.2197"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #13
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2197"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  %30 = bitcast %"class.WTF::StringTypeAdapter.2196"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2194", %"class.WTF::StringAppend.2194"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false) #13
  %32 = load i8*, i8** %31, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %4, i8* %32) #13
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2198"* nonnull %33, i16* %1) #13
  %34 = load i32, i32* %13, align 8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2196"* nonnull %4, i16* %36) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  %37 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2096"* %6) #13
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i16, i16* %1, i64 %38
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2196"* nonnull %5, i16* %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2096"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2096", %"class.WTF::StringAppend.2096"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.2196"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2196", %"class.WTF::StringTypeAdapter.2196"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2096", %"class.WTF::StringAppend.2096"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.2196"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %4, i8* %21) #13
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %46, i8* %47) #13
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2196"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2198"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2196"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2198"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2195"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #13
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #13
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %37
  tail call void @llvm.trap() #13
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #13
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #13
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2195"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2096"* %8) #13
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2096"* %8) #13
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #13
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %26, i8* %27) #13
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #13
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #13
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #13
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.2195"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2197", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2197", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2197"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2197"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2197"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2197"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #13
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2197"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2196"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #13
  %47 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #13
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %4, i8* %48) #13
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2198"* nonnull %49, i8* %1) #13
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2196"* nonnull %4, i8* %52) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #13
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2096"* %6) #13
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2198"* nonnull %53, i8* %56) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.2195"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2197", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2197", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2197"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2197"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2197"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2197"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #13
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2197"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2196"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #13
  %47 = getelementptr inbounds %"class.WTF::StringAppend.2195", %"class.WTF::StringAppend.2195"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #13
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %4, i8* %48) #13
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2198"* nonnull %49, i16* %1) #13
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2196"* nonnull %4, i16* %52) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #13
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2197", %"class.WTF::StringTypeAdapter.2197"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2096"* %6) #13
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2198"* nonnull %53, i16* %56) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"*) unnamed_addr #2

declare i32 @_ZN3WTF10StringImpl16FindIgnoringCaseERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

declare i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1992"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1992", %"class.WTF::Vector.1992"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.28, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.1992", %"class.WTF::Vector.1992"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19V8EventListenerInfoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1985"*, %"struct.blink::V8EventListenerInfo"* dereferenceable(40)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::V8EventListenerInfo"*, %"struct.blink::V8EventListenerInfo"** %6, align 8
  %8 = icmp ugt %"struct.blink::V8EventListenerInfo"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::V8EventListenerInfo"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::V8EventListenerInfo"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19V8EventListenerInfoEEEmm(i64 %27) #13
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19V8EventListenerInfoEEEPKcv, i64 0, i64 0)) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.1985"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 40
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::V8EventListenerInfo"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink19V8EventListenerInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1985"* %0, i32 %22) #13
  %36 = load %"struct.blink::V8EventListenerInfo"*, %"struct.blink::V8EventListenerInfo"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::V8EventListenerInfo"* %1 to i64
  %39 = ptrtoint %"struct.blink::V8EventListenerInfo"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 40
  %42 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::V8EventListenerInfo"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19V8EventListenerInfoEEEmm(i64 %55) #13
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19V8EventListenerInfoEEEPKcv, i64 0, i64 0)) #13
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.1985"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 40
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::V8EventListenerInfo"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink19V8EventListenerInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1985"* %0, i32 %50) #13
  %64 = load %"struct.blink::V8EventListenerInfo"*, %"struct.blink::V8EventListenerInfo"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::V8EventListenerInfo"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::V8EventListenerInfo"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::V8EventListenerInfo"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %69, i64 %72
  %74 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = bitcast %"struct.blink::V8EventListenerInfo"* %70 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"struct.blink::V8EventListenerInfo"* %73 to i64*
  store i64 %76, i64* %77, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %74, align 8
  %78 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %69, i64 %72, i32 1
  %79 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %70, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 32, i1 false) #13
  %80 = load i32, i32* %3, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19V8EventListenerInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1985"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %44

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::V8EventListenerInfo"*, %"struct.blink::V8EventListenerInfo"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1985"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %42, label %14

14:                                               ; preds = %4, %38
  %15 = phi %"struct.blink::V8EventListenerInfo"* [ %40, %38 ], [ %6, %4 ]
  %16 = phi %"struct.blink::V8EventListenerInfo"* [ %39, %38 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"struct.blink::V8EventListenerInfo"* %15 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.blink::V8EventListenerInfo"* %16 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %21 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %16, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %15, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 32, i1 false) #13
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #13
  br label %38

38:                                               ; preds = %37, %34, %14
  %39 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %16, i64 1
  %40 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %15, i64 1
  %41 = icmp eq %"struct.blink::V8EventListenerInfo"* %40, %10
  br i1 %41, label %42, label %14

42:                                               ; preds = %38, %4
  %43 = bitcast %"struct.blink::V8EventListenerInfo"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #13
  br label %97

44:                                               ; preds = %2
  %45 = zext i32 %1 to i64
  %46 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19V8EventListenerInfoEEEmm(i64 %45) #13
  %47 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %46, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19V8EventListenerInfoEEEPKcv, i64 0, i64 0)) #13
  %48 = udiv i64 %46, 40
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %0, i64 0, i32 0, i32 0, i32 0
  %51 = load %"struct.blink::V8EventListenerInfo"*, %"struct.blink::V8EventListenerInfo"** %50, align 8
  %52 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %0, i64 0, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %51, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %44
  %58 = bitcast %"struct.blink::V8EventListenerInfo"* %51 to i8*
  br label %92

59:                                               ; preds = %44
  %60 = bitcast i8* %47 to %"struct.blink::V8EventListenerInfo"*
  br label %61

61:                                               ; preds = %59, %85
  %62 = phi %"struct.blink::V8EventListenerInfo"* [ %87, %85 ], [ %51, %59 ]
  %63 = phi %"struct.blink::V8EventListenerInfo"* [ %86, %85 ], [ %60, %59 ]
  %64 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = bitcast %"struct.blink::V8EventListenerInfo"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"struct.blink::V8EventListenerInfo"* %63 to i64*
  store i64 %66, i64* %67, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %64, align 8
  %68 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %63, i64 0, i32 1
  %69 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %62, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 32, i1 false) #13
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #13
  br label %85

85:                                               ; preds = %84, %81, %61
  %86 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %63, i64 1
  %87 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %62, i64 1
  %88 = icmp eq %"struct.blink::V8EventListenerInfo"* %87, %55
  br i1 %88, label %89, label %61

89:                                               ; preds = %85
  %90 = bitcast %"class.WTF::Vector.1985"* %0 to i8**
  %91 = load i8*, i8** %90, align 8
  br label %92

92:                                               ; preds = %57, %89
  %93 = phi i8* [ %91, %89 ], [ %58, %57 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %93) #13
  %94 = bitcast %"class.WTF::Vector.1985"* %0 to i64*
  store atomic i64 %49, i64* %94 monotonic, align 8
  %95 = trunc i64 %48 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.1985", %"class.WTF::Vector.1985"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  br label %97

97:                                               ; preds = %92, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19V8EventListenerInfoEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.31, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbPN5blink4NodeEEJEEES6_E3RunEPNS0_13BindStateBaseES5_(%"class.base::internal::BindStateBase"*, %"class.blink::Node"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to i1 (%"class.blink::Node"*)**
  %5 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::Node"* %1) #13
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbPN5blink4NodeEEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !11
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !11
  %6 = icmp eq i8 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i8 %3, i8* %4, align 1
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector"* null) #13
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #13
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair.1568"*, %"struct.WTF::KeyValuePair.1568"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.1565"* %8, %"class.WTF::String"* dereferenceable(8) %7) #13
  %10 = extractvalue { %"struct.WTF::KeyValuePair.1568"*, %"struct.WTF::KeyValuePair.1568"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.1568"*, %"struct.WTF::KeyValuePair.1568"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair.1568"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !11
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %25, i64 %28, i8* %29) #13
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorAgentState::Field"*) local_unnamed_addr #2

declare void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1568"*, %"struct.WTF::KeyValuePair.1568"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.1565"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1565", %"class.WTF::HashTable.1565"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1568"*, %"struct.WTF::KeyValuePair.1568"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1568"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.1565", %"class.WTF::HashTable.1565"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.1568"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.1568"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.1568"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.1568"*, %"struct.WTF::KeyValuePair.1568"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.1565", %"class.WTF::HashTable.1565"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.1568"*, %"struct.WTF::KeyValuePair.1568"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1568", %"struct.WTF::KeyValuePair.1568"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.1568"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.1568"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1568"*, %"struct.WTF::KeyValuePair.1568"* } undef, %"struct.WTF::KeyValuePair.1568"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.1568"*, %"struct.WTF::KeyValuePair.1568"* } %77, %"struct.WTF::KeyValuePair.1568"* %76, 1
  ret { %"struct.WTF::KeyValuePair.1568"*, %"struct.WTF::KeyValuePair.1568"* } %78
}

declare void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17InspectorDOMAgentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZNK5blink17InspectorDOMAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorDOMAgent"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink17InspectorDOMAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.1667"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #13
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.1667"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #13
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #13
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CoreProbeSink"*
  tail call void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #13
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #13
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #13
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %33
  tail call void @llvm.trap() #13
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #13
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #13
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #13
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %31, i8* %32) #13
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #13
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #13
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %46, i8* %47) #13
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #13
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  ret i32 %24
}

declare void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext, %"class.blink::WebVector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1669"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1672"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.1672"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.1672"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.1672"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.1672"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.1672"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } undef, %"struct.WTF::KeyValuePair.1672"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } %77, %"struct.WTF::KeyValuePair.1672"* %76, 1
  ret { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1672"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.1669"*, %"class.WTF::String"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1672"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1672"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1669"* %0, %"struct.WTF::KeyValuePair.1672"* null)
  %9 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1672"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.1672"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.1672"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.1672"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #13
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.1672"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.1672"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.1672"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #13
  %72 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.1672"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #13
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #13
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.1672"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #13
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %79, i64 0, i32 1
  %120 = load i8, i8* %2, align 1, !range !11
  store i8 %120, i8* %119, align 1
  %121 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair.1672"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1669"* %0, %"struct.WTF::KeyValuePair.1672"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair.1672"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair.1672"*, i8 } undef, %"struct.WTF::KeyValuePair.1672"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair.1672"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair.1672"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.1669"*, %"struct.WTF::KeyValuePair.1672"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"struct.WTF::KeyValuePair.1672"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, 1
  %24 = and i32 %23, 2147483647
  %25 = and i32 %22, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %21, align 8
  %27 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  store i32 %29, i32* %27, align 4
  %30 = mul i32 %29, 6
  %31 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %30, %32
  %34 = icmp ugt i32 %32, 8
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %43

36:                                               ; preds = %19
  %37 = lshr i32 %32, 1
  %38 = zext i32 %37 to i64
  %39 = shl nuw nsw i64 %38, 4
  %40 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %39, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEbEEEEPKcv, i64 0, i64 0)) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 0, i64 %39, i1 false) #13
  %41 = bitcast i8* %40 to %"struct.WTF::KeyValuePair.1672"*
  %42 = tail call %"struct.WTF::KeyValuePair.1672"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.1669"* %0, %"struct.WTF::KeyValuePair.1672"* %41, i32 %37, %"struct.WTF::KeyValuePair.1672"* null) #13
  br label %43

43:                                               ; preds = %36, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.1665"*, %"struct.WTF::KeyValuePair.1667"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.WTF::KeyValuePair.1667"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %1, i64 0, i32 1
  store i32 0, i32* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, 1
  %8 = and i32 %7, 2147483647
  %9 = and i32 %6, -2147483648
  %10 = or i32 %8, %9
  store i32 %10, i32* %5, align 8
  %11 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -1
  store i32 %13, i32* %11, align 4
  %14 = mul i32 %13, 6
  %15 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp ult i32 %14, %16
  %18 = icmp ugt i32 %16, 8
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %49

20:                                               ; preds = %2
  %21 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %22 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %21, i64 0, i32 1
  %23 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %22) #13
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27, !prof !3

25:                                               ; preds = %20
  %26 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %22, i8* %26) #13
  br label %27

27:                                               ; preds = %25, %20
  %28 = phi i8* [ %26, %25 ], [ %23, %20 ]
  %29 = bitcast i8* %28 to %"class.blink::ThreadState"**
  %30 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 6
  %32 = load i8, i8* %31, align 8, !range !11
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 16
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %49, label %38

38:                                               ; preds = %27, %34
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 13
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %38
  %43 = load i32, i32* %15, align 8
  %44 = lshr i32 %43, 1
  %45 = zext i32 %44 to i64
  %46 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %45) #13
  %47 = bitcast %"class.blink::HeapHashTableBacking"* %46 to %"struct.WTF::KeyValuePair.1667"*
  %48 = tail call %"struct.WTF::KeyValuePair.1667"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.1665"* %0, %"struct.WTF::KeyValuePair.1667"* %47, i32 %44, %"struct.WTF::KeyValuePair.1667"* null) #13
  br label %49

49:                                               ; preds = %34, %2, %42, %38
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1667"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.1665"*, i32, %"struct.WTF::KeyValuePair.1667"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !11
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i64 0, i64 0)) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.1667"* %32, null
  br i1 %33, label %78, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.1667"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #13
  br i1 %38, label %39, label %78

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #13
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.1667"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %75, %39
  %48 = phi %"struct.WTF::KeyValuePair.1667"* [ null, %39 ], [ %65, %75 ]
  %49 = bitcast %"class.WTF::HashTable.1665"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #13
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.1667"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.1667"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.1665"* %0, %"struct.WTF::KeyValuePair.1667"* %42, i32 %1, %"struct.WTF::KeyValuePair.1667"* %48)
  br label %78

58:                                               ; preds = %39, %75
  %59 = phi i64 [ %76, %75 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.1667"* [ %65, %75 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.1667"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.1667"* %64, %"struct.WTF::KeyValuePair.1667"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.1667"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.1667"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.1667"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %61, i64 %59, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  br label %75

75:                                               ; preds = %68, %70
  %76 = add nuw nsw i64 %59, 1
  %77 = icmp eq i64 %76, %43
  br i1 %77, label %47, label %58

78:                                               ; preds = %34, %30, %55
  %79 = phi %"struct.WTF::KeyValuePair.1667"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.1667"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1667"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.1665"*, %"struct.WTF::KeyValuePair.1667"*, i32, %"struct.WTF::KeyValuePair.1667"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1665", align 8
  %6 = bitcast %"class.WTF::HashTable.1665"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1665"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1667"* %1, %"struct.WTF::KeyValuePair.1667"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.1667"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.1667"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %19, align 8
  br label %57

21:                                               ; preds = %80
  %22 = bitcast %"class.WTF::HashTable.1665"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %81, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.1667"* [ null, %15 ], [ %83, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.1665"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #13
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.1665"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.1665"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #13
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #13
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.1667"* %29

57:                                               ; preds = %18, %80
  %58 = phi i32 [ %13, %18 ], [ %81, %80 ]
  %59 = phi %"struct.WTF::KeyValuePair.1667"* [ %20, %18 ], [ %82, %80 ]
  %60 = phi %"struct.WTF::KeyValuePair.1667"* [ null, %18 ], [ %83, %80 ]
  %61 = phi i32 [ 0, %18 ], [ %84, %80 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.1667"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %80
    i64 0, label %80
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.1667"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.1665"* nonnull %5, %"class.blink::Member"* dereferenceable(8) %67) #13
  %69 = extractvalue { %"struct.WTF::KeyValuePair.1667"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.1667"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %59, i64 %62, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %19, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %75, i64 %62
  %77 = icmp eq %"struct.WTF::KeyValuePair.1667"* %76, %3
  %78 = select i1 %77, %"struct.WTF::KeyValuePair.1667"* %69, %"struct.WTF::KeyValuePair.1667"* %60
  %79 = load i32, i32* %12, align 8
  br label %80

80:                                               ; preds = %57, %57, %66
  %81 = phi i32 [ %58, %57 ], [ %79, %66 ], [ %58, %57 ]
  %82 = phi %"struct.WTF::KeyValuePair.1667"* [ %59, %57 ], [ %75, %66 ], [ %59, %57 ]
  %83 = phi %"struct.WTF::KeyValuePair.1667"* [ %60, %57 ], [ %78, %66 ], [ %60, %57 ]
  %84 = add i32 %61, 1
  %85 = icmp eq i32 %84, %81
  br i1 %85, label %21, label %57
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.33, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #13
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 5
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #13
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0), i8* %34, i8* %35) #13
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.35, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #13
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !3

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #13
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1667"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.1665"*, %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.1667"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Node"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.1667"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.1667"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.1667"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.1667"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1667"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Node"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Node"* %63, inttoptr (i64 -1 to %"class.blink::Node"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.1667"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.1667"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.1667"*, i8 } undef, %"struct.WTF::KeyValuePair.1667"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.1667"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.1667"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.1665"*, %"class.blink::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::Node"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1667"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %56 = icmp eq %"class.blink::Node"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %65 = icmp eq %"class.blink::Node"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.1667"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.1667"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.1667"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.1667"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"* } undef, %"struct.WTF::KeyValuePair.1667"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"* } %78, %"struct.WTF::KeyValuePair.1667"* %77, 1
  ret { %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"* } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.37, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.38, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %6 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %10 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %9, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi i32 [ %6, %1 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %5, i64 0, i32 19, i64 4
  %14 = bitcast %"class.blink::BaseArena"** %13 to %"class.blink::NormalPageArena"**
  %15 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %14, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %19 = icmp ult i64 %0, -8
  br i1 %19, label %20, label %21

20:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  store i8* null, i8** %17, align 8
  br label %31

21:                                               ; preds = %11
  %22 = add nsw i64 %0, 8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %22) #13
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0), i8* %23, i8* %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  store i8* %26, i8** %17, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.35, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %31

31:                                               ; preds = %20, %21, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  %32 = add i64 %0, 15
  %33 = and i64 %32, -8
  %34 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %15, i64 0, i32 4
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, %33
  br i1 %36, label %69, label %37, !prof !3

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %15, i64 0, i32 3
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %33
  store i8* %40, i8** %38, align 8
  %41 = sub i64 %35, %33
  store i64 %41, i64* %34, align 8
  %42 = bitcast i8* %39 to i32*
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %39, i64 4
  %44 = bitcast i8* %43 to i16*
  %45 = trunc i32 %12 to i16
  %46 = shl i16 %45, 2
  store atomic i16 %46, i16* %44 monotonic, align 2
  %47 = lshr exact i64 %33, 1
  %48 = trunc i64 %47 to i16
  %49 = getelementptr inbounds i8, i8* %39, i64 6
  %50 = bitcast i8* %49 to i16*
  store i16 %48, i16* %50, align 2
  %51 = ptrtoint i8* %39 to i64
  %52 = and i64 %51, -131072
  %53 = inttoptr i64 %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 4400
  %55 = bitcast i8* %54 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %56 = bitcast i8* %54 to i64*
  %57 = load i64, i64* %56, align 16
  %58 = sub i64 %51, %57
  %59 = lshr i64 %58, 3
  %60 = lshr i64 %58, 6
  %61 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %55, i64 0, i32 0, i32 1, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = trunc i64 %59 to i32
  %64 = and i32 %63, 7
  %65 = shl i32 1, %64
  %66 = trunc i32 %65 to i8
  %67 = or i8 %62, %66
  store atomic i8 %67, i8* %61 release, align 1
  %68 = getelementptr inbounds i8, i8* %39, i64 8
  br label %72

69:                                               ; preds = %31
  %70 = zext i32 %12 to i64
  %71 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %15, i64 %33, i64 %70) #13
  br label %72

72:                                               ; preds = %37, %69
  %73 = phi i8* [ %68, %37 ], [ %71, %69 ]
  ret i8* %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #13
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2000"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2000", %"class.WTF::Vector.2000"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.28, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2000", %"class.WTF::Vector.2000"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2000"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2000", %"class.WTF::Vector.2000"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2000", %"class.WTF::Vector.2000"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2000"* %0, i32 %14) #13
  %15 = getelementptr inbounds %"class.WTF::Vector.2000", %"class.WTF::Vector.2000"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::Node"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #13
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2000"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2000", %"class.WTF::Vector.2000"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2000", %"class.WTF::Vector.2000"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2000"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !11
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.28, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2000"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2000"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2000"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2000", %"class.WTF::Vector.2000"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2000"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2000", %"class.WTF::Vector.2000"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #13
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %14) #13
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #13
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2000", %"class.WTF::Vector.2000"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2000", %"class.WTF::Vector.2000"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2000"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #13
  %33 = bitcast %"class.WTF::Vector.2000"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #13
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #13
  %42 = bitcast %"class.WTF::Vector.2000"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2000", %"class.WTF::Vector.2000"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2095"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2196", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2196"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2196", %"class.WTF::StringTypeAdapter.2196"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2095", %"class.WTF::StringAppend.2095"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2196"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2196"* nonnull %4, i8* %13) #13
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2095", %"class.WTF::StringAppend.2095"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %45, i8* %46) #13
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1667"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_jEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.1665"*, %"class.blink::Node"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1667"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1667"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1665"* %0, %"struct.WTF::KeyValuePair.1667"* null)
  %9 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1667"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Node"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.1667"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.1667"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %147, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.1667"* %60, %"struct.WTF::KeyValuePair.1667"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.1667"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.1667"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #13
  %80 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::Node"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.1667"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::Node"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.1667"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::Node"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #13
  br label %97

97:                                               ; preds = %87, %94
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %89, i64 0, i32 1
  %99 = load i32, i32* %2, align 4
  store i32 %99, i32* %98, align 4
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %135, label %102

102:                                              ; preds = %97
  %103 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %104 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %103, i64 0, i32 1
  %105 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %104) #13
  %106 = icmp eq i8* %105, null
  br i1 %106, label %107, label %109, !prof !3

107:                                              ; preds = %102
  %108 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %104, i8* %108) #13
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i8* [ %108, %107 ], [ %105, %102 ]
  %111 = bitcast i8* %110 to %"class.blink::ThreadState"**
  %112 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 9
  %114 = load i8, i8* %113, align 1, !range !11
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %135, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 13
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %120, align 8
  %122 = load atomic i64, i64* %91 monotonic, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %121, i64 0, i32 0, i32 0
  %126 = inttoptr i64 %122 to i8*
  %127 = bitcast %"class.blink::MarkingVisitor"* %121 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %128 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, i64 5
  %130 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %129, align 8
  tail call void %130(%"class.blink::Visitor"* %125, i8* nonnull %126, i8* %126, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #13
  %131 = load i64, i64* %117, align 8
  br label %132

132:                                              ; preds = %124, %116
  %133 = phi i64 [ %119, %116 ], [ %131, %124 ]
  %134 = add i64 %133, -1
  store i64 %134, i64* %117, align 8
  br label %135

135:                                              ; preds = %97, %109, %132
  %136 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, %138
  %142 = shl i32 %141, 1
  %143 = load i32, i32* %12, align 8
  %144 = icmp ult i32 %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %135
  %146 = tail call %"struct.WTF::KeyValuePair.1667"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1665"* %0, %"struct.WTF::KeyValuePair.1667"* %89)
  br label %147

147:                                              ; preds = %58, %135, %145
  %148 = phi i8 [ 1, %135 ], [ 1, %145 ], [ 0, %58 ]
  %149 = phi %"struct.WTF::KeyValuePair.1667"* [ %89, %135 ], [ %146, %145 ], [ %60, %58 ]
  %150 = insertvalue { %"struct.WTF::KeyValuePair.1667"*, i8 } undef, %"struct.WTF::KeyValuePair.1667"* %149, 0
  %151 = insertvalue { %"struct.WTF::KeyValuePair.1667"*, i8 } %150, i8 %148, 1
  ret { %"struct.WTF::KeyValuePair.1667"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1667"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1665"*, %"struct.WTF::KeyValuePair.1667"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #13
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %23, i8* %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.1667"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.1665"* %0, i32 %35, %"struct.WTF::KeyValuePair.1667"* %1, i8* nonnull dereferenceable(1) %4) #13
  %37 = load i8, i8* %4, align 1, !range !11
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #13
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.1667"*
  %44 = call %"struct.WTF::KeyValuePair.1667"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.1665"* %0, %"struct.WTF::KeyValuePair.1667"* %43, i32 %40, %"struct.WTF::KeyValuePair.1667"* %1) #13
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.1667"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.1667"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1667"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.1665"*, %"class.blink::Node"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1667"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1667"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1665"* %0, %"struct.WTF::KeyValuePair.1667"* null)
  %9 = load %"struct.WTF::KeyValuePair.1667"*, %"struct.WTF::KeyValuePair.1667"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1667"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Node"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.1667"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.1667"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %147, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.1667"* %60, %"struct.WTF::KeyValuePair.1667"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.1667"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.1667"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #13
  %80 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::Node"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.1667"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::Node"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.1667"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::Node"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #13
  br label %97

97:                                               ; preds = %87, %94
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.1667", %"struct.WTF::KeyValuePair.1667"* %89, i64 0, i32 1
  %99 = load i32, i32* %2, align 4
  store i32 %99, i32* %98, align 4
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %135, label %102

102:                                              ; preds = %97
  %103 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %104 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %103, i64 0, i32 1
  %105 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %104) #13
  %106 = icmp eq i8* %105, null
  br i1 %106, label %107, label %109, !prof !3

107:                                              ; preds = %102
  %108 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %104, i8* %108) #13
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i8* [ %108, %107 ], [ %105, %102 ]
  %111 = bitcast i8* %110 to %"class.blink::ThreadState"**
  %112 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 9
  %114 = load i8, i8* %113, align 1, !range !11
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %135, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 13
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %120, align 8
  %122 = load atomic i64, i64* %91 monotonic, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %121, i64 0, i32 0, i32 0
  %126 = inttoptr i64 %122 to i8*
  %127 = bitcast %"class.blink::MarkingVisitor"* %121 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %128 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, i64 5
  %130 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %129, align 8
  tail call void %130(%"class.blink::Visitor"* %125, i8* nonnull %126, i8* %126, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #13
  %131 = load i64, i64* %117, align 8
  br label %132

132:                                              ; preds = %124, %116
  %133 = phi i64 [ %119, %116 ], [ %131, %124 ]
  %134 = add i64 %133, -1
  store i64 %134, i64* %117, align 8
  br label %135

135:                                              ; preds = %97, %109, %132
  %136 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = getelementptr inbounds %"class.WTF::HashTable.1665", %"class.WTF::HashTable.1665"* %0, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, %138
  %142 = shl i32 %141, 1
  %143 = load i32, i32* %12, align 8
  %144 = icmp ult i32 %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %135
  %146 = tail call %"struct.WTF::KeyValuePair.1667"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1665"* %0, %"struct.WTF::KeyValuePair.1667"* %89)
  br label %147

147:                                              ; preds = %58, %135, %145
  %148 = phi i8 [ 1, %135 ], [ 1, %145 ], [ 0, %58 ]
  %149 = phi %"struct.WTF::KeyValuePair.1667"* [ %89, %135 ], [ %146, %145 ], [ %60, %58 ]
  %150 = insertvalue { %"struct.WTF::KeyValuePair.1667"*, i8 } undef, %"struct.WTF::KeyValuePair.1667"* %149, 0
  %151 = insertvalue { %"struct.WTF::KeyValuePair.1667"*, i8 } %150, i8 %148, 1
  ret { %"struct.WTF::KeyValuePair.1667"*, i8 } %151
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol11DOMDebugger13EventListenerENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2021"*, %"class.std::__1::unique_ptr.2023"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2021", %"class.std::__1::vector.2021"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.2023"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2021"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2021"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2021", %"class.std::__1::vector.2021"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.2023"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.2023"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.2023"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.2023"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.2023"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.2023"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.2023"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2021", %"class.std::__1::vector.2021"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.2023"*, %"class.std::__1::unique_ptr.2023"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.2023"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.2023"*, %"class.std::__1::unique_ptr.2023"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.2023"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::DOMDebugger::EventListener"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.2023"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.2023"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.2023"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.2023"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !12

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.2023"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.2023"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.2023"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.2023"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.2023"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.2023"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2023"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2023"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2023"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.2023"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2023"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.2023"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.2023"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2023"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2023"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.2023"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.2023"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.2023"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.2023"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.2023"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.2023"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.2023"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.2023"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.2023"*, %"class.std::__1::unique_ptr.2023"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.2023"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.2023"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.2023"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.2023"*
  %138 = icmp eq %"class.std::__1::unique_ptr.2023"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.2023"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.2023", %"class.std::__1::unique_ptr.2023"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::DOMDebugger::EventListener"*, %"class.blink::protocol::DOMDebugger::EventListener"** %142, align 8
  store %"class.blink::protocol::DOMDebugger::EventListener"* null, %"class.blink::protocol::DOMDebugger::EventListener"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::DOMDebugger::EventListener"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::DOMDebugger::EventListener"* %143 to void (%"class.blink::protocol::DOMDebugger::EventListener"*)***
  %147 = load void (%"class.blink::protocol::DOMDebugger::EventListener"*)**, void (%"class.blink::protocol::DOMDebugger::EventListener"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::DOMDebugger::EventListener"*)*, void (%"class.blink::protocol::DOMDebugger::EventListener"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::DOMDebugger::EventListener"*)*, void (%"class.blink::protocol::DOMDebugger::EventListener"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::DOMDebugger::EventListener"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.2023"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1669"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1672"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.1672"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.1672"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.1672"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.1669", %"class.WTF::HashTable.1669"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1672", %"struct.WTF::KeyValuePair.1672"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.1672"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.1672"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } undef, %"struct.WTF::KeyValuePair.1672"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } %77, %"struct.WTF::KeyValuePair.1672"* %76, 1
  ret { %"struct.WTF::KeyValuePair.1672"*, %"struct.WTF::KeyValuePair.1672"* } %78
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.453"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.453", %"class.WTF::Vector.453"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.453", %"class.WTF::Vector.453"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.453", %"class.WTF::Vector.453"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.453"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.453"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.453"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.453", %"class.WTF::Vector.453"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.453"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.453"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.453"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #13
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %113
  tail call void @llvm.trap() #13
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.31, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare void @_ZN5blink8protocol11DOMDebugger10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.blink::protocol::DOMDebugger::Backend"*) local_unnamed_addr #2

declare void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorSessionState"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5, !7, !9}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPN5blink4NodeEEJEEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPN5blink4NodeEEJEEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base13BindRepeatingIRPFbPN5blink4NodeEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!8 = distinct !{!8, !"_ZN4base13BindRepeatingIRPFbPN5blink4NodeEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!9 = distinct !{!9, !10, !"_ZN3WTF13BindRepeatingIPFbPN5blink4NodeEEJES4_EEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTF13BindRepeatingIPFbPN5blink4NodeEEJES4_EEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!11 = !{i8 0, i8 2}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
