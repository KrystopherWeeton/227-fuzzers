; ModuleID = '../../chrome/browser/memory_details.cc'
source_filename = "../../chrome/browser/memory_details.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%struct.ProcessMemoryInformation = type { i32, %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", i32, i32, i32, i32, i32, %"class.std::__1::vector", i64 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::basic_string.1"* }
%struct.ProcessData = type { %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::vector.15" }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %struct.ProcessMemoryInformation* }
%class.MemoryDetails = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.std::__1::vector.23" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %struct.ProcessData*, %struct.ProcessData*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %struct.ProcessData* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.5 }
%struct.anon.5 = type { %"struct.std::__1::__padding.6", i8 }
%"struct.std::__1::__padding.6" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.31 }
%class.scoped_refptr.31 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.32", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.32" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.30" }>
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.content::BrowserTaskTraits" = type { %"class.base::TaskTraits" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.30", [4 x i8] }>
%"class.content::BrowserChildProcessHostIterator" = type { i8, i32, %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"struct.content::ChildProcessData" = type <{ i32, [4 x i8], %"class.std::__1::basic_string.1", %"class.std::__1::basic_string", i32, i32, %"class.base::Process", [4 x i8] }>
%"class.base::Process" = type { i32 }
%"struct.std::__1::__less.251" = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i64 }
%"class.std::__1::set.97" = type { %"class.std::__1::__tree.98" }
%"class.std::__1::__tree.98" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.135" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %class.GURL* }
%"class.base::OnceCallback.201" = type { %"class.base::internal::CallbackBase" }
%"class.content::RenderWidgetHostIterator" = type { i32 (...)** }
%"class.content::RenderWidgetHost" = type { i32 (...)** }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.264" }
%"struct.std::__1::pair.264" = type { i32, %"class.std::__1::vector.57" }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.content::RenderWidgetHost"**, %"class.content::RenderWidgetHost"**, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.content::RenderWidgetHost"** }
%"class.content::RenderProcessHost" = type <{ %"class.IPC::Sender", %"class.IPC::Listener", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.IPC::Sender" = type { i32 (...)** }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.46", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.46" = type { %"class.std::__1::__tree.47" }
%"class.std::__1::__tree.47" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::__tree_node.278" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.memory_instrumentation::MemoryInstrumentation" = type { %"class.mojo::SharedRemote" }
%"class.mojo::SharedRemote" = type { %class.scoped_refptr.200 }
%class.scoped_refptr.200 = type { %"class.mojo::SharedRemoteBase"* }
%"class.mojo::SharedRemoteBase" = type { %"class.base::RefCountedThreadSafe.237", %class.scoped_refptr.238, %"class.std::__1::unique_ptr.239" }
%"class.base::RefCountedThreadSafe.237" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.238 = type { %"class.mojo::SharedRemoteBase<mojo::Remote<memory_instrumentation::mojom::Coordinator> >::RemoteWrapper"* }
%"class.mojo::SharedRemoteBase<mojo::Remote<memory_instrumentation::mojom::Coordinator> >::RemoteWrapper" = type opaque
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.mojo::ThreadSafeForwarder"* }
%"class.mojo::ThreadSafeForwarder" = type { %"class.mojo::internal::ThreadSafeForwarderBase", %"class.memory_instrumentation::mojom::CoordinatorProxy" }
%"class.mojo::internal::ThreadSafeForwarderBase" = type { %"class.mojo::MessageReceiverWithResponder", %class.scoped_refptr.245 }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%class.scoped_refptr.245 = type { %"class.mojo::ThreadSafeProxy"* }
%"class.mojo::ThreadSafeProxy" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.246", [4 x i8] }>
%"class.base::RefCountedThreadSafe.246" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.memory_instrumentation::mojom::CoordinatorProxy" = type { %"class.memory_instrumentation::mojom::Coordinator", %"class.mojo::MessageReceiverWithResponder"* }
%"class.memory_instrumentation::mojom::Coordinator" = type { i32 (...)** }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr.64" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.extensions::ExtensionRegistry" = type { %class.KeyedService, %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.base::ObserverList", %"class.content::BrowserContext"* }
%class.KeyedService = type { i32 (...)** }
%"class.extensions::ExtensionSet" = type { %"class.std::__1::map.70" }
%"class.std::__1::map.70" = type { %"class.std::__1::__tree.71" }
%"class.std::__1::__tree.71" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.81", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.83" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.extensions::ProcessMap" = type <{ %class.KeyedService, %"class.std::__1::set", i8, [7 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.88" }
%"class.std::__1::__tree.88" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe.105", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::vector.128", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.148", %"class.std::__1::map.189", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe.105" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set.106" }
%"class.std::__1::set.106" = type { %"class.std::__1::__tree.107" }
%"class.std::__1::__tree.107" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.130" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.extensions::InstallWarning"* }
%"class.base::Version" = type { %"class.std::__1::vector.141" }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { i32*, i32*, %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { i32* }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.151", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.154" }
%"union.absl::variant_internal::DestructibleUnionImpl.154" = type { %"union.absl::variant_internal::DestructibleUnionImpl.155" }
%"union.absl::variant_internal::DestructibleUnionImpl.155" = type { %"union.absl::variant_internal::DestructibleUnionImpl.156" }
%"union.absl::variant_internal::DestructibleUnionImpl.156" = type { %"union.absl::variant_internal::DestructibleUnionImpl.157" }
%"union.absl::variant_internal::DestructibleUnionImpl.157" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map.189" = type { %"class.std::__1::__tree.190" }
%"class.std::__1::__tree.190" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.191", %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.content::ZygoteHost" = type { i32 (...)** }
%"class.content::RenderViewHost" = type { i32 (...)** }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.content::RenderFrameHost" = type { %"class.IPC::Listener", %"class.IPC::Sender" }
%"class.memory_instrumentation::GlobalMemoryDump" = type { %"class.std::__1::forward_list", %"class.memory_instrumentation::GlobalMemoryDump::AggregatedMetrics" }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.memory_instrumentation::GlobalMemoryDump::ProcessDump" }
%"class.memory_instrumentation::GlobalMemoryDump::ProcessDump" = type { %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.213" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.memory_instrumentation::mojom::ProcessMemoryDump"* }
%"class.memory_instrumentation::mojom::ProcessMemoryDump" = type { i32, %"class.mojo::StructPtr.216", %"class.base::flat_map.223", i32, %"class.absl::optional" }
%"class.mojo::StructPtr.216" = type { %"class.std::__1::unique_ptr.217" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.memory_instrumentation::mojom::OSMemDump"* }
%"class.memory_instrumentation::mojom::OSMemDump" = type { i32, i32, i8, i32, i32, i32 }
%"class.base::flat_map.223" = type { %"class.base::internal::flat_tree.224" }
%"class.base::internal::flat_tree.224" = type { %"class.std::__1::vector.225" }
%"class.std::__1::vector.225" = type { %"class.std::__1::__vector_base.226" }
%"class.std::__1::__vector_base.226" = type { %"struct.std::__1::pair.227"*, %"struct.std::__1::pair.227"*, %"class.std::__1::__compressed_pair.228" }
%"struct.std::__1::pair.227" = type opaque
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::pair.227"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.233 }
%union.anon.233 = type { %"class.std::__1::basic_string" }
%"class.memory_instrumentation::GlobalMemoryDump::AggregatedMetrics" = type { %"class.mojo::InlinedStructPtr" }
%"class.mojo::InlinedStructPtr" = type { %"class.memory_instrumentation::mojom::AggregatedMetrics", i32 }
%"class.memory_instrumentation::mojom::AggregatedMetrics" = type { i32, i32, i32 }
%"struct.std::__1::__split_buffer.254" = type { %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*, %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.std::__1::allocator.20"* }
%"class.std::__1::allocator.20" = type { i8 }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.memory_instrumentation::GlobalMemoryDump"* }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__113__vector_baseI24ProcessMemoryInformationNS_9allocatorIS1_EEE5clearEv = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorI24ProcessMemoryInformationNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__16vectorI24ProcessMemoryInformationNS_9allocatorIS1_EEE17__destruct_at_endEPS1_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM13MemoryDetailsFvvEJ13scoped_refptrIS3_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIM13MemoryDetailsFvvEJ13scoped_refptrIS2_EEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16__sortIRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEvT0_S6_T_ = comdat any

$_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_ = comdat any

$_ZNSt3__17__sort3IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_T_ = comdat any

$_ZNSt3__17__sort5IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_S6_S6_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEvT0_S6_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEbT0_S6_T_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZNSt3__16vectorI24ProcessMemoryInformationNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_ = comdat any

$_ZNSt3__114__split_bufferI24ProcessMemoryInformationRNS_9allocatorIS1_EEE17__destruct_at_endEPS1_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM13MemoryDetailsFvRKNSt3__16vectorI24ProcessMemoryInformationNS4_9allocatorIS6_EEEEEJ13scoped_refptrIS3_ES9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIM13MemoryDetailsFvRKNSt3__16vectorI24ProcessMemoryInformationNS3_9allocatorIS5_EEEEEJ13scoped_refptrIS2_ES8_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPN7content16RenderWidgetHostENS_9allocatorIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS6_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM13MemoryDetailsFvbNSt3__110unique_ptrIN22memory_instrumentation16GlobalMemoryDumpENS4_14default_deleteIS7_EEEEEJ13scoped_refptrIS3_EEEEFvbSA_EE7RunOnceEPNS0_13BindStateBaseEbOSA_ = comdat any

$_ZN4base8internal9BindStateIM13MemoryDetailsFvbNSt3__110unique_ptrIN22memory_instrumentation16GlobalMemoryDumpENS3_14default_deleteIS6_EEEEEJ13scoped_refptrIS2_EEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [4 x i8] c"Tab\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"Tab (Chrome)\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"Extension\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"Interstitial\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"Background App\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@_ZN8features16kProcessHostOnUIE = external global %"struct.base::Feature", align 8
@.ref.tmp = private constant { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 } { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 2, i8 1, i8 0, i8 0, i8 0, i8 0 }, align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"StartFetch\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"../../chrome/browser/memory_details.cc\00", align 1
@_ZTV13MemoryDetails = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.MemoryDetails*)* @_ZN13MemoryDetailsD2Ev to i8*), i8* bitcast (void (%class.MemoryDetails*)* @_ZN13MemoryDetailsD0Ev to i8*)] }, align 8
@.str.9 = private unnamed_addr constant [3 x i8] c" [\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c" %d MB\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c", %d FDs open of %d\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"CollectChildInfoOnProcessThread\00", align 1
@.ref.tmp.16 = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 0, i8 -128, i8 0, i8 1, i8 0, i8 0 }, align 1

@_ZN24ProcessMemoryInformationC1Ev = hidden unnamed_addr alias void (%struct.ProcessMemoryInformation*), void (%struct.ProcessMemoryInformation*)* @_ZN24ProcessMemoryInformationC2Ev
@_ZN24ProcessMemoryInformationC1ERKS_ = hidden unnamed_addr alias void (%struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*), void (%struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*)* @_ZN24ProcessMemoryInformationC2ERKS_
@_ZN24ProcessMemoryInformationD1Ev = hidden unnamed_addr alias void (%struct.ProcessMemoryInformation*), void (%struct.ProcessMemoryInformation*)* @_ZN24ProcessMemoryInformationD2Ev
@_ZN11ProcessDataC1Ev = hidden unnamed_addr alias void (%struct.ProcessData*), void (%struct.ProcessData*)* @_ZN11ProcessDataC2Ev
@_ZN11ProcessDataC1ERKS_ = hidden unnamed_addr alias void (%struct.ProcessData*, %struct.ProcessData*), void (%struct.ProcessData*, %struct.ProcessData*)* @_ZN11ProcessDataC2ERKS_
@_ZN11ProcessDataD1Ev = hidden unnamed_addr alias void (%struct.ProcessData*), void (%struct.ProcessData*)* @_ZN11ProcessDataD2Ev
@_ZN13MemoryDetailsD1Ev = hidden unnamed_addr alias void (%class.MemoryDetails*), void (%class.MemoryDetails*)* @_ZN13MemoryDetailsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24ProcessMemoryInformation28GetRendererTypeNameInEnglishENS_19RendererProcessTypeE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %34 [
    i32 1, label %3
    i32 2, label %8
    i32 3, label %13
    i32 4, label %18
    i32 5, label %24
    i32 6, label %29
  ]

3:                                                ; preds = %2
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 3, i8* %5, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #12
  %7 = getelementptr inbounds i8, i8* %6, i64 3
  store i8 0, i8* %7, align 1
  br label %39

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 12, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i1 false) #12
  %12 = getelementptr inbounds i8, i8* %11, i64 12
  store i8 0, i8* %12, align 4
  br label %39

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 9, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 9, i1 false) #12
  %17 = getelementptr inbounds i8, i8* %16, i64 9
  store i8 0, i8* %17, align 1
  br label %39

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 8, i8* %20, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  store i64 8317145136332432708, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast i64* %22 to i8*
  store i8 0, i8* %23, align 8
  br label %39

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 12, i8* %26, align 1
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i64 12, i1 false) #12
  %28 = getelementptr inbounds i8, i8* %27, i64 12
  store i8 0, i8* %28, align 4
  br label %39

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 14, i8* %31, align 1
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 14, i1 false) #12
  %33 = getelementptr inbounds i8, i8* %32, i64 14
  store i8 0, i8* %33, align 2
  br label %39

34:                                               ; preds = %2
  %35 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 7, i8* %36, align 1
  %37 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7, i1 false) #12
  %38 = getelementptr inbounds i8, i8* %37, i64 7
  store i8 0, i8* %38, align 1
  br label %39

39:                                               ; preds = %34, %29, %24, %18, %13, %8, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24ProcessMemoryInformation24GetFullTypeNameInEnglishEiNS_19RendererProcessTypeE(%"class.std::__1::basic_string"* noalias sret, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 3
  br i1 %4, label %5, label %42

5:                                                ; preds = %3
  switch i32 %2, label %37 [
    i32 1, label %6
    i32 2, label %11
    i32 3, label %16
    i32 4, label %21
    i32 5, label %27
    i32 6, label %32
  ]

6:                                                ; preds = %5
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 3, i8* %8, align 1, !alias.scope !2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #12
  %10 = getelementptr inbounds i8, i8* %9, i64 3
  store i8 0, i8* %10, align 1, !alias.scope !2
  br label %43

11:                                               ; preds = %5
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  store i8 12, i8* %13, align 1, !alias.scope !2
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i1 false) #12
  %15 = getelementptr inbounds i8, i8* %14, i64 12
  store i8 0, i8* %15, align 4, !alias.scope !2
  br label %43

16:                                               ; preds = %5
  %17 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  store i8 9, i8* %18, align 1, !alias.scope !2
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 9, i1 false) #12
  %20 = getelementptr inbounds i8, i8* %19, i64 9
  store i8 0, i8* %20, align 1, !alias.scope !2
  br label %43

21:                                               ; preds = %5
  %22 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 8, i8* %23, align 1, !alias.scope !2
  %24 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  store i64 8317145136332432708, i64* %24, align 8, !alias.scope !2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast i64* %25 to i8*
  store i8 0, i8* %26, align 8, !alias.scope !2
  br label %43

27:                                               ; preds = %5
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 12, i8* %29, align 1, !alias.scope !2
  %30 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i64 12, i1 false) #12
  %31 = getelementptr inbounds i8, i8* %30, i64 12
  store i8 0, i8* %31, align 4, !alias.scope !2
  br label %43

32:                                               ; preds = %5
  %33 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 14, i8* %34, align 1, !alias.scope !2
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 14, i1 false) #12
  %36 = getelementptr inbounds i8, i8* %35, i64 14
  store i8 0, i8* %36, align 2, !alias.scope !2
  br label %43

37:                                               ; preds = %5
  %38 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  store i8 7, i8* %39, align 1, !alias.scope !2
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7, i1 false) #12
  %41 = getelementptr inbounds i8, i8* %40, i64 7
  store i8 0, i8* %41, align 1, !alias.scope !2
  br label %43

42:                                               ; preds = %3
  tail call void @_ZN7content27GetProcessTypeNameInEnglishEi(%"class.std::__1::basic_string"* sret %0, i32 %1) #12
  br label %43

43:                                               ; preds = %37, %32, %27, %21, %16, %11, %6, %42
  ret void
}

declare void @_ZN7content27GetProcessTypeNameInEnglishEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24ProcessMemoryInformationC2Ev(%struct.ProcessMemoryInformation* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 4
  %5 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 52, i1 false)
  %6 = bitcast i32* %4 to <4 x i32>*
  store <4 x i32> <i32 1, i32 -1, i32 -1, i32 0>, <4 x i32>* %6, align 4
  %7 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 8
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24ProcessMemoryInformationC2ERKS_(%struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation* nocapture readonly dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 1
  %7 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string.1"* %6 to i8*
  %14 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #12
  br label %190

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = bitcast %"class.std::__1::basic_string.1"* %6 to i16*
  %23 = trunc i64 %19 to i8
  %24 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  store i8 %23, i8* %25, align 1
  br label %43

26:                                               ; preds = %15
  %27 = icmp ugt i64 %19, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::basic_string.1"* %6 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %29) #13
  unreachable

30:                                               ; preds = %26
  %31 = add nuw nsw i64 %19, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @abort() #13
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = tail call i8* @_Znwm(i64 %36) #14
  %38 = bitcast i8* %37 to i16*
  %39 = bitcast %"class.std::__1::basic_string.1"* %6 to i8**
  store i8* %37, i8** %39, align 8
  %40 = or i64 %32, -9223372036854775808
  %41 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %42, align 8
  br label %43

43:                                               ; preds = %35, %21
  %44 = phi i16* [ %22, %21 ], [ %38, %35 ]
  %45 = add nuw nsw i64 %19, 1
  %46 = add i64 %19, 1
  %47 = icmp ult i64 %46, 16
  br i1 %47, label %137, label %48

48:                                               ; preds = %43
  %49 = add i64 %19, 1
  %50 = getelementptr i16, i16* %44, i64 %49
  %51 = getelementptr i16, i16* %17, i64 %49
  %52 = icmp ult i16* %44, %51
  %53 = icmp ult i16* %17, %50
  %54 = and i1 %52, %53
  br i1 %54, label %137, label %55

55:                                               ; preds = %48
  %56 = and i64 %46, -16
  %57 = sub i64 %45, %56
  %58 = getelementptr i16, i16* %17, i64 %56
  %59 = getelementptr i16, i16* %44, i64 %56
  %60 = add i64 %56, -16
  %61 = lshr exact i64 %60, 4
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 48
  br i1 %64, label %116, label %65

65:                                               ; preds = %55
  %66 = sub nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %113, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %114, %67 ]
  %70 = getelementptr i16, i16* %17, i64 %68
  %71 = getelementptr i16, i16* %44, i64 %68
  %72 = bitcast i16* %70 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !5
  %74 = getelementptr i16, i16* %70, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !5
  %77 = bitcast i16* %71 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %77, align 2, !alias.scope !8, !noalias !5
  %78 = getelementptr i16, i16* %71, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %79, align 2, !alias.scope !8, !noalias !5
  %80 = or i64 %68, 16
  %81 = getelementptr i16, i16* %17, i64 %80
  %82 = getelementptr i16, i16* %44, i64 %80
  %83 = bitcast i16* %81 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !5
  %85 = getelementptr i16, i16* %81, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !5
  %88 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !8, !noalias !5
  %89 = getelementptr i16, i16* %82, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %90, align 2, !alias.scope !8, !noalias !5
  %91 = or i64 %68, 32
  %92 = getelementptr i16, i16* %17, i64 %91
  %93 = getelementptr i16, i16* %44, i64 %91
  %94 = bitcast i16* %92 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !5
  %96 = getelementptr i16, i16* %92, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !5
  %99 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !8, !noalias !5
  %100 = getelementptr i16, i16* %93, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !8, !noalias !5
  %102 = or i64 %68, 48
  %103 = getelementptr i16, i16* %17, i64 %102
  %104 = getelementptr i16, i16* %44, i64 %102
  %105 = bitcast i16* %103 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !5
  %107 = getelementptr i16, i16* %103, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !5
  %110 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !8, !noalias !5
  %111 = getelementptr i16, i16* %104, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !8, !noalias !5
  %113 = add i64 %68, 64
  %114 = add i64 %69, -4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %67, !llvm.loop !10

116:                                              ; preds = %67, %55
  %117 = phi i64 [ 0, %55 ], [ %113, %67 ]
  %118 = icmp eq i64 %63, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %132, %119 ], [ %117, %116 ]
  %121 = phi i64 [ %133, %119 ], [ %63, %116 ]
  %122 = getelementptr i16, i16* %17, i64 %120
  %123 = getelementptr i16, i16* %44, i64 %120
  %124 = bitcast i16* %122 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !5
  %126 = getelementptr i16, i16* %122, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !5
  %129 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !8, !noalias !5
  %130 = getelementptr i16, i16* %123, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !8, !noalias !5
  %132 = add i64 %120, 16
  %133 = add i64 %121, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %119, !llvm.loop !12

135:                                              ; preds = %119, %116
  %136 = icmp eq i64 %46, %56
  br i1 %136, label %190, label %137

137:                                              ; preds = %135, %48, %43
  %138 = phi i64 [ %45, %48 ], [ %45, %43 ], [ %57, %135 ]
  %139 = phi i16* [ %17, %48 ], [ %17, %43 ], [ %58, %135 ]
  %140 = phi i16* [ %44, %48 ], [ %44, %43 ], [ %59, %135 ]
  %141 = add i64 %138, -1
  %142 = and i64 %138, 7
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %137, %144
  %145 = phi i64 [ %150, %144 ], [ %138, %137 ]
  %146 = phi i16* [ %152, %144 ], [ %139, %137 ]
  %147 = phi i16* [ %151, %144 ], [ %140, %137 ]
  %148 = phi i64 [ %153, %144 ], [ %142, %137 ]
  %149 = load i16, i16* %146, align 2
  store i16 %149, i16* %147, align 2
  %150 = add i64 %145, -1
  %151 = getelementptr inbounds i16, i16* %147, i64 1
  %152 = getelementptr inbounds i16, i16* %146, i64 1
  %153 = add i64 %148, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %144, !llvm.loop !14

155:                                              ; preds = %144, %137
  %156 = phi i64 [ %138, %137 ], [ %150, %144 ]
  %157 = phi i16* [ %139, %137 ], [ %152, %144 ]
  %158 = phi i16* [ %140, %137 ], [ %151, %144 ]
  %159 = icmp ult i64 %141, 7
  br i1 %159, label %190, label %160

160:                                              ; preds = %155, %160
  %161 = phi i64 [ %186, %160 ], [ %156, %155 ]
  %162 = phi i16* [ %188, %160 ], [ %157, %155 ]
  %163 = phi i16* [ %187, %160 ], [ %158, %155 ]
  %164 = load i16, i16* %162, align 2
  store i16 %164, i16* %163, align 2
  %165 = getelementptr inbounds i16, i16* %163, i64 1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %163, i64 2
  %169 = getelementptr inbounds i16, i16* %162, i64 2
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %163, i64 3
  %172 = getelementptr inbounds i16, i16* %162, i64 3
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %163, i64 4
  %175 = getelementptr inbounds i16, i16* %162, i64 4
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %163, i64 5
  %178 = getelementptr inbounds i16, i16* %162, i64 5
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %163, i64 6
  %181 = getelementptr inbounds i16, i16* %162, i64 6
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %163, i64 7
  %184 = getelementptr inbounds i16, i16* %162, i64 7
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = add i64 %161, -8
  %187 = getelementptr inbounds i16, i16* %163, i64 8
  %188 = getelementptr inbounds i16, i16* %162, i64 8
  %189 = icmp eq i64 %186, 0
  br i1 %189, label %190, label %160, !llvm.loop !15

190:                                              ; preds = %155, %160, %135, %12
  %191 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 2
  %192 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 2
  %193 = bitcast %"class.std::__1::basic_string.1"* %192 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %193, i64 0, i32 1, i32 1
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %190
  %198 = bitcast %"class.std::__1::basic_string.1"* %191 to i8*
  %199 = bitcast %"class.std::__1::basic_string.1"* %192 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %198, i8* align 8 %199, i64 24, i1 false) #12
  br label %375

200:                                              ; preds = %190
  %201 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %192, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i16*, i16** %201, align 8
  %203 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %204 = load i64, i64* %203, align 8
  %205 = icmp ult i64 %204, 11
  br i1 %205, label %206, label %211

206:                                              ; preds = %200
  %207 = bitcast %"class.std::__1::basic_string.1"* %191 to i16*
  %208 = trunc i64 %204 to i8
  %209 = bitcast %"class.std::__1::basic_string.1"* %191 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %209, i64 0, i32 1, i32 1
  store i8 %208, i8* %210, align 1
  br label %228

211:                                              ; preds = %200
  %212 = icmp ugt i64 %204, 9223372036854775791
  br i1 %212, label %213, label %215

213:                                              ; preds = %211
  %214 = bitcast %"class.std::__1::basic_string.1"* %191 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %214) #13
  unreachable

215:                                              ; preds = %211
  %216 = add nuw nsw i64 %204, 8
  %217 = and i64 %216, -8
  %218 = icmp slt i64 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %215
  tail call void @abort() #13
  unreachable

220:                                              ; preds = %215
  %221 = shl i64 %217, 1
  %222 = tail call i8* @_Znwm(i64 %221) #14
  %223 = bitcast i8* %222 to i16*
  %224 = bitcast %"class.std::__1::basic_string.1"* %191 to i8**
  store i8* %222, i8** %224, align 8
  %225 = or i64 %217, -9223372036854775808
  %226 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %204, i64* %227, align 8
  br label %228

228:                                              ; preds = %220, %206
  %229 = phi i16* [ %207, %206 ], [ %223, %220 ]
  %230 = add nuw nsw i64 %204, 1
  %231 = add i64 %204, 1
  %232 = icmp ult i64 %231, 16
  br i1 %232, label %322, label %233

233:                                              ; preds = %228
  %234 = add i64 %204, 1
  %235 = getelementptr i16, i16* %229, i64 %234
  %236 = getelementptr i16, i16* %202, i64 %234
  %237 = icmp ult i16* %229, %236
  %238 = icmp ult i16* %202, %235
  %239 = and i1 %237, %238
  br i1 %239, label %322, label %240

240:                                              ; preds = %233
  %241 = and i64 %231, -16
  %242 = sub i64 %230, %241
  %243 = getelementptr i16, i16* %202, i64 %241
  %244 = getelementptr i16, i16* %229, i64 %241
  %245 = add i64 %241, -16
  %246 = lshr exact i64 %245, 4
  %247 = add nuw nsw i64 %246, 1
  %248 = and i64 %247, 3
  %249 = icmp ult i64 %245, 48
  br i1 %249, label %301, label %250

250:                                              ; preds = %240
  %251 = sub nsw i64 %247, %248
  br label %252

252:                                              ; preds = %252, %250
  %253 = phi i64 [ 0, %250 ], [ %298, %252 ]
  %254 = phi i64 [ %251, %250 ], [ %299, %252 ]
  %255 = getelementptr i16, i16* %202, i64 %253
  %256 = getelementptr i16, i16* %229, i64 %253
  %257 = bitcast i16* %255 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !16
  %259 = getelementptr i16, i16* %255, i64 8
  %260 = bitcast i16* %259 to <8 x i16>*
  %261 = load <8 x i16>, <8 x i16>* %260, align 2, !alias.scope !16
  %262 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %262, align 2, !alias.scope !19, !noalias !16
  %263 = getelementptr i16, i16* %256, i64 8
  %264 = bitcast i16* %263 to <8 x i16>*
  store <8 x i16> %261, <8 x i16>* %264, align 2, !alias.scope !19, !noalias !16
  %265 = or i64 %253, 16
  %266 = getelementptr i16, i16* %202, i64 %265
  %267 = getelementptr i16, i16* %229, i64 %265
  %268 = bitcast i16* %266 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !16
  %270 = getelementptr i16, i16* %266, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !16
  %273 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %273, align 2, !alias.scope !19, !noalias !16
  %274 = getelementptr i16, i16* %267, i64 8
  %275 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %272, <8 x i16>* %275, align 2, !alias.scope !19, !noalias !16
  %276 = or i64 %253, 32
  %277 = getelementptr i16, i16* %202, i64 %276
  %278 = getelementptr i16, i16* %229, i64 %276
  %279 = bitcast i16* %277 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !16
  %281 = getelementptr i16, i16* %277, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  %283 = load <8 x i16>, <8 x i16>* %282, align 2, !alias.scope !16
  %284 = bitcast i16* %278 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %284, align 2, !alias.scope !19, !noalias !16
  %285 = getelementptr i16, i16* %278, i64 8
  %286 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %283, <8 x i16>* %286, align 2, !alias.scope !19, !noalias !16
  %287 = or i64 %253, 48
  %288 = getelementptr i16, i16* %202, i64 %287
  %289 = getelementptr i16, i16* %229, i64 %287
  %290 = bitcast i16* %288 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !16
  %292 = getelementptr i16, i16* %288, i64 8
  %293 = bitcast i16* %292 to <8 x i16>*
  %294 = load <8 x i16>, <8 x i16>* %293, align 2, !alias.scope !16
  %295 = bitcast i16* %289 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %295, align 2, !alias.scope !19, !noalias !16
  %296 = getelementptr i16, i16* %289, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %294, <8 x i16>* %297, align 2, !alias.scope !19, !noalias !16
  %298 = add i64 %253, 64
  %299 = add i64 %254, -4
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %301, label %252, !llvm.loop !21

301:                                              ; preds = %252, %240
  %302 = phi i64 [ 0, %240 ], [ %298, %252 ]
  %303 = icmp eq i64 %248, 0
  br i1 %303, label %320, label %304

304:                                              ; preds = %301, %304
  %305 = phi i64 [ %317, %304 ], [ %302, %301 ]
  %306 = phi i64 [ %318, %304 ], [ %248, %301 ]
  %307 = getelementptr i16, i16* %202, i64 %305
  %308 = getelementptr i16, i16* %229, i64 %305
  %309 = bitcast i16* %307 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !16
  %311 = getelementptr i16, i16* %307, i64 8
  %312 = bitcast i16* %311 to <8 x i16>*
  %313 = load <8 x i16>, <8 x i16>* %312, align 2, !alias.scope !16
  %314 = bitcast i16* %308 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %314, align 2, !alias.scope !19, !noalias !16
  %315 = getelementptr i16, i16* %308, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %313, <8 x i16>* %316, align 2, !alias.scope !19, !noalias !16
  %317 = add i64 %305, 16
  %318 = add i64 %306, -1
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %304, !llvm.loop !22

320:                                              ; preds = %304, %301
  %321 = icmp eq i64 %231, %241
  br i1 %321, label %375, label %322

322:                                              ; preds = %320, %233, %228
  %323 = phi i64 [ %230, %233 ], [ %230, %228 ], [ %242, %320 ]
  %324 = phi i16* [ %202, %233 ], [ %202, %228 ], [ %243, %320 ]
  %325 = phi i16* [ %229, %233 ], [ %229, %228 ], [ %244, %320 ]
  %326 = add i64 %323, -1
  %327 = and i64 %323, 7
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %340, label %329

329:                                              ; preds = %322, %329
  %330 = phi i64 [ %335, %329 ], [ %323, %322 ]
  %331 = phi i16* [ %337, %329 ], [ %324, %322 ]
  %332 = phi i16* [ %336, %329 ], [ %325, %322 ]
  %333 = phi i64 [ %338, %329 ], [ %327, %322 ]
  %334 = load i16, i16* %331, align 2
  store i16 %334, i16* %332, align 2
  %335 = add i64 %330, -1
  %336 = getelementptr inbounds i16, i16* %332, i64 1
  %337 = getelementptr inbounds i16, i16* %331, i64 1
  %338 = add i64 %333, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %329, !llvm.loop !23

340:                                              ; preds = %329, %322
  %341 = phi i64 [ %323, %322 ], [ %335, %329 ]
  %342 = phi i16* [ %324, %322 ], [ %337, %329 ]
  %343 = phi i16* [ %325, %322 ], [ %336, %329 ]
  %344 = icmp ult i64 %326, 7
  br i1 %344, label %375, label %345

345:                                              ; preds = %340, %345
  %346 = phi i64 [ %371, %345 ], [ %341, %340 ]
  %347 = phi i16* [ %373, %345 ], [ %342, %340 ]
  %348 = phi i16* [ %372, %345 ], [ %343, %340 ]
  %349 = load i16, i16* %347, align 2
  store i16 %349, i16* %348, align 2
  %350 = getelementptr inbounds i16, i16* %348, i64 1
  %351 = getelementptr inbounds i16, i16* %347, i64 1
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %348, i64 2
  %354 = getelementptr inbounds i16, i16* %347, i64 2
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %348, i64 3
  %357 = getelementptr inbounds i16, i16* %347, i64 3
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %348, i64 4
  %360 = getelementptr inbounds i16, i16* %347, i64 4
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %348, i64 5
  %363 = getelementptr inbounds i16, i16* %347, i64 5
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %348, i64 6
  %366 = getelementptr inbounds i16, i16* %347, i64 6
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = getelementptr inbounds i16, i16* %348, i64 7
  %369 = getelementptr inbounds i16, i16* %347, i64 7
  %370 = load i16, i16* %369, align 2
  store i16 %370, i16* %368, align 2
  %371 = add i64 %346, -8
  %372 = getelementptr inbounds i16, i16* %348, i64 8
  %373 = getelementptr inbounds i16, i16* %347, i64 8
  %374 = icmp eq i64 %371, 0
  br i1 %374, label %375, label %345, !llvm.loop !24

375:                                              ; preds = %340, %345, %320, %197
  %376 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 3
  %377 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 3
  %378 = bitcast i32* %376 to i8*
  %379 = bitcast i32* %377 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %378, i8* align 8 %379, i64 20, i1 false)
  %380 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 8
  %381 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 8
  %382 = bitcast %"class.std::__1::vector"* %380 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %382, i8 0, i64 24, i1 false) #12
  %383 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 8, i32 0, i32 1
  %384 = bitcast %"class.std::__1::basic_string.1"** %383 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = bitcast %"class.std::__1::vector"* %381 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = sub i64 %385, %387
  %389 = sdiv exact i64 %388, 24
  %390 = icmp eq i64 %388, 0
  br i1 %390, label %605, label %391

391:                                              ; preds = %375
  %392 = icmp ugt i64 %389, 768614336404564650
  br i1 %392, label %393, label %395

393:                                              ; preds = %391
  %394 = bitcast %"class.std::__1::vector"* %380 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %394) #13
  unreachable

395:                                              ; preds = %391
  %396 = tail call i8* @_Znwm(i64 %388) #14
  %397 = bitcast i8* %396 to %"class.std::__1::basic_string.1"*
  %398 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 8, i32 0, i32 1
  %399 = bitcast %"class.std::__1::basic_string.1"** %398 to i8**
  store i8* %396, i8** %399, align 8
  %400 = bitcast %"class.std::__1::vector"* %380 to i8**
  store i8* %396, i8** %400, align 8
  %401 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %397, i64 %389
  %402 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string.1"* %401, %"class.std::__1::basic_string.1"** %402, align 8
  %403 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %381, i64 0, i32 0, i32 0
  %404 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %403, align 8
  %405 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %383, align 8
  %406 = bitcast %"class.std::__1::basic_string.1"** %398 to i64*
  %407 = ptrtoint i8* %396 to i64
  %408 = icmp eq %"class.std::__1::basic_string.1"* %404, %405
  br i1 %408, label %603, label %409

409:                                              ; preds = %395
  %410 = bitcast i8* %396 to %"class.std::__1::basic_string.1"*
  br label %411

411:                                              ; preds = %597, %409
  %412 = phi %"class.std::__1::basic_string.1"* [ %599, %597 ], [ %410, %409 ]
  %413 = phi %"class.std::__1::basic_string.1"* [ %598, %597 ], [ %404, %409 ]
  %414 = bitcast %"class.std::__1::basic_string.1"* %413 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %415 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %414, i64 0, i32 1, i32 1
  %416 = load i8, i8* %415, align 1
  %417 = icmp slt i8 %416, 0
  br i1 %417, label %421, label %418

418:                                              ; preds = %411
  %419 = bitcast %"class.std::__1::basic_string.1"* %412 to i8*
  %420 = bitcast %"class.std::__1::basic_string.1"* %413 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %419, i8* align 8 %420, i64 24, i1 false) #12
  br label %597

421:                                              ; preds = %411
  %422 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %413, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = load i16*, i16** %422, align 8
  %424 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %413, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %425 = load i64, i64* %424, align 8
  %426 = icmp ult i64 %425, 11
  br i1 %426, label %427, label %432

427:                                              ; preds = %421
  %428 = bitcast %"class.std::__1::basic_string.1"* %412 to i16*
  %429 = trunc i64 %425 to i8
  %430 = bitcast %"class.std::__1::basic_string.1"* %412 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %431 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %430, i64 0, i32 1, i32 1
  store i8 %429, i8* %431, align 1
  br label %449

432:                                              ; preds = %421
  %433 = icmp ugt i64 %425, 9223372036854775791
  br i1 %433, label %434, label %436

434:                                              ; preds = %432
  %435 = bitcast %"class.std::__1::basic_string.1"* %412 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %435) #13
  unreachable

436:                                              ; preds = %432
  %437 = add nuw nsw i64 %425, 8
  %438 = and i64 %437, -8
  %439 = icmp slt i64 %438, 0
  br i1 %439, label %440, label %441

440:                                              ; preds = %436
  tail call void @abort() #13
  unreachable

441:                                              ; preds = %436
  %442 = shl i64 %438, 1
  %443 = tail call i8* @_Znwm(i64 %442) #14
  %444 = bitcast i8* %443 to i16*
  %445 = bitcast %"class.std::__1::basic_string.1"* %412 to i8**
  store i8* %443, i8** %445, align 8
  %446 = or i64 %438, -9223372036854775808
  %447 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %412, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %446, i64* %447, align 8
  %448 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %412, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %425, i64* %448, align 8
  br label %449

449:                                              ; preds = %441, %427
  %450 = phi i16* [ %428, %427 ], [ %444, %441 ]
  %451 = add nuw nsw i64 %425, 1
  %452 = add i64 %425, 1
  %453 = icmp ult i64 %452, 16
  br i1 %453, label %544, label %454

454:                                              ; preds = %449
  %455 = getelementptr i16, i16* %450, i64 1
  %456 = getelementptr i16, i16* %455, i64 %425
  %457 = getelementptr i16, i16* %423, i64 1
  %458 = getelementptr i16, i16* %457, i64 %425
  %459 = icmp ult i16* %450, %458
  %460 = icmp ult i16* %423, %456
  %461 = and i1 %459, %460
  br i1 %461, label %544, label %462

462:                                              ; preds = %454
  %463 = and i64 %452, -16
  %464 = sub i64 %451, %463
  %465 = getelementptr i16, i16* %423, i64 %463
  %466 = getelementptr i16, i16* %450, i64 %463
  %467 = add i64 %463, -16
  %468 = lshr exact i64 %467, 4
  %469 = add nuw nsw i64 %468, 1
  %470 = and i64 %469, 3
  %471 = icmp ult i64 %467, 48
  br i1 %471, label %523, label %472

472:                                              ; preds = %462
  %473 = sub nsw i64 %469, %470
  br label %474

474:                                              ; preds = %474, %472
  %475 = phi i64 [ 0, %472 ], [ %520, %474 ]
  %476 = phi i64 [ %473, %472 ], [ %521, %474 ]
  %477 = getelementptr i16, i16* %423, i64 %475
  %478 = getelementptr i16, i16* %450, i64 %475
  %479 = bitcast i16* %477 to <8 x i16>*
  %480 = load <8 x i16>, <8 x i16>* %479, align 2, !alias.scope !25
  %481 = getelementptr i16, i16* %477, i64 8
  %482 = bitcast i16* %481 to <8 x i16>*
  %483 = load <8 x i16>, <8 x i16>* %482, align 2, !alias.scope !25
  %484 = bitcast i16* %478 to <8 x i16>*
  store <8 x i16> %480, <8 x i16>* %484, align 2, !alias.scope !28, !noalias !25
  %485 = getelementptr i16, i16* %478, i64 8
  %486 = bitcast i16* %485 to <8 x i16>*
  store <8 x i16> %483, <8 x i16>* %486, align 2, !alias.scope !28, !noalias !25
  %487 = or i64 %475, 16
  %488 = getelementptr i16, i16* %423, i64 %487
  %489 = getelementptr i16, i16* %450, i64 %487
  %490 = bitcast i16* %488 to <8 x i16>*
  %491 = load <8 x i16>, <8 x i16>* %490, align 2, !alias.scope !25
  %492 = getelementptr i16, i16* %488, i64 8
  %493 = bitcast i16* %492 to <8 x i16>*
  %494 = load <8 x i16>, <8 x i16>* %493, align 2, !alias.scope !25
  %495 = bitcast i16* %489 to <8 x i16>*
  store <8 x i16> %491, <8 x i16>* %495, align 2, !alias.scope !28, !noalias !25
  %496 = getelementptr i16, i16* %489, i64 8
  %497 = bitcast i16* %496 to <8 x i16>*
  store <8 x i16> %494, <8 x i16>* %497, align 2, !alias.scope !28, !noalias !25
  %498 = or i64 %475, 32
  %499 = getelementptr i16, i16* %423, i64 %498
  %500 = getelementptr i16, i16* %450, i64 %498
  %501 = bitcast i16* %499 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !25
  %503 = getelementptr i16, i16* %499, i64 8
  %504 = bitcast i16* %503 to <8 x i16>*
  %505 = load <8 x i16>, <8 x i16>* %504, align 2, !alias.scope !25
  %506 = bitcast i16* %500 to <8 x i16>*
  store <8 x i16> %502, <8 x i16>* %506, align 2, !alias.scope !28, !noalias !25
  %507 = getelementptr i16, i16* %500, i64 8
  %508 = bitcast i16* %507 to <8 x i16>*
  store <8 x i16> %505, <8 x i16>* %508, align 2, !alias.scope !28, !noalias !25
  %509 = or i64 %475, 48
  %510 = getelementptr i16, i16* %423, i64 %509
  %511 = getelementptr i16, i16* %450, i64 %509
  %512 = bitcast i16* %510 to <8 x i16>*
  %513 = load <8 x i16>, <8 x i16>* %512, align 2, !alias.scope !25
  %514 = getelementptr i16, i16* %510, i64 8
  %515 = bitcast i16* %514 to <8 x i16>*
  %516 = load <8 x i16>, <8 x i16>* %515, align 2, !alias.scope !25
  %517 = bitcast i16* %511 to <8 x i16>*
  store <8 x i16> %513, <8 x i16>* %517, align 2, !alias.scope !28, !noalias !25
  %518 = getelementptr i16, i16* %511, i64 8
  %519 = bitcast i16* %518 to <8 x i16>*
  store <8 x i16> %516, <8 x i16>* %519, align 2, !alias.scope !28, !noalias !25
  %520 = add i64 %475, 64
  %521 = add i64 %476, -4
  %522 = icmp eq i64 %521, 0
  br i1 %522, label %523, label %474, !llvm.loop !30

523:                                              ; preds = %474, %462
  %524 = phi i64 [ 0, %462 ], [ %520, %474 ]
  %525 = icmp eq i64 %470, 0
  br i1 %525, label %542, label %526

526:                                              ; preds = %523, %526
  %527 = phi i64 [ %539, %526 ], [ %524, %523 ]
  %528 = phi i64 [ %540, %526 ], [ %470, %523 ]
  %529 = getelementptr i16, i16* %423, i64 %527
  %530 = getelementptr i16, i16* %450, i64 %527
  %531 = bitcast i16* %529 to <8 x i16>*
  %532 = load <8 x i16>, <8 x i16>* %531, align 2, !alias.scope !25
  %533 = getelementptr i16, i16* %529, i64 8
  %534 = bitcast i16* %533 to <8 x i16>*
  %535 = load <8 x i16>, <8 x i16>* %534, align 2, !alias.scope !25
  %536 = bitcast i16* %530 to <8 x i16>*
  store <8 x i16> %532, <8 x i16>* %536, align 2, !alias.scope !28, !noalias !25
  %537 = getelementptr i16, i16* %530, i64 8
  %538 = bitcast i16* %537 to <8 x i16>*
  store <8 x i16> %535, <8 x i16>* %538, align 2, !alias.scope !28, !noalias !25
  %539 = add i64 %527, 16
  %540 = add i64 %528, -1
  %541 = icmp eq i64 %540, 0
  br i1 %541, label %542, label %526, !llvm.loop !31

542:                                              ; preds = %526, %523
  %543 = icmp eq i64 %452, %463
  br i1 %543, label %597, label %544

544:                                              ; preds = %542, %454, %449
  %545 = phi i64 [ %451, %454 ], [ %451, %449 ], [ %464, %542 ]
  %546 = phi i16* [ %423, %454 ], [ %423, %449 ], [ %465, %542 ]
  %547 = phi i16* [ %450, %454 ], [ %450, %449 ], [ %466, %542 ]
  %548 = add i64 %545, -1
  %549 = and i64 %545, 7
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %562, label %551

551:                                              ; preds = %544, %551
  %552 = phi i64 [ %557, %551 ], [ %545, %544 ]
  %553 = phi i16* [ %559, %551 ], [ %546, %544 ]
  %554 = phi i16* [ %558, %551 ], [ %547, %544 ]
  %555 = phi i64 [ %560, %551 ], [ %549, %544 ]
  %556 = load i16, i16* %553, align 2
  store i16 %556, i16* %554, align 2
  %557 = add i64 %552, -1
  %558 = getelementptr inbounds i16, i16* %554, i64 1
  %559 = getelementptr inbounds i16, i16* %553, i64 1
  %560 = add i64 %555, -1
  %561 = icmp eq i64 %560, 0
  br i1 %561, label %562, label %551, !llvm.loop !32

562:                                              ; preds = %551, %544
  %563 = phi i64 [ %545, %544 ], [ %557, %551 ]
  %564 = phi i16* [ %546, %544 ], [ %559, %551 ]
  %565 = phi i16* [ %547, %544 ], [ %558, %551 ]
  %566 = icmp ult i64 %548, 7
  br i1 %566, label %597, label %567

567:                                              ; preds = %562, %567
  %568 = phi i64 [ %593, %567 ], [ %563, %562 ]
  %569 = phi i16* [ %595, %567 ], [ %564, %562 ]
  %570 = phi i16* [ %594, %567 ], [ %565, %562 ]
  %571 = load i16, i16* %569, align 2
  store i16 %571, i16* %570, align 2
  %572 = getelementptr inbounds i16, i16* %570, i64 1
  %573 = getelementptr inbounds i16, i16* %569, i64 1
  %574 = load i16, i16* %573, align 2
  store i16 %574, i16* %572, align 2
  %575 = getelementptr inbounds i16, i16* %570, i64 2
  %576 = getelementptr inbounds i16, i16* %569, i64 2
  %577 = load i16, i16* %576, align 2
  store i16 %577, i16* %575, align 2
  %578 = getelementptr inbounds i16, i16* %570, i64 3
  %579 = getelementptr inbounds i16, i16* %569, i64 3
  %580 = load i16, i16* %579, align 2
  store i16 %580, i16* %578, align 2
  %581 = getelementptr inbounds i16, i16* %570, i64 4
  %582 = getelementptr inbounds i16, i16* %569, i64 4
  %583 = load i16, i16* %582, align 2
  store i16 %583, i16* %581, align 2
  %584 = getelementptr inbounds i16, i16* %570, i64 5
  %585 = getelementptr inbounds i16, i16* %569, i64 5
  %586 = load i16, i16* %585, align 2
  store i16 %586, i16* %584, align 2
  %587 = getelementptr inbounds i16, i16* %570, i64 6
  %588 = getelementptr inbounds i16, i16* %569, i64 6
  %589 = load i16, i16* %588, align 2
  store i16 %589, i16* %587, align 2
  %590 = getelementptr inbounds i16, i16* %570, i64 7
  %591 = getelementptr inbounds i16, i16* %569, i64 7
  %592 = load i16, i16* %591, align 2
  store i16 %592, i16* %590, align 2
  %593 = add i64 %568, -8
  %594 = getelementptr inbounds i16, i16* %570, i64 8
  %595 = getelementptr inbounds i16, i16* %569, i64 8
  %596 = icmp eq i64 %593, 0
  br i1 %596, label %597, label %567, !llvm.loop !33

597:                                              ; preds = %562, %567, %542, %418
  %598 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %413, i64 1
  %599 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %412, i64 1
  %600 = icmp eq %"class.std::__1::basic_string.1"* %598, %405
  br i1 %600, label %601, label %411

601:                                              ; preds = %597
  %602 = ptrtoint %"class.std::__1::basic_string.1"* %599 to i64
  br label %603

603:                                              ; preds = %395, %601
  %604 = phi i64 [ %407, %395 ], [ %602, %601 ]
  store i64 %604, i64* %406, align 8
  br label %605

605:                                              ; preds = %375, %603
  %606 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 9
  %607 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 9
  %608 = load i64, i64* %607, align 8
  store i64 %608, i64* %606, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24ProcessMemoryInformationD2Ev(%struct.ProcessMemoryInformation* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 8
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string.1"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  %8 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 8, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string.1"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string.1"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string.1"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = bitcast %"class.std::__1::basic_string.1"* %13 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string.1"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string.1"* %4, %"class.std::__1::basic_string.1"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #14
  br label %28

28:                                               ; preds = %1, %26
  %29 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string.1"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = bitcast %"class.std::__1::basic_string.1"* %29 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #14
  br label %37

37:                                               ; preds = %28, %34
  %38 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string.1"* %38 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = bitcast %"class.std::__1::basic_string.1"* %38 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #14
  br label %46

46:                                               ; preds = %37, %43
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK24ProcessMemoryInformationltERKS_(%struct.ProcessMemoryInformation* nocapture readonly, %struct.ProcessMemoryInformation* nocapture readonly dereferenceable(112)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 9
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 9
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %4, %6
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11ProcessDataC2Ev(%struct.ProcessData* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %struct.ProcessData* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11ProcessDataC2ERKS_(%struct.ProcessData*, %struct.ProcessData* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = bitcast %struct.ProcessData* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %struct.ProcessData* %0 to i8*
  %9 = bitcast %struct.ProcessData* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #12
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %struct.ProcessData* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %struct.ProcessData* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %struct.ProcessData* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #13
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #13
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %struct.ProcessData* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !34
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !34
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !37, !noalias !34
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !37, !noalias !34
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !34
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !34
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !37, !noalias !34
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !37, !noalias !34
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !34
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !34
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !37, !noalias !34
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !37, !noalias !34
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !34
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !34
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !37, !noalias !34
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !37, !noalias !34
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !39

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !34
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !34
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !37, !noalias !34
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !37, !noalias !34
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !40

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !41

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !42

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %0, i64 0, i32 1
  %187 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %1, i64 0, i32 1
  %188 = bitcast %"class.std::__1::basic_string.1"* %187 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %188, i64 0, i32 1, i32 1
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %185
  %193 = bitcast %"class.std::__1::basic_string.1"* %186 to i8*
  %194 = bitcast %"class.std::__1::basic_string.1"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 24, i1 false) #12
  br label %370

195:                                              ; preds = %185
  %196 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = icmp ult i64 %199, 11
  br i1 %200, label %201, label %206

201:                                              ; preds = %195
  %202 = bitcast %"class.std::__1::basic_string.1"* %186 to i16*
  %203 = trunc i64 %199 to i8
  %204 = bitcast %"class.std::__1::basic_string.1"* %186 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  store i8 %203, i8* %205, align 1
  br label %223

206:                                              ; preds = %195
  %207 = icmp ugt i64 %199, 9223372036854775791
  br i1 %207, label %208, label %210

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::basic_string.1"* %186 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %209) #13
  unreachable

210:                                              ; preds = %206
  %211 = add nuw nsw i64 %199, 8
  %212 = and i64 %211, -8
  %213 = icmp slt i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  tail call void @abort() #13
  unreachable

215:                                              ; preds = %210
  %216 = shl i64 %212, 1
  %217 = tail call i8* @_Znwm(i64 %216) #14
  %218 = bitcast i8* %217 to i16*
  %219 = bitcast %"class.std::__1::basic_string.1"* %186 to i8**
  store i8* %217, i8** %219, align 8
  %220 = or i64 %212, -9223372036854775808
  %221 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %199, i64* %222, align 8
  br label %223

223:                                              ; preds = %215, %201
  %224 = phi i16* [ %202, %201 ], [ %218, %215 ]
  %225 = add nuw nsw i64 %199, 1
  %226 = add i64 %199, 1
  %227 = icmp ult i64 %226, 16
  br i1 %227, label %317, label %228

228:                                              ; preds = %223
  %229 = add i64 %199, 1
  %230 = getelementptr i16, i16* %224, i64 %229
  %231 = getelementptr i16, i16* %197, i64 %229
  %232 = icmp ult i16* %224, %231
  %233 = icmp ult i16* %197, %230
  %234 = and i1 %232, %233
  br i1 %234, label %317, label %235

235:                                              ; preds = %228
  %236 = and i64 %226, -16
  %237 = sub i64 %225, %236
  %238 = getelementptr i16, i16* %197, i64 %236
  %239 = getelementptr i16, i16* %224, i64 %236
  %240 = add i64 %236, -16
  %241 = lshr exact i64 %240, 4
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp ult i64 %240, 48
  br i1 %244, label %296, label %245

245:                                              ; preds = %235
  %246 = sub nsw i64 %242, %243
  br label %247

247:                                              ; preds = %247, %245
  %248 = phi i64 [ 0, %245 ], [ %293, %247 ]
  %249 = phi i64 [ %246, %245 ], [ %294, %247 ]
  %250 = getelementptr i16, i16* %197, i64 %248
  %251 = getelementptr i16, i16* %224, i64 %248
  %252 = bitcast i16* %250 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !43
  %254 = getelementptr i16, i16* %250, i64 8
  %255 = bitcast i16* %254 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !43
  %257 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %257, align 2, !alias.scope !46, !noalias !43
  %258 = getelementptr i16, i16* %251, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %259, align 2, !alias.scope !46, !noalias !43
  %260 = or i64 %248, 16
  %261 = getelementptr i16, i16* %197, i64 %260
  %262 = getelementptr i16, i16* %224, i64 %260
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !43
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !43
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2, !alias.scope !46, !noalias !43
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2, !alias.scope !46, !noalias !43
  %271 = or i64 %248, 32
  %272 = getelementptr i16, i16* %197, i64 %271
  %273 = getelementptr i16, i16* %224, i64 %271
  %274 = bitcast i16* %272 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !43
  %276 = getelementptr i16, i16* %272, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !43
  %279 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %279, align 2, !alias.scope !46, !noalias !43
  %280 = getelementptr i16, i16* %273, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %281, align 2, !alias.scope !46, !noalias !43
  %282 = or i64 %248, 48
  %283 = getelementptr i16, i16* %197, i64 %282
  %284 = getelementptr i16, i16* %224, i64 %282
  %285 = bitcast i16* %283 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !43
  %287 = getelementptr i16, i16* %283, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !43
  %290 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %290, align 2, !alias.scope !46, !noalias !43
  %291 = getelementptr i16, i16* %284, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %292, align 2, !alias.scope !46, !noalias !43
  %293 = add i64 %248, 64
  %294 = add i64 %249, -4
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %247, !llvm.loop !48

296:                                              ; preds = %247, %235
  %297 = phi i64 [ 0, %235 ], [ %293, %247 ]
  %298 = icmp eq i64 %243, 0
  br i1 %298, label %315, label %299

299:                                              ; preds = %296, %299
  %300 = phi i64 [ %312, %299 ], [ %297, %296 ]
  %301 = phi i64 [ %313, %299 ], [ %243, %296 ]
  %302 = getelementptr i16, i16* %197, i64 %300
  %303 = getelementptr i16, i16* %224, i64 %300
  %304 = bitcast i16* %302 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !43
  %306 = getelementptr i16, i16* %302, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !43
  %309 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %309, align 2, !alias.scope !46, !noalias !43
  %310 = getelementptr i16, i16* %303, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %311, align 2, !alias.scope !46, !noalias !43
  %312 = add i64 %300, 16
  %313 = add i64 %301, -1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %299, !llvm.loop !49

315:                                              ; preds = %299, %296
  %316 = icmp eq i64 %226, %236
  br i1 %316, label %370, label %317

317:                                              ; preds = %315, %228, %223
  %318 = phi i64 [ %225, %228 ], [ %225, %223 ], [ %237, %315 ]
  %319 = phi i16* [ %197, %228 ], [ %197, %223 ], [ %238, %315 ]
  %320 = phi i16* [ %224, %228 ], [ %224, %223 ], [ %239, %315 ]
  %321 = add i64 %318, -1
  %322 = and i64 %318, 7
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %335, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %330, %324 ], [ %318, %317 ]
  %326 = phi i16* [ %332, %324 ], [ %319, %317 ]
  %327 = phi i16* [ %331, %324 ], [ %320, %317 ]
  %328 = phi i64 [ %333, %324 ], [ %322, %317 ]
  %329 = load i16, i16* %326, align 2
  store i16 %329, i16* %327, align 2
  %330 = add i64 %325, -1
  %331 = getelementptr inbounds i16, i16* %327, i64 1
  %332 = getelementptr inbounds i16, i16* %326, i64 1
  %333 = add i64 %328, -1
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %324, !llvm.loop !50

335:                                              ; preds = %324, %317
  %336 = phi i64 [ %318, %317 ], [ %330, %324 ]
  %337 = phi i16* [ %319, %317 ], [ %332, %324 ]
  %338 = phi i16* [ %320, %317 ], [ %331, %324 ]
  %339 = icmp ult i64 %321, 7
  br i1 %339, label %370, label %340

340:                                              ; preds = %335, %340
  %341 = phi i64 [ %366, %340 ], [ %336, %335 ]
  %342 = phi i16* [ %368, %340 ], [ %337, %335 ]
  %343 = phi i16* [ %367, %340 ], [ %338, %335 ]
  %344 = load i16, i16* %342, align 2
  store i16 %344, i16* %343, align 2
  %345 = getelementptr inbounds i16, i16* %343, i64 1
  %346 = getelementptr inbounds i16, i16* %342, i64 1
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %343, i64 2
  %349 = getelementptr inbounds i16, i16* %342, i64 2
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %343, i64 3
  %352 = getelementptr inbounds i16, i16* %342, i64 3
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %343, i64 4
  %355 = getelementptr inbounds i16, i16* %342, i64 4
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %343, i64 5
  %358 = getelementptr inbounds i16, i16* %342, i64 5
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %343, i64 6
  %361 = getelementptr inbounds i16, i16* %342, i64 6
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %343, i64 7
  %364 = getelementptr inbounds i16, i16* %342, i64 7
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = add i64 %341, -8
  %367 = getelementptr inbounds i16, i16* %343, i64 8
  %368 = getelementptr inbounds i16, i16* %342, i64 8
  %369 = icmp eq i64 %366, 0
  br i1 %369, label %370, label %340, !llvm.loop !51

370:                                              ; preds = %335, %340, %315, %192
  %371 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %0, i64 0, i32 2
  %372 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %1, i64 0, i32 2
  %373 = bitcast %"class.std::__1::vector.15"* %371 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %373, i8 0, i64 24, i1 false) #12
  %374 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %1, i64 0, i32 2, i32 0, i32 1
  %375 = bitcast %struct.ProcessMemoryInformation** %374 to i64*
  %376 = load i64, i64* %375, align 8
  %377 = bitcast %"class.std::__1::vector.15"* %372 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = sub i64 %376, %378
  %380 = sdiv exact i64 %379, 112
  %381 = icmp eq i64 %379, 0
  br i1 %381, label %410, label %382

382:                                              ; preds = %370
  %383 = icmp ugt i64 %380, 164703072086692425
  br i1 %383, label %384, label %386

384:                                              ; preds = %382
  %385 = bitcast %"class.std::__1::vector.15"* %371 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %385) #13
  unreachable

386:                                              ; preds = %382
  %387 = tail call i8* @_Znwm(i64 %379) #14
  %388 = bitcast i8* %387 to %struct.ProcessMemoryInformation*
  %389 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %0, i64 0, i32 2, i32 0, i32 1
  %390 = bitcast %struct.ProcessMemoryInformation** %389 to i8**
  store i8* %387, i8** %390, align 8
  %391 = bitcast %"class.std::__1::vector.15"* %371 to i8**
  store i8* %387, i8** %391, align 8
  %392 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %388, i64 %380
  %393 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store %struct.ProcessMemoryInformation* %392, %struct.ProcessMemoryInformation** %393, align 8
  %394 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %372, i64 0, i32 0, i32 0
  %395 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %394, align 8
  %396 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %374, align 8
  %397 = bitcast %struct.ProcessMemoryInformation** %389 to i64*
  %398 = ptrtoint i8* %387 to i64
  %399 = icmp eq %struct.ProcessMemoryInformation* %395, %396
  br i1 %399, label %408, label %400

400:                                              ; preds = %386, %400
  %401 = phi %struct.ProcessMemoryInformation* [ %404, %400 ], [ %388, %386 ]
  %402 = phi %struct.ProcessMemoryInformation* [ %403, %400 ], [ %395, %386 ]
  tail call void @_ZN24ProcessMemoryInformationC2ERKS_(%struct.ProcessMemoryInformation* %401, %struct.ProcessMemoryInformation* dereferenceable(112) %402) #12
  %403 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %402, i64 1
  %404 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %401, i64 1
  %405 = icmp eq %struct.ProcessMemoryInformation* %403, %396
  br i1 %405, label %406, label %400

406:                                              ; preds = %400
  %407 = ptrtoint %struct.ProcessMemoryInformation* %404 to i64
  br label %408

408:                                              ; preds = %406, %386
  %409 = phi i64 [ %398, %386 ], [ %407, %406 ]
  store i64 %409, i64* %397, align 8
  br label %410

410:                                              ; preds = %370, %408
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11ProcessDataD2Ev(%struct.ProcessData*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %2, i64 0, i32 0, i32 0
  %4 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %3, align 8
  %5 = icmp eq %struct.ProcessMemoryInformation* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %2, i64 0, i32 0
  tail call void @_ZNSt3__113__vector_baseI24ProcessMemoryInformationNS_9allocatorIS1_EEE5clearEv(%"class.std::__1::__vector_base.16"* %7) #12
  %8 = bitcast %"class.std::__1::vector.15"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #14
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string.1"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string.1"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %10, %16
  %20 = bitcast %struct.ProcessData* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = bitcast %struct.ProcessData* %0 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %19, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %struct.ProcessData* @_ZN11ProcessDataaSERKS_(%struct.ProcessData* returned, %struct.ProcessData* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %1, i64 0, i32 0
  %4 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %0, i64 0, i32 0
  %5 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %4, %"class.std::__1::basic_string.1"* dereferenceable(24) %3)
  %6 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %1, i64 0, i32 1
  %7 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %0, i64 0, i32 1
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %7, %"class.std::__1::basic_string.1"* dereferenceable(24) %6)
  %9 = icmp eq %struct.ProcessData* %0, %1
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %0, i64 0, i32 2
  %12 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %1, i64 0, i32 2, i32 0, i32 0
  %13 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %12, align 8
  %14 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %1, i64 0, i32 2, i32 0, i32 1
  %15 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %14, align 8
  tail call void @_ZNSt3__16vectorI24ProcessMemoryInformationNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.15"* %11, %struct.ProcessMemoryInformation* %13, %struct.ProcessMemoryInformation* %15) #12
  br label %16

16:                                               ; preds = %2, %10
  ret %struct.ProcessData* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.1"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.1"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.1"*
  %35 = icmp ugt %"class.std::__1::basic_string.1"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !52
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !52
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !55, !noalias !52
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !55, !noalias !52
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !52
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !52
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !55, !noalias !52
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !55, !noalias !52
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !52
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !52
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !55, !noalias !52
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !55, !noalias !52
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !52
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !52
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !55, !noalias !52
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !55, !noalias !52
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !57

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !52
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !52
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !55, !noalias !52
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !55, !noalias !52
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !58

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !59

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !60

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #14
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !61
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !61
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !64, !noalias !61
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !64, !noalias !61
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !61
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !61
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !64, !noalias !61
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !64, !noalias !61
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !61
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !61
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !64, !noalias !61
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !64, !noalias !61
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !61
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !61
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !64, !noalias !61
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !64, !noalias !61
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !66

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !61
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !61
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !64, !noalias !61
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !64, !noalias !61
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !67

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !68

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !69

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.1"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !70
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !70
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !73, !noalias !70
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !73, !noalias !70
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !70
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !70
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !73, !noalias !70
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !73, !noalias !70
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !70
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !70
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !73, !noalias !70
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !73, !noalias !70
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !70
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !70
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !73, !noalias !70
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !73, !noalias !70
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !75

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !70
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !70
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !73, !noalias !70
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !73, !noalias !70
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !76

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !77

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !78

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.1"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #12
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.1"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13MemoryDetails10StartFetchEv(%class.MemoryDetails*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features16kProcessHostOnUIE) #12
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZN13MemoryDetails31CollectChildInfoOnProcessThreadEv(%class.MemoryDetails* %0)
  br label %33

6:                                                ; preds = %1
  %7 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN7content21GetIOThreadTaskRunnerERKNS_17BrowserTaskTraitsE(%"class.content::BrowserTaskTraits"* dereferenceable(15) bitcast ({ %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }* @.ref.tmp to %"class.content::BrowserTaskTraits"*)) #12
  %8 = bitcast %"class.base::SingleThreadTaskRunner"* %7 to %"class.base::TaskRunner"*
  %9 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0), i32 157) #12
  %10 = call i8* @_Znwm(i64 56) #14, !noalias !79
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM13MemoryDetailsFvvEJ13scoped_refptrIS3_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM13MemoryDetailsFvvEJ13scoped_refptrIS2_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !79
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.MemoryDetails*)* @_ZN13MemoryDetails31CollectChildInfoOnProcessThreadEv to i64), i64 0>, <2 x i64>* %13, align 8, !noalias !79
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = bitcast i8* %14 to %class.MemoryDetails**
  store %class.MemoryDetails* %0, %class.MemoryDetails** %15, align 8, !noalias !79
  %16 = icmp eq %class.MemoryDetails* %0, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %6
  %18 = getelementptr inbounds %class.MemoryDetails, %class.MemoryDetails* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic, !noalias !79
  br label %20

20:                                               ; preds = %6, %17
  %21 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %10, i8** %21, align 8, !alias.scope !79
  %22 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %8, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #12
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #12
  %24 = icmp eq %"class.base::SingleThreadTaskRunner"* %7, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %7, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe.30", %"class.base::RefCountedThreadSafe.30"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.30", %"class.base::RefCountedThreadSafe.30"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe.30"* %31 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %32) #12
  br label %33

33:                                               ; preds = %30, %25, %20, %5
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13MemoryDetails31CollectChildInfoOnProcessThreadEv(%class.MemoryDetails*) #0 align 2 {
  %2 = alloca %"class.std::__1::vector.15", align 8
  %3 = alloca %"class.content::BrowserChildProcessHostIterator", align 8
  %4 = alloca %struct.ProcessMemoryInformation, align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = bitcast %"class.std::__1::vector.15"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %2, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %2, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #12
  %11 = getelementptr inbounds %"class.content::BrowserChildProcessHostIterator", %"class.content::BrowserChildProcessHostIterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @_ZN7content31BrowserChildProcessHostIteratorC1Ev(%"class.content::BrowserChildProcessHostIterator"* nonnull %3) #12
  %12 = call zeroext i1 @_ZN7content31BrowserChildProcessHostIterator4DoneEv(%"class.content::BrowserChildProcessHostIterator"* nonnull %3) #12
  br i1 %12, label %36, label %13

13:                                               ; preds = %1
  %14 = bitcast %struct.ProcessMemoryInformation* %4 to i8*
  %15 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 0
  %16 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 1
  %17 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 4
  %18 = bitcast %"class.std::__1::basic_string.1"* %16 to i8*
  %19 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 7
  %20 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 8
  %21 = bitcast %"class.std::__1::vector"* %20 to i8*
  %22 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 8, i32 0, i32 1
  %23 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.std::__1::basic_string.1"** %22 to i64*
  %25 = bitcast %struct.ProcessMemoryInformation** %9 to i64*
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::vector"* %20 to i8**
  %28 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 2
  %29 = bitcast %"class.std::__1::basic_string.1"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = bitcast %"class.std::__1::basic_string.1"* %28 to i8**
  %32 = bitcast %"class.std::__1::basic_string.1"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = bitcast %"class.std::__1::basic_string.1"* %16 to i8**
  %35 = bitcast i32* %17 to <4 x i32>*
  br label %96

36:                                               ; preds = %343, %1
  call void @_ZN7content31BrowserChildProcessHostIteratorD1Ev(%"class.content::BrowserChildProcessHostIterator"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %37 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0), i32 224) #12
  %38 = call i8* @_Znwm(i64 80) #14, !noalias !84
  %39 = bitcast i8* %38 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %39, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM13MemoryDetailsFvRKNSt3__16vectorI24ProcessMemoryInformationNS4_9allocatorIS6_EEEEEJ13scoped_refptrIS3_ES9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM13MemoryDetailsFvRKNSt3__16vectorI24ProcessMemoryInformationNS3_9allocatorIS5_EEEEEJ13scoped_refptrIS2_ES8_EE7DestroyEPKNS0_13BindStateBaseE) #12
  %40 = getelementptr inbounds i8, i8* %38, i64 32
  %41 = bitcast i8* %40 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.MemoryDetails*, %"class.std::__1::vector.15"*)* @_ZN13MemoryDetails18CollectProcessDataERKNSt3__16vectorI24ProcessMemoryInformationNS0_9allocatorIS2_EEEE to i64), i64 0>, <2 x i64>* %41, align 8
  %42 = getelementptr inbounds i8, i8* %38, i64 48
  %43 = bitcast i8* %42 to %class.MemoryDetails**
  store %class.MemoryDetails* %0, %class.MemoryDetails** %43, align 8
  %44 = icmp eq %class.MemoryDetails* %0, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %36
  %46 = getelementptr inbounds %class.MemoryDetails, %class.MemoryDetails* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 1 monotonic
  br label %48

48:                                               ; preds = %45, %36
  %49 = getelementptr inbounds i8, i8* %38, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #12
  %50 = bitcast %struct.ProcessMemoryInformation** %9 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.15"* %2 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = sdiv exact i64 %54, 112
  %56 = icmp eq i64 %54, 0
  %57 = inttoptr i64 %53 to %struct.ProcessMemoryInformation*
  %58 = inttoptr i64 %51 to %struct.ProcessMemoryInformation*
  br i1 %56, label %85, label %59

59:                                               ; preds = %48
  %60 = icmp ugt i64 %55, 164703072086692425
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = bitcast i8* %49 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %62) #13
  unreachable

63:                                               ; preds = %59
  %64 = call i8* @_Znwm(i64 %54) #14
  %65 = bitcast i8* %64 to %struct.ProcessMemoryInformation*
  %66 = getelementptr inbounds i8, i8* %38, i64 64
  %67 = bitcast i8* %66 to i8**
  store i8* %64, i8** %67, align 8
  %68 = bitcast i8* %49 to i8**
  store i8* %64, i8** %68, align 8
  %69 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %65, i64 %55
  %70 = getelementptr inbounds i8, i8* %38, i64 72
  %71 = bitcast i8* %70 to %struct.ProcessMemoryInformation**
  store %struct.ProcessMemoryInformation* %69, %struct.ProcessMemoryInformation** %71, align 8
  %72 = bitcast i8* %66 to i64*
  %73 = ptrtoint i8* %64 to i64
  %74 = icmp eq %struct.ProcessMemoryInformation* %57, %58
  br i1 %74, label %83, label %75

75:                                               ; preds = %63, %75
  %76 = phi %struct.ProcessMemoryInformation* [ %79, %75 ], [ %65, %63 ]
  %77 = phi %struct.ProcessMemoryInformation* [ %78, %75 ], [ %57, %63 ]
  call void @_ZN24ProcessMemoryInformationC2ERKS_(%struct.ProcessMemoryInformation* %76, %struct.ProcessMemoryInformation* dereferenceable(112) %77) #12
  %78 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %77, i64 1
  %79 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %76, i64 1
  %80 = icmp eq %struct.ProcessMemoryInformation* %78, %58
  br i1 %80, label %81, label %75

81:                                               ; preds = %75
  %82 = ptrtoint %struct.ProcessMemoryInformation* %79 to i64
  br label %83

83:                                               ; preds = %81, %63
  %84 = phi i64 [ %73, %63 ], [ %82, %81 ]
  store i64 %84, i64* %72, align 8
  br label %85

85:                                               ; preds = %48, %83
  %86 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %38, i8** %86, align 8, !alias.scope !84
  %87 = call zeroext i1 @_ZN4base10ThreadPool8PostTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp.16, %"class.base::OnceCallback"* nonnull %6) #12
  %88 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %88) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #12
  %89 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %8, align 8
  %90 = icmp eq %struct.ProcessMemoryInformation* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %2, i64 0, i32 0
  call void @_ZNSt3__113__vector_baseI24ProcessMemoryInformationNS_9allocatorIS1_EEE5clearEv(%"class.std::__1::__vector_base.16"* nonnull %92) #12
  %93 = bitcast %"class.std::__1::vector.15"* %2 to i8**
  %94 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %94) #14
  br label %95

95:                                               ; preds = %85, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void

96:                                               ; preds = %13, %343
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 80, i1 false)
  store i32 0, i32* %15, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 52, i1 false) #12
  store <4 x i32> <i32 1, i32 -1, i32 -1, i32 0>, <4 x i32>* %35, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #12
  %97 = call dereferenceable(72) %"struct.content::ChildProcessData"* @_ZN7content31BrowserChildProcessHostIterator7GetDataEv(%"class.content::BrowserChildProcessHostIterator"* nonnull %3) #12
  %98 = getelementptr inbounds %"struct.content::ChildProcessData", %"struct.content::ChildProcessData"* %97, i64 0, i32 6
  %99 = call zeroext i1 @_ZNK4base7Process7IsValidEv(%"class.base::Process"* %98) #12
  br i1 %99, label %100, label %310

100:                                              ; preds = %96
  %101 = call dereferenceable(72) %"struct.content::ChildProcessData"* @_ZN7content31BrowserChildProcessHostIterator7GetDataEv(%"class.content::BrowserChildProcessHostIterator"* nonnull %3) #12
  %102 = getelementptr inbounds %"struct.content::ChildProcessData", %"struct.content::ChildProcessData"* %101, i64 0, i32 6
  %103 = call i32 @_ZNK4base7Process3PidEv(%"class.base::Process"* %102) #12
  store i32 %103, i32* %15, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %310, label %105

105:                                              ; preds = %100
  %106 = call dereferenceable(72) %"struct.content::ChildProcessData"* @_ZN7content31BrowserChildProcessHostIterator7GetDataEv(%"class.content::BrowserChildProcessHostIterator"* nonnull %3) #12
  %107 = getelementptr inbounds %"struct.content::ChildProcessData", %"struct.content::ChildProcessData"* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  store i32 %108, i32* %17, align 4
  store i32 0, i32* %19, align 8
  %109 = call dereferenceable(72) %"struct.content::ChildProcessData"* @_ZN7content31BrowserChildProcessHostIterator7GetDataEv(%"class.content::BrowserChildProcessHostIterator"* nonnull %3) #12
  %110 = getelementptr inbounds %"struct.content::ChildProcessData", %"struct.content::ChildProcessData"* %109, i64 0, i32 2
  %111 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %22, align 8
  %112 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %23, align 8
  %113 = icmp eq %"class.std::__1::basic_string.1"* %111, %112
  br i1 %113, label %301, label %114

114:                                              ; preds = %105
  %115 = bitcast %"class.std::__1::basic_string.1"* %110 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %115, i64 0, i32 1, i32 1
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %114
  %120 = bitcast %"class.std::__1::basic_string.1"* %111 to i8*
  %121 = bitcast %"class.std::__1::basic_string.1"* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 24, i1 false) #12
  br label %298

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i16*, i16** %123, align 8
  %125 = getelementptr inbounds %"struct.content::ChildProcessData", %"struct.content::ChildProcessData"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = icmp ult i64 %126, 11
  br i1 %127, label %128, label %133

128:                                              ; preds = %122
  %129 = bitcast %"class.std::__1::basic_string.1"* %111 to i16*
  %130 = trunc i64 %126 to i8
  %131 = bitcast %"class.std::__1::basic_string.1"* %111 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %131, i64 0, i32 1, i32 1
  store i8 %130, i8* %132, align 1
  br label %150

133:                                              ; preds = %122
  %134 = icmp ugt i64 %126, 9223372036854775791
  br i1 %134, label %135, label %137

135:                                              ; preds = %133
  %136 = bitcast %"class.std::__1::basic_string.1"* %111 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %136) #13
  unreachable

137:                                              ; preds = %133
  %138 = add nuw nsw i64 %126, 8
  %139 = and i64 %138, -8
  %140 = icmp slt i64 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %137
  call void @abort() #13
  unreachable

142:                                              ; preds = %137
  %143 = shl i64 %139, 1
  %144 = call i8* @_Znwm(i64 %143) #14
  %145 = bitcast i8* %144 to i16*
  %146 = bitcast %"class.std::__1::basic_string.1"* %111 to i8**
  store i8* %144, i8** %146, align 8
  %147 = or i64 %139, -9223372036854775808
  %148 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %126, i64* %149, align 8
  br label %150

150:                                              ; preds = %142, %128
  %151 = phi i16* [ %129, %128 ], [ %145, %142 ]
  %152 = add nuw nsw i64 %126, 1
  %153 = add i64 %126, 1
  %154 = icmp ult i64 %153, 16
  br i1 %154, label %245, label %155

155:                                              ; preds = %150
  %156 = getelementptr i16, i16* %151, i64 1
  %157 = getelementptr i16, i16* %156, i64 %126
  %158 = getelementptr i16, i16* %124, i64 1
  %159 = getelementptr i16, i16* %158, i64 %126
  %160 = icmp ult i16* %151, %159
  %161 = icmp ult i16* %124, %157
  %162 = and i1 %160, %161
  br i1 %162, label %245, label %163

163:                                              ; preds = %155
  %164 = and i64 %153, -16
  %165 = sub i64 %152, %164
  %166 = getelementptr i16, i16* %124, i64 %164
  %167 = getelementptr i16, i16* %151, i64 %164
  %168 = add i64 %164, -16
  %169 = lshr exact i64 %168, 4
  %170 = add nuw nsw i64 %169, 1
  %171 = and i64 %170, 3
  %172 = icmp ult i64 %168, 48
  br i1 %172, label %224, label %173

173:                                              ; preds = %163
  %174 = sub nsw i64 %170, %171
  br label %175

175:                                              ; preds = %175, %173
  %176 = phi i64 [ 0, %173 ], [ %221, %175 ]
  %177 = phi i64 [ %174, %173 ], [ %222, %175 ]
  %178 = getelementptr i16, i16* %124, i64 %176
  %179 = getelementptr i16, i16* %151, i64 %176
  %180 = bitcast i16* %178 to <8 x i16>*
  %181 = load <8 x i16>, <8 x i16>* %180, align 2, !alias.scope !89
  %182 = getelementptr i16, i16* %178, i64 8
  %183 = bitcast i16* %182 to <8 x i16>*
  %184 = load <8 x i16>, <8 x i16>* %183, align 2, !alias.scope !89
  %185 = bitcast i16* %179 to <8 x i16>*
  store <8 x i16> %181, <8 x i16>* %185, align 2, !alias.scope !92, !noalias !89
  %186 = getelementptr i16, i16* %179, i64 8
  %187 = bitcast i16* %186 to <8 x i16>*
  store <8 x i16> %184, <8 x i16>* %187, align 2, !alias.scope !92, !noalias !89
  %188 = or i64 %176, 16
  %189 = getelementptr i16, i16* %124, i64 %188
  %190 = getelementptr i16, i16* %151, i64 %188
  %191 = bitcast i16* %189 to <8 x i16>*
  %192 = load <8 x i16>, <8 x i16>* %191, align 2, !alias.scope !89
  %193 = getelementptr i16, i16* %189, i64 8
  %194 = bitcast i16* %193 to <8 x i16>*
  %195 = load <8 x i16>, <8 x i16>* %194, align 2, !alias.scope !89
  %196 = bitcast i16* %190 to <8 x i16>*
  store <8 x i16> %192, <8 x i16>* %196, align 2, !alias.scope !92, !noalias !89
  %197 = getelementptr i16, i16* %190, i64 8
  %198 = bitcast i16* %197 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %198, align 2, !alias.scope !92, !noalias !89
  %199 = or i64 %176, 32
  %200 = getelementptr i16, i16* %124, i64 %199
  %201 = getelementptr i16, i16* %151, i64 %199
  %202 = bitcast i16* %200 to <8 x i16>*
  %203 = load <8 x i16>, <8 x i16>* %202, align 2, !alias.scope !89
  %204 = getelementptr i16, i16* %200, i64 8
  %205 = bitcast i16* %204 to <8 x i16>*
  %206 = load <8 x i16>, <8 x i16>* %205, align 2, !alias.scope !89
  %207 = bitcast i16* %201 to <8 x i16>*
  store <8 x i16> %203, <8 x i16>* %207, align 2, !alias.scope !92, !noalias !89
  %208 = getelementptr i16, i16* %201, i64 8
  %209 = bitcast i16* %208 to <8 x i16>*
  store <8 x i16> %206, <8 x i16>* %209, align 2, !alias.scope !92, !noalias !89
  %210 = or i64 %176, 48
  %211 = getelementptr i16, i16* %124, i64 %210
  %212 = getelementptr i16, i16* %151, i64 %210
  %213 = bitcast i16* %211 to <8 x i16>*
  %214 = load <8 x i16>, <8 x i16>* %213, align 2, !alias.scope !89
  %215 = getelementptr i16, i16* %211, i64 8
  %216 = bitcast i16* %215 to <8 x i16>*
  %217 = load <8 x i16>, <8 x i16>* %216, align 2, !alias.scope !89
  %218 = bitcast i16* %212 to <8 x i16>*
  store <8 x i16> %214, <8 x i16>* %218, align 2, !alias.scope !92, !noalias !89
  %219 = getelementptr i16, i16* %212, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  store <8 x i16> %217, <8 x i16>* %220, align 2, !alias.scope !92, !noalias !89
  %221 = add i64 %176, 64
  %222 = add i64 %177, -4
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %175, !llvm.loop !94

224:                                              ; preds = %175, %163
  %225 = phi i64 [ 0, %163 ], [ %221, %175 ]
  %226 = icmp eq i64 %171, 0
  br i1 %226, label %243, label %227

227:                                              ; preds = %224, %227
  %228 = phi i64 [ %240, %227 ], [ %225, %224 ]
  %229 = phi i64 [ %241, %227 ], [ %171, %224 ]
  %230 = getelementptr i16, i16* %124, i64 %228
  %231 = getelementptr i16, i16* %151, i64 %228
  %232 = bitcast i16* %230 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !89
  %234 = getelementptr i16, i16* %230, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  %236 = load <8 x i16>, <8 x i16>* %235, align 2, !alias.scope !89
  %237 = bitcast i16* %231 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %237, align 2, !alias.scope !92, !noalias !89
  %238 = getelementptr i16, i16* %231, i64 8
  %239 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %236, <8 x i16>* %239, align 2, !alias.scope !92, !noalias !89
  %240 = add i64 %228, 16
  %241 = add i64 %229, -1
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %227, !llvm.loop !95

243:                                              ; preds = %227, %224
  %244 = icmp eq i64 %153, %164
  br i1 %244, label %298, label %245

245:                                              ; preds = %243, %155, %150
  %246 = phi i64 [ %152, %155 ], [ %152, %150 ], [ %165, %243 ]
  %247 = phi i16* [ %124, %155 ], [ %124, %150 ], [ %166, %243 ]
  %248 = phi i16* [ %151, %155 ], [ %151, %150 ], [ %167, %243 ]
  %249 = add i64 %246, -1
  %250 = and i64 %246, 7
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %263, label %252

252:                                              ; preds = %245, %252
  %253 = phi i64 [ %258, %252 ], [ %246, %245 ]
  %254 = phi i16* [ %260, %252 ], [ %247, %245 ]
  %255 = phi i16* [ %259, %252 ], [ %248, %245 ]
  %256 = phi i64 [ %261, %252 ], [ %250, %245 ]
  %257 = load i16, i16* %254, align 2
  store i16 %257, i16* %255, align 2
  %258 = add i64 %253, -1
  %259 = getelementptr inbounds i16, i16* %255, i64 1
  %260 = getelementptr inbounds i16, i16* %254, i64 1
  %261 = add i64 %256, -1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %252, !llvm.loop !96

263:                                              ; preds = %252, %245
  %264 = phi i64 [ %246, %245 ], [ %258, %252 ]
  %265 = phi i16* [ %247, %245 ], [ %260, %252 ]
  %266 = phi i16* [ %248, %245 ], [ %259, %252 ]
  %267 = icmp ult i64 %249, 7
  br i1 %267, label %298, label %268

268:                                              ; preds = %263, %268
  %269 = phi i64 [ %294, %268 ], [ %264, %263 ]
  %270 = phi i16* [ %296, %268 ], [ %265, %263 ]
  %271 = phi i16* [ %295, %268 ], [ %266, %263 ]
  %272 = load i16, i16* %270, align 2
  store i16 %272, i16* %271, align 2
  %273 = getelementptr inbounds i16, i16* %271, i64 1
  %274 = getelementptr inbounds i16, i16* %270, i64 1
  %275 = load i16, i16* %274, align 2
  store i16 %275, i16* %273, align 2
  %276 = getelementptr inbounds i16, i16* %271, i64 2
  %277 = getelementptr inbounds i16, i16* %270, i64 2
  %278 = load i16, i16* %277, align 2
  store i16 %278, i16* %276, align 2
  %279 = getelementptr inbounds i16, i16* %271, i64 3
  %280 = getelementptr inbounds i16, i16* %270, i64 3
  %281 = load i16, i16* %280, align 2
  store i16 %281, i16* %279, align 2
  %282 = getelementptr inbounds i16, i16* %271, i64 4
  %283 = getelementptr inbounds i16, i16* %270, i64 4
  %284 = load i16, i16* %283, align 2
  store i16 %284, i16* %282, align 2
  %285 = getelementptr inbounds i16, i16* %271, i64 5
  %286 = getelementptr inbounds i16, i16* %270, i64 5
  %287 = load i16, i16* %286, align 2
  store i16 %287, i16* %285, align 2
  %288 = getelementptr inbounds i16, i16* %271, i64 6
  %289 = getelementptr inbounds i16, i16* %270, i64 6
  %290 = load i16, i16* %289, align 2
  store i16 %290, i16* %288, align 2
  %291 = getelementptr inbounds i16, i16* %271, i64 7
  %292 = getelementptr inbounds i16, i16* %270, i64 7
  %293 = load i16, i16* %292, align 2
  store i16 %293, i16* %291, align 2
  %294 = add i64 %269, -8
  %295 = getelementptr inbounds i16, i16* %271, i64 8
  %296 = getelementptr inbounds i16, i16* %270, i64 8
  %297 = icmp eq i64 %294, 0
  br i1 %297, label %298, label %268, !llvm.loop !97

298:                                              ; preds = %263, %268, %243, %119
  %299 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %111, i64 1
  %300 = ptrtoint %"class.std::__1::basic_string.1"* %299 to i64
  store i64 %300, i64* %24, align 8
  br label %302

301:                                              ; preds = %105
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %20, %"class.std::__1::basic_string.1"* dereferenceable(24) %110) #12
  br label %302

302:                                              ; preds = %298, %301
  %303 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %9, align 8
  %304 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %10, align 8
  %305 = icmp eq %struct.ProcessMemoryInformation* %303, %304
  br i1 %305, label %309, label %306

306:                                              ; preds = %302
  call void @_ZN24ProcessMemoryInformationC2ERKS_(%struct.ProcessMemoryInformation* %303, %struct.ProcessMemoryInformation* nonnull dereferenceable(112) %4) #12
  %307 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %303, i64 1
  %308 = ptrtoint %struct.ProcessMemoryInformation* %307 to i64
  store i64 %308, i64* %25, align 8
  br label %310

309:                                              ; preds = %302
  call void @_ZNSt3__16vectorI24ProcessMemoryInformationNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.15"* nonnull %2, %struct.ProcessMemoryInformation* nonnull dereferenceable(112) %4) #12
  br label %310

310:                                              ; preds = %309, %306, %100, %96
  %311 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %26, align 8
  %312 = icmp eq %"class.std::__1::basic_string.1"* %311, null
  br i1 %312, label %333, label %313

313:                                              ; preds = %310
  %314 = bitcast %"class.std::__1::basic_string.1"* %311 to i8*
  %315 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %22, align 8
  %316 = icmp eq %"class.std::__1::basic_string.1"* %315, %311
  br i1 %316, label %331, label %317

317:                                              ; preds = %313, %327
  %318 = phi %"class.std::__1::basic_string.1"* [ %319, %327 ], [ %315, %313 ]
  %319 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %318, i64 -1
  %320 = bitcast %"class.std::__1::basic_string.1"* %319 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %321 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %320, i64 0, i32 1, i32 1
  %322 = load i8, i8* %321, align 1
  %323 = icmp slt i8 %322, 0
  br i1 %323, label %324, label %327

324:                                              ; preds = %317
  %325 = bitcast %"class.std::__1::basic_string.1"* %319 to i8**
  %326 = load i8*, i8** %325, align 8
  call void @_ZdlPv(i8* %326) #14
  br label %327

327:                                              ; preds = %324, %317
  %328 = icmp eq %"class.std::__1::basic_string.1"* %319, %311
  br i1 %328, label %329, label %317

329:                                              ; preds = %327
  %330 = load i8*, i8** %27, align 8
  br label %331

331:                                              ; preds = %329, %313
  %332 = phi i8* [ %330, %329 ], [ %314, %313 ]
  store %"class.std::__1::basic_string.1"* %311, %"class.std::__1::basic_string.1"** %22, align 8
  call void @_ZdlPv(i8* %332) #14
  br label %333

333:                                              ; preds = %331, %310
  %334 = load i8, i8* %30, align 1
  %335 = icmp slt i8 %334, 0
  br i1 %335, label %336, label %338

336:                                              ; preds = %333
  %337 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %337) #14
  br label %338

338:                                              ; preds = %336, %333
  %339 = load i8, i8* %33, align 1
  %340 = icmp slt i8 %339, 0
  br i1 %340, label %341, label %343

341:                                              ; preds = %338
  %342 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %342) #14
  br label %343

343:                                              ; preds = %338, %341
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %14) #12
  %344 = call zeroext i1 @_ZN7content31BrowserChildProcessHostIteratorppEv(%"class.content::BrowserChildProcessHostIterator"* nonnull %3) #12
  %345 = call zeroext i1 @_ZN7content31BrowserChildProcessHostIterator4DoneEv(%"class.content::BrowserChildProcessHostIterator"* nonnull %3) #12
  br i1 %345, label %36, label %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.base::SingleThreadTaskRunner"* @_ZN7content21GetIOThreadTaskRunnerERKNS_17BrowserTaskTraitsE(%"class.content::BrowserTaskTraits"* dereferenceable(15)) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13MemoryDetailsD2Ev(%class.MemoryDetails* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.MemoryDetails, %class.MemoryDetails* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13MemoryDetails, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.MemoryDetails, %class.MemoryDetails* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %3, i64 0, i32 0, i32 0
  %5 = load %struct.ProcessData*, %struct.ProcessData** %4, align 8
  %6 = icmp eq %struct.ProcessData* %5, null
  br i1 %6, label %47, label %7

7:                                                ; preds = %1
  %8 = bitcast %struct.ProcessData* %5 to i8*
  %9 = getelementptr inbounds %class.MemoryDetails, %class.MemoryDetails* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %struct.ProcessData*, %struct.ProcessData** %9, align 8
  %11 = icmp eq %struct.ProcessData* %10, %5
  br i1 %11, label %45, label %12

12:                                               ; preds = %7, %40
  %13 = phi %struct.ProcessData* [ %14, %40 ], [ %10, %7 ]
  %14 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %13, i64 -1
  %15 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %13, i64 -1, i32 2
  %16 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %15, i64 0, i32 0, i32 0
  %17 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %16, align 8
  %18 = icmp eq %struct.ProcessMemoryInformation* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %15, i64 0, i32 0
  tail call void @_ZNSt3__113__vector_baseI24ProcessMemoryInformationNS_9allocatorIS1_EEE5clearEv(%"class.std::__1::__vector_base.16"* %20) #12
  %21 = bitcast %"class.std::__1::vector.15"* %15 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #14
  br label %23

23:                                               ; preds = %19, %12
  %24 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %13, i64 -1, i32 1
  %25 = bitcast %"class.std::__1::basic_string.1"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = bitcast %"class.std::__1::basic_string.1"* %24 to i8**
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZdlPv(i8* %31) #14
  br label %32

32:                                               ; preds = %29, %23
  %33 = bitcast %struct.ProcessData* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = bitcast %struct.ProcessData* %14 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #14
  br label %40

40:                                               ; preds = %37, %32
  %41 = icmp eq %struct.ProcessData* %14, %5
  br i1 %41, label %42, label %12

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::vector.23"* %3 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %7, %42
  %46 = phi i8* [ %44, %42 ], [ %8, %7 ]
  store %struct.ProcessData* %5, %struct.ProcessData** %9, align 8
  tail call void @_ZdlPv(i8* %46) #14
  br label %47

47:                                               ; preds = %1, %45
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN13MemoryDetailsD0Ev(%class.MemoryDetails* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13MemoryDetails11ToLogStringEb(%"class.std::__1::basic_string"* noalias sret, %class.MemoryDetails*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::__less.251", align 1
  %5 = alloca %"class.std::__1::vector.15", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #12
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %0, i64 4096) #12
  %11 = bitcast %"class.std::__1::vector.15"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %5, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = tail call %struct.ProcessData* @_ZN13MemoryDetails13ChromeBrowserEv(%class.MemoryDetails* %1) #12
  %16 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %15, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #12
  %17 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %15, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast %struct.ProcessMemoryInformation** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.15"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = sdiv exact i64 %22, 112
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %52, label %25

25:                                               ; preds = %3
  %26 = icmp ugt i64 %23, 164703072086692425
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector.15"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %28) #13
  unreachable

29:                                               ; preds = %25
  %30 = tail call i8* @_Znwm(i64 %22) #14
  %31 = bitcast i8* %30 to %struct.ProcessMemoryInformation*
  %32 = bitcast %struct.ProcessMemoryInformation** %13 to i8**
  store i8* %30, i8** %32, align 8
  %33 = bitcast %"class.std::__1::vector.15"* %5 to i8**
  store i8* %30, i8** %33, align 8
  %34 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %31, i64 %23
  store %struct.ProcessMemoryInformation* %34, %struct.ProcessMemoryInformation** %14, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %16, i64 0, i32 0, i32 0
  %36 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %35, align 8
  %37 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %17, align 8
  %38 = bitcast %struct.ProcessMemoryInformation** %13 to i64*
  %39 = ptrtoint i8* %30 to i64
  %40 = icmp eq %struct.ProcessMemoryInformation* %36, %37
  br i1 %40, label %49, label %41

41:                                               ; preds = %29, %41
  %42 = phi %struct.ProcessMemoryInformation* [ %45, %41 ], [ %31, %29 ]
  %43 = phi %struct.ProcessMemoryInformation* [ %44, %41 ], [ %36, %29 ]
  tail call void @_ZN24ProcessMemoryInformationC2ERKS_(%struct.ProcessMemoryInformation* %42, %struct.ProcessMemoryInformation* dereferenceable(112) %43) #12
  %44 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %43, i64 1
  %45 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %42, i64 1
  %46 = icmp eq %struct.ProcessMemoryInformation* %44, %37
  br i1 %46, label %47, label %41

47:                                               ; preds = %41
  %48 = ptrtoint %struct.ProcessMemoryInformation* %45 to i64
  br label %49

49:                                               ; preds = %47, %29
  %50 = phi i64 [ %39, %29 ], [ %48, %47 ]
  store i64 %50, i64* %38, align 8
  %51 = inttoptr i64 %50 to %struct.ProcessMemoryInformation*
  br label %52

52:                                               ; preds = %3, %49
  %53 = phi %struct.ProcessMemoryInformation* [ null, %3 ], [ %51, %49 ]
  %54 = phi %struct.ProcessMemoryInformation* [ null, %3 ], [ %31, %49 ]
  %55 = getelementptr inbounds %"struct.std::__1::__less.251", %"struct.std::__1::__less.251"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %55) #12
  call void @_ZNSt3__16__sortIRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEvT0_S6_T_(%struct.ProcessMemoryInformation* %54, %struct.ProcessMemoryInformation* %53, %"struct.std::__1::__less.251"* nonnull dereferenceable(1) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %55) #12
  %56 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %13, align 8
  %57 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %12, align 8
  %58 = icmp eq %struct.ProcessMemoryInformation* %56, %57
  br i1 %58, label %87, label %59

59:                                               ; preds = %52
  %60 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = getelementptr inbounds i8, i8* %60, i64 14
  %64 = getelementptr inbounds i8, i8* %60, i64 12
  %65 = bitcast %"class.std::__1::basic_string"* %6 to i64*
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast i64* %66 to i8*
  %68 = getelementptr inbounds i8, i8* %60, i64 9
  %69 = getelementptr inbounds i8, i8* %60, i64 3
  %70 = getelementptr inbounds i8, i8* %60, i64 7
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %73 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %78 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %83 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %95

87:                                               ; preds = %218, %52
  %88 = phi %struct.ProcessMemoryInformation* [ %56, %52 ], [ %97, %218 ]
  %89 = icmp eq %struct.ProcessMemoryInformation* %88, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %5, i64 0, i32 0
  call void @_ZNSt3__113__vector_baseI24ProcessMemoryInformationNS_9allocatorIS1_EEE5clearEv(%"class.std::__1::__vector_base.16"* nonnull %91) #12
  %92 = bitcast %"class.std::__1::vector.15"* %5 to i8**
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %87, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  ret void

95:                                               ; preds = %59, %218
  %96 = phi %struct.ProcessMemoryInformation* [ %56, %59 ], [ %97, %218 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #12
  %97 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %96, i64 -1
  %98 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %96, i64 -1, i32 4
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 3
  br i1 %100, label %101, label %111

101:                                              ; preds = %95
  %102 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %96, i64 -1, i32 7
  %103 = load i32, i32* %102, align 8
  switch i32 %103, label %110 [
    i32 1, label %104
    i32 2, label %105
    i32 3, label %106
    i32 4, label %107
    i32 5, label %108
    i32 6, label %109
  ]

104:                                              ; preds = %101
  store i8 3, i8* %62, align 1, !alias.scope !98
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #12
  store i8 0, i8* %69, align 1, !alias.scope !98
  br label %113

105:                                              ; preds = %101
  store i8 12, i8* %62, align 1, !alias.scope !98
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i1 false) #12
  store i8 0, i8* %64, align 4, !alias.scope !98
  br label %113

106:                                              ; preds = %101
  store i8 9, i8* %62, align 1, !alias.scope !98
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 9, i1 false) #12
  store i8 0, i8* %68, align 1, !alias.scope !98
  br label %113

107:                                              ; preds = %101
  store i8 8, i8* %62, align 1, !alias.scope !98
  store i64 8317145136332432708, i64* %65, align 8, !alias.scope !98
  store i8 0, i8* %67, align 8, !alias.scope !98
  br label %113

108:                                              ; preds = %101
  store i8 12, i8* %62, align 1, !alias.scope !98
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i64 12, i1 false) #12
  store i8 0, i8* %64, align 4, !alias.scope !98
  br label %113

109:                                              ; preds = %101
  store i8 14, i8* %62, align 1, !alias.scope !98
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 14, i1 false) #12
  store i8 0, i8* %63, align 2, !alias.scope !98
  br label %113

110:                                              ; preds = %101
  store i8 7, i8* %62, align 1, !alias.scope !98
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7, i1 false) #12
  store i8 0, i8* %70, align 1, !alias.scope !98
  br label %113

111:                                              ; preds = %95
  call void @_ZN7content27GetProcessTypeNameInEnglishEi(%"class.std::__1::basic_string"* nonnull sret %6, i32 %99) #12
  %112 = load i8, i8* %62, align 1
  br label %113

113:                                              ; preds = %104, %105, %106, %107, %108, %109, %110, %111
  %114 = phi i8 [ 3, %104 ], [ 12, %105 ], [ 9, %106 ], [ 8, %107 ], [ 12, %108 ], [ 14, %109 ], [ 7, %110 ], [ %112, %111 ]
  %115 = icmp slt i8 %114, 0
  %116 = load i8*, i8** %71, align 8
  %117 = load i64, i64* %66, align 8
  %118 = zext i8 %114 to i64
  %119 = select i1 %115, i8* %116, i8* %60
  %120 = select i1 %115, i64 %117, i64 %118
  %121 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %119, i64 %120) #12
  %122 = load i8, i8* %62, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %113
  %125 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %125) #14
  br label %126

126:                                              ; preds = %113, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #12
  %127 = load i32, i32* %98, align 4
  %128 = icmp ne i32 %127, 3
  %129 = or i1 %128, %2
  br i1 %129, label %130, label %180

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %96, i64 -1, i32 8, i32 0, i32 0
  %132 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %131, align 8
  %133 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %96, i64 -1, i32 8, i32 0, i32 1
  %134 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %133, align 8
  %135 = icmp eq %"class.std::__1::basic_string.1"* %132, %134
  br i1 %135, label %180, label %136

136:                                              ; preds = %130
  %137 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #12
  %138 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %131, align 8
  %139 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %133, align 8
  %140 = icmp eq %"class.std::__1::basic_string.1"* %138, %139
  br i1 %140, label %141, label %143

141:                                              ; preds = %174, %136
  %142 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #12
  br label %180

143:                                              ; preds = %136, %178
  %144 = phi %"class.std::__1::basic_string.1"* [ %179, %178 ], [ %138, %136 ]
  %145 = phi %"class.std::__1::basic_string.1"* [ %175, %178 ], [ %138, %136 ]
  %146 = icmp eq %"class.std::__1::basic_string.1"* %145, %144
  br i1 %146, label %149, label %147

147:                                              ; preds = %143
  %148 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #12
  br label %149

149:                                              ; preds = %143, %147
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #12
  %150 = bitcast %"class.std::__1::basic_string.1"* %145 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %150, i64 0, i32 1, i32 1
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  %154 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i16*, i16** %154, align 8
  %156 = bitcast %"class.std::__1::basic_string.1"* %145 to i16*
  %157 = select i1 %153, i16* %155, i16* %156
  %158 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %159 = load i64, i64* %158, align 8
  %160 = zext i8 %152 to i64
  %161 = select i1 %153, i64 %159, i64 %160
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i16* %157, i64 %161) #12
  %162 = load i8, i8* %74, align 1
  %163 = icmp slt i8 %162, 0
  %164 = load i8*, i8** %75, align 8
  %165 = load i64, i64* %76, align 8
  %166 = zext i8 %162 to i64
  %167 = select i1 %163, i8* %164, i8* %72
  %168 = select i1 %163, i64 %165, i64 %166
  %169 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %167, i64 %168) #12
  %170 = load i8, i8* %74, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %174

172:                                              ; preds = %149
  %173 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %173) #14
  br label %174

174:                                              ; preds = %149, %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #12
  %175 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %145, i64 1
  %176 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %133, align 8
  %177 = icmp eq %"class.std::__1::basic_string.1"* %175, %176
  br i1 %177, label %141, label %178

178:                                              ; preds = %174
  %179 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %131, align 8
  br label %143

180:                                              ; preds = %126, %141, %130
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #12
  %181 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %96, i64 -1, i32 9
  %182 = load i64, i64* %181, align 8
  %183 = trunc i64 %182 to i32
  %184 = sdiv i32 %183, 1024
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i32 %184) #12
  %185 = load i8, i8* %79, align 1
  %186 = icmp slt i8 %185, 0
  %187 = load i8*, i8** %80, align 8
  %188 = load i64, i64* %81, align 8
  %189 = zext i8 %185 to i64
  %190 = select i1 %186, i8* %187, i8* %77
  %191 = select i1 %186, i64 %188, i64 %189
  %192 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %190, i64 %191) #12
  %193 = load i8, i8* %79, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %180
  %196 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %196) #14
  br label %197

197:                                              ; preds = %180, %195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #12
  %198 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %96, i64 -1, i32 5
  %199 = load i32, i32* %198, align 8
  %200 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %96, i64 -1, i32 6
  %201 = load i32, i32* %200, align 4
  %202 = and i32 %199, %201
  %203 = icmp eq i32 %202, -1
  br i1 %203, label %218, label %204

204:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #12
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0), i32 %199, i32 %201) #12
  %205 = load i8, i8* %84, align 1
  %206 = icmp slt i8 %205, 0
  %207 = load i8*, i8** %85, align 8
  %208 = load i64, i64* %86, align 8
  %209 = zext i8 %205 to i64
  %210 = select i1 %206, i8* %207, i8* %82
  %211 = select i1 %206, i64 %208, i64 %209
  %212 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %210, i64 %211) #12
  %213 = load i8, i8* %84, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %217

215:                                              ; preds = %204
  %216 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %216) #14
  br label %217

217:                                              ; preds = %204, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #12
  br label %218

218:                                              ; preds = %197, %217
  %219 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #12
  %220 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %12, align 8
  %221 = icmp eq %struct.ProcessMemoryInformation* %97, %220
  br i1 %221, label %87, label %95
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #1

declare %struct.ProcessData* @_ZN13MemoryDetails13ChromeBrowserEv(%class.MemoryDetails*) local_unnamed_addr #1

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #1

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

declare void @_ZN7content31BrowserChildProcessHostIteratorC1Ev(%"class.content::BrowserChildProcessHostIterator"*) unnamed_addr #1

declare zeroext i1 @_ZN7content31BrowserChildProcessHostIterator4DoneEv(%"class.content::BrowserChildProcessHostIterator"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(72) %"struct.content::ChildProcessData"* @_ZN7content31BrowserChildProcessHostIterator7GetDataEv(%"class.content::BrowserChildProcessHostIterator"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base7Process7IsValidEv(%"class.base::Process"*) local_unnamed_addr #1

declare i32 @_ZNK4base7Process3PidEv(%"class.base::Process"*) local_unnamed_addr #1

declare zeroext i1 @_ZN7content31BrowserChildProcessHostIteratorppEv(%"class.content::BrowserChildProcessHostIterator"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7content31BrowserChildProcessHostIteratorD1Ev(%"class.content::BrowserChildProcessHostIterator"*) unnamed_addr #6

declare zeroext i1 @_ZN4base10ThreadPool8PostTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEE(%"class.base::Location"* dereferenceable(32), %"class.base::TaskTraits"* dereferenceable(15), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN13MemoryDetails18CollectProcessDataERKNSt3__16vectorI24ProcessMemoryInformationNS0_9allocatorIS2_EEEE(%class.MemoryDetails*, %"class.std::__1::vector.15"* dereferenceable(24)) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13MemoryDetails26CollectChildInfoOnUIThreadEv(%class.MemoryDetails*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::allocator", align 1
  %3 = alloca %"class.std::__1::map", align 8
  %4 = alloca %"class.std::__1::set.97", align 8
  %5 = alloca %class.GURL, align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string.1", align 8
  %8 = alloca %"class.std::__1::basic_string.1", align 8
  %9 = alloca %"class.std::__1::basic_string.1", align 8
  %10 = alloca %"class.std::__1::basic_string.1", align 8
  %11 = alloca %"class.base::OnceCallback.201", align 8
  %12 = tail call %struct.ProcessData* @_ZN13MemoryDetails13ChromeBrowserEv(%class.MemoryDetails* %0) #12
  %13 = bitcast %"class.std::__1::map"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node_base"** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"** %14, align 8
  %19 = call %"class.content::RenderWidgetHostIterator"* @_ZN7content16RenderWidgetHost20GetRenderWidgetHostsEv() #12
  %20 = bitcast %"class.content::RenderWidgetHostIterator"* %19 to %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)***
  %21 = load %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)**, %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)*, %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)** %21, i64 2
  %23 = load %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)*, %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)** %22, align 8
  %24 = call %"class.content::RenderWidgetHost"* %23(%"class.content::RenderWidgetHostIterator"* %19) #12
  %25 = icmp eq %"class.content::RenderWidgetHost"* %24, null
  br i1 %25, label %187, label %26

26:                                               ; preds = %1
  %27 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 0, i32 0
  %29 = bitcast %"class.std::__1::map"* %3 to i64*
  br label %30

30:                                               ; preds = %26, %181
  %31 = phi %"class.content::RenderWidgetHost"* [ %24, %26 ], [ %185, %181 ]
  %32 = ptrtoint %"class.content::RenderWidgetHost"* %31 to i64
  %33 = bitcast %"class.content::RenderWidgetHost"* %31 to %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)***
  %34 = load %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)**, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)** %34, i64 14
  %36 = load %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)** %35, align 8
  %37 = call %"class.content::RenderProcessHost"* %36(%"class.content::RenderWidgetHost"* nonnull %31) #12
  %38 = bitcast %"class.content::RenderProcessHost"* %37 to i1 (%"class.content::RenderProcessHost"*)***
  %39 = load i1 (%"class.content::RenderProcessHost"*)**, i1 (%"class.content::RenderProcessHost"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.content::RenderProcessHost"*)*, i1 (%"class.content::RenderProcessHost"*)** %39, i64 26
  %41 = load i1 (%"class.content::RenderProcessHost"*)*, i1 (%"class.content::RenderProcessHost"*)** %40, align 8
  %42 = call zeroext i1 %41(%"class.content::RenderProcessHost"* %37) #12
  br i1 %42, label %43, label %181

43:                                               ; preds = %30
  %44 = load %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)**, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*** %33, align 8
  %45 = getelementptr inbounds %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)** %44, i64 14
  %46 = load %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)** %45, align 8
  %47 = call %"class.content::RenderProcessHost"* %46(%"class.content::RenderWidgetHost"* nonnull %31) #12
  %48 = bitcast %"class.content::RenderProcessHost"* %47 to %"class.base::Process"* (%"class.content::RenderProcessHost"*)***
  %49 = load %"class.base::Process"* (%"class.content::RenderProcessHost"*)**, %"class.base::Process"* (%"class.content::RenderProcessHost"*)*** %48, align 8
  %50 = getelementptr inbounds %"class.base::Process"* (%"class.content::RenderProcessHost"*)*, %"class.base::Process"* (%"class.content::RenderProcessHost"*)** %49, i64 25
  %51 = load %"class.base::Process"* (%"class.content::RenderProcessHost"*)*, %"class.base::Process"* (%"class.content::RenderProcessHost"*)** %50, align 8
  %52 = call dereferenceable(4) %"class.base::Process"* %51(%"class.content::RenderProcessHost"* %47) #12
  %53 = call i32 @_ZNK4base7Process3PidEv(%"class.base::Process"* %52) #12
  %54 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %27, align 8
  %55 = icmp eq %"class.std::__1::__tree_node"* %54, null
  br i1 %55, label %82, label %56

56:                                               ; preds = %43, %78
  %57 = phi %"class.std::__1::__tree_node"* [ %81, %78 ], [ %54, %43 ]
  %58 = phi %"class.std::__1::__tree_node_base"** [ %80, %78 ], [ %15, %43 ]
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 1, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %53, %60
  br i1 %61, label %62, label %68

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %66, label %78

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 0
  br label %82

68:                                               ; preds = %56
  %69 = icmp slt i32 %60, %53
  br i1 %69, label %70, label %76

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 1
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 0
  br label %82

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 0
  br label %82

78:                                               ; preds = %70, %62
  %79 = phi %"class.std::__1::__tree_node_base"* [ %64, %62 ], [ %72, %70 ]
  %80 = phi %"class.std::__1::__tree_node_base"** [ %63, %62 ], [ %71, %70 ]
  %81 = bitcast %"class.std::__1::__tree_node_base"* %79 to %"class.std::__1::__tree_node"*
  br label %56

82:                                               ; preds = %43, %76, %74, %66
  %83 = phi %"class.std::__1::__tree_end_node"* [ %67, %66 ], [ %75, %74 ], [ %77, %76 ], [ %17, %43 ]
  %84 = phi %"class.std::__1::__tree_node_base"** [ %63, %66 ], [ %71, %74 ], [ %58, %76 ], [ %28, %43 ]
  %85 = bitcast %"class.std::__1::__tree_node_base"** %84 to %"class.std::__1::__tree_node"**
  %86 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node"* %86, null
  br i1 %87, label %88, label %110

88:                                               ; preds = %82
  %89 = call i8* @_Znwm(i64 64) #14, !noalias !103
  %90 = getelementptr inbounds i8, i8* %89, i64 32
  %91 = bitcast i8* %90 to i32*
  store i32 %53, i32* %91, align 8, !noalias !103
  %92 = getelementptr inbounds i8, i8* %89, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 24, i1 false) #12, !noalias !103
  %93 = bitcast i8* %89 to %"class.std::__1::__tree_node"*
  %94 = bitcast i8* %89 to %"class.std::__1::__tree_node_base"*
  %95 = getelementptr inbounds i8, i8* %89, i64 16
  %96 = bitcast i8* %95 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %83, %"class.std::__1::__tree_end_node"** %96, align 8
  %97 = bitcast %"class.std::__1::__tree_node_base"** %84 to i8**
  store i8* %89, i8** %97, align 8
  %98 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 0, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %105, label %102

102:                                              ; preds = %88
  %103 = ptrtoint %"class.std::__1::__tree_node_base"* %100 to i64
  store i64 %103, i64* %29, align 8
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %84, align 8
  br label %105

105:                                              ; preds = %102, %88
  %106 = phi %"class.std::__1::__tree_node_base"* [ %94, %88 ], [ %104, %102 ]
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %107, %"class.std::__1::__tree_node_base"* %106) #12
  %108 = load i64, i64* %16, align 8
  %109 = add i64 %108, 1
  store i64 %109, i64* %16, align 8
  br label %110

110:                                              ; preds = %82, %105
  %111 = phi %"class.std::__1::__tree_node"* [ %93, %105 ], [ %86, %82 ]
  %112 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 1, i32 0, i32 1
  %113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %114 = load %"class.content::RenderWidgetHost"**, %"class.content::RenderWidgetHost"*** %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %116 = load %"class.content::RenderWidgetHost"**, %"class.content::RenderWidgetHost"*** %115, align 8
  %117 = icmp eq %"class.content::RenderWidgetHost"** %114, %116
  %118 = ptrtoint %"class.content::RenderWidgetHost"** %116 to i64
  br i1 %117, label %124, label %119

119:                                              ; preds = %110
  %120 = bitcast %"class.content::RenderWidgetHost"** %114 to i64*
  store i64 %32, i64* %120, align 8
  %121 = getelementptr inbounds %"class.content::RenderWidgetHost"*, %"class.content::RenderWidgetHost"** %114, i64 1
  %122 = ptrtoint %"class.content::RenderWidgetHost"** %121 to i64
  %123 = bitcast %"class.content::RenderWidgetHost"*** %113 to i64*
  store i64 %122, i64* %123, align 8
  br label %181

124:                                              ; preds = %110
  %125 = ptrtoint %"class.content::RenderWidgetHost"** %114 to i64
  %126 = bitcast %"class.content::RenderWidgetHost"*** %113 to i64*
  %127 = bitcast %"class.std::__1::vector.57"* %112 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = sub i64 %125, %128
  %130 = ashr exact i64 %129, 3
  %131 = add nsw i64 %130, 1
  %132 = icmp ugt i64 %131, 2305843009213693951
  br i1 %132, label %133, label %135

133:                                              ; preds = %124
  %134 = bitcast %"class.std::__1::vector.57"* %112 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %134) #13
  unreachable

135:                                              ; preds = %124
  %136 = bitcast %"class.content::RenderWidgetHost"*** %115 to i64*
  %137 = sub i64 %118, %128
  %138 = ashr exact i64 %137, 3
  %139 = icmp ult i64 %138, 1152921504606846975
  br i1 %139, label %140, label %148

140:                                              ; preds = %135
  %141 = ashr exact i64 %137, 2
  %142 = icmp ult i64 %141, %131
  %143 = select i1 %142, i64 %131, i64 %141
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %153, label %145

145:                                              ; preds = %140
  %146 = icmp ugt i64 %143, 2305843009213693951
  br i1 %146, label %147, label %148

147:                                              ; preds = %145
  call void @abort() #13
  unreachable

148:                                              ; preds = %145, %135
  %149 = phi i64 [ %143, %145 ], [ 2305843009213693951, %135 ]
  %150 = shl i64 %149, 3
  %151 = call i8* @_Znwm(i64 %150) #14
  %152 = bitcast i8* %151 to %"class.content::RenderWidgetHost"**
  br label %153

153:                                              ; preds = %148, %140
  %154 = phi i64 [ %149, %148 ], [ 0, %140 ]
  %155 = phi %"class.content::RenderWidgetHost"** [ %152, %148 ], [ null, %140 ]
  %156 = getelementptr inbounds %"class.content::RenderWidgetHost"*, %"class.content::RenderWidgetHost"** %155, i64 %130
  %157 = getelementptr inbounds %"class.content::RenderWidgetHost"*, %"class.content::RenderWidgetHost"** %155, i64 %154
  %158 = ptrtoint %"class.content::RenderWidgetHost"** %157 to i64
  %159 = bitcast %"class.content::RenderWidgetHost"** %156 to i64*
  store i64 %32, i64* %159, align 8
  %160 = getelementptr inbounds %"class.content::RenderWidgetHost"*, %"class.content::RenderWidgetHost"** %156, i64 1
  %161 = ptrtoint %"class.content::RenderWidgetHost"** %160 to i64
  %162 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %112, i64 0, i32 0, i32 0
  %163 = load %"class.content::RenderWidgetHost"**, %"class.content::RenderWidgetHost"*** %162, align 8
  %164 = load i64, i64* %126, align 8
  %165 = ptrtoint %"class.content::RenderWidgetHost"** %163 to i64
  %166 = sub i64 %164, %165
  %167 = ashr exact i64 %166, 3
  %168 = sub nsw i64 0, %167
  %169 = getelementptr inbounds %"class.content::RenderWidgetHost"*, %"class.content::RenderWidgetHost"** %156, i64 %168
  %170 = ptrtoint %"class.content::RenderWidgetHost"** %169 to i64
  %171 = icmp sgt i64 %166, 0
  br i1 %171, label %172, label %176

172:                                              ; preds = %153
  %173 = bitcast %"class.content::RenderWidgetHost"** %169 to i8*
  %174 = bitcast %"class.content::RenderWidgetHost"** %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 %166, i1 false) #12
  %175 = load %"class.content::RenderWidgetHost"**, %"class.content::RenderWidgetHost"*** %162, align 8
  br label %176

176:                                              ; preds = %172, %153
  %177 = phi %"class.content::RenderWidgetHost"** [ %163, %153 ], [ %175, %172 ]
  store i64 %170, i64* %127, align 8
  store i64 %161, i64* %126, align 8
  store i64 %158, i64* %136, align 8
  %178 = icmp eq %"class.content::RenderWidgetHost"** %177, null
  br i1 %178, label %181, label %179

179:                                              ; preds = %176
  %180 = bitcast %"class.content::RenderWidgetHost"** %177 to i8*
  call void @_ZdlPv(i8* %180) #14
  br label %181

181:                                              ; preds = %179, %176, %119, %30
  %182 = load %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)**, %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)*** %20, align 8
  %183 = getelementptr inbounds %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)*, %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)** %182, i64 2
  %184 = load %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)*, %"class.content::RenderWidgetHost"* (%"class.content::RenderWidgetHostIterator"*)** %183, align 8
  %185 = call %"class.content::RenderWidgetHost"* %184(%"class.content::RenderWidgetHostIterator"* %19) #12
  %186 = icmp eq %"class.content::RenderWidgetHost"* %185, null
  br i1 %186, label %187, label %30

187:                                              ; preds = %181, %1
  %188 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %12, i64 0, i32 2
  %189 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %188, i64 0, i32 0, i32 0
  %190 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %189, align 8
  %191 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %12, i64 0, i32 2, i32 0, i32 1
  %192 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %191, align 8
  %193 = icmp eq %struct.ProcessMemoryInformation* %190, %192
  br i1 %193, label %247, label %194

194:                                              ; preds = %187
  %195 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %196 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 0, i32 0
  %197 = bitcast %"class.std::__1::map"* %3 to i64*
  %198 = bitcast %"class.std::__1::set.97"* %4 to i8*
  %199 = getelementptr inbounds %"class.std::__1::set.97", %"class.std::__1::set.97"* %4, i64 0, i32 0, i32 0
  %200 = getelementptr inbounds %"class.std::__1::set.97", %"class.std::__1::set.97"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %201 = getelementptr inbounds %"class.std::__1::set.97", %"class.std::__1::set.97"* %4, i64 0, i32 0
  %202 = bitcast %"class.std::__1::__tree_end_node"* %200 to %"class.std::__1::__tree_node.278"**
  %203 = bitcast %class.GURL* %5 to i8*
  %204 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %205 = getelementptr inbounds %class.GURL, %class.GURL* %5, i64 0, i32 2, i32 3, i32 1
  %206 = getelementptr inbounds %class.GURL, %class.GURL* %5, i64 0, i32 0
  %207 = getelementptr inbounds %class.GURL, %class.GURL* %5, i64 0, i32 2, i32 3, i32 0
  %208 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %2, i64 0, i32 0
  %209 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %209, i64 0, i32 1, i32 0
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  %213 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %215 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %215, i64 0, i32 1, i32 1
  %217 = bitcast %"class.std::__1::basic_string.1"* %7 to i8**
  %218 = bitcast %"class.std::__1::basic_string.1"* %9 to i8*
  %219 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %221 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %222 = bitcast %"class.std::__1::basic_string.1"* %9 to i8**
  %223 = bitcast %"class.std::__1::basic_string.1"* %9 to i16*
  %224 = bitcast %"class.std::__1::basic_string.1"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %225 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %224, i64 0, i32 1, i32 1
  %226 = bitcast %"class.std::__1::basic_string.1"* %10 to i8*
  %227 = bitcast %"class.std::__1::basic_string.1"* %8 to i8*
  %228 = bitcast %"class.std::__1::basic_string.1"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %229 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %228, i64 0, i32 1, i32 1
  %230 = bitcast %"class.std::__1::basic_string.1"* %8 to i8**
  %231 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  %232 = bitcast %"class.std::__1::basic_string.1"* %9 to i8*
  br label %328

233:                                              ; preds = %1307
  %234 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %189, align 8
  %235 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %191, align 8
  %236 = icmp eq %struct.ProcessMemoryInformation* %234, %235
  br i1 %236, label %247, label %237

237:                                              ; preds = %233, %242
  %238 = phi %struct.ProcessMemoryInformation* [ %243, %242 ], [ %234, %233 ]
  %239 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %238, i64 0, i32 4
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 1
  br i1 %241, label %250, label %242

242:                                              ; preds = %237
  %243 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %238, i64 1
  %244 = icmp eq %struct.ProcessMemoryInformation* %243, %235
  br i1 %244, label %245, label %237

245:                                              ; preds = %242
  %246 = ptrtoint %struct.ProcessMemoryInformation* %235 to i64
  br label %297

247:                                              ; preds = %233, %187
  %248 = phi %struct.ProcessMemoryInformation* [ %235, %233 ], [ %190, %187 ]
  %249 = ptrtoint %struct.ProcessMemoryInformation* %248 to i64
  br label %297

250:                                              ; preds = %237
  %251 = ptrtoint %struct.ProcessMemoryInformation* %238 to i64
  %252 = icmp eq %struct.ProcessMemoryInformation* %238, %235
  br i1 %252, label %297, label %253

253:                                              ; preds = %250
  %254 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %238, i64 1
  %255 = icmp eq %struct.ProcessMemoryInformation* %254, %235
  br i1 %255, label %297, label %256

256:                                              ; preds = %253, %291
  %257 = phi %struct.ProcessMemoryInformation* [ %293, %291 ], [ %254, %253 ]
  %258 = phi %struct.ProcessMemoryInformation* [ %257, %291 ], [ %238, %253 ]
  %259 = phi i64 [ %292, %291 ], [ %251, %253 ]
  %260 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %258, i64 1, i32 4
  %261 = load i32, i32* %260, align 4
  %262 = icmp eq i32 %261, 1
  br i1 %262, label %291, label %263

263:                                              ; preds = %256
  %264 = inttoptr i64 %259 to %struct.ProcessMemoryInformation*
  %265 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %257, i64 0, i32 0
  %266 = load i32, i32* %265, align 8
  %267 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %264, i64 0, i32 0
  store i32 %266, i32* %267, align 8
  %268 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %264, i64 0, i32 1
  %269 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %258, i64 1, i32 1
  %270 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %268, %"class.std::__1::basic_string.1"* dereferenceable(24) %269) #12
  %271 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %264, i64 0, i32 2
  %272 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %258, i64 1, i32 2
  %273 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %271, %"class.std::__1::basic_string.1"* dereferenceable(24) %272) #12
  %274 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %264, i64 0, i32 3
  %275 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %258, i64 1, i32 3
  %276 = bitcast i32* %274 to i8*
  %277 = bitcast i32* %275 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %276, i8* align 8 %277, i64 20, i1 false) #12
  %278 = icmp eq %struct.ProcessMemoryInformation* %257, %264
  br i1 %278, label %285, label %279

279:                                              ; preds = %263
  %280 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %264, i64 0, i32 8
  %281 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %258, i64 1, i32 8, i32 0, i32 0
  %282 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %281, align 8
  %283 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %258, i64 1, i32 8, i32 0, i32 1
  %284 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %283, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %280, %"class.std::__1::basic_string.1"* %282, %"class.std::__1::basic_string.1"* %284) #12
  br label %285

285:                                              ; preds = %279, %263
  %286 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %258, i64 1, i32 9
  %287 = load i64, i64* %286, align 8
  %288 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %264, i64 0, i32 9
  store i64 %287, i64* %288, align 8
  %289 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %264, i64 1
  %290 = ptrtoint %struct.ProcessMemoryInformation* %289 to i64
  br label %291

291:                                              ; preds = %285, %256
  %292 = phi i64 [ %259, %256 ], [ %290, %285 ]
  %293 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %257, i64 1
  %294 = icmp eq %struct.ProcessMemoryInformation* %293, %235
  br i1 %294, label %295, label %256

295:                                              ; preds = %291
  %296 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %191, align 8
  br label %297

297:                                              ; preds = %247, %295, %253, %250, %245
  %298 = phi %struct.ProcessMemoryInformation* [ %235, %250 ], [ %235, %245 ], [ %235, %253 ], [ %296, %295 ], [ %248, %247 ]
  %299 = phi i64 [ %251, %250 ], [ %246, %245 ], [ %251, %253 ], [ %292, %295 ], [ %249, %247 ]
  %300 = inttoptr i64 %299 to %struct.ProcessMemoryInformation*
  %301 = icmp eq %struct.ProcessMemoryInformation* %298, %300
  br i1 %301, label %303, label %302

302:                                              ; preds = %297
  call void @_ZNSt3__16vectorI24ProcessMemoryInformationNS_9allocatorIS1_EEE17__destruct_at_endEPS1_(%"class.std::__1::vector.15"* %188, %struct.ProcessMemoryInformation* %300) #12
  br label %303

303:                                              ; preds = %297, %302
  %304 = call %"class.memory_instrumentation::MemoryInstrumentation"* @_ZN22memory_instrumentation21MemoryInstrumentation11GetInstanceEv() #12
  %305 = call i8* @_Znwm(i64 56) #14, !noalias !106
  %306 = bitcast i8* %305 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %306, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1, %"class.std::__1::unique_ptr.202"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM13MemoryDetailsFvbNSt3__110unique_ptrIN22memory_instrumentation16GlobalMemoryDumpENS4_14default_deleteIS7_EEEEEJ13scoped_refptrIS3_EEEEFvbSA_EE7RunOnceEPNS0_13BindStateBaseEbOSA_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM13MemoryDetailsFvbNSt3__110unique_ptrIN22memory_instrumentation16GlobalMemoryDumpENS3_14default_deleteIS6_EEEEEJ13scoped_refptrIS2_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !106
  %307 = getelementptr inbounds i8, i8* %305, i64 32
  %308 = bitcast i8* %307 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.MemoryDetails*, i1, %"class.memory_instrumentation::GlobalMemoryDump"*)* @_ZN13MemoryDetails20DidReceiveMemoryDumpEbNSt3__110unique_ptrIN22memory_instrumentation16GlobalMemoryDumpENS0_14default_deleteIS3_EEEE to i64), i64 0>, <2 x i64>* %308, align 8, !noalias !106
  %309 = getelementptr inbounds i8, i8* %305, i64 48
  %310 = bitcast i8* %309 to %class.MemoryDetails**
  store %class.MemoryDetails* %0, %class.MemoryDetails** %310, align 8, !noalias !106
  %311 = icmp eq %class.MemoryDetails* %0, null
  br i1 %311, label %315, label %312

312:                                              ; preds = %303
  %313 = getelementptr inbounds %class.MemoryDetails, %class.MemoryDetails* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = atomicrmw add i32* %313, i32 1 monotonic, !noalias !106
  br label %315

315:                                              ; preds = %303, %312
  %316 = bitcast %"class.base::OnceCallback.201"* %11 to i8**
  store i8* %305, i8** %316, align 8, !alias.scope !106
  call void @_ZN22memory_instrumentation21MemoryInstrumentation29RequestPrivateMemoryFootprintEiN4base12OnceCallbackIFvbNSt3__110unique_ptrINS_16GlobalMemoryDumpENS3_14default_deleteIS5_EEEEEEE(%"class.memory_instrumentation::MemoryInstrumentation"* %304, i32 0, %"class.base::OnceCallback.201"* nonnull %11) #12
  %317 = getelementptr inbounds %"class.base::OnceCallback.201", %"class.base::OnceCallback.201"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %317) #12
  %318 = icmp eq %"class.content::RenderWidgetHostIterator"* %19, null
  br i1 %318, label %324, label %319

319:                                              ; preds = %315
  %320 = bitcast %"class.content::RenderWidgetHostIterator"* %19 to void (%"class.content::RenderWidgetHostIterator"*)***
  %321 = load void (%"class.content::RenderWidgetHostIterator"*)**, void (%"class.content::RenderWidgetHostIterator"*)*** %320, align 8
  %322 = getelementptr inbounds void (%"class.content::RenderWidgetHostIterator"*)*, void (%"class.content::RenderWidgetHostIterator"*)** %321, i64 1
  %323 = load void (%"class.content::RenderWidgetHostIterator"*)*, void (%"class.content::RenderWidgetHostIterator"*)** %322, align 8
  call void %323(%"class.content::RenderWidgetHostIterator"* nonnull %19) #12
  br label %324

324:                                              ; preds = %315, %319
  %325 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0
  %326 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %327 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %326, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPN7content16RenderWidgetHostENS_9allocatorIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS6_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* nonnull %325, %"class.std::__1::__tree_node"* %327) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  ret void

328:                                              ; preds = %194, %1307
  %329 = phi %struct.ProcessMemoryInformation* [ %190, %194 ], [ %1308, %1307 ]
  %330 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %329, i64 0, i32 0
  %331 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %195, align 8
  %332 = icmp eq %"class.std::__1::__tree_node"* %331, null
  br i1 %332, label %361, label %333

333:                                              ; preds = %328
  %334 = load i32, i32* %330, align 4
  br label %335

335:                                              ; preds = %357, %333
  %336 = phi %"class.std::__1::__tree_node"* [ %360, %357 ], [ %331, %333 ]
  %337 = phi %"class.std::__1::__tree_node_base"** [ %359, %357 ], [ %15, %333 ]
  %338 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %336, i64 0, i32 1, i32 0, i32 0
  %339 = load i32, i32* %338, align 4
  %340 = icmp slt i32 %334, %339
  br i1 %340, label %341, label %347

341:                                              ; preds = %335
  %342 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %336, i64 0, i32 0, i32 0, i32 0
  %343 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %342, align 8
  %344 = icmp eq %"class.std::__1::__tree_node_base"* %343, null
  br i1 %344, label %345, label %357

345:                                              ; preds = %341
  %346 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %336, i64 0, i32 0, i32 0
  br label %361

347:                                              ; preds = %335
  %348 = icmp slt i32 %339, %334
  br i1 %348, label %349, label %355

349:                                              ; preds = %347
  %350 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %336, i64 0, i32 0, i32 1
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = icmp eq %"class.std::__1::__tree_node_base"* %351, null
  br i1 %352, label %353, label %357

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %336, i64 0, i32 0, i32 0
  br label %361

355:                                              ; preds = %347
  %356 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %336, i64 0, i32 0, i32 0
  br label %361

357:                                              ; preds = %349, %341
  %358 = phi %"class.std::__1::__tree_node_base"* [ %343, %341 ], [ %351, %349 ]
  %359 = phi %"class.std::__1::__tree_node_base"** [ %342, %341 ], [ %350, %349 ]
  %360 = bitcast %"class.std::__1::__tree_node_base"* %358 to %"class.std::__1::__tree_node"*
  br label %335

361:                                              ; preds = %328, %355, %353, %345
  %362 = phi %"class.std::__1::__tree_end_node"* [ %346, %345 ], [ %354, %353 ], [ %356, %355 ], [ %17, %328 ]
  %363 = phi %"class.std::__1::__tree_node_base"** [ %342, %345 ], [ %350, %353 ], [ %337, %355 ], [ %196, %328 ]
  %364 = bitcast %"class.std::__1::__tree_node_base"** %363 to %"class.std::__1::__tree_node"**
  %365 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %364, align 8
  %366 = icmp eq %"class.std::__1::__tree_node"* %365, null
  br i1 %366, label %367, label %390

367:                                              ; preds = %361
  %368 = call i8* @_Znwm(i64 64) #14, !noalias !111
  %369 = getelementptr inbounds i8, i8* %368, i64 32
  %370 = bitcast i8* %369 to i32*
  %371 = load i32, i32* %330, align 4, !noalias !111
  store i32 %371, i32* %370, align 8, !noalias !111
  %372 = getelementptr inbounds i8, i8* %368, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %372, i8 0, i64 24, i1 false) #12, !noalias !111
  %373 = bitcast i8* %368 to %"class.std::__1::__tree_node"*
  %374 = bitcast i8* %368 to %"class.std::__1::__tree_node_base"*
  %375 = getelementptr inbounds i8, i8* %368, i64 16
  %376 = bitcast i8* %375 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %368, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %362, %"class.std::__1::__tree_end_node"** %376, align 8
  %377 = bitcast %"class.std::__1::__tree_node_base"** %363 to i8**
  store i8* %368, i8** %377, align 8
  %378 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %378, i64 0, i32 0
  %380 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %379, align 8
  %381 = icmp eq %"class.std::__1::__tree_node_base"* %380, null
  br i1 %381, label %385, label %382

382:                                              ; preds = %367
  %383 = ptrtoint %"class.std::__1::__tree_node_base"* %380 to i64
  store i64 %383, i64* %197, align 8
  %384 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %363, align 8
  br label %385

385:                                              ; preds = %382, %367
  %386 = phi %"class.std::__1::__tree_node_base"* [ %374, %367 ], [ %384, %382 ]
  %387 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %387, %"class.std::__1::__tree_node_base"* %386) #12
  %388 = load i64, i64* %16, align 8
  %389 = add i64 %388, 1
  store i64 %389, i64* %16, align 8
  br label %390

390:                                              ; preds = %361, %385
  %391 = phi %"class.std::__1::__tree_node"* [ %373, %385 ], [ %365, %361 ]
  %392 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %391, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %393 = load %"class.content::RenderWidgetHost"**, %"class.content::RenderWidgetHost"*** %392, align 8
  %394 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %391, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %395 = load %"class.content::RenderWidgetHost"**, %"class.content::RenderWidgetHost"*** %394, align 8
  %396 = icmp eq %"class.content::RenderWidgetHost"** %393, %395
  br i1 %396, label %530, label %397

397:                                              ; preds = %390
  %398 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %329, i64 0, i32 4
  store i32 3, i32* %398, align 4
  %399 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %329, i64 0, i32 7
  store i32 1, i32* %399, align 8
  %400 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %195, align 8
  %401 = icmp eq %"class.std::__1::__tree_node"* %400, null
  br i1 %401, label %430, label %402

402:                                              ; preds = %397
  %403 = load i32, i32* %330, align 4
  br label %404

404:                                              ; preds = %426, %402
  %405 = phi %"class.std::__1::__tree_node"* [ %429, %426 ], [ %400, %402 ]
  %406 = phi %"class.std::__1::__tree_node_base"** [ %428, %426 ], [ %15, %402 ]
  %407 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %405, i64 0, i32 1, i32 0, i32 0
  %408 = load i32, i32* %407, align 4
  %409 = icmp slt i32 %403, %408
  br i1 %409, label %410, label %416

410:                                              ; preds = %404
  %411 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %405, i64 0, i32 0, i32 0, i32 0
  %412 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %411, align 8
  %413 = icmp eq %"class.std::__1::__tree_node_base"* %412, null
  br i1 %413, label %414, label %426

414:                                              ; preds = %410
  %415 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %405, i64 0, i32 0, i32 0
  br label %430

416:                                              ; preds = %404
  %417 = icmp slt i32 %408, %403
  br i1 %417, label %418, label %424

418:                                              ; preds = %416
  %419 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %405, i64 0, i32 0, i32 1
  %420 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %419, align 8
  %421 = icmp eq %"class.std::__1::__tree_node_base"* %420, null
  br i1 %421, label %422, label %426

422:                                              ; preds = %418
  %423 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %405, i64 0, i32 0, i32 0
  br label %430

424:                                              ; preds = %416
  %425 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %405, i64 0, i32 0, i32 0
  br label %430

426:                                              ; preds = %418, %410
  %427 = phi %"class.std::__1::__tree_node_base"* [ %412, %410 ], [ %420, %418 ]
  %428 = phi %"class.std::__1::__tree_node_base"** [ %411, %410 ], [ %419, %418 ]
  %429 = bitcast %"class.std::__1::__tree_node_base"* %427 to %"class.std::__1::__tree_node"*
  br label %404

430:                                              ; preds = %397, %424, %422, %414
  %431 = phi %"class.std::__1::__tree_end_node"* [ %415, %414 ], [ %423, %422 ], [ %425, %424 ], [ %17, %397 ]
  %432 = phi %"class.std::__1::__tree_node_base"** [ %411, %414 ], [ %419, %422 ], [ %406, %424 ], [ %196, %397 ]
  %433 = bitcast %"class.std::__1::__tree_node_base"** %432 to %"class.std::__1::__tree_node"**
  %434 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %433, align 8
  %435 = icmp eq %"class.std::__1::__tree_node"* %434, null
  br i1 %435, label %436, label %459

436:                                              ; preds = %430
  %437 = call i8* @_Znwm(i64 64) #14, !noalias !114
  %438 = getelementptr inbounds i8, i8* %437, i64 32
  %439 = bitcast i8* %438 to i32*
  %440 = load i32, i32* %330, align 4, !noalias !114
  store i32 %440, i32* %439, align 8, !noalias !114
  %441 = getelementptr inbounds i8, i8* %437, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %441, i8 0, i64 24, i1 false) #12, !noalias !114
  %442 = bitcast i8* %437 to %"class.std::__1::__tree_node"*
  %443 = bitcast i8* %437 to %"class.std::__1::__tree_node_base"*
  %444 = getelementptr inbounds i8, i8* %437, i64 16
  %445 = bitcast i8* %444 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %437, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %431, %"class.std::__1::__tree_end_node"** %445, align 8
  %446 = bitcast %"class.std::__1::__tree_node_base"** %432 to i8**
  store i8* %437, i8** %446, align 8
  %447 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %448 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %447, i64 0, i32 0
  %449 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %448, align 8
  %450 = icmp eq %"class.std::__1::__tree_node_base"* %449, null
  br i1 %450, label %454, label %451

451:                                              ; preds = %436
  %452 = ptrtoint %"class.std::__1::__tree_node_base"* %449 to i64
  store i64 %452, i64* %197, align 8
  %453 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %432, align 8
  br label %454

454:                                              ; preds = %451, %436
  %455 = phi %"class.std::__1::__tree_node_base"* [ %443, %436 ], [ %453, %451 ]
  %456 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %456, %"class.std::__1::__tree_node_base"* %455) #12
  %457 = load i64, i64* %16, align 8
  %458 = add i64 %457, 1
  store i64 %458, i64* %16, align 8
  br label %459

459:                                              ; preds = %454, %430
  %460 = phi %"class.std::__1::__tree_node"* [ %442, %454 ], [ %434, %430 ]
  %461 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %460, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %462 = load %"class.content::RenderWidgetHost"**, %"class.content::RenderWidgetHost"*** %461, align 8
  %463 = load %"class.content::RenderWidgetHost"*, %"class.content::RenderWidgetHost"** %462, align 8
  %464 = bitcast %"class.content::RenderWidgetHost"* %463 to %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)***
  %465 = load %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)**, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*** %464, align 8
  %466 = getelementptr inbounds %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)** %465, i64 14
  %467 = load %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)** %466, align 8
  %468 = call %"class.content::RenderProcessHost"* %467(%"class.content::RenderWidgetHost"* %463) #12
  %469 = icmp eq %"class.content::RenderProcessHost"* %468, null
  br i1 %469, label %530, label %470

470:                                              ; preds = %459
  %471 = bitcast %"class.content::RenderProcessHost"* %468 to %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)***
  %472 = load %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)**, %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)*** %471, align 8
  %473 = getelementptr inbounds %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)*, %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)** %472, i64 27
  %474 = load %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)*, %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)** %473, align 8
  %475 = call %"class.content::BrowserContext"* %474(%"class.content::RenderProcessHost"* nonnull %468) #12
  %476 = call %"class.extensions::ExtensionRegistry"* @_ZN10extensions17ExtensionRegistry3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %475) #12
  %477 = call %"class.extensions::ProcessMap"* @_ZN10extensions10ProcessMap3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %475) #12
  %478 = bitcast %"class.content::RenderProcessHost"* %468 to i32 (%"class.content::RenderProcessHost"*)***
  %479 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %478, align 8
  %480 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %479, i64 29
  %481 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %480, align 8
  %482 = call i32 %481(%"class.content::RenderProcessHost"* nonnull %468) #12
  %483 = call zeroext i1 @_ZNK10extensions10ProcessMap8ContainsEi(%"class.extensions::ProcessMap"* %477, i32 %482) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %198) #12
  call void @_ZNK10extensions10ProcessMap22GetExtensionsInProcessEi(%"class.std::__1::set.97"* nonnull sret %4, %"class.extensions::ProcessMap"* %477, i32 %482) #12
  %484 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %199, align 8
  %485 = icmp eq %"class.std::__1::__tree_end_node"* %484, %200
  br i1 %485, label %528, label %486

486:                                              ; preds = %470
  %487 = getelementptr inbounds %"class.extensions::ExtensionRegistry", %"class.extensions::ExtensionRegistry"* %476, i64 0, i32 1
  br label %488

488:                                              ; preds = %486, %525
  %489 = phi %"class.std::__1::__tree_end_node"* [ %484, %486 ], [ %526, %525 ]
  %490 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %489, i64 4
  %491 = bitcast %"class.std::__1::__tree_end_node"* %490 to %"class.std::__1::basic_string"*
  %492 = call %"class.extensions::Extension"* @_ZNK10extensions12ExtensionSet7GetByIDERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionSet"* %487, %"class.std::__1::basic_string"* dereferenceable(24) %491) #12
  %493 = icmp eq %"class.extensions::Extension"* %492, null
  br i1 %493, label %497, label %494

494:                                              ; preds = %488
  %495 = call zeroext i1 @_ZNK10extensions9Extension13is_hosted_appEv(%"class.extensions::Extension"* nonnull %492) #12
  br i1 %495, label %497, label %496

496:                                              ; preds = %494
  store i32 3, i32* %399, align 8
  br label %528

497:                                              ; preds = %488, %494
  %498 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %489, i64 1, i32 0
  %499 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %498, align 8
  %500 = icmp eq %"class.std::__1::__tree_node_base"* %499, null
  br i1 %500, label %501, label %509

501:                                              ; preds = %497
  %502 = bitcast %"class.std::__1::__tree_end_node"* %489 to %"class.std::__1::__tree_node_base"*
  %503 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %489, i64 2
  %504 = bitcast %"class.std::__1::__tree_end_node"* %503 to %"class.std::__1::__tree_end_node"**
  %505 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %504, align 8
  %506 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %505, i64 0, i32 0
  %507 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %506, align 8
  %508 = icmp eq %"class.std::__1::__tree_node_base"* %507, %502
  br i1 %508, label %525, label %516

509:                                              ; preds = %497, %509
  %510 = phi %"class.std::__1::__tree_node_base"* [ %512, %509 ], [ %499, %497 ]
  %511 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %510, i64 0, i32 0, i32 0
  %512 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %511, align 8
  %513 = icmp eq %"class.std::__1::__tree_node_base"* %512, null
  br i1 %513, label %514, label %509

514:                                              ; preds = %509
  %515 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %510, i64 0, i32 0
  br label %525

516:                                              ; preds = %501, %516
  %517 = phi %"class.std::__1::__tree_end_node"** [ %520, %516 ], [ %504, %501 ]
  %518 = bitcast %"class.std::__1::__tree_end_node"** %517 to %"class.std::__1::__tree_node_base"**
  %519 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %518, align 8
  %520 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %519, i64 0, i32 2
  %521 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %520, align 8
  %522 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %521, i64 0, i32 0
  %523 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %522, align 8
  %524 = icmp eq %"class.std::__1::__tree_node_base"* %523, %519
  br i1 %524, label %525, label %516

525:                                              ; preds = %516, %501, %514
  %526 = phi %"class.std::__1::__tree_end_node"* [ %515, %514 ], [ %505, %501 ], [ %521, %516 ]
  %527 = icmp eq %"class.std::__1::__tree_end_node"* %526, %200
  br i1 %527, label %528, label %488

528:                                              ; preds = %525, %470, %496
  %529 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %202, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.98"* nonnull %201, %"class.std::__1::__tree_node.278"* %529) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %198) #12
  br label %530

530:                                              ; preds = %390, %459, %528
  %531 = phi %"class.content::RenderProcessHost"* [ %468, %528 ], [ null, %459 ], [ null, %390 ]
  %532 = phi i1 [ %483, %528 ], [ false, %459 ], [ false, %390 ]
  %533 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %195, align 8
  %534 = icmp eq %"class.std::__1::__tree_node"* %533, null
  br i1 %534, label %563, label %535

535:                                              ; preds = %530
  %536 = load i32, i32* %330, align 4
  br label %537

537:                                              ; preds = %559, %535
  %538 = phi %"class.std::__1::__tree_node"* [ %562, %559 ], [ %533, %535 ]
  %539 = phi %"class.std::__1::__tree_node_base"** [ %561, %559 ], [ %15, %535 ]
  %540 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %538, i64 0, i32 1, i32 0, i32 0
  %541 = load i32, i32* %540, align 4
  %542 = icmp slt i32 %536, %541
  br i1 %542, label %543, label %549

543:                                              ; preds = %537
  %544 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %538, i64 0, i32 0, i32 0, i32 0
  %545 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %544, align 8
  %546 = icmp eq %"class.std::__1::__tree_node_base"* %545, null
  br i1 %546, label %547, label %559

547:                                              ; preds = %543
  %548 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %538, i64 0, i32 0, i32 0
  br label %563

549:                                              ; preds = %537
  %550 = icmp slt i32 %541, %536
  br i1 %550, label %551, label %557

551:                                              ; preds = %549
  %552 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %538, i64 0, i32 0, i32 1
  %553 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %552, align 8
  %554 = icmp eq %"class.std::__1::__tree_node_base"* %553, null
  br i1 %554, label %555, label %559

555:                                              ; preds = %551
  %556 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %538, i64 0, i32 0, i32 0
  br label %563

557:                                              ; preds = %549
  %558 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %538, i64 0, i32 0, i32 0
  br label %563

559:                                              ; preds = %551, %543
  %560 = phi %"class.std::__1::__tree_node_base"* [ %545, %543 ], [ %553, %551 ]
  %561 = phi %"class.std::__1::__tree_node_base"** [ %544, %543 ], [ %552, %551 ]
  %562 = bitcast %"class.std::__1::__tree_node_base"* %560 to %"class.std::__1::__tree_node"*
  br label %537

563:                                              ; preds = %530, %557, %555, %547
  %564 = phi %"class.std::__1::__tree_end_node"* [ %548, %547 ], [ %556, %555 ], [ %558, %557 ], [ %17, %530 ]
  %565 = phi %"class.std::__1::__tree_node_base"** [ %544, %547 ], [ %552, %555 ], [ %539, %557 ], [ %196, %530 ]
  %566 = bitcast %"class.std::__1::__tree_node_base"** %565 to %"class.std::__1::__tree_node"**
  %567 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %566, align 8
  %568 = icmp eq %"class.std::__1::__tree_node"* %567, null
  br i1 %568, label %569, label %592

569:                                              ; preds = %563
  %570 = call i8* @_Znwm(i64 64) #14, !noalias !117
  %571 = getelementptr inbounds i8, i8* %570, i64 32
  %572 = bitcast i8* %571 to i32*
  %573 = load i32, i32* %330, align 4, !noalias !117
  store i32 %573, i32* %572, align 8, !noalias !117
  %574 = getelementptr inbounds i8, i8* %570, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %574, i8 0, i64 24, i1 false) #12, !noalias !117
  %575 = bitcast i8* %570 to %"class.std::__1::__tree_node"*
  %576 = bitcast i8* %570 to %"class.std::__1::__tree_node_base"*
  %577 = getelementptr inbounds i8, i8* %570, i64 16
  %578 = bitcast i8* %577 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %570, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %564, %"class.std::__1::__tree_end_node"** %578, align 8
  %579 = bitcast %"class.std::__1::__tree_node_base"** %565 to i8**
  store i8* %570, i8** %579, align 8
  %580 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %581 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %580, i64 0, i32 0
  %582 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %581, align 8
  %583 = icmp eq %"class.std::__1::__tree_node_base"* %582, null
  br i1 %583, label %587, label %584

584:                                              ; preds = %569
  %585 = ptrtoint %"class.std::__1::__tree_node_base"* %582 to i64
  store i64 %585, i64* %197, align 8
  %586 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %565, align 8
  br label %587

587:                                              ; preds = %584, %569
  %588 = phi %"class.std::__1::__tree_node_base"* [ %576, %569 ], [ %586, %584 ]
  %589 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %589, %"class.std::__1::__tree_node_base"* %588) #12
  %590 = load i64, i64* %16, align 8
  %591 = add i64 %590, 1
  store i64 %591, i64* %16, align 8
  br label %592

592:                                              ; preds = %563, %587
  %593 = phi %"class.std::__1::__tree_node"* [ %575, %587 ], [ %567, %563 ]
  %594 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %593, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %595 = load %"class.content::RenderWidgetHost"**, %"class.content::RenderWidgetHost"*** %594, align 8
  %596 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %593, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %597 = load %"class.content::RenderWidgetHost"**, %"class.content::RenderWidgetHost"*** %596, align 8
  %598 = icmp eq %"class.content::RenderWidgetHost"** %595, %597
  br i1 %598, label %606, label %599

599:                                              ; preds = %592
  %600 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %329, i64 0, i32 7
  %601 = bitcast %"class.content::RenderProcessHost"* %531 to %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)***
  %602 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %329, i64 0, i32 8, i32 0, i32 1
  %603 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %329, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %604 = bitcast %"class.std::__1::basic_string.1"** %602 to i64*
  %605 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %329, i64 0, i32 8
  br label %614

606:                                              ; preds = %1302, %592
  %607 = call %"class.content::ZygoteHost"* @_ZN7content10ZygoteHost11GetInstanceEv() #12
  %608 = load i32, i32* %330, align 8
  %609 = bitcast %"class.content::ZygoteHost"* %607 to i1 (%"class.content::ZygoteHost"*, i32)***
  %610 = load i1 (%"class.content::ZygoteHost"*, i32)**, i1 (%"class.content::ZygoteHost"*, i32)*** %609, align 8
  %611 = getelementptr inbounds i1 (%"class.content::ZygoteHost"*, i32)*, i1 (%"class.content::ZygoteHost"*, i32)** %610, i64 2
  %612 = load i1 (%"class.content::ZygoteHost"*, i32)*, i1 (%"class.content::ZygoteHost"*, i32)** %611, align 8
  %613 = call zeroext i1 %612(%"class.content::ZygoteHost"* %607, i32 %608) #12
  br i1 %613, label %1305, label %1307

614:                                              ; preds = %599, %1302
  %615 = phi %"class.content::RenderWidgetHost"** [ %595, %599 ], [ %1303, %1302 ]
  %616 = load %"class.content::RenderWidgetHost"*, %"class.content::RenderWidgetHost"** %615, align 8
  %617 = call %"class.content::RenderViewHost"* @_ZN7content14RenderViewHost4FromEPNS_16RenderWidgetHostE(%"class.content::RenderWidgetHost"* %616) #12
  %618 = icmp eq %"class.content::RenderViewHost"* %617, null
  br i1 %618, label %1302, label %619

619:                                              ; preds = %614
  %620 = call %"class.content::WebContents"* @_ZN7content11WebContents18FromRenderViewHostEPNS_14RenderViewHostE(%"class.content::RenderViewHost"* nonnull %617) #12
  %621 = icmp eq %"class.content::WebContents"* %620, null
  br i1 %621, label %622, label %623

622:                                              ; preds = %619
  store i32 5, i32* %600, align 8
  br label %1302

623:                                              ; preds = %619
  %624 = bitcast %"class.content::WebContents"* %620 to %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)***
  %625 = load %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)**, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*** %624, align 8
  %626 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)** %625, i64 10
  %627 = load %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)** %626, align 8
  %628 = call %"class.content::RenderFrameHost"* %627(%"class.content::WebContents"* nonnull %620) #12
  %629 = bitcast %"class.content::RenderFrameHost"* %628 to %"class.content::RenderViewHost"* (%"class.content::RenderFrameHost"*)***
  %630 = load %"class.content::RenderViewHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderViewHost"* (%"class.content::RenderFrameHost"*)*** %629, align 8
  %631 = getelementptr inbounds %"class.content::RenderViewHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderViewHost"* (%"class.content::RenderFrameHost"*)** %630, i64 52
  %632 = load %"class.content::RenderViewHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderViewHost"* (%"class.content::RenderFrameHost"*)** %631, align 8
  %633 = call %"class.content::RenderViewHost"* %632(%"class.content::RenderFrameHost"* %628) #12
  %634 = icmp eq %"class.content::RenderViewHost"* %617, %633
  br i1 %634, label %635, label %1302

635:                                              ; preds = %623
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %203) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %203, i8 -86, i64 120, i1 false)
  %636 = bitcast %"class.content::WebContents"* %620 to %class.GURL* (%"class.content::WebContents"*)***
  %637 = load %class.GURL* (%"class.content::WebContents"*)**, %class.GURL* (%"class.content::WebContents"*)*** %636, align 8
  %638 = getelementptr inbounds %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %637, i64 9
  %639 = load %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %638, align 8
  %640 = call dereferenceable(120) %class.GURL* %639(%"class.content::WebContents"* nonnull %620) #12
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %5, %class.GURL* dereferenceable(120) %640) #12
  %641 = bitcast %"class.content::RenderViewHost"* %617 to %"class.content::RenderFrameHost"* (%"class.content::RenderViewHost"*)***
  %642 = load %"class.content::RenderFrameHost"* (%"class.content::RenderViewHost"*)**, %"class.content::RenderFrameHost"* (%"class.content::RenderViewHost"*)*** %641, align 8
  %643 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::RenderViewHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderViewHost"*)** %642, i64 5
  %644 = load %"class.content::RenderFrameHost"* (%"class.content::RenderViewHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderViewHost"*)** %643, align 8
  %645 = call %"class.content::RenderFrameHost"* %644(%"class.content::RenderViewHost"* nonnull %617) #12
  %646 = bitcast %"class.content::RenderFrameHost"* %645 to i32 (%"class.content::RenderFrameHost"*)***
  %647 = load i32 (%"class.content::RenderFrameHost"*)**, i32 (%"class.content::RenderFrameHost"*)*** %646, align 8
  %648 = getelementptr inbounds i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %647, i64 67
  %649 = load i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %648, align 8
  %650 = call i32 %649(%"class.content::RenderFrameHost"* %645) #12
  %651 = and i32 %650, 1
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %654, label %653

653:                                              ; preds = %635
  store i32 2, i32* %600, align 8
  br label %883

654:                                              ; preds = %635
  br i1 %532, label %655, label %883

655:                                              ; preds = %654
  %656 = load %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)**, %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)*** %601, align 8
  %657 = getelementptr inbounds %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)*, %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)** %656, i64 27
  %658 = load %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)*, %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)** %657, align 8
  %659 = call %"class.content::BrowserContext"* %658(%"class.content::RenderProcessHost"* %531) #12
  %660 = call %"class.extensions::ExtensionRegistry"* @_ZN10extensions17ExtensionRegistry3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %659) #12
  %661 = getelementptr inbounds %"class.extensions::ExtensionRegistry", %"class.extensions::ExtensionRegistry"* %660, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #12
  %662 = load i32, i32* %205, align 4, !noalias !120
  %663 = icmp slt i32 %662, 1
  br i1 %663, label %664, label %665

664:                                              ; preds = %655
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 0, i64 24, i1 false) #12, !alias.scope !120
  br label %669

665:                                              ; preds = %655
  %666 = load i32, i32* %207, align 8, !noalias !120
  %667 = sext i32 %666 to i64
  %668 = sext i32 %662 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %208) #12, !noalias !120
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %206, i64 %667, i64 %668, %"class.std::__1::allocator"* nonnull dereferenceable(1) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %208) #12, !noalias !120
  br label %669

669:                                              ; preds = %664, %665
  %670 = call %"class.extensions::Extension"* @_ZNK10extensions12ExtensionSet7GetByIDERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionSet"* %661, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #12
  %671 = load i8, i8* %210, align 1
  %672 = icmp slt i8 %671, 0
  br i1 %672, label %673, label %675

673:                                              ; preds = %669
  %674 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %674) #14
  br label %675

675:                                              ; preds = %669, %673
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #12
  %676 = icmp eq %"class.extensions::Extension"* %670, null
  br i1 %676, label %883, label %677

677:                                              ; preds = %675
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %212) #12
  %678 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %670, i64 0, i32 1
  %679 = bitcast %"class.std::__1::basic_string"* %678 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %680 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %679, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %231, i8 -86, i64 24, i1 false)
  %681 = load i8, i8* %680, align 1
  %682 = icmp slt i8 %681, 0
  %683 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %678, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %684 = load i8*, i8** %683, align 8
  %685 = bitcast %"class.std::__1::basic_string"* %678 to i8*
  %686 = select i1 %682, i8* %684, i8* %685
  %687 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %670, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %688 = load i64, i64* %687, align 8
  %689 = zext i8 %681 to i64
  %690 = select i1 %682, i64 %688, i64 %689
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.1"* nonnull sret %7, i8* %686, i64 %690) #12
  %691 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %602, align 8
  %692 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %603, align 8
  %693 = icmp eq %"class.std::__1::basic_string.1"* %691, %692
  br i1 %693, label %876, label %694

694:                                              ; preds = %677
  %695 = load i8, i8* %216, align 1
  %696 = icmp slt i8 %695, 0
  br i1 %696, label %699, label %697

697:                                              ; preds = %694
  %698 = bitcast %"class.std::__1::basic_string.1"* %691 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %698, i8* nonnull align 8 %212, i64 24, i1 false) #12
  br label %873

699:                                              ; preds = %694
  %700 = load i16*, i16** %213, align 8
  %701 = load i64, i64* %214, align 8
  %702 = icmp ult i64 %701, 11
  br i1 %702, label %703, label %708

703:                                              ; preds = %699
  %704 = bitcast %"class.std::__1::basic_string.1"* %691 to i16*
  %705 = trunc i64 %701 to i8
  %706 = bitcast %"class.std::__1::basic_string.1"* %691 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %707 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %706, i64 0, i32 1, i32 1
  store i8 %705, i8* %707, align 1
  br label %725

708:                                              ; preds = %699
  %709 = icmp ugt i64 %701, 9223372036854775791
  br i1 %709, label %710, label %712

710:                                              ; preds = %708
  %711 = bitcast %"class.std::__1::basic_string.1"* %691 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %711) #13
  unreachable

712:                                              ; preds = %708
  %713 = add nuw nsw i64 %701, 8
  %714 = and i64 %713, -8
  %715 = icmp slt i64 %714, 0
  br i1 %715, label %716, label %717

716:                                              ; preds = %712
  call void @abort() #13
  unreachable

717:                                              ; preds = %712
  %718 = shl i64 %714, 1
  %719 = call i8* @_Znwm(i64 %718) #14
  %720 = bitcast i8* %719 to i16*
  %721 = bitcast %"class.std::__1::basic_string.1"* %691 to i8**
  store i8* %719, i8** %721, align 8
  %722 = or i64 %714, -9223372036854775808
  %723 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %691, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %722, i64* %723, align 8
  %724 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %691, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %701, i64* %724, align 8
  br label %725

725:                                              ; preds = %717, %703
  %726 = phi i16* [ %704, %703 ], [ %720, %717 ]
  %727 = add nuw nsw i64 %701, 1
  %728 = add i64 %701, 1
  %729 = icmp ult i64 %728, 16
  br i1 %729, label %820, label %730

730:                                              ; preds = %725
  %731 = getelementptr i16, i16* %726, i64 1
  %732 = getelementptr i16, i16* %731, i64 %701
  %733 = getelementptr i16, i16* %700, i64 1
  %734 = getelementptr i16, i16* %733, i64 %701
  %735 = icmp ult i16* %726, %734
  %736 = icmp ult i16* %700, %732
  %737 = and i1 %735, %736
  br i1 %737, label %820, label %738

738:                                              ; preds = %730
  %739 = and i64 %728, -16
  %740 = sub i64 %727, %739
  %741 = getelementptr i16, i16* %700, i64 %739
  %742 = getelementptr i16, i16* %726, i64 %739
  %743 = add i64 %739, -16
  %744 = lshr exact i64 %743, 4
  %745 = add nuw nsw i64 %744, 1
  %746 = and i64 %745, 3
  %747 = icmp ult i64 %743, 48
  br i1 %747, label %799, label %748

748:                                              ; preds = %738
  %749 = sub nsw i64 %745, %746
  br label %750

750:                                              ; preds = %750, %748
  %751 = phi i64 [ 0, %748 ], [ %796, %750 ]
  %752 = phi i64 [ %749, %748 ], [ %797, %750 ]
  %753 = getelementptr i16, i16* %700, i64 %751
  %754 = getelementptr i16, i16* %726, i64 %751
  %755 = bitcast i16* %753 to <8 x i16>*
  %756 = load <8 x i16>, <8 x i16>* %755, align 2, !alias.scope !125
  %757 = getelementptr i16, i16* %753, i64 8
  %758 = bitcast i16* %757 to <8 x i16>*
  %759 = load <8 x i16>, <8 x i16>* %758, align 2, !alias.scope !125
  %760 = bitcast i16* %754 to <8 x i16>*
  store <8 x i16> %756, <8 x i16>* %760, align 2, !alias.scope !128, !noalias !125
  %761 = getelementptr i16, i16* %754, i64 8
  %762 = bitcast i16* %761 to <8 x i16>*
  store <8 x i16> %759, <8 x i16>* %762, align 2, !alias.scope !128, !noalias !125
  %763 = or i64 %751, 16
  %764 = getelementptr i16, i16* %700, i64 %763
  %765 = getelementptr i16, i16* %726, i64 %763
  %766 = bitcast i16* %764 to <8 x i16>*
  %767 = load <8 x i16>, <8 x i16>* %766, align 2, !alias.scope !125
  %768 = getelementptr i16, i16* %764, i64 8
  %769 = bitcast i16* %768 to <8 x i16>*
  %770 = load <8 x i16>, <8 x i16>* %769, align 2, !alias.scope !125
  %771 = bitcast i16* %765 to <8 x i16>*
  store <8 x i16> %767, <8 x i16>* %771, align 2, !alias.scope !128, !noalias !125
  %772 = getelementptr i16, i16* %765, i64 8
  %773 = bitcast i16* %772 to <8 x i16>*
  store <8 x i16> %770, <8 x i16>* %773, align 2, !alias.scope !128, !noalias !125
  %774 = or i64 %751, 32
  %775 = getelementptr i16, i16* %700, i64 %774
  %776 = getelementptr i16, i16* %726, i64 %774
  %777 = bitcast i16* %775 to <8 x i16>*
  %778 = load <8 x i16>, <8 x i16>* %777, align 2, !alias.scope !125
  %779 = getelementptr i16, i16* %775, i64 8
  %780 = bitcast i16* %779 to <8 x i16>*
  %781 = load <8 x i16>, <8 x i16>* %780, align 2, !alias.scope !125
  %782 = bitcast i16* %776 to <8 x i16>*
  store <8 x i16> %778, <8 x i16>* %782, align 2, !alias.scope !128, !noalias !125
  %783 = getelementptr i16, i16* %776, i64 8
  %784 = bitcast i16* %783 to <8 x i16>*
  store <8 x i16> %781, <8 x i16>* %784, align 2, !alias.scope !128, !noalias !125
  %785 = or i64 %751, 48
  %786 = getelementptr i16, i16* %700, i64 %785
  %787 = getelementptr i16, i16* %726, i64 %785
  %788 = bitcast i16* %786 to <8 x i16>*
  %789 = load <8 x i16>, <8 x i16>* %788, align 2, !alias.scope !125
  %790 = getelementptr i16, i16* %786, i64 8
  %791 = bitcast i16* %790 to <8 x i16>*
  %792 = load <8 x i16>, <8 x i16>* %791, align 2, !alias.scope !125
  %793 = bitcast i16* %787 to <8 x i16>*
  store <8 x i16> %789, <8 x i16>* %793, align 2, !alias.scope !128, !noalias !125
  %794 = getelementptr i16, i16* %787, i64 8
  %795 = bitcast i16* %794 to <8 x i16>*
  store <8 x i16> %792, <8 x i16>* %795, align 2, !alias.scope !128, !noalias !125
  %796 = add i64 %751, 64
  %797 = add i64 %752, -4
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %799, label %750, !llvm.loop !130

799:                                              ; preds = %750, %738
  %800 = phi i64 [ 0, %738 ], [ %796, %750 ]
  %801 = icmp eq i64 %746, 0
  br i1 %801, label %818, label %802

802:                                              ; preds = %799, %802
  %803 = phi i64 [ %815, %802 ], [ %800, %799 ]
  %804 = phi i64 [ %816, %802 ], [ %746, %799 ]
  %805 = getelementptr i16, i16* %700, i64 %803
  %806 = getelementptr i16, i16* %726, i64 %803
  %807 = bitcast i16* %805 to <8 x i16>*
  %808 = load <8 x i16>, <8 x i16>* %807, align 2, !alias.scope !125
  %809 = getelementptr i16, i16* %805, i64 8
  %810 = bitcast i16* %809 to <8 x i16>*
  %811 = load <8 x i16>, <8 x i16>* %810, align 2, !alias.scope !125
  %812 = bitcast i16* %806 to <8 x i16>*
  store <8 x i16> %808, <8 x i16>* %812, align 2, !alias.scope !128, !noalias !125
  %813 = getelementptr i16, i16* %806, i64 8
  %814 = bitcast i16* %813 to <8 x i16>*
  store <8 x i16> %811, <8 x i16>* %814, align 2, !alias.scope !128, !noalias !125
  %815 = add i64 %803, 16
  %816 = add i64 %804, -1
  %817 = icmp eq i64 %816, 0
  br i1 %817, label %818, label %802, !llvm.loop !131

818:                                              ; preds = %802, %799
  %819 = icmp eq i64 %728, %739
  br i1 %819, label %873, label %820

820:                                              ; preds = %818, %730, %725
  %821 = phi i64 [ %727, %730 ], [ %727, %725 ], [ %740, %818 ]
  %822 = phi i16* [ %700, %730 ], [ %700, %725 ], [ %741, %818 ]
  %823 = phi i16* [ %726, %730 ], [ %726, %725 ], [ %742, %818 ]
  %824 = add i64 %821, -1
  %825 = and i64 %821, 7
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %838, label %827

827:                                              ; preds = %820, %827
  %828 = phi i64 [ %833, %827 ], [ %821, %820 ]
  %829 = phi i16* [ %835, %827 ], [ %822, %820 ]
  %830 = phi i16* [ %834, %827 ], [ %823, %820 ]
  %831 = phi i64 [ %836, %827 ], [ %825, %820 ]
  %832 = load i16, i16* %829, align 2
  store i16 %832, i16* %830, align 2
  %833 = add i64 %828, -1
  %834 = getelementptr inbounds i16, i16* %830, i64 1
  %835 = getelementptr inbounds i16, i16* %829, i64 1
  %836 = add i64 %831, -1
  %837 = icmp eq i64 %836, 0
  br i1 %837, label %838, label %827, !llvm.loop !132

838:                                              ; preds = %827, %820
  %839 = phi i64 [ %821, %820 ], [ %833, %827 ]
  %840 = phi i16* [ %822, %820 ], [ %835, %827 ]
  %841 = phi i16* [ %823, %820 ], [ %834, %827 ]
  %842 = icmp ult i64 %824, 7
  br i1 %842, label %873, label %843

843:                                              ; preds = %838, %843
  %844 = phi i64 [ %869, %843 ], [ %839, %838 ]
  %845 = phi i16* [ %871, %843 ], [ %840, %838 ]
  %846 = phi i16* [ %870, %843 ], [ %841, %838 ]
  %847 = load i16, i16* %845, align 2
  store i16 %847, i16* %846, align 2
  %848 = getelementptr inbounds i16, i16* %846, i64 1
  %849 = getelementptr inbounds i16, i16* %845, i64 1
  %850 = load i16, i16* %849, align 2
  store i16 %850, i16* %848, align 2
  %851 = getelementptr inbounds i16, i16* %846, i64 2
  %852 = getelementptr inbounds i16, i16* %845, i64 2
  %853 = load i16, i16* %852, align 2
  store i16 %853, i16* %851, align 2
  %854 = getelementptr inbounds i16, i16* %846, i64 3
  %855 = getelementptr inbounds i16, i16* %845, i64 3
  %856 = load i16, i16* %855, align 2
  store i16 %856, i16* %854, align 2
  %857 = getelementptr inbounds i16, i16* %846, i64 4
  %858 = getelementptr inbounds i16, i16* %845, i64 4
  %859 = load i16, i16* %858, align 2
  store i16 %859, i16* %857, align 2
  %860 = getelementptr inbounds i16, i16* %846, i64 5
  %861 = getelementptr inbounds i16, i16* %845, i64 5
  %862 = load i16, i16* %861, align 2
  store i16 %862, i16* %860, align 2
  %863 = getelementptr inbounds i16, i16* %846, i64 6
  %864 = getelementptr inbounds i16, i16* %845, i64 6
  %865 = load i16, i16* %864, align 2
  store i16 %865, i16* %863, align 2
  %866 = getelementptr inbounds i16, i16* %846, i64 7
  %867 = getelementptr inbounds i16, i16* %845, i64 7
  %868 = load i16, i16* %867, align 2
  store i16 %868, i16* %866, align 2
  %869 = add i64 %844, -8
  %870 = getelementptr inbounds i16, i16* %846, i64 8
  %871 = getelementptr inbounds i16, i16* %845, i64 8
  %872 = icmp eq i64 %869, 0
  br i1 %872, label %873, label %843, !llvm.loop !133

873:                                              ; preds = %838, %843, %818, %697
  %874 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %691, i64 1
  %875 = ptrtoint %"class.std::__1::basic_string.1"* %874 to i64
  store i64 %875, i64* %604, align 8
  br label %877

876:                                              ; preds = %677
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %605, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %7) #12
  br label %877

877:                                              ; preds = %873, %876
  store i32 3, i32* %600, align 8
  %878 = load i8, i8* %216, align 1
  %879 = icmp slt i8 %878, 0
  br i1 %879, label %880, label %882

880:                                              ; preds = %877
  %881 = load i8*, i8** %217, align 8
  call void @_ZdlPv(i8* %881) #14
  br label %882

882:                                              ; preds = %880, %877
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %212) #12
  br label %1301

883:                                              ; preds = %675, %653, %654
  %884 = call i32 @_ZN10extensions11GetViewTypeEPN7content11WebContentsE(%"class.content::WebContents"* nonnull %620) #12
  %885 = icmp eq i32 %884, 2
  br i1 %885, label %886, label %913

886:                                              ; preds = %883
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %227) #12
  %887 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %5) #12
  %888 = bitcast %"class.std::__1::basic_string"* %887 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %889 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %888, i64 0, i32 1, i32 0
  %890 = load i8, i8* %889, align 1
  %891 = icmp slt i8 %890, 0
  %892 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %887, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %893 = load i8*, i8** %892, align 8
  %894 = bitcast %"class.std::__1::basic_string"* %887 to i8*
  %895 = select i1 %891, i8* %893, i8* %894
  %896 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %887, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %897 = load i64, i64* %896, align 8
  %898 = zext i8 %890 to i64
  %899 = select i1 %891, i64 %897, i64 %898
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.1"* nonnull sret %8, i8* %895, i64 %899) #12
  %900 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %602, align 8
  %901 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %603, align 8
  %902 = icmp ult %"class.std::__1::basic_string.1"* %900, %901
  br i1 %902, label %903, label %907

903:                                              ; preds = %886
  %904 = bitcast %"class.std::__1::basic_string.1"* %900 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %904, i8* nonnull align 8 %227, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %227, i8 0, i64 24, i1 false) #12
  %905 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %900, i64 1
  %906 = ptrtoint %"class.std::__1::basic_string.1"* %905 to i64
  store i64 %906, i64* %604, align 8
  br label %912

907:                                              ; preds = %886
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %605, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %8) #12
  %908 = load i8, i8* %229, align 1
  %909 = icmp slt i8 %908, 0
  br i1 %909, label %910, label %912

910:                                              ; preds = %907
  %911 = load i8*, i8** %230, align 8
  call void @_ZdlPv(i8* %911) #14
  br label %912

912:                                              ; preds = %903, %907, %910
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %227) #12
  store i32 6, i32* %600, align 8
  br label %1301

913:                                              ; preds = %883
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #12
  %914 = bitcast %"class.content::WebContents"* %620 to %"class.std::__1::basic_string.1"* (%"class.content::WebContents"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 -86, i64 24, i1 false)
  %915 = load %"class.std::__1::basic_string.1"* (%"class.content::WebContents"*)**, %"class.std::__1::basic_string.1"* (%"class.content::WebContents"*)*** %914, align 8
  %916 = getelementptr inbounds %"class.std::__1::basic_string.1"* (%"class.content::WebContents"*)*, %"class.std::__1::basic_string.1"* (%"class.content::WebContents"*)** %915, i64 38
  %917 = load %"class.std::__1::basic_string.1"* (%"class.content::WebContents"*)*, %"class.std::__1::basic_string.1"* (%"class.content::WebContents"*)** %916, align 8
  %918 = call dereferenceable(24) %"class.std::__1::basic_string.1"* %917(%"class.content::WebContents"* nonnull %620) #12
  %919 = bitcast %"class.std::__1::basic_string.1"* %918 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %920 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %919, i64 0, i32 1, i32 1
  %921 = load i8, i8* %920, align 1
  %922 = icmp slt i8 %921, 0
  br i1 %922, label %925, label %923

923:                                              ; preds = %913
  %924 = bitcast %"class.std::__1::basic_string.1"* %918 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %218, i8* align 8 %924, i64 24, i1 false) #12
  br label %1095

925:                                              ; preds = %913
  %926 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %918, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %927 = load i16*, i16** %926, align 8
  %928 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %918, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %929 = load i64, i64* %928, align 8
  %930 = icmp ult i64 %929, 11
  br i1 %930, label %931, label %933

931:                                              ; preds = %925
  %932 = trunc i64 %929 to i8
  store i8 %932, i8* %225, align 1
  br label %947

933:                                              ; preds = %925
  %934 = icmp ugt i64 %929, 9223372036854775791
  br i1 %934, label %935, label %937

935:                                              ; preds = %933
  %936 = bitcast %"class.std::__1::basic_string.1"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %936) #13
  unreachable

937:                                              ; preds = %933
  %938 = add nuw nsw i64 %929, 8
  %939 = and i64 %938, -8
  %940 = icmp slt i64 %939, 0
  br i1 %940, label %941, label %942

941:                                              ; preds = %937
  call void @abort() #13
  unreachable

942:                                              ; preds = %937
  %943 = shl i64 %939, 1
  %944 = call i8* @_Znwm(i64 %943) #14
  %945 = bitcast i8* %944 to i16*
  store i8* %944, i8** %222, align 8
  %946 = or i64 %939, -9223372036854775808
  store i64 %946, i64* %221, align 8
  store i64 %929, i64* %220, align 8
  br label %947

947:                                              ; preds = %942, %931
  %948 = phi i16* [ %223, %931 ], [ %945, %942 ]
  %949 = add nuw nsw i64 %929, 1
  %950 = add i64 %929, 1
  %951 = icmp ult i64 %950, 16
  br i1 %951, label %1042, label %952

952:                                              ; preds = %947
  %953 = getelementptr i16, i16* %948, i64 1
  %954 = getelementptr i16, i16* %953, i64 %929
  %955 = getelementptr i16, i16* %927, i64 1
  %956 = getelementptr i16, i16* %955, i64 %929
  %957 = icmp ult i16* %948, %956
  %958 = icmp ult i16* %927, %954
  %959 = and i1 %957, %958
  br i1 %959, label %1042, label %960

960:                                              ; preds = %952
  %961 = and i64 %950, -16
  %962 = sub i64 %949, %961
  %963 = getelementptr i16, i16* %927, i64 %961
  %964 = getelementptr i16, i16* %948, i64 %961
  %965 = add i64 %961, -16
  %966 = lshr exact i64 %965, 4
  %967 = add nuw nsw i64 %966, 1
  %968 = and i64 %967, 3
  %969 = icmp ult i64 %965, 48
  br i1 %969, label %1021, label %970

970:                                              ; preds = %960
  %971 = sub nsw i64 %967, %968
  br label %972

972:                                              ; preds = %972, %970
  %973 = phi i64 [ 0, %970 ], [ %1018, %972 ]
  %974 = phi i64 [ %971, %970 ], [ %1019, %972 ]
  %975 = getelementptr i16, i16* %927, i64 %973
  %976 = getelementptr i16, i16* %948, i64 %973
  %977 = bitcast i16* %975 to <8 x i16>*
  %978 = load <8 x i16>, <8 x i16>* %977, align 2, !alias.scope !134
  %979 = getelementptr i16, i16* %975, i64 8
  %980 = bitcast i16* %979 to <8 x i16>*
  %981 = load <8 x i16>, <8 x i16>* %980, align 2, !alias.scope !134
  %982 = bitcast i16* %976 to <8 x i16>*
  store <8 x i16> %978, <8 x i16>* %982, align 2, !alias.scope !137, !noalias !134
  %983 = getelementptr i16, i16* %976, i64 8
  %984 = bitcast i16* %983 to <8 x i16>*
  store <8 x i16> %981, <8 x i16>* %984, align 2, !alias.scope !137, !noalias !134
  %985 = or i64 %973, 16
  %986 = getelementptr i16, i16* %927, i64 %985
  %987 = getelementptr i16, i16* %948, i64 %985
  %988 = bitcast i16* %986 to <8 x i16>*
  %989 = load <8 x i16>, <8 x i16>* %988, align 2, !alias.scope !134
  %990 = getelementptr i16, i16* %986, i64 8
  %991 = bitcast i16* %990 to <8 x i16>*
  %992 = load <8 x i16>, <8 x i16>* %991, align 2, !alias.scope !134
  %993 = bitcast i16* %987 to <8 x i16>*
  store <8 x i16> %989, <8 x i16>* %993, align 2, !alias.scope !137, !noalias !134
  %994 = getelementptr i16, i16* %987, i64 8
  %995 = bitcast i16* %994 to <8 x i16>*
  store <8 x i16> %992, <8 x i16>* %995, align 2, !alias.scope !137, !noalias !134
  %996 = or i64 %973, 32
  %997 = getelementptr i16, i16* %927, i64 %996
  %998 = getelementptr i16, i16* %948, i64 %996
  %999 = bitcast i16* %997 to <8 x i16>*
  %1000 = load <8 x i16>, <8 x i16>* %999, align 2, !alias.scope !134
  %1001 = getelementptr i16, i16* %997, i64 8
  %1002 = bitcast i16* %1001 to <8 x i16>*
  %1003 = load <8 x i16>, <8 x i16>* %1002, align 2, !alias.scope !134
  %1004 = bitcast i16* %998 to <8 x i16>*
  store <8 x i16> %1000, <8 x i16>* %1004, align 2, !alias.scope !137, !noalias !134
  %1005 = getelementptr i16, i16* %998, i64 8
  %1006 = bitcast i16* %1005 to <8 x i16>*
  store <8 x i16> %1003, <8 x i16>* %1006, align 2, !alias.scope !137, !noalias !134
  %1007 = or i64 %973, 48
  %1008 = getelementptr i16, i16* %927, i64 %1007
  %1009 = getelementptr i16, i16* %948, i64 %1007
  %1010 = bitcast i16* %1008 to <8 x i16>*
  %1011 = load <8 x i16>, <8 x i16>* %1010, align 2, !alias.scope !134
  %1012 = getelementptr i16, i16* %1008, i64 8
  %1013 = bitcast i16* %1012 to <8 x i16>*
  %1014 = load <8 x i16>, <8 x i16>* %1013, align 2, !alias.scope !134
  %1015 = bitcast i16* %1009 to <8 x i16>*
  store <8 x i16> %1011, <8 x i16>* %1015, align 2, !alias.scope !137, !noalias !134
  %1016 = getelementptr i16, i16* %1009, i64 8
  %1017 = bitcast i16* %1016 to <8 x i16>*
  store <8 x i16> %1014, <8 x i16>* %1017, align 2, !alias.scope !137, !noalias !134
  %1018 = add i64 %973, 64
  %1019 = add i64 %974, -4
  %1020 = icmp eq i64 %1019, 0
  br i1 %1020, label %1021, label %972, !llvm.loop !139

1021:                                             ; preds = %972, %960
  %1022 = phi i64 [ 0, %960 ], [ %1018, %972 ]
  %1023 = icmp eq i64 %968, 0
  br i1 %1023, label %1040, label %1024

1024:                                             ; preds = %1021, %1024
  %1025 = phi i64 [ %1037, %1024 ], [ %1022, %1021 ]
  %1026 = phi i64 [ %1038, %1024 ], [ %968, %1021 ]
  %1027 = getelementptr i16, i16* %927, i64 %1025
  %1028 = getelementptr i16, i16* %948, i64 %1025
  %1029 = bitcast i16* %1027 to <8 x i16>*
  %1030 = load <8 x i16>, <8 x i16>* %1029, align 2, !alias.scope !134
  %1031 = getelementptr i16, i16* %1027, i64 8
  %1032 = bitcast i16* %1031 to <8 x i16>*
  %1033 = load <8 x i16>, <8 x i16>* %1032, align 2, !alias.scope !134
  %1034 = bitcast i16* %1028 to <8 x i16>*
  store <8 x i16> %1030, <8 x i16>* %1034, align 2, !alias.scope !137, !noalias !134
  %1035 = getelementptr i16, i16* %1028, i64 8
  %1036 = bitcast i16* %1035 to <8 x i16>*
  store <8 x i16> %1033, <8 x i16>* %1036, align 2, !alias.scope !137, !noalias !134
  %1037 = add i64 %1025, 16
  %1038 = add i64 %1026, -1
  %1039 = icmp eq i64 %1038, 0
  br i1 %1039, label %1040, label %1024, !llvm.loop !140

1040:                                             ; preds = %1024, %1021
  %1041 = icmp eq i64 %950, %961
  br i1 %1041, label %1095, label %1042

1042:                                             ; preds = %1040, %952, %947
  %1043 = phi i64 [ %949, %952 ], [ %949, %947 ], [ %962, %1040 ]
  %1044 = phi i16* [ %927, %952 ], [ %927, %947 ], [ %963, %1040 ]
  %1045 = phi i16* [ %948, %952 ], [ %948, %947 ], [ %964, %1040 ]
  %1046 = add i64 %1043, -1
  %1047 = and i64 %1043, 7
  %1048 = icmp eq i64 %1047, 0
  br i1 %1048, label %1060, label %1049

1049:                                             ; preds = %1042, %1049
  %1050 = phi i64 [ %1055, %1049 ], [ %1043, %1042 ]
  %1051 = phi i16* [ %1057, %1049 ], [ %1044, %1042 ]
  %1052 = phi i16* [ %1056, %1049 ], [ %1045, %1042 ]
  %1053 = phi i64 [ %1058, %1049 ], [ %1047, %1042 ]
  %1054 = load i16, i16* %1051, align 2
  store i16 %1054, i16* %1052, align 2
  %1055 = add i64 %1050, -1
  %1056 = getelementptr inbounds i16, i16* %1052, i64 1
  %1057 = getelementptr inbounds i16, i16* %1051, i64 1
  %1058 = add i64 %1053, -1
  %1059 = icmp eq i64 %1058, 0
  br i1 %1059, label %1060, label %1049, !llvm.loop !141

1060:                                             ; preds = %1049, %1042
  %1061 = phi i64 [ %1043, %1042 ], [ %1055, %1049 ]
  %1062 = phi i16* [ %1044, %1042 ], [ %1057, %1049 ]
  %1063 = phi i16* [ %1045, %1042 ], [ %1056, %1049 ]
  %1064 = icmp ult i64 %1046, 7
  br i1 %1064, label %1095, label %1065

1065:                                             ; preds = %1060, %1065
  %1066 = phi i64 [ %1091, %1065 ], [ %1061, %1060 ]
  %1067 = phi i16* [ %1093, %1065 ], [ %1062, %1060 ]
  %1068 = phi i16* [ %1092, %1065 ], [ %1063, %1060 ]
  %1069 = load i16, i16* %1067, align 2
  store i16 %1069, i16* %1068, align 2
  %1070 = getelementptr inbounds i16, i16* %1068, i64 1
  %1071 = getelementptr inbounds i16, i16* %1067, i64 1
  %1072 = load i16, i16* %1071, align 2
  store i16 %1072, i16* %1070, align 2
  %1073 = getelementptr inbounds i16, i16* %1068, i64 2
  %1074 = getelementptr inbounds i16, i16* %1067, i64 2
  %1075 = load i16, i16* %1074, align 2
  store i16 %1075, i16* %1073, align 2
  %1076 = getelementptr inbounds i16, i16* %1068, i64 3
  %1077 = getelementptr inbounds i16, i16* %1067, i64 3
  %1078 = load i16, i16* %1077, align 2
  store i16 %1078, i16* %1076, align 2
  %1079 = getelementptr inbounds i16, i16* %1068, i64 4
  %1080 = getelementptr inbounds i16, i16* %1067, i64 4
  %1081 = load i16, i16* %1080, align 2
  store i16 %1081, i16* %1079, align 2
  %1082 = getelementptr inbounds i16, i16* %1068, i64 5
  %1083 = getelementptr inbounds i16, i16* %1067, i64 5
  %1084 = load i16, i16* %1083, align 2
  store i16 %1084, i16* %1082, align 2
  %1085 = getelementptr inbounds i16, i16* %1068, i64 6
  %1086 = getelementptr inbounds i16, i16* %1067, i64 6
  %1087 = load i16, i16* %1086, align 2
  store i16 %1087, i16* %1085, align 2
  %1088 = getelementptr inbounds i16, i16* %1068, i64 7
  %1089 = getelementptr inbounds i16, i16* %1067, i64 7
  %1090 = load i16, i16* %1089, align 2
  store i16 %1090, i16* %1088, align 2
  %1091 = add i64 %1066, -8
  %1092 = getelementptr inbounds i16, i16* %1068, i64 8
  %1093 = getelementptr inbounds i16, i16* %1067, i64 8
  %1094 = icmp eq i64 %1091, 0
  br i1 %1094, label %1095, label %1065, !llvm.loop !142

1095:                                             ; preds = %1060, %1065, %1040, %923
  %1096 = load i8, i8* %225, align 1
  %1097 = icmp slt i8 %1096, 0
  %1098 = load i64, i64* %220, align 8
  %1099 = zext i8 %1096 to i64
  %1100 = select i1 %1097, i64 %1098, i64 %1099
  %1101 = icmp eq i64 %1100, 0
  br i1 %1101, label %1102, label %1108

1102:                                             ; preds = %1095
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #12
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.1"* nonnull sret %10, i32 19604) #12
  %1103 = load i8, i8* %225, align 1
  %1104 = icmp slt i8 %1103, 0
  br i1 %1104, label %1105, label %1107

1105:                                             ; preds = %1102
  %1106 = load i8*, i8** %222, align 8
  call void @_ZdlPv(i8* %1106) #14
  br label %1107

1107:                                             ; preds = %1105, %1102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %218, i8* nonnull align 8 %226, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #12
  br label %1108

1108:                                             ; preds = %1095, %1107
  %1109 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %602, align 8
  %1110 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %603, align 8
  %1111 = icmp eq %"class.std::__1::basic_string.1"* %1109, %1110
  br i1 %1111, label %1294, label %1112

1112:                                             ; preds = %1108
  %1113 = load i8, i8* %225, align 1
  %1114 = icmp slt i8 %1113, 0
  br i1 %1114, label %1117, label %1115

1115:                                             ; preds = %1112
  %1116 = bitcast %"class.std::__1::basic_string.1"* %1109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1116, i8* nonnull align 8 %218, i64 24, i1 false) #12
  br label %1291

1117:                                             ; preds = %1112
  %1118 = load i16*, i16** %219, align 8
  %1119 = load i64, i64* %220, align 8
  %1120 = icmp ult i64 %1119, 11
  br i1 %1120, label %1121, label %1126

1121:                                             ; preds = %1117
  %1122 = bitcast %"class.std::__1::basic_string.1"* %1109 to i16*
  %1123 = trunc i64 %1119 to i8
  %1124 = bitcast %"class.std::__1::basic_string.1"* %1109 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1125 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1124, i64 0, i32 1, i32 1
  store i8 %1123, i8* %1125, align 1
  br label %1143

1126:                                             ; preds = %1117
  %1127 = icmp ugt i64 %1119, 9223372036854775791
  br i1 %1127, label %1128, label %1130

1128:                                             ; preds = %1126
  %1129 = bitcast %"class.std::__1::basic_string.1"* %1109 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1129) #13
  unreachable

1130:                                             ; preds = %1126
  %1131 = add nuw nsw i64 %1119, 8
  %1132 = and i64 %1131, -8
  %1133 = icmp slt i64 %1132, 0
  br i1 %1133, label %1134, label %1135

1134:                                             ; preds = %1130
  call void @abort() #13
  unreachable

1135:                                             ; preds = %1130
  %1136 = shl i64 %1132, 1
  %1137 = call i8* @_Znwm(i64 %1136) #14
  %1138 = bitcast i8* %1137 to i16*
  %1139 = bitcast %"class.std::__1::basic_string.1"* %1109 to i8**
  store i8* %1137, i8** %1139, align 8
  %1140 = or i64 %1132, -9223372036854775808
  %1141 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1140, i64* %1141, align 8
  %1142 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1119, i64* %1142, align 8
  br label %1143

1143:                                             ; preds = %1135, %1121
  %1144 = phi i16* [ %1122, %1121 ], [ %1138, %1135 ]
  %1145 = add nuw nsw i64 %1119, 1
  %1146 = add i64 %1119, 1
  %1147 = icmp ult i64 %1146, 16
  br i1 %1147, label %1238, label %1148

1148:                                             ; preds = %1143
  %1149 = getelementptr i16, i16* %1144, i64 1
  %1150 = getelementptr i16, i16* %1149, i64 %1119
  %1151 = getelementptr i16, i16* %1118, i64 1
  %1152 = getelementptr i16, i16* %1151, i64 %1119
  %1153 = icmp ult i16* %1144, %1152
  %1154 = icmp ult i16* %1118, %1150
  %1155 = and i1 %1153, %1154
  br i1 %1155, label %1238, label %1156

1156:                                             ; preds = %1148
  %1157 = and i64 %1146, -16
  %1158 = sub i64 %1145, %1157
  %1159 = getelementptr i16, i16* %1118, i64 %1157
  %1160 = getelementptr i16, i16* %1144, i64 %1157
  %1161 = add i64 %1157, -16
  %1162 = lshr exact i64 %1161, 4
  %1163 = add nuw nsw i64 %1162, 1
  %1164 = and i64 %1163, 3
  %1165 = icmp ult i64 %1161, 48
  br i1 %1165, label %1217, label %1166

1166:                                             ; preds = %1156
  %1167 = sub nsw i64 %1163, %1164
  br label %1168

1168:                                             ; preds = %1168, %1166
  %1169 = phi i64 [ 0, %1166 ], [ %1214, %1168 ]
  %1170 = phi i64 [ %1167, %1166 ], [ %1215, %1168 ]
  %1171 = getelementptr i16, i16* %1118, i64 %1169
  %1172 = getelementptr i16, i16* %1144, i64 %1169
  %1173 = bitcast i16* %1171 to <8 x i16>*
  %1174 = load <8 x i16>, <8 x i16>* %1173, align 2, !alias.scope !143
  %1175 = getelementptr i16, i16* %1171, i64 8
  %1176 = bitcast i16* %1175 to <8 x i16>*
  %1177 = load <8 x i16>, <8 x i16>* %1176, align 2, !alias.scope !143
  %1178 = bitcast i16* %1172 to <8 x i16>*
  store <8 x i16> %1174, <8 x i16>* %1178, align 2, !alias.scope !146, !noalias !143
  %1179 = getelementptr i16, i16* %1172, i64 8
  %1180 = bitcast i16* %1179 to <8 x i16>*
  store <8 x i16> %1177, <8 x i16>* %1180, align 2, !alias.scope !146, !noalias !143
  %1181 = or i64 %1169, 16
  %1182 = getelementptr i16, i16* %1118, i64 %1181
  %1183 = getelementptr i16, i16* %1144, i64 %1181
  %1184 = bitcast i16* %1182 to <8 x i16>*
  %1185 = load <8 x i16>, <8 x i16>* %1184, align 2, !alias.scope !143
  %1186 = getelementptr i16, i16* %1182, i64 8
  %1187 = bitcast i16* %1186 to <8 x i16>*
  %1188 = load <8 x i16>, <8 x i16>* %1187, align 2, !alias.scope !143
  %1189 = bitcast i16* %1183 to <8 x i16>*
  store <8 x i16> %1185, <8 x i16>* %1189, align 2, !alias.scope !146, !noalias !143
  %1190 = getelementptr i16, i16* %1183, i64 8
  %1191 = bitcast i16* %1190 to <8 x i16>*
  store <8 x i16> %1188, <8 x i16>* %1191, align 2, !alias.scope !146, !noalias !143
  %1192 = or i64 %1169, 32
  %1193 = getelementptr i16, i16* %1118, i64 %1192
  %1194 = getelementptr i16, i16* %1144, i64 %1192
  %1195 = bitcast i16* %1193 to <8 x i16>*
  %1196 = load <8 x i16>, <8 x i16>* %1195, align 2, !alias.scope !143
  %1197 = getelementptr i16, i16* %1193, i64 8
  %1198 = bitcast i16* %1197 to <8 x i16>*
  %1199 = load <8 x i16>, <8 x i16>* %1198, align 2, !alias.scope !143
  %1200 = bitcast i16* %1194 to <8 x i16>*
  store <8 x i16> %1196, <8 x i16>* %1200, align 2, !alias.scope !146, !noalias !143
  %1201 = getelementptr i16, i16* %1194, i64 8
  %1202 = bitcast i16* %1201 to <8 x i16>*
  store <8 x i16> %1199, <8 x i16>* %1202, align 2, !alias.scope !146, !noalias !143
  %1203 = or i64 %1169, 48
  %1204 = getelementptr i16, i16* %1118, i64 %1203
  %1205 = getelementptr i16, i16* %1144, i64 %1203
  %1206 = bitcast i16* %1204 to <8 x i16>*
  %1207 = load <8 x i16>, <8 x i16>* %1206, align 2, !alias.scope !143
  %1208 = getelementptr i16, i16* %1204, i64 8
  %1209 = bitcast i16* %1208 to <8 x i16>*
  %1210 = load <8 x i16>, <8 x i16>* %1209, align 2, !alias.scope !143
  %1211 = bitcast i16* %1205 to <8 x i16>*
  store <8 x i16> %1207, <8 x i16>* %1211, align 2, !alias.scope !146, !noalias !143
  %1212 = getelementptr i16, i16* %1205, i64 8
  %1213 = bitcast i16* %1212 to <8 x i16>*
  store <8 x i16> %1210, <8 x i16>* %1213, align 2, !alias.scope !146, !noalias !143
  %1214 = add i64 %1169, 64
  %1215 = add i64 %1170, -4
  %1216 = icmp eq i64 %1215, 0
  br i1 %1216, label %1217, label %1168, !llvm.loop !148

1217:                                             ; preds = %1168, %1156
  %1218 = phi i64 [ 0, %1156 ], [ %1214, %1168 ]
  %1219 = icmp eq i64 %1164, 0
  br i1 %1219, label %1236, label %1220

1220:                                             ; preds = %1217, %1220
  %1221 = phi i64 [ %1233, %1220 ], [ %1218, %1217 ]
  %1222 = phi i64 [ %1234, %1220 ], [ %1164, %1217 ]
  %1223 = getelementptr i16, i16* %1118, i64 %1221
  %1224 = getelementptr i16, i16* %1144, i64 %1221
  %1225 = bitcast i16* %1223 to <8 x i16>*
  %1226 = load <8 x i16>, <8 x i16>* %1225, align 2, !alias.scope !143
  %1227 = getelementptr i16, i16* %1223, i64 8
  %1228 = bitcast i16* %1227 to <8 x i16>*
  %1229 = load <8 x i16>, <8 x i16>* %1228, align 2, !alias.scope !143
  %1230 = bitcast i16* %1224 to <8 x i16>*
  store <8 x i16> %1226, <8 x i16>* %1230, align 2, !alias.scope !146, !noalias !143
  %1231 = getelementptr i16, i16* %1224, i64 8
  %1232 = bitcast i16* %1231 to <8 x i16>*
  store <8 x i16> %1229, <8 x i16>* %1232, align 2, !alias.scope !146, !noalias !143
  %1233 = add i64 %1221, 16
  %1234 = add i64 %1222, -1
  %1235 = icmp eq i64 %1234, 0
  br i1 %1235, label %1236, label %1220, !llvm.loop !149

1236:                                             ; preds = %1220, %1217
  %1237 = icmp eq i64 %1146, %1157
  br i1 %1237, label %1291, label %1238

1238:                                             ; preds = %1236, %1148, %1143
  %1239 = phi i64 [ %1145, %1148 ], [ %1145, %1143 ], [ %1158, %1236 ]
  %1240 = phi i16* [ %1118, %1148 ], [ %1118, %1143 ], [ %1159, %1236 ]
  %1241 = phi i16* [ %1144, %1148 ], [ %1144, %1143 ], [ %1160, %1236 ]
  %1242 = add i64 %1239, -1
  %1243 = and i64 %1239, 7
  %1244 = icmp eq i64 %1243, 0
  br i1 %1244, label %1256, label %1245

1245:                                             ; preds = %1238, %1245
  %1246 = phi i64 [ %1251, %1245 ], [ %1239, %1238 ]
  %1247 = phi i16* [ %1253, %1245 ], [ %1240, %1238 ]
  %1248 = phi i16* [ %1252, %1245 ], [ %1241, %1238 ]
  %1249 = phi i64 [ %1254, %1245 ], [ %1243, %1238 ]
  %1250 = load i16, i16* %1247, align 2
  store i16 %1250, i16* %1248, align 2
  %1251 = add i64 %1246, -1
  %1252 = getelementptr inbounds i16, i16* %1248, i64 1
  %1253 = getelementptr inbounds i16, i16* %1247, i64 1
  %1254 = add i64 %1249, -1
  %1255 = icmp eq i64 %1254, 0
  br i1 %1255, label %1256, label %1245, !llvm.loop !150

1256:                                             ; preds = %1245, %1238
  %1257 = phi i64 [ %1239, %1238 ], [ %1251, %1245 ]
  %1258 = phi i16* [ %1240, %1238 ], [ %1253, %1245 ]
  %1259 = phi i16* [ %1241, %1238 ], [ %1252, %1245 ]
  %1260 = icmp ult i64 %1242, 7
  br i1 %1260, label %1291, label %1261

1261:                                             ; preds = %1256, %1261
  %1262 = phi i64 [ %1287, %1261 ], [ %1257, %1256 ]
  %1263 = phi i16* [ %1289, %1261 ], [ %1258, %1256 ]
  %1264 = phi i16* [ %1288, %1261 ], [ %1259, %1256 ]
  %1265 = load i16, i16* %1263, align 2
  store i16 %1265, i16* %1264, align 2
  %1266 = getelementptr inbounds i16, i16* %1264, i64 1
  %1267 = getelementptr inbounds i16, i16* %1263, i64 1
  %1268 = load i16, i16* %1267, align 2
  store i16 %1268, i16* %1266, align 2
  %1269 = getelementptr inbounds i16, i16* %1264, i64 2
  %1270 = getelementptr inbounds i16, i16* %1263, i64 2
  %1271 = load i16, i16* %1270, align 2
  store i16 %1271, i16* %1269, align 2
  %1272 = getelementptr inbounds i16, i16* %1264, i64 3
  %1273 = getelementptr inbounds i16, i16* %1263, i64 3
  %1274 = load i16, i16* %1273, align 2
  store i16 %1274, i16* %1272, align 2
  %1275 = getelementptr inbounds i16, i16* %1264, i64 4
  %1276 = getelementptr inbounds i16, i16* %1263, i64 4
  %1277 = load i16, i16* %1276, align 2
  store i16 %1277, i16* %1275, align 2
  %1278 = getelementptr inbounds i16, i16* %1264, i64 5
  %1279 = getelementptr inbounds i16, i16* %1263, i64 5
  %1280 = load i16, i16* %1279, align 2
  store i16 %1280, i16* %1278, align 2
  %1281 = getelementptr inbounds i16, i16* %1264, i64 6
  %1282 = getelementptr inbounds i16, i16* %1263, i64 6
  %1283 = load i16, i16* %1282, align 2
  store i16 %1283, i16* %1281, align 2
  %1284 = getelementptr inbounds i16, i16* %1264, i64 7
  %1285 = getelementptr inbounds i16, i16* %1263, i64 7
  %1286 = load i16, i16* %1285, align 2
  store i16 %1286, i16* %1284, align 2
  %1287 = add i64 %1262, -8
  %1288 = getelementptr inbounds i16, i16* %1264, i64 8
  %1289 = getelementptr inbounds i16, i16* %1263, i64 8
  %1290 = icmp eq i64 %1287, 0
  br i1 %1290, label %1291, label %1261, !llvm.loop !151

1291:                                             ; preds = %1256, %1261, %1236, %1115
  %1292 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1109, i64 1
  %1293 = ptrtoint %"class.std::__1::basic_string.1"* %1292 to i64
  store i64 %1293, i64* %604, align 8
  br label %1295

1294:                                             ; preds = %1108
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %605, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %9) #12
  br label %1295

1295:                                             ; preds = %1291, %1294
  %1296 = load i8, i8* %225, align 1
  %1297 = icmp slt i8 %1296, 0
  br i1 %1297, label %1298, label %1300

1298:                                             ; preds = %1295
  %1299 = load i8*, i8** %222, align 8
  call void @_ZdlPv(i8* %1299) #14
  br label %1300

1300:                                             ; preds = %1295, %1298
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #12
  br label %1301

1301:                                             ; preds = %882, %912, %1300
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %203) #12
  br label %1302

1302:                                             ; preds = %622, %1301, %623, %614
  %1303 = getelementptr inbounds %"class.content::RenderWidgetHost"*, %"class.content::RenderWidgetHost"** %615, i64 1
  %1304 = icmp eq %"class.content::RenderWidgetHost"** %1303, %597
  br i1 %1304, label %606, label %614

1305:                                             ; preds = %606
  %1306 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %329, i64 0, i32 4
  store i32 7, i32* %1306, align 4
  br label %1307

1307:                                             ; preds = %1305, %606
  %1308 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %329, i64 1
  %1309 = icmp eq %struct.ProcessMemoryInformation* %1308, %192
  br i1 %1309, label %233, label %328
}

declare %"class.content::RenderWidgetHostIterator"* @_ZN7content16RenderWidgetHost20GetRenderWidgetHostsEv() local_unnamed_addr #1

declare %"class.extensions::ExtensionRegistry"* @_ZN10extensions17ExtensionRegistry3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

declare %"class.extensions::ProcessMap"* @_ZN10extensions10ProcessMap3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK10extensions10ProcessMap8ContainsEi(%"class.extensions::ProcessMap"*, i32) local_unnamed_addr #1

declare void @_ZNK10extensions10ProcessMap22GetExtensionsInProcessEi(%"class.std::__1::set.97"* sret, %"class.extensions::ProcessMap"*, i32) local_unnamed_addr #1

declare %"class.extensions::Extension"* @_ZNK10extensions12ExtensionSet7GetByIDERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionSet"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK10extensions9Extension13is_hosted_appEv(%"class.extensions::Extension"*) local_unnamed_addr #1

declare %"class.content::RenderViewHost"* @_ZN7content14RenderViewHost4FromEPNS_16RenderWidgetHostE(%"class.content::RenderWidgetHost"*) local_unnamed_addr #1

declare %"class.content::WebContents"* @_ZN7content11WebContents18FromRenderViewHostEPNS_14RenderViewHostE(%"class.content::RenderViewHost"*) local_unnamed_addr #1

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.1"* sret, i8*, i64) local_unnamed_addr #1

declare i32 @_ZN10extensions11GetViewTypeEPN7content11WebContentsE(%"class.content::WebContents"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #1

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.1"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #6

declare %"class.content::ZygoteHost"* @_ZN7content10ZygoteHost11GetInstanceEv() local_unnamed_addr #1

declare %"class.memory_instrumentation::MemoryInstrumentation"* @_ZN22memory_instrumentation21MemoryInstrumentation11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN22memory_instrumentation21MemoryInstrumentation29RequestPrivateMemoryFootprintEiN4base12OnceCallbackIFvbNSt3__110unique_ptrINS_16GlobalMemoryDumpENS3_14default_deleteIS5_EEEEEEE(%"class.memory_instrumentation::MemoryInstrumentation"*, i32, %"class.base::OnceCallback.201"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13MemoryDetails20DidReceiveMemoryDumpEbNSt3__110unique_ptrIN22memory_instrumentation16GlobalMemoryDumpENS0_14default_deleteIS3_EEEE(%class.MemoryDetails*, i1 zeroext, %"class.memory_instrumentation::GlobalMemoryDump"*) #0 align 2 {
  %4 = tail call %struct.ProcessData* @_ZN13MemoryDetails13ChromeBrowserEv(%class.MemoryDetails* %0) #12
  br i1 %1, label %5, label %40

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.memory_instrumentation::GlobalMemoryDump", %"class.memory_instrumentation::GlobalMemoryDump"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %6, align 8
  %8 = icmp eq %"struct.std::__1::__forward_list_node"* %7, null
  br i1 %8, label %40, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %4, i64 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %struct.ProcessData, %struct.ProcessData* %4, i64 0, i32 2, i32 0, i32 1
  br label %12

12:                                               ; preds = %9, %36
  %13 = phi %"struct.std::__1::__forward_list_node"* [ %7, %9 ], [ %38, %36 ]
  %14 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.memory_instrumentation::mojom::ProcessMemoryDump"*, %"class.memory_instrumentation::mojom::ProcessMemoryDump"** %14, align 8
  %16 = getelementptr inbounds %"class.memory_instrumentation::mojom::ProcessMemoryDump", %"class.memory_instrumentation::mojom::ProcessMemoryDump"* %15, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %10, align 8
  %19 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %11, align 8
  %20 = icmp eq %struct.ProcessMemoryInformation* %18, %19
  br i1 %20, label %36, label %21

21:                                               ; preds = %12, %33
  %22 = phi %struct.ProcessMemoryInformation* [ %34, %33 ], [ %18, %12 ]
  %23 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, %17
  br i1 %25, label %26, label %33

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.memory_instrumentation::mojom::ProcessMemoryDump", %"class.memory_instrumentation::mojom::ProcessMemoryDump"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.memory_instrumentation::mojom::OSMemDump"*, %"class.memory_instrumentation::mojom::OSMemDump"** %27, align 8
  %29 = getelementptr inbounds %"class.memory_instrumentation::mojom::OSMemDump", %"class.memory_instrumentation::mojom::OSMemDump"* %28, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %22, i64 0, i32 9
  store i64 %31, i64* %32, align 8
  br label %36

33:                                               ; preds = %21
  %34 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %22, i64 1
  %35 = icmp eq %struct.ProcessMemoryInformation* %34, %19
  br i1 %35, label %36, label %21

36:                                               ; preds = %33, %12, %26
  %37 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %13, i64 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__forward_list_node"* %38, null
  br i1 %39, label %40, label %12

40:                                               ; preds = %36, %5, %3
  %41 = bitcast %class.MemoryDetails* %0 to void (%class.MemoryDetails*)***
  %42 = load void (%class.MemoryDetails*)**, void (%class.MemoryDetails*)*** %41, align 8
  %43 = load void (%class.MemoryDetails*)*, void (%class.MemoryDetails*)** %42, align 8
  tail call void %43(%class.MemoryDetails* %0) #12
  %44 = icmp eq %"class.memory_instrumentation::GlobalMemoryDump"* %2, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  tail call void @_ZN22memory_instrumentation16GlobalMemoryDumpD1Ev(%"class.memory_instrumentation::GlobalMemoryDump"* nonnull %2) #12
  %46 = bitcast %"class.memory_instrumentation::GlobalMemoryDump"* %2 to i8*
  tail call void @_ZdlPv(i8* %46) #14
  br label %47

47:                                               ; preds = %40, %45
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseI24ProcessMemoryInformationNS_9allocatorIS1_EEE5clearEv(%"class.std::__1::__vector_base.16"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base.16", %"class.std::__1::__vector_base.16"* %0, i64 0, i32 0
  %3 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__vector_base.16", %"class.std::__1::__vector_base.16"* %0, i64 0, i32 1
  %5 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %4, align 8
  %6 = icmp eq %struct.ProcessMemoryInformation* %5, %3
  br i1 %6, label %56, label %7

7:                                                ; preds = %1, %54
  %8 = phi %struct.ProcessMemoryInformation* [ %9, %54 ], [ %5, %1 ]
  %9 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %8, i64 -1
  %10 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %8, i64 -1, i32 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string.1"* %12, null
  br i1 %13, label %36, label %14

14:                                               ; preds = %7
  %15 = bitcast %"class.std::__1::basic_string.1"* %12 to i8*
  %16 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %8, i64 -1, i32 8, i32 0, i32 1
  %17 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %16, align 8
  %18 = icmp eq %"class.std::__1::basic_string.1"* %17, %12
  br i1 %18, label %34, label %19

19:                                               ; preds = %14, %29
  %20 = phi %"class.std::__1::basic_string.1"* [ %21, %29 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %20, i64 -1
  %22 = bitcast %"class.std::__1::basic_string.1"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::basic_string.1"* %21 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %26, %19
  %30 = icmp eq %"class.std::__1::basic_string.1"* %21, %12
  br i1 %30, label %31, label %19

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector"* %10 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %14
  %35 = phi i8* [ %33, %31 ], [ %15, %14 ]
  store %"class.std::__1::basic_string.1"* %12, %"class.std::__1::basic_string.1"** %16, align 8
  tail call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %34, %7
  %37 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %8, i64 -1, i32 2
  %38 = bitcast %"class.std::__1::basic_string.1"* %37 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = bitcast %"class.std::__1::basic_string.1"* %37 to i8**
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %42, %36
  %46 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %8, i64 -1, i32 1
  %47 = bitcast %"class.std::__1::basic_string.1"* %46 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %47, i64 0, i32 1, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = bitcast %"class.std::__1::basic_string.1"* %46 to i8**
  %53 = load i8*, i8** %52, align 8
  tail call void @_ZdlPv(i8* %53) #14
  br label %54

54:                                               ; preds = %51, %45
  %55 = icmp eq %struct.ProcessMemoryInformation* %9, %3
  br i1 %55, label %56, label %7

56:                                               ; preds = %54, %1
  store %struct.ProcessMemoryInformation* %3, %struct.ProcessMemoryInformation** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.1"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !152
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !152
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !155, !noalias !152
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !155, !noalias !152
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !152
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !152
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !155, !noalias !152
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !155, !noalias !152
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !152
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !152
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !155, !noalias !152
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !155, !noalias !152
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !152
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !152
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !155, !noalias !152
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !155, !noalias !152
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !157

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !152
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !152
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !155, !noalias !152
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !155, !noalias !152
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !158

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !159

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !160

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !161

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !162

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !163

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !165
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !165
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !168, !noalias !165
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !168, !noalias !165
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !165
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !165
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !168, !noalias !165
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !168, !noalias !165
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !165
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !165
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !168, !noalias !165
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !168, !noalias !165
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !165
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !165
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !168, !noalias !165
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !168, !noalias !165
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !170

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !165
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !165
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !168, !noalias !165
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !168, !noalias !165
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !171

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !172

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !173

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #14
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI24ProcessMemoryInformationNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.15"*, %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %struct.ProcessMemoryInformation* %2 to i64
  %5 = ptrtoint %struct.ProcessMemoryInformation* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 112
  %8 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %struct.ProcessMemoryInformation** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.15"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 112
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %struct.ProcessMemoryInformation*
  br i1 %15, label %75, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %struct.ProcessMemoryInformation** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 112
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 %22
  %25 = select i1 %23, %struct.ProcessMemoryInformation* %24, %struct.ProcessMemoryInformation* %2
  %26 = icmp eq %struct.ProcessMemoryInformation* %25, %1
  br i1 %26, label %57, label %27

27:                                               ; preds = %17, %50
  %28 = phi %struct.ProcessMemoryInformation* [ %55, %50 ], [ %16, %17 ]
  %29 = phi %struct.ProcessMemoryInformation* [ %54, %50 ], [ %1, %17 ]
  %30 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %28, i64 0, i32 0
  store i32 %31, i32* %32, align 8
  %33 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %28, i64 0, i32 1
  %34 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %29, i64 0, i32 1
  %35 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %33, %"class.std::__1::basic_string.1"* dereferenceable(24) %34) #12
  %36 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %28, i64 0, i32 2
  %37 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %29, i64 0, i32 2
  %38 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %36, %"class.std::__1::basic_string.1"* dereferenceable(24) %37) #12
  %39 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %28, i64 0, i32 3
  %40 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %29, i64 0, i32 3
  %41 = bitcast i32* %39 to i8*
  %42 = bitcast i32* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 20, i1 false) #12
  %43 = icmp eq %struct.ProcessMemoryInformation* %28, %29
  br i1 %43, label %50, label %44

44:                                               ; preds = %27
  %45 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %28, i64 0, i32 8
  %46 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %29, i64 0, i32 8, i32 0, i32 0
  %47 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %46, align 8
  %48 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %29, i64 0, i32 8, i32 0, i32 1
  %49 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %48, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %45, %"class.std::__1::basic_string.1"* %47, %"class.std::__1::basic_string.1"* %49) #12
  br label %50

50:                                               ; preds = %44, %27
  %51 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %29, i64 0, i32 9
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %28, i64 0, i32 9
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %29, i64 1
  %55 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %28, i64 1
  %56 = icmp eq %struct.ProcessMemoryInformation* %54, %25
  br i1 %56, label %57, label %27

57:                                               ; preds = %50, %17
  %58 = phi %struct.ProcessMemoryInformation* [ %16, %17 ], [ %55, %50 ]
  br i1 %23, label %59, label %74

59:                                               ; preds = %57
  %60 = load i64, i64* %19, align 8
  %61 = icmp eq %struct.ProcessMemoryInformation* %25, %2
  br i1 %61, label %72, label %62

62:                                               ; preds = %59
  %63 = inttoptr i64 %60 to %struct.ProcessMemoryInformation*
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi %struct.ProcessMemoryInformation* [ %68, %64 ], [ %63, %62 ]
  %66 = phi %struct.ProcessMemoryInformation* [ %67, %64 ], [ %24, %62 ]
  tail call void @_ZN24ProcessMemoryInformationC2ERKS_(%struct.ProcessMemoryInformation* %65, %struct.ProcessMemoryInformation* dereferenceable(112) %66) #12
  %67 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %66, i64 1
  %68 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %65, i64 1
  %69 = icmp eq %struct.ProcessMemoryInformation* %67, %2
  br i1 %69, label %70, label %64

70:                                               ; preds = %64
  %71 = ptrtoint %struct.ProcessMemoryInformation* %68 to i64
  br label %72

72:                                               ; preds = %59, %70
  %73 = phi i64 [ %60, %59 ], [ %71, %70 ]
  store i64 %73, i64* %19, align 8
  br label %116

74:                                               ; preds = %57
  tail call void @_ZNSt3__16vectorI24ProcessMemoryInformationNS_9allocatorIS1_EEE17__destruct_at_endEPS1_(%"class.std::__1::vector.15"* %0, %struct.ProcessMemoryInformation* %58) #12
  br label %116

75:                                               ; preds = %3
  %76 = icmp eq i64 %12, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0
  tail call void @_ZNSt3__113__vector_baseI24ProcessMemoryInformationNS_9allocatorIS1_EEE5clearEv(%"class.std::__1::__vector_base.16"* %78) #12
  %79 = bitcast %"class.std::__1::vector.15"* %0 to i8**
  %80 = load i8*, i8** %79, align 8
  tail call void @_ZdlPv(i8* %80) #14
  %81 = bitcast %"class.std::__1::vector.15"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #12
  br label %82

82:                                               ; preds = %75, %77
  %83 = phi i64 [ %10, %75 ], [ 0, %77 ]
  %84 = icmp ugt i64 %7, 164703072086692425
  br i1 %84, label %85, label %87

85:                                               ; preds = %82
  %86 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %86) #13
  unreachable

87:                                               ; preds = %82
  %88 = sdiv exact i64 %83, 112
  %89 = icmp ult i64 %88, 82351536043346212
  br i1 %89, label %90, label %94

90:                                               ; preds = %87
  %91 = shl nsw i64 %88, 1
  %92 = icmp ult i64 %91, %7
  %93 = select i1 %92, i64 %7, i64 %91
  br label %94

94:                                               ; preds = %90, %87
  %95 = phi i64 [ %93, %90 ], [ 164703072086692425, %87 ]
  %96 = mul i64 %95, 112
  %97 = tail call i8* @_Znwm(i64 %96) #14
  %98 = bitcast i8* %97 to %struct.ProcessMemoryInformation*
  %99 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %100 = bitcast %struct.ProcessMemoryInformation** %99 to i8**
  store i8* %97, i8** %100, align 8
  %101 = bitcast %"class.std::__1::vector.15"* %0 to i8**
  store i8* %97, i8** %101, align 8
  %102 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %98, i64 %95
  store %struct.ProcessMemoryInformation* %102, %struct.ProcessMemoryInformation** %8, align 8
  %103 = bitcast %struct.ProcessMemoryInformation** %99 to i64*
  %104 = ptrtoint i8* %97 to i64
  %105 = icmp eq %struct.ProcessMemoryInformation* %1, %2
  br i1 %105, label %114, label %106

106:                                              ; preds = %94, %106
  %107 = phi %struct.ProcessMemoryInformation* [ %110, %106 ], [ %98, %94 ]
  %108 = phi %struct.ProcessMemoryInformation* [ %109, %106 ], [ %1, %94 ]
  tail call void @_ZN24ProcessMemoryInformationC2ERKS_(%struct.ProcessMemoryInformation* %107, %struct.ProcessMemoryInformation* dereferenceable(112) %108) #12
  %109 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %108, i64 1
  %110 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %107, i64 1
  %111 = icmp eq %struct.ProcessMemoryInformation* %109, %2
  br i1 %111, label %112, label %106

112:                                              ; preds = %106
  %113 = ptrtoint %struct.ProcessMemoryInformation* %110 to i64
  br label %114

114:                                              ; preds = %94, %112
  %115 = phi i64 [ %104, %94 ], [ %113, %112 ]
  store i64 %115, i64* %103, align 8
  br label %116

116:                                              ; preds = %72, %74, %114
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI24ProcessMemoryInformationNS_9allocatorIS1_EEE17__destruct_at_endEPS1_(%"class.std::__1::vector.15"*, %struct.ProcessMemoryInformation*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %4 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %3, align 8
  %5 = icmp eq %struct.ProcessMemoryInformation* %4, %1
  br i1 %5, label %55, label %6

6:                                                ; preds = %2, %53
  %7 = phi %struct.ProcessMemoryInformation* [ %8, %53 ], [ %4, %2 ]
  %8 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %7, i64 -1
  %9 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %7, i64 -1, i32 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %10, align 8
  %12 = icmp eq %"class.std::__1::basic_string.1"* %11, null
  br i1 %12, label %35, label %13

13:                                               ; preds = %6
  %14 = bitcast %"class.std::__1::basic_string.1"* %11 to i8*
  %15 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %7, i64 -1, i32 8, i32 0, i32 1
  %16 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %15, align 8
  %17 = icmp eq %"class.std::__1::basic_string.1"* %16, %11
  br i1 %17, label %33, label %18

18:                                               ; preds = %13, %28
  %19 = phi %"class.std::__1::basic_string.1"* [ %20, %28 ], [ %16, %13 ]
  %20 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %19, i64 -1
  %21 = bitcast %"class.std::__1::basic_string.1"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %18
  %26 = bitcast %"class.std::__1::basic_string.1"* %20 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #14
  br label %28

28:                                               ; preds = %25, %18
  %29 = icmp eq %"class.std::__1::basic_string.1"* %20, %11
  br i1 %29, label %30, label %18

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %9 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %13
  %34 = phi i8* [ %32, %30 ], [ %14, %13 ]
  store %"class.std::__1::basic_string.1"* %11, %"class.std::__1::basic_string.1"** %15, align 8
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %33, %6
  %36 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %7, i64 -1, i32 2
  %37 = bitcast %"class.std::__1::basic_string.1"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = bitcast %"class.std::__1::basic_string.1"* %36 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #14
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %7, i64 -1, i32 1
  %46 = bitcast %"class.std::__1::basic_string.1"* %45 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string.1"* %45 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %50, %44
  %54 = icmp eq %struct.ProcessMemoryInformation* %8, %1
  br i1 %54, label %55, label %6

55:                                               ; preds = %53, %2
  store %struct.ProcessMemoryInformation* %1, %struct.ProcessMemoryInformation** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string.1"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string.1"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string.1"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string.1"*
  br i1 %15, label %251, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string.1"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string.1"* %24, %"class.std::__1::basic_string.1"* %2
  %26 = icmp eq %"class.std::__1::basic_string.1"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"class.std::__1::basic_string.1"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string.1"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %28, %"class.std::__1::basic_string.1"* dereferenceable(24) %29) #12
  %31 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %29, i64 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %28, i64 1
  %33 = icmp eq %"class.std::__1::basic_string.1"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"class.std::__1::basic_string.1"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %235

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"class.std::__1::basic_string.1"* %25, %2
  br i1 %38, label %233, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"class.std::__1::basic_string.1"*
  br label %41

41:                                               ; preds = %227, %39
  %42 = phi %"class.std::__1::basic_string.1"* [ %229, %227 ], [ %40, %39 ]
  %43 = phi %"class.std::__1::basic_string.1"* [ %228, %227 ], [ %24, %39 ]
  %44 = bitcast %"class.std::__1::basic_string.1"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string.1"* %42 to i8*
  %50 = bitcast %"class.std::__1::basic_string.1"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #12
  br label %227

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %55, 11
  br i1 %56, label %57, label %62

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string.1"* %42 to i16*
  %59 = trunc i64 %55 to i8
  %60 = bitcast %"class.std::__1::basic_string.1"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  store i8 %59, i8* %61, align 1
  br label %79

62:                                               ; preds = %51
  %63 = icmp ugt i64 %55, 9223372036854775791
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::basic_string.1"* %42 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %65) #13
  unreachable

66:                                               ; preds = %62
  %67 = add nuw nsw i64 %55, 8
  %68 = and i64 %67, -8
  %69 = icmp slt i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  tail call void @abort() #13
  unreachable

71:                                               ; preds = %66
  %72 = shl i64 %68, 1
  %73 = tail call i8* @_Znwm(i64 %72) #14
  %74 = bitcast i8* %73 to i16*
  %75 = bitcast %"class.std::__1::basic_string.1"* %42 to i8**
  store i8* %73, i8** %75, align 8
  %76 = or i64 %68, -9223372036854775808
  %77 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %78, align 8
  br label %79

79:                                               ; preds = %71, %57
  %80 = phi i16* [ %58, %57 ], [ %74, %71 ]
  %81 = add nuw nsw i64 %55, 1
  %82 = add i64 %55, 1
  %83 = icmp ult i64 %82, 16
  br i1 %83, label %174, label %84

84:                                               ; preds = %79
  %85 = getelementptr i16, i16* %80, i64 1
  %86 = getelementptr i16, i16* %85, i64 %55
  %87 = getelementptr i16, i16* %53, i64 1
  %88 = getelementptr i16, i16* %87, i64 %55
  %89 = icmp ult i16* %80, %88
  %90 = icmp ult i16* %53, %86
  %91 = and i1 %89, %90
  br i1 %91, label %174, label %92

92:                                               ; preds = %84
  %93 = and i64 %82, -16
  %94 = sub i64 %81, %93
  %95 = getelementptr i16, i16* %53, i64 %93
  %96 = getelementptr i16, i16* %80, i64 %93
  %97 = add i64 %93, -16
  %98 = lshr exact i64 %97, 4
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 3
  %101 = icmp ult i64 %97, 48
  br i1 %101, label %153, label %102

102:                                              ; preds = %92
  %103 = sub nsw i64 %99, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i64 [ 0, %102 ], [ %150, %104 ]
  %106 = phi i64 [ %103, %102 ], [ %151, %104 ]
  %107 = getelementptr i16, i16* %53, i64 %105
  %108 = getelementptr i16, i16* %80, i64 %105
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !174
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !174
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !177, !noalias !174
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !177, !noalias !174
  %117 = or i64 %105, 16
  %118 = getelementptr i16, i16* %53, i64 %117
  %119 = getelementptr i16, i16* %80, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !174
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !174
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !177, !noalias !174
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !177, !noalias !174
  %128 = or i64 %105, 32
  %129 = getelementptr i16, i16* %53, i64 %128
  %130 = getelementptr i16, i16* %80, i64 %128
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !174
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !174
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !177, !noalias !174
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !177, !noalias !174
  %139 = or i64 %105, 48
  %140 = getelementptr i16, i16* %53, i64 %139
  %141 = getelementptr i16, i16* %80, i64 %139
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !174
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !174
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !177, !noalias !174
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !177, !noalias !174
  %150 = add i64 %105, 64
  %151 = add i64 %106, -4
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %104, !llvm.loop !179

153:                                              ; preds = %104, %92
  %154 = phi i64 [ 0, %92 ], [ %150, %104 ]
  %155 = icmp eq i64 %100, 0
  br i1 %155, label %172, label %156

156:                                              ; preds = %153, %156
  %157 = phi i64 [ %169, %156 ], [ %154, %153 ]
  %158 = phi i64 [ %170, %156 ], [ %100, %153 ]
  %159 = getelementptr i16, i16* %53, i64 %157
  %160 = getelementptr i16, i16* %80, i64 %157
  %161 = bitcast i16* %159 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !174
  %163 = getelementptr i16, i16* %159, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !174
  %166 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %166, align 2, !alias.scope !177, !noalias !174
  %167 = getelementptr i16, i16* %160, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %168, align 2, !alias.scope !177, !noalias !174
  %169 = add i64 %157, 16
  %170 = add i64 %158, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %156, !llvm.loop !180

172:                                              ; preds = %156, %153
  %173 = icmp eq i64 %82, %93
  br i1 %173, label %227, label %174

174:                                              ; preds = %172, %84, %79
  %175 = phi i64 [ %81, %84 ], [ %81, %79 ], [ %94, %172 ]
  %176 = phi i16* [ %53, %84 ], [ %53, %79 ], [ %95, %172 ]
  %177 = phi i16* [ %80, %84 ], [ %80, %79 ], [ %96, %172 ]
  %178 = add i64 %175, -1
  %179 = and i64 %175, 7
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %192, label %181

181:                                              ; preds = %174, %181
  %182 = phi i64 [ %187, %181 ], [ %175, %174 ]
  %183 = phi i16* [ %189, %181 ], [ %176, %174 ]
  %184 = phi i16* [ %188, %181 ], [ %177, %174 ]
  %185 = phi i64 [ %190, %181 ], [ %179, %174 ]
  %186 = load i16, i16* %183, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %182, -1
  %188 = getelementptr inbounds i16, i16* %184, i64 1
  %189 = getelementptr inbounds i16, i16* %183, i64 1
  %190 = add i64 %185, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %181, !llvm.loop !181

192:                                              ; preds = %181, %174
  %193 = phi i64 [ %175, %174 ], [ %187, %181 ]
  %194 = phi i16* [ %176, %174 ], [ %189, %181 ]
  %195 = phi i16* [ %177, %174 ], [ %188, %181 ]
  %196 = icmp ult i64 %178, 7
  br i1 %196, label %227, label %197

197:                                              ; preds = %192, %197
  %198 = phi i64 [ %223, %197 ], [ %193, %192 ]
  %199 = phi i16* [ %225, %197 ], [ %194, %192 ]
  %200 = phi i16* [ %224, %197 ], [ %195, %192 ]
  %201 = load i16, i16* %199, align 2
  store i16 %201, i16* %200, align 2
  %202 = getelementptr inbounds i16, i16* %200, i64 1
  %203 = getelementptr inbounds i16, i16* %199, i64 1
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %200, i64 2
  %206 = getelementptr inbounds i16, i16* %199, i64 2
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %200, i64 3
  %209 = getelementptr inbounds i16, i16* %199, i64 3
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %200, i64 4
  %212 = getelementptr inbounds i16, i16* %199, i64 4
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %200, i64 5
  %215 = getelementptr inbounds i16, i16* %199, i64 5
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %200, i64 6
  %218 = getelementptr inbounds i16, i16* %199, i64 6
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %200, i64 7
  %221 = getelementptr inbounds i16, i16* %199, i64 7
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = add i64 %198, -8
  %224 = getelementptr inbounds i16, i16* %200, i64 8
  %225 = getelementptr inbounds i16, i16* %199, i64 8
  %226 = icmp eq i64 %223, 0
  br i1 %226, label %227, label %197, !llvm.loop !182

227:                                              ; preds = %192, %197, %172, %48
  %228 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %43, i64 1
  %229 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %42, i64 1
  %230 = icmp eq %"class.std::__1::basic_string.1"* %228, %2
  br i1 %230, label %231, label %41

231:                                              ; preds = %227
  %232 = ptrtoint %"class.std::__1::basic_string.1"* %229 to i64
  br label %233

233:                                              ; preds = %36, %231
  %234 = phi i64 [ %37, %36 ], [ %232, %231 ]
  store i64 %234, i64* %19, align 8
  br label %494

235:                                              ; preds = %34
  %236 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %18, align 8
  %237 = icmp eq %"class.std::__1::basic_string.1"* %236, %35
  br i1 %237, label %250, label %238

238:                                              ; preds = %235, %248
  %239 = phi %"class.std::__1::basic_string.1"* [ %240, %248 ], [ %236, %235 ]
  %240 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %239, i64 -1
  %241 = bitcast %"class.std::__1::basic_string.1"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %238
  %246 = bitcast %"class.std::__1::basic_string.1"* %240 to i8**
  %247 = load i8*, i8** %246, align 8
  tail call void @_ZdlPv(i8* %247) #14
  br label %248

248:                                              ; preds = %245, %238
  %249 = icmp eq %"class.std::__1::basic_string.1"* %240, %35
  br i1 %249, label %250, label %238

250:                                              ; preds = %248, %235
  store %"class.std::__1::basic_string.1"* %35, %"class.std::__1::basic_string.1"** %18, align 8
  br label %494

251:                                              ; preds = %3
  %252 = icmp eq i64 %12, 0
  br i1 %252, label %276, label %253

253:                                              ; preds = %251
  %254 = inttoptr i64 %12 to i8*
  %255 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %256 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %255, align 8
  %257 = icmp eq %"class.std::__1::basic_string.1"* %256, %16
  br i1 %257, label %273, label %258

258:                                              ; preds = %253, %268
  %259 = phi %"class.std::__1::basic_string.1"* [ %260, %268 ], [ %256, %253 ]
  %260 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %259, i64 -1
  %261 = bitcast %"class.std::__1::basic_string.1"* %260 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %261, i64 0, i32 1, i32 1
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %258
  %266 = bitcast %"class.std::__1::basic_string.1"* %260 to i8**
  %267 = load i8*, i8** %266, align 8
  tail call void @_ZdlPv(i8* %267) #14
  br label %268

268:                                              ; preds = %265, %258
  %269 = icmp eq %"class.std::__1::basic_string.1"* %260, %16
  br i1 %269, label %270, label %258

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector"* %0 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %270, %253
  %274 = phi i8* [ %272, %270 ], [ %254, %253 ]
  store %"class.std::__1::basic_string.1"* %16, %"class.std::__1::basic_string.1"** %255, align 8
  tail call void @_ZdlPv(i8* %274) #14
  %275 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #12
  br label %276

276:                                              ; preds = %251, %273
  %277 = phi i64 [ %10, %251 ], [ 0, %273 ]
  %278 = icmp ugt i64 %7, 768614336404564650
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %280) #13
  unreachable

281:                                              ; preds = %276
  %282 = sdiv exact i64 %277, 24
  %283 = icmp ult i64 %282, 384307168202282325
  br i1 %283, label %284, label %288

284:                                              ; preds = %281
  %285 = shl nsw i64 %282, 1
  %286 = icmp ult i64 %285, %7
  %287 = select i1 %286, i64 %7, i64 %285
  br label %288

288:                                              ; preds = %284, %281
  %289 = phi i64 [ %287, %284 ], [ 768614336404564650, %281 ]
  %290 = mul i64 %289, 24
  %291 = tail call i8* @_Znwm(i64 %290) #14
  %292 = bitcast i8* %291 to %"class.std::__1::basic_string.1"*
  %293 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %294 = bitcast %"class.std::__1::basic_string.1"** %293 to i8**
  store i8* %291, i8** %294, align 8
  %295 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %291, i8** %295, align 8
  %296 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %292, i64 %289
  store %"class.std::__1::basic_string.1"* %296, %"class.std::__1::basic_string.1"** %8, align 8
  %297 = bitcast %"class.std::__1::basic_string.1"** %293 to i64*
  %298 = ptrtoint i8* %291 to i64
  %299 = icmp eq %"class.std::__1::basic_string.1"* %1, %2
  br i1 %299, label %492, label %300

300:                                              ; preds = %288, %486
  %301 = phi %"class.std::__1::basic_string.1"* [ %488, %486 ], [ %292, %288 ]
  %302 = phi %"class.std::__1::basic_string.1"* [ %487, %486 ], [ %1, %288 ]
  %303 = bitcast %"class.std::__1::basic_string.1"* %302 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %303, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %300
  %308 = bitcast %"class.std::__1::basic_string.1"* %301 to i8*
  %309 = bitcast %"class.std::__1::basic_string.1"* %302 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 8 %309, i64 24, i1 false) #12
  br label %486

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i16*, i16** %311, align 8
  %313 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = icmp ult i64 %314, 11
  br i1 %315, label %316, label %321

316:                                              ; preds = %310
  %317 = bitcast %"class.std::__1::basic_string.1"* %301 to i16*
  %318 = trunc i64 %314 to i8
  %319 = bitcast %"class.std::__1::basic_string.1"* %301 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %319, i64 0, i32 1, i32 1
  store i8 %318, i8* %320, align 1
  br label %338

321:                                              ; preds = %310
  %322 = icmp ugt i64 %314, 9223372036854775791
  br i1 %322, label %323, label %325

323:                                              ; preds = %321
  %324 = bitcast %"class.std::__1::basic_string.1"* %301 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %324) #13
  unreachable

325:                                              ; preds = %321
  %326 = add nuw nsw i64 %314, 8
  %327 = and i64 %326, -8
  %328 = icmp slt i64 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %325
  tail call void @abort() #13
  unreachable

330:                                              ; preds = %325
  %331 = shl i64 %327, 1
  %332 = tail call i8* @_Znwm(i64 %331) #14
  %333 = bitcast i8* %332 to i16*
  %334 = bitcast %"class.std::__1::basic_string.1"* %301 to i8**
  store i8* %332, i8** %334, align 8
  %335 = or i64 %327, -9223372036854775808
  %336 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %335, i64* %336, align 8
  %337 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %314, i64* %337, align 8
  br label %338

338:                                              ; preds = %330, %316
  %339 = phi i16* [ %317, %316 ], [ %333, %330 ]
  %340 = add nuw nsw i64 %314, 1
  %341 = add i64 %314, 1
  %342 = icmp ult i64 %341, 16
  br i1 %342, label %433, label %343

343:                                              ; preds = %338
  %344 = getelementptr i16, i16* %339, i64 1
  %345 = getelementptr i16, i16* %344, i64 %314
  %346 = getelementptr i16, i16* %312, i64 1
  %347 = getelementptr i16, i16* %346, i64 %314
  %348 = icmp ult i16* %339, %347
  %349 = icmp ult i16* %312, %345
  %350 = and i1 %348, %349
  br i1 %350, label %433, label %351

351:                                              ; preds = %343
  %352 = and i64 %341, -16
  %353 = sub i64 %340, %352
  %354 = getelementptr i16, i16* %312, i64 %352
  %355 = getelementptr i16, i16* %339, i64 %352
  %356 = add i64 %352, -16
  %357 = lshr exact i64 %356, 4
  %358 = add nuw nsw i64 %357, 1
  %359 = and i64 %358, 3
  %360 = icmp ult i64 %356, 48
  br i1 %360, label %412, label %361

361:                                              ; preds = %351
  %362 = sub nsw i64 %358, %359
  br label %363

363:                                              ; preds = %363, %361
  %364 = phi i64 [ 0, %361 ], [ %409, %363 ]
  %365 = phi i64 [ %362, %361 ], [ %410, %363 ]
  %366 = getelementptr i16, i16* %312, i64 %364
  %367 = getelementptr i16, i16* %339, i64 %364
  %368 = bitcast i16* %366 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !183
  %370 = getelementptr i16, i16* %366, i64 8
  %371 = bitcast i16* %370 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !183
  %373 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %373, align 2, !alias.scope !186, !noalias !183
  %374 = getelementptr i16, i16* %367, i64 8
  %375 = bitcast i16* %374 to <8 x i16>*
  store <8 x i16> %372, <8 x i16>* %375, align 2, !alias.scope !186, !noalias !183
  %376 = or i64 %364, 16
  %377 = getelementptr i16, i16* %312, i64 %376
  %378 = getelementptr i16, i16* %339, i64 %376
  %379 = bitcast i16* %377 to <8 x i16>*
  %380 = load <8 x i16>, <8 x i16>* %379, align 2, !alias.scope !183
  %381 = getelementptr i16, i16* %377, i64 8
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !183
  %384 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %380, <8 x i16>* %384, align 2, !alias.scope !186, !noalias !183
  %385 = getelementptr i16, i16* %378, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %386, align 2, !alias.scope !186, !noalias !183
  %387 = or i64 %364, 32
  %388 = getelementptr i16, i16* %312, i64 %387
  %389 = getelementptr i16, i16* %339, i64 %387
  %390 = bitcast i16* %388 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !183
  %392 = getelementptr i16, i16* %388, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !183
  %395 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %395, align 2, !alias.scope !186, !noalias !183
  %396 = getelementptr i16, i16* %389, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %397, align 2, !alias.scope !186, !noalias !183
  %398 = or i64 %364, 48
  %399 = getelementptr i16, i16* %312, i64 %398
  %400 = getelementptr i16, i16* %339, i64 %398
  %401 = bitcast i16* %399 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !183
  %403 = getelementptr i16, i16* %399, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  %405 = load <8 x i16>, <8 x i16>* %404, align 2, !alias.scope !183
  %406 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %406, align 2, !alias.scope !186, !noalias !183
  %407 = getelementptr i16, i16* %400, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %405, <8 x i16>* %408, align 2, !alias.scope !186, !noalias !183
  %409 = add i64 %364, 64
  %410 = add i64 %365, -4
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %412, label %363, !llvm.loop !188

412:                                              ; preds = %363, %351
  %413 = phi i64 [ 0, %351 ], [ %409, %363 ]
  %414 = icmp eq i64 %359, 0
  br i1 %414, label %431, label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %428, %415 ], [ %413, %412 ]
  %417 = phi i64 [ %429, %415 ], [ %359, %412 ]
  %418 = getelementptr i16, i16* %312, i64 %416
  %419 = getelementptr i16, i16* %339, i64 %416
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !183
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !183
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !186, !noalias !183
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !186, !noalias !183
  %428 = add i64 %416, 16
  %429 = add i64 %417, -1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %415, !llvm.loop !189

431:                                              ; preds = %415, %412
  %432 = icmp eq i64 %341, %352
  br i1 %432, label %486, label %433

433:                                              ; preds = %431, %343, %338
  %434 = phi i64 [ %340, %343 ], [ %340, %338 ], [ %353, %431 ]
  %435 = phi i16* [ %312, %343 ], [ %312, %338 ], [ %354, %431 ]
  %436 = phi i16* [ %339, %343 ], [ %339, %338 ], [ %355, %431 ]
  %437 = add i64 %434, -1
  %438 = and i64 %434, 7
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %451, label %440

440:                                              ; preds = %433, %440
  %441 = phi i64 [ %446, %440 ], [ %434, %433 ]
  %442 = phi i16* [ %448, %440 ], [ %435, %433 ]
  %443 = phi i16* [ %447, %440 ], [ %436, %433 ]
  %444 = phi i64 [ %449, %440 ], [ %438, %433 ]
  %445 = load i16, i16* %442, align 2
  store i16 %445, i16* %443, align 2
  %446 = add i64 %441, -1
  %447 = getelementptr inbounds i16, i16* %443, i64 1
  %448 = getelementptr inbounds i16, i16* %442, i64 1
  %449 = add i64 %444, -1
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %440, !llvm.loop !190

451:                                              ; preds = %440, %433
  %452 = phi i64 [ %434, %433 ], [ %446, %440 ]
  %453 = phi i16* [ %435, %433 ], [ %448, %440 ]
  %454 = phi i16* [ %436, %433 ], [ %447, %440 ]
  %455 = icmp ult i64 %437, 7
  br i1 %455, label %486, label %456

456:                                              ; preds = %451, %456
  %457 = phi i64 [ %482, %456 ], [ %452, %451 ]
  %458 = phi i16* [ %484, %456 ], [ %453, %451 ]
  %459 = phi i16* [ %483, %456 ], [ %454, %451 ]
  %460 = load i16, i16* %458, align 2
  store i16 %460, i16* %459, align 2
  %461 = getelementptr inbounds i16, i16* %459, i64 1
  %462 = getelementptr inbounds i16, i16* %458, i64 1
  %463 = load i16, i16* %462, align 2
  store i16 %463, i16* %461, align 2
  %464 = getelementptr inbounds i16, i16* %459, i64 2
  %465 = getelementptr inbounds i16, i16* %458, i64 2
  %466 = load i16, i16* %465, align 2
  store i16 %466, i16* %464, align 2
  %467 = getelementptr inbounds i16, i16* %459, i64 3
  %468 = getelementptr inbounds i16, i16* %458, i64 3
  %469 = load i16, i16* %468, align 2
  store i16 %469, i16* %467, align 2
  %470 = getelementptr inbounds i16, i16* %459, i64 4
  %471 = getelementptr inbounds i16, i16* %458, i64 4
  %472 = load i16, i16* %471, align 2
  store i16 %472, i16* %470, align 2
  %473 = getelementptr inbounds i16, i16* %459, i64 5
  %474 = getelementptr inbounds i16, i16* %458, i64 5
  %475 = load i16, i16* %474, align 2
  store i16 %475, i16* %473, align 2
  %476 = getelementptr inbounds i16, i16* %459, i64 6
  %477 = getelementptr inbounds i16, i16* %458, i64 6
  %478 = load i16, i16* %477, align 2
  store i16 %478, i16* %476, align 2
  %479 = getelementptr inbounds i16, i16* %459, i64 7
  %480 = getelementptr inbounds i16, i16* %458, i64 7
  %481 = load i16, i16* %480, align 2
  store i16 %481, i16* %479, align 2
  %482 = add i64 %457, -8
  %483 = getelementptr inbounds i16, i16* %459, i64 8
  %484 = getelementptr inbounds i16, i16* %458, i64 8
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %486, label %456, !llvm.loop !191

486:                                              ; preds = %451, %456, %431, %307
  %487 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %302, i64 1
  %488 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %301, i64 1
  %489 = icmp eq %"class.std::__1::basic_string.1"* %487, %2
  br i1 %489, label %490, label %300

490:                                              ; preds = %486
  %491 = ptrtoint %"class.std::__1::basic_string.1"* %488 to i64
  br label %492

492:                                              ; preds = %288, %490
  %493 = phi i64 [ %298, %288 ], [ %491, %490 ]
  store i64 %493, i64* %297, align 8
  br label %494

494:                                              ; preds = %233, %250, %492
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM13MemoryDetailsFvvEJ13scoped_refptrIS3_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %class.MemoryDetails*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%class.MemoryDetails*)**
  %21 = load void (%class.MemoryDetails*)*, void (%class.MemoryDetails*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%class.MemoryDetails*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%class.MemoryDetails*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%class.MemoryDetails* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM13MemoryDetailsFvvEJ13scoped_refptrIS2_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %class.MemoryDetails**
  %6 = load %class.MemoryDetails*, %class.MemoryDetails** %5, align 8
  %7 = icmp eq %class.MemoryDetails* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.MemoryDetails, %class.MemoryDetails* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %class.MemoryDetails*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%class.MemoryDetails*)***
  %17 = load void (%class.MemoryDetails*)**, void (%class.MemoryDetails*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.MemoryDetails*)*, void (%class.MemoryDetails*)** %17, i64 2
  %19 = load void (%class.MemoryDetails*)*, void (%class.MemoryDetails*)** %18, align 8
  tail call void %19(%class.MemoryDetails* nonnull %15) #12
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEvT0_S6_T_(%struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*, %"struct.std::__1::__less.251"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %178, %3
  %5 = phi %struct.ProcessMemoryInformation* [ %1, %3 ], [ %160, %178 ]
  %6 = phi %struct.ProcessMemoryInformation* [ %0, %3 ], [ %14, %178 ]
  %7 = ptrtoint %struct.ProcessMemoryInformation* %5 to i64
  %8 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %5, i64 -1
  %9 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %5, i64 -1, i32 9
  %10 = ptrtoint %struct.ProcessMemoryInformation* %5 to i64
  br label %11

11:                                               ; preds = %189, %4
  %12 = phi %struct.ProcessMemoryInformation* [ %6, %4 ], [ %190, %189 ]
  br label %13

13:                                               ; preds = %117, %11
  %14 = phi %struct.ProcessMemoryInformation* [ %12, %11 ], [ %106, %117 ]
  %15 = ptrtoint %struct.ProcessMemoryInformation* %14 to i64
  %16 = sub i64 %7, %15
  %17 = sdiv exact i64 %16, 112
  switch i64 %17, label %57 [
    i64 0, label %193
    i64 1, label %193
    i64 2, label %18
    i64 3, label %26
    i64 4, label %30
    i64 5, label %51
  ]

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %5, i64 -1, i32 9
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 0, i32 9
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %20, %22
  br i1 %23, label %24, label %193

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %5, i64 -1
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %14, %struct.ProcessMemoryInformation* dereferenceable(112) %25)
  br label %193

26:                                               ; preds = %13
  %27 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 1
  %28 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %5, i64 -1
  %29 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_T_(%struct.ProcessMemoryInformation* %14, %struct.ProcessMemoryInformation* %27, %struct.ProcessMemoryInformation* %28, %"struct.std::__1::__less.251"* dereferenceable(1) %2)
  br label %193

30:                                               ; preds = %13
  %31 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 1
  %32 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 2
  %33 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_T_(%struct.ProcessMemoryInformation* %14, %struct.ProcessMemoryInformation* %31, %struct.ProcessMemoryInformation* %32, %"struct.std::__1::__less.251"* dereferenceable(1) %2) #12
  %34 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %5, i64 -1, i32 9
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 2, i32 9
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %35, %37
  br i1 %38, label %39, label %193

39:                                               ; preds = %30
  %40 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %5, i64 -1
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %32, %struct.ProcessMemoryInformation* dereferenceable(112) %40) #12
  %41 = load i64, i64* %36, align 8
  %42 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 1, i32 9
  %43 = load i64, i64* %42, align 8
  %44 = icmp ult i64 %41, %43
  br i1 %44, label %45, label %193

45:                                               ; preds = %39
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %31, %struct.ProcessMemoryInformation* dereferenceable(112) %32) #12
  %46 = load i64, i64* %42, align 8
  %47 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 0, i32 9
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %46, %48
  br i1 %49, label %50, label %193

50:                                               ; preds = %45
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %14, %struct.ProcessMemoryInformation* dereferenceable(112) %31) #12
  br label %193

51:                                               ; preds = %13
  %52 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 1
  %53 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 2
  %54 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 3
  %55 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %5, i64 -1
  %56 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_S6_S6_T_(%struct.ProcessMemoryInformation* %14, %struct.ProcessMemoryInformation* %52, %struct.ProcessMemoryInformation* %53, %struct.ProcessMemoryInformation* %54, %struct.ProcessMemoryInformation* %55, %"struct.std::__1::__less.251"* dereferenceable(1) %2)
  br label %193

57:                                               ; preds = %13
  %58 = icmp slt i64 %16, 784
  br i1 %58, label %59, label %60

59:                                               ; preds = %57
  tail call void @_ZNSt3__118__insertion_sort_3IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEvT0_S6_T_(%struct.ProcessMemoryInformation* %14, %struct.ProcessMemoryInformation* %5, %"struct.std::__1::__less.251"* dereferenceable(1) %2)
  br label %193

60:                                               ; preds = %57
  %61 = icmp sgt i64 %16, 111888
  %62 = udiv i64 %16, 224
  %63 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 %62
  br i1 %61, label %64, label %69

64:                                               ; preds = %60
  %65 = udiv i64 %16, 448
  %66 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 %65
  %67 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %63, i64 %65
  %68 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_S6_S6_T_(%struct.ProcessMemoryInformation* %14, %struct.ProcessMemoryInformation* %66, %struct.ProcessMemoryInformation* %63, %struct.ProcessMemoryInformation* %67, %struct.ProcessMemoryInformation* %8, %"struct.std::__1::__less.251"* dereferenceable(1) %2)
  br label %71

69:                                               ; preds = %60
  %70 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_T_(%struct.ProcessMemoryInformation* %14, %struct.ProcessMemoryInformation* %63, %struct.ProcessMemoryInformation* %8, %"struct.std::__1::__less.251"* dereferenceable(1) %2)
  br label %71

71:                                               ; preds = %69, %64
  %72 = phi i32 [ %68, %64 ], [ %70, %69 ]
  %73 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 0, i32 9
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 %62, i32 9
  %76 = load i64, i64* %75, align 8
  %77 = icmp ult i64 %74, %76
  br i1 %77, label %126, label %78

78:                                               ; preds = %71, %120
  %79 = phi %struct.ProcessMemoryInformation* [ %80, %120 ], [ %8, %71 ]
  %80 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %79, i64 -1
  %81 = icmp eq %struct.ProcessMemoryInformation* %14, %80
  br i1 %81, label %82, label %120

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 1
  %84 = load i64, i64* %9, align 8
  %85 = icmp ult i64 %74, %84
  br i1 %85, label %98, label %86

86:                                               ; preds = %82
  %87 = icmp eq %struct.ProcessMemoryInformation* %83, %8
  br i1 %87, label %193, label %88

88:                                               ; preds = %86, %95
  %89 = phi %struct.ProcessMemoryInformation* [ %96, %95 ], [ %83, %86 ]
  %90 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %89, i64 0, i32 9
  %91 = load i64, i64* %90, align 8
  %92 = icmp ult i64 %74, %91
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %89, %struct.ProcessMemoryInformation* dereferenceable(112) %8)
  %94 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %89, i64 1
  br label %98

95:                                               ; preds = %88
  %96 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %89, i64 1
  %97 = icmp eq %struct.ProcessMemoryInformation* %96, %8
  br i1 %97, label %193, label %88

98:                                               ; preds = %93, %82
  %99 = phi %struct.ProcessMemoryInformation* [ %83, %82 ], [ %94, %93 ]
  %100 = icmp eq %struct.ProcessMemoryInformation* %99, %8
  br i1 %100, label %193, label %101

101:                                              ; preds = %98, %119
  %102 = phi %struct.ProcessMemoryInformation* [ %110, %119 ], [ %99, %98 ]
  %103 = phi %struct.ProcessMemoryInformation* [ %113, %119 ], [ %8, %98 ]
  %104 = load i64, i64* %73, align 8
  br label %105

105:                                              ; preds = %105, %101
  %106 = phi %struct.ProcessMemoryInformation* [ %102, %101 ], [ %110, %105 ]
  %107 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %106, i64 0, i32 9
  %108 = load i64, i64* %107, align 8
  %109 = icmp ult i64 %104, %108
  %110 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %106, i64 1
  br i1 %109, label %111, label %105

111:                                              ; preds = %105, %111
  %112 = phi %struct.ProcessMemoryInformation* [ %113, %111 ], [ %103, %105 ]
  %113 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %112, i64 -1
  %114 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %112, i64 -1, i32 9
  %115 = load i64, i64* %114, align 8
  %116 = icmp ult i64 %104, %115
  br i1 %116, label %111, label %117

117:                                              ; preds = %111
  %118 = icmp ult %struct.ProcessMemoryInformation* %106, %113
  br i1 %118, label %119, label %13

119:                                              ; preds = %117
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %106, %struct.ProcessMemoryInformation* dereferenceable(112) %113)
  br label %101

120:                                              ; preds = %78
  %121 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %79, i64 -1, i32 9
  %122 = load i64, i64* %121, align 8
  %123 = icmp ult i64 %122, %76
  br i1 %123, label %124, label %78

124:                                              ; preds = %120
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %14, %struct.ProcessMemoryInformation* dereferenceable(112) %80)
  %125 = add i32 %72, 1
  br label %126

126:                                              ; preds = %71, %124
  %127 = phi i32 [ %125, %124 ], [ %72, %71 ]
  %128 = phi %struct.ProcessMemoryInformation* [ %80, %124 ], [ %8, %71 ]
  %129 = ptrtoint %struct.ProcessMemoryInformation* %14 to i64
  %130 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %14, i64 1
  %131 = icmp ult %struct.ProcessMemoryInformation* %130, %128
  br i1 %131, label %132, label %157

132:                                              ; preds = %126, %153
  %133 = phi %struct.ProcessMemoryInformation* [ %156, %153 ], [ %63, %126 ]
  %134 = phi i32 [ %154, %153 ], [ %127, %126 ]
  %135 = phi %struct.ProcessMemoryInformation* [ %144, %153 ], [ %130, %126 ]
  %136 = phi %struct.ProcessMemoryInformation* [ %147, %153 ], [ %128, %126 ]
  %137 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %133, i64 0, i32 9
  %138 = load i64, i64* %137, align 8
  br label %139

139:                                              ; preds = %139, %132
  %140 = phi %struct.ProcessMemoryInformation* [ %135, %132 ], [ %144, %139 ]
  %141 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %140, i64 0, i32 9
  %142 = load i64, i64* %141, align 8
  %143 = icmp ult i64 %142, %138
  %144 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %140, i64 1
  br i1 %143, label %139, label %145

145:                                              ; preds = %139, %145
  %146 = phi %struct.ProcessMemoryInformation* [ %147, %145 ], [ %136, %139 ]
  %147 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %146, i64 -1
  %148 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %146, i64 -1, i32 9
  %149 = load i64, i64* %148, align 8
  %150 = icmp ult i64 %149, %138
  br i1 %150, label %151, label %145

151:                                              ; preds = %145
  %152 = icmp ugt %struct.ProcessMemoryInformation* %140, %147
  br i1 %152, label %157, label %153

153:                                              ; preds = %151
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %140, %struct.ProcessMemoryInformation* dereferenceable(112) %147)
  %154 = add i32 %134, 1
  %155 = icmp eq %struct.ProcessMemoryInformation* %133, %140
  %156 = select i1 %155, %struct.ProcessMemoryInformation* %147, %struct.ProcessMemoryInformation* %133
  br label %132

157:                                              ; preds = %151, %126
  %158 = phi %struct.ProcessMemoryInformation* [ %63, %126 ], [ %133, %151 ]
  %159 = phi i32 [ %127, %126 ], [ %134, %151 ]
  %160 = phi %struct.ProcessMemoryInformation* [ %130, %126 ], [ %140, %151 ]
  %161 = icmp eq %struct.ProcessMemoryInformation* %160, %158
  br i1 %161, label %170, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %158, i64 0, i32 9
  %164 = load i64, i64* %163, align 8
  %165 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %160, i64 0, i32 9
  %166 = load i64, i64* %165, align 8
  %167 = icmp ult i64 %164, %166
  br i1 %167, label %168, label %170

168:                                              ; preds = %162
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %160, %struct.ProcessMemoryInformation* dereferenceable(112) %158)
  %169 = add i32 %159, 1
  br label %170

170:                                              ; preds = %157, %168, %162
  %171 = phi i32 [ %169, %168 ], [ %159, %162 ], [ %159, %157 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %180

173:                                              ; preds = %170
  %174 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEbT0_S6_T_(%struct.ProcessMemoryInformation* %14, %struct.ProcessMemoryInformation* %160, %"struct.std::__1::__less.251"* dereferenceable(1) %2)
  %175 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %160, i64 1
  %176 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEbT0_S6_T_(%struct.ProcessMemoryInformation* %175, %struct.ProcessMemoryInformation* %5, %"struct.std::__1::__less.251"* dereferenceable(1) %2)
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  br i1 %174, label %193, label %178

178:                                              ; preds = %177, %191
  br label %4

179:                                              ; preds = %173
  br i1 %174, label %189, label %180

180:                                              ; preds = %179, %170
  %181 = ptrtoint %struct.ProcessMemoryInformation* %160 to i64
  %182 = sub i64 %181, %129
  %183 = sdiv exact i64 %182, 112
  %184 = sub i64 %10, %181
  %185 = sdiv exact i64 %184, 112
  %186 = icmp slt i64 %183, %185
  br i1 %186, label %187, label %191

187:                                              ; preds = %180
  tail call void @_ZNSt3__16__sortIRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEvT0_S6_T_(%struct.ProcessMemoryInformation* %14, %struct.ProcessMemoryInformation* %160, %"struct.std::__1::__less.251"* dereferenceable(1) %2)
  %188 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %160, i64 1
  br label %189

189:                                              ; preds = %187, %179
  %190 = phi %struct.ProcessMemoryInformation* [ %175, %179 ], [ %188, %187 ]
  br label %11

191:                                              ; preds = %180
  %192 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %160, i64 1
  tail call void @_ZNSt3__16__sortIRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEvT0_S6_T_(%struct.ProcessMemoryInformation* %192, %struct.ProcessMemoryInformation* %5, %"struct.std::__1::__less.251"* dereferenceable(1) %2)
  br label %178

193:                                              ; preds = %177, %98, %13, %13, %86, %95, %50, %45, %39, %30, %18, %24, %26, %51, %59
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112), %struct.ProcessMemoryInformation* dereferenceable(112)) local_unnamed_addr #11 comdat {
  %3 = alloca %struct.ProcessMemoryInformation, align 8
  %4 = bitcast %struct.ProcessMemoryInformation* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %4) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 112, i1 false)
  call void @_ZN24ProcessMemoryInformationC2ERKS_(%struct.ProcessMemoryInformation* nonnull %3, %struct.ProcessMemoryInformation* dereferenceable(112) %0)
  %5 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 0
  store i32 %6, i32* %7, align 8
  %8 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 1
  %9 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 1
  %10 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %8, %"class.std::__1::basic_string.1"* dereferenceable(24) %9) #12
  %11 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 2
  %12 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 2
  %13 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %11, %"class.std::__1::basic_string.1"* dereferenceable(24) %12) #12
  %14 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 3
  %15 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 3
  %16 = bitcast i32* %14 to i8*
  %17 = bitcast i32* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 20, i1 false) #12
  %18 = icmp eq %struct.ProcessMemoryInformation* %0, %1
  br i1 %18, label %25, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 8
  %21 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %21, align 8
  %23 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 8, i32 0, i32 1
  %24 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %23, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %20, %"class.std::__1::basic_string.1"* %22, %"class.std::__1::basic_string.1"* %24) #12
  br label %25

25:                                               ; preds = %2, %19
  %26 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 9
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 9
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %3, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %5, align 8
  %31 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %3, i64 0, i32 1
  %32 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %9, %"class.std::__1::basic_string.1"* dereferenceable(24) %31) #12
  %33 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %3, i64 0, i32 2
  %34 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %12, %"class.std::__1::basic_string.1"* dereferenceable(24) %33) #12
  %35 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %3, i64 0, i32 3
  %36 = bitcast i32* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %36, i64 20, i1 false) #12
  %37 = icmp eq %struct.ProcessMemoryInformation* %3, %1
  br i1 %37, label %44, label %38

38:                                               ; preds = %25
  %39 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 8
  %40 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %3, i64 0, i32 8, i32 0, i32 0
  %41 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %40, align 8
  %42 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %3, i64 0, i32 8, i32 0, i32 1
  %43 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %42, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %39, %"class.std::__1::basic_string.1"* %41, %"class.std::__1::basic_string.1"* %43) #12
  br label %44

44:                                               ; preds = %25, %38
  %45 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %3, i64 0, i32 9
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %26, align 8
  %47 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %3, i64 0, i32 8
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %48, align 8
  %50 = icmp eq %"class.std::__1::basic_string.1"* %49, null
  br i1 %50, label %73, label %51

51:                                               ; preds = %44
  %52 = bitcast %"class.std::__1::basic_string.1"* %49 to i8*
  %53 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %3, i64 0, i32 8, i32 0, i32 1
  %54 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %53, align 8
  %55 = icmp eq %"class.std::__1::basic_string.1"* %54, %49
  br i1 %55, label %71, label %56

56:                                               ; preds = %51, %66
  %57 = phi %"class.std::__1::basic_string.1"* [ %58, %66 ], [ %54, %51 ]
  %58 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %57, i64 -1
  %59 = bitcast %"class.std::__1::basic_string.1"* %58 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %59, i64 0, i32 1, i32 1
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %56
  %64 = bitcast %"class.std::__1::basic_string.1"* %58 to i8**
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %63, %56
  %67 = icmp eq %"class.std::__1::basic_string.1"* %58, %49
  br i1 %67, label %68, label %56

68:                                               ; preds = %66
  %69 = bitcast %"class.std::__1::vector"* %47 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %51
  %72 = phi i8* [ %70, %68 ], [ %52, %51 ]
  store %"class.std::__1::basic_string.1"* %49, %"class.std::__1::basic_string.1"** %53, align 8
  call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %71, %44
  %74 = bitcast %"class.std::__1::basic_string.1"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %74, i64 0, i32 1, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %73
  %79 = bitcast %"class.std::__1::basic_string.1"* %33 to i8**
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %78, %73
  %82 = bitcast %"class.std::__1::basic_string.1"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %82, i64 0, i32 1, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %81
  %87 = bitcast %"class.std::__1::basic_string.1"* %31 to i8**
  %88 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %88) #14
  br label %89

89:                                               ; preds = %81, %86
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_T_(%struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*, %"struct.std::__1::__less.251"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 9
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 9
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %6, %8
  %10 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %2, i64 0, i32 9
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %6
  br i1 %9, label %19, label %13

13:                                               ; preds = %4
  br i1 %12, label %14, label %26

14:                                               ; preds = %13
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %1, %struct.ProcessMemoryInformation* dereferenceable(112) %2)
  %15 = load i64, i64* %5, align 8
  %16 = load i64, i64* %7, align 8
  %17 = icmp ult i64 %15, %16
  br i1 %17, label %18, label %26

18:                                               ; preds = %14
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %0, %struct.ProcessMemoryInformation* dereferenceable(112) %1)
  br label %26

19:                                               ; preds = %4
  br i1 %12, label %20, label %21

20:                                               ; preds = %19
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %0, %struct.ProcessMemoryInformation* dereferenceable(112) %2)
  br label %26

21:                                               ; preds = %19
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %0, %struct.ProcessMemoryInformation* dereferenceable(112) %1)
  %22 = load i64, i64* %10, align 8
  %23 = load i64, i64* %5, align 8
  %24 = icmp ult i64 %22, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %1, %struct.ProcessMemoryInformation* dereferenceable(112) %2)
  br label %26

26:                                               ; preds = %21, %25, %14, %18, %13, %20
  %27 = phi i32 [ 1, %20 ], [ 0, %13 ], [ 2, %18 ], [ 1, %14 ], [ 2, %25 ], [ 1, %21 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_S6_S6_T_(%struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*, %"struct.std::__1::__less.251"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_T_(%struct.ProcessMemoryInformation* %0, %struct.ProcessMemoryInformation* %1, %struct.ProcessMemoryInformation* %2, %"struct.std::__1::__less.251"* dereferenceable(1) %5) #12
  %8 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %3, i64 0, i32 9
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %2, i64 0, i32 9
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %9, %11
  br i1 %12, label %13, label %27

13:                                               ; preds = %6
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %2, %struct.ProcessMemoryInformation* dereferenceable(112) %3) #12
  %14 = add i32 %7, 1
  %15 = load i64, i64* %10, align 8
  %16 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 9
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %27

19:                                               ; preds = %13
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %1, %struct.ProcessMemoryInformation* dereferenceable(112) %2) #12
  %20 = add i32 %7, 2
  %21 = load i64, i64* %16, align 8
  %22 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 9
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %0, %struct.ProcessMemoryInformation* dereferenceable(112) %1) #12
  %26 = add i32 %7, 3
  br label %27

27:                                               ; preds = %6, %13, %19, %25
  %28 = phi i32 [ %26, %25 ], [ %20, %19 ], [ %14, %13 ], [ %7, %6 ]
  %29 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 9
  %30 = load i64, i64* %29, align 8
  %31 = load i64, i64* %8, align 8
  %32 = icmp ult i64 %30, %31
  br i1 %32, label %33, label %52

33:                                               ; preds = %27
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %3, %struct.ProcessMemoryInformation* dereferenceable(112) %4)
  %34 = add i32 %28, 1
  %35 = load i64, i64* %8, align 8
  %36 = load i64, i64* %10, align 8
  %37 = icmp ult i64 %35, %36
  br i1 %37, label %38, label %52

38:                                               ; preds = %33
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %2, %struct.ProcessMemoryInformation* dereferenceable(112) %3)
  %39 = add i32 %28, 2
  %40 = load i64, i64* %10, align 8
  %41 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 0, i32 9
  %42 = load i64, i64* %41, align 8
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %44, label %52

44:                                               ; preds = %38
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %1, %struct.ProcessMemoryInformation* dereferenceable(112) %2)
  %45 = add i32 %28, 3
  %46 = load i64, i64* %41, align 8
  %47 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 9
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %46, %48
  br i1 %49, label %50, label %52

50:                                               ; preds = %44
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %0, %struct.ProcessMemoryInformation* dereferenceable(112) %1)
  %51 = add i32 %28, 4
  br label %52

52:                                               ; preds = %33, %44, %50, %38, %27
  %53 = phi i32 [ %51, %50 ], [ %45, %44 ], [ %39, %38 ], [ %34, %33 ], [ %28, %27 ]
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEvT0_S6_T_(%struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*, %"struct.std::__1::__less.251"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %struct.ProcessMemoryInformation, align 8
  %5 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 2
  %6 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 1
  %7 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_T_(%struct.ProcessMemoryInformation* %0, %struct.ProcessMemoryInformation* %6, %struct.ProcessMemoryInformation* %5, %"struct.std::__1::__less.251"* dereferenceable(1) %2)
  %8 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 3
  %9 = icmp eq %struct.ProcessMemoryInformation* %8, %1
  br i1 %9, label %29, label %10

10:                                               ; preds = %3
  %11 = bitcast %struct.ProcessMemoryInformation* %4 to i8*
  %12 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 9
  %13 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 0
  %14 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 1
  %15 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 2
  %16 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 3
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 8, i32 0, i32 0
  %19 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 8, i32 0, i32 1
  %20 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 8
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::vector"* %20 to i8**
  %23 = bitcast %"class.std::__1::basic_string.1"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = bitcast %"class.std::__1::basic_string.1"* %15 to i8**
  %26 = bitcast %"class.std::__1::basic_string.1"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = bitcast %"class.std::__1::basic_string.1"* %14 to i8**
  br label %30

29:                                               ; preds = %118, %3
  ret void

30:                                               ; preds = %10, %118
  %31 = phi %struct.ProcessMemoryInformation* [ %8, %10 ], [ %119, %118 ]
  %32 = phi %struct.ProcessMemoryInformation* [ %5, %10 ], [ %31, %118 ]
  %33 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %31, i64 0, i32 9
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %32, i64 0, i32 9
  %36 = load i64, i64* %35, align 8
  %37 = icmp ult i64 %34, %36
  br i1 %37, label %38, label %118

38:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 112, i1 false)
  call void @_ZN24ProcessMemoryInformationC2ERKS_(%struct.ProcessMemoryInformation* nonnull %4, %struct.ProcessMemoryInformation* dereferenceable(112) %31)
  br label %39

39:                                               ; preds = %64, %38
  %40 = phi %struct.ProcessMemoryInformation* [ %31, %38 ], [ %41, %64 ]
  %41 = phi %struct.ProcessMemoryInformation* [ %32, %38 ], [ %65, %64 ]
  %42 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %41, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %40, i64 0, i32 0
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %40, i64 0, i32 1
  %46 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %41, i64 0, i32 1
  %47 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %45, %"class.std::__1::basic_string.1"* dereferenceable(24) %46) #12
  %48 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %40, i64 0, i32 2
  %49 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %41, i64 0, i32 2
  %50 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %48, %"class.std::__1::basic_string.1"* dereferenceable(24) %49) #12
  %51 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %40, i64 0, i32 3
  %52 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %41, i64 0, i32 3
  %53 = bitcast i32* %51 to i8*
  %54 = bitcast i32* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 20, i1 false) #12
  %55 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %40, i64 0, i32 8
  %56 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %41, i64 0, i32 8, i32 0, i32 0
  %57 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %56, align 8
  %58 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %41, i64 0, i32 8, i32 0, i32 1
  %59 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %58, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %55, %"class.std::__1::basic_string.1"* %57, %"class.std::__1::basic_string.1"* %59) #12
  %60 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %41, i64 0, i32 9
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %40, i64 0, i32 9
  store i64 %61, i64* %62, align 8
  %63 = icmp eq %struct.ProcessMemoryInformation* %41, %0
  br i1 %63, label %70, label %64

64:                                               ; preds = %39
  %65 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %41, i64 -1
  %66 = load i64, i64* %12, align 8
  %67 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %41, i64 -1, i32 9
  %68 = load i64, i64* %67, align 8
  %69 = icmp ult i64 %66, %68
  br i1 %69, label %39, label %70

70:                                               ; preds = %39, %64
  %71 = phi %struct.ProcessMemoryInformation* [ %0, %39 ], [ %41, %64 ]
  %72 = bitcast i32* %52 to i8*
  %73 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %71, i64 0, i32 0
  %74 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %71, i64 0, i32 9
  %75 = load i32, i32* %13, align 8
  store i32 %75, i32* %73, align 8
  %76 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %46, %"class.std::__1::basic_string.1"* dereferenceable(24) %14) #12
  %77 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %49, %"class.std::__1::basic_string.1"* dereferenceable(24) %15) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %17, i64 20, i1 false) #12
  %78 = icmp eq %struct.ProcessMemoryInformation* %71, %4
  br i1 %78, label %83, label %79

79:                                               ; preds = %70
  %80 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %71, i64 0, i32 8
  %81 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %18, align 8
  %82 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %19, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %80, %"class.std::__1::basic_string.1"* %81, %"class.std::__1::basic_string.1"* %82) #12
  br label %83

83:                                               ; preds = %70, %79
  %84 = load i64, i64* %12, align 8
  store i64 %84, i64* %74, align 8
  %85 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %21, align 8
  %86 = icmp eq %"class.std::__1::basic_string.1"* %85, null
  br i1 %86, label %107, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.std::__1::basic_string.1"* %85 to i8*
  %89 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %19, align 8
  %90 = icmp eq %"class.std::__1::basic_string.1"* %89, %85
  br i1 %90, label %105, label %91

91:                                               ; preds = %87, %101
  %92 = phi %"class.std::__1::basic_string.1"* [ %93, %101 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %92, i64 -1
  %94 = bitcast %"class.std::__1::basic_string.1"* %93 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %94, i64 0, i32 1, i32 1
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %91
  %99 = bitcast %"class.std::__1::basic_string.1"* %93 to i8**
  %100 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %100) #14
  br label %101

101:                                              ; preds = %98, %91
  %102 = icmp eq %"class.std::__1::basic_string.1"* %93, %85
  br i1 %102, label %103, label %91

103:                                              ; preds = %101
  %104 = load i8*, i8** %22, align 8
  br label %105

105:                                              ; preds = %103, %87
  %106 = phi i8* [ %104, %103 ], [ %88, %87 ]
  store %"class.std::__1::basic_string.1"* %85, %"class.std::__1::basic_string.1"** %19, align 8
  call void @_ZdlPv(i8* %106) #14
  br label %107

107:                                              ; preds = %105, %83
  %108 = load i8, i8* %24, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %107
  %111 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %111) #14
  br label %112

112:                                              ; preds = %110, %107
  %113 = load i8, i8* %27, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %112
  %116 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %116) #14
  br label %117

117:                                              ; preds = %112, %115
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #12
  br label %118

118:                                              ; preds = %117, %30
  %119 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %31, i64 1
  %120 = icmp eq %struct.ProcessMemoryInformation* %119, %1
  br i1 %120, label %29, label %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEbT0_S6_T_(%struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation*, %"struct.std::__1::__less.251"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %struct.ProcessMemoryInformation, align 8
  %5 = ptrtoint %struct.ProcessMemoryInformation* %1 to i64
  %6 = ptrtoint %struct.ProcessMemoryInformation* %0 to i64
  %7 = sub i64 %5, %6
  %8 = sdiv exact i64 %7, 112
  switch i64 %8, label %48 [
    i64 0, label %174
    i64 1, label %174
    i64 2, label %9
    i64 3, label %17
    i64 4, label %21
    i64 5, label %42
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 -1, i32 9
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 9
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %174

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 -1
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %0, %struct.ProcessMemoryInformation* dereferenceable(112) %16)
  br label %174

17:                                               ; preds = %3
  %18 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 1
  %19 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 -1
  %20 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_T_(%struct.ProcessMemoryInformation* %0, %struct.ProcessMemoryInformation* %18, %struct.ProcessMemoryInformation* %19, %"struct.std::__1::__less.251"* dereferenceable(1) %2)
  br label %174

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 1
  %23 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 2
  %24 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_T_(%struct.ProcessMemoryInformation* %0, %struct.ProcessMemoryInformation* %22, %struct.ProcessMemoryInformation* %23, %"struct.std::__1::__less.251"* dereferenceable(1) %2) #12
  %25 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 -1, i32 9
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 2, i32 9
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %26, %28
  br i1 %29, label %30, label %174

30:                                               ; preds = %21
  %31 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 -1
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %23, %struct.ProcessMemoryInformation* dereferenceable(112) %31) #12
  %32 = load i64, i64* %27, align 8
  %33 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 1, i32 9
  %34 = load i64, i64* %33, align 8
  %35 = icmp ult i64 %32, %34
  br i1 %35, label %36, label %174

36:                                               ; preds = %30
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %22, %struct.ProcessMemoryInformation* dereferenceable(112) %23) #12
  %37 = load i64, i64* %33, align 8
  %38 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 0, i32 9
  %39 = load i64, i64* %38, align 8
  %40 = icmp ult i64 %37, %39
  br i1 %40, label %41, label %174

41:                                               ; preds = %36
  tail call void @_ZNSt3__14swapI24ProcessMemoryInformationEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_(%struct.ProcessMemoryInformation* dereferenceable(112) %0, %struct.ProcessMemoryInformation* dereferenceable(112) %22) #12
  br label %174

42:                                               ; preds = %3
  %43 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 1
  %44 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 2
  %45 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 3
  %46 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %1, i64 -1
  %47 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_S6_S6_T_(%struct.ProcessMemoryInformation* %0, %struct.ProcessMemoryInformation* %43, %struct.ProcessMemoryInformation* %44, %struct.ProcessMemoryInformation* %45, %struct.ProcessMemoryInformation* %46, %"struct.std::__1::__less.251"* dereferenceable(1) %2)
  br label %174

48:                                               ; preds = %3
  %49 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 2
  %50 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 1
  %51 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessI24ProcessMemoryInformationS2_EEPS2_EEjT0_S6_S6_T_(%struct.ProcessMemoryInformation* %0, %struct.ProcessMemoryInformation* %50, %struct.ProcessMemoryInformation* %49, %"struct.std::__1::__less.251"* dereferenceable(1) %2)
  %52 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %0, i64 3
  %53 = icmp eq %struct.ProcessMemoryInformation* %52, %1
  br i1 %53, label %174, label %54

54:                                               ; preds = %48
  %55 = bitcast %struct.ProcessMemoryInformation* %4 to i8*
  %56 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 9
  %57 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 0
  %58 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 1
  %59 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 2
  %60 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 3
  %61 = bitcast i32* %60 to i8*
  %62 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 8, i32 0, i32 0
  %63 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 8, i32 0, i32 1
  %64 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %4, i64 0, i32 8
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::vector"* %64 to i8**
  %67 = bitcast %"class.std::__1::basic_string.1"* %59 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %67, i64 0, i32 1, i32 1
  %69 = bitcast %"class.std::__1::basic_string.1"* %59 to i8**
  %70 = bitcast %"class.std::__1::basic_string.1"* %58 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = bitcast %"class.std::__1::basic_string.1"* %58 to i8**
  br label %73

73:                                               ; preds = %54, %167
  %74 = phi %struct.ProcessMemoryInformation* [ %52, %54 ], [ %169, %167 ]
  %75 = phi i32 [ 0, %54 ], [ %168, %167 ]
  %76 = phi %struct.ProcessMemoryInformation* [ %49, %54 ], [ %74, %167 ]
  %77 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %74, i64 0, i32 9
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %76, i64 0, i32 9
  %80 = load i64, i64* %79, align 8
  %81 = icmp ult i64 %78, %80
  br i1 %81, label %82, label %167

82:                                               ; preds = %73
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %55) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 112, i1 false)
  call void @_ZN24ProcessMemoryInformationC2ERKS_(%struct.ProcessMemoryInformation* nonnull %4, %struct.ProcessMemoryInformation* dereferenceable(112) %74)
  br label %83

83:                                               ; preds = %111, %82
  %84 = phi %struct.ProcessMemoryInformation* [ %74, %82 ], [ %85, %111 ]
  %85 = phi %struct.ProcessMemoryInformation* [ %76, %82 ], [ %112, %111 ]
  %86 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %84, i64 0, i32 0
  store i32 %87, i32* %88, align 8
  %89 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %84, i64 0, i32 1
  %90 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %85, i64 0, i32 1
  %91 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %89, %"class.std::__1::basic_string.1"* dereferenceable(24) %90) #12
  %92 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %84, i64 0, i32 2
  %93 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %85, i64 0, i32 2
  %94 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %92, %"class.std::__1::basic_string.1"* dereferenceable(24) %93) #12
  %95 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %84, i64 0, i32 3
  %96 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %85, i64 0, i32 3
  %97 = bitcast i32* %95 to i8*
  %98 = bitcast i32* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 20, i1 false) #12
  %99 = icmp eq %struct.ProcessMemoryInformation* %84, %85
  br i1 %99, label %106, label %100

100:                                              ; preds = %83
  %101 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %84, i64 0, i32 8
  %102 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %85, i64 0, i32 8, i32 0, i32 0
  %103 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %102, align 8
  %104 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %85, i64 0, i32 8, i32 0, i32 1
  %105 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %104, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %101, %"class.std::__1::basic_string.1"* %103, %"class.std::__1::basic_string.1"* %105) #12
  br label %106

106:                                              ; preds = %83, %100
  %107 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %85, i64 0, i32 9
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %84, i64 0, i32 9
  store i64 %108, i64* %109, align 8
  %110 = icmp eq %struct.ProcessMemoryInformation* %85, %0
  br i1 %110, label %117, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %85, i64 -1
  %113 = load i64, i64* %56, align 8
  %114 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %85, i64 -1, i32 9
  %115 = load i64, i64* %114, align 8
  %116 = icmp ult i64 %113, %115
  br i1 %116, label %83, label %117

117:                                              ; preds = %106, %111
  %118 = phi %struct.ProcessMemoryInformation* [ %0, %106 ], [ %85, %111 ]
  %119 = bitcast i32* %96 to i8*
  %120 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %118, i64 0, i32 0
  %121 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %118, i64 0, i32 9
  %122 = load i32, i32* %57, align 8
  store i32 %122, i32* %120, align 8
  %123 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %90, %"class.std::__1::basic_string.1"* dereferenceable(24) %58) #12
  %124 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* %93, %"class.std::__1::basic_string.1"* dereferenceable(24) %59) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %61, i64 20, i1 false) #12
  %125 = icmp eq %struct.ProcessMemoryInformation* %118, %4
  br i1 %125, label %130, label %126

126:                                              ; preds = %117
  %127 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %118, i64 0, i32 8
  %128 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %62, align 8
  %129 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %63, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %127, %"class.std::__1::basic_string.1"* %128, %"class.std::__1::basic_string.1"* %129) #12
  br label %130

130:                                              ; preds = %117, %126
  %131 = load i64, i64* %56, align 8
  store i64 %131, i64* %121, align 8
  %132 = add i32 %75, 1
  %133 = icmp eq i32 %132, 8
  %134 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %65, align 8
  %135 = icmp eq %"class.std::__1::basic_string.1"* %134, null
  br i1 %135, label %156, label %136

136:                                              ; preds = %130
  %137 = bitcast %"class.std::__1::basic_string.1"* %134 to i8*
  %138 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %63, align 8
  %139 = icmp eq %"class.std::__1::basic_string.1"* %138, %134
  br i1 %139, label %154, label %140

140:                                              ; preds = %136, %150
  %141 = phi %"class.std::__1::basic_string.1"* [ %142, %150 ], [ %138, %136 ]
  %142 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %141, i64 -1
  %143 = bitcast %"class.std::__1::basic_string.1"* %142 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %143, i64 0, i32 1, i32 1
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %140
  %148 = bitcast %"class.std::__1::basic_string.1"* %142 to i8**
  %149 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %149) #14
  br label %150

150:                                              ; preds = %147, %140
  %151 = icmp eq %"class.std::__1::basic_string.1"* %142, %134
  br i1 %151, label %152, label %140

152:                                              ; preds = %150
  %153 = load i8*, i8** %66, align 8
  br label %154

154:                                              ; preds = %152, %136
  %155 = phi i8* [ %153, %152 ], [ %137, %136 ]
  store %"class.std::__1::basic_string.1"* %134, %"class.std::__1::basic_string.1"** %63, align 8
  call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %154, %130
  %157 = load i8, i8* %68, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %156
  %160 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %160) #14
  br label %161

161:                                              ; preds = %159, %156
  %162 = load i8, i8* %71, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %161
  %165 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %165) #14
  br label %166

166:                                              ; preds = %161, %164
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %55) #12
  br i1 %133, label %171, label %167

167:                                              ; preds = %166, %73
  %168 = phi i32 [ %132, %166 ], [ %75, %73 ]
  %169 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %74, i64 1
  %170 = icmp eq %struct.ProcessMemoryInformation* %169, %1
  br i1 %170, label %174, label %73

171:                                              ; preds = %166
  %172 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %74, i64 1
  %173 = icmp eq %struct.ProcessMemoryInformation* %172, %1
  br label %174

174:                                              ; preds = %167, %171, %48, %41, %36, %30, %21, %9, %15, %3, %3, %42, %17
  %175 = phi i1 [ true, %42 ], [ true, %17 ], [ true, %3 ], [ true, %3 ], [ true, %15 ], [ true, %9 ], [ true, %21 ], [ true, %30 ], [ true, %36 ], [ true, %41 ], [ true, %48 ], [ %173, %171 ], [ true, %167 ]
  ret i1 %175
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string.1"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string.1"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string.1"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string.1"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string.1"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string.1"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string.1"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #12
  br label %219

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %48, 11
  br i1 %49, label %50, label %55

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string.1"* %34 to i16*
  %52 = trunc i64 %48 to i8
  %53 = bitcast %"class.std::__1::basic_string.1"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  store i8 %52, i8* %54, align 1
  br label %72

55:                                               ; preds = %44
  %56 = icmp ugt i64 %48, 9223372036854775791
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::basic_string.1"* %34 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %58) #13
  unreachable

59:                                               ; preds = %55
  %60 = add nuw nsw i64 %48, 8
  %61 = and i64 %60, -8
  %62 = icmp slt i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %59
  tail call void @abort() #13
  unreachable

64:                                               ; preds = %59
  %65 = shl i64 %61, 1
  %66 = tail call i8* @_Znwm(i64 %65) #14
  %67 = bitcast i8* %66 to i16*
  %68 = bitcast %"class.std::__1::basic_string.1"* %34 to i8**
  store i8* %66, i8** %68, align 8
  %69 = or i64 %61, -9223372036854775808
  %70 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %48, i64* %71, align 8
  br label %72

72:                                               ; preds = %64, %50
  %73 = phi i16* [ %51, %50 ], [ %67, %64 ]
  %74 = add nuw nsw i64 %48, 1
  %75 = add i64 %48, 1
  %76 = icmp ult i64 %75, 16
  br i1 %76, label %166, label %77

77:                                               ; preds = %72
  %78 = add i64 %48, 1
  %79 = getelementptr i16, i16* %73, i64 %78
  %80 = getelementptr i16, i16* %46, i64 %78
  %81 = icmp ult i16* %73, %80
  %82 = icmp ult i16* %46, %79
  %83 = and i1 %81, %82
  br i1 %83, label %166, label %84

84:                                               ; preds = %77
  %85 = and i64 %75, -16
  %86 = sub i64 %74, %85
  %87 = getelementptr i16, i16* %46, i64 %85
  %88 = getelementptr i16, i16* %73, i64 %85
  %89 = add i64 %85, -16
  %90 = lshr exact i64 %89, 4
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 3
  %93 = icmp ult i64 %89, 48
  br i1 %93, label %145, label %94

94:                                               ; preds = %84
  %95 = sub nsw i64 %91, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %142, %96 ]
  %98 = phi i64 [ %95, %94 ], [ %143, %96 ]
  %99 = getelementptr i16, i16* %46, i64 %97
  %100 = getelementptr i16, i16* %73, i64 %97
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !192
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !192
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !195, !noalias !192
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !195, !noalias !192
  %109 = or i64 %97, 16
  %110 = getelementptr i16, i16* %46, i64 %109
  %111 = getelementptr i16, i16* %73, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !192
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !192
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !195, !noalias !192
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !195, !noalias !192
  %120 = or i64 %97, 32
  %121 = getelementptr i16, i16* %46, i64 %120
  %122 = getelementptr i16, i16* %73, i64 %120
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !192
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !192
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !195, !noalias !192
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !195, !noalias !192
  %131 = or i64 %97, 48
  %132 = getelementptr i16, i16* %46, i64 %131
  %133 = getelementptr i16, i16* %73, i64 %131
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !192
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !192
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !195, !noalias !192
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !195, !noalias !192
  %142 = add i64 %97, 64
  %143 = add i64 %98, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %96, !llvm.loop !197

145:                                              ; preds = %96, %84
  %146 = phi i64 [ 0, %84 ], [ %142, %96 ]
  %147 = icmp eq i64 %92, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %145, %148
  %149 = phi i64 [ %161, %148 ], [ %146, %145 ]
  %150 = phi i64 [ %162, %148 ], [ %92, %145 ]
  %151 = getelementptr i16, i16* %46, i64 %149
  %152 = getelementptr i16, i16* %73, i64 %149
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !192
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !192
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !195, !noalias !192
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !195, !noalias !192
  %161 = add i64 %149, 16
  %162 = add i64 %150, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %148, !llvm.loop !198

164:                                              ; preds = %148, %145
  %165 = icmp eq i64 %75, %85
  br i1 %165, label %219, label %166

166:                                              ; preds = %164, %77, %72
  %167 = phi i64 [ %74, %77 ], [ %74, %72 ], [ %86, %164 ]
  %168 = phi i16* [ %46, %77 ], [ %46, %72 ], [ %87, %164 ]
  %169 = phi i16* [ %73, %77 ], [ %73, %72 ], [ %88, %164 ]
  %170 = add i64 %167, -1
  %171 = and i64 %167, 7
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %166, %173
  %174 = phi i64 [ %179, %173 ], [ %167, %166 ]
  %175 = phi i16* [ %181, %173 ], [ %168, %166 ]
  %176 = phi i16* [ %180, %173 ], [ %169, %166 ]
  %177 = phi i64 [ %182, %173 ], [ %171, %166 ]
  %178 = load i16, i16* %175, align 2
  store i16 %178, i16* %176, align 2
  %179 = add i64 %174, -1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = getelementptr inbounds i16, i16* %175, i64 1
  %182 = add i64 %177, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %173, !llvm.loop !199

184:                                              ; preds = %173, %166
  %185 = phi i64 [ %167, %166 ], [ %179, %173 ]
  %186 = phi i16* [ %168, %166 ], [ %181, %173 ]
  %187 = phi i16* [ %169, %166 ], [ %180, %173 ]
  %188 = icmp ult i64 %170, 7
  br i1 %188, label %219, label %189

189:                                              ; preds = %184, %189
  %190 = phi i64 [ %215, %189 ], [ %185, %184 ]
  %191 = phi i16* [ %217, %189 ], [ %186, %184 ]
  %192 = phi i16* [ %216, %189 ], [ %187, %184 ]
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %192, i64 1
  %195 = getelementptr inbounds i16, i16* %191, i64 1
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %192, i64 2
  %198 = getelementptr inbounds i16, i16* %191, i64 2
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %192, i64 3
  %201 = getelementptr inbounds i16, i16* %191, i64 3
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %192, i64 4
  %204 = getelementptr inbounds i16, i16* %191, i64 4
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %192, i64 5
  %207 = getelementptr inbounds i16, i16* %191, i64 5
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %192, i64 6
  %210 = getelementptr inbounds i16, i16* %191, i64 6
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %192, i64 7
  %213 = getelementptr inbounds i16, i16* %191, i64 7
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = add i64 %190, -8
  %216 = getelementptr inbounds i16, i16* %192, i64 8
  %217 = getelementptr inbounds i16, i16* %191, i64 8
  %218 = icmp eq i64 %215, 0
  br i1 %218, label %219, label %189, !llvm.loop !200

219:                                              ; preds = %184, %189, %164, %41
  %220 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %34, i64 1
  %221 = ptrtoint %"class.std::__1::basic_string.1"* %220 to i64
  %222 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %223 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %222, align 8
  %224 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %3, align 8
  %225 = icmp eq %"class.std::__1::basic_string.1"* %224, %223
  br i1 %225, label %226, label %228

226:                                              ; preds = %219
  %227 = ptrtoint %"class.std::__1::basic_string.1"* %223 to i64
  br label %239

228:                                              ; preds = %219, %228
  %229 = phi %"class.std::__1::basic_string.1"* [ %231, %228 ], [ %34, %219 ]
  %230 = phi %"class.std::__1::basic_string.1"* [ %232, %228 ], [ %224, %219 ]
  %231 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %229, i64 -1
  %232 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %230, i64 -1
  %233 = bitcast %"class.std::__1::basic_string.1"* %231 to i8*
  %234 = bitcast %"class.std::__1::basic_string.1"* %232 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %234, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 24, i1 false) #12
  %235 = icmp eq %"class.std::__1::basic_string.1"* %232, %223
  br i1 %235, label %236, label %228

236:                                              ; preds = %228
  %237 = load i64, i64* %6, align 8
  %238 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %3, align 8
  br label %239

239:                                              ; preds = %226, %236
  %240 = phi %"class.std::__1::basic_string.1"* [ %223, %226 ], [ %238, %236 ]
  %241 = phi %"class.std::__1::basic_string.1"* [ %34, %226 ], [ %231, %236 ]
  %242 = phi i64 [ %227, %226 ], [ %237, %236 ]
  %243 = ptrtoint %"class.std::__1::basic_string.1"* %241 to i64
  store i64 %243, i64* %6, align 8
  store i64 %221, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %244 = inttoptr i64 %242 to %"class.std::__1::basic_string.1"*
  %245 = icmp eq %"class.std::__1::basic_string.1"* %240, %244
  br i1 %245, label %258, label %246

246:                                              ; preds = %239, %256
  %247 = phi %"class.std::__1::basic_string.1"* [ %248, %256 ], [ %240, %239 ]
  %248 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %247, i64 -1
  %249 = bitcast %"class.std::__1::basic_string.1"* %248 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %249, i64 0, i32 1, i32 1
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %246
  %254 = bitcast %"class.std::__1::basic_string.1"* %248 to i8**
  %255 = load i8*, i8** %254, align 8
  tail call void @_ZdlPv(i8* %255) #14
  br label %256

256:                                              ; preds = %253, %246
  %257 = icmp eq %"class.std::__1::basic_string.1"* %248, %244
  br i1 %257, label %258, label %246

258:                                              ; preds = %256, %239
  %259 = icmp eq i64 %242, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %258
  %261 = inttoptr i64 %242 to i8*
  tail call void @_ZdlPv(i8* %261) #14
  br label %262

262:                                              ; preds = %258, %260
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI24ProcessMemoryInformationNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.15"*, %struct.ProcessMemoryInformation* dereferenceable(112)) local_unnamed_addr #11 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer.254", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"struct.std::__1::__split_buffer.254"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.254", %"struct.std::__1::__split_buffer.254"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer.254", %"struct.std::__1::__split_buffer.254"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.254", %"struct.std::__1::__split_buffer.254"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer.254", %"struct.std::__1::__split_buffer.254"* %3, i64 0, i32 3, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.254", %"struct.std::__1::__split_buffer.254"* %3, i64 0, i32 3, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %struct.ProcessMemoryInformation** %11 to i64*
  %13 = bitcast %"struct.std::__1::__split_buffer.254"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  %14 = load i64, i64* %12, align 8
  %15 = bitcast %"class.std::__1::vector.15"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 112
  %19 = add nsw i64 %18, 1
  %20 = icmp ugt i64 %19, 164703072086692425
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #13
  unreachable

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %struct.ProcessMemoryInformation** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %16
  %28 = sdiv exact i64 %27, 112
  %29 = icmp ult i64 %28, 82351536043346212
  br i1 %29, label %32, label %30

30:                                               ; preds = %23
  store %struct.ProcessMemoryInformation* null, %struct.ProcessMemoryInformation** %9, align 8
  %31 = bitcast %"class.std::__1::allocator.20"** %10 to %"class.std::__1::__compressed_pair.17"**
  store %"class.std::__1::__compressed_pair.17"* %4, %"class.std::__1::__compressed_pair.17"** %31, align 8
  br label %38

32:                                               ; preds = %23
  %33 = shl nsw i64 %28, 1
  %34 = icmp ult i64 %33, %19
  %35 = select i1 %34, i64 %19, i64 %33
  store %struct.ProcessMemoryInformation* null, %struct.ProcessMemoryInformation** %9, align 8
  %36 = bitcast %"class.std::__1::allocator.20"** %10 to %"class.std::__1::__compressed_pair.17"**
  store %"class.std::__1::__compressed_pair.17"* %4, %"class.std::__1::__compressed_pair.17"** %36, align 8
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %32, %30
  %39 = phi i64 [ 164703072086692425, %30 ], [ %35, %32 ]
  %40 = mul i64 %39, 112
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to %struct.ProcessMemoryInformation*
  br label %43

43:                                               ; preds = %32, %38
  %44 = phi i64 [ %39, %38 ], [ 0, %32 ]
  %45 = phi %struct.ProcessMemoryInformation* [ %42, %38 ], [ null, %32 ]
  store %struct.ProcessMemoryInformation* %45, %struct.ProcessMemoryInformation** %6, align 8
  %46 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %45, i64 %18
  store %struct.ProcessMemoryInformation* %46, %struct.ProcessMemoryInformation** %7, align 8
  %47 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %45, i64 %44
  store %struct.ProcessMemoryInformation* %47, %struct.ProcessMemoryInformation** %9, align 8
  tail call void @_ZN24ProcessMemoryInformationC2ERKS_(%struct.ProcessMemoryInformation* %46, %struct.ProcessMemoryInformation* dereferenceable(112) %1) #12
  %48 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %46, i64 1
  store %struct.ProcessMemoryInformation* %48, %struct.ProcessMemoryInformation** %8, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 0
  %50 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %49, align 8
  %51 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %11, align 8
  %52 = icmp eq %struct.ProcessMemoryInformation* %51, %50
  %53 = ptrtoint %struct.ProcessMemoryInformation* %48 to i64
  %54 = ptrtoint %struct.ProcessMemoryInformation* %47 to i64
  br i1 %52, label %55, label %58

55:                                               ; preds = %43
  %56 = ptrtoint %struct.ProcessMemoryInformation* %51 to i64
  %57 = ptrtoint %struct.ProcessMemoryInformation* %50 to i64
  br label %67

58:                                               ; preds = %43, %58
  %59 = phi %struct.ProcessMemoryInformation* [ %61, %58 ], [ %46, %43 ]
  %60 = phi %struct.ProcessMemoryInformation* [ %62, %58 ], [ %51, %43 ]
  %61 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %59, i64 -1
  %62 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %60, i64 -1
  tail call void @_ZN24ProcessMemoryInformationC2ERKS_(%struct.ProcessMemoryInformation* %61, %struct.ProcessMemoryInformation* dereferenceable(112) %62) #12
  %63 = icmp eq %struct.ProcessMemoryInformation* %62, %50
  br i1 %63, label %64, label %58

64:                                               ; preds = %58
  store %struct.ProcessMemoryInformation* %61, %struct.ProcessMemoryInformation** %7, align 8
  %65 = load i64, i64* %15, align 8
  %66 = load i64, i64* %12, align 8
  br label %67

67:                                               ; preds = %55, %64
  %68 = phi i64 [ %56, %55 ], [ %66, %64 ]
  %69 = phi %struct.ProcessMemoryInformation* [ %46, %55 ], [ %61, %64 ]
  %70 = phi i64 [ %57, %55 ], [ %65, %64 ]
  %71 = ptrtoint %struct.ProcessMemoryInformation* %69 to i64
  %72 = bitcast %struct.ProcessMemoryInformation** %7 to i64*
  store i64 %71, i64* %15, align 8
  store i64 %70, i64* %72, align 8
  %73 = bitcast %struct.ProcessMemoryInformation** %8 to i64*
  store i64 %53, i64* %12, align 8
  store i64 %68, i64* %73, align 8
  %74 = load i64, i64* %25, align 8
  %75 = bitcast %struct.ProcessMemoryInformation** %9 to i64*
  store i64 %54, i64* %25, align 8
  store i64 %74, i64* %75, align 8
  %76 = bitcast %"struct.std::__1::__split_buffer.254"* %3 to i64*
  store i64 %70, i64* %76, align 8
  %77 = inttoptr i64 %70 to %struct.ProcessMemoryInformation*
  call void @_ZNSt3__114__split_bufferI24ProcessMemoryInformationRNS_9allocatorIS1_EEE17__destruct_at_endEPS1_(%"struct.std::__1::__split_buffer.254"* nonnull %3, %struct.ProcessMemoryInformation* %77) #12
  %78 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %6, align 8
  %79 = icmp eq %struct.ProcessMemoryInformation* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %67
  %81 = bitcast %struct.ProcessMemoryInformation* %78 to i8*
  call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %67, %80
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferI24ProcessMemoryInformationRNS_9allocatorIS1_EEE17__destruct_at_endEPS1_(%"struct.std::__1::__split_buffer.254"*, %struct.ProcessMemoryInformation*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.254", %"struct.std::__1::__split_buffer.254"* %0, i64 0, i32 2
  %4 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %3, align 8
  %5 = icmp eq %struct.ProcessMemoryInformation* %4, %1
  br i1 %5, label %56, label %6

6:                                                ; preds = %2, %53
  %7 = phi %struct.ProcessMemoryInformation* [ %54, %53 ], [ %4, %2 ]
  %8 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %7, i64 -1
  store %struct.ProcessMemoryInformation* %8, %struct.ProcessMemoryInformation** %3, align 8
  %9 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %7, i64 -1, i32 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %10, align 8
  %12 = icmp eq %"class.std::__1::basic_string.1"* %11, null
  br i1 %12, label %35, label %13

13:                                               ; preds = %6
  %14 = bitcast %"class.std::__1::basic_string.1"* %11 to i8*
  %15 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %7, i64 -1, i32 8, i32 0, i32 1
  %16 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %15, align 8
  %17 = icmp eq %"class.std::__1::basic_string.1"* %16, %11
  br i1 %17, label %33, label %18

18:                                               ; preds = %13, %28
  %19 = phi %"class.std::__1::basic_string.1"* [ %20, %28 ], [ %16, %13 ]
  %20 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %19, i64 -1
  %21 = bitcast %"class.std::__1::basic_string.1"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %18
  %26 = bitcast %"class.std::__1::basic_string.1"* %20 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #14
  br label %28

28:                                               ; preds = %25, %18
  %29 = icmp eq %"class.std::__1::basic_string.1"* %20, %11
  br i1 %29, label %30, label %18

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %9 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %13
  %34 = phi i8* [ %32, %30 ], [ %14, %13 ]
  store %"class.std::__1::basic_string.1"* %11, %"class.std::__1::basic_string.1"** %15, align 8
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %33, %6
  %36 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %7, i64 -1, i32 2
  %37 = bitcast %"class.std::__1::basic_string.1"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = bitcast %"class.std::__1::basic_string.1"* %36 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #14
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %struct.ProcessMemoryInformation, %struct.ProcessMemoryInformation* %7, i64 -1, i32 1
  %46 = bitcast %"class.std::__1::basic_string.1"* %45 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string.1"* %45 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %50, %44
  %54 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %3, align 8
  %55 = icmp eq %struct.ProcessMemoryInformation* %54, %1
  br i1 %55, label %56, label %6

56:                                               ; preds = %53, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM13MemoryDetailsFvRKNSt3__16vectorI24ProcessMemoryInformationNS4_9allocatorIS6_EEEEEJ13scoped_refptrIS3_ES9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::vector.15"*
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  %14 = bitcast i8* %13 to %class.MemoryDetails*
  %15 = and i64 %7, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %7, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%class.MemoryDetails*, %"class.std::__1::vector.15"*)**
  %23 = load void (%class.MemoryDetails*, %"class.std::__1::vector.15"*)*, void (%class.MemoryDetails*, %"class.std::__1::vector.15"*)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %7 to void (%class.MemoryDetails*, %"class.std::__1::vector.15"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%class.MemoryDetails*, %"class.std::__1::vector.15"*)* [ %23, %17 ], [ %25, %24 ]
  tail call void %27(%class.MemoryDetails* %14, %"class.std::__1::vector.15"* dereferenceable(24) %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM13MemoryDetailsFvRKNSt3__16vectorI24ProcessMemoryInformationNS3_9allocatorIS5_EEEEEJ13scoped_refptrIS2_ES8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %struct.ProcessMemoryInformation**
  %6 = load %struct.ProcessMemoryInformation*, %struct.ProcessMemoryInformation** %5, align 8
  %7 = icmp eq %struct.ProcessMemoryInformation* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.std::__1::__vector_base.16"*
  tail call void @_ZNSt3__113__vector_baseI24ProcessMemoryInformationNS_9allocatorIS1_EEE5clearEv(%"class.std::__1::__vector_base.16"* %9) #12
  %10 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %8, %3
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %class.MemoryDetails**
  %15 = load %class.MemoryDetails*, %class.MemoryDetails** %14, align 8
  %16 = icmp eq %class.MemoryDetails* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.MemoryDetails, %class.MemoryDetails* %15, i64 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %29

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 -2
  %24 = bitcast %"class.base::RefCountedThreadSafe"* %23 to %class.MemoryDetails*
  %25 = bitcast %"class.base::RefCountedThreadSafe"* %23 to void (%class.MemoryDetails*)***
  %26 = load void (%class.MemoryDetails*)**, void (%class.MemoryDetails*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.MemoryDetails*)*, void (%class.MemoryDetails*)** %26, i64 2
  %28 = load void (%class.MemoryDetails*)*, void (%class.MemoryDetails*)** %27, align 8
  tail call void %28(%class.MemoryDetails* nonnull %24) #12
  br label %29

29:                                               ; preds = %12, %17, %22
  %30 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #14
  br label %31

31:                                               ; preds = %29, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPN7content16RenderWidgetHostENS_9allocatorIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS6_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPN7content16RenderWidgetHostENS_9allocatorIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS6_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPN7content16RenderWidgetHostENS_9allocatorIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS6_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.content::RenderWidgetHost"**, %"class.content::RenderWidgetHost"*** %10, align 8
  %12 = icmp eq %"class.content::RenderWidgetHost"** %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint %"class.content::RenderWidgetHost"** %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %16 = bitcast %"class.content::RenderWidgetHost"*** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.content::RenderWidgetHost"** %11 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !201
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !201
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !201
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.98"*, %"class.std::__1::__tree_node.278"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.278"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.278"* %1 to %"class.std::__1::__tree_node.278"**
  %6 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.98"* %0, %"class.std::__1::__tree_node.278"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.278"**
  %9 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.98"* %0, %"class.std::__1::__tree_node.278"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.278"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string.1"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string.1"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string.1"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string.1"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string.1"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string.1"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string.1"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #12
  %39 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string.1"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %41, align 8
  %43 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string.1"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string.1"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string.1"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string.1"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string.1"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string.1"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #12
  %54 = icmp eq %"class.std::__1::basic_string.1"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string.1"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string.1"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string.1"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string.1"*
  %64 = icmp eq %"class.std::__1::basic_string.1"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string.1"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string.1"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::basic_string.1"* %67 to i8**
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string.1"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM13MemoryDetailsFvbNSt3__110unique_ptrIN22memory_instrumentation16GlobalMemoryDumpENS4_14default_deleteIS7_EEEEEJ13scoped_refptrIS3_EEEEFvbSA_EE7RunOnceEPNS0_13BindStateBaseEbOSA_(%"class.base::internal::BindStateBase"*, i1 zeroext, %"class.std::__1::unique_ptr.202"* dereferenceable(8)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  %14 = bitcast i8* %13 to %class.MemoryDetails*
  %15 = and i64 %7, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %3
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %7, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%class.MemoryDetails*, i1, %"class.memory_instrumentation::GlobalMemoryDump"*)**
  %23 = load void (%class.MemoryDetails*, i1, %"class.memory_instrumentation::GlobalMemoryDump"*)*, void (%class.MemoryDetails*, i1, %"class.memory_instrumentation::GlobalMemoryDump"*)** %22, align 8
  br label %26

24:                                               ; preds = %3
  %25 = inttoptr i64 %7 to void (%class.MemoryDetails*, i1, %"class.memory_instrumentation::GlobalMemoryDump"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%class.MemoryDetails*, i1, %"class.memory_instrumentation::GlobalMemoryDump"*)* [ %23, %17 ], [ %25, %24 ]
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.202"* %2, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.memory_instrumentation::GlobalMemoryDump"*, %"class.memory_instrumentation::GlobalMemoryDump"** %28, align 8
  store %"class.memory_instrumentation::GlobalMemoryDump"* null, %"class.memory_instrumentation::GlobalMemoryDump"** %28, align 8
  tail call void %27(%class.MemoryDetails* %14, i1 zeroext %1, %"class.memory_instrumentation::GlobalMemoryDump"* %29) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM13MemoryDetailsFvbNSt3__110unique_ptrIN22memory_instrumentation16GlobalMemoryDumpENS3_14default_deleteIS6_EEEEEJ13scoped_refptrIS2_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %class.MemoryDetails**
  %6 = load %class.MemoryDetails*, %class.MemoryDetails** %5, align 8
  %7 = icmp eq %class.MemoryDetails* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.MemoryDetails, %class.MemoryDetails* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %class.MemoryDetails*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%class.MemoryDetails*)***
  %17 = load void (%class.MemoryDetails*)**, void (%class.MemoryDetails*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.MemoryDetails*)*, void (%class.MemoryDetails*)** %17, i64 2
  %19 = load void (%class.MemoryDetails*)*, void (%class.MemoryDetails*)** %18, align 8
  tail call void %19(%class.MemoryDetails* nonnull %15) #12
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN22memory_instrumentation16GlobalMemoryDumpD1Ev(%"class.memory_instrumentation::GlobalMemoryDump"*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN24ProcessMemoryInformation28GetRendererTypeNameInEnglishENS_19RendererProcessTypeE: argument 0"}
!4 = distinct !{!4, !"_ZN24ProcessMemoryInformation28GetRendererTypeNameInEnglishENS_19RendererProcessTypeE"}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !11}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !13}
!23 = distinct !{!23, !13}
!24 = distinct !{!24, !11}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !13}
!32 = distinct !{!32, !13}
!33 = distinct !{!33, !11}
!34 = !{!35}
!35 = distinct !{!35, !36}
!36 = distinct !{!36, !"LVerDomain"}
!37 = !{!38}
!38 = distinct !{!38, !36}
!39 = distinct !{!39, !11}
!40 = distinct !{!40, !13}
!41 = distinct !{!41, !13}
!42 = distinct !{!42, !11}
!43 = !{!44}
!44 = distinct !{!44, !45}
!45 = distinct !{!45, !"LVerDomain"}
!46 = !{!47}
!47 = distinct !{!47, !45}
!48 = distinct !{!48, !11}
!49 = distinct !{!49, !13}
!50 = distinct !{!50, !13}
!51 = distinct !{!51, !11}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !11}
!58 = distinct !{!58, !13}
!59 = distinct !{!59, !13}
!60 = distinct !{!60, !11}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !11}
!67 = distinct !{!67, !13}
!68 = distinct !{!68, !13}
!69 = distinct !{!69, !11}
!70 = !{!71}
!71 = distinct !{!71, !72}
!72 = distinct !{!72, !"LVerDomain"}
!73 = !{!74}
!74 = distinct !{!74, !72}
!75 = distinct !{!75, !11}
!76 = distinct !{!76, !13}
!77 = distinct !{!77, !13}
!78 = distinct !{!78, !11}
!79 = !{!80, !82}
!80 = distinct !{!80, !81, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM13MemoryDetailsFvvEJPS3_EEEDcOT0_DpOT1_: argument 0"}
!81 = distinct !{!81, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM13MemoryDetailsFvvEJPS3_EEEDcOT0_DpOT1_"}
!82 = distinct !{!82, !83, !"_ZN4base8BindOnceIM13MemoryDetailsFvvEJPS1_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_: argument 0"}
!83 = distinct !{!83, !"_ZN4base8BindOnceIM13MemoryDetailsFvvEJPS1_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_"}
!84 = !{!85, !87}
!85 = distinct !{!85, !86, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM13MemoryDetailsFvRKNSt3__16vectorI24ProcessMemoryInformationNS4_9allocatorIS6_EEEEEJPS3_RS9_EEEDcOT0_DpOT1_: argument 0"}
!86 = distinct !{!86, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM13MemoryDetailsFvRKNSt3__16vectorI24ProcessMemoryInformationNS4_9allocatorIS6_EEEEEJPS3_RS9_EEEDcOT0_DpOT1_"}
!87 = distinct !{!87, !88, !"_ZN4base8BindOnceIM13MemoryDetailsFvRKNSt3__16vectorI24ProcessMemoryInformationNS2_9allocatorIS4_EEEEEJPS1_RS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!88 = distinct !{!88, !"_ZN4base8BindOnceIM13MemoryDetailsFvRKNSt3__16vectorI24ProcessMemoryInformationNS2_9allocatorIS4_EEEEEJPS1_RS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !11}
!95 = distinct !{!95, !13}
!96 = distinct !{!96, !13}
!97 = distinct !{!97, !11}
!98 = !{!99, !101}
!99 = distinct !{!99, !100, !"_ZN24ProcessMemoryInformation28GetRendererTypeNameInEnglishENS_19RendererProcessTypeE: argument 0"}
!100 = distinct !{!100, !"_ZN24ProcessMemoryInformation28GetRendererTypeNameInEnglishENS_19RendererProcessTypeE"}
!101 = distinct !{!101, !102, !"_ZN24ProcessMemoryInformation24GetFullTypeNameInEnglishEiNS_19RendererProcessTypeE: argument 0"}
!102 = distinct !{!102, !"_ZN24ProcessMemoryInformation24GetFullTypeNameInEnglishEiNS_19RendererProcessTypeE"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPN7content16RenderWidgetHostENS_9allocatorIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_: argument 0"}
!105 = distinct !{!105, !"_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPN7content16RenderWidgetHostENS_9allocatorIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_"}
!106 = !{!107, !109}
!107 = distinct !{!107, !108, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM13MemoryDetailsFvbNSt3__110unique_ptrIN22memory_instrumentation16GlobalMemoryDumpENS4_14default_deleteIS7_EEEEEJPS3_EEEDcOT0_DpOT1_: argument 0"}
!108 = distinct !{!108, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM13MemoryDetailsFvbNSt3__110unique_ptrIN22memory_instrumentation16GlobalMemoryDumpENS4_14default_deleteIS7_EEEEEJPS3_EEEDcOT0_DpOT1_"}
!109 = distinct !{!109, !110, !"_ZN4base8BindOnceIM13MemoryDetailsFvbNSt3__110unique_ptrIN22memory_instrumentation16GlobalMemoryDumpENS2_14default_deleteIS5_EEEEEJPS1_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!110 = distinct !{!110, !"_ZN4base8BindOnceIM13MemoryDetailsFvbNSt3__110unique_ptrIN22memory_instrumentation16GlobalMemoryDumpENS2_14default_deleteIS5_EEEEEJPS1_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPN7content16RenderWidgetHostENS_9allocatorIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_: argument 0"}
!113 = distinct !{!113, !"_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPN7content16RenderWidgetHostENS_9allocatorIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPN7content16RenderWidgetHostENS_9allocatorIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_: argument 0"}
!116 = distinct !{!116, !"_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPN7content16RenderWidgetHostENS_9allocatorIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_"}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPN7content16RenderWidgetHostENS_9allocatorIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_: argument 0"}
!119 = distinct !{!119, !"_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPN7content16RenderWidgetHostENS_9allocatorIS5_EEEEEENS_19__map_value_compareIiS9_NS_4lessIiEELb1EEENS6_IS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISS_EEEEEEDpOT_"}
!120 = !{!121, !123}
!121 = distinct !{!121, !122, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!122 = distinct !{!122, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!123 = distinct !{!123, !124, !"_ZNK4GURL4hostEv: argument 0"}
!124 = distinct !{!124, !"_ZNK4GURL4hostEv"}
!125 = !{!126}
!126 = distinct !{!126, !127}
!127 = distinct !{!127, !"LVerDomain"}
!128 = !{!129}
!129 = distinct !{!129, !127}
!130 = distinct !{!130, !11}
!131 = distinct !{!131, !13}
!132 = distinct !{!132, !13}
!133 = distinct !{!133, !11}
!134 = !{!135}
!135 = distinct !{!135, !136}
!136 = distinct !{!136, !"LVerDomain"}
!137 = !{!138}
!138 = distinct !{!138, !136}
!139 = distinct !{!139, !11}
!140 = distinct !{!140, !13}
!141 = distinct !{!141, !13}
!142 = distinct !{!142, !11}
!143 = !{!144}
!144 = distinct !{!144, !145}
!145 = distinct !{!145, !"LVerDomain"}
!146 = !{!147}
!147 = distinct !{!147, !145}
!148 = distinct !{!148, !11}
!149 = distinct !{!149, !13}
!150 = distinct !{!150, !13}
!151 = distinct !{!151, !11}
!152 = !{!153}
!153 = distinct !{!153, !154}
!154 = distinct !{!154, !"LVerDomain"}
!155 = !{!156}
!156 = distinct !{!156, !154}
!157 = distinct !{!157, !11}
!158 = distinct !{!158, !13}
!159 = distinct !{!159, !13}
!160 = distinct !{!160, !11}
!161 = distinct !{!161, !11}
!162 = distinct !{!162, !13}
!163 = distinct !{!163, !164, !11}
!164 = !{!"llvm.loop.unroll.runtime.disable"}
!165 = !{!166}
!166 = distinct !{!166, !167}
!167 = distinct !{!167, !"LVerDomain"}
!168 = !{!169}
!169 = distinct !{!169, !167}
!170 = distinct !{!170, !11}
!171 = distinct !{!171, !13}
!172 = distinct !{!172, !13}
!173 = distinct !{!173, !11}
!174 = !{!175}
!175 = distinct !{!175, !176}
!176 = distinct !{!176, !"LVerDomain"}
!177 = !{!178}
!178 = distinct !{!178, !176}
!179 = distinct !{!179, !11}
!180 = distinct !{!180, !13}
!181 = distinct !{!181, !13}
!182 = distinct !{!182, !11}
!183 = !{!184}
!184 = distinct !{!184, !185}
!185 = distinct !{!185, !"LVerDomain"}
!186 = !{!187}
!187 = distinct !{!187, !185}
!188 = distinct !{!188, !11}
!189 = distinct !{!189, !13}
!190 = distinct !{!190, !13}
!191 = distinct !{!191, !11}
!192 = !{!193}
!193 = distinct !{!193, !194}
!194 = distinct !{!194, !"LVerDomain"}
!195 = !{!196}
!196 = distinct !{!196, !194}
!197 = distinct !{!197, !11}
!198 = distinct !{!198, !13}
!199 = distinct !{!199, !13}
!200 = distinct !{!200, !11}
!201 = !{i8 0, i8 2}
