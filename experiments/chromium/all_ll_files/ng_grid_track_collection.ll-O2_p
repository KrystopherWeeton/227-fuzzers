; ModuleID = '../../third_party/blink/renderer/core/layout/ng/grid/ng_grid_track_collection.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/grid/ng_grid_track_collection.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator" = type { %"class.blink::NGGridTrackCollectionBase"*, i32, i32, i32, i32 }
%"class.blink::NGGridTrackCollectionBase" = type { i32 (...)** }
%"class.blink::NGGridBlockTrackCollection" = type { %"class.blink::NGGridTrackCollectionBase", i8, i32, i32, %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"*, %"class.WTF::Vector.17", %"class.WTF::Vector.17", %"class.WTF::Vector.22" }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.6", %"class.WTF::Vector.11", i32, i32 }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13" }
%"class.WTF::VectorBufferBase.13" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Length" = type <{ %union.anon.14, i8, i8, i8, i8 }>
%union.anon.14 = type { i32 }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19" }
%"class.WTF::VectorBufferBase.19" = type { i32*, i32, i32 }
%"class.WTF::Vector.22" = type { %"class.WTF::VectorBuffer.23" }
%"class.WTF::VectorBuffer.23" = type { %"class.WTF::VectorBufferBase.24" }
%"class.WTF::VectorBufferBase.24" = type { %"struct.blink::NGGridBlockTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridBlockTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.blink::NGGridSet" = type <{ i32, [4 x i8], %"class.blink::GridTrackSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"class.blink::NGGridLayoutAlgorithmTrackCollection" = type { %"class.blink::NGGridTrackCollectionBase", i32, i32, i8, %"class.WTF::Vector.27", %"class.WTF::Vector.32" }
%"class.WTF::Vector.27" = type { %"class.WTF::VectorBuffer.28" }
%"class.WTF::VectorBuffer.28" = type { %"class.WTF::VectorBufferBase.29" }
%"class.WTF::VectorBufferBase.29" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34" }
%"class.WTF::VectorBufferBase.34" = type { %"class.blink::NGGridSet"*, i32, i32 }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.std::__1::__less" = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.38 }
%union.anon.38 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink13GridTrackSizeaSEOS0_ = comdat any

$_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_ = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKjEEvOT_ = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink26NGGridBlockTrackCollection5RangeEEEmm = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink26NGGridBlockTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeEEEmm = comdat any

$_ZN3WTF6VectorIN5blink9NGGridSetELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9NGGridSetEEEmm = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink9NGGridSetENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN3WTF6VectorIN5blink9NGGridSetELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZNK3WTF6VectorIN5blink9NGGridSetELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZN5blink25NGGridTrackCollectionBase18kInvalidRangeIndexE = hidden local_unnamed_addr constant i32 -1, align 4
@.str = private unnamed_addr constant [29 x i8] c"NGGridTrackCollection: Empty\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"NGGridTrackCollection: [RangeCount: \00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"], Ranges: \00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"[Start: \00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c", Count: \00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c", Collapsed \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c", \00", align 1
@_ZTVN5blink26NGGridBlockTrackCollectionE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.blink::NGGridBlockTrackCollection"*, i32)* @_ZNK5blink26NGGridBlockTrackCollection16RangeTrackNumberEj to i8*), i8* bitcast (i32 (%"class.blink::NGGridBlockTrackCollection"*, i32)* @_ZNK5blink26NGGridBlockTrackCollection15RangeTrackCountEj to i8*), i8* bitcast (i1 (%"class.blink::NGGridBlockTrackCollection"*, i32)* @_ZNK5blink26NGGridBlockTrackCollection16IsRangeCollapsedEj to i8*), i8* bitcast (i32 (%"class.blink::NGGridBlockTrackCollection"*)* @_ZNK5blink26NGGridBlockTrackCollection10RangeCountEv to i8*)] }, align 8
@.str.8 = private unnamed_addr constant [42 x i8] c"NGGridTrackCollection: [SpecifiedTracks: \00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"], [ImplicitTracks: \00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"], [Starting: {\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"} ], [Ending: {\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"} ] \00", align 1
@_ZTVN5blink36NGGridLayoutAlgorithmTrackCollectionE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)* @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection16RangeTrackNumberEj to i8*), i8* bitcast (i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)* @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection15RangeTrackCountEj to i8*), i8* bitcast (i1 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)* @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection16IsRangeCollapsedEj to i8*), i8* bitcast (i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)* @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection10RangeCountEv to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.13 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.15 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.16 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26NGGridBlockTrackCollection5RangeEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGGridBlockTrackCollection::Range]\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeEEEPKcv = private unnamed_addr constant [98 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGGridLayoutAlgorithmTrackCollection::Range]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9NGGridSetEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGGridSet]\00", align 1

@_ZN5blink25NGGridTrackCollectionBase19RangeRepeatIteratorC1EPKS0_j = hidden unnamed_addr alias void (%"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"*, %"class.blink::NGGridTrackCollectionBase"*, i32), void (%"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"*, %"class.blink::NGGridTrackCollectionBase"*, i32)* @_ZN5blink25NGGridTrackCollectionBase19RangeRepeatIteratorC2EPKS0_j
@_ZN5blink26NGGridBlockTrackCollectionC1ENS_24GridTrackSizingDirectionE = hidden unnamed_addr alias void (%"class.blink::NGGridBlockTrackCollection"*, i32), void (%"class.blink::NGGridBlockTrackCollection"*, i32)* @_ZN5blink26NGGridBlockTrackCollectionC2ENS_24GridTrackSizingDirectionE
@_ZN5blink9NGGridSetC1Ej = hidden unnamed_addr alias void (%"class.blink::NGGridSet"*, i32), void (%"class.blink::NGGridSet"*, i32)* @_ZN5blink9NGGridSetC2Ej
@_ZN5blink9NGGridSetC1EjRKNS_13GridTrackSizeEb = hidden unnamed_addr alias void (%"class.blink::NGGridSet"*, i32, %"class.blink::GridTrackSize"*, i1), void (%"class.blink::NGGridSet"*, i32, %"class.blink::GridTrackSize"*, i1)* @_ZN5blink9NGGridSetC2EjRKNS_13GridTrackSizeEb
@_ZN5blink36NGGridLayoutAlgorithmTrackCollection5RangeC1ERKNS_26NGGridBlockTrackCollection5RangeEj = hidden unnamed_addr alias void (%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, %"struct.blink::NGGridBlockTrackCollection::Range"*, i32), void (%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, %"struct.blink::NGGridBlockTrackCollection::Range"*, i32)* @_ZN5blink36NGGridLayoutAlgorithmTrackCollection5RangeC2ERKNS_26NGGridBlockTrackCollection5RangeEj
@_ZN5blink36NGGridLayoutAlgorithmTrackCollectionC1ERKNS_26NGGridBlockTrackCollectionEb = hidden unnamed_addr alias void (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, %"class.blink::NGGridBlockTrackCollection"*, i1), void (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, %"class.blink::NGGridBlockTrackCollection"*, i1)* @_ZN5blink36NGGridLayoutAlgorithmTrackCollectionC2ERKNS_26NGGridBlockTrackCollectionEb
@_ZN5blink36NGGridLayoutAlgorithmTrackCollectionC1ERKN3WTF6VectorINS0_5RangeELj0ENS1_18PartitionAllocatorEEENS_24GridTrackSizingDirectionE = hidden unnamed_addr alias void (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, %"class.WTF::Vector.27"*, i32), void (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, %"class.WTF::Vector.27"*, i32)* @_ZN5blink36NGGridLayoutAlgorithmTrackCollectionC2ERKN3WTF6VectorINS0_5RangeELj0ENS1_18PartitionAllocatorEEENS_24GridTrackSizingDirectionE

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink25NGGridTrackCollectionBase25RangeIndexFromTrackNumberEj(%"class.blink::NGGridTrackCollectionBase"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::NGGridTrackCollectionBase"* %0 to i32 (%"class.blink::NGGridTrackCollectionBase"*)***
  %4 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)**, i32 (%"class.blink::NGGridTrackCollectionBase"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %4, i64 3
  %6 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %5, align 8
  %7 = tail call i32 %6(%"class.blink::NGGridTrackCollectionBase"* %0) #13
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %9, label %36

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::NGGridTrackCollectionBase"* %0 to i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)***
  br label %11

11:                                               ; preds = %9, %28
  %12 = phi i32 [ %7, %9 ], [ %34, %28 ]
  %13 = phi i32 [ 0, %9 ], [ %33, %28 ]
  %14 = phi i32 [ %7, %9 ], [ %32, %28 ]
  %15 = lshr i32 %12, 1
  %16 = add i32 %15, %13
  %17 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %10, align 8
  %18 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %17, align 8
  %19 = tail call i32 %18(%"class.blink::NGGridTrackCollectionBase"* %0, i32 %16) #13
  %20 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %10, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %20, i64 1
  %22 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::NGGridTrackCollectionBase"* %0, i32 %16) #13
  %24 = icmp ule i32 %19, %1
  %25 = sub i32 %1, %19
  %26 = icmp ult i32 %25, %23
  %27 = and i1 %24, %26
  br i1 %27, label %36, label %28

28:                                               ; preds = %11
  %29 = icmp ugt i32 %19, %1
  %30 = add i32 %16, 1
  %31 = sub i32 %14, %30
  %32 = select i1 %29, i32 %16, i32 %14
  %33 = select i1 %29, i32 %13, i32 %30
  %34 = select i1 %29, i32 %15, i32 %31
  %35 = icmp ugt i32 %34, 1
  br i1 %35, label %11, label %36

36:                                               ; preds = %28, %11, %2
  %37 = phi i32 [ 0, %2 ], [ %16, %11 ], [ %33, %28 ]
  ret i32 %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25NGGridTrackCollectionBase13RangeIteratorEv(%"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* noalias nocapture sret, %"class.blink::NGGridTrackCollectionBase"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 0
  store %"class.blink::NGGridTrackCollectionBase"* %1, %"class.blink::NGGridTrackCollectionBase"** %3, align 8
  %4 = bitcast %"class.blink::NGGridTrackCollectionBase"* %1 to i32 (%"class.blink::NGGridTrackCollectionBase"*)***
  %5 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)**, i32 (%"class.blink::NGGridTrackCollectionBase"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %5, i64 3
  %7 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::NGGridTrackCollectionBase"* %1) #13
  %9 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 2
  store i32 %8, i32* %9, align 4
  %10 = icmp eq i32 %8, 0
  %11 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 1
  br i1 %10, label %12, label %13

12:                                               ; preds = %2
  store i32 -1, i32* %11, align 8
  br label %22

13:                                               ; preds = %2
  store i32 0, i32* %11, align 8
  %14 = bitcast %"class.blink::NGGridTrackCollectionBase"* %1 to i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)***
  %15 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %14, align 8
  %16 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %15, align 8
  %17 = tail call i32 %16(%"class.blink::NGGridTrackCollectionBase"* %1, i32 0) #13
  %18 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %14, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %18, i64 1
  %20 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::NGGridTrackCollectionBase"* %1, i32 0) #13
  br label %22

22:                                               ; preds = %12, %13
  %23 = phi i32 [ -1, %12 ], [ %17, %13 ]
  %24 = phi i32 [ 0, %12 ], [ %21, %13 ]
  %25 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 3
  store i32 %23, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 4
  store i32 %24, i32* %26, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink25NGGridTrackCollectionBase8ToStringEv(%"class.blink::NGGridTrackCollectionBase"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = bitcast %"class.blink::NGGridTrackCollectionBase"* %0 to i32 (%"class.blink::NGGridTrackCollectionBase"*)***
  %15 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)**, i32 (%"class.blink::NGGridTrackCollectionBase"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %15, i64 3
  %17 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::NGGridTrackCollectionBase"* %0) #13
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %20, label %21

20:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i64 28) #13
  br label %254

21:                                               ; preds = %1
  %22 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %22) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 48, i1 false)
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %25 = bitcast %union.anon* %24 to i8*
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %28, align 1
  %29 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %31 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 36, i32* %33, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  %34 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)**, i32 (%"class.blink::NGGridTrackCollectionBase"*)*** %14, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %34, i64 3
  %36 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %35, align 8
  %37 = call i32 %36(%"class.blink::NGGridTrackCollectionBase"* %0) #13
  %38 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #13
  %39 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  %40 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %41 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %42 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 32, i1 false) #13
  store i8* %39, i8** %40, align 8
  %43 = urem i32 %37, 10
  %44 = udiv i32 %37, 10
  %45 = trunc i32 %43 to i8
  %46 = or i8 %45, 48
  store i8 %46, i8* %39, align 1
  %47 = icmp ugt i32 %37, 9
  br i1 %47, label %48, label %63

48:                                               ; preds = %21
  %49 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %49, i8** %40, align 8
  %50 = urem i32 %44, 10
  %51 = trunc i32 %50 to i8
  %52 = or i8 %51, 48
  store i8 %52, i8* %49, align 2
  %53 = icmp ugt i32 %37, 99
  br i1 %53, label %54, label %61

54:                                               ; preds = %48
  %55 = udiv i32 %37, 100
  %56 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 9
  store i8* %56, i8** %40, align 8
  %57 = urem i32 %55, 10
  %58 = trunc i32 %57 to i8
  %59 = or i8 %58, 48
  store i8 %59, i8* %56, align 1
  %60 = icmp ugt i32 %37, 999
  br i1 %60, label %65, label %74

61:                                               ; preds = %48
  %62 = ptrtoint i8* %49 to i64
  br label %77

63:                                               ; preds = %21
  %64 = ptrtoint i8* %39 to i64
  br label %77

65:                                               ; preds = %54, %65
  %66 = phi i32 [ %68, %65 ], [ %55, %54 ]
  %67 = load i8*, i8** %40, align 8
  %68 = udiv i32 %66, 10
  %69 = getelementptr inbounds i8, i8* %67, i64 -1
  store i8* %69, i8** %40, align 8
  %70 = urem i32 %68, 10
  %71 = trunc i32 %70 to i8
  %72 = or i8 %71, 48
  store i8 %72, i8* %69, align 1
  %73 = icmp ugt i32 %66, 99
  br i1 %73, label %65, label %74

74:                                               ; preds = %65, %54
  %75 = bitcast i8** %40 to i64*
  %76 = load i64, i64* %75, align 8
  br label %77

77:                                               ; preds = %74, %61, %63
  %78 = phi i64 [ %64, %63 ], [ %76, %74 ], [ %62, %61 ]
  %79 = ptrtoint i8* %42 to i64
  %80 = sub i64 %79, %78
  %81 = trunc i64 %80 to i32
  store i32 %81, i32* %41, align 8
  %82 = inttoptr i64 %78 to i8*
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %6, i8* %82, i32 %81) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #13
  %83 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #13
  %84 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %85 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i8** %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 11, i32* %87, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #13
  %88 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)**, i32 (%"class.blink::NGGridTrackCollectionBase"*)*** %14, align 8
  %89 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %88, i64 3
  %90 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %89, align 8
  %91 = call i32 %90(%"class.blink::NGGridTrackCollectionBase"* %0) #13
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %138, label %93

93:                                               ; preds = %77
  %94 = bitcast %"class.WTF::StringView"* %9 to i8*
  %95 = bitcast %"class.WTF::StringView"* %9 to i64*
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %98 = bitcast %"class.blink::NGGridTrackCollectionBase"* %0 to i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)***
  %99 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  %100 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 11
  %101 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %102 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %103 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 12
  %104 = ptrtoint i8* %100 to i64
  %105 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 10
  %106 = bitcast i8** %101 to i64*
  %107 = ptrtoint i8* %103 to i64
  %108 = bitcast %"class.WTF::StringView"* %10 to i8*
  %109 = bitcast %"class.WTF::StringView"* %10 to i64*
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  %112 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 0
  %113 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 11
  %114 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 2
  %115 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 3
  %116 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 12
  %117 = ptrtoint i8* %113 to i64
  %118 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 10
  %119 = bitcast i8** %114 to i64*
  %120 = ptrtoint i8* %116 to i64
  %121 = bitcast %"class.blink::NGGridTrackCollectionBase"* %0 to i1 (%"class.blink::NGGridTrackCollectionBase"*, i32)***
  %122 = bitcast %"class.WTF::StringView"* %11 to i8*
  %123 = bitcast %"class.WTF::StringView"* %11 to i64*
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  %126 = bitcast %"class.WTF::StringView"* %12 to i8*
  %127 = bitcast %"class.WTF::StringView"* %12 to i64*
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %130 = bitcast %"class.WTF::StringView"* %13 to i8*
  %131 = bitcast %"class.WTF::StringView"* %13 to i64*
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  %134 = ptrtoint i8* %105 to i64
  %135 = ptrtoint i8* %118 to i64
  %136 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 9
  %137 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 9
  br label %157

138:                                              ; preds = %248, %77
  %139 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %6) #13
  %140 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %139, %"class.WTF::StringImpl"** %140, align 8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #13
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #13
  br label %156

156:                                              ; preds = %138, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %22) #13
  br label %254

157:                                              ; preds = %93, %248
  %158 = phi i32 [ 0, %93 ], [ %240, %248 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #13
  %159 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %159, i64* %95, align 8
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8** %96, align 8
  store i32 8, i32* %97, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #13
  %160 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %98, align 8
  %161 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %160, align 8
  %162 = call i32 %161(%"class.blink::NGGridTrackCollectionBase"* %0, i32 %158) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %99) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 32, i1 false) #13
  store i8* %100, i8** %101, align 8
  %163 = urem i32 %162, 10
  %164 = udiv i32 %162, 10
  %165 = trunc i32 %163 to i8
  %166 = or i8 %165, 48
  store i8 %166, i8* %100, align 1
  %167 = icmp ugt i32 %162, 9
  br i1 %167, label %168, label %190

168:                                              ; preds = %157
  store i8* %105, i8** %101, align 8
  %169 = urem i32 %164, 10
  %170 = trunc i32 %169 to i8
  %171 = or i8 %170, 48
  store i8 %171, i8* %105, align 2
  %172 = icmp ugt i32 %162, 99
  br i1 %172, label %173, label %190

173:                                              ; preds = %168
  %174 = udiv i32 %162, 100
  store i8* %136, i8** %101, align 8
  %175 = urem i32 %174, 10
  %176 = trunc i32 %175 to i8
  %177 = or i8 %176, 48
  store i8 %177, i8* %136, align 1
  %178 = icmp ugt i32 %162, 999
  br i1 %178, label %179, label %188

179:                                              ; preds = %173, %179
  %180 = phi i32 [ %182, %179 ], [ %174, %173 ]
  %181 = load i8*, i8** %101, align 8
  %182 = udiv i32 %180, 10
  %183 = getelementptr inbounds i8, i8* %181, i64 -1
  store i8* %183, i8** %101, align 8
  %184 = urem i32 %182, 10
  %185 = trunc i32 %184 to i8
  %186 = or i8 %185, 48
  store i8 %186, i8* %183, align 1
  %187 = icmp ugt i32 %180, 99
  br i1 %187, label %179, label %188

188:                                              ; preds = %179, %173
  %189 = load i64, i64* %106, align 8
  br label %190

190:                                              ; preds = %168, %188, %157
  %191 = phi i64 [ %104, %157 ], [ %189, %188 ], [ %134, %168 ]
  %192 = sub i64 %107, %191
  %193 = trunc i64 %192 to i32
  store i32 %193, i32* %102, align 8
  %194 = inttoptr i64 %191 to i8*
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %6, i8* %194, i32 %193) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %99) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #13
  %195 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %195, i64* %109, align 8
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8** %110, align 8
  store i32 9, i32* %111, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #13
  %196 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %98, align 8
  %197 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %196, i64 1
  %198 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %197, align 8
  %199 = call i32 %198(%"class.blink::NGGridTrackCollectionBase"* %0, i32 %158) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 32, i1 false) #13
  store i8* %113, i8** %114, align 8
  %200 = urem i32 %199, 10
  %201 = udiv i32 %199, 10
  %202 = trunc i32 %200 to i8
  %203 = or i8 %202, 48
  store i8 %203, i8* %113, align 1
  %204 = icmp ugt i32 %199, 9
  br i1 %204, label %205, label %227

205:                                              ; preds = %190
  store i8* %118, i8** %114, align 8
  %206 = urem i32 %201, 10
  %207 = trunc i32 %206 to i8
  %208 = or i8 %207, 48
  store i8 %208, i8* %118, align 2
  %209 = icmp ugt i32 %199, 99
  br i1 %209, label %210, label %227

210:                                              ; preds = %205
  %211 = udiv i32 %199, 100
  store i8* %137, i8** %114, align 8
  %212 = urem i32 %211, 10
  %213 = trunc i32 %212 to i8
  %214 = or i8 %213, 48
  store i8 %214, i8* %137, align 1
  %215 = icmp ugt i32 %199, 999
  br i1 %215, label %216, label %225

216:                                              ; preds = %210, %216
  %217 = phi i32 [ %219, %216 ], [ %211, %210 ]
  %218 = load i8*, i8** %114, align 8
  %219 = udiv i32 %217, 10
  %220 = getelementptr inbounds i8, i8* %218, i64 -1
  store i8* %220, i8** %114, align 8
  %221 = urem i32 %219, 10
  %222 = trunc i32 %221 to i8
  %223 = or i8 %222, 48
  store i8 %223, i8* %220, align 1
  %224 = icmp ugt i32 %217, 99
  br i1 %224, label %216, label %225

225:                                              ; preds = %216, %210
  %226 = load i64, i64* %119, align 8
  br label %227

227:                                              ; preds = %205, %225, %190
  %228 = phi i64 [ %117, %190 ], [ %226, %225 ], [ %135, %205 ]
  %229 = sub i64 %120, %228
  %230 = trunc i64 %229 to i32
  store i32 %230, i32* %115, align 8
  %231 = inttoptr i64 %228 to i8*
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %6, i8* %231, i32 %230) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #13
  %232 = load i1 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i1 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %121, align 8
  %233 = getelementptr inbounds i1 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i1 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %232, i64 2
  %234 = load i1 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i1 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %233, align 8
  %235 = call zeroext i1 %234(%"class.blink::NGGridTrackCollectionBase"* %0, i32 %158) #13
  br i1 %235, label %236, label %238

236:                                              ; preds = %227
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #13
  %237 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %237, i64* %123, align 8
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8** %124, align 8
  store i32 12, i32* %125, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #13
  br label %238

238:                                              ; preds = %236, %227
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #13
  %239 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %239, i64* %127, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i8** %128, align 8
  store i32 1, i32* %129, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #13
  %240 = add nuw i32 %158, 1
  %241 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)**, i32 (%"class.blink::NGGridTrackCollectionBase"*)*** %14, align 8
  %242 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %241, i64 3
  %243 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %242, align 8
  %244 = call i32 %243(%"class.blink::NGGridTrackCollectionBase"* %0) #13
  %245 = icmp ult i32 %240, %244
  br i1 %245, label %246, label %248

246:                                              ; preds = %238
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #13
  %247 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %247, i64* %131, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8** %132, align 8
  store i32 2, i32* %133, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #13
  br label %248

248:                                              ; preds = %238, %246
  %249 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)**, i32 (%"class.blink::NGGridTrackCollectionBase"*)*** %14, align 8
  %250 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %249, i64 3
  %251 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %250, align 8
  %252 = call i32 %251(%"class.blink::NGGridTrackCollectionBase"* %0) #13
  %253 = icmp ult i32 %240, %252
  br i1 %253, label %157, label %138

254:                                              ; preds = %156, %20
  %255 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %256 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %255, align 8
  ret %"class.WTF::StringImpl"* %256
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #13
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #13
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25NGGridTrackCollectionBase19RangeRepeatIteratorC2EPKS0_j(%"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* nocapture, %"class.blink::NGGridTrackCollectionBase"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 0
  store %"class.blink::NGGridTrackCollectionBase"* %1, %"class.blink::NGGridTrackCollectionBase"** %4, align 8
  %5 = bitcast %"class.blink::NGGridTrackCollectionBase"* %1 to i32 (%"class.blink::NGGridTrackCollectionBase"*)***
  %6 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)**, i32 (%"class.blink::NGGridTrackCollectionBase"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %6, i64 3
  %8 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %7, align 8
  %9 = tail call i32 %8(%"class.blink::NGGridTrackCollectionBase"* %1) #13
  %10 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 2
  store i32 %9, i32* %10, align 4
  %11 = icmp ugt i32 %9, %2
  %12 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 1
  br i1 %11, label %15, label %13

13:                                               ; preds = %3
  store i32 -1, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 3
  store i32 -1, i32* %14, align 8
  br label %29

15:                                               ; preds = %3
  store i32 %2, i32* %12, align 8
  %16 = load %"class.blink::NGGridTrackCollectionBase"*, %"class.blink::NGGridTrackCollectionBase"** %4, align 8
  %17 = bitcast %"class.blink::NGGridTrackCollectionBase"* %16 to i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)***
  %18 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %17, align 8
  %19 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %18, align 8
  %20 = tail call i32 %19(%"class.blink::NGGridTrackCollectionBase"* %16, i32 %2) #13
  %21 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 3
  store i32 %20, i32* %21, align 8
  %22 = load %"class.blink::NGGridTrackCollectionBase"*, %"class.blink::NGGridTrackCollectionBase"** %4, align 8
  %23 = load i32, i32* %12, align 8
  %24 = bitcast %"class.blink::NGGridTrackCollectionBase"* %22 to i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)***
  %25 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %25, i64 1
  %27 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %26, align 8
  %28 = tail call i32 %27(%"class.blink::NGGridTrackCollectionBase"* %22, i32 %23) #13
  br label %29

29:                                               ; preds = %13, %15
  %30 = phi i32 [ %28, %15 ], [ 0, %13 ]
  %31 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 4
  store i32 %30, i32* %31, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink25NGGridTrackCollectionBase19RangeRepeatIterator13SetRangeIndexEj(%"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ugt i32 %4, %1
  %6 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 1
  br i1 %5, label %9, label %7

7:                                                ; preds = %2
  store i32 -1, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 3
  store i32 -1, i32* %8, align 8
  br label %24

9:                                                ; preds = %2
  store i32 %1, i32* %6, align 8
  %10 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 0
  %11 = load %"class.blink::NGGridTrackCollectionBase"*, %"class.blink::NGGridTrackCollectionBase"** %10, align 8
  %12 = bitcast %"class.blink::NGGridTrackCollectionBase"* %11 to i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)***
  %13 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %12, align 8
  %14 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %13, align 8
  %15 = tail call i32 %14(%"class.blink::NGGridTrackCollectionBase"* %11, i32 %1) #13
  %16 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 3
  store i32 %15, i32* %16, align 8
  %17 = load %"class.blink::NGGridTrackCollectionBase"*, %"class.blink::NGGridTrackCollectionBase"** %10, align 8
  %18 = load i32, i32* %6, align 8
  %19 = bitcast %"class.blink::NGGridTrackCollectionBase"* %17 to i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)***
  %20 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %20, i64 1
  %22 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::NGGridTrackCollectionBase"* %17, i32 %18) #13
  br label %24

24:                                               ; preds = %9, %7
  %25 = phi i32 [ %23, %9 ], [ 0, %7 ]
  %26 = phi i1 [ true, %9 ], [ false, %7 ]
  %27 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 4
  store i32 %25, i32* %27, align 4
  ret i1 %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink25NGGridTrackCollectionBase19RangeRepeatIterator7IsAtEndEv(%"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink25NGGridTrackCollectionBase19RangeRepeatIterator15MoveToNextRangeEv(%"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, 1
  %5 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp ugt i32 %6, %4
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  store i32 -1, i32* %2, align 8
  %9 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 3
  store i32 -1, i32* %9, align 8
  br label %25

10:                                               ; preds = %1
  store i32 %4, i32* %2, align 8
  %11 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 0
  %12 = load %"class.blink::NGGridTrackCollectionBase"*, %"class.blink::NGGridTrackCollectionBase"** %11, align 8
  %13 = bitcast %"class.blink::NGGridTrackCollectionBase"* %12 to i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)***
  %14 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %13, align 8
  %15 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::NGGridTrackCollectionBase"* %12, i32 %4) #13
  %17 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 3
  store i32 %16, i32* %17, align 8
  %18 = load %"class.blink::NGGridTrackCollectionBase"*, %"class.blink::NGGridTrackCollectionBase"** %11, align 8
  %19 = load i32, i32* %2, align 8
  %20 = bitcast %"class.blink::NGGridTrackCollectionBase"* %18 to i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)***
  %21 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %21, i64 1
  %23 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %22, align 8
  %24 = tail call i32 %23(%"class.blink::NGGridTrackCollectionBase"* %18, i32 %19) #13
  br label %25

25:                                               ; preds = %8, %10
  %26 = phi i32 [ %24, %10 ], [ 0, %8 ]
  %27 = phi i1 [ true, %10 ], [ false, %8 ]
  %28 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 4
  store i32 %26, i32* %28, align 4
  ret i1 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink25NGGridTrackCollectionBase19RangeRepeatIterator11RepeatCountEv(%"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink25NGGridTrackCollectionBase19RangeRepeatIterator10RangeIndexEv(%"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink25NGGridTrackCollectionBase19RangeRepeatIterator15RangeTrackStartEv(%"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink25NGGridTrackCollectionBase19RangeRepeatIterator13RangeTrackEndEv(%"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %7, -1
  %11 = add i32 %10, %9
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i32 [ %11, %5 ], [ -1, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink25NGGridTrackCollectionBase19RangeRepeatIterator16IsRangeCollapsedEv(%"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 0
  %3 = load %"class.blink::NGGridTrackCollectionBase"*, %"class.blink::NGGridTrackCollectionBase"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator", %"class.blink::NGGridTrackCollectionBase::RangeRepeatIterator"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = bitcast %"class.blink::NGGridTrackCollectionBase"* %3 to i1 (%"class.blink::NGGridTrackCollectionBase"*, i32)***
  %7 = load i1 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i1 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i1 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %7, i64 2
  %9 = load i1 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i1 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::NGGridTrackCollectionBase"* %3, i32 %5) #13
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink26NGGridBlockTrackCollection5Range10IsImplicitEv(%"struct.blink::NGGridBlockTrackCollection::Range"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %0, i64 0, i32 4, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, 16
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink26NGGridBlockTrackCollection5Range11IsCollapsedEv(%"struct.blink::NGGridBlockTrackCollection::Range"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %0, i64 0, i32 4, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, 8
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink26NGGridBlockTrackCollection5Range13SetIsImplicitEv(%"struct.blink::NGGridBlockTrackCollection::Range"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %0, i64 0, i32 4, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = or i8 %3, 16
  store i8 %4, i8* %2, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink26NGGridBlockTrackCollection5Range14SetIsCollapsedEv(%"struct.blink::NGGridBlockTrackCollection::Range"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %0, i64 0, i32 4, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = or i8 %3, 8
  store i8 %4, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGGridBlockTrackCollectionC2ENS_24GridTrackSizingDirectionE(%"class.blink::NGGridBlockTrackCollection"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink26NGGridBlockTrackCollectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 2
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 3
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6
  %8 = bitcast %"class.WTF::Vector.17"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGGridBlockTrackCollection18SetSpecifiedTracksEPKNS_15NGGridTrackListES3_jjj(%"class.blink::NGGridBlockTrackCollection"*, %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 4
  store %"class.blink::NGGridTrackList"* %1, %"class.blink::NGGridTrackList"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 5
  store %"class.blink::NGGridTrackList"* %2, %"class.blink::NGGridTrackList"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 3
  store i32 %4, i32* %11, align 8
  %12 = tail call i32 @_ZNK5blink15NGGridTrackList13RepeaterCountEv(%"class.blink::NGGridTrackList"* %1) #13
  %13 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #13
  store i32 %3, i32* %7, align 4
  %14 = icmp eq i32 %12, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7
  %21 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %22 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %20, i64 0, i32 0, i32 0, i32 0
  br label %31

24:                                               ; preds = %63
  %25 = load i32, i32* %7, align 4
  br label %26

26:                                               ; preds = %24, %6
  %27 = phi i32 [ %25, %24 ], [ %3, %6 ]
  %28 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #13
  %29 = add i32 %5, %3
  store i32 %29, i32* %8, align 4
  %30 = icmp ult i32 %27, %29
  br i1 %30, label %66, label %97

31:                                               ; preds = %63, %15
  %32 = phi i32 [ 0, %15 ], [ %64, %63 ]
  %33 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %9, align 8
  %34 = load i32, i32* %11, align 8
  %35 = call i32 @_ZNK5blink15NGGridTrackList11RepeatCountEjj(%"class.blink::NGGridTrackList"* %33, i32 %32, i32 %34) #13
  %36 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %9, align 8
  %37 = call i32 @_ZNK5blink15NGGridTrackList10RepeatSizeEj(%"class.blink::NGGridTrackList"* %36, i32 %32) #13
  %38 = mul i32 %37, %35
  %39 = load i32, i32* %17, align 4
  %40 = load i32, i32* %18, align 8
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %49, label %42, !prof !3

42:                                               ; preds = %31
  %43 = load i32*, i32** %19, align 8
  %44 = zext i32 %39 to i64
  %45 = getelementptr inbounds i32, i32* %43, i64 %44
  %46 = load i32, i32* %7, align 4
  store i32 %46, i32* %45, align 4
  %47 = load i32, i32* %17, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %17, align 4
  br label %50

49:                                               ; preds = %31
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.17"* %16, i32* nonnull dereferenceable(4) %7) #13
  br label %50

50:                                               ; preds = %42, %49
  %51 = load i32, i32* %7, align 4
  %52 = add i32 %51, %38
  store i32 %52, i32* %7, align 4
  %53 = load i32, i32* %21, align 4
  %54 = load i32, i32* %22, align 8
  %55 = icmp eq i32 %53, %54
  br i1 %55, label %62, label %56, !prof !3

56:                                               ; preds = %50
  %57 = load i32*, i32** %23, align 8
  %58 = zext i32 %53 to i64
  %59 = getelementptr inbounds i32, i32* %57, i64 %58
  store i32 %52, i32* %59, align 4
  %60 = load i32, i32* %21, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %21, align 4
  br label %63

62:                                               ; preds = %50
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.17"* %20, i32* nonnull dereferenceable(4) %7) #13
  br label %63

63:                                               ; preds = %56, %62
  %64 = add nuw i32 %32, 1
  %65 = icmp eq i32 %64, %12
  br i1 %65, label %24, label %31

66:                                               ; preds = %26
  %67 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6
  %68 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %69, %71
  br i1 %72, label %80, label %73, !prof !3

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %67, i64 0, i32 0, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = zext i32 %69 to i64
  %77 = getelementptr inbounds i32, i32* %75, i64 %76
  store i32 %27, i32* %77, align 4
  %78 = load i32, i32* %68, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %68, align 4
  br label %81

80:                                               ; preds = %66
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.17"* %67, i32* nonnull dereferenceable(4) %7) #13
  br label %81

81:                                               ; preds = %73, %80
  %82 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7
  %83 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %84, %86
  br i1 %87, label %96, label %88, !prof !3

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %82, i64 0, i32 0, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = zext i32 %84 to i64
  %92 = getelementptr inbounds i32, i32* %90, i64 %91
  %93 = load i32, i32* %8, align 4
  store i32 %93, i32* %92, align 4
  %94 = load i32, i32* %83, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %83, align 4
  br label %97

96:                                               ; preds = %81
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKjEEvOT_(%"class.WTF::Vector.17"* %82, i32* nonnull dereferenceable(4) %8) #13
  br label %97

97:                                               ; preds = %96, %88, %26
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #13
  ret void
}

declare i32 @_ZNK5blink15NGGridTrackList13RepeaterCountEv(%"class.blink::NGGridTrackList"*) local_unnamed_addr #2

declare i32 @_ZNK5blink15NGGridTrackList11RepeatCountEjj(%"class.blink::NGGridTrackList"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink15NGGridTrackList10RepeatSizeEj(%"class.blink::NGGridTrackList"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGGridBlockTrackCollection19EnsureTrackCoverageEjj(%"class.blink::NGGridBlockTrackCollection"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %1, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 1
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %20, label %13, !prof !3

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %7, i64 0, i32 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = zext i32 %9 to i64
  %17 = getelementptr inbounds i32, i32* %15, i64 %16
  store i32 %1, i32* %17, align 4
  %18 = load i32, i32* %8, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %8, align 4
  br label %21

20:                                               ; preds = %3
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.17"* %7, i32* nonnull dereferenceable(4) %4) #13
  br label %21

21:                                               ; preds = %13, %20
  %22 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7
  %23 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #13
  %24 = load i32, i32* %4, align 4
  %25 = add i32 %24, %2
  store i32 %25, i32* %5, align 4
  %26 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %38, label %31, !prof !3

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %22, i64 0, i32 0, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = zext i32 %27 to i64
  %35 = getelementptr inbounds i32, i32* %33, i64 %34
  store i32 %25, i32* %35, align 4
  %36 = load i32, i32* %26, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %26, align 4
  br label %39

38:                                               ; preds = %21
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.17"* %22, i32* nonnull dereferenceable(4) %5) #13
  br label %39

39:                                               ; preds = %31, %38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGGridBlockTrackCollection14FinalizeRangesEj(%"class.blink::NGGridBlockTrackCollection"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__less", align 1
  %4 = alloca %"struct.std::__1::__less", align 1
  %5 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i32, i32* %10, i64 %13
  %15 = getelementptr inbounds %"struct.std::__1::__less", %"struct.std::__1::__less"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #13
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %10, i32* %14, %"struct.std::__1::__less"* nonnull dereferenceable(1) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %17, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::__less", %"struct.std::__1::__less"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #13
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %17, i32* %21, %"struct.std::__1::__less"* nonnull dereferenceable(1) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #13
  br label %23

23:                                               ; preds = %2, %8
  %24 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 8
  %25 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = bitcast %"class.WTF::Vector.22"* %24 to i8**
  %30 = bitcast %"class.WTF::Vector.22"* %24 to i64*
  br label %40

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  store i32 0, i32* %32, align 4
  br label %36

36:                                               ; preds = %35, %31
  %37 = bitcast %"class.WTF::Vector.22"* %24 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.WTF::Vector.22"* %24 to i64*
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %25, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #13
  br label %40

40:                                               ; preds = %28, %36
  %41 = phi i64* [ %30, %28 ], [ %39, %36 ]
  %42 = phi i8** [ %29, %28 ], [ %37, %36 ]
  %43 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 4
  %44 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %43, align 8
  %45 = call i32 @_ZNK5blink15NGGridTrackList13RepeaterCountEv(%"class.blink::NGGridTrackList"* %44) #13
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, i32 -1, i32 %1
  %48 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6
  %49 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %50 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7
  %51 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %52 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 3
  %53 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 5
  %54 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %55 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %24, i64 0, i32 0, i32 0, i32 0
  br label %56

56:                                               ; preds = %218, %40
  %57 = phi i32 [ 0, %40 ], [ %167, %218 ]
  %58 = phi i32 [ 0, %40 ], [ %98, %218 ]
  %59 = phi i32 [ %1, %40 ], [ %170, %218 ]
  %60 = phi i32 [ -1, %40 ], [ %169, %218 ]
  %61 = phi i32 [ %47, %40 ], [ %165, %218 ]
  %62 = phi i32 [ 0, %40 ], [ %80, %218 ]
  %63 = phi i32 [ 0, %40 ], [ %99, %218 ]
  %64 = phi i8 [ 0, %40 ], [ %168, %218 ]
  %65 = load i32, i32* %49, align 4
  %66 = icmp ult i32 %62, %65
  br i1 %66, label %67, label %78

67:                                               ; preds = %56, %73
  %68 = phi i32 [ %74, %73 ], [ %62, %56 ]
  %69 = phi i32 [ %75, %73 ], [ %58, %56 ]
  %70 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %48, i32 %68) #13
  %71 = load i32, i32* %70, align 4
  %72 = icmp ult i32 %57, %71
  br i1 %72, label %78, label %73

73:                                               ; preds = %67
  %74 = add nuw i32 %68, 1
  %75 = add i32 %69, 1
  %76 = load i32, i32* %49, align 4
  %77 = icmp ult i32 %74, %76
  br i1 %77, label %67, label %78

78:                                               ; preds = %73, %67, %56
  %79 = phi i32 [ %58, %56 ], [ %69, %67 ], [ %75, %73 ]
  %80 = phi i32 [ %62, %56 ], [ %68, %67 ], [ %74, %73 ]
  %81 = load i32, i32* %51, align 4
  %82 = icmp ult i32 %63, %81
  br i1 %82, label %83, label %96

83:                                               ; preds = %78, %91
  %84 = phi i32 [ %92, %91 ], [ %63, %78 ]
  %85 = phi i32 [ %93, %91 ], [ %79, %78 ]
  %86 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %50, i32 %84) #13
  %87 = load i32, i32* %86, align 4
  %88 = icmp ult i32 %57, %87
  br i1 %88, label %89, label %91

89:                                               ; preds = %83
  %90 = load i32, i32* %51, align 4
  br label %96

91:                                               ; preds = %83
  %92 = add nuw i32 %84, 1
  %93 = add i32 %85, -1
  %94 = load i32, i32* %51, align 4
  %95 = icmp ult i32 %92, %94
  br i1 %95, label %83, label %96

96:                                               ; preds = %91, %89, %78
  %97 = phi i32 [ %81, %78 ], [ %90, %89 ], [ %94, %91 ]
  %98 = phi i32 [ %79, %78 ], [ %85, %89 ], [ %93, %91 ]
  %99 = phi i32 [ %63, %78 ], [ %84, %89 ], [ %92, %91 ]
  %100 = icmp ult i32 %99, %97
  br i1 %100, label %101, label %232

101:                                              ; preds = %96
  %102 = load i32, i32* %49, align 4
  %103 = icmp ult i32 %80, %102
  br i1 %103, label %104, label %107

104:                                              ; preds = %101
  %105 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %48, i32 %80) #13
  %106 = load i32, i32* %105, align 4
  br label %107

107:                                              ; preds = %101, %104
  %108 = phi i32 [ %106, %104 ], [ -1, %101 ]
  %109 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %50, i32 %99) #13
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %57, %61
  br i1 %111, label %112, label %134

112:                                              ; preds = %107, %120
  %113 = phi i32 [ %114, %120 ], [ %60, %107 ]
  %114 = add i32 %113, 1
  %115 = icmp eq i32 %114, %45
  br i1 %115, label %116, label %120

116:                                              ; preds = %112
  %117 = icmp ult i32 %110, %108
  %118 = select i1 %117, i32 %110, i32 %108
  %119 = sub i32 %118, %57
  br label %148

120:                                              ; preds = %112
  %121 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %43, align 8
  %122 = call i32 @_ZNK5blink15NGGridTrackList10RepeatTypeEj(%"class.blink::NGGridTrackList"* %121, i32 %114) #13
  %123 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %43, align 8
  %124 = call i32 @_ZNK5blink15NGGridTrackList10RepeatSizeEj(%"class.blink::NGGridTrackList"* %123, i32 %114) #13
  %125 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %43, align 8
  %126 = load i32, i32* %52, align 8
  %127 = call i32 @_ZNK5blink15NGGridTrackList11RepeatCountEjj(%"class.blink::NGGridTrackList"* %125, i32 %114, i32 %126) #13
  %128 = mul i32 %127, %124
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %112, label %130

130:                                              ; preds = %120
  %131 = add i32 %128, %57
  %132 = icmp eq i32 %122, 2
  %133 = zext i1 %132 to i8
  br label %134

134:                                              ; preds = %130, %107
  %135 = phi i32 [ %57, %130 ], [ %59, %107 ]
  %136 = phi i32 [ %114, %130 ], [ %60, %107 ]
  %137 = phi i32 [ %131, %130 ], [ %61, %107 ]
  %138 = phi i8 [ %133, %130 ], [ %64, %107 ]
  %139 = icmp ult i32 %110, %108
  %140 = select i1 %139, i32 %110, i32 %108
  %141 = sub i32 %140, %57
  %142 = icmp eq i32 %136, -1
  br i1 %142, label %148, label %143

143:                                              ; preds = %134
  %144 = sub i32 %57, %135
  %145 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %43, align 8
  %146 = call i32 @_ZNK5blink15NGGridTrackList10RepeatSizeEj(%"class.blink::NGGridTrackList"* %145, i32 %136) #13
  %147 = urem i32 %144, %146
  br label %164

148:                                              ; preds = %116, %134
  %149 = phi i32 [ %57, %116 ], [ %137, %134 ]
  %150 = phi i32 [ %119, %116 ], [ %141, %134 ]
  %151 = phi i32 [ %118, %116 ], [ %140, %134 ]
  %152 = phi i8 [ 0, %116 ], [ %138, %134 ]
  %153 = phi i32 [ %57, %116 ], [ %135, %134 ]
  %154 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %53, align 8
  %155 = call i32 @_ZNK5blink15NGGridTrackList13RepeaterCountEv(%"class.blink::NGGridTrackList"* %154) #13
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %164, label %157

157:                                              ; preds = %148
  %158 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %53, align 8
  %159 = call i32 @_ZNK5blink15NGGridTrackList10RepeatSizeEj(%"class.blink::NGGridTrackList"* %158, i32 0) #13
  %160 = add i32 %159, %57
  %161 = urem i32 %153, %159
  %162 = sub i32 %160, %161
  %163 = urem i32 %162, %159
  br label %164

164:                                              ; preds = %148, %157, %143
  %165 = phi i32 [ %149, %157 ], [ %137, %143 ], [ %149, %148 ]
  %166 = phi i32 [ %150, %157 ], [ %141, %143 ], [ %150, %148 ]
  %167 = phi i32 [ %151, %157 ], [ %140, %143 ], [ %151, %148 ]
  %168 = phi i8 [ %152, %157 ], [ %138, %143 ], [ %152, %148 ]
  %169 = phi i32 [ -1, %157 ], [ %136, %143 ], [ -1, %148 ]
  %170 = phi i32 [ %153, %157 ], [ %135, %143 ], [ %153, %148 ]
  %171 = phi i8 [ 16, %157 ], [ 0, %143 ], [ 16, %148 ]
  %172 = phi i32 [ %163, %157 ], [ %147, %143 ], [ 0, %148 ]
  %173 = phi i32 [ 0, %157 ], [ %136, %143 ], [ -1, %148 ]
  %174 = and i8 %168, 1
  %175 = icmp ne i8 %174, 0
  %176 = icmp eq i32 %98, 1
  %177 = and i1 %176, %175
  %178 = or i8 %171, 8
  %179 = select i1 %177, i8 %178, i8 %171
  %180 = load i32, i32* %54, align 4
  %181 = load i32, i32* %25, align 8
  %182 = icmp eq i32 %180, %181
  br i1 %182, label %183, label %218, !prof !3

183:                                              ; preds = %164
  %184 = add i32 %180, 1
  %185 = lshr i32 %180, 2
  %186 = add i32 %184, %185
  %187 = icmp ugt i32 %186, 4
  %188 = select i1 %187, i32 %186, i32 4
  %189 = icmp ugt i32 %188, %184
  %190 = select i1 %189, i32 %188, i32 %184
  %191 = icmp ult i32 %180, %190
  br i1 %191, label %192, label %218, !prof !4

192:                                              ; preds = %183
  %193 = load %"struct.blink::NGGridBlockTrackCollection::Range"*, %"struct.blink::NGGridBlockTrackCollection::Range"** %55, align 8
  %194 = icmp eq %"struct.blink::NGGridBlockTrackCollection::Range"* %193, null
  %195 = zext i32 %190 to i64
  %196 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink26NGGridBlockTrackCollection5RangeEEEmm(i64 %195) #13
  %197 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %196, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26NGGridBlockTrackCollection5RangeEEEPKcv, i64 0, i64 0)) #13
  br i1 %194, label %198, label %202

198:                                              ; preds = %192
  %199 = ptrtoint i8* %197 to i64
  store atomic i64 %199, i64* %41 monotonic, align 8
  %200 = udiv i64 %196, 20
  %201 = trunc i64 %200 to i32
  store i32 %201, i32* %25, align 8
  br label %218

202:                                              ; preds = %192
  %203 = udiv i64 %196, 20
  %204 = ptrtoint i8* %197 to i64
  %205 = load %"struct.blink::NGGridBlockTrackCollection::Range"*, %"struct.blink::NGGridBlockTrackCollection::Range"** %55, align 8
  %206 = icmp ne i8* %197, null
  %207 = icmp ne %"struct.blink::NGGridBlockTrackCollection::Range"* %205, null
  %208 = and i1 %206, %207
  %209 = bitcast %"struct.blink::NGGridBlockTrackCollection::Range"* %205 to i8*
  br i1 %208, label %210, label %215, !prof !4

210:                                              ; preds = %202
  %211 = load i32, i32* %54, align 4
  %212 = zext i32 %211 to i64
  %213 = mul nuw nsw i64 %212, 20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %197, i8* nonnull align 4 %209, i64 %213, i1 false) #13
  %214 = load i8*, i8** %42, align 8
  br label %215

215:                                              ; preds = %210, %202
  %216 = phi i8* [ %214, %210 ], [ %209, %202 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %216) #13
  store atomic i64 %204, i64* %41 monotonic, align 8
  %217 = trunc i64 %203 to i32
  store i32 %217, i32* %25, align 8
  br label %218

218:                                              ; preds = %164, %183, %198, %215
  %219 = load %"struct.blink::NGGridBlockTrackCollection::Range"*, %"struct.blink::NGGridBlockTrackCollection::Range"** %55, align 8
  %220 = load i32, i32* %54, align 4
  %221 = zext i32 %220 to i64
  %222 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %219, i64 %221, i32 0
  store i32 %57, i32* %222, align 4
  %223 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %219, i64 %221, i32 1
  store i32 %166, i32* %223, align 4
  %224 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %219, i64 %221, i32 2
  store i32 %173, i32* %224, align 4
  %225 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %219, i64 %221, i32 3
  store i32 %172, i32* %225, align 4
  %226 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %219, i64 %221, i32 4, i32 0
  store i8 %179, i8* %226, align 4
  %227 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %219, i64 %221, i32 5, i64 0
  store i8 -86, i8* %227, align 1
  %228 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %219, i64 %221, i32 5, i64 1
  store i8 -86, i8* %228, align 2
  %229 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %219, i64 %221, i32 5, i64 2
  store i8 -86, i8* %229, align 1
  %230 = load i32, i32* %54, align 4
  %231 = add i32 %230, 1
  store i32 %231, i32* %54, align 4
  br label %56

232:                                              ; preds = %96
  %233 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %234 = load i32, i32* %233, align 8
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %244, label %236

236:                                              ; preds = %232
  %237 = load i32, i32* %49, align 4
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %240, label %239

239:                                              ; preds = %236
  store i32 0, i32* %49, align 4
  br label %240

240:                                              ; preds = %239, %236
  %241 = bitcast %"class.WTF::Vector.17"* %48 to i8**
  %242 = load i8*, i8** %241, align 8
  %243 = bitcast %"class.WTF::Vector.17"* %48 to i64*
  store atomic i64 0, i64* %243 monotonic, align 8
  store i32 0, i32* %233, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %242) #13
  br label %244

244:                                              ; preds = %232, %240
  %245 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %246 = load i32, i32* %245, align 8
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %256, label %248

248:                                              ; preds = %244
  %249 = load i32, i32* %51, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %252, label %251

251:                                              ; preds = %248
  store i32 0, i32* %51, align 4
  br label %252

252:                                              ; preds = %251, %248
  %253 = bitcast %"class.WTF::Vector.17"* %50 to i8**
  %254 = load i8*, i8** %253, align 8
  %255 = bitcast %"class.WTF::Vector.17"* %50 to i64*
  store atomic i64 0, i64* %255 monotonic, align 8
  store i32 0, i32* %245, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %254) #13
  br label %256

256:                                              ; preds = %244, %252
  ret void
}

declare i32 @_ZNK5blink15NGGridTrackList10RepeatTypeEj(%"class.blink::NGGridTrackList"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink26NGGridBlockTrackCollection15IsRangeImplicitEj(%"class.blink::NGGridBlockTrackCollection"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 8
  %4 = tail call dereferenceable(20) %"struct.blink::NGGridBlockTrackCollection::Range"* @_ZNK3WTF6VectorIN5blink26NGGridBlockTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.22"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %4, i64 0, i32 4, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, 16
  %8 = icmp ne i8 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(20) %"struct.blink::NGGridBlockTrackCollection::Range"* @_ZNK5blink26NGGridBlockTrackCollection17RangeAtRangeIndexEj(%"class.blink::NGGridBlockTrackCollection"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 8
  %4 = tail call dereferenceable(20) %"struct.blink::NGGridBlockTrackCollection::Range"* @_ZNK3WTF6VectorIN5blink26NGGridBlockTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.22"* %3, i32 %1) #13
  ret %"struct.blink::NGGridBlockTrackCollection::Range"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(40) %"class.blink::NGGridTrackList"* @_ZNK5blink26NGGridBlockTrackCollection14ExplicitTracksEv(%"class.blink::NGGridBlockTrackCollection"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 4
  %3 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %2, align 8
  ret %"class.blink::NGGridTrackList"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(40) %"class.blink::NGGridTrackList"* @_ZNK5blink26NGGridBlockTrackCollection14ImplicitTracksEv(%"class.blink::NGGridBlockTrackCollection"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 5
  %3 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %2, align 8
  ret %"class.blink::NGGridTrackList"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink26NGGridBlockTrackCollection8ToStringEv(%"class.blink::NGGridBlockTrackCollection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %262

17:                                               ; preds = %1
  %18 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 48, i1 false)
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %21 = bitcast %union.anon* %20 to i8*
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %23, align 4
  %24 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %24, align 1
  %25 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  %26 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %27 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i8** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 41, i32* %29, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  %30 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 4
  %32 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %31, align 8
  %33 = call %"class.WTF::StringImpl"* @_ZNK5blink15NGGridTrackList8ToStringEv(%"class.blink::NGGridTrackList"* %32) #13
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %35, label %40

35:                                               ; preds = %17
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %36, align 8
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 0, i32* %39, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %60

40:                                               ; preds = %17
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 1
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %43, i32* %47, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %40
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %40
  %57 = phi i32 [ %55, %54 ], [ %53, %40 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #13
  br label %60

60:                                               ; preds = %35, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #13
  %61 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 5
  %62 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %61, align 8
  %63 = call i32 @_ZNK5blink15NGGridTrackList13RepeaterCountEv(%"class.blink::NGGridTrackList"* %62) #13
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %101, label %65

65:                                               ; preds = %60
  %66 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #13
  %67 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %68 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i8** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 20, i32* %70, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #13
  %71 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #13
  %72 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %61, align 8
  %73 = call %"class.WTF::StringImpl"* @_ZNK5blink15NGGridTrackList8ToStringEv(%"class.blink::NGGridTrackList"* %72) #13
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %75, label %80

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %76, align 8
  %77 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %78 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 0, i32* %79, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  br label %100

80:                                               ; preds = %65
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 1
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %86 = bitcast i8** %85 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %83, i32* %87, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %80
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %80
  %97 = phi i32 [ %95, %94 ], [ %93, %80 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #13
  br label %100

100:                                              ; preds = %75, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #13
  br label %101

101:                                              ; preds = %60, %100
  %102 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #13
  %103 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %104 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i8** %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 15, i32* %106, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #13
  %107 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %127, label %110

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 6
  %112 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 0
  %113 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 11
  %114 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 2
  %115 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 3
  %116 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 12
  %117 = ptrtoint i8* %113 to i64
  %118 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 10
  %119 = bitcast i8** %114 to i64*
  %120 = ptrtoint i8* %116 to i64
  %121 = bitcast %"class.WTF::StringView"* %10 to i8*
  %122 = bitcast %"class.WTF::StringView"* %10 to i64*
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  %125 = ptrtoint i8* %118 to i64
  %126 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 9
  br label %153

127:                                              ; preds = %184, %192, %101
  %128 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #13
  %129 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %130 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i8** %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 15, i32* %132, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #13
  %133 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %196, label %136

136:                                              ; preds = %127
  %137 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 7
  %138 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  %139 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 11
  %140 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %141 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %142 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 12
  %143 = ptrtoint i8* %139 to i64
  %144 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 10
  %145 = bitcast i8** %140 to i64*
  %146 = ptrtoint i8* %142 to i64
  %147 = bitcast %"class.WTF::StringView"* %12 to i8*
  %148 = bitcast %"class.WTF::StringView"* %12 to i64*
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %151 = ptrtoint i8* %144 to i64
  %152 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 9
  br label %219

153:                                              ; preds = %110, %192
  %154 = phi i32 [ 0, %110 ], [ %189, %192 ]
  %155 = call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %111, i32 %154) #13
  %156 = load i32, i32* %155, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 32, i1 false) #13
  store i8* %113, i8** %114, align 8
  %157 = urem i32 %156, 10
  %158 = udiv i32 %156, 10
  %159 = trunc i32 %157 to i8
  %160 = or i8 %159, 48
  store i8 %160, i8* %113, align 1
  %161 = icmp ugt i32 %156, 9
  br i1 %161, label %162, label %184

162:                                              ; preds = %153
  store i8* %118, i8** %114, align 8
  %163 = urem i32 %158, 10
  %164 = trunc i32 %163 to i8
  %165 = or i8 %164, 48
  store i8 %165, i8* %118, align 2
  %166 = icmp ugt i32 %156, 99
  br i1 %166, label %167, label %184

167:                                              ; preds = %162
  %168 = udiv i32 %156, 100
  store i8* %126, i8** %114, align 8
  %169 = urem i32 %168, 10
  %170 = trunc i32 %169 to i8
  %171 = or i8 %170, 48
  store i8 %171, i8* %126, align 1
  %172 = icmp ugt i32 %156, 999
  br i1 %172, label %173, label %182

173:                                              ; preds = %167, %173
  %174 = phi i32 [ %176, %173 ], [ %168, %167 ]
  %175 = load i8*, i8** %114, align 8
  %176 = udiv i32 %174, 10
  %177 = getelementptr inbounds i8, i8* %175, i64 -1
  store i8* %177, i8** %114, align 8
  %178 = urem i32 %176, 10
  %179 = trunc i32 %178 to i8
  %180 = or i8 %179, 48
  store i8 %180, i8* %177, align 1
  %181 = icmp ugt i32 %174, 99
  br i1 %181, label %173, label %182

182:                                              ; preds = %173, %167
  %183 = load i64, i64* %119, align 8
  br label %184

184:                                              ; preds = %162, %182, %153
  %185 = phi i64 [ %117, %153 ], [ %183, %182 ], [ %125, %162 ]
  %186 = sub i64 %120, %185
  %187 = trunc i64 %186 to i32
  store i32 %187, i32* %115, align 8
  %188 = inttoptr i64 %185 to i8*
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %4, i8* %188, i32 %187) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #13
  %189 = add nuw i32 %154, 1
  %190 = load i32, i32* %107, align 4
  %191 = icmp eq i32 %189, %190
  br i1 %191, label %127, label %192

192:                                              ; preds = %184
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #13
  %193 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %193, i64* %122, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8** %123, align 8
  store i32 2, i32* %124, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #13
  %194 = load i32, i32* %107, align 4
  %195 = icmp ult i32 %189, %194
  br i1 %195, label %153, label %127

196:                                              ; preds = %250, %258, %127
  %197 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %197) #13
  %198 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %199 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %198, i64* %199, align 8
  %200 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8** %200, align 8
  %201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 4, i32* %201, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %197) #13
  %202 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #13
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #13
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %218, label %205

205:                                              ; preds = %196
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #13
  br label %218

218:                                              ; preds = %196, %214, %217
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #13
  br label %265

219:                                              ; preds = %136, %258
  %220 = phi i32 [ 0, %136 ], [ %255, %258 ]
  %221 = call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"* %137, i32 %220) #13
  %222 = load i32, i32* %221, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %138) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 -86, i64 32, i1 false) #13
  store i8* %139, i8** %140, align 8
  %223 = urem i32 %222, 10
  %224 = udiv i32 %222, 10
  %225 = trunc i32 %223 to i8
  %226 = or i8 %225, 48
  store i8 %226, i8* %139, align 1
  %227 = icmp ugt i32 %222, 9
  br i1 %227, label %228, label %250

228:                                              ; preds = %219
  store i8* %144, i8** %140, align 8
  %229 = urem i32 %224, 10
  %230 = trunc i32 %229 to i8
  %231 = or i8 %230, 48
  store i8 %231, i8* %144, align 2
  %232 = icmp ugt i32 %222, 99
  br i1 %232, label %233, label %250

233:                                              ; preds = %228
  %234 = udiv i32 %222, 100
  store i8* %152, i8** %140, align 8
  %235 = urem i32 %234, 10
  %236 = trunc i32 %235 to i8
  %237 = or i8 %236, 48
  store i8 %237, i8* %152, align 1
  %238 = icmp ugt i32 %222, 999
  br i1 %238, label %239, label %248

239:                                              ; preds = %233, %239
  %240 = phi i32 [ %242, %239 ], [ %234, %233 ]
  %241 = load i8*, i8** %140, align 8
  %242 = udiv i32 %240, 10
  %243 = getelementptr inbounds i8, i8* %241, i64 -1
  store i8* %243, i8** %140, align 8
  %244 = urem i32 %242, 10
  %245 = trunc i32 %244 to i8
  %246 = or i8 %245, 48
  store i8 %246, i8* %243, align 1
  %247 = icmp ugt i32 %240, 99
  br i1 %247, label %239, label %248

248:                                              ; preds = %239, %233
  %249 = load i64, i64* %145, align 8
  br label %250

250:                                              ; preds = %228, %248, %219
  %251 = phi i64 [ %143, %219 ], [ %249, %248 ], [ %151, %228 ]
  %252 = sub i64 %146, %251
  %253 = trunc i64 %252 to i32
  store i32 %253, i32* %141, align 8
  %254 = inttoptr i64 %251 to i8*
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %4, i8* %254, i32 %253) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %138) #13
  %255 = add nuw i32 %220, 1
  %256 = load i32, i32* %133, align 4
  %257 = icmp eq i32 %255, %256
  br i1 %257, label %196, label %258

258:                                              ; preds = %250
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #13
  %259 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %259, i64* %148, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8** %149, align 8
  store i32 2, i32* %150, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #13
  %260 = load i32, i32* %133, align 4
  %261 = icmp ult i32 %255, %260
  br i1 %261, label %219, label %196

262:                                              ; preds = %1
  %263 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 0
  %264 = tail call %"class.WTF::StringImpl"* @_ZNK5blink25NGGridTrackCollectionBase8ToStringEv(%"class.blink::NGGridTrackCollectionBase"* %263)
  br label %265

265:                                              ; preds = %262, %218
  %266 = phi %"class.WTF::StringImpl"* [ %202, %218 ], [ %264, %262 ]
  ret %"class.WTF::StringImpl"* %266
}

declare %"class.WTF::StringImpl"* @_ZNK5blink15NGGridTrackList8ToStringEv(%"class.blink::NGGridTrackList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink26NGGridBlockTrackCollection17HasImplicitTracksEv(%"class.blink::NGGridBlockTrackCollection"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 5
  %3 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %2, align 8
  %4 = tail call i32 @_ZNK5blink15NGGridTrackList13RepeaterCountEv(%"class.blink::NGGridTrackList"* %3) #13
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink26NGGridBlockTrackCollection18ImplicitRepeatSizeEv(%"class.blink::NGGridBlockTrackCollection"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 5
  %3 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %2, align 8
  %4 = tail call i32 @_ZNK5blink15NGGridTrackList10RepeatSizeEj(%"class.blink::NGGridTrackList"* %3, i32 0) #13
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink26NGGridBlockTrackCollection16RangeTrackNumberEj(%"class.blink::NGGridBlockTrackCollection"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 8
  %4 = tail call dereferenceable(20) %"struct.blink::NGGridBlockTrackCollection::Range"* @_ZNK3WTF6VectorIN5blink26NGGridBlockTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.22"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink26NGGridBlockTrackCollection15RangeTrackCountEj(%"class.blink::NGGridBlockTrackCollection"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 8
  %4 = tail call dereferenceable(20) %"struct.blink::NGGridBlockTrackCollection::Range"* @_ZNK3WTF6VectorIN5blink26NGGridBlockTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.22"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink26NGGridBlockTrackCollection16IsRangeCollapsedEj(%"class.blink::NGGridBlockTrackCollection"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 8
  %4 = tail call dereferenceable(20) %"struct.blink::NGGridBlockTrackCollection::Range"* @_ZNK3WTF6VectorIN5blink26NGGridBlockTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.22"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %4, i64 0, i32 4, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, 8
  %8 = icmp ne i8 %7, 0
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink26NGGridBlockTrackCollection10RangeCountEv(%"class.blink::NGGridBlockTrackCollection"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9NGGridSetC2Ej(%"class.blink::NGGridSet"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::GridLength", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = alloca %"class.blink::GridLength", align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.blink::Length"*
  %9 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 0
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2
  %11 = bitcast %"class.blink::GridLength"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 7, i1 false) #13, !alias.scope !5
  %13 = bitcast %"class.blink::GridLength"* %3 to i64*
  %14 = load i64, i64* %4, align 8
  store i64 %14, i64* %13, align 8
  %15 = and i64 %14, 280375465082880
  %16 = icmp eq i64 %15, 8796093022208
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %3, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %18) #13
  br label %19

19:                                               ; preds = %2, %17
  %20 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %3, i64 0, i32 1
  store double 0.000000e+00, double* %20, align 8
  %21 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %3, i64 0, i32 2
  store i32 0, i32* %21, align 8
  %22 = bitcast %"class.blink::GridLength"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #13
  %23 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 7, i1 false) #13, !alias.scope !8
  %24 = bitcast %"class.blink::GridLength"* %6 to i64*
  %25 = load i64, i64* %7, align 8
  store i64 %25, i64* %24, align 8
  %26 = and i64 %25, 280375465082880
  %27 = icmp eq i64 %26, 8796093022208
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %29) #13
  br label %30

30:                                               ; preds = %19, %28
  %31 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 1
  store double 0.000000e+00, double* %31, align 8
  %32 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 2
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %10, i64 0, i32 0
  store i32 1, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 2
  %35 = bitcast %"class.blink::GridLength"* %34 to i64*
  %36 = load i64, i64* %13, align 8
  store i64 %36, i64* %35, align 4
  %37 = and i64 %36, 280375465082880
  %38 = icmp eq i64 %37, 8796093022208
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %34, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %40) #13
  br label %41

41:                                               ; preds = %39, %30
  %42 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 2, i32 1
  %43 = bitcast double* %42 to i8*
  %44 = bitcast double* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 12, i1 false) #13
  %45 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 3
  %46 = bitcast %"class.blink::GridLength"* %45 to i64*
  %47 = load i64, i64* %24, align 8
  store i64 %47, i64* %46, align 4
  %48 = and i64 %47, 280375465082880
  %49 = icmp eq i64 %48, 8796093022208
  br i1 %49, label %50, label %52

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %45, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %51) #13
  br label %52

52:                                               ; preds = %41, %50
  %53 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 3, i32 1
  %54 = bitcast double* %53 to i8*
  %55 = bitcast double* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 12, i1 false) #13
  %56 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 4
  %57 = bitcast %"class.blink::GridLength"* %56 to i64*
  store i64 2199023255552, i64* %57, align 4
  %58 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 4, i32 1
  store double 0.000000e+00, double* %58, align 8
  %59 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 4, i32 2
  store i32 0, i32* %59, align 8
  call void @_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv(%"class.blink::GridTrackSize"* %10) #13
  %60 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 0, i32 2
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %61, 8
  br i1 %62, label %63, label %65

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %64) #13
  br label %65

65:                                               ; preds = %52, %63
  %66 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, 8
  br i1 %68, label %69, label %70

69:                                               ; preds = %65
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #13
  br label %70

70:                                               ; preds = %65, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #13
  %71 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %3, i64 0, i32 0, i32 2
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 8
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %3, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %75) #13
  br label %76

76:                                               ; preds = %70, %74
  %77 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 8
  br i1 %79, label %80, label %81

80:                                               ; preds = %76
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #13
  br label %81

81:                                               ; preds = %76, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  %82 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 3, i32 0
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -64, i32 0, i32 -64>, <4 x i32>* %83, align 4
  %84 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 7, i32 0
  store i32 0, i32* %84, align 4
  %85 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 8
  %86 = load i8, i8* %85, align 4
  %87 = and i8 %86, -2
  store i8 %87, i8* %85, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9NGGridSetC2EjRKNS_13GridTrackSizeEb(%"class.blink::NGGridSet"*, i32, %"class.blink::GridTrackSize"* nocapture readonly dereferenceable(88), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::GridTrackSize", align 8
  %6 = alloca %"class.blink::GridLength", align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.blink::Length"*
  %9 = alloca %"class.blink::GridLength", align 8
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"class.blink::Length"*
  %12 = alloca %"class.blink::GridLength", align 8
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"class.blink::Length"*
  %15 = alloca %"class.blink::GridLength", align 8
  %16 = alloca i64, align 8
  %17 = bitcast i64* %16 to %"class.blink::Length"*
  %18 = alloca %"class.blink::GridTrackSize", align 8
  %19 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 0
  store i32 %1, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %20, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %2, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 2
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %2, i64 0, i32 2
  %26 = bitcast %"class.blink::GridLength"* %25 to i64*
  %27 = bitcast %"class.blink::GridLength"* %24 to i64*
  %28 = load i64, i64* %26, align 4
  store i64 %28, i64* %27, align 4
  %29 = and i64 %28, 280375465082880
  %30 = icmp eq i64 %29, 8796093022208
  br i1 %30, label %31, label %33

31:                                               ; preds = %4
  %32 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %24, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %32) #13
  br label %33

33:                                               ; preds = %31, %4
  %34 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 2, i32 1
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %2, i64 0, i32 2, i32 1
  %36 = bitcast double* %34 to i8*
  %37 = bitcast double* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 12, i1 false) #13
  %38 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 3
  %39 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %2, i64 0, i32 3
  %40 = bitcast %"class.blink::GridLength"* %39 to i64*
  %41 = bitcast %"class.blink::GridLength"* %38 to i64*
  %42 = load i64, i64* %40, align 4
  store i64 %42, i64* %41, align 4
  %43 = and i64 %42, 280375465082880
  %44 = icmp eq i64 %43, 8796093022208
  br i1 %44, label %45, label %47

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %38, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %46) #13
  br label %47

47:                                               ; preds = %45, %33
  %48 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 3, i32 1
  %49 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %2, i64 0, i32 3, i32 1
  %50 = bitcast double* %48 to i8*
  %51 = bitcast double* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 12, i1 false) #13
  %52 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 4
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %2, i64 0, i32 4
  %54 = bitcast %"class.blink::GridLength"* %53 to i64*
  %55 = bitcast %"class.blink::GridLength"* %52 to i64*
  %56 = load i64, i64* %54, align 4
  store i64 %56, i64* %55, align 4
  %57 = and i64 %56, 280375465082880
  %58 = icmp eq i64 %57, 8796093022208
  br i1 %58, label %59, label %61

59:                                               ; preds = %47
  %60 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %52, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %47, %59
  %62 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 4, i32 1
  %63 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %2, i64 0, i32 4, i32 1
  %64 = bitcast double* %62 to i8*
  %65 = bitcast double* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 12, i1 false) #13
  %66 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 5
  %67 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %2, i64 0, i32 5
  %68 = load i16, i16* %67, align 8
  store i16 %68, i16* %66, align 8
  %69 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 3, i32 0
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -64, i32 0, i32 -64>, <4 x i32>* %70, align 4
  %71 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 7, i32 0
  store i32 0, i32* %71, align 4
  %72 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 8
  %73 = load i8, i8* %72, align 4
  %74 = and i8 %73, -2
  store i8 %74, i8* %72, align 4
  %75 = load i32, i32* %21, align 8
  %76 = icmp eq i32 %75, 2
  br i1 %76, label %77, label %177

77:                                               ; preds = %61
  br i1 %3, label %78, label %328

78:                                               ; preds = %77
  %79 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 4, i32 0, i32 2
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, 1
  br i1 %81, label %82, label %328

82:                                               ; preds = %78
  %83 = bitcast %"class.blink::GridTrackSize"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %83) #13
  %84 = bitcast %"class.blink::GridLength"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #13
  %85 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 7, i1 false) #13, !alias.scope !11
  %86 = bitcast %"class.blink::GridLength"* %6 to i64*
  %87 = load i64, i64* %7, align 8
  store i64 %87, i64* %86, align 8
  %88 = and i64 %87, 280375465082880
  %89 = icmp eq i64 %88, 8796093022208
  br i1 %89, label %90, label %92

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %91) #13
  br label %92

92:                                               ; preds = %82, %90
  %93 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 1
  store double 0.000000e+00, double* %93, align 8
  %94 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 2
  store i32 0, i32* %94, align 8
  %95 = bitcast %"class.blink::GridLength"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #13
  %96 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #13
  %97 = bitcast i64* %10 to i32*
  store i32 0, i32* %97, align 8, !alias.scope !14
  %98 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %11, i64 0, i32 1
  store i8 0, i8* %98, align 4, !alias.scope !14
  %99 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %11, i64 0, i32 2
  store i8 4, i8* %99, align 1, !alias.scope !14
  %100 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %11, i64 0, i32 3
  store i8 0, i8* %100, align 2, !alias.scope !14
  %101 = bitcast %"class.blink::GridLength"* %9 to i64*
  %102 = load i64, i64* %10, align 8
  store i64 %102, i64* %101, align 8
  %103 = and i64 %102, 280375465082880
  %104 = icmp eq i64 %103, 8796093022208
  br i1 %104, label %105, label %107

105:                                              ; preds = %92
  %106 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %9, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %106) #13
  br label %107

107:                                              ; preds = %92, %105
  %108 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %9, i64 0, i32 1
  store double 0.000000e+00, double* %108, align 8
  %109 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %9, i64 0, i32 2
  store i32 0, i32* %109, align 8
  %110 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 0
  store i32 1, i32* %110, align 8
  %111 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 2
  %112 = bitcast %"class.blink::GridLength"* %111 to i64*
  %113 = load i64, i64* %86, align 8
  store i64 %113, i64* %112, align 8
  %114 = and i64 %113, 280375465082880
  %115 = icmp eq i64 %114, 8796093022208
  br i1 %115, label %116, label %118

116:                                              ; preds = %107
  %117 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %111, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %117) #13
  br label %118

118:                                              ; preds = %116, %107
  %119 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 2, i32 1
  %120 = bitcast double* %119 to i8*
  %121 = bitcast double* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 12, i1 false) #13
  %122 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 3
  %123 = bitcast %"class.blink::GridLength"* %122 to i64*
  %124 = load i64, i64* %101, align 8
  store i64 %124, i64* %123, align 8
  %125 = and i64 %124, 280375465082880
  %126 = icmp eq i64 %125, 8796093022208
  br i1 %126, label %127, label %129

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %122, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %128) #13
  br label %129

129:                                              ; preds = %118, %127
  %130 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 3, i32 1
  %131 = bitcast double* %130 to i8*
  %132 = bitcast double* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 12, i1 false) #13
  %133 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 4
  %134 = bitcast %"class.blink::GridLength"* %133 to i64*
  store i64 2199023255552, i64* %134, align 8
  %135 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 4, i32 1
  store double 0.000000e+00, double* %135, align 8
  %136 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 4, i32 2
  store i32 0, i32* %136, align 8
  call void @_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv(%"class.blink::GridTrackSize"* nonnull %5) #13
  %137 = call dereferenceable(88) %"class.blink::GridTrackSize"* @_ZN5blink13GridTrackSizeaSEOS0_(%"class.blink::GridTrackSize"* %20, %"class.blink::GridTrackSize"* nonnull dereferenceable(88) %5)
  %138 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 4, i32 0, i32 2
  %139 = load i8, i8* %138, align 1
  %140 = icmp eq i8 %139, 8
  br i1 %140, label %141, label %143

141:                                              ; preds = %129
  %142 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 4, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %142) #13
  br label %143

143:                                              ; preds = %141, %129
  %144 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 3, i32 0, i32 2
  %145 = load i8, i8* %144, align 1
  %146 = icmp eq i8 %145, 8
  br i1 %146, label %147, label %149

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 3, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %148) #13
  br label %149

149:                                              ; preds = %147, %143
  %150 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 2, i32 0, i32 2
  %151 = load i8, i8* %150, align 1
  %152 = icmp eq i8 %151, 8
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %5, i64 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %154) #13
  br label %155

155:                                              ; preds = %149, %153
  %156 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %9, i64 0, i32 0, i32 2
  %157 = load i8, i8* %156, align 1
  %158 = icmp eq i8 %157, 8
  br i1 %158, label %159, label %161

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %9, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %160) #13
  br label %161

161:                                              ; preds = %155, %159
  %162 = load i8, i8* %99, align 1
  %163 = icmp eq i8 %162, 8
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %11) #13
  br label %165

165:                                              ; preds = %161, %164
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #13
  %166 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 0, i32 2
  %167 = load i8, i8* %166, align 1
  %168 = icmp eq i8 %167, 8
  br i1 %168, label %169, label %171

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %170) #13
  br label %171

171:                                              ; preds = %165, %169
  %172 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %173 = load i8, i8* %172, align 1
  %174 = icmp eq i8 %173, 8
  br i1 %174, label %175, label %176

175:                                              ; preds = %171
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #13
  br label %176

176:                                              ; preds = %171, %175
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #13
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %83) #13
  br label %328

177:                                              ; preds = %61
  br i1 %3, label %178, label %188

178:                                              ; preds = %177
  %179 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 2, i32 2
  %180 = load i32, i32* %179, align 8
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %188

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 2, i32 0, i32 2
  %184 = load i8, i8* %183, align 1
  %185 = icmp eq i8 %184, 1
  %186 = icmp eq i8 %184, 8
  %187 = or i1 %185, %186
  br label %188

188:                                              ; preds = %182, %178, %177
  %189 = phi i1 [ false, %177 ], [ false, %178 ], [ %187, %182 ]
  %190 = bitcast %"class.blink::GridLength"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #13
  %191 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %12, i64 0, i32 0, i32 2
  %192 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %12, i64 0, i32 1
  %193 = bitcast %"class.blink::GridLength"* %12 to i64*
  store i64 -6148914691236517206, i64* %193, align 8
  store double 0xFFFFFFFFFFFFFFFF, double* %192, align 8
  %194 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %12, i64 0, i32 2
  %195 = and i16 %68, 16
  %196 = icmp ne i16 %195, 0
  %197 = or i1 %196, %189
  %198 = bitcast i32* %194 to i64*
  store i64 -6148914691236517206, i64* %198, align 8
  br i1 %197, label %199, label %213

199:                                              ; preds = %188
  %200 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 0, i64 7, i1 false) #13, !alias.scope !17
  %201 = bitcast %"class.blink::GridLength"* %12 to i64*
  %202 = load i64, i64* %13, align 8
  store i64 %202, i64* %201, align 8
  %203 = and i64 %202, 280375465082880
  %204 = icmp eq i64 %203, 8796093022208
  br i1 %204, label %206, label %205

205:                                              ; preds = %199
  store double 0.000000e+00, double* %192, align 8
  store i32 0, i32* %194, align 8
  br label %212

206:                                              ; preds = %199
  %207 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %12, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %207) #13
  %208 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 2
  %209 = load i8, i8* %208, align 1
  store double 0.000000e+00, double* %192, align 8
  store i32 0, i32* %194, align 8
  %210 = icmp eq i8 %209, 8
  br i1 %210, label %211, label %212

211:                                              ; preds = %206
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %14) #13
  br label %212

212:                                              ; preds = %205, %206, %211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #13
  br label %222

213:                                              ; preds = %188
  %214 = bitcast %"class.blink::GridLength"* %12 to i64*
  %215 = load i64, i64* %27, align 4
  store i64 %215, i64* %214, align 8
  %216 = and i64 %215, 280375465082880
  %217 = icmp eq i64 %216, 8796093022208
  br i1 %217, label %218, label %220

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %12, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %219) #13
  br label %220

220:                                              ; preds = %213, %218
  %221 = bitcast double* %192 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %221, i8* align 8 %36, i64 12, i1 false) #13
  br label %222

222:                                              ; preds = %220, %212
  br i1 %3, label %223, label %233

223:                                              ; preds = %222
  %224 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 3, i32 2
  %225 = load i32, i32* %224, align 8
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %233

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 3, i32 0, i32 2
  %229 = load i8, i8* %228, align 1
  %230 = icmp eq i8 %229, 1
  %231 = icmp eq i8 %229, 8
  %232 = or i1 %230, %231
  br label %233

233:                                              ; preds = %227, %223, %222
  %234 = phi i1 [ false, %222 ], [ false, %223 ], [ %232, %227 ]
  %235 = bitcast %"class.blink::GridLength"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %235) #13
  %236 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %15, i64 0, i32 0, i32 2
  %237 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %15, i64 0, i32 1
  %238 = bitcast %"class.blink::GridLength"* %15 to i64*
  store i64 -6148914691236517206, i64* %238, align 8
  store double 0xFFFFFFFFFFFFFFFF, double* %237, align 8
  %239 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %15, i64 0, i32 2
  %240 = bitcast i32* %239 to i64*
  store i64 -6148914691236517206, i64* %240, align 8
  br i1 %234, label %245, label %241

241:                                              ; preds = %233
  %242 = load i16, i16* %66, align 8
  %243 = and i16 %242, 2
  %244 = icmp eq i16 %243, 0
  br i1 %244, label %259, label %245

245:                                              ; preds = %241, %233
  %246 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %246) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %246, i8 0, i64 7, i1 false) #13, !alias.scope !20
  %247 = bitcast %"class.blink::GridLength"* %15 to i64*
  %248 = load i64, i64* %16, align 8
  store i64 %248, i64* %247, align 8
  %249 = and i64 %248, 280375465082880
  %250 = icmp eq i64 %249, 8796093022208
  br i1 %250, label %252, label %251

251:                                              ; preds = %245
  store double 0.000000e+00, double* %237, align 8
  store i32 0, i32* %239, align 8
  br label %258

252:                                              ; preds = %245
  %253 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %15, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %253) #13
  %254 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %17, i64 0, i32 2
  %255 = load i8, i8* %254, align 1
  %256 = icmp eq i8 %255, 8
  store double 0.000000e+00, double* %237, align 8
  store i32 0, i32* %239, align 8
  br i1 %256, label %257, label %258

257:                                              ; preds = %252
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %17) #13
  br label %258

258:                                              ; preds = %251, %252, %257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %246) #13
  br label %268

259:                                              ; preds = %241
  %260 = bitcast %"class.blink::GridLength"* %15 to i64*
  %261 = load i64, i64* %41, align 4
  store i64 %261, i64* %260, align 8
  %262 = and i64 %261, 280375465082880
  %263 = icmp eq i64 %262, 8796093022208
  br i1 %263, label %264, label %266

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %15, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %265) #13
  br label %266

266:                                              ; preds = %259, %264
  %267 = bitcast double* %237 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %267, i8* align 8 %50, i64 12, i1 false) #13
  br label %268

268:                                              ; preds = %266, %258
  %269 = bitcast %"class.blink::GridTrackSize"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %269) #13
  %270 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 0
  store i32 1, i32* %270, align 8
  %271 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2
  %272 = bitcast %"class.blink::GridLength"* %12 to i64*
  %273 = bitcast %"class.blink::GridLength"* %271 to i64*
  %274 = load i64, i64* %272, align 8
  store i64 %274, i64* %273, align 8
  %275 = and i64 %274, 280375465082880
  %276 = icmp eq i64 %275, 8796093022208
  br i1 %276, label %277, label %279

277:                                              ; preds = %268
  %278 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %271, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %278) #13
  br label %279

279:                                              ; preds = %277, %268
  %280 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 1
  %281 = bitcast double* %280 to i8*
  %282 = bitcast double* %192 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 8 %282, i64 12, i1 false) #13
  %283 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3
  %284 = bitcast %"class.blink::GridLength"* %15 to i64*
  %285 = bitcast %"class.blink::GridLength"* %283 to i64*
  %286 = load i64, i64* %284, align 8
  store i64 %286, i64* %285, align 8
  %287 = and i64 %286, 280375465082880
  %288 = icmp eq i64 %287, 8796093022208
  br i1 %288, label %289, label %291

289:                                              ; preds = %279
  %290 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %283, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %290) #13
  br label %291

291:                                              ; preds = %279, %289
  %292 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 1
  %293 = bitcast double* %292 to i8*
  %294 = bitcast double* %237 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %293, i8* align 8 %294, i64 12, i1 false) #13
  %295 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4
  %296 = bitcast %"class.blink::GridLength"* %295 to i64*
  store i64 2199023255552, i64* %296, align 8
  %297 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 1
  store double 0.000000e+00, double* %297, align 8
  %298 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 2
  store i32 0, i32* %298, align 8
  call void @_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv(%"class.blink::GridTrackSize"* nonnull %18) #13
  %299 = call dereferenceable(88) %"class.blink::GridTrackSize"* @_ZN5blink13GridTrackSizeaSEOS0_(%"class.blink::GridTrackSize"* %20, %"class.blink::GridTrackSize"* nonnull dereferenceable(88) %18)
  %300 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %301 = load i8, i8* %300, align 1
  %302 = icmp eq i8 %301, 8
  br i1 %302, label %303, label %305

303:                                              ; preds = %291
  %304 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %304) #13
  br label %305

305:                                              ; preds = %303, %291
  %306 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %307 = load i8, i8* %306, align 1
  %308 = icmp eq i8 %307, 8
  br i1 %308, label %309, label %311

309:                                              ; preds = %305
  %310 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %310) #13
  br label %311

311:                                              ; preds = %309, %305
  %312 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %313 = load i8, i8* %312, align 1
  %314 = icmp eq i8 %313, 8
  br i1 %314, label %315, label %317

315:                                              ; preds = %311
  %316 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %316) #13
  br label %317

317:                                              ; preds = %311, %315
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %269) #13
  %318 = load i8, i8* %236, align 1
  %319 = icmp eq i8 %318, 8
  br i1 %319, label %320, label %322

320:                                              ; preds = %317
  %321 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %15, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %321) #13
  br label %322

322:                                              ; preds = %317, %320
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %235) #13
  %323 = load i8, i8* %191, align 1
  %324 = icmp eq i8 %323, 8
  br i1 %324, label %325, label %327

325:                                              ; preds = %322
  %326 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %12, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %326) #13
  br label %327

327:                                              ; preds = %322, %325
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #13
  br label %328

328:                                              ; preds = %77, %78, %176, %327
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(88) %"class.blink::GridTrackSize"* @_ZN5blink13GridTrackSizeaSEOS0_(%"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"* dereferenceable(88)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 2, i32 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 8
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %7, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %13) #13
  br label %14

14:                                               ; preds = %12, %2
  %15 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 0, i32 2
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 8
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %8) #13
  br label %19

19:                                               ; preds = %14, %18
  %20 = bitcast %"class.blink::GridLength"* %7 to i64*
  %21 = bitcast %"class.blink::GridLength"* %6 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 4
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 1
  %24 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 2, i32 1
  %25 = bitcast double* %23 to i8*
  %26 = bitcast double* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 12, i1 false) #13
  %27 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 3
  %29 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %27, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 3, i32 0, i32 2
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 8
  br i1 %32, label %33, label %35

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %28, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %34) #13
  br label %35

35:                                               ; preds = %33, %19
  %36 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 0, i32 2
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 8
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #13
  br label %40

40:                                               ; preds = %35, %39
  %41 = bitcast %"class.blink::GridLength"* %28 to i64*
  %42 = bitcast %"class.blink::GridLength"* %27 to i64*
  %43 = load i64, i64* %41, align 4
  store i64 %43, i64* %42, align 4
  %44 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 1
  %45 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 3, i32 1
  %46 = bitcast double* %44 to i8*
  %47 = bitcast double* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 12, i1 false) #13
  %48 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4
  %49 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 4
  %50 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %48, i64 0, i32 0
  %51 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 4, i32 0, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 8
  br i1 %53, label %54, label %56

54:                                               ; preds = %40
  %55 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %49, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %55) #13
  br label %56

56:                                               ; preds = %54, %40
  %57 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 0, i32 2
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 8
  br i1 %59, label %60, label %61

60:                                               ; preds = %56
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %50) #13
  br label %61

61:                                               ; preds = %56, %60
  %62 = bitcast %"class.blink::GridLength"* %49 to i64*
  %63 = bitcast %"class.blink::GridLength"* %48 to i64*
  %64 = load i64, i64* %62, align 4
  store i64 %64, i64* %63, align 4
  %65 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 4, i32 1
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 4, i32 1
  %67 = bitcast double* %65 to i8*
  %68 = bitcast double* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 12, i1 false) #13
  %69 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 5
  %70 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %1, i64 0, i32 5
  %71 = load i16, i16* %70, align 8
  store i16 %71, i16* %69, align 8
  ret %"class.blink::GridTrackSize"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK5blink9NGGridSet10FlexFactorEv(%"class.blink::NGGridSet"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 2, i32 3, i32 1
  %3 = load double, double* %2, align 8
  %4 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = uitofp i32 %5 to double
  %7 = fmul double %3, %6
  ret double %7
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9NGGridSet29IsGrowthLimitLessThanBaseSizeEv(%"class.blink::NGGridSet"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 4, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -64
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 3, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %3, %7
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9NGGridSet38EnsureGrowthLimitIsNotLessThanBaseSizeEv(%"class.blink::NGGridSet"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 4, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -64
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 3, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %3, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store i32 %7, i32* %2, align 4
  br label %10

10:                                               ; preds = %1, %9, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9NGGridSet8BaseSizeEv(%"class.blink::NGGridSet"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9NGGridSet11SetBaseSizeENS_10LayoutUnitE(%"class.blink::NGGridSet"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 3, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 4, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, -64
  %7 = icmp slt i32 %5, %1
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  store i32 %1, i32* %4, align 4
  br label %10

10:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9NGGridSet11GrowthLimitEv(%"class.blink::NGGridSet"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 4, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9NGGridSet14SetGrowthLimitENS_10LayoutUnitE(%"class.blink::NGGridSet"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %0, i64 0, i32 4, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink36NGGridLayoutAlgorithmTrackCollection5RangeC2ERKNS_26NGGridBlockTrackCollection5RangeEj(%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* nocapture, %"struct.blink::NGGridBlockTrackCollection::Range"* nocapture readonly dereferenceable(20), i32) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %0, i64 0, i32 2
  store i32 %2, i32* %10, align 4
  %11 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %0, i64 0, i32 4, i32 0
  %12 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %1, i64 0, i32 4, i32 0
  %13 = load i8, i8* %12, align 4
  store i8 %13, i8* %11, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection5Range11IsCollapsedEv(%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %0, i64 0, i32 4, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, 8
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink36NGGridLayoutAlgorithmTrackCollectionC2ERKNS_26NGGridBlockTrackCollectionEb(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, %"class.blink::NGGridBlockTrackCollection"* dereferenceable(88), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink36NGGridLayoutAlgorithmTrackCollectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 8
  %11 = and i8 %10, -8
  %12 = or i8 %11, 4
  store i8 %12, i8* %9, align 8
  %13 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %1, i64 0, i32 0
  %15 = bitcast %"class.blink::NGGridBlockTrackCollection"* %1 to i32 (%"class.blink::NGGridTrackCollectionBase"*)***
  %16 = bitcast %"class.WTF::Vector.27"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false)
  %17 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)**, i32 (%"class.blink::NGGridTrackCollectionBase"*)*** %15, align 8, !noalias !23
  %18 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %17, i64 3
  %19 = load i32 (%"class.blink::NGGridTrackCollectionBase"*)*, i32 (%"class.blink::NGGridTrackCollectionBase"*)** %18, align 8, !noalias !23
  %20 = tail call i32 %19(%"class.blink::NGGridTrackCollectionBase"* %14) #13, !noalias !23
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %3
  %23 = bitcast %"class.blink::NGGridBlockTrackCollection"* %1 to i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)***
  %24 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %23, align 8, !noalias !23
  %25 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %24, align 8, !noalias !23
  %26 = tail call i32 %25(%"class.blink::NGGridTrackCollectionBase"* %14, i32 0) #13, !noalias !23
  %27 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %23, align 8, !noalias !23
  %28 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %27, i64 1
  %29 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %28, align 8, !noalias !23
  %30 = tail call i32 %29(%"class.blink::NGGridTrackCollectionBase"* %14, i32 0) #13, !noalias !23
  %31 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %1, i64 0, i32 8
  %32 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %1, i64 0, i32 5
  %33 = getelementptr inbounds %"class.blink::NGGridBlockTrackCollection", %"class.blink::NGGridBlockTrackCollection"* %1, i64 0, i32 4
  %34 = bitcast %"class.blink::NGGridBlockTrackCollection"* %1 to i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)***
  br label %36

35:                                               ; preds = %36, %3
  ret void

36:                                               ; preds = %48, %22
  %37 = phi i32 [ 0, %22 ], [ %46, %48 ]
  %38 = tail call dereferenceable(20) %"struct.blink::NGGridBlockTrackCollection::Range"* @_ZNK3WTF6VectorIN5blink26NGGridBlockTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.22"* %31, i32 %37) #13
  %39 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %38, i64 0, i32 4, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = and i8 %40, 16
  %42 = icmp eq i8 %41, 0
  %43 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %32, align 8
  %44 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %33, align 8
  %45 = select i1 %42, %"class.blink::NGGridTrackList"* %44, %"class.blink::NGGridTrackList"* %43
  tail call void @_ZN5blink36NGGridLayoutAlgorithmTrackCollection16AppendTrackRangeERKNS_26NGGridBlockTrackCollection5RangeERKNS_15NGGridTrackListEb(%"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, %"struct.blink::NGGridBlockTrackCollection::Range"* dereferenceable(20) %38, %"class.blink::NGGridTrackList"* dereferenceable(40) %45, i1 zeroext %2)
  %46 = add nuw i32 %37, 1
  %47 = icmp ugt i32 %20, %46
  br i1 %47, label %48, label %35

48:                                               ; preds = %36
  %49 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %34, align 8
  %50 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %49, align 8
  %51 = tail call i32 %50(%"class.blink::NGGridTrackCollectionBase"* %14, i32 %46) #13
  %52 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)**, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*** %34, align 8
  %53 = getelementptr inbounds i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %52, i64 1
  %54 = load i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)*, i32 (%"class.blink::NGGridTrackCollectionBase"*, i32)** %53, align 8
  %55 = tail call i32 %54(%"class.blink::NGGridTrackCollectionBase"* %14, i32 %46) #13
  br label %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink36NGGridLayoutAlgorithmTrackCollection16AppendTrackRangeERKNS_26NGGridBlockTrackCollection5RangeERKNS_15NGGridTrackListEb(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, %"struct.blink::NGGridBlockTrackCollection::Range"* nocapture readonly dereferenceable(20), %"class.blink::NGGridTrackList"* dereferenceable(40), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", align 4
  %6 = bitcast %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %5, i64 0, i32 3
  %11 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %5, i64 0, i32 4, i32 0
  %12 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %5, i64 0, i32 3
  %15 = bitcast i32* %14 to i64*
  store i64 -6148914691236517206, i64* %15, align 4
  %16 = load i32, i32* %13, align 4
  %17 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %7, align 4
  %19 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %8, align 4
  store i32 %16, i32* %9, align 4
  %21 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %1, i64 0, i32 4, i32 0
  %22 = load i8, i8* %21, align 4
  store i8 %22, i8* %11, align 4
  %23 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %1, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %26, label %63

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, %20
  store i32 %29, i32* %27, align 8
  store i32 1, i32* %10, align 4
  %30 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %16, %31
  br i1 %32, label %33, label %55, !prof !3

33:                                               ; preds = %26
  %34 = add i32 %16, 1
  %35 = lshr i32 %16, 2
  %36 = add i32 %34, %35
  %37 = icmp ugt i32 %36, 4
  %38 = select i1 %37, i32 %36, i32 4
  %39 = icmp ugt i32 %38, %34
  %40 = select i1 %39, i32 %38, i32 %34
  %41 = icmp ult i32 %16, %40
  br i1 %41, label %42, label %55, !prof !4

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %12, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::NGGridSet"*, %"class.blink::NGGridSet"** %43, align 8
  %45 = icmp eq %"class.blink::NGGridSet"* %44, null
  br i1 %45, label %46, label %54

46:                                               ; preds = %42
  %47 = zext i32 %40 to i64
  %48 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9NGGridSetEEEmm(i64 %47) #13
  %49 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %48, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9NGGridSetEEEPKcv, i64 0, i64 0)) #13
  %50 = ptrtoint i8* %49 to i64
  %51 = bitcast %"class.WTF::Vector.32"* %12 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = udiv i64 %48, 120
  %53 = trunc i64 %52 to i32
  store i32 %53, i32* %30, align 8
  br label %55

54:                                               ; preds = %42
  tail call void @_ZN3WTF6VectorIN5blink9NGGridSetELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.32"* %12, i32 %40) #13
  br label %55

55:                                               ; preds = %26, %33, %46, %54
  %56 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %12, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::NGGridSet"*, %"class.blink::NGGridSet"** %56, align 8
  %58 = load i32, i32* %13, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %57, i64 %59
  tail call void @_ZN5blink9NGGridSetC2Ej(%"class.blink::NGGridSet"* %60, i32 %20) #13
  %61 = load i32, i32* %13, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %13, align 4
  br label %164

63:                                               ; preds = %4
  %64 = and i8 %22, 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  store i32 0, i32* %10, align 4
  br label %255

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, %20
  store i32 %70, i32* %68, align 8
  %71 = load i32, i32* %23, align 4
  %72 = tail call i32 @_ZNK5blink15NGGridTrackList10RepeatSizeEj(%"class.blink::NGGridTrackList"* %2, i32 %71) #13
  %73 = icmp ult i32 %20, %72
  %74 = select i1 %73, i32 %20, i32 %72
  store i32 %74, i32* %10, align 4
  %75 = udiv i32 %20, %72
  %76 = urem i32 %20, %72
  %77 = icmp eq i32 %74, 0
  br i1 %77, label %255, label %78

78:                                               ; preds = %67
  %79 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %1, i64 0, i32 3
  %80 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %12, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::Vector.32"* %12 to i64*
  %83 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 3
  br label %84

84:                                               ; preds = %78, %154
  %85 = phi i32 [ 0, %78 ], [ %162, %154 ]
  %86 = icmp ult i32 %85, %76
  %87 = zext i1 %86 to i32
  %88 = add i32 %75, %87
  %89 = load i32, i32* %79, align 4
  %90 = add i32 %89, %85
  %91 = urem i32 %90, %72
  %92 = load i32, i32* %23, align 4
  %93 = tail call dereferenceable(88) %"class.blink::GridTrackSize"* @_ZNK5blink15NGGridTrackList15RepeatTrackSizeEjj(%"class.blink::NGGridTrackList"* %2, i32 %92, i32 %91) #13
  %94 = load i32, i32* %13, align 4
  %95 = load i32, i32* %80, align 8
  %96 = icmp eq i32 %94, %95
  br i1 %96, label %97, label %117, !prof !3

97:                                               ; preds = %84
  %98 = add i32 %94, 1
  %99 = lshr i32 %94, 2
  %100 = add i32 %98, %99
  %101 = icmp ugt i32 %100, 4
  %102 = select i1 %101, i32 %100, i32 4
  %103 = icmp ugt i32 %102, %98
  %104 = select i1 %103, i32 %102, i32 %98
  %105 = icmp ult i32 %94, %104
  br i1 %105, label %106, label %117, !prof !4

106:                                              ; preds = %97
  %107 = load %"class.blink::NGGridSet"*, %"class.blink::NGGridSet"** %81, align 8
  %108 = icmp eq %"class.blink::NGGridSet"* %107, null
  br i1 %108, label %109, label %116

109:                                              ; preds = %106
  %110 = zext i32 %104 to i64
  %111 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9NGGridSetEEEmm(i64 %110) #13
  %112 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %111, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9NGGridSetEEEPKcv, i64 0, i64 0)) #13
  %113 = ptrtoint i8* %112 to i64
  store atomic i64 %113, i64* %82 monotonic, align 8
  %114 = udiv i64 %111, 120
  %115 = trunc i64 %114 to i32
  store i32 %115, i32* %80, align 8
  br label %117

116:                                              ; preds = %106
  tail call void @_ZN3WTF6VectorIN5blink9NGGridSetELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.32"* %12, i32 %104) #13
  br label %117

117:                                              ; preds = %84, %97, %109, %116
  %118 = load %"class.blink::NGGridSet"*, %"class.blink::NGGridSet"** %81, align 8
  %119 = load i32, i32* %13, align 4
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %118, i64 %120
  tail call void @_ZN5blink9NGGridSetC2EjRKNS_13GridTrackSizeEb(%"class.blink::NGGridSet"* %121, i32 %88, %"class.blink::GridTrackSize"* dereferenceable(88) %93, i1 zeroext %3) #13
  %122 = load i32, i32* %13, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %13, align 4
  %124 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %93, i64 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 2
  br i1 %126, label %127, label %137

127:                                              ; preds = %117
  %128 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %93, i64 0, i32 4, i32 2
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %154

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %93, i64 0, i32 4, i32 0, i32 2
  %133 = load i8, i8* %132, align 1
  %134 = icmp eq i8 %133, 1
  %135 = icmp eq i8 %133, 8
  %136 = or i1 %134, %135
  br label %154

137:                                              ; preds = %117
  %138 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %93, i64 0, i32 2, i32 2
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %93, i64 0, i32 2, i32 0, i32 2
  %143 = load i8, i8* %142, align 1
  switch i8 %143, label %144 [
    i8 8, label %154
    i8 1, label %154
  ]

144:                                              ; preds = %141, %137
  %145 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %93, i64 0, i32 3, i32 2
  %146 = load i32, i32* %145, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %154

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %93, i64 0, i32 3, i32 0, i32 2
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 1
  %152 = icmp eq i8 %150, 8
  %153 = or i1 %151, %152
  br label %154

154:                                              ; preds = %127, %131, %141, %141, %144, %148
  %155 = phi i1 [ true, %141 ], [ false, %127 ], [ %136, %131 ], [ false, %144 ], [ %153, %148 ], [ true, %141 ]
  %156 = zext i1 %155 to i8
  %157 = load i8, i8* %83, align 8
  %158 = and i8 %157, 1
  %159 = or i8 %158, %156
  %160 = and i8 %157, -2
  %161 = or i8 %159, %160
  store i8 %161, i8* %83, align 8
  %162 = add nuw i32 %85, 1
  %163 = icmp ult i32 %162, %74
  br i1 %163, label %84, label %164

164:                                              ; preds = %154, %55
  %165 = phi i32 [ 1, %55 ], [ %74, %154 ]
  %166 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 3
  br label %168

167:                                              ; preds = %232
  br i1 %179, label %241, label %246

168:                                              ; preds = %164, %232
  %169 = phi i32 [ 0, %164 ], [ %239, %232 ]
  %170 = phi i1 [ false, %164 ], [ %185, %232 ]
  %171 = phi i1 [ false, %164 ], [ %182, %232 ]
  %172 = phi i1 [ false, %164 ], [ %179, %232 ]
  %173 = add i32 %16, %169
  %174 = tail call dereferenceable(120) %"class.blink::NGGridSet"* @_ZN3WTF6VectorIN5blink9NGGridSetELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.32"* %12, i32 %173) #13
  %175 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %174, i64 0, i32 2, i32 5
  %176 = load i16, i16* %175, align 8
  %177 = and i16 %176, 32
  %178 = icmp ne i16 %177, 0
  %179 = or i1 %172, %178
  %180 = and i16 %176, 192
  %181 = icmp ne i16 %180, 0
  %182 = or i1 %171, %181
  %183 = and i16 %176, 1
  %184 = icmp ne i16 %183, 0
  %185 = or i1 %170, %184
  %186 = and i16 %176, 12
  %187 = icmp eq i16 %186, 12
  br i1 %187, label %188, label %232

188:                                              ; preds = %168
  %189 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %174, i64 0, i32 2, i32 2, i32 0
  %190 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %174, i64 0, i32 2, i32 3, i32 0
  %191 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %174, i64 0, i32 2, i32 2, i32 0, i32 2
  %192 = load i8, i8* %191, align 1
  %193 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %174, i64 0, i32 2, i32 3, i32 0, i32 2
  %194 = load i8, i8* %193, align 1
  %195 = icmp eq i8 %192, %194
  br i1 %195, label %196, label %232

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %174, i64 0, i32 2, i32 2, i32 0, i32 1
  %198 = load i8, i8* %197, align 4, !range !2
  %199 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %174, i64 0, i32 2, i32 3, i32 0, i32 1
  %200 = load i8, i8* %199, align 4, !range !2
  %201 = icmp eq i8 %198, %200
  br i1 %201, label %202, label %232

202:                                              ; preds = %196
  %203 = icmp eq i8 %192, 12
  br i1 %203, label %232, label %204

204:                                              ; preds = %202
  %205 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %174, i64 0, i32 2, i32 2, i32 0, i32 3
  %206 = load i8, i8* %205, align 2, !range !2
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %211, label %208

208:                                              ; preds = %204
  %209 = bitcast %"class.blink::Length"* %189 to float*
  %210 = load float, float* %209, align 4
  br label %215

211:                                              ; preds = %204
  %212 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %189, i64 0, i32 0, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = sitofp i32 %213 to float
  br label %215

215:                                              ; preds = %211, %208
  %216 = phi float [ %210, %208 ], [ %214, %211 ]
  %217 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %174, i64 0, i32 2, i32 3, i32 0, i32 3
  %218 = load i8, i8* %217, align 2, !range !2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %223, label %220

220:                                              ; preds = %215
  %221 = bitcast %"class.blink::Length"* %190 to float*
  %222 = load float, float* %221, align 4
  br label %227

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %190, i64 0, i32 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = sitofp i32 %225 to float
  br label %227

227:                                              ; preds = %223, %220
  %228 = phi float [ %222, %220 ], [ %226, %223 ]
  %229 = fcmp oeq float %216, %228
  br i1 %229, label %232, label %230

230:                                              ; preds = %227
  %231 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %189, %"class.blink::Length"* dereferenceable(8) %190) #13
  br label %232

232:                                              ; preds = %230, %227, %202, %196, %188, %168
  %233 = phi i1 [ false, %168 ], [ false, %196 ], [ false, %188 ], [ true, %227 ], [ true, %202 ], [ %231, %230 ]
  %234 = zext i1 %233 to i8
  %235 = load i8, i8* %166, align 8
  %236 = shl nuw nsw i8 %234, 2
  %237 = or i8 %236, -5
  %238 = and i8 %237, %235
  store i8 %238, i8* %166, align 8
  %239 = add nuw i32 %169, 1
  %240 = icmp ult i32 %239, %165
  br i1 %240, label %168, label %167

241:                                              ; preds = %167
  %242 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 3
  %243 = load i8, i8* %242, align 8
  %244 = or i8 %243, 3
  store i8 %244, i8* %242, align 8
  %245 = or i8 %22, 2
  store i8 %245, i8* %11, align 4
  br i1 %182, label %247, label %250

246:                                              ; preds = %167
  br i1 %182, label %247, label %250

247:                                              ; preds = %241, %246
  %248 = phi i8 [ %245, %241 ], [ %22, %246 ]
  %249 = or i8 %248, 1
  store i8 %249, i8* %11, align 4
  br i1 %185, label %252, label %255

250:                                              ; preds = %241, %246
  %251 = phi i8 [ %22, %246 ], [ %245, %241 ]
  br i1 %185, label %252, label %255

252:                                              ; preds = %247, %250
  %253 = phi i8 [ %249, %247 ], [ %251, %250 ]
  %254 = or i8 %253, 4
  store i8 %254, i8* %11, align 4
  br label %255

255:                                              ; preds = %67, %66, %247, %252, %250
  %256 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4
  %257 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %258 = load i32, i32* %257, align 4
  %259 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %260 = load i32, i32* %259, align 8
  %261 = icmp eq i32 %258, %260
  br i1 %261, label %270, label %262, !prof !3

262:                                              ; preds = %255
  %263 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %256, i64 0, i32 0, i32 0, i32 0
  %264 = load %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %263, align 8
  %265 = zext i32 %258 to i64
  %266 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %264, i64 %265
  %267 = bitcast %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %267, i8* nonnull align 4 %6, i64 20, i1 false) #13
  %268 = load i32, i32* %257, align 4
  %269 = add i32 %268, 1
  store i32 %269, i32* %257, align 4
  br label %271

270:                                              ; preds = %255
  call void @_ZN3WTF6VectorIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.27"* %256, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* nonnull dereferenceable(20) %5) #13
  br label %271

271:                                              ; preds = %262, %270
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink36NGGridLayoutAlgorithmTrackCollectionC2ERKN3WTF6VectorINS0_5RangeELj0ENS1_18PartitionAllocatorEEENS_24GridTrackSizingDirectionE(%"class.blink::NGGridLayoutAlgorithmTrackCollection"* nocapture, %"class.WTF::Vector.27"* nocapture readonly dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink36NGGridLayoutAlgorithmTrackCollectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 2
  store i32 %2, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %6, i64 0, i32 0, i32 0, i32 0
  store %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* null, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store i32 0, i32* %10, align 8
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %3
  %13 = zext i32 %8 to i64
  %14 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeEEEmm(i64 %13) #13
  %15 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %14, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeEEEPKcv, i64 0, i64 0)) #13
  %16 = ptrtoint i8* %15 to i64
  %17 = bitcast %"class.WTF::Vector.27"* %6 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = udiv i64 %14, 20
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %10, align 8
  %20 = icmp ne i8* %15, null
  br label %21

21:                                               ; preds = %12, %3
  %22 = phi i8* [ null, %3 ], [ %15, %12 ]
  %23 = phi i1 [ false, %3 ], [ %20, %12 ]
  %24 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %1, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %1, i64 0, i32 0, i32 0, i32 0
  %28 = load %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %27, align 8
  %29 = icmp ne %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %28, null
  %30 = and i1 %23, %29
  br i1 %30, label %31, label %36, !prof !4

31:                                               ; preds = %21
  %32 = load i32, i32* %24, align 4
  %33 = zext i32 %32 to i64
  %34 = bitcast %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %28 to i8*
  %35 = mul nuw nsw i64 %33, 20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* nonnull align 4 %34, i64 %35, i1 false) #13
  br label %36

36:                                               ; preds = %21, %31
  %37 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 5
  %38 = bitcast %"class.WTF::Vector.32"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #13
  ret void
}

declare dereferenceable(88) %"class.blink::GridTrackSize"* @_ZNK5blink15NGGridTrackList15RepeatTrackSizeEjj(%"class.blink::NGGridTrackList"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection21EndLineOfImplicitGridEv(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0 to i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)***
  %7 = load i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)**, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)*, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)** %7, i64 3
  %9 = load i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)*, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0) #13
  %11 = add i32 %10, -1
  %12 = bitcast %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0 to i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)***
  %13 = load i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)**, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)*** %12, align 8
  %14 = load i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)*, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)** %13, align 8
  %15 = tail call i32 %14(%"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i32 %11) #13
  %16 = load i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)**, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)*** %12, align 8
  %17 = getelementptr inbounds i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)*, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)** %16, i64 1
  %18 = load i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)*, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)** %17, align 8
  %19 = tail call i32 %18(%"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i32 %11) #13
  %20 = add i32 %19, %15
  br label %21

21:                                               ; preds = %1, %5
  %22 = phi i32 [ %20, %5 ], [ 0, %1 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection28IsGridLineWithinImplicitGridEj(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0 to i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)***
  %8 = load i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)**, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)*, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)** %8, i64 3
  %10 = load i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)*, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*)** %9, align 8
  %11 = tail call i32 %10(%"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0) #13
  %12 = add i32 %11, -1
  %13 = bitcast %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0 to i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)***
  %14 = load i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)**, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)*** %13, align 8
  %15 = load i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)*, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i32 %12) #13
  %17 = load i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)**, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)*** %13, align 8
  %18 = getelementptr inbounds i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)*, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)** %17, i64 1
  %19 = load i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)*, i32 (%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32)** %18, align 8
  %20 = tail call i32 %19(%"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i32 %12) #13
  %21 = add i32 %20, %16
  br label %22

22:                                               ; preds = %2, %6
  %23 = phi i32 [ %21, %6 ], [ 0, %2 ]
  %24 = icmp uge i32 %23, %1
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"class.blink::NGGridSet"* @_ZN5blink36NGGridLayoutAlgorithmTrackCollection5SetAtEj(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 5
  %4 = tail call dereferenceable(120) %"class.blink::NGGridSet"* @_ZN3WTF6VectorIN5blink9NGGridSetELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.32"* %3, i32 %1) #13
  ret %"class.blink::NGGridSet"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"class.blink::NGGridSet"* @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection5SetAtEj(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 5
  %4 = tail call dereferenceable(120) %"class.blink::NGGridSet"* @_ZNK3WTF6VectorIN5blink9NGGridSetELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.32"* %3, i32 %1) #13
  ret %"class.blink::NGGridSet"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } @_ZN5blink36NGGridLayoutAlgorithmTrackCollection14GetSetIteratorEv(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = insertvalue { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } undef, %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, 0
  %5 = zext i32 %3 to i64
  %6 = shl nuw i64 %5, 32
  %7 = insertvalue { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } %4, i64 %6, 1
  ret { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection8SetCountEv(%"class.blink::NGGridLayoutAlgorithmTrackCollection"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection14GetSetIteratorEv(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = insertvalue { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } undef, %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, 0
  %5 = zext i32 %3 to i64
  %6 = shl nuw i64 %5, 32
  %7 = insertvalue { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } %4, i64 %6, 1
  ret { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } @_ZN5blink36NGGridLayoutAlgorithmTrackCollection14GetSetIteratorEjj(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32, i32) local_unnamed_addr #8 align 2 {
  %4 = insertvalue { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } undef, %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, 0
  %5 = zext i32 %2 to i64
  %6 = shl nuw i64 %5, 32
  %7 = zext i32 %1 to i64
  %8 = or i64 %6, %7
  %9 = insertvalue { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } %4, i64 %8, 1
  ret { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection14GetSetIteratorEjj(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32, i32) local_unnamed_addr #8 align 2 {
  %4 = insertvalue { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } undef, %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, 0
  %5 = zext i32 %2 to i64
  %6 = shl nuw i64 %5, 32
  %7 = zext i32 %1 to i64
  %8 = or i64 %6, %7
  %9 = insertvalue { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } %4, i64 %8, 1
  ret { %"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i64 } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection13RangeSetCountEj(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4
  %4 = tail call dereferenceable(20) %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* @_ZNK3WTF6VectorIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.27"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection21RangeStartingSetIndexEj(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4
  %4 = tail call dereferenceable(20) %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* @_ZNK3WTF6VectorIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.27"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection25RangeHasTrackSpanPropertyEjNS_19TrackSpanProperties10PropertyIdE(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4
  %5 = tail call dereferenceable(20) %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* @_ZNK3WTF6VectorIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.27"* %4, i32 %1) #13
  %6 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %5, i64 0, i32 4, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = and i32 %8, %2
  %10 = icmp ne i32 %9, 0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection16RangeTrackNumberEj(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4
  %4 = tail call dereferenceable(20) %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* @_ZNK3WTF6VectorIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.27"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection15RangeTrackCountEj(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4
  %4 = tail call dereferenceable(20) %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* @_ZNK3WTF6VectorIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.27"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection16IsRangeCollapsedEj(%"class.blink::NGGridLayoutAlgorithmTrackCollection"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4
  %4 = tail call dereferenceable(20) %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* @_ZNK3WTF6VectorIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.27"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %4, i64 0, i32 4, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, 8
  %8 = icmp ne i8 %7, 0
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink36NGGridLayoutAlgorithmTrackCollection10RangeCountEv(%"class.blink::NGGridLayoutAlgorithmTrackCollection"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGGridLayoutAlgorithmTrackCollection", %"class.blink::NGGridLayoutAlgorithmTrackCollection"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13GridTrackSize28CacheMinMaxTrackBreadthTypesEv(%"class.blink::GridTrackSize"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 5
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, -2
  store i16 %8, i16* %6, align 8
  br label %19

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 5
  %14 = zext i1 %12 to i16
  %15 = load i16, i16* %13, align 8
  %16 = and i16 %15, -2
  %17 = or i16 %16, %14
  store i16 %17, i16* %13, align 8
  switch i8 %11, label %18 [
    i8 2, label %19
    i8 1, label %19
    i8 8, label %19
  ]

18:                                               ; preds = %9
  br label %19

19:                                               ; preds = %18, %9, %9, %9, %5
  %20 = phi i16 [ %8, %5 ], [ %17, %9 ], [ %17, %9 ], [ %17, %9 ], [ %17, %18 ]
  %21 = phi i16* [ %6, %5 ], [ %13, %9 ], [ %13, %9 ], [ %13, %9 ], [ %13, %18 ]
  %22 = phi i16 [ 0, %5 ], [ 4, %9 ], [ 4, %9 ], [ 4, %9 ], [ 0, %18 ]
  %23 = and i16 %20, -21
  %24 = icmp eq i32 %3, 1
  %25 = zext i1 %24 to i16
  %26 = shl nuw nsw i16 %25, 4
  %27 = or i16 %23, %26
  %28 = or i16 %27, %22
  store i16 %28, i16* %21, align 8
  br i1 %4, label %31, label %29

29:                                               ; preds = %19
  %30 = and i16 %28, -257
  store i16 %30, i16* %21, align 8
  br label %42

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 4
  %35 = zext i1 %34 to i16
  %36 = shl nuw nsw i16 %35, 8
  %37 = and i16 %28, -257
  %38 = or i16 %36, %37
  store i16 %38, i16* %21, align 8
  %39 = icmp eq i8 %33, 3
  %40 = zext i1 %39 to i16
  %41 = shl nuw nsw i16 %40, 10
  br label %42

42:                                               ; preds = %29, %31
  %43 = phi i16 [ %30, %29 ], [ %38, %31 ]
  %44 = phi i16 [ 0, %29 ], [ %41, %31 ]
  %45 = and i16 %43, -1025
  %46 = or i16 %45, %44
  store i16 %46, i16* %21, align 8
  %47 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %42
  %51 = and i16 %46, -3
  store i16 %51, i16* %21, align 8
  br label %61

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 0, i32 2
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  %56 = zext i1 %55 to i16
  %57 = shl nuw nsw i16 %56, 1
  %58 = and i16 %46, -3
  %59 = or i16 %57, %58
  store i16 %59, i16* %21, align 8
  switch i8 %54, label %60 [
    i8 2, label %61
    i8 1, label %61
    i8 8, label %61
  ]

60:                                               ; preds = %52
  br label %61

61:                                               ; preds = %60, %52, %52, %52, %50
  %62 = phi i16 [ %51, %50 ], [ %59, %52 ], [ %59, %52 ], [ %59, %52 ], [ %59, %60 ]
  %63 = phi i16 [ 0, %50 ], [ 8, %52 ], [ 8, %52 ], [ 8, %52 ], [ 0, %60 ]
  %64 = and i16 %62, -41
  %65 = icmp eq i32 %48, 1
  %66 = zext i1 %65 to i16
  %67 = shl nuw nsw i16 %66, 5
  %68 = or i16 %63, %67
  %69 = or i16 %68, %64
  store i16 %69, i16* %21, align 8
  br i1 %49, label %72, label %70

70:                                               ; preds = %61
  %71 = and i16 %69, -513
  store i16 %71, i16* %21, align 8
  br label %83

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 3, i32 0, i32 2
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 4
  %76 = zext i1 %75 to i16
  %77 = shl nuw nsw i16 %76, 9
  %78 = and i16 %69, -513
  %79 = or i16 %77, %78
  store i16 %79, i16* %21, align 8
  %80 = icmp eq i8 %74, 3
  %81 = zext i1 %80 to i16
  %82 = shl nuw nsw i16 %81, 11
  br label %83

83:                                               ; preds = %70, %72
  %84 = phi i16 [ %71, %70 ], [ %79, %72 ]
  %85 = phi i16 [ 0, %70 ], [ %82, %72 ]
  %86 = and i16 %84, -2049
  %87 = or i16 %86, %85
  store i16 %87, i16* %21, align 8
  %88 = and i16 %84, 1281
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 2
  %94 = zext i1 %93 to i16
  %95 = shl nuw nsw i16 %94, 6
  br label %96

96:                                               ; preds = %83, %90
  %97 = phi i16 [ 64, %83 ], [ %95, %90 ]
  %98 = and i16 %87, -65
  %99 = or i16 %97, %98
  store i16 %99, i16* %21, align 8
  %100 = and i16 %99, 2560
  %101 = and i16 %84, 2
  %102 = or i16 %100, %101
  %103 = icmp eq i16 %102, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %0, i64 0, i32 0
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 2
  %108 = zext i1 %107 to i16
  %109 = shl nuw nsw i16 %108, 7
  br label %110

110:                                              ; preds = %96, %104
  %111 = phi i16 [ 128, %96 ], [ %109, %104 ]
  %112 = and i16 %99, -129
  %113 = or i16 %111, %112
  store i16 %113, i16* %21, align 8
  ret void
}

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.17"*, i32* dereferenceable(4)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPj(%"class.WTF::Vector.17"* %0, i32 %5, i32* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPj(%"class.WTF::Vector.17"*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp ugt i32* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %5, i64 %10
  %12 = icmp ugt i32* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq i32* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 2
  %36 = ptrtoint i8* %28 to i64
  %37 = load i32*, i32** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne i32* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast i32* %37 to i8*
  br i1 %40, label %42, label %49, !prof !4

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %41, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint i32* %2 to i64
  %55 = ptrtoint i32* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !4

68:                                               ; preds = %53
  %69 = icmp eq i32* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %70) #13
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #13
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load i32*, i32** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne i32* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast i32* %77 to i8*
  br i1 %80, label %82, label %88, !prof !4

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* nonnull align 4 %81, i64 %85, i1 false) #13
  %86 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #13
  %90 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 2
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to i32*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi i32* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds i32, i32* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi i32* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret i32* %99
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKjEEvOT_(%"class.WTF::Vector.17"*, i32* dereferenceable(4)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPj(%"class.WTF::Vector.17"* %0, i32 %5, i32* %1) #13
  %7 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.17"*, i32* dereferenceable(4)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPj(%"class.WTF::Vector.17"* %0, i32 %5, i32* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

declare void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32*, i32*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink26NGGridBlockTrackCollection5RangeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 107269324
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 107269324) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 20
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(20) %"struct.blink::NGGridBlockTrackCollection::Range"* @_ZNK3WTF6VectorIN5blink26NGGridBlockTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.22"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGGridBlockTrackCollection::Range"*, %"struct.blink::NGGridBlockTrackCollection::Range"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGGridBlockTrackCollection::Range", %"struct.blink::NGGridBlockTrackCollection::Range"* %24, i64 %25
  ret %"struct.blink::NGGridBlockTrackCollection::Range"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.17"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 107269324
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 107269324) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 20
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9NGGridSetELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.32"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %14

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::NGGridSet"*, %"class.blink::NGGridSet"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.32"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink9NGGridSetENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NGGridSet"* %6, %"class.blink::NGGridSet"* %10, %"class.blink::NGGridSet"* null, i1 zeroext true) #13
  %13 = bitcast %"class.blink::NGGridSet"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %13) #13
  br label %32

14:                                               ; preds = %2
  %15 = zext i32 %1 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9NGGridSetEEEmm(i64 %15) #13
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9NGGridSetEEEPKcv, i64 0, i64 0)) #13
  %18 = udiv i64 %16, 120
  %19 = bitcast i8* %17 to %"class.blink::NGGridSet"*
  %20 = ptrtoint i8* %17 to i64
  %21 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::NGGridSet"*, %"class.blink::NGGridSet"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %22, i64 %25
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink9NGGridSetENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NGGridSet"* %22, %"class.blink::NGGridSet"* %26, %"class.blink::NGGridSet"* %19, i1 zeroext false) #13
  %27 = bitcast %"class.WTF::Vector.32"* %0 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #13
  %29 = bitcast %"class.WTF::Vector.32"* %0 to i64*
  store atomic i64 %20, i64* %29 monotonic, align 8
  %30 = trunc i64 %18 to i32
  %31 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %30, i32* %31, align 8
  br label %32

32:                                               ; preds = %14, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9NGGridSetEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 17878220
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 17878220) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 120
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink9NGGridSetENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NGGridSet"*, %"class.blink::NGGridSet"*, %"class.blink::NGGridSet"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::NGGridSet"* %0, %1
  br i1 %5, label %85, label %6

6:                                                ; preds = %4, %81
  %7 = phi %"class.blink::NGGridSet"* [ %83, %81 ], [ %0, %4 ]
  %8 = phi %"class.blink::NGGridSet"* [ %82, %81 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %8, i64 0, i32 2, i32 0
  %13 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 2, i32 0
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %12, align 8
  %15 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %8, i64 0, i32 2, i32 2
  %16 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 2, i32 2
  %17 = bitcast %"class.blink::GridLength"* %16 to i64*
  %18 = bitcast %"class.blink::GridLength"* %15 to i64*
  %19 = load i64, i64* %17, align 4
  store i64 %19, i64* %18, align 4
  %20 = and i64 %19, 280375465082880
  %21 = icmp eq i64 %20, 8796093022208
  br i1 %21, label %22, label %24

22:                                               ; preds = %6
  %23 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %15, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %23) #13
  br label %24

24:                                               ; preds = %22, %6
  %25 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %8, i64 0, i32 2, i32 2, i32 1
  %26 = bitcast double* %25 to i8*
  %27 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 2, i32 2, i32 1
  %28 = bitcast double* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %28, i64 12, i1 false) #13
  %29 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %8, i64 0, i32 2, i32 3
  %30 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 2, i32 3
  %31 = bitcast %"class.blink::GridLength"* %30 to i64*
  %32 = bitcast %"class.blink::GridLength"* %29 to i64*
  %33 = load i64, i64* %31, align 4
  store i64 %33, i64* %32, align 4
  %34 = and i64 %33, 280375465082880
  %35 = icmp eq i64 %34, 8796093022208
  br i1 %35, label %36, label %38

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %29, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %37) #13
  br label %38

38:                                               ; preds = %36, %24
  %39 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %8, i64 0, i32 2, i32 3, i32 1
  %40 = bitcast double* %39 to i8*
  %41 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 2, i32 3, i32 1
  %42 = bitcast double* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %42, i64 12, i1 false) #13
  %43 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %8, i64 0, i32 2, i32 4
  %44 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 2, i32 4
  %45 = bitcast %"class.blink::GridLength"* %44 to i64*
  %46 = bitcast %"class.blink::GridLength"* %43 to i64*
  %47 = load i64, i64* %45, align 4
  store i64 %47, i64* %46, align 4
  %48 = and i64 %47, 280375465082880
  %49 = icmp eq i64 %48, 8796093022208
  br i1 %49, label %50, label %52

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.blink::GridLength", %"class.blink::GridLength"* %43, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %51) #13
  br label %52

52:                                               ; preds = %38, %50
  %53 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %8, i64 0, i32 2, i32 4, i32 1
  %54 = bitcast double* %53 to i8*
  %55 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 2, i32 4, i32 1
  %56 = bitcast double* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %56, i64 12, i1 false) #13
  %57 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %8, i64 0, i32 2, i32 5
  %58 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 2, i32 5
  %59 = load i16, i16* %58, align 8
  store i16 %59, i16* %57, align 8
  %60 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %8, i64 0, i32 3
  %61 = bitcast %"class.blink::LayoutUnit"* %60 to i8*
  %62 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 3
  %63 = bitcast %"class.blink::LayoutUnit"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %63, i64 21, i1 false) #13
  %64 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 2, i32 4, i32 0, i32 2
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 8
  br i1 %66, label %67, label %69

67:                                               ; preds = %52
  %68 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 2, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %68) #13
  br label %69

69:                                               ; preds = %67, %52
  %70 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 2, i32 3, i32 0, i32 2
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, 8
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 2, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %74) #13
  br label %75

75:                                               ; preds = %73, %69
  %76 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 2, i32 2, i32 0, i32 2
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 8
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 0, i32 2, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %80) #13
  br label %81

81:                                               ; preds = %75, %79
  %82 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %8, i64 1
  %83 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %7, i64 1
  %84 = icmp eq %"class.blink::NGGridSet"* %83, %1
  br i1 %84, label %85, label %6

85:                                               ; preds = %81, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(120) %"class.blink::NGGridSet"* @_ZN3WTF6VectorIN5blink9NGGridSetELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.32"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NGGridSet"*, %"class.blink::NGGridSet"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %24, i64 %25
  ret %"class.blink::NGGridSet"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.27"*, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* dereferenceable(20)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %6, align 8
  %8 = icmp ugt %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.27"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 20
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 20
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.27"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.27"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %1 to i64
  %56 = ptrtoint %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 20
  %59 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.27"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.27"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.27"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 20
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %100, i64 %103
  %105 = bitcast %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %104 to i8*
  %106 = bitcast %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 20, i1 false) #13
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(120) %"class.blink::NGGridSet"* @_ZNK3WTF6VectorIN5blink9NGGridSetELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.32"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NGGridSet"*, %"class.blink::NGGridSet"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NGGridSet", %"class.blink::NGGridSet"* %24, i64 %25
  ret %"class.blink::NGGridSet"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(20) %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* @_ZNK3WTF6VectorIN5blink36NGGridLayoutAlgorithmTrackCollection5RangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.27"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range", %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %24, i64 %25
  ret %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink6Length4AutoEv: argument 0"}
!7 = distinct !{!7, !"_ZN5blink6Length4AutoEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink6Length4AutoEv: argument 0"}
!10 = distinct !{!10, !"_ZN5blink6Length4AutoEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink6Length4AutoEv: argument 0"}
!13 = distinct !{!13, !"_ZN5blink6Length4AutoEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink6Length10MaxContentEv: argument 0"}
!16 = distinct !{!16, !"_ZN5blink6Length10MaxContentEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink6Length4AutoEv: argument 0"}
!19 = distinct !{!19, !"_ZN5blink6Length4AutoEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink6Length4AutoEv: argument 0"}
!22 = distinct !{!22, !"_ZN5blink6Length4AutoEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink25NGGridTrackCollectionBase13RangeIteratorEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink25NGGridTrackCollectionBase13RangeIteratorEv"}
