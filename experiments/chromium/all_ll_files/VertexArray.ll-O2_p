; ModuleID = '../../third_party/angle/src/libANGLE/VertexArray.cpp'
source_filename = "../../third_party/angle/src/libANGLE/VertexArray.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.angle::PackedEnumMap.643" = type { %"struct.std::__1::array.644" }
%"struct.std::__1::array.644" = type { [4 x i32] }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.rx::Serial" = type { i64 }
%"struct.gl::BufferID" = type { i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type { %"class.angle::Subject", %"class.gl::BufferState"* }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::BitSetT.166" = type { i64 }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type { i32 (...)**, %"class.gl::VertexArrayState"* }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.626" }
%"struct.std::__1::pair.626" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.628" }
%"struct.std::__1::pair.628" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.630" }
%"struct.std::__1::pair.630" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.632" }
%"struct.std::__1::pair.632" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.634" }
%"struct.std::__1::pair.634" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.636" }
%"struct.std::__1::pair.636" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type opaque
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type opaque
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.622, %"class.std::__1::vector.337", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.623", %"class.angle::BitSetT.147", %struct.Optional.624 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.615", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.147", %"class.std::__1::vector", i32, %"class.angle::BitSetT.147", %"class.angle::BitSetT.148", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.536", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional.622 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.623" = type { i64 }
%struct.Optional.624 = type { i8, %"class.angle::BitSetT.623" }
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.201" = type { i64 }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%struct.Optional.225 = type { i8, i8 }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"class.angle::BitSetT.147" = type { i8 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type opaque
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"struct.egl::Config" = type opaque
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Display" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%"class.angle::BitSetT.168" = type { i64 }
%"class.angle::BitSetT.536" = type { i64 }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }

$_ZN2gl21SubjectBindingPointerINS_6BufferEED2Ev = comdat any

$_ZN2gl13LabeledObjectD2Ev = comdat any

$_ZN2gl13LabeledObjectD0Ev = comdat any

$_ZN2gl21SubjectBindingPointerINS_6BufferEED0Ev = comdat any

$_ZThn16_N2gl21SubjectBindingPointerINS_6BufferEED1Ev = comdat any

$_ZThn16_N2gl21SubjectBindingPointerINS_6BufferEED0Ev = comdat any

$_ZN5angle19ObserverBindingBase14onSubjectResetEv = comdat any

$_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev = comdat any

$_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED0Ev = comdat any

$_ZNSt3__16vectorIN2gl13VertexBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJjEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl11VertexArrayERmEEEvDpOT_ = comdat any

$_ZTVN2gl13LabeledObjectE = comdat any

$_ZTVN2gl21SubjectBindingPointerINS_6BufferEEE = comdat any

$_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE = comdat any

@_ZTVN2gl11VertexArrayE = hidden unnamed_addr constant { [7 x i8*], [6 x i8*], [4 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::VertexArray"*)* @_ZN2gl11VertexArrayD2Ev to i8*), i8* bitcast (void (%"class.gl::VertexArray"*)* @_ZN2gl11VertexArrayD0Ev to i8*), i8* bitcast (void (%"class.gl::VertexArray"*, i64, i32)* @_ZN2gl11VertexArray20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*), i8* bitcast (void (%"class.gl::VertexArray"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)* @_ZN2gl11VertexArray8setLabelEPKNS_7ContextERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.gl::VertexArray"*)* @_ZNK2gl11VertexArray8getLabelEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.gl::VertexArray"*)* @_ZThn8_N2gl11VertexArrayD1Ev to i8*), i8* bitcast (void (%"class.gl::VertexArray"*)* @_ZThn8_N2gl11VertexArrayD0Ev to i8*), i8* bitcast (void (%"class.gl::VertexArray"*, %"class.gl::Context"*, %"class.std::__1::basic_string"*)* @_ZThn8_N2gl11VertexArray8setLabelEPKNS_7ContextERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.gl::VertexArray"*)* @_ZThn8_NK2gl11VertexArray8getLabelEv to i8*)], [4 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.gl::VertexArray"*)* @_ZThn16_N2gl11VertexArrayD1Ev to i8*), i8* bitcast (void (%"class.gl::VertexArray"*)* @_ZThn16_N2gl11VertexArrayD0Ev to i8*)] }, align 8
@_ZTVN5angle17ObserverInterfaceE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN2gl13LabeledObjectE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::LabeledObject"*)* @_ZN2gl13LabeledObjectD2Ev to i8*), i8* bitcast (void (%"class.gl::LabeledObject"*)* @_ZN2gl13LabeledObjectD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZN2glL15kComponentMasksE = internal unnamed_addr constant %"class.angle::PackedEnumMap.643" { %"struct.std::__1::array.644" { [4 x i32] [i32 65537, i32 1, i32 65536, i32 0] } }, align 4
@_ZN5angle16gFormatInfoTableE = external global [0 x %"struct.angle::Format"], align 8
@_ZTVN2gl21SubjectBindingPointerINS_6BufferEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*], [5 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::SubjectBindingPointer"*)* @_ZN2gl21SubjectBindingPointerINS_6BufferEED2Ev to i8*), i8* bitcast (void (%"class.gl::SubjectBindingPointer"*)* @_ZN2gl21SubjectBindingPointerINS_6BufferEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.gl::SubjectBindingPointer"*)* @_ZThn16_N2gl21SubjectBindingPointerINS_6BufferEED1Ev to i8*), i8* bitcast (void (%"class.gl::SubjectBindingPointer"*)* @_ZThn16_N2gl21SubjectBindingPointerINS_6BufferEED0Ev to i8*), i8* bitcast (void (%"class.angle::ObserverBindingBase"*)* @_ZN5angle19ObserverBindingBase14onSubjectResetEv to i8*)] }, comdat, align 8
@_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::BindingPointer.265"*)* @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.angle::BindingPointer.265"*)* @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED0Ev to i8*)] }, comdat, align 8
@switch.table._ZN2gl11VertexArray23setVertexAttribIPointerEPKNS_7ContextEmPNS_6BufferEiNS_16VertexAttribTypeEiPKv = private unnamed_addr constant [6 x i64] [i64 1, i64 2, i64 1, i64 2, i64 1, i64 2], align 8

@_ZN2gl16VertexArrayStateC1EPNS_11VertexArrayEmm = hidden unnamed_addr alias void (%"class.gl::VertexArrayState"*, %"class.gl::VertexArray"*, i64, i64), void (%"class.gl::VertexArrayState"*, %"class.gl::VertexArray"*, i64, i64)* @_ZN2gl16VertexArrayStateC2EPNS_11VertexArrayEmm
@_ZN2gl16VertexArrayStateD1Ev = hidden unnamed_addr alias void (%"class.gl::VertexArrayState"*), void (%"class.gl::VertexArrayState"*)* @_ZN2gl16VertexArrayStateD2Ev
@_ZN2gl11VertexArrayC1EPN2rx13GLImplFactoryENS_13VertexArrayIDEmm = hidden unnamed_addr alias void (%"class.gl::VertexArray"*, %"class.rx::GLImplFactory"*, i32, i64, i64), void (%"class.gl::VertexArray"*, %"class.rx::GLImplFactory"*, i32, i64, i64)* @_ZN2gl11VertexArrayC2EPN2rx13GLImplFactoryENS_13VertexArrayIDEmm
@_ZN2gl11VertexArrayD1Ev = hidden unnamed_addr alias void (%"class.gl::VertexArray"*), void (%"class.gl::VertexArray"*)* @_ZN2gl11VertexArrayD2Ev
@_ZN2gl11VertexArray15IndexRangeCacheC1Ev = hidden unnamed_addr alias void (%"class.gl::VertexArray::IndexRangeCache"*), void (%"class.gl::VertexArray::IndexRangeCache"*)* @_ZN2gl11VertexArray15IndexRangeCacheC2Ev

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16VertexArrayStateC2EPNS_11VertexArrayEmm(%"class.gl::VertexArrayState"*, %"class.gl::VertexArray"*, i64, i64) unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %9, align 8
  %10 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 2, i32 1, i32 0
  %11 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 2, i32 1, i32 1
  %12 = bitcast %"class.gl::VertexArrayState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 48, i1 false)
  store %"class.angle::ObserverInterface"* %7, %"class.angle::ObserverInterface"** %11, align 8
  %13 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 2, i32 1, i32 2
  store i64 16, i64* %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*], [5 x i8*] }, { [4 x i8*], [5 x i8*] }* @_ZTVN2gl21SubjectBindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*], [5 x i8*] }, { [4 x i8*], [5 x i8*] }* @_ZTVN2gl21SubjectBindingPointerINS_6BufferEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %14 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 6, i32 0
  %16 = icmp eq i64 %2, 0
  %17 = bitcast %"class.std::__1::vector.393"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 80, i1 false)
  br i1 %16, label %29, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"struct.gl::VertexAttribute"** %19 to i64*
  %22 = bitcast %"class.std::__1::vector.386"* %6 to i64*
  %23 = bitcast %"struct.gl::VertexAttribute"** %20 to i64*
  %24 = getelementptr inbounds %"class.std::__1::vector.386", %"class.std::__1::vector.386"* %6, i64 0, i32 0, i32 0
  %25 = bitcast i32* %5 to i8*
  %26 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 3, i32 0, i32 1
  %27 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %"class.gl::VertexBinding"** %26 to i64*
  br label %30

29:                                               ; preds = %97, %4
  store i64 65535, i64* %15, align 8
  ret void

30:                                               ; preds = %100, %18
  %31 = phi i64 [ 0, %18 ], [ %104, %100 ]
  %32 = phi i64 [ 0, %18 ], [ %103, %100 ]
  %33 = phi %"struct.gl::VertexAttribute"* [ null, %18 ], [ %102, %100 ]
  %34 = phi %"struct.gl::VertexAttribute"* [ null, %18 ], [ %101, %100 ]
  %35 = phi i64 [ 0, %18 ], [ %98, %100 ]
  %36 = trunc i64 %35 to i32
  %37 = icmp ult %"struct.gl::VertexAttribute"* %34, %33
  br i1 %37, label %38, label %41

38:                                               ; preds = %30
  call void @_ZN2gl15VertexAttributeC1Ej(%"struct.gl::VertexAttribute"* %34, i32 %36) #16
  %39 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %34, i64 1
  %40 = ptrtoint %"struct.gl::VertexAttribute"* %39 to i64
  store i64 %40, i64* %21, align 8
  br label %89

41:                                               ; preds = %30
  %42 = load i64, i64* %22, align 8
  %43 = sub i64 %32, %42
  %44 = sdiv exact i64 %43, 48
  %45 = add nsw i64 %44, 1
  %46 = icmp ugt i64 %45, 384307168202282325
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = bitcast %"class.std::__1::vector.386"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #17
  unreachable

49:                                               ; preds = %41
  %50 = sub i64 %31, %42
  %51 = sdiv exact i64 %50, 48
  %52 = icmp ult i64 %51, 192153584101141162
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = shl nsw i64 %51, 1
  %55 = icmp ult i64 %54, %45
  %56 = select i1 %55, i64 %45, i64 %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %53, %49
  %59 = phi i64 [ %56, %53 ], [ 384307168202282325, %49 ]
  %60 = mul i64 %59, 48
  %61 = call i8* @_Znwm(i64 %60) #18
  %62 = bitcast i8* %61 to %"struct.gl::VertexAttribute"*
  br label %63

63:                                               ; preds = %58, %53
  %64 = phi i64 [ %59, %58 ], [ 0, %53 ]
  %65 = phi %"struct.gl::VertexAttribute"* [ %62, %58 ], [ null, %53 ]
  %66 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %65, i64 %44
  %67 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %65, i64 %64
  %68 = ptrtoint %"struct.gl::VertexAttribute"* %67 to i64
  call void @_ZN2gl15VertexAttributeC1Ej(%"struct.gl::VertexAttribute"* %66, i32 %36) #16
  %69 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %66, i64 1
  %70 = ptrtoint %"struct.gl::VertexAttribute"* %69 to i64
  %71 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %24, align 8
  %72 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %19, align 8
  %73 = icmp eq %"struct.gl::VertexAttribute"* %72, %71
  br i1 %73, label %82, label %74

74:                                               ; preds = %63, %74
  %75 = phi %"struct.gl::VertexAttribute"* [ %77, %74 ], [ %66, %63 ]
  %76 = phi %"struct.gl::VertexAttribute"* [ %78, %74 ], [ %72, %63 ]
  %77 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %75, i64 -1
  %78 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %76, i64 -1
  call void @_ZN2gl15VertexAttributeC1EOS0_(%"struct.gl::VertexAttribute"* %77, %"struct.gl::VertexAttribute"* dereferenceable(48) %78) #16
  %79 = icmp eq %"struct.gl::VertexAttribute"* %78, %71
  br i1 %79, label %80, label %74

80:                                               ; preds = %74
  %81 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %24, align 8
  br label %82

82:                                               ; preds = %80, %63
  %83 = phi %"struct.gl::VertexAttribute"* [ %77, %80 ], [ %66, %63 ]
  %84 = phi %"struct.gl::VertexAttribute"* [ %81, %80 ], [ %71, %63 ]
  %85 = ptrtoint %"struct.gl::VertexAttribute"* %83 to i64
  store i64 %85, i64* %22, align 8
  store i64 %70, i64* %21, align 8
  store i64 %68, i64* %23, align 8
  %86 = icmp eq %"struct.gl::VertexAttribute"* %84, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %84, i64 0, i32 0
  call void @_ZdlPv(i8* %88) #18
  br label %89

89:                                               ; preds = %87, %82, %38
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #16
  store i32 %36, i32* %5, align 4
  %90 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %26, align 8
  %91 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %27, align 8
  %92 = icmp ult %"class.gl::VertexBinding"* %90, %91
  br i1 %92, label %93, label %96

93:                                               ; preds = %89
  call void @_ZN2gl13VertexBindingC1Ej(%"class.gl::VertexBinding"* %90, i32 %36) #16
  %94 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %90, i64 1
  %95 = ptrtoint %"class.gl::VertexBinding"* %94 to i64
  store i64 %95, i64* %28, align 8
  br label %97

96:                                               ; preds = %89
  call void @_ZNSt3__16vectorIN2gl13VertexBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJjEEEvDpOT_(%"class.std::__1::vector.393"* %14, i32* nonnull dereferenceable(4) %5) #16
  br label %97

97:                                               ; preds = %93, %96
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #16
  %98 = add nuw i64 %35, 1
  %99 = icmp eq i64 %98, %2
  br i1 %99, label %29, label %100

100:                                              ; preds = %97
  %101 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %19, align 8
  %102 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %20, align 8
  %103 = ptrtoint %"struct.gl::VertexAttribute"* %101 to i64
  %104 = ptrtoint %"struct.gl::VertexAttribute"* %102 to i64
  br label %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16VertexArrayStateD2Ev(%"class.gl::VertexArrayState"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.std::__1::vector.393", %"class.std::__1::vector.393"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %3, align 8
  %5 = icmp eq %"class.gl::VertexBinding"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::VertexBinding"* %4 to i8*
  %8 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %8, align 8
  %10 = icmp eq %"class.gl::VertexBinding"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"class.gl::VertexBinding"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %12, i64 -1
  tail call void @_ZN2gl13VertexBindingD1Ev(%"class.gl::VertexBinding"* %13) #16
  %14 = icmp eq %"class.gl::VertexBinding"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector.393"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"class.gl::VertexBinding"* %4, %"class.gl::VertexBinding"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %22, align 8
  %24 = icmp eq %"struct.gl::VertexAttribute"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = ptrtoint %"struct.gl::VertexAttribute"* %23 to i64
  %27 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 1, i32 0, i32 1
  %28 = bitcast %"struct.gl::VertexAttribute"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %23, i64 0, i32 0
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %20, %25
  %31 = bitcast %"class.gl::VertexArrayState"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #18
  br label %38

38:                                               ; preds = %30, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl21SubjectBindingPointerINS_6BufferEED2Ev(%"class.gl::SubjectBindingPointer"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::SubjectBindingPointer", %"class.gl::SubjectBindingPointer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl16VertexArrayState32hasEnabledNullPointerClientArrayEv(%"class.gl::VertexArrayState"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 7, i32 0
  %3 = load i64, i64* %2, align 8, !noalias !2
  %4 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 4, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !2
  %6 = and i64 %5, %3
  %7 = icmp ne i64 %6, 0
  ret i1 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK2gl16VertexArrayState26getBindingToAttributesMaskEj(%"class.angle::BitSetT.166"* noalias nocapture sret, %"class.gl::VertexArrayState"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %4 = zext i32 %2 to i64
  %5 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %1, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %5, align 8
  %7 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %6, i64 %4, i32 4, i32 0
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16VertexArrayState16setAttribBindingEPKNS_7ContextEmj(%"class.gl::VertexArrayState"* nocapture, %"class.gl::Context"* nocapture readonly, i64, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %5, align 8
  %7 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %6, i64 %2
  %8 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %6, i64 %2, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %11, align 8
  %13 = zext i32 %3 to i64
  %14 = shl i64 1, %2
  %15 = xor i64 %14, -1
  %16 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %12, i64 %10, i32 4, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, %15
  store i64 %18, i64* %16, align 8
  %19 = and i64 %14, 65535
  %20 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %12, i64 %13, i32 4, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = or i64 %21, %19
  store i64 %22, i64* %20, align 8
  store i32 %3, i32* %8, align 8
  %23 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 47
  %24 = load i8, i8* %23, align 1, !range !5
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %12, i64 %13
  tail call void @_ZN2gl15VertexAttribute24updateCachedElementLimitERKNS_13VertexBindingE(%"struct.gl::VertexAttribute"* %7, %"class.gl::VertexBinding"* dereferenceable(40) %27) #16
  br label %28

28:                                               ; preds = %4, %26
  %29 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %12, i64 %13, i32 3, i32 0, i32 1
  %30 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %29, align 8
  %31 = icmp eq %"class.gl::Buffer"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 8
  br label %43

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %30, i64 0, i32 4, i32 6
  %36 = load i8, i8* %35, align 8
  %37 = icmp eq i8 %36, 0
  %38 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 8
  br i1 %37, label %43, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %38, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = or i64 %41, %19
  store i64 %42, i64* %40, align 8
  br label %48

43:                                               ; preds = %34, %32
  %44 = phi %"class.angle::BitSetT.166"* [ %33, %32 ], [ %38, %34 ]
  %45 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 8, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, %15
  store i64 %47, i64* %45, align 8
  br label %48

48:                                               ; preds = %39, %43
  %49 = phi %"class.angle::BitSetT.166"* [ %38, %39 ], [ %44, %43 ]
  %50 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %7, i64 0, i32 0
  %51 = load i8, i8* %50, align 8, !range !5
  %52 = icmp eq i8 %51, 0
  %53 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 4, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, %15
  %56 = or i64 %54, %19
  %57 = select i1 %52, i64 %55, i64 %56
  store i64 %57, i64* %53, align 8
  %58 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %11, align 8
  %59 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %58, i64 %2, i32 3, i32 0, i32 1
  %60 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %59, align 8
  %61 = icmp eq %"class.gl::Buffer"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %48
  %63 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %60, i64 0, i32 4, i32 14
  %64 = load i8, i8* %63, align 4
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %60, i64 0, i32 4, i32 4
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, 64
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %62, %66
  %72 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 9, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = or i64 %73, %19
  store i64 %74, i64* %72, align 8
  br label %79

75:                                               ; preds = %48, %66
  %76 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 9, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, %15
  store i64 %78, i64* %76, align 8
  br label %79

79:                                               ; preds = %71, %75
  %80 = phi i64 [ %74, %71 ], [ %78, %75 ]
  %81 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %49, i64 0, i32 0
  %82 = load i64, i64* %81, align 8, !noalias !6
  %83 = and i64 %57, %82
  %84 = and i64 %83, %80
  %85 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 10, i32 0
  store i64 %84, i64* %85, align 8
  ret void
}

declare void @_ZN2gl15VertexAttribute24updateCachedElementLimitERKNS_13VertexBindingE(%"struct.gl::VertexAttribute"*, %"class.gl::VertexBinding"* dereferenceable(40)) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl16VertexArrayState46updateCachedMutableOrNonPersistentArrayBuffersEm(%"class.gl::VertexArrayState"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %4, i64 %1, i32 3, i32 0, i32 1
  %6 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %5, align 8
  %7 = icmp eq %"class.gl::Buffer"* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = shl i64 1, %1
  br label %28

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %6, i64 0, i32 4, i32 14
  %12 = load i8, i8* %11, align 4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = shl i64 1, %1
  br label %22

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %6, i64 0, i32 4, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 64
  %20 = icmp eq i32 %19, 0
  %21 = shl i64 1, %1
  br i1 %20, label %22, label %28

22:                                               ; preds = %14, %16
  %23 = phi i64 [ %15, %14 ], [ %21, %16 ]
  %24 = and i64 %23, 65535
  %25 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 9, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = or i64 %26, %24
  store i64 %27, i64* %25, align 8
  br label %34

28:                                               ; preds = %8, %16
  %29 = phi i64 [ %9, %8 ], [ %21, %16 ]
  %30 = xor i64 %29, -1
  %31 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %0, i64 0, i32 9, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, %30
  store i64 %33, i64* %31, align 8
  br label %34

34:                                               ; preds = %22, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArrayC2EPN2rx13GLImplFactoryENS_13VertexArrayIDEmm(%"class.gl::VertexArray"*, %"class.rx::GLImplFactory"*, i32, i64, i64) unnamed_addr #1 align 2 {
  %6 = alloca i64, align 8
  %7 = alloca %"class.gl::VertexArray"*, align 8
  %8 = bitcast %"class.gl::VertexArray"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5angle17ObserverInterfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2gl13LabeledObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %8, align 8
  %9 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 2
  tail call void @_ZN5angle7SubjectC2Ev(%"class.angle::Subject"* %9) #16
  %10 = bitcast %"class.gl::VertexArray"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*], [4 x i8*] }, { [7 x i8*], [6 x i8*], [4 x i8*] }* @_ZTVN2gl11VertexArrayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*], [4 x i8*] }, { [7 x i8*], [6 x i8*], [4 x i8*] }* @_ZTVN2gl11VertexArrayE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %10, align 8
  %11 = getelementptr inbounds %"class.angle::Subject", %"class.angle::Subject"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*], [4 x i8*] }, { [7 x i8*], [6 x i8*], [4 x i8*] }* @_ZTVN2gl11VertexArrayE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 3, i32 0
  store i32 %2, i32* %12, align 8
  %13 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5
  tail call void @_ZN2gl16VertexArrayStateC2EPNS_11VertexArrayEmm(%"class.gl::VertexArrayState"* %13, %"class.gl::VertexArray"* %0, i64 %3, i64 undef)
  %14 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %15 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 9, i32 1, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 10
  %17 = bitcast %"class.rx::GLImplFactory"* %1 to %"class.rx::VertexArrayImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::VertexArrayState"*)***
  %18 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 265, i1 false)
  %19 = load %"class.rx::VertexArrayImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::VertexArrayState"*)**, %"class.rx::VertexArrayImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::VertexArrayState"*)*** %17, align 8
  %20 = getelementptr inbounds %"class.rx::VertexArrayImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::VertexArrayState"*)*, %"class.rx::VertexArrayImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::VertexArrayState"*)** %19, i64 9
  %21 = load %"class.rx::VertexArrayImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::VertexArrayState"*)*, %"class.rx::VertexArrayImpl"* (%"class.rx::GLImplFactory"*, %"class.gl::VertexArrayState"*)** %20, align 8
  %22 = tail call %"class.rx::VertexArrayImpl"* %21(%"class.rx::GLImplFactory"* %1, %"class.gl::VertexArrayState"* dereferenceable(168) %13) #16
  store %"class.rx::VertexArrayImpl"* %22, %"class.rx::VertexArrayImpl"** %16, align 8
  %23 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 11
  %24 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 13, i32 3
  %25 = bitcast i64* %6 to i8*
  %26 = bitcast %"class.std::__1::vector.337"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false)
  %27 = bitcast %"struct.gl::IndexRange"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 25, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  store i64 0, i64* %6, align 8
  %28 = icmp eq i64 %4, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %5
  %30 = bitcast %"class.gl::VertexArray"** %7 to i8*
  %31 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 11, i32 0, i32 1
  %32 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.angle::ObserverBinding"** %31 to i64*
  %34 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 0
  br label %36

35:                                               ; preds = %45, %5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #16
  ret void

36:                                               ; preds = %49, %29
  %37 = phi %"class.angle::ObserverBinding"* [ null, %29 ], [ %51, %49 ]
  %38 = phi %"class.angle::ObserverBinding"* [ null, %29 ], [ %50, %49 ]
  %39 = phi i64 [ 0, %29 ], [ %47, %49 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #16
  store %"class.gl::VertexArray"* %0, %"class.gl::VertexArray"** %7, align 8
  %40 = icmp ult %"class.angle::ObserverBinding"* %38, %37
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %38, %"class.angle::ObserverInterface"* %34, i64 %39) #16
  %42 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %38, i64 1
  %43 = ptrtoint %"class.angle::ObserverBinding"* %42 to i64
  store i64 %43, i64* %33, align 8
  br label %45

44:                                               ; preds = %36
  call void @_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl11VertexArrayERmEEEvDpOT_(%"class.std::__1::vector.337"* %23, %"class.gl::VertexArray"** nonnull dereferenceable(8) %7, i64* nonnull dereferenceable(8) %6) #16
  br label %45

45:                                               ; preds = %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #16
  %46 = load i64, i64* %6, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %6, align 8
  %48 = icmp ult i64 %47, %4
  br i1 %48, label %49, label %35

49:                                               ; preds = %45
  %50 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %31, align 8
  %51 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %32, align 8
  br label %36
}

declare void @_ZN5angle7SubjectC2Ev(%"class.angle::Subject"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray9onDestroyEPKNS_7ContextE(%"class.gl::VertexArray"*, %"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %4 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %3, align 8
  %5 = icmp eq %"class.gl::VertexArray"* %4, %0
  %6 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %7 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 1
  %9 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %8, align 8
  %10 = icmp eq %"class.gl::VertexBinding"* %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %40, %2
  br i1 %5, label %43, label %51

12:                                               ; preds = %2, %40
  %13 = phi %"class.gl::VertexBinding"* [ %41, %40 ], [ %7, %2 ]
  br i1 %5, label %14, label %22

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %13, i64 0, i32 3, i32 0, i32 1
  %16 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %15, align 8
  %17 = icmp eq %"class.gl::Buffer"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %16, i64 0, i32 4, i32 11
  %20 = load i32, i32* %19, align 8
  %21 = add nsw i32 %20, -1
  store i32 %21, i32* %19, align 8
  br label %22

22:                                               ; preds = %14, %18, %12
  %23 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %13, i64 0, i32 3, i32 0, i32 1
  %24 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %23, align 8
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %23, align 8
  %25 = icmp eq %"class.gl::Buffer"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %24, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %24, i64 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, -1
  store i64 %30, i64* %28, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %40

32:                                               ; preds = %26
  %33 = bitcast %"class.gl::Buffer"* %24 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %34 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %33, align 8
  %35 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %34, align 8
  tail call void %35(%"class.angle::RefCountObject"* %27, %"class.gl::Context"* %1) #16
  %36 = bitcast %"class.gl::Buffer"* %24 to void (%"class.angle::RefCountObject"*)***
  %37 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %37, i64 2
  %39 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %38, align 8
  tail call void %39(%"class.angle::RefCountObject"* nonnull %27) #16
  br label %40

40:                                               ; preds = %22, %26, %32
  %41 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %13, i64 1
  %42 = icmp eq %"class.gl::VertexBinding"* %41, %9
  br i1 %42, label %11, label %12

43:                                               ; preds = %11
  %44 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %45 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %44, align 8
  %46 = icmp eq %"class.gl::Buffer"* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %45, i64 0, i32 4, i32 11
  %49 = load i32, i32* %48, align 8
  %50 = add nsw i32 %49, -1
  store i32 %50, i32* %48, align 8
  br label %51

51:                                               ; preds = %43, %47, %11
  %52 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %53 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %52, align 8
  %54 = icmp eq %"class.gl::Buffer"* %53, null
  br i1 %54, label %98, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 2, i32 1
  %57 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %53, i64 0, i32 3, i32 1, i32 2
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, -1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %53, i64 0, i32 3, i32 1, i32 1
  %63 = load %"class.angle::ObserverBindingBase"**, %"class.angle::ObserverBindingBase"*** %62, align 8
  br label %66

64:                                               ; preds = %66
  %65 = icmp eq i64 %71, %59
  br i1 %65, label %80, label %66

66:                                               ; preds = %64, %61
  %67 = phi i64 [ 0, %61 ], [ %71, %64 ]
  %68 = getelementptr inbounds %"class.angle::ObserverBindingBase"*, %"class.angle::ObserverBindingBase"** %63, i64 %67
  %69 = load %"class.angle::ObserverBindingBase"*, %"class.angle::ObserverBindingBase"** %68, align 8
  %70 = icmp eq %"class.angle::ObserverBindingBase"* %69, %56
  %71 = add nuw i64 %67, 1
  br i1 %70, label %72, label %64

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.angle::ObserverBindingBase"*, %"class.angle::ObserverBindingBase"** %63, i64 %67
  %74 = getelementptr inbounds %"class.angle::ObserverBindingBase"*, %"class.angle::ObserverBindingBase"** %63, i64 %59
  %75 = bitcast %"class.angle::ObserverBindingBase"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.angle::ObserverBindingBase"** %73 to i64*
  store i64 %76, i64* %77, align 8
  %78 = load i64, i64* %57, align 8
  %79 = add i64 %78, -1
  br label %80

80:                                               ; preds = %64, %72, %55
  %81 = phi i64 [ 0, %55 ], [ %79, %72 ], [ %59, %64 ]
  store i64 %81, i64* %57, align 8
  %82 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %52, align 8
  %83 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %82, i64 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %82, i64 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, -1
  store i64 %86, i64* %84, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %98

88:                                               ; preds = %80
  %89 = bitcast %"class.gl::Buffer"* %82 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %90 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %89, align 8
  %91 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %90, align 8
  tail call void %91(%"class.angle::RefCountObject"* %83, %"class.gl::Context"* %1) #16
  %92 = icmp eq %"class.gl::Buffer"* %82, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %88
  %94 = bitcast %"class.gl::Buffer"* %82 to void (%"class.angle::RefCountObject"*)***
  %95 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %95, i64 2
  %97 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %96, align 8
  tail call void %97(%"class.angle::RefCountObject"* nonnull %83) #16
  br label %98

98:                                               ; preds = %51, %80, %88, %93
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %52, align 8
  %99 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 10
  %100 = load %"class.rx::VertexArrayImpl"*, %"class.rx::VertexArrayImpl"** %99, align 8
  %101 = bitcast %"class.rx::VertexArrayImpl"* %100 to void (%"class.rx::VertexArrayImpl"*, %"class.gl::Context"*)***
  %102 = load void (%"class.rx::VertexArrayImpl"*, %"class.gl::Context"*)**, void (%"class.rx::VertexArrayImpl"*, %"class.gl::Context"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.rx::VertexArrayImpl"*, %"class.gl::Context"*)*, void (%"class.rx::VertexArrayImpl"*, %"class.gl::Context"*)** %102, i64 1
  %104 = load void (%"class.rx::VertexArrayImpl"*, %"class.gl::Context"*)*, void (%"class.rx::VertexArrayImpl"*, %"class.gl::Context"*)** %103, align 8
  tail call void %104(%"class.rx::VertexArrayImpl"* %100, %"class.gl::Context"* %1) #16
  %105 = load %"class.rx::VertexArrayImpl"*, %"class.rx::VertexArrayImpl"** %99, align 8
  %106 = icmp eq %"class.rx::VertexArrayImpl"* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %98
  %108 = bitcast %"class.rx::VertexArrayImpl"* %105 to void (%"class.rx::VertexArrayImpl"*)***
  %109 = load void (%"class.rx::VertexArrayImpl"*)**, void (%"class.rx::VertexArrayImpl"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.rx::VertexArrayImpl"*)*, void (%"class.rx::VertexArrayImpl"*)** %109, i64 3
  %111 = load void (%"class.rx::VertexArrayImpl"*)*, void (%"class.rx::VertexArrayImpl"*)** %110, align 8
  tail call void %111(%"class.rx::VertexArrayImpl"* nonnull %105) #16
  br label %112

112:                                              ; preds = %98, %107
  store %"class.rx::VertexArrayImpl"* null, %"class.rx::VertexArrayImpl"** %99, align 8
  %113 = icmp eq %"class.gl::VertexArray"* %0, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %112
  %115 = bitcast %"class.gl::VertexArray"* %0 to void (%"class.gl::VertexArray"*)***
  %116 = load void (%"class.gl::VertexArray"*)**, void (%"class.gl::VertexArray"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.gl::VertexArray"*)*, void (%"class.gl::VertexArray"*)** %116, i64 1
  %118 = load void (%"class.gl::VertexArray"*)*, void (%"class.gl::VertexArray"*)** %117, align 8
  tail call void %118(%"class.gl::VertexArray"* nonnull %0) #16
  br label %119

119:                                              ; preds = %114, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArrayD2Ev(%"class.gl::VertexArray"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.gl::VertexArray"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*], [4 x i8*] }, { [7 x i8*], [6 x i8*], [4 x i8*] }* @_ZTVN2gl11VertexArrayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*], [4 x i8*] }, { [7 x i8*], [6 x i8*], [4 x i8*] }* @_ZTVN2gl11VertexArrayE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.angle::Subject", %"class.angle::Subject"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*], [4 x i8*] }, { [7 x i8*], [6 x i8*], [4 x i8*] }* @_ZTVN2gl11VertexArrayE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 11
  %6 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %6, align 8
  %8 = icmp eq %"class.angle::ObserverBinding"* %7, null
  br i1 %8, label %23, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.angle::ObserverBinding"* %7 to i8*
  %11 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 11, i32 0, i32 1
  %12 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %11, align 8
  %13 = icmp eq %"class.angle::ObserverBinding"* %12, %7
  br i1 %13, label %21, label %14

14:                                               ; preds = %9, %14
  %15 = phi %"class.angle::ObserverBinding"* [ %16, %14 ], [ %12, %9 ]
  %16 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %15, i64 -1
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %16) #16
  %17 = icmp eq %"class.angle::ObserverBinding"* %16, %7
  br i1 %17, label %18, label %14

18:                                               ; preds = %14
  %19 = bitcast %"class.std::__1::vector.337"* %5 to i8**
  %20 = load i8*, i8** %19, align 8
  br label %21

21:                                               ; preds = %18, %9
  %22 = phi i8* [ %20, %18 ], [ %10, %9 ]
  store %"class.angle::ObserverBinding"* %7, %"class.angle::ObserverBinding"** %11, align 8
  tail call void @_ZdlPv(i8* %22) #18
  br label %23

23:                                               ; preds = %1, %21
  %24 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5
  %25 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3
  %26 = getelementptr inbounds %"class.std::__1::vector.393", %"class.std::__1::vector.393"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %26, align 8
  %28 = icmp eq %"class.gl::VertexBinding"* %27, null
  br i1 %28, label %43, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.gl::VertexBinding"* %27 to i8*
  %31 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 1
  %32 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %31, align 8
  %33 = icmp eq %"class.gl::VertexBinding"* %32, %27
  br i1 %33, label %41, label %34

34:                                               ; preds = %29, %34
  %35 = phi %"class.gl::VertexBinding"* [ %36, %34 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %35, i64 -1
  tail call void @_ZN2gl13VertexBindingD1Ev(%"class.gl::VertexBinding"* %36) #16
  %37 = icmp eq %"class.gl::VertexBinding"* %36, %27
  br i1 %37, label %38, label %34

38:                                               ; preds = %34
  %39 = bitcast %"class.std::__1::vector.393"* %25 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %29
  %42 = phi i8* [ %40, %38 ], [ %30, %29 ]
  store %"class.gl::VertexBinding"* %27, %"class.gl::VertexBinding"** %31, align 8
  tail call void @_ZdlPv(i8* %42) #18
  br label %43

43:                                               ; preds = %41, %23
  %44 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %46 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %45, align 8
  %47 = icmp eq %"struct.gl::VertexAttribute"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = ptrtoint %"struct.gl::VertexAttribute"* %46 to i64
  %50 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %51 = bitcast %"struct.gl::VertexAttribute"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %46, i64 0, i32 0
  tail call void @_ZdlPv(i8* %52) #18
  br label %53

53:                                               ; preds = %48, %43
  %54 = bitcast %"class.gl::VertexArrayState"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void @_ZdlPv(i8* %60) #18
  br label %61

61:                                               ; preds = %53, %58
  tail call void @_ZN5angle7SubjectD2Ev(%"class.angle::Subject"* %3) #16
  %62 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 0
  tail call void @_ZN5angle17ObserverInterfaceD2Ev(%"class.angle::ObserverInterface"* %62) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5angle17ObserverInterfaceD2Ev(%"class.angle::ObserverInterface"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2gl11VertexArrayD1Ev(%"class.gl::VertexArray"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 -1, i32 14
  %3 = bitcast i8* %2 to %"class.gl::VertexArray"*
  tail call void @_ZN2gl11VertexArrayD2Ev(%"class.gl::VertexArray"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N2gl11VertexArrayD1Ev(%"class.gl::VertexArray"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 -1, i32 13, i32 3, i32 2
  %3 = bitcast i64* %2 to %"class.gl::VertexArray"*
  tail call void @_ZN2gl11VertexArrayD2Ev(%"class.gl::VertexArray"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArrayD0Ev(%"class.gl::VertexArray"*) unnamed_addr #1 align 2 {
  tail call void @_ZN2gl11VertexArrayD2Ev(%"class.gl::VertexArray"* %0) #16
  %2 = bitcast %"class.gl::VertexArray"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2gl11VertexArrayD0Ev(%"class.gl::VertexArray"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 -1, i32 14
  %3 = bitcast i8* %2 to %"class.gl::VertexArray"*
  tail call void @_ZN2gl11VertexArrayD2Ev(%"class.gl::VertexArray"* %3) #16
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N2gl11VertexArrayD0Ev(%"class.gl::VertexArray"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 -1, i32 13, i32 3, i32 2
  %3 = bitcast i64* %2 to %"class.gl::VertexArray"*
  tail call void @_ZN2gl11VertexArrayD2Ev(%"class.gl::VertexArray"* %3) #16
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray8setLabelEPKNS_7ContextERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.gl::VertexArray"*, %"class.gl::Context"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 0
  %5 = icmp eq %"class.std::__1::basic_string"* %4, %2
  br i1 %5, label %35, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %10, label %25, label %15

15:                                               ; preds = %6
  br i1 %14, label %19, label %16

16:                                               ; preds = %15
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #16
  br label %35

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %21, i64 %23) #16
  br label %35

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %31 = zext i8 %13 to i64
  %32 = select i1 %14, i8* %27, i8* %30
  %33 = select i1 %14, i64 %29, i64 %31
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %32, i64 %33) #16
  br label %35

35:                                               ; preds = %3, %16, %19, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2gl11VertexArray8setLabelEPKNS_7ContextERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.gl::VertexArray"*, %"class.gl::Context"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 -1, i32 14
  %5 = getelementptr inbounds i8, i8* %4, i64 120
  %6 = bitcast i8* %5 to %"class.std::__1::basic_string"*
  %7 = icmp eq %"class.std::__1::basic_string"* %6, %2
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %4, i64 143
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %11, label %25, label %16

16:                                               ; preds = %8
  br i1 %15, label %19, label %17

17:                                               ; preds = %16
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %18, i64 24, i1 false) #16
  br label %35

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %6, i8* %21, i64 %23) #16
  br label %35

25:                                               ; preds = %8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %31 = zext i8 %14 to i64
  %32 = select i1 %15, i8* %27, i8* %30
  %33 = select i1 %15, i64 %29, i64 %31
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %6, i8* %32, i64 %33) #16
  br label %35

35:                                               ; preds = %3, %17, %19, %25
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK2gl11VertexArray8getLabelEv(%"class.gl::VertexArray"* readnone) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 0
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZThn8_NK2gl11VertexArray8getLabelEv(%"class.gl::VertexArray"* readnone) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 -1, i32 14
  %3 = getelementptr inbounds i8, i8* %2, i64 120
  %4 = bitcast i8* %3 to %"class.std::__1::basic_string"*
  ret %"class.std::__1::basic_string"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl11VertexArray12detachBufferEPKNS_7ContextENS_8BufferIDE(%"class.gl::VertexArray"*, %"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %5 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %4, align 8
  %6 = icmp eq %"class.gl::VertexArray"* %5, %0
  %7 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %8 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 11, i32 0, i32 0
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 0
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 1
  %11 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %12 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 6, i32 0
  br label %17

13:                                               ; preds = %86
  %14 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %15 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %14, align 8
  %16 = icmp eq %"class.gl::Buffer"* %15, null
  br i1 %16, label %148, label %90

17:                                               ; preds = %86, %3
  %18 = phi i64 [ 0, %3 ], [ %88, %86 ]
  %19 = phi i8 [ 0, %3 ], [ %87, %86 ]
  %20 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %7, align 8
  %21 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %20, i64 %18, i32 3, i32 0, i32 1
  %22 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %21, align 8
  %23 = icmp eq %"class.gl::Buffer"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %22, i64 0, i32 0, i32 2, i32 0
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %17, %24
  %28 = phi i32 [ %26, %24 ], [ 0, %17 ]
  %29 = icmp eq i32 %28, %2
  br i1 %29, label %30, label %86

30:                                               ; preds = %27
  br i1 %6, label %31, label %38

31:                                               ; preds = %30
  br i1 %23, label %32, label %33

32:                                               ; preds = %31
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %21, align 8
  br label %55

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %22, i64 0, i32 4, i32 11
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, -1
  store i32 %36, i32* %34, align 8
  %37 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %21, align 8
  br label %38

38:                                               ; preds = %33, %30
  %39 = phi %"class.gl::Buffer"* [ %37, %33 ], [ %22, %30 ]
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %21, align 8
  %40 = icmp eq %"class.gl::Buffer"* %39, null
  br i1 %40, label %55, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %39, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %39, i64 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, -1
  store i64 %45, i64* %43, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %55

47:                                               ; preds = %41
  %48 = bitcast %"class.gl::Buffer"* %39 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %49 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %48, align 8
  %50 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %49, align 8
  tail call void %50(%"class.angle::RefCountObject"* %42, %"class.gl::Context"* %1) #16
  %51 = bitcast %"class.gl::Buffer"* %39 to void (%"class.angle::RefCountObject"*)***
  %52 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %52, i64 2
  %54 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %53, align 8
  tail call void %54(%"class.angle::RefCountObject"* nonnull %42) #16
  br label %55

55:                                               ; preds = %32, %38, %41, %47
  %56 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %8, align 8
  %57 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %56, i64 %18
  tail call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %57, %"class.angle::Subject"* null) #16
  %58 = load i32, i32* %9, align 4
  %59 = icmp ult i32 %58, 3
  br i1 %59, label %71, label %60

60:                                               ; preds = %55
  %61 = icmp eq i32 %58, 3
  br i1 %61, label %62, label %65

62:                                               ; preds = %60
  %63 = load i32, i32* %10, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %62, %60
  %66 = shl i64 262144, %18
  %67 = and i64 %66, 1125899906842623
  %68 = load i64, i64* %11, align 8
  %69 = or i64 %68, %67
  store i64 %69, i64* %11, align 8
  %70 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 8, i32 0, i64 %18, i32 0
  br label %77

71:                                               ; preds = %62, %55
  %72 = shl i64 4, %18
  %73 = and i64 %72, 1125899906842623
  %74 = load i64, i64* %11, align 8
  %75 = or i64 %74, %73
  store i64 %75, i64* %11, align 8
  %76 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 7, i32 0, i64 %18, i32 0
  br label %77

77:                                               ; preds = %71, %65
  %78 = phi i64* [ %76, %71 ], [ %70, %65 ]
  %79 = phi i64 [ 2, %71 ], [ 1, %65 ]
  %80 = load i64, i64* %78, align 8
  %81 = or i64 %80, %79
  store i64 %81, i64* %78, align 8
  %82 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %20, i64 %18, i32 4, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = load i64, i64* %12, align 8
  %85 = or i64 %84, %83
  store i64 %85, i64* %12, align 8
  br label %86

86:                                               ; preds = %77, %27
  %87 = phi i8 [ 1, %77 ], [ %19, %27 ]
  %88 = add nuw nsw i64 %18, 1
  %89 = icmp eq i64 %88, 16
  br i1 %89, label %13, label %17

90:                                               ; preds = %13
  %91 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %15, i64 0, i32 0, i32 2, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, %2
  br i1 %93, label %94, label %148

94:                                               ; preds = %90
  br i1 %6, label %95, label %101

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %15, i64 0, i32 4, i32 11
  %97 = load i32, i32* %96, align 8
  %98 = add nsw i32 %97, -1
  store i32 %98, i32* %96, align 8
  %99 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %14, align 8
  %100 = icmp eq %"class.gl::Buffer"* %99, null
  br i1 %100, label %145, label %101

101:                                              ; preds = %94, %95
  %102 = phi %"class.gl::Buffer"* [ %99, %95 ], [ %15, %94 ]
  %103 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 2, i32 1
  %104 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %102, i64 0, i32 3, i32 1, i32 2
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %105, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %127, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %102, i64 0, i32 3, i32 1, i32 1
  %110 = load %"class.angle::ObserverBindingBase"**, %"class.angle::ObserverBindingBase"*** %109, align 8
  br label %113

111:                                              ; preds = %113
  %112 = icmp eq i64 %118, %106
  br i1 %112, label %127, label %113

113:                                              ; preds = %111, %108
  %114 = phi i64 [ 0, %108 ], [ %118, %111 ]
  %115 = getelementptr inbounds %"class.angle::ObserverBindingBase"*, %"class.angle::ObserverBindingBase"** %110, i64 %114
  %116 = load %"class.angle::ObserverBindingBase"*, %"class.angle::ObserverBindingBase"** %115, align 8
  %117 = icmp eq %"class.angle::ObserverBindingBase"* %116, %103
  %118 = add nuw i64 %114, 1
  br i1 %117, label %119, label %111

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.angle::ObserverBindingBase"*, %"class.angle::ObserverBindingBase"** %110, i64 %114
  %121 = getelementptr inbounds %"class.angle::ObserverBindingBase"*, %"class.angle::ObserverBindingBase"** %110, i64 %106
  %122 = bitcast %"class.angle::ObserverBindingBase"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.angle::ObserverBindingBase"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = load i64, i64* %104, align 8
  %126 = add i64 %125, -1
  br label %127

127:                                              ; preds = %111, %119, %101
  %128 = phi i64 [ 0, %101 ], [ %126, %119 ], [ %106, %111 ]
  store i64 %128, i64* %104, align 8
  %129 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %14, align 8
  %130 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %129, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %129, i64 0, i32 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, -1
  store i64 %133, i64* %131, align 8
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %145

135:                                              ; preds = %127
  %136 = bitcast %"class.gl::Buffer"* %129 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %137 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %136, align 8
  %138 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %137, align 8
  tail call void %138(%"class.angle::RefCountObject"* %130, %"class.gl::Context"* %1) #16
  %139 = icmp eq %"class.gl::Buffer"* %129, null
  br i1 %139, label %145, label %140

140:                                              ; preds = %135
  %141 = bitcast %"class.gl::Buffer"* %129 to void (%"class.angle::RefCountObject"*)***
  %142 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %142, i64 2
  %144 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %143, align 8
  tail call void %144(%"class.angle::RefCountObject"* nonnull %130) #16
  br label %145

145:                                              ; preds = %95, %127, %135, %140
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %14, align 8
  %146 = load i64, i64* %11, align 8
  %147 = or i64 %146, 1
  store i64 %147, i64* %11, align 8
  br label %148

148:                                              ; preds = %13, %145, %90
  %149 = phi i8 [ 1, %145 ], [ %87, %90 ], [ %87, %13 ]
  %150 = and i8 %149, 1
  %151 = icmp ne i8 %150, 0
  ret i1 %151
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(48) %"struct.gl::VertexAttribute"* @_ZNK2gl11VertexArray18getVertexAttributeEm(%"class.gl::VertexArray"* nocapture readonly, i64) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %4 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %3, align 8
  %5 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %4, i64 %1
  ret %"struct.gl::VertexAttribute"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(40) %"class.gl::VertexBinding"* @_ZNK2gl11VertexArray16getVertexBindingEm(%"class.gl::VertexArray"* nocapture readonly, i64) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %4 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %4, i64 %1
  ret %"class.gl::VertexBinding"* %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2gl11VertexArray26GetVertexIndexFromDirtyBitEm(i64) local_unnamed_addr #8 align 2 {
  %2 = add i64 %0, 14
  %3 = and i64 %2, 15
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl11VertexArray20bindVertexBufferImplEPKNS_7ContextEmPNS_6BufferEli(%"class.gl::VertexArray"* nocapture, %"class.gl::Context"*, i64, %"class.gl::Buffer"*, i64, i32) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %8 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %8, i64 %2
  %10 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %8, i64 %2, i32 3, i32 0, i32 1
  %11 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %10, align 8
  %12 = icmp ne %"class.gl::Buffer"* %11, %3
  %13 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %9, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %8, i64 %2, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = icmp ne i64 %16, %4
  %18 = icmp ne i32 %14, %5
  %19 = or i1 %12, %18
  %20 = or i1 %19, %17
  br i1 %20, label %21, label %253

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 11, i32 0, i32 0
  %23 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %22, align 8
  %24 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %23, i64 %2
  %25 = icmp eq %"class.gl::Buffer"* %3, null
  %26 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 3
  %27 = select i1 %25, %"class.angle::Subject"* null, %"class.angle::Subject"* %26
  %28 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %23, i64 %2, i32 1
  store %"class.angle::Subject"* %27, %"class.angle::Subject"** %28, align 8
  %29 = icmp eq %"class.gl::Buffer"* %11, null
  br i1 %29, label %73, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %11, i64 0, i32 4, i32 11
  %32 = load i32, i32* %31, align 8
  %33 = add nsw i32 %32, -1
  store i32 %33, i32* %31, align 8
  %34 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %24, i64 0, i32 0
  %35 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %11, i64 0, i32 3, i32 1, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, -1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %11, i64 0, i32 3, i32 1, i32 1
  %41 = load %"class.angle::ObserverBindingBase"**, %"class.angle::ObserverBindingBase"*** %40, align 8
  br label %44

42:                                               ; preds = %44
  %43 = icmp eq i64 %49, %37
  br i1 %43, label %58, label %44

44:                                               ; preds = %42, %39
  %45 = phi i64 [ 0, %39 ], [ %49, %42 ]
  %46 = getelementptr inbounds %"class.angle::ObserverBindingBase"*, %"class.angle::ObserverBindingBase"** %41, i64 %45
  %47 = load %"class.angle::ObserverBindingBase"*, %"class.angle::ObserverBindingBase"** %46, align 8
  %48 = icmp eq %"class.angle::ObserverBindingBase"* %47, %34
  %49 = add nuw i64 %45, 1
  br i1 %48, label %50, label %42

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.angle::ObserverBindingBase"*, %"class.angle::ObserverBindingBase"** %41, i64 %45
  %52 = getelementptr inbounds %"class.angle::ObserverBindingBase"*, %"class.angle::ObserverBindingBase"** %41, i64 %37
  %53 = bitcast %"class.angle::ObserverBindingBase"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.angle::ObserverBindingBase"** %51 to i64*
  store i64 %54, i64* %55, align 8
  %56 = load i64, i64* %35, align 8
  %57 = add i64 %56, -1
  br label %58

58:                                               ; preds = %42, %30, %50
  %59 = phi i64 [ 0, %30 ], [ %57, %50 ], [ %37, %42 ]
  store i64 %59, i64* %35, align 8
  %60 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %11, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %11, i64 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, -1
  store i64 %63, i64* %61, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %73

65:                                               ; preds = %58
  %66 = bitcast %"class.gl::Buffer"* %11 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %67 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %66, align 8
  %68 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %67, align 8
  tail call void %68(%"class.angle::RefCountObject"* %60, %"class.gl::Context"* %1) #16
  %69 = bitcast %"class.gl::Buffer"* %11 to void (%"class.angle::RefCountObject"*)***
  %70 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %70, i64 2
  %72 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %71, align 8
  tail call void %72(%"class.angle::RefCountObject"* nonnull %60) #16
  br label %73

73:                                               ; preds = %65, %58, %21
  store %"class.gl::Buffer"* %3, %"class.gl::Buffer"** %10, align 8
  store i64 %4, i64* %15, align 8
  store i32 %5, i32* %13, align 8
  %74 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 14
  %75 = load i8, i8* %74, align 8, !range !5
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %94, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %8, i64 %2, i32 4, i32 0
  %79 = load i64, i64* %78, align 8, !noalias !9
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %94, label %81

81:                                               ; preds = %77
  %82 = tail call i64 @llvm.cttz.i64(i64 %79, i1 true) #16, !range !12
  %83 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  br label %84

84:                                               ; preds = %84, %81
  %85 = phi i64 [ %82, %81 ], [ %93, %84 ]
  %86 = phi i64 [ %79, %81 ], [ %91, %84 ]
  %87 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %83, align 8
  %88 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %87, i64 %85
  tail call void @_ZN2gl15VertexAttribute24updateCachedElementLimitERKNS_13VertexBindingE(%"struct.gl::VertexAttribute"* %88, %"class.gl::VertexBinding"* dereferenceable(40) %9) #16
  %89 = shl i64 1, %85
  %90 = xor i64 %89, -1
  %91 = and i64 %86, %90
  %92 = icmp eq i64 %91, 0
  %93 = tail call i64 @llvm.cttz.i64(i64 %91, i1 true) #16, !range !12
  br i1 %92, label %94, label %84

94:                                               ; preds = %84, %73, %77
  br i1 %25, label %225, label %95

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %96, align 8
  %99 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 4, i32 11
  %100 = load i32, i32* %99, align 8
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %99, align 8
  %102 = ptrtoint %"class.angle::ObserverBinding"* %24 to i64
  %103 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 3, i32 1, i32 2
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 3, i32 1, i32 3
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %104, %106
  br i1 %107, label %108, label %148

108:                                              ; preds = %95
  %109 = add i64 %104, 1
  %110 = icmp eq i64 %104, -1
  br i1 %110, label %148, label %111

111:                                              ; preds = %108
  %112 = icmp ugt i64 %104, 8
  %113 = select i1 %112, i64 %104, i64 8
  br label %114

114:                                              ; preds = %114, %111
  %115 = phi i64 [ %113, %111 ], [ %117, %114 ]
  %116 = icmp ult i64 %115, %109
  %117 = shl i64 %115, 1
  br i1 %116, label %114, label %118

118:                                              ; preds = %114
  %119 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %115, i64 8) #16
  %120 = extractvalue { i64, i1 } %119, 1
  %121 = extractvalue { i64, i1 } %119, 0
  %122 = select i1 %120, i64 -1, i64 %121
  %123 = tail call i8* @_Znam(i64 %122) #18
  %124 = icmp eq i64 %104, 0
  br i1 %124, label %125, label %129

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 3, i32 1, i32 1
  %127 = load %"class.angle::ObserverBindingBase"**, %"class.angle::ObserverBindingBase"*** %126, align 8
  %128 = bitcast %"class.angle::ObserverBindingBase"** %127 to i8*
  br label %135

129:                                              ; preds = %118
  %130 = shl nuw i64 %104, 3
  %131 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 3, i32 1, i32 1
  %132 = bitcast %"class.angle::ObserverBindingBase"*** %131 to i8**
  %133 = load i8*, i8** %132, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %123, i8* align 8 %133, i64 %130, i1 false) #16
  %134 = bitcast i8* %133 to %"class.angle::ObserverBindingBase"**
  br label %135

135:                                              ; preds = %129, %125
  %136 = phi i8* [ %128, %125 ], [ %133, %129 ]
  %137 = phi %"class.angle::ObserverBindingBase"** [ %127, %125 ], [ %134, %129 ]
  %138 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 3, i32 1, i32 1
  %139 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 3, i32 1, i32 0, i32 0, i64 0
  %140 = icmp eq %"class.angle::ObserverBindingBase"** %137, %139
  %141 = icmp eq %"class.angle::ObserverBindingBase"** %137, null
  %142 = or i1 %140, %141
  br i1 %142, label %145, label %143

143:                                              ; preds = %135
  tail call void @_ZdaPv(i8* %136) #18
  %144 = load i64, i64* %103, align 8
  br label %145

145:                                              ; preds = %143, %135
  %146 = phi i64 [ %144, %143 ], [ %104, %135 ]
  %147 = bitcast %"class.angle::ObserverBindingBase"*** %138 to i8**
  store i8* %123, i8** %147, align 8
  store i64 %115, i64* %105, align 8
  br label %148

148:                                              ; preds = %95, %108, %145
  %149 = phi i64 [ %146, %145 ], [ -1, %108 ], [ %104, %95 ]
  %150 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 3, i32 1, i32 1
  %151 = load %"class.angle::ObserverBindingBase"**, %"class.angle::ObserverBindingBase"*** %150, align 8
  %152 = add i64 %149, 1
  store i64 %152, i64* %103, align 8
  %153 = getelementptr inbounds %"class.angle::ObserverBindingBase"*, %"class.angle::ObserverBindingBase"** %151, i64 %149
  %154 = bitcast %"class.angle::ObserverBindingBase"** %153 to i64*
  store i64 %102, i64* %154, align 8
  %155 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 12
  %156 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 4, i32 12
  %157 = load i32, i32* %156, align 4
  %158 = icmp sgt i32 %157, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %148
  %160 = shl i64 1, %2
  br label %173

161:                                              ; preds = %148
  %162 = load i32, i32* %99, align 8
  %163 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 4, i32 13
  %164 = load i32, i32* %163, align 8
  %165 = sub nsw i32 %162, %164
  %166 = icmp eq i32 %157, %165
  %167 = shl i64 1, %2
  br i1 %166, label %173, label %168

168:                                              ; preds = %161
  %169 = and i64 %167, 65535
  %170 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %155, i64 0, i32 0
  %171 = load i64, i64* %170, align 8
  %172 = or i64 %171, %169
  store i64 %172, i64* %170, align 8
  br label %179

173:                                              ; preds = %161, %159
  %174 = phi i64 [ %160, %159 ], [ %167, %161 ]
  %175 = xor i64 %174, -1
  %176 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %155, i64 0, i32 0
  %177 = load i64, i64* %176, align 8
  %178 = and i64 %177, %175
  store i64 %178, i64* %176, align 8
  br label %179

179:                                              ; preds = %168, %173
  %180 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %8, i64 %2, i32 4, i32 0
  %181 = load i64, i64* %180, align 8, !noalias !13
  %182 = and i64 %181, 65535
  %183 = xor i64 %182, 65535
  %184 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 6, i32 0
  %185 = load i64, i64* %184, align 8
  %186 = and i64 %183, %185
  store i64 %186, i64* %184, align 8
  %187 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 4, i32 6
  %188 = load i8, i8* %187, align 8
  %189 = icmp eq i8 %188, 1
  %190 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 4, i32 14
  %191 = load i8, i8* %190, align 4
  %192 = icmp eq i8 %191, 1
  %193 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 4, i32 4
  %194 = load i32, i32* %193, align 8
  %195 = and i32 %194, 64
  %196 = icmp ne i32 %195, 0
  %197 = load i64, i64* %180, align 8
  br i1 %189, label %198, label %202

198:                                              ; preds = %179
  %199 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 8, i32 0
  %200 = load i64, i64* %199, align 8
  %201 = or i64 %200, %197
  store i64 %201, i64* %199, align 8
  br label %208

202:                                              ; preds = %179
  %203 = and i64 %197, 65535
  %204 = xor i64 %203, 65535
  %205 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 8, i32 0
  %206 = load i64, i64* %205, align 8
  %207 = and i64 %206, %204
  store i64 %207, i64* %205, align 8
  br label %208

208:                                              ; preds = %202, %198
  %209 = phi i64 [ %207, %202 ], [ %201, %198 ]
  %210 = and i1 %192, %196
  %211 = load i64, i64* %180, align 8
  br i1 %210, label %216, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 9, i32 0
  %214 = load i64, i64* %213, align 8
  %215 = or i64 %214, %211
  store i64 %215, i64* %213, align 8
  br label %222

216:                                              ; preds = %208
  %217 = and i64 %211, 65535
  %218 = xor i64 %217, 65535
  %219 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 9, i32 0
  %220 = load i64, i64* %219, align 8
  %221 = and i64 %220, %218
  store i64 %221, i64* %219, align 8
  br label %222

222:                                              ; preds = %212, %216
  %223 = phi i64 [ %221, %216 ], [ %215, %212 ]
  %224 = and i64 %223, %209
  br label %247

225:                                              ; preds = %94
  %226 = shl i64 1, %2
  %227 = xor i64 %226, -1
  %228 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 12, i32 0
  %229 = load i64, i64* %228, align 8
  %230 = and i64 %229, %227
  store i64 %230, i64* %228, align 8
  %231 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %8, i64 %2, i32 4, i32 0
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 6, i32 0
  %234 = load i64, i64* %233, align 8
  %235 = or i64 %234, %232
  store i64 %235, i64* %233, align 8
  %236 = load i64, i64* %231, align 8
  %237 = and i64 %236, 65535
  %238 = xor i64 %237, 65535
  %239 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 8, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = and i64 %238, %240
  store i64 %241, i64* %239, align 8
  %242 = load i64, i64* %231, align 8
  %243 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 9, i32 0
  %244 = load i64, i64* %243, align 8
  %245 = or i64 %244, %242
  store i64 %245, i64* %243, align 8
  %246 = and i64 %245, %241
  br label %247

247:                                              ; preds = %225, %222
  %248 = phi i64 [ %224, %222 ], [ %246, %225 ]
  %249 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 4, i32 0
  %250 = load i64, i64* %249, align 8, !noalias !16
  %251 = and i64 %248, %250
  %252 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 10, i32 0
  store i64 %251, i64* %252, align 8
  br label %253

253:                                              ; preds = %247, %6
  %254 = phi i1 [ false, %6 ], [ true, %247 ]
  ret i1 %254
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray16bindVertexBufferEPKNS_7ContextEmPNS_6BufferEli(%"class.gl::VertexArray"* nocapture, %"class.gl::Context"*, i64, %"class.gl::Buffer"*, i64, i32) local_unnamed_addr #1 align 2 {
  %7 = tail call zeroext i1 @_ZN2gl11VertexArray20bindVertexBufferImplEPKNS_7ContextEmPNS_6BufferEli(%"class.gl::VertexArray"* %0, %"class.gl::Context"* %1, i64 %2, %"class.gl::Buffer"* %3, i64 %4, i32 %5)
  br i1 %7, label %8, label %18

8:                                                ; preds = %6
  %9 = add i64 %2, 18
  %10 = shl i64 1, %9
  %11 = and i64 %10, 1125899906842623
  %12 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = or i64 %13, %11
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 8, i32 0, i64 %2, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = or i64 %16, 1
  store i64 %17, i64* %15, align 8
  br label %18

18:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray22setVertexAttribBindingEPKNS_7ContextEmj(%"class.gl::VertexArray"* nocapture, %"class.gl::Context"* nocapture readonly, i64, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %6 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %5, align 8
  %7 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %6, i64 %2, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, %3
  br i1 %9, label %39, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5
  tail call void @_ZN2gl16VertexArrayState16setAttribBindingEPKNS_7ContextEmj(%"class.gl::VertexArrayState"* %11, %"class.gl::Context"* %1, i64 %2, i32 %3)
  %12 = add i64 %2, 2
  %13 = shl i64 1, %12
  %14 = and i64 %13, 1125899906842623
  %15 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = or i64 %16, %14
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 7, i32 0, i64 %2, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = or i64 %19, 8
  store i64 %20, i64* %18, align 8
  %21 = zext i32 %3 to i64
  %22 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %23 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %22, align 8
  %24 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %23, i64 %21, i32 3, i32 0, i32 1
  %25 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %24, align 8
  %26 = icmp eq %"class.gl::Buffer"* %25, null
  %27 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 6
  %28 = shl i64 1, %2
  br i1 %26, label %29, label %34

29:                                               ; preds = %10
  %30 = and i64 %28, 65535
  %31 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %27, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = or i64 %32, %30
  store i64 %33, i64* %31, align 8
  br label %39

34:                                               ; preds = %10
  %35 = xor i64 %28, -1
  %36 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %27, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, %35
  store i64 %38, i64* %36, align 8
  br label %39

39:                                               ; preds = %34, %29, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray23setVertexBindingDivisorEmj(%"class.gl::VertexArray"* nocapture, i64, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %5 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %5, i64 %1
  %7 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %5, i64 %1, i32 1
  store i32 %2, i32* %7, align 4
  %8 = add i64 %1, 18
  %9 = shl i64 1, %8
  %10 = and i64 %9, 1125899906842623
  %11 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = or i64 %12, %10
  store i64 %13, i64* %11, align 8
  %14 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 8, i32 0, i64 %1, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = or i64 %15, 2
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %5, i64 %1, i32 4, i32 0
  %18 = load i64, i64* %17, align 8, !noalias !17
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %3
  %21 = tail call i64 @llvm.cttz.i64(i64 %18, i1 true) #16, !range !12
  %22 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  br label %24

23:                                               ; preds = %24, %3
  ret void

24:                                               ; preds = %20, %24
  %25 = phi i64 [ %21, %20 ], [ %33, %24 ]
  %26 = phi i64 [ %18, %20 ], [ %31, %24 ]
  %27 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %22, align 8
  %28 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %27, i64 %25
  tail call void @_ZN2gl15VertexAttribute24updateCachedElementLimitERKNS_13VertexBindingE(%"struct.gl::VertexAttribute"* %28, %"class.gl::VertexBinding"* dereferenceable(40) %6) #16
  %29 = shl i64 1, %25
  %30 = xor i64 %29, -1
  %31 = and i64 %26, %30
  %32 = icmp eq i64 %31, 0
  %33 = tail call i64 @llvm.cttz.i64(i64 %31, i1 true) #16, !range !12
  br i1 %32, label %23, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray21setVertexAttribFormatEmiNS_16VertexAttribTypeEbbj(%"class.gl::VertexArray"* nocapture, i64, i32, i32, i1 zeroext, i1 zeroext, i32) local_unnamed_addr #1 align 2 {
  %8 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %9 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %8, align 8
  %10 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %9, i64 %1
  br i1 %5, label %11, label %17

11:                                               ; preds = %7
  %12 = icmp ult i32 %3, 6
  br i1 %12, label %13, label %17

13:                                               ; preds = %11
  %14 = sext i32 %3 to i64
  %15 = getelementptr inbounds [6 x i64], [6 x i64]* @switch.table._ZN2gl11VertexArray23setVertexAttribIPointerEPKNS_7ContextEmPNS_6BufferEiNS_16VertexAttribTypeEiPKv, i64 0, i64 %14
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %11, %13, %7
  %18 = phi i64 [ 0, %7 ], [ %16, %13 ], [ 3, %11 ]
  %19 = trunc i64 %1 to i32
  %20 = shl i32 65537, %19
  %21 = xor i32 %20, -1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 5, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, %22
  %26 = getelementptr inbounds %"class.angle::PackedEnumMap.643", %"class.angle::PackedEnumMap.643"* @_ZN2glL15kComponentMasksE, i64 0, i32 0, i32 0, i64 %18
  %27 = load i32, i32* %26, align 4
  %28 = shl i32 %27, %19
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  store i64 %30, i64* %23, align 8
  %31 = zext i1 %4 to i8
  %32 = tail call i32 @_ZN2gl17GetVertexFormatIDENS_16VertexAttribTypeEhjb(i32 %3, i8 zeroext %31, i32 %2, i1 zeroext %5) #16
  %33 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %9, i64 %1, i32 1
  %34 = load %"struct.angle::Format"*, %"struct.angle::Format"** %33, align 8
  %35 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %32, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %17
  %39 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %9, i64 %1, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, %6
  br i1 %41, label %55, label %42

42:                                               ; preds = %17, %38
  %43 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %9, i64 %1, i32 3
  store i32 %6, i32* %43, align 8
  %44 = sext i32 %32 to i64
  %45 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %44
  store %"struct.angle::Format"* %45, %"struct.angle::Format"** %33, align 8
  %46 = add i64 %1, 2
  %47 = shl i64 1, %46
  %48 = and i64 %47, 1125899906842623
  %49 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = or i64 %50, %48
  store i64 %51, i64* %49, align 8
  %52 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 7, i32 0, i64 %1, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = or i64 %53, 4
  store i64 %54, i64* %52, align 8
  br label %55

55:                                               ; preds = %38, %42
  %56 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %9, i64 %1, i32 5
  %57 = load i32, i32* %56, align 8
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %60 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %59, align 8
  %61 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %60, i64 %58
  tail call void @_ZN2gl15VertexAttribute24updateCachedElementLimitERKNS_13VertexBindingE(%"struct.gl::VertexAttribute"* %10, %"class.gl::VertexBinding"* dereferenceable(40) %61) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray22setVertexAttribDivisorEPKNS_7ContextEmj(%"class.gl::VertexArray"* nocapture, %"class.gl::Context"* nocapture readonly, i64, i32) local_unnamed_addr #1 align 2 {
  %5 = trunc i64 %2 to i32
  %6 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %7 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %6, align 8
  %8 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %7, i64 %2, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %5
  br i1 %10, label %11, label %14

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %13 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %12, align 8
  br label %43

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5
  tail call void @_ZN2gl16VertexArrayState16setAttribBindingEPKNS_7ContextEmj(%"class.gl::VertexArrayState"* %15, %"class.gl::Context"* %1, i64 %2, i32 %5) #16
  %16 = add i64 %2, 2
  %17 = shl i64 1, %16
  %18 = and i64 %17, 1125899906842623
  %19 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = or i64 %20, %18
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 7, i32 0, i64 %2, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = or i64 %23, 8
  store i64 %24, i64* %22, align 8
  %25 = and i64 %2, 4294967295
  %26 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %27 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %26, align 8
  %28 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %27, i64 %25, i32 3, i32 0, i32 1
  %29 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %28, align 8
  %30 = icmp eq %"class.gl::Buffer"* %29, null
  %31 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 6
  %32 = shl i64 1, %2
  br i1 %30, label %33, label %38

33:                                               ; preds = %14
  %34 = and i64 %32, 65535
  %35 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %31, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = or i64 %36, %34
  store i64 %37, i64* %35, align 8
  br label %43

38:                                               ; preds = %14
  %39 = xor i64 %32, -1
  %40 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %31, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, %39
  store i64 %42, i64* %40, align 8
  br label %43

43:                                               ; preds = %11, %33, %38
  %44 = phi %"class.gl::VertexBinding"* [ %13, %11 ], [ %27, %33 ], [ %27, %38 ]
  %45 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %44, i64 %2
  %46 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %44, i64 %2, i32 1
  store i32 %3, i32* %46, align 4
  %47 = add i64 %2, 18
  %48 = shl i64 1, %47
  %49 = and i64 %48, 1125899906842623
  %50 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = or i64 %51, %49
  store i64 %52, i64* %50, align 8
  %53 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 8, i32 0, i64 %2, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = or i64 %54, 2
  store i64 %55, i64* %53, align 8
  %56 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %44, i64 %2, i32 4, i32 0
  %57 = load i64, i64* %56, align 8, !noalias !20
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %43
  %60 = tail call i64 @llvm.cttz.i64(i64 %57, i1 true) #16, !range !12
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i64 [ %60, %59 ], [ %70, %61 ]
  %63 = phi i64 [ %57, %59 ], [ %68, %61 ]
  %64 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %6, align 8
  %65 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %64, i64 %62
  tail call void @_ZN2gl15VertexAttribute24updateCachedElementLimitERKNS_13VertexBindingE(%"struct.gl::VertexAttribute"* %65, %"class.gl::VertexBinding"* dereferenceable(40) %45) #16
  %66 = shl i64 1, %62
  %67 = xor i64 %66, -1
  %68 = and i64 %63, %67
  %69 = icmp eq i64 %68, 0
  %70 = tail call i64 @llvm.cttz.i64(i64 %68, i1 true) #16, !range !12
  br i1 %69, label %71, label %61

71:                                               ; preds = %61, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray15enableAttributeEmb(%"class.gl::VertexArray"* nocapture, i64, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 4, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = shl i64 1, %1
  %7 = and i64 %5, %6
  %8 = icmp ne i64 %7, 0
  %9 = xor i1 %8, %2
  br i1 %9, label %10, label %65

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %12 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %11, align 8
  %13 = zext i1 %2 to i8
  %14 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %12, i64 %1, i32 0
  store i8 %13, i8* %14, align 8
  %15 = add i64 %1, 2
  %16 = shl i64 1, %15
  %17 = and i64 %16, 1125899906842623
  %18 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = or i64 %19, %17
  store i64 %20, i64* %18, align 8
  %21 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 7, i32 0, i64 %1, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = or i64 %22, 1
  store i64 %23, i64* %21, align 8
  br i1 %2, label %24, label %28

24:                                               ; preds = %10
  %25 = and i64 %6, 65535
  %26 = load i64, i64* %4, align 8
  %27 = or i64 %26, %25
  br label %32

28:                                               ; preds = %10
  %29 = xor i64 %6, -1
  %30 = load i64, i64* %4, align 8
  %31 = and i64 %30, %29
  br label %32

32:                                               ; preds = %24, %28
  %33 = phi i64 [ %31, %28 ], [ %27, %24 ]
  store i64 %33, i64* %4, align 8
  %34 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %35 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %34, align 8
  %36 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %35, i64 %1, i32 3, i32 0, i32 1
  %37 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %36, align 8
  %38 = icmp eq %"class.gl::Buffer"* %37, null
  br i1 %38, label %53, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %37, i64 0, i32 4, i32 14
  %41 = load i8, i8* %40, align 4
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %37, i64 0, i32 4, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 64
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %39, %43
  %49 = and i64 %6, 65535
  %50 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 9, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = or i64 %51, %49
  store i64 %52, i64* %50, align 8
  br label %58

53:                                               ; preds = %32, %43
  %54 = xor i64 %6, -1
  %55 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 9, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %56, %54
  store i64 %57, i64* %55, align 8
  br label %58

58:                                               ; preds = %48, %53
  %59 = phi i64 [ %52, %48 ], [ %57, %53 ]
  %60 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 8, i32 0
  %61 = load i64, i64* %60, align 8, !noalias !23
  %62 = and i64 %33, %61
  %63 = and i64 %62, %59
  %64 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 10, i32 0
  store i64 %63, i64* %64, align 8
  br label %65

65:                                               ; preds = %3, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray22setVertexAttribPointerEPKNS_7ContextEmPNS_6BufferEiNS_16VertexAttribTypeEbiPKv(%"class.gl::VertexArray"* nocapture, %"class.gl::Context"*, i64, %"class.gl::Buffer"*, i32, i32, i1 zeroext, i32, i8*) local_unnamed_addr #1 align 2 {
  %10 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %11 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %10, align 8
  %12 = trunc i64 %2 to i32
  %13 = shl i32 65537, %12
  %14 = xor i32 %13, -1
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 5, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, %15
  %19 = zext i32 %13 to i64
  %20 = or i64 %18, %19
  store i64 %20, i64* %16, align 8
  %21 = zext i1 %6 to i8
  %22 = tail call i32 @_ZN2gl17GetVertexFormatIDENS_16VertexAttribTypeEhjb(i32 %5, i8 zeroext %21, i32 %4, i1 zeroext false) #16
  %23 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %11, i64 %2, i32 1
  %24 = load %"struct.angle::Format"*, %"struct.angle::Format"** %23, align 8
  %25 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %22, %26
  br i1 %27, label %28, label %32

28:                                               ; preds = %9
  %29 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %11, i64 %2, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %28, %9
  %33 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %11, i64 %2, i32 3
  store i32 0, i32* %33, align 8
  %34 = sext i32 %22 to i64
  %35 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %34
  store %"struct.angle::Format"* %35, %"struct.angle::Format"** %23, align 8
  br label %36

36:                                               ; preds = %32, %28
  %37 = phi i1 [ true, %32 ], [ false, %28 ]
  %38 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %11, i64 %2, i32 5
  %39 = load i32, i32* %38, align 8
  %40 = zext i32 %39 to i64
  %41 = icmp eq i64 %40, %2
  br i1 %41, label %76, label %42

42:                                               ; preds = %36
  %43 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %10, align 8
  %44 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %43, i64 %2, i32 5
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, %12
  br i1 %46, label %76, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5
  tail call void @_ZN2gl16VertexArrayState16setAttribBindingEPKNS_7ContextEmj(%"class.gl::VertexArrayState"* %48, %"class.gl::Context"* %1, i64 %2, i32 %12) #16
  %49 = add i64 %2, 2
  %50 = shl i64 1, %49
  %51 = and i64 %50, 1125899906842623
  %52 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = or i64 %53, %51
  store i64 %54, i64* %52, align 8
  %55 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 7, i32 0, i64 %2, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = or i64 %56, 8
  store i64 %57, i64* %55, align 8
  %58 = and i64 %2, 4294967295
  %59 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %60 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %59, align 8
  %61 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %60, i64 %58, i32 3, i32 0, i32 1
  %62 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %61, align 8
  %63 = icmp eq %"class.gl::Buffer"* %62, null
  %64 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 6
  %65 = shl i64 1, %2
  br i1 %63, label %66, label %71

66:                                               ; preds = %47
  %67 = and i64 %65, 65535
  %68 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %64, i64 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = or i64 %69, %67
  store i64 %70, i64* %68, align 8
  br label %76

71:                                               ; preds = %47
  %72 = xor i64 %65, -1
  %73 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %64, i64 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = and i64 %74, %72
  store i64 %75, i64* %73, align 8
  br label %76

76:                                               ; preds = %71, %66, %42, %36
  %77 = icmp eq i32 %7, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %76
  %79 = load %"struct.angle::Format"*, %"struct.angle::Format"** %23, align 8
  %80 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %79, i64 0, i32 15
  %81 = load i32, i32* %80, align 8
  br label %82

82:                                               ; preds = %78, %76
  %83 = phi i32 [ %81, %78 ], [ %7, %76 ]
  %84 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %11, i64 %2, i32 4
  %85 = load i32, i32* %84, align 4
  %86 = icmp ne i32 %85, %7
  %87 = or i1 %37, %86
  store i32 %7, i32* %84, align 4
  %88 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %89 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %88, align 8
  %90 = icmp eq %"class.gl::Buffer"* %3, null
  %91 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %89, i64 %2, i32 3, i32 0, i32 1
  %92 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %91, align 8
  %93 = icmp eq %"class.gl::Buffer"* %92, null
  %94 = xor i1 %90, %93
  %95 = or i1 %87, %94
  %96 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %11, i64 %2, i32 2
  store i8* %8, i8** %96, align 8
  %97 = ptrtoint i8* %8 to i64
  %98 = select i1 %90, i64 0, i64 %97
  %99 = tail call zeroext i1 @_ZN2gl11VertexArray20bindVertexBufferImplEPKNS_7ContextEmPNS_6BufferEli(%"class.gl::VertexArray"* %0, %"class.gl::Context"* %1, i64 %2, %"class.gl::Buffer"* %3, i64 %98, i32 %83) #16
  %100 = or i1 %95, %99
  br i1 %100, label %101, label %112

101:                                              ; preds = %82
  %102 = select i1 %95, i64 2, i64 16
  %103 = add i64 %2, 2
  %104 = shl i64 1, %103
  %105 = and i64 %104, 1125899906842623
  %106 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = or i64 %107, %105
  store i64 %108, i64* %106, align 8
  %109 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 7, i32 0, i64 %2, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = or i64 %110, %102
  store i64 %111, i64* %109, align 8
  br label %112

112:                                              ; preds = %82, %101
  %113 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 7
  %114 = icmp eq i8* %8, null
  %115 = and i1 %90, %114
  %116 = shl i64 1, %2
  br i1 %115, label %117, label %122

117:                                              ; preds = %112
  %118 = and i64 %116, 65535
  %119 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %113, i64 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = or i64 %120, %118
  store i64 %121, i64* %119, align 8
  br label %127

122:                                              ; preds = %112
  %123 = xor i64 %116, -1
  %124 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %113, i64 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, %123
  store i64 %126, i64* %124, align 8
  br label %127

127:                                              ; preds = %117, %122
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray23setVertexAttribIPointerEPKNS_7ContextEmPNS_6BufferEiNS_16VertexAttribTypeEiPKv(%"class.gl::VertexArray"* nocapture, %"class.gl::Context"*, i64, %"class.gl::Buffer"*, i32, i32, i32, i8*) local_unnamed_addr #1 align 2 {
  %9 = icmp ult i32 %5, 6
  br i1 %9, label %10, label %14

10:                                               ; preds = %8
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds [6 x i64], [6 x i64]* @switch.table._ZN2gl11VertexArray23setVertexAttribIPointerEPKNS_7ContextEmPNS_6BufferEiNS_16VertexAttribTypeEiPKv, i64 0, i64 %11
  %13 = load i64, i64* %12, align 8
  br label %14

14:                                               ; preds = %8, %10
  %15 = phi i64 [ %13, %10 ], [ 3, %8 ]
  %16 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %17 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %16, align 8
  %18 = trunc i64 %2 to i32
  %19 = shl i32 65537, %18
  %20 = xor i32 %19, -1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 5, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, %21
  %25 = getelementptr inbounds %"class.angle::PackedEnumMap.643", %"class.angle::PackedEnumMap.643"* @_ZN2glL15kComponentMasksE, i64 0, i32 0, i32 0, i64 %15
  %26 = load i32, i32* %25, align 4
  %27 = shl i32 %26, %18
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  store i64 %29, i64* %22, align 8
  %30 = tail call i32 @_ZN2gl17GetVertexFormatIDENS_16VertexAttribTypeEhjb(i32 %5, i8 zeroext 0, i32 %4, i1 zeroext true) #16
  %31 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %17, i64 %2, i32 1
  %32 = load %"struct.angle::Format"*, %"struct.angle::Format"** %31, align 8
  %33 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %30, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %14
  %37 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %17, i64 %2, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %36, %14
  %41 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %17, i64 %2, i32 3
  store i32 0, i32* %41, align 8
  %42 = sext i32 %30 to i64
  %43 = getelementptr inbounds [0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 %42
  store %"struct.angle::Format"* %43, %"struct.angle::Format"** %31, align 8
  br label %44

44:                                               ; preds = %40, %36
  %45 = phi i1 [ true, %40 ], [ false, %36 ]
  %46 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %17, i64 %2, i32 5
  %47 = load i32, i32* %46, align 8
  %48 = zext i32 %47 to i64
  %49 = icmp eq i64 %48, %2
  br i1 %49, label %84, label %50

50:                                               ; preds = %44
  %51 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %16, align 8
  %52 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %51, i64 %2, i32 5
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, %18
  br i1 %54, label %84, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5
  tail call void @_ZN2gl16VertexArrayState16setAttribBindingEPKNS_7ContextEmj(%"class.gl::VertexArrayState"* %56, %"class.gl::Context"* %1, i64 %2, i32 %18) #16
  %57 = add i64 %2, 2
  %58 = shl i64 1, %57
  %59 = and i64 %58, 1125899906842623
  %60 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = or i64 %61, %59
  store i64 %62, i64* %60, align 8
  %63 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 7, i32 0, i64 %2, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = or i64 %64, 8
  store i64 %65, i64* %63, align 8
  %66 = and i64 %2, 4294967295
  %67 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %68 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %67, align 8
  %69 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %68, i64 %66, i32 3, i32 0, i32 1
  %70 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %69, align 8
  %71 = icmp eq %"class.gl::Buffer"* %70, null
  %72 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 6
  %73 = shl i64 1, %2
  br i1 %71, label %74, label %79

74:                                               ; preds = %55
  %75 = and i64 %73, 65535
  %76 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %72, i64 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = or i64 %77, %75
  store i64 %78, i64* %76, align 8
  br label %84

79:                                               ; preds = %55
  %80 = xor i64 %73, -1
  %81 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %72, i64 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, %80
  store i64 %83, i64* %81, align 8
  br label %84

84:                                               ; preds = %79, %74, %50, %44
  %85 = icmp eq i32 %6, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %84
  %87 = load %"struct.angle::Format"*, %"struct.angle::Format"** %31, align 8
  %88 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %87, i64 0, i32 15
  %89 = load i32, i32* %88, align 8
  br label %90

90:                                               ; preds = %86, %84
  %91 = phi i32 [ %89, %86 ], [ %6, %84 ]
  %92 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %17, i64 %2, i32 4
  %93 = load i32, i32* %92, align 4
  %94 = icmp ne i32 %93, %6
  %95 = or i1 %45, %94
  store i32 %6, i32* %92, align 4
  %96 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %97 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %96, align 8
  %98 = icmp eq %"class.gl::Buffer"* %3, null
  %99 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %97, i64 %2, i32 3, i32 0, i32 1
  %100 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %99, align 8
  %101 = icmp eq %"class.gl::Buffer"* %100, null
  %102 = xor i1 %98, %101
  %103 = or i1 %95, %102
  %104 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %17, i64 %2, i32 2
  store i8* %7, i8** %104, align 8
  %105 = ptrtoint i8* %7 to i64
  %106 = select i1 %98, i64 0, i64 %105
  %107 = tail call zeroext i1 @_ZN2gl11VertexArray20bindVertexBufferImplEPKNS_7ContextEmPNS_6BufferEli(%"class.gl::VertexArray"* %0, %"class.gl::Context"* %1, i64 %2, %"class.gl::Buffer"* %3, i64 %106, i32 %91) #16
  %108 = or i1 %103, %107
  br i1 %108, label %109, label %120

109:                                              ; preds = %90
  %110 = select i1 %103, i64 2, i64 16
  %111 = add i64 %2, 2
  %112 = shl i64 1, %111
  %113 = and i64 %112, 1125899906842623
  %114 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = or i64 %115, %113
  store i64 %116, i64* %114, align 8
  %117 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 7, i32 0, i64 %2, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %110
  store i64 %119, i64* %117, align 8
  br label %120

120:                                              ; preds = %90, %109
  %121 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 7
  %122 = icmp eq i8* %7, null
  %123 = and i1 %98, %122
  %124 = shl i64 1, %2
  br i1 %123, label %125, label %130

125:                                              ; preds = %120
  %126 = and i64 %124, 65535
  %127 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %121, i64 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = or i64 %128, %126
  store i64 %129, i64* %127, align 8
  br label %135

130:                                              ; preds = %120
  %131 = xor i64 %124, -1
  %132 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %121, i64 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = and i64 %133, %131
  store i64 %134, i64* %132, align 8
  br label %135

135:                                              ; preds = %125, %130
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl11VertexArray9syncStateEPKNS_7ContextE(%"class.gl::VertexArray"*, %"class.gl::Context"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.angle::BitSetT.400", %"class.angle::BitSetT.400"* %3, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 9, i32 1, i32 0
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 9, i32 0
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 10
  %11 = load %"class.rx::VertexArrayImpl"*, %"class.rx::VertexArrayImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 7
  %13 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 8
  %14 = bitcast %"class.rx::VertexArrayImpl"* %11 to i32 (%"class.rx::VertexArrayImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.400"*, %"struct.std::__1::array.401"*, %"struct.std::__1::array.403"*)***
  %15 = load i32 (%"class.rx::VertexArrayImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.400"*, %"struct.std::__1::array.401"*, %"struct.std::__1::array.403"*)**, i32 (%"class.rx::VertexArrayImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.400"*, %"struct.std::__1::array.401"*, %"struct.std::__1::array.403"*)*** %14, align 8
  %16 = load i32 (%"class.rx::VertexArrayImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.400"*, %"struct.std::__1::array.401"*, %"struct.std::__1::array.403"*)*, i32 (%"class.rx::VertexArrayImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.400"*, %"struct.std::__1::array.401"*, %"struct.std::__1::array.403"*)** %15, align 8
  %17 = tail call i32 %16(%"class.rx::VertexArrayImpl"* %11, %"class.gl::Context"* %1, %"class.angle::BitSetT.400"* dereferenceable(8) %3, %"struct.std::__1::array.401"* %12, %"struct.std::__1::array.403"* %13) #16
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %20, label %19

19:                                               ; preds = %7
  store i64 0, i64* %4, align 8
  store i8 0, i8* %9, align 8
  br label %20

20:                                               ; preds = %7, %2, %19
  %21 = phi i32 [ 1, %7 ], [ 0, %19 ], [ 0, %2 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray16onBindingChangedEPKNS_7ContextEi(%"class.gl::VertexArray"* nocapture readonly, %"class.gl::Context"*, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %5 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %4, align 8
  %6 = icmp eq %"class.gl::Buffer"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %5, i64 0, i32 4, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, %2
  store i32 %10, i32* %8, align 8
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %13 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %12, align 8
  %14 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 1
  %15 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %14, align 8
  %16 = icmp eq %"class.gl::VertexBinding"* %13, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %18, %11
  ret void

18:                                               ; preds = %11, %18
  %19 = phi %"class.gl::VertexBinding"* [ %20, %18 ], [ %13, %11 ]
  tail call void @_ZNK2gl13VertexBinding25onContainerBindingChangedEPKNS_7ContextEi(%"class.gl::VertexBinding"* %19, %"class.gl::Context"* %1, i32 %2) #16
  %20 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %19, i64 1
  %21 = icmp eq %"class.gl::VertexBinding"* %20, %15
  br i1 %21, label %17, label %18
}

declare void @_ZNK2gl13VertexBinding25onContainerBindingChangedEPKNS_7ContextEi(%"class.gl::VertexBinding"*, %"class.gl::Context"*, i32) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZNK2gl11VertexArray20getDirtyBitFromIndexEbm(%"class.gl::VertexArray"* nocapture, i1 zeroext, i64) local_unnamed_addr #10 align 2 {
  %4 = icmp eq i64 %2, 16
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 13, i32 0
  store i64 3, i64* %6, align 8
  %7 = zext i1 %1 to i32
  br label %12

8:                                                ; preds = %3
  %9 = select i1 %1, i64 34, i64 18
  %10 = add i64 %9, %2
  %11 = trunc i64 %10 to i32
  br label %12

12:                                               ; preds = %8, %5
  %13 = phi i32 [ %7, %5 ], [ %11, %8 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray20onSubjectStateChangeEmN5angle14SubjectMessageE(%"class.gl::VertexArray"*, i64, i32) unnamed_addr #1 align 2 {
  switch i32 %2, label %231 [
    i32 1, label %4
    i32 3, label %19
    i32 0, label %58
    i32 4, label %91
    i32 5, label %155
  ]

4:                                                ; preds = %3
  %5 = icmp eq i64 %1, 16
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 13, i32 0
  store i64 3, i64* %7, align 8
  br label %11

8:                                                ; preds = %4
  %9 = add i64 %1, 34
  %10 = and i64 %9, 4294967295
  br label %11

11:                                               ; preds = %6, %8
  %12 = phi i64 [ 1, %6 ], [ %10, %8 ]
  %13 = shl i64 1, %12
  %14 = and i64 %13, 1125899906842623
  %15 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = or i64 %14, %16
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 2
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %18, i32 1) #16
  br label %231

19:                                               ; preds = %3
  %20 = icmp eq i64 %1, 16
  br i1 %20, label %45, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %23 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %22, align 8
  %24 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %23, i64 %1
  %25 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 14
  %26 = load i8, i8* %25, align 8, !range !5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %23, i64 %1, i32 4, i32 0
  %30 = load i64, i64* %29, align 8, !noalias !26
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %47, label %32

32:                                               ; preds = %28
  %33 = tail call i64 @llvm.cttz.i64(i64 %30, i1 true) #16, !range !12
  %34 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  br label %35

35:                                               ; preds = %35, %32
  %36 = phi i64 [ %33, %32 ], [ %44, %35 ]
  %37 = phi i64 [ %30, %32 ], [ %42, %35 ]
  %38 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %34, align 8
  %39 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %38, i64 %36
  tail call void @_ZN2gl15VertexAttribute24updateCachedElementLimitERKNS_13VertexBindingE(%"struct.gl::VertexAttribute"* %39, %"class.gl::VertexBinding"* dereferenceable(40) %24) #16
  %40 = shl i64 1, %36
  %41 = xor i64 %40, -1
  %42 = and i64 %37, %41
  %43 = icmp eq i64 %42, 0
  %44 = tail call i64 @llvm.cttz.i64(i64 %42, i1 true) #16, !range !12
  br i1 %43, label %47, label %35

45:                                               ; preds = %19
  %46 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 13, i32 0
  store i64 3, i64* %46, align 8
  br label %50

47:                                               ; preds = %35, %21, %28
  %48 = add i64 %1, 18
  %49 = and i64 %48, 4294967295
  br label %50

50:                                               ; preds = %45, %47
  %51 = phi i64 [ 0, %45 ], [ %49, %47 ]
  %52 = shl i64 1, %51
  %53 = and i64 %52, 1125899906842623
  %54 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = or i64 %53, %55
  store i64 %56, i64* %54, align 8
  %57 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 2
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %57, i32 1) #16
  br label %231

58:                                               ; preds = %3
  %59 = icmp eq i64 %1, 16
  br i1 %59, label %231, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %62 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %61, align 8
  %63 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %62, i64 %1, i32 3, i32 0, i32 1
  %64 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %63, align 8
  %65 = icmp eq %"class.gl::Buffer"* %64, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %64, i64 0, i32 4, i32 12
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %66, %60
  %71 = shl i64 1, %1
  br label %85

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %64, i64 0, i32 4, i32 11
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %64, i64 0, i32 4, i32 13
  %76 = load i32, i32* %75, align 8
  %77 = sub nsw i32 %74, %76
  %78 = icmp eq i32 %68, %77
  %79 = shl i64 1, %1
  br i1 %78, label %85, label %80

80:                                               ; preds = %72
  %81 = and i64 %79, 65535
  %82 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 12, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = or i64 %83, %81
  store i64 %84, i64* %82, align 8
  br label %231

85:                                               ; preds = %72, %70
  %86 = phi i64 [ %71, %70 ], [ %79, %72 ]
  %87 = xor i64 %86, -1
  %88 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 12, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = and i64 %89, %87
  store i64 %90, i64* %88, align 8
  br label %231

91:                                               ; preds = %3
  %92 = icmp eq i64 %1, 16
  br i1 %92, label %153, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %95 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %94, align 8
  %96 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %95, i64 %1, i32 3, i32 0, i32 1
  %97 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %96, align 8
  %98 = icmp eq %"class.gl::Buffer"* %97, null
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %95, i64 %1, i32 4, i32 0
  %101 = load i64, i64* %100, align 8
  br label %119

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %97, i64 0, i32 4, i32 6
  %104 = load i8, i8* %103, align 8
  %105 = icmp eq i8 %104, 0
  %106 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %97, i64 0, i32 4, i32 14
  %107 = load i8, i8* %106, align 4
  %108 = icmp ne i8 %107, 0
  %109 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %97, i64 0, i32 4, i32 4
  %110 = load i32, i32* %109, align 8
  %111 = and i32 %110, 64
  %112 = icmp ne i32 %111, 0
  %113 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %95, i64 %1, i32 4, i32 0
  %114 = load i64, i64* %113, align 8
  br i1 %105, label %119, label %115

115:                                              ; preds = %102
  %116 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 8, i32 0
  %117 = load i64, i64* %116, align 8
  %118 = or i64 %117, %114
  store i64 %118, i64* %116, align 8
  br label %129

119:                                              ; preds = %102, %99
  %120 = phi i64 [ %101, %99 ], [ %114, %102 ]
  %121 = phi i64* [ %100, %99 ], [ %113, %102 ]
  %122 = phi i1 [ false, %99 ], [ %112, %102 ]
  %123 = phi i1 [ false, %99 ], [ %108, %102 ]
  %124 = and i64 %120, 65535
  %125 = xor i64 %124, 65535
  %126 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 8, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = and i64 %127, %125
  store i64 %128, i64* %126, align 8
  br label %129

129:                                              ; preds = %119, %115
  %130 = phi i64* [ %121, %119 ], [ %113, %115 ]
  %131 = phi i1 [ %122, %119 ], [ %112, %115 ]
  %132 = phi i1 [ %123, %119 ], [ %108, %115 ]
  %133 = phi i64 [ %128, %119 ], [ %118, %115 ]
  %134 = and i1 %131, %132
  %135 = load i64, i64* %130, align 8
  br i1 %134, label %140, label %136

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 9, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = or i64 %138, %135
  store i64 %139, i64* %137, align 8
  br label %146

140:                                              ; preds = %129
  %141 = and i64 %135, 65535
  %142 = xor i64 %141, 65535
  %143 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 9, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, %142
  store i64 %145, i64* %143, align 8
  br label %146

146:                                              ; preds = %136, %140
  %147 = phi i64 [ %145, %140 ], [ %139, %136 ]
  %148 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 4, i32 0
  %149 = load i64, i64* %148, align 8, !noalias !29
  %150 = and i64 %147, %133
  %151 = and i64 %150, %149
  %152 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 10, i32 0
  store i64 %151, i64* %152, align 8
  br label %153

153:                                              ; preds = %146, %91
  %154 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 2
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %154, i32 4) #16
  br label %231

155:                                              ; preds = %3
  %156 = icmp eq i64 %1, 16
  br i1 %156, label %157, label %159

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 13, i32 0
  store i64 3, i64* %158, align 8
  br label %162

159:                                              ; preds = %155
  %160 = add i64 %1, 34
  %161 = and i64 %160, 4294967295
  br label %162

162:                                              ; preds = %157, %159
  %163 = phi i64 [ 1, %157 ], [ %161, %159 ]
  %164 = shl i64 1, %163
  %165 = and i64 %164, 1125899906842623
  %166 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %167 = load i64, i64* %166, align 8
  %168 = or i64 %165, %167
  store i64 %168, i64* %166, align 8
  %169 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 2
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %169, i32 1) #16
  br i1 %156, label %230, label %170

170:                                              ; preds = %162
  %171 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 3, i32 0, i32 0
  %172 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %171, align 8
  %173 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %172, i64 %1, i32 3, i32 0, i32 1
  %174 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %173, align 8
  %175 = icmp eq %"class.gl::Buffer"* %174, null
  br i1 %175, label %176, label %179

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %172, i64 %1, i32 4, i32 0
  %178 = load i64, i64* %177, align 8
  br label %196

179:                                              ; preds = %170
  %180 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %174, i64 0, i32 4, i32 6
  %181 = load i8, i8* %180, align 8
  %182 = icmp eq i8 %181, 0
  %183 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %174, i64 0, i32 4, i32 14
  %184 = load i8, i8* %183, align 4
  %185 = icmp ne i8 %184, 0
  %186 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %174, i64 0, i32 4, i32 4
  %187 = load i32, i32* %186, align 8
  %188 = and i32 %187, 64
  %189 = icmp ne i32 %188, 0
  %190 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %172, i64 %1, i32 4, i32 0
  %191 = load i64, i64* %190, align 8
  br i1 %182, label %196, label %192

192:                                              ; preds = %179
  %193 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 8, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = or i64 %194, %191
  store i64 %195, i64* %193, align 8
  br label %206

196:                                              ; preds = %179, %176
  %197 = phi i64 [ %178, %176 ], [ %191, %179 ]
  %198 = phi i64* [ %177, %176 ], [ %190, %179 ]
  %199 = phi i1 [ false, %176 ], [ %189, %179 ]
  %200 = phi i1 [ false, %176 ], [ %185, %179 ]
  %201 = and i64 %197, 65535
  %202 = xor i64 %201, 65535
  %203 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 8, i32 0
  %204 = load i64, i64* %203, align 8
  %205 = and i64 %204, %202
  store i64 %205, i64* %203, align 8
  br label %206

206:                                              ; preds = %196, %192
  %207 = phi i64* [ %198, %196 ], [ %190, %192 ]
  %208 = phi i1 [ %199, %196 ], [ %189, %192 ]
  %209 = phi i1 [ %200, %196 ], [ %185, %192 ]
  %210 = phi i64 [ %205, %196 ], [ %195, %192 ]
  %211 = and i1 %208, %209
  %212 = load i64, i64* %207, align 8
  br i1 %211, label %217, label %213

213:                                              ; preds = %206
  %214 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 9, i32 0
  %215 = load i64, i64* %214, align 8
  %216 = or i64 %215, %212
  store i64 %216, i64* %214, align 8
  br label %223

217:                                              ; preds = %206
  %218 = and i64 %212, 65535
  %219 = xor i64 %218, 65535
  %220 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 9, i32 0
  %221 = load i64, i64* %220, align 8
  %222 = and i64 %221, %219
  store i64 %222, i64* %220, align 8
  br label %223

223:                                              ; preds = %213, %217
  %224 = phi i64 [ %222, %217 ], [ %216, %213 ]
  %225 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 4, i32 0
  %226 = load i64, i64* %225, align 8, !noalias !32
  %227 = and i64 %224, %210
  %228 = and i64 %227, %226
  %229 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 10, i32 0
  store i64 %228, i64* %229, align 8
  br label %230

230:                                              ; preds = %223, %162
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %169, i32 5) #16
  br label %231

231:                                              ; preds = %85, %80, %3, %58, %230, %153, %50, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray20setDependentDirtyBitEbm(%"class.gl::VertexArray"*, i1 zeroext, i64) local_unnamed_addr #1 align 2 {
  %4 = icmp eq i64 %2, 16
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 13, i32 0
  store i64 3, i64* %6, align 8
  %7 = zext i1 %1 to i64
  br label %11

8:                                                ; preds = %3
  %9 = select i1 %1, i64 34, i64 18
  %10 = add i64 %9, %2
  br label %11

11:                                               ; preds = %5, %8
  %12 = phi i64 [ %7, %5 ], [ %10, %8 ]
  %13 = and i64 %12, 4294967295
  %14 = shl i64 1, %13
  %15 = and i64 %14, 1125899906842623
  %16 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 6, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = or i64 %15, %17
  store i64 %18, i64* %16, align 8
  %19 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 2
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %19, i32 1) #16
  ret void
}

declare void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl11VertexArray35hasTransformFeedbackBindingConflictEPKNS_7ContextE(%"class.gl::VertexArray"* nocapture readonly, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 12, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 0, i32 0
  %8 = load i64, i64* %7, align 8, !noalias !35
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %12 = tail call i64 @llvm.cttz.i64(i64 %8, i1 true) #16, !range !12
  %13 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %11, align 8
  br label %14

14:                                               ; preds = %10, %23
  %15 = phi i64 [ %12, %10 ], [ %28, %23 ]
  %16 = phi i64 [ %8, %10 ], [ %26, %23 ]
  %17 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %13, i64 %15, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = shl i64 1, %19
  %21 = and i64 %20, %4
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %14
  %24 = shl i64 1, %15
  %25 = xor i64 %24, -1
  %26 = and i64 %16, %25
  %27 = icmp eq i64 %26, 0
  %28 = tail call i64 @llvm.cttz.i64(i64 %26, i1 true) #16, !range !12
  br i1 %27, label %29, label %14

29:                                               ; preds = %14, %23, %6, %2
  %30 = phi i1 [ false, %2 ], [ false, %6 ], [ true, %14 ], [ false, %23 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2gl11VertexArray17getIndexRangeImplEPKNS_7ContextENS_16DrawElementsTypeEiPKvPNS_10IndexRangeE(%"class.gl::VertexArray"* nocapture, %"class.gl::Context"*, i64, i32, i8*, %"struct.gl::IndexRange"*) local_unnamed_addr #1 align 2 {
  %7 = alloca %"struct.gl::IndexRange", align 8
  %8 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %9 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %8, align 8
  %10 = icmp eq %"class.gl::Buffer"* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = bitcast %"struct.gl::IndexRange"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = sext i32 %3 to i64
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %15 = load i8, i8* %14, align 4, !range !5
  %16 = icmp ne i8 %15, 0
  call void @_ZN2gl17ComputeIndexRangeENS_16DrawElementsTypeEPKvmb(%"struct.gl::IndexRange"* nonnull sret %7, i64 %2, i8* %4, i64 %13, i1 zeroext %16) #16
  %17 = bitcast %"struct.gl::IndexRange"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %12, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  br label %33

18:                                               ; preds = %6
  %19 = ptrtoint i8* %4 to i64
  %20 = sext i32 %3 to i64
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %22 = load i8, i8* %21, align 4, !range !5
  %23 = icmp ne i8 %22, 0
  %24 = tail call i32 @_ZNK2gl6Buffer13getIndexRangeEPKNS_7ContextENS_16DrawElementsTypeEmmbPNS_10IndexRangeE(%"class.gl::Buffer"* nonnull %9, %"class.gl::Context"* %1, i64 %2, i64 %19, i64 %20, i1 zeroext %23, %"struct.gl::IndexRange"* %5) #16
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %33, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 13, i32 0
  store i64 %2, i64* %27, align 8
  %28 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 13, i32 1
  store i32 %3, i32* %28, align 8
  %29 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 13, i32 2
  store i64 %19, i64* %29, align 8
  %30 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %0, i64 0, i32 13, i32 3
  %31 = bitcast %"struct.gl::IndexRange"* %30 to i8*
  %32 = bitcast %"struct.gl::IndexRange"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false) #16
  br label %33

33:                                               ; preds = %18, %26, %11
  %34 = phi i32 [ 0, %11 ], [ 0, %26 ], [ 1, %18 ]
  ret i32 %34
}

declare void @_ZN2gl17ComputeIndexRangeENS_16DrawElementsTypeEPKvmb(%"struct.gl::IndexRange"* sret, i64, i8*, i64, i1 zeroext) local_unnamed_addr #5

declare i32 @_ZNK2gl6Buffer13getIndexRangeEPKNS_7ContextENS_16DrawElementsTypeEmmbPNS_10IndexRangeE(%"class.gl::Buffer"*, %"class.gl::Context"*, i64, i64, i64, i1 zeroext, %"struct.gl::IndexRange"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray15IndexRangeCache3putENS_16DrawElementsTypeEimRKNS_10IndexRangeE(%"class.gl::VertexArray::IndexRangeCache"* nocapture, i64, i32, i64, %"struct.gl::IndexRange"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gl::VertexArray::IndexRangeCache", %"class.gl::VertexArray::IndexRangeCache"* %0, i64 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.gl::VertexArray::IndexRangeCache", %"class.gl::VertexArray::IndexRangeCache"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.gl::VertexArray::IndexRangeCache", %"class.gl::VertexArray::IndexRangeCache"* %0, i64 0, i32 2
  store i64 %3, i64* %8, align 8
  %9 = getelementptr inbounds %"class.gl::VertexArray::IndexRangeCache", %"class.gl::VertexArray::IndexRangeCache"* %0, i64 0, i32 3
  %10 = bitcast %"struct.gl::IndexRange"* %9 to i8*
  %11 = bitcast %"struct.gl::IndexRange"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl11VertexArray15IndexRangeCacheC2Ev(%"class.gl::VertexArray::IndexRangeCache"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::VertexArray::IndexRangeCache", %"class.gl::VertexArray::IndexRangeCache"* %0, i64 0, i32 3
  %3 = bitcast %"struct.gl::IndexRange"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5angle7SubjectD2Ev(%"class.angle::Subject"*) unnamed_addr #6

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl13LabeledObjectD2Ev(%"class.gl::LabeledObject"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl13LabeledObjectD0Ev(%"class.gl::LabeledObject"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

declare void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"*, %"class.angle::Subject"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #12

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @_ZN2gl17GetVertexFormatIDENS_16VertexAttribTypeEhjb(i32, i8 zeroext, i32, i1 zeroext) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl21SubjectBindingPointerINS_6BufferEED0Ev(%"class.gl::SubjectBindingPointer"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.gl::SubjectBindingPointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N2gl21SubjectBindingPointerINS_6BufferEED1Ev(%"class.gl::SubjectBindingPointer"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::SubjectBindingPointer", %"class.gl::SubjectBindingPointer"* %0, i64 -1, i32 1, i32 1
  %3 = bitcast %"class.angle::ObserverInterface"** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N2gl21SubjectBindingPointerINS_6BufferEED0Ev(%"class.gl::SubjectBindingPointer"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::SubjectBindingPointer", %"class.gl::SubjectBindingPointer"* %0, i64 -1, i32 1, i32 1
  %3 = bitcast %"class.angle::ObserverInterface"** %2 to i8*
  tail call void @_ZdlPv(i8* %3) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle19ObserverBindingBase14onSubjectResetEv(%"class.angle::ObserverBindingBase"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev(%"class.angle::BindingPointer.265"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.angle::BindingPointer.265", %"class.angle::BindingPointer.265"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED0Ev(%"class.angle::BindingPointer.265"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.angle::BindingPointer.265"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2gl13VertexBindingD1Ev(%"class.gl::VertexBinding"*) unnamed_addr #6

declare void @_ZN2gl15VertexAttributeC1Ej(%"struct.gl::VertexAttribute"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN2gl15VertexAttributeC1EOS0_(%"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"* dereferenceable(48)) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2gl13VertexBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJjEEEvDpOT_(%"class.std::__1::vector.393"*, i32* dereferenceable(4)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.393", %"class.std::__1::vector.393"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.gl::VertexBinding"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.393"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.393"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.393", %"class.std::__1::vector.393"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.gl::VertexBinding"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #18
  %30 = bitcast i8* %29 to %"class.gl::VertexBinding"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.gl::VertexBinding"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %33, i64 %9
  %35 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %33, i64 %32
  %36 = ptrtoint %"class.gl::VertexBinding"* %35 to i64
  %37 = load i32, i32* %1, align 4
  tail call void @_ZN2gl13VertexBindingC1Ej(%"class.gl::VertexBinding"* %34, i32 %37) #16
  %38 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %34, i64 1
  %39 = ptrtoint %"class.gl::VertexBinding"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::vector.393", %"class.std::__1::vector.393"* %0, i64 0, i32 0, i32 0
  %41 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %40, align 8
  %42 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %3, align 8
  %43 = icmp eq %"class.gl::VertexBinding"* %42, %41
  br i1 %43, label %44, label %46

44:                                               ; preds = %31
  %45 = ptrtoint %"class.gl::VertexBinding"* %41 to i64
  br label %55

46:                                               ; preds = %31, %46
  %47 = phi %"class.gl::VertexBinding"* [ %49, %46 ], [ %34, %31 ]
  %48 = phi %"class.gl::VertexBinding"* [ %50, %46 ], [ %42, %31 ]
  %49 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %47, i64 -1
  %50 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %48, i64 -1
  tail call void @_ZN2gl13VertexBindingC1EOS0_(%"class.gl::VertexBinding"* %49, %"class.gl::VertexBinding"* dereferenceable(40) %50) #16
  %51 = icmp eq %"class.gl::VertexBinding"* %50, %41
  br i1 %51, label %52, label %46

52:                                               ; preds = %46
  %53 = load i64, i64* %6, align 8
  %54 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %3, align 8
  br label %55

55:                                               ; preds = %44, %52
  %56 = phi %"class.gl::VertexBinding"* [ %41, %44 ], [ %54, %52 ]
  %57 = phi %"class.gl::VertexBinding"* [ %34, %44 ], [ %49, %52 ]
  %58 = phi i64 [ %45, %44 ], [ %53, %52 ]
  %59 = ptrtoint %"class.gl::VertexBinding"* %57 to i64
  store i64 %59, i64* %6, align 8
  store i64 %39, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %60 = inttoptr i64 %58 to %"class.gl::VertexBinding"*
  %61 = icmp eq %"class.gl::VertexBinding"* %56, %60
  br i1 %61, label %66, label %62

62:                                               ; preds = %55, %62
  %63 = phi %"class.gl::VertexBinding"* [ %64, %62 ], [ %56, %55 ]
  %64 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %63, i64 -1
  tail call void @_ZN2gl13VertexBindingD1Ev(%"class.gl::VertexBinding"* %64) #16
  %65 = icmp eq %"class.gl::VertexBinding"* %64, %60
  br i1 %65, label %66, label %62

66:                                               ; preds = %62, %55
  %67 = icmp eq i64 %58, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %69) #18
  br label %70

70:                                               ; preds = %66, %68
  ret void
}

declare void @_ZN2gl13VertexBindingC1Ej(%"class.gl::VertexBinding"*, i32) unnamed_addr #5

declare void @_ZN2gl13VertexBindingC1EOS0_(%"class.gl::VertexBinding"*, %"class.gl::VertexBinding"* dereferenceable(40)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5angle15ObserverBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJPN2gl11VertexArrayERmEEEvDpOT_(%"class.std::__1::vector.337"*, %"class.gl::VertexArray"** dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.angle::ObserverBinding"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.337"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 576460752303423487
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.337"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #17
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.angle::ObserverBinding"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 5
  %21 = icmp ult i64 %20, 288230376151711743
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 4
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 576460752303423487
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #17
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 576460752303423487, %15 ]
  %32 = shl i64 %31, 5
  %33 = tail call i8* @_Znwm(i64 %32) #18
  %34 = bitcast i8* %33 to %"class.angle::ObserverBinding"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"class.angle::ObserverBinding"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %37, i64 %10
  %39 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %37, i64 %36
  %40 = ptrtoint %"class.angle::ObserverBinding"* %39 to i64
  %41 = bitcast %"class.gl::VertexArray"** %1 to %"class.angle::ObserverInterface"**
  %42 = load %"class.angle::ObserverInterface"*, %"class.angle::ObserverInterface"** %41, align 8
  %43 = load i64, i64* %2, align 8
  tail call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %38, %"class.angle::ObserverInterface"* %42, i64 %43) #16
  %44 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %38, i64 1
  %45 = ptrtoint %"class.angle::ObserverBinding"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.337", %"class.std::__1::vector.337"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %46, align 8
  %48 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %4, align 8
  %49 = icmp eq %"class.angle::ObserverBinding"* %48, %47
  br i1 %49, label %50, label %52

50:                                               ; preds = %35
  %51 = ptrtoint %"class.angle::ObserverBinding"* %47 to i64
  br label %61

52:                                               ; preds = %35, %52
  %53 = phi %"class.angle::ObserverBinding"* [ %55, %52 ], [ %38, %35 ]
  %54 = phi %"class.angle::ObserverBinding"* [ %56, %52 ], [ %48, %35 ]
  %55 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %53, i64 -1
  %56 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %54, i64 -1
  tail call void @_ZN5angle15ObserverBindingC1ERKS0_(%"class.angle::ObserverBinding"* %55, %"class.angle::ObserverBinding"* dereferenceable(32) %56) #16
  %57 = icmp eq %"class.angle::ObserverBinding"* %56, %47
  br i1 %57, label %58, label %52

58:                                               ; preds = %52
  %59 = load i64, i64* %7, align 8
  %60 = load %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"** %4, align 8
  br label %61

61:                                               ; preds = %50, %58
  %62 = phi %"class.angle::ObserverBinding"* [ %47, %50 ], [ %60, %58 ]
  %63 = phi %"class.angle::ObserverBinding"* [ %38, %50 ], [ %55, %58 ]
  %64 = phi i64 [ %51, %50 ], [ %59, %58 ]
  %65 = ptrtoint %"class.angle::ObserverBinding"* %63 to i64
  store i64 %65, i64* %7, align 8
  store i64 %45, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %66 = inttoptr i64 %64 to %"class.angle::ObserverBinding"*
  %67 = icmp eq %"class.angle::ObserverBinding"* %62, %66
  br i1 %67, label %72, label %68

68:                                               ; preds = %61, %68
  %69 = phi %"class.angle::ObserverBinding"* [ %70, %68 ], [ %62, %61 ]
  %70 = getelementptr inbounds %"class.angle::ObserverBinding", %"class.angle::ObserverBinding"* %69, i64 -1
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %70) #16
  %71 = icmp eq %"class.angle::ObserverBinding"* %70, %66
  br i1 %71, label %72, label %68

72:                                               ; preds = %68, %61
  %73 = icmp eq i64 %64, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %72
  %75 = inttoptr i64 %64 to i8*
  tail call void @_ZdlPv(i8* %75) #18
  br label %76

76:                                               ; preds = %72, %74
  ret void
}

declare void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"*, %"class.angle::ObserverInterface"*, i64) unnamed_addr #5

declare void @_ZN5angle15ObserverBindingC1ERKS0_(%"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"* dereferenceable(32)) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #11

attributes #0 = { cold noreturn nounwind }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!4 = distinct !{!4, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!8 = distinct !{!8, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5angle7BitSetTILm16EmmE5beginEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5angle7BitSetTILm16EmmE5beginEv"}
!12 = !{i64 0, i64 65}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK5angle7BitSetTILm16EmmEcoEv: argument 0"}
!15 = distinct !{!15, !"_ZNK5angle7BitSetTILm16EmmEcoEv"}
!16 = !{}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5angle7BitSetTILm16EmmE5beginEv: argument 0"}
!19 = distinct !{!19, !"_ZNK5angle7BitSetTILm16EmmE5beginEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5angle7BitSetTILm16EmmE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5angle7BitSetTILm16EmmE5beginEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!25 = distinct !{!25, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5angle7BitSetTILm16EmmE5beginEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5angle7BitSetTILm16EmmE5beginEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!31 = distinct !{!31, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!34 = distinct !{!34, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK2gl10StateCache28getActiveBufferedAttribsMaskEv: argument 0"}
!37 = distinct !{!37, !"_ZNK2gl10StateCache28getActiveBufferedAttribsMaskEv"}
