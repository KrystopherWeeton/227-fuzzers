; ModuleID = '../../third_party/dawn/src/dawn_native/StagingBuffer.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/StagingBuffer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.dawn_native::StagingBufferBase" = type { i32 (...)**, i8*, i64 }

$_ZN11dawn_native17StagingBufferBaseD2Ev = comdat any

$_ZN11dawn_native17StagingBufferBaseD0Ev = comdat any

$_ZTVN11dawn_native17StagingBufferBaseE = comdat any

@_ZTVN11dawn_native17StagingBufferBaseE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::StagingBufferBase"*)* @_ZN11dawn_native17StagingBufferBaseD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::StagingBufferBase"*)* @_ZN11dawn_native17StagingBufferBaseD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11dawn_native17StagingBufferBaseC2Em(%"class.dawn_native::StagingBufferBase"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::StagingBufferBase", %"class.dawn_native::StagingBufferBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11dawn_native17StagingBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.dawn_native::StagingBufferBase", %"class.dawn_native::StagingBufferBase"* %0, i64 0, i32 1
  store i8* null, i8** %4, align 8
  %5 = getelementptr inbounds %"class.dawn_native::StagingBufferBase", %"class.dawn_native::StagingBufferBase"* %0, i64 0, i32 2
  store i64 %1, i64* %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK11dawn_native17StagingBufferBase7GetSizeEv(%"class.dawn_native::StagingBufferBase"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::StagingBufferBase", %"class.dawn_native::StagingBufferBase"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK11dawn_native17StagingBufferBase16GetMappedPointerEv(%"class.dawn_native::StagingBufferBase"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::StagingBufferBase", %"class.dawn_native::StagingBufferBase"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native17StagingBufferBaseD2Ev(%"class.dawn_native::StagingBufferBase"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native17StagingBufferBaseD0Ev(%"class.dawn_native::StagingBufferBase"*) unnamed_addr #2 comdat align 2 {
  tail call void @llvm.trap() #4
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
