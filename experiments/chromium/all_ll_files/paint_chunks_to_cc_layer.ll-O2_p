; ModuleID = '../../third_party/blink/renderer/platform/graphics/compositing/paint_chunks_to_cc_layer.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/compositing/paint_chunks_to_cc_layer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PaintFlags" = type <{ %class.sk_sp.536, %class.sk_sp.537, %class.sk_sp.556, %class.sk_sp.557, %class.sk_sp.558, %class.sk_sp.215, i32, float, float, i32, %union.anon.559, [4 x i8] }>
%class.sk_sp.536 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.537 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.538", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.126, i32, %"class.absl::optional.543", %"class.std::__1::vector.234", %"class.std::__1::vector.548", %class.sk_sp.555, %class.sk_sp, i32, [4 x i8] }>
%"class.absl::optional.538" = type { %"class.absl::optional_internal::optional_data.539" }
%"class.absl::optional_internal::optional_data.539" = type { %"class.absl::optional_internal::optional_data_base.540" }
%"class.absl::optional_internal::optional_data_base.540" = type { %"class.absl::optional_internal::optional_data_dtor_base.541" }
%"class.absl::optional_internal::optional_data_dtor_base.541" = type { i8, %union.anon.542 }
%union.anon.542 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.126, %"class.gfx::Rect", i32, %class.sk_sp.131, %class.sk_sp.132, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.133 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.131 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.97" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.120, i32, i32 }
%class.sk_sp.120 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.121" }
%"struct.std::__1::atomic.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__atomic_base.123" }
%"struct.std::__1::__atomic_base.123" = type { %"struct.std::__1::__cxx_atomic_impl.124" }
%"struct.std::__1::__cxx_atomic_impl.124" = type { %"struct.std::__1::__cxx_atomic_base_impl.125" }
%"struct.std::__1::__cxx_atomic_base_impl.125" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.99" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.132 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.133 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.134", [4 x i8] }>
%"class.base::RefCountedThreadSafe.134" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.126 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.127", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { i8* }
%"class.absl::optional.543" = type { %"class.absl::optional_internal::optional_data.544" }
%"class.absl::optional_internal::optional_data.544" = type { %"class.absl::optional_internal::optional_data_base.545" }
%"class.absl::optional_internal::optional_data_base.545" = type { %"class.absl::optional_internal::optional_data_dtor_base.546" }
%"class.absl::optional_internal::optional_data_dtor_base.546" = type { i8, %union.anon.547 }
%union.anon.547 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { i32*, i32*, %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { i32* }
%"class.std::__1::vector.548" = type { %"class.std::__1::__vector_base.549" }
%"class.std::__1::__vector_base.549" = type { float*, float*, %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { float* }
%class.sk_sp.555 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.196", [7 x i8] }>
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i8 }
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.556 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.557 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.558 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.215 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.216, i32, %"class.absl::optional.217", i8, i32 }
%class.sk_sp.216 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.217" = type { %"class.absl::optional_internal::optional_data.218" }
%"class.absl::optional_internal::optional_data.218" = type { %"class.absl::optional_internal::optional_data_base.219" }
%"class.absl::optional_internal::optional_data_base.219" = type { %"class.absl::optional_internal::optional_data_dtor_base.220" }
%"class.absl::optional_internal::optional_data_dtor_base.220" = type { i8, %union.anon.221 }
%union.anon.221 = type { %struct.SkRect }
%union.anon.559 = type { i32 }
%"struct.base::Feature" = type { i8*, i32 }
%"class.blink::PaintChunkSubset" = type { %class.scoped_refptr, %"class.WTF::Vector.58", i32, i32 }
%class.scoped_refptr = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.0" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector", i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.0" = type { %"class.WTF::VectorBuffer.1" }
%"class.WTF::VectorBuffer.1" = type { %"class.WTF::VectorBufferBase.2" }
%"class.WTF::VectorBufferBase.2" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.50", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"class.blink::Color" = type { i32 }
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.3, %class.scoped_refptr.4, %class.scoped_refptr.5 }
%class.scoped_refptr.3 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.16", i8, i8, %class.scoped_refptr.3, i32, i32 }
%"class.WTF::RefCounted.16" = type { %"class.base::RefCounted.17" }
%"class.base::RefCounted.17" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.4 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.77" }
%"class.blink::PaintPropertyNode.77" = type { %"class.WTF::RefCounted.78", i8, i8, %class.scoped_refptr.4, i32, i32 }
%"class.WTF::RefCounted.78" = type { %"class.base::RefCounted.79" }
%"class.base::RefCounted.79" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.5 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.74" }
%"class.blink::PaintPropertyNode.74" = type { %"class.WTF::RefCounted.75", i8, i8, %class.scoped_refptr.5, i32, i32 }
%"class.WTF::RefCounted.75" = type { %"class.base::RefCounted.76" }
%"class.base::RefCounted.76" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.6", %"class.WTF::Vector.11", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13" }
%"class.WTF::VectorBufferBase.13" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.29" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.22, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.23", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.18" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.22 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.63", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.63" = type { %"class.WTF::RefCounted.64", i8, i8, %class.scoped_refptr.22, i32, i32 }
%"class.WTF::RefCounted.64" = type { %"class.base::RefCounted.65" }
%"class.base::RefCounted.65" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.66" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.66" = type { %"class.absl::optional_internal::optional_data.67" }
%"class.absl::optional_internal::optional_data.67" = type { %"class.absl::optional_internal::optional_data_base.68" }
%"class.absl::optional_internal::optional_data_base.68" = type { %"class.absl::optional_internal::optional_data_dtor_base.69" }
%"class.absl::optional_internal::optional_data_dtor_base.69" = type { i8, %union.anon.70 }
%union.anon.70 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.71" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [3 x i8], %union.anon }
%union.anon = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { i32*, i32, i32 }
%"class.blink::PropertyTreeState" = type { %"class.blink::PropertyTreeStateOrAlias" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.161", %"class.std::__1::vector.168", %"class.std::__1::vector.175", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.81", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map", %"class.std::__1::vector.95", %"class.base::flat_map.109", i8, i8, [6 x i8], %"class.cc::RTree.119", %"class.std::__1::vector.153" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.88" }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.90" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.95" = type { %"class.std::__1::__vector_base.96" }
%"class.std::__1::__vector_base.96" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.104" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.97", i32, i32 }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.109" = type { %"class.base::internal::flat_tree.110" }
%"class.base::internal::flat_tree.110" = type { %"class.std::__1::vector.111" }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %"struct.std::__1::pair.113"*, %"struct.std::__1::pair.113"*, %"class.std::__1::__compressed_pair.114" }
%"struct.std::__1::pair.113" = type { i32, i32 }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::pair.113"* }
%"class.cc::RTree.119" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.145", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.135", %"class.absl::optional.140", float, [4 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional.135" = type { %"class.absl::optional_internal::optional_data.136" }
%"class.absl::optional_internal::optional_data.136" = type { %"class.absl::optional_internal::optional_data_base.137" }
%"class.absl::optional_internal::optional_data_base.137" = type { %"class.absl::optional_internal::optional_data_dtor_base.138" }
%"class.absl::optional_internal::optional_data_dtor_base.138" = type { i8, %union.anon.139 }
%union.anon.139 = type { i64 }
%"class.absl::optional.140" = type { %"class.absl::optional_internal::optional_data.141" }
%"class.absl::optional_internal::optional_data.141" = type { %"class.absl::optional_internal::optional_data_base.142" }
%"class.absl::optional_internal::optional_data_base.142" = type { %"class.absl::optional_internal::optional_data_dtor_base.143" }
%"class.absl::optional_internal::optional_data_dtor_base.143" = type { i8, %union.anon.144 }
%union.anon.144 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"*, %"class.std::__1::__compressed_pair.156" }
%"struct.std::__1::pair.155" = type opaque
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::pair.155"* }
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { i64*, i64*, %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { i64* }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.177" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%class.sk_sp.309 = type { %"class.cc::PaintOpBuffer"* }
%"class.blink::(anonymous namespace)::ConversionContext" = type { %"class.WTF::Vector.182", %"class.blink::PropertyTreeState"*, %"class.gfx::Vector2dF", i8, %"class.blink::TransformPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, %"class.WTF::Vector.243", %"class.blink::ChunkToLayerMapper", %"class.cc::DisplayItemList"* }
%"class.WTF::Vector.182" = type { %"class.WTF::VectorBuffer.183" }
%"class.WTF::VectorBuffer.183" = type { %"class.WTF::VectorBufferBase.184" }
%"class.WTF::VectorBufferBase.184" = type { %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"*, i32, i32 }
%"struct.blink::(anonymous namespace)::ConversionContext::StateEntry" = type { i32, %"class.blink::TransformPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.202" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.3, %"class.absl::optional.185", %class.scoped_refptr.190, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.185" = type { %"class.absl::optional_internal::optional_data.186" }
%"class.absl::optional_internal::optional_data.186" = type { %"class.absl::optional_internal::optional_data_base.187" }
%"class.absl::optional_internal::optional_data_base.187" = type { %"class.absl::optional_internal::optional_data_dtor_base.188" }
%"class.absl::optional_internal::optional_data_dtor_base.188" = type { i8, [3 x i8], %union.anon.189 }
%union.anon.189 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%class.scoped_refptr.190 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.200", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.191, i32, %"struct.std::__1::atomic.121", %"struct.std::__1::atomic.121", i8, i8 }>
%class.sk_sp.191 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.192, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.193, %class.SkTDArray.194, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.192 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.193 = type { i8*, i32, i32 }
%class.SkTDArray.194 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.195 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.195 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.196", [3 x i8] }
%"class.WTF::RefCounted.200" = type { %"class.base::RefCounted.201" }
%"class.base::RefCounted.201" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.205", i32, [4 x i8] }>
%"class.WTF::Vector.205" = type { %"class.WTF::VectorBuffer.206" }
%"class.WTF::VectorBuffer.206" = type { %"class.WTF::VectorBufferBase.207" }
%"class.WTF::VectorBufferBase.207" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.3, %class.scoped_refptr.4, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.227", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.213" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.222" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.215, [20 x float], i32, [4 x i8], %"class.std::__1::vector.161", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.233" }
%"class.base::internal::flat_tree.233" = type { %"class.std::__1::vector.234" }
%"class.WTF::Vector.243" = type { %"class.WTF::VectorBuffer.244" }
%"class.WTF::VectorBuffer.244" = type { %"class.WTF::VectorBufferBase.245" }
%"class.WTF::VectorBufferBase.245" = type { %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"*, i32, i32 }
%"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo" = type { i64, %"class.blink::TransformPaintPropertyNode"*, %"class.blink::FloatRect" }
%"class.blink::ChunkToLayerMapper" = type <{ %"class.blink::PropertyTreeState", %"class.gfx::Vector2dF", %"class.blink::PropertyTreeState", %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::FloatClipRect", i8, i8, [2 x i8] }>
%"class.blink::GeometryMapper::Translation2DOrMatrix" = type { %"class.blink::FloatSize", %"class.absl::optional.248" }
%"class.absl::optional.248" = type { %"class.absl::optional_internal::optional_data.249" }
%"class.absl::optional_internal::optional_data.249" = type { %"class.absl::optional_internal::optional_data_base.250" }
%"class.absl::optional_internal::optional_data_base.250" = type { %"class.absl::optional_internal::optional_data_dtor_base.251" }
%"class.absl::optional_internal::optional_data_dtor_base.251" = type { i8, %union.anon.252 }
%union.anon.252 = type { %"class.blink::TransformationMatrix" }
%"class.blink::ScrollbarDisplayItem" = type { %"class.blink::DisplayItem.base", %"class.std::__1::unique_ptr.514" }
%"class.blink::DisplayItem.base" = type <{ %"class.blink::DisplayItemClient"*, %"class.blink::IntRect", i32, i16 }>
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.blink::ScrollbarDisplayItem::Data"* }
%"struct.blink::ScrollbarDisplayItem::Data" = type { %class.scoped_refptr.517, %"class.blink::TransformPaintPropertyNode"*, %"struct.cc::ElementId", %class.sk_sp.309 }
%class.scoped_refptr.517 = type { %"class.cc::Scrollbar"* }
%"class.cc::Scrollbar" = type <{ i32 (...)**, %"class.base::RefCounted.518", [4 x i8] }>
%"class.base::RefCounted.518" = type { %"class.base::subtle::RefCountedBase" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.blink::RasterUnderInvalidationCheckingParams" = type { %"class.blink::RasterInvalidationTracking"*, %"class.blink::IntRect", %"class.WTF::String" }
%"class.blink::RasterInvalidationTracking" = type { %"class.WTF::Vector.254", %class.sk_sp.126, %"class.blink::IntRect", %"class.blink::Region", %"class.WTF::Vector.275", %class.sk_sp.126 }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"struct.blink::RasterInvalidationInfo"*, i32, i32 }
%"struct.blink::RasterInvalidationInfo" = type <{ %"class.blink::DisplayItemClient"*, %"class.WTF::String", %"class.blink::IntRect", i8, [7 x i8] }>
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.265", %"class.WTF::Vector.270" }
%"class.WTF::Vector.265" = type { %"class.WTF::VectorBuffer.266" }
%"class.WTF::VectorBuffer.266" = type { %"class.WTF::VectorBufferBase.267", [128 x i8] }
%"class.WTF::VectorBufferBase.267" = type { i32*, i32, i32 }
%"class.WTF::Vector.270" = type { %"class.WTF::VectorBuffer.271" }
%"class.WTF::VectorBuffer.271" = type { %"class.WTF::VectorBufferBase.272", [128 x i8] }
%"class.WTF::VectorBufferBase.272" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.275" = type { %"class.WTF::VectorBuffer.276" }
%"class.WTF::VectorBuffer.276" = type { %"class.WTF::VectorBufferBase.277" }
%"class.WTF::VectorBufferBase.277" = type { %"struct.blink::RasterUnderInvalidation"*, i32, i32 }
%"struct.blink::RasterUnderInvalidation" = type { i32, i32, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.257 }
%class.scoped_refptr.257 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.258" }
%"struct.std::__1::atomic.258" = type { %"struct.std::__1::__atomic_base.259" }
%"struct.std::__1::__atomic_base.259" = type { %"struct.std::__1::__atomic_base.260" }
%"struct.std::__1::__atomic_base.260" = type { %"struct.std::__1::__cxx_atomic_impl.261" }
%"struct.std::__1::__cxx_atomic_impl.261" = type { %"struct.std::__1::__cxx_atomic_base_impl.262" }
%"struct.std::__1::__cxx_atomic_base_impl.262" = type { i32 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.253, %"class.std::__1::unique_ptr.280" }
%class.scoped_refptr.253 = type { %"class.cc::DisplayItemList"* }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.283", %struct.SkRect }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.absl::optional.283" = type { %"class.absl::optional_internal::optional_data.284" }
%"class.absl::optional_internal::optional_data.284" = type { %"class.absl::optional_internal::optional_data_base.285" }
%"class.absl::optional_internal::optional_data_base.285" = type { %"class.absl::optional_internal::optional_data_dtor_base.286" }
%"class.absl::optional_internal::optional_data_dtor_base.286" = type { i8, %union.anon.287 }
%union.anon.287 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.288, [384 x i64], %class.sk_sp.289, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.290", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.296" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.288 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.289 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.cc::DrawRecordOp" = type { %"class.cc::PaintOp", %class.sk_sp.309 }
%"class.cc::PaintOp" = type { i32 }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.310", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.329", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.350" }>
%"class.base::RefCounted.310" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.311", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.311" = type { %"class.std::__1::__vector_base.312" }
%"class.std::__1::__vector_base.312" = type { %class.scoped_refptr.313*, %class.scoped_refptr.313*, %"class.std::__1::__compressed_pair.314" }
%class.scoped_refptr.313 = type opaque
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %class.scoped_refptr.313* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.319" }
%"class.base::flat_map.319" = type { %"class.base::internal::flat_tree.320" }
%"class.base::internal::flat_tree.320" = type { %"class.std::__1::vector.321" }
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"struct.std::__1::pair.323"*, %"struct.std::__1::pair.323"*, %"class.std::__1::__compressed_pair.324" }
%"struct.std::__1::pair.323" = type opaque
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.std::__1::pair.323"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.332", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.339" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.absl::optional.332" = type { %"class.absl::optional_internal::optional_data.333" }
%"class.absl::optional_internal::optional_data.333" = type { %"class.absl::optional_internal::optional_data_base.334" }
%"class.absl::optional_internal::optional_data_base.334" = type { %"class.absl::optional_internal::optional_data_dtor_base.335" }
%"class.absl::optional_internal::optional_data_dtor_base.335" = type { i8, %union.anon.336 }
%union.anon.336 = type { %"class.gfx::RRectF" }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.337 }
%class.scoped_refptr.337 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.338", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.338" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.339" = type { %"class.std::__1::__vector_base.340" }
%"class.std::__1::__vector_base.340" = type { %"class.std::__1::unique_ptr.341"*, %"class.std::__1::unique_ptr.341"*, %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::unique_ptr.341" = type opaque
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.std::__1::unique_ptr.341"* }
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.359", %"class.std::__1::vector.359", %"class.std::__1::vector.366" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.355 }
%union.anon.355 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.359" = type { %"class.std::__1::__vector_base.360" }
%"class.std::__1::__vector_base.360" = type { i8**, i8**, %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { i8** }
%"class.std::__1::vector.366" = type { %"class.std::__1::__vector_base.367" }
%"class.std::__1::__vector_base.367" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.368" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.blink::PropertyTreeManager" = type { %"class.blink::PropertyTreeManagerClient"*, %"class.cc::PropertyTrees"*, %"class.cc::Layer"*, %"class.blink::LayerListBuilder"*, i32, %"struct.blink::PropertyTreeManager::EffectState", %"class.WTF::Vector.507", %"class.WTF::HashSet" }
%"class.blink::PropertyTreeManagerClient" = type { i32 (...)** }
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.376", %"class.base::flat_map.376", %"class.base::flat_map.376", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.376" = type { %"class.base::internal::flat_tree.377" }
%"class.base::internal::flat_tree.377" = type { %"class.std::__1::vector.378" }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.std::__1::pair.380"*, %"struct.std::__1::pair.380"*, %"class.std::__1::__compressed_pair.381" }
%"struct.std::__1::pair.380" = type opaque
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.std::__1::pair.380"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.393", %"class.std::__1::vector.400", %"class.std::__1::vector.407" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.386", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.388" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { i32*, i32*, %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { i32* }
%"class.std::__1::vector.400" = type { %"class.std::__1::__vector_base.401" }
%"class.std::__1::__vector_base.401" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.402" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.407" = type { %"class.std::__1::__vector_base.408" }
%"class.std::__1::__vector_base.408" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.409" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.414", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.441" }
%"class.cc::PropertyTree.414" = type { i32 (...)**, %"class.std::__1::vector.415", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.415" = type { %"class.std::__1::__vector_base.416" }
%"class.std::__1::__vector_base.416" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.417" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.332", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.422", %"class.std::__1::__compressed_pair.431", %"class.std::__1::__compressed_pair.436", %"class.std::__1::__compressed_pair.438", [4 x i8] }>
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424", %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { i64 }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { float }
%"class.std::__1::vector.441" = type { %"class.std::__1::__vector_base.442" }
%"class.std::__1::__vector_base.442" = type { %"class.std::__1::unique_ptr.443"*, %"class.std::__1::unique_ptr.443"*, %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type opaque
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"class.std::__1::unique_ptr.443"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.454" }
%"class.cc::PropertyTree.454" = type { i32 (...)**, %"class.std::__1::vector.455", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.455" = type { %"class.std::__1::__vector_base.456" }
%"class.std::__1::__vector_base.456" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.457" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.462", i32, %"class.base::flat_map.470", %"class.base::flat_map.480", %"class.base::WeakPtr" }
%"class.cc::PropertyTree.462" = type { i32 (...)**, %"class.std::__1::vector.463", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.465" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.470" = type { %"class.base::internal::flat_tree.471" }
%"class.base::internal::flat_tree.471" = type { %"class.std::__1::vector.472" }
%"class.std::__1::vector.472" = type { %"class.std::__1::__vector_base.473" }
%"class.std::__1::__vector_base.473" = type { %"struct.std::__1::pair.474"*, %"struct.std::__1::pair.474"*, %"class.std::__1::__compressed_pair.475" }
%"struct.std::__1::pair.474" = type opaque
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"struct.std::__1::pair.474"* }
%"class.base::flat_map.480" = type { %"class.base::internal::flat_tree.481" }
%"class.base::internal::flat_tree.481" = type { %"class.std::__1::vector.482" }
%"class.std::__1::vector.482" = type { %"class.std::__1::__vector_base.483" }
%"class.std::__1::__vector_base.483" = type { %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"*, %"class.std::__1::__compressed_pair.485" }
%"struct.std::__1::pair.484" = type opaque
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"struct.std::__1::pair.484"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.491", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.491" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.121" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.492", %"class.std::__1::vector.499" }
%"class.std::__1::vector.492" = type { %"class.std::__1::__vector_base.493" }
%"class.std::__1::__vector_base.493" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.494" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.499" = type { %"class.std::__1::__vector_base.500" }
%"class.std::__1::__vector_base.500" = type { %"class.std::__1::vector.501"*, %"class.std::__1::vector.501"*, %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::vector.501" = type opaque
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.std::__1::vector.501"* }
%"class.blink::LayerListBuilder" = type opaque
%"struct.blink::PropertyTreeManager::EffectState" = type { i32, i32, %"class.blink::EffectPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, i8 }
%"class.WTF::Vector.507" = type { %"class.WTF::VectorBuffer.508" }
%"class.WTF::VectorBuffer.508" = type { %"class.WTF::VectorBufferBase.509" }
%"class.WTF::VectorBufferBase.509" = type { %"struct.blink::PropertyTreeManager::EffectState"*, i32, i32 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.583" = type { %"class.WTF::VectorBuffer.584" }
%"class.WTF::VectorBuffer.584" = type { %"class.WTF::VectorBufferBase.585", [16 x i8] }
%"class.WTF::VectorBufferBase.585" = type { %"class.blink::Color"*, i32, i32 }
%"class.WTF::Vector.531" = type { %"class.WTF::VectorBuffer.532" }
%"class.WTF::VectorBuffer.532" = type { %"class.WTF::VectorBufferBase.533", [8 x i8] }
%"class.WTF::VectorBufferBase.533" = type { %"class.blink::EffectPaintPropertyNode"**, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Vector.573" = type { %"class.WTF::VectorBuffer.574" }
%"class.WTF::VectorBuffer.574" = type { %"class.WTF::VectorBufferBase.575", [8 x i8] }
%"class.WTF::VectorBufferBase.575" = type { %"class.blink::ClipPaintPropertyNode"**, i32, i32 }
%class.SkM44 = type { [16 x float] }
%"class.cc::SaveLayerOp" = type { %"class.cc::PaintOpWithFlags", %struct.SkRect }
%"class.cc::PaintOpWithFlags" = type { %"class.cc::PaintOp", [4 x i8], %"class.cc::PaintFlags" }
%"class.cc::ClipPathOp" = type <{ %"class.cc::PaintOp", [4 x i8], %"class.cc::ThreadsafePath", i32, i8, [3 x i8] }>
%"class.cc::ThreadsafePath" = type { %class.SkPath.base, i8 }
%class.SkPath.base = type <{ %class.sk_sp.191, i32, %"struct.std::__1::atomic.121", %"struct.std::__1::atomic.121", i8 }>

$_ZN2cc15DisplayItemList4pushINS_12DrawRecordOpEJ5sk_spIKNS_13PaintOpBufferEEEEEmDpOT0_ = comdat any

$_ZNK3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN2cc15DisplayItemList4pushINS_6SaveOpEJEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_11TranslateOpEJffEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList21EndPaintOfPairedBeginEv = comdat any

$_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_ = comdat any

$_ZN2cc13PaintOpBuffer21UpdateSaveLayerBoundsEmRK6SkRect = comdat any

$_ZN3WTF6VectorIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink23EffectPaintPropertyNodeEEEmm = comdat any

$_ZN3WTF12VectorBufferIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN3WTF6VectorIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN2cc15DisplayItemList4pushINS_11SaveLayerOpEJDnPNS_10PaintFlagsEEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_16SaveLayerAlphaOpEJDnRhEEEmDpOT0_ = comdat any

$_ZN2cc13PaintOpBuffer4pushINS_11SaveLayerOpEJDnPNS_10PaintFlagsEEEEPKT_DpOT0_ = comdat any

$_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink21ClipPaintPropertyNodeEEEmm = comdat any

$_ZN3WTF12VectorBufferIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN2cc15DisplayItemList4pushINS_10ClipRectOpEJRKN5blink9FloatRectE8SkClipOpRKbEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_8ConcatOpEJ5SkM44EEEmDpOT0_ = comdat any

$_ZNK5blink16FloatRoundedRectcv7SkRRectEv = comdat any

$_ZN2cc13PaintOpBuffer4pushINS_10ClipPathOpEJRK6SkPath8SkClipOpRKbEEEPKT_DpOT0_ = comdat any

$_ZN5blink14GeometryMapper23SourceToDestinationRectINS_9FloatRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_ = comdat any

$_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEmRKS2_ = comdat any

$_ZN3WTF6VectorIN5blink5ColorELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink5ColorELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink5ColorELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5ColorEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink5ColorELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN2cc13PaintOpBuffer14AnalyzeAddedOpINS_12DrawRecordOpEEEvPKT_ = comdat any

@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase33is_composite_after_paint_enabled_E = external local_unnamed_addr global i8, align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"offset < used_\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"../../cc/paint/paint_op_buffer.h\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"offset + sizeof(PaintOp) <= used_\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"offset + sizeof(SaveLayerOp) <= used_\00", align 1
@.str.7 = private unnamed_addr constant [43 x i8] c"offset + sizeof(SaveLayerAlphaOp) <= used_\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink23EffectPaintPropertyNodeEEEPKcv = private unnamed_addr constant [86 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::EffectPaintPropertyNode *]\00", align 1
@__const._ZN5blink12_GLOBAL__N_117ConversionContext11StartEffectERKNS_23EffectPaintPropertyNodeE.filter_flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.536 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.537 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.556 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.557 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.558 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.215 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.559 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZN2cc7PaintOp10kUnsetRectE = external local_unnamed_addr global %struct.SkRect, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_117ConversionContext10StateEntryEEEPKcv = private unnamed_addr constant [107 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::(anonymous namespace)::ConversionContext::StateEntry]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_117ConversionContext16EffectBoundsInfoEEEPKcv = private unnamed_addr constant [113 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink21ClipPaintPropertyNodeEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::ClipPaintPropertyNode *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5ColorEEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Color]\00", align 1
@_ZN8features18kWheelEventRegionsE = external global %"struct.base::Feature", align 8
@_ZN5blink26RuntimeEnabledFeaturesBase30is_scroll_unification_enabled_E = external local_unnamed_addr global i8, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20PaintChunksToCcLayer11ConvertIntoERKNS_16PaintChunkSubsetERKNS_17PropertyTreeStateERKN3gfx9Vector2dFERN2cc15DisplayItemListE(%"class.blink::PaintChunkSubset"* dereferenceable(32), %"class.blink::PropertyTreeState"* dereferenceable(24), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8), %"class.cc::DisplayItemList"* dereferenceable(640)) local_unnamed_addr #0 align 2 {
  %5 = alloca <4 x float>, align 16
  %6 = bitcast <4 x float>* %5 to %"class.blink::FloatRect"*
  %7 = alloca %class.sk_sp.309, align 8
  %8 = alloca %class.sk_sp.309, align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca %"class.blink::(anonymous namespace)::ConversionContext", align 8
  %11 = bitcast %"class.blink::(anonymous namespace)::ConversionContext"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %11) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #12
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 1
  store %"class.blink::PropertyTreeState"* %1, %"class.blink::PropertyTreeState"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 2
  %14 = bitcast %"class.gfx::Vector2dF"* %2 to i64*
  %15 = bitcast %"class.gfx::Vector2dF"* %13 to i64*
  %16 = load i64, i64* %14, align 4
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 3
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 4
  %19 = bitcast %"class.blink::TransformPaintPropertyNode"** %18 to i64*
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 5
  %21 = bitcast %"class.blink::PropertyTreeState"* %1 to <2 x i64>*
  %22 = load <2 x i64>, <2 x i64>* %21, align 8
  %23 = bitcast %"class.blink::ClipPaintPropertyNode"** %20 to i64*
  %24 = bitcast %"class.blink::TransformPaintPropertyNode"** %18 to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %24, align 8
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 6
  %26 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %1, i64 0, i32 0, i32 2
  %27 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.blink::EffectPaintPropertyNode"** %25 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 7
  %31 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 9
  %32 = bitcast %"class.blink::TransformPaintPropertyNode"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #12
  call void @_ZN5blink18ChunkToLayerMapperC1ERKNS_17PropertyTreeStateERKN3gfx9Vector2dFE(%"class.blink::ChunkToLayerMapper"* %31, %"class.blink::PropertyTreeState"* dereferenceable(24) %1, %"class.gfx::Vector2dF"* dereferenceable(8) %13) #12
  %33 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 10
  store %"class.cc::DisplayItemList"* %3, %"class.cc::DisplayItemList"** %33, align 8
  %34 = bitcast { i64, i64 }* %9 to %"class.gfx::Rect"*
  %35 = getelementptr inbounds %"class.blink::PaintChunkSubset", %"class.blink::PaintChunkSubset"* %0, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, -1
  %38 = select i1 %37, i32 0, i32 %36
  %39 = getelementptr inbounds %"class.blink::PaintChunkSubset", %"class.blink::PaintChunkSubset"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %40 = getelementptr inbounds %"class.blink::PaintChunkSubset", %"class.blink::PaintChunkSubset"* %0, i64 0, i32 3
  %41 = load i32, i32* %39, align 4
  %42 = load i32, i32* %40, align 4
  %43 = select i1 %37, i32 %41, i32 %42
  %44 = icmp eq i32 %38, %43
  br i1 %44, label %321, label %45

45:                                               ; preds = %4
  %46 = getelementptr inbounds %"class.blink::PaintChunkSubset", %"class.blink::PaintChunkSubset"* %0, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::PaintChunkSubset", %"class.blink::PaintChunkSubset"* %0, i64 0, i32 1
  %48 = bitcast %class.sk_sp.309* %7 to i8*
  %49 = getelementptr inbounds %class.sk_sp.309, %class.sk_sp.309* %7, i64 0, i32 0
  %50 = bitcast %class.sk_sp.309* %8 to i8*
  %51 = getelementptr inbounds %class.sk_sp.309, %class.sk_sp.309* %8, i64 0, i32 0
  %52 = bitcast %class.sk_sp.309* %8 to i64*
  %53 = bitcast %class.sk_sp.309* %7 to i64*
  %54 = bitcast { i64, i64 }* %9 to i8*
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %57 = bitcast %"class.blink::EffectPaintPropertyNode"** %25 to %"class.blink::EffectPaintPropertyNodeOrAlias"**
  %58 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 8, i32 0, i32 0, i32 2
  %59 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 8
  %60 = bitcast <4 x float>* %5 to i8*
  br label %61

61:                                               ; preds = %313, %45
  %62 = phi i1 [ %37, %45 ], [ %316, %313 ]
  %63 = phi i32 [ %38, %45 ], [ %314, %313 ]
  %64 = load %"class.blink::PaintArtifact"*, %"class.blink::PaintArtifact"** %46, align 8
  %65 = getelementptr inbounds %"class.blink::PaintArtifact", %"class.blink::PaintArtifact"* %64, i64 0, i32 3
  br i1 %62, label %66, label %69

66:                                               ; preds = %61
  %67 = call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %47, i32 %63) #12
  %68 = load i32, i32* %67, align 4
  br label %69

69:                                               ; preds = %66, %61
  %70 = phi i32 [ %68, %66 ], [ %63, %61 ]
  %71 = call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZNK3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %65, i32 %70) #12
  %72 = load %"class.blink::PaintArtifact"*, %"class.blink::PaintArtifact"** %46, align 8
  %73 = getelementptr inbounds %"class.blink::PaintArtifact", %"class.blink::PaintArtifact"* %72, i64 0, i32 3
  %74 = load i32, i32* %35, align 8
  %75 = icmp eq i32 %74, -1
  br i1 %75, label %76, label %79

76:                                               ; preds = %69
  %77 = call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %47, i32 %63) #12
  %78 = load i32, i32* %77, align 4
  br label %79

79:                                               ; preds = %76, %69
  %80 = phi i32 [ %78, %76 ], [ %63, %69 ]
  %81 = call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZNK3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %73, i32 %80) #12
  %82 = load %"class.blink::PaintArtifact"*, %"class.blink::PaintArtifact"** %46, align 8
  %83 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %81, i64 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %81, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.blink::PaintArtifact", %"class.blink::PaintArtifact"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %88 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %87, align 8
  %89 = zext i32 %86 to i64
  %90 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %88, i64 %89
  %91 = icmp eq i32 %84, %86
  br i1 %91, label %276, label %92

92:                                               ; preds = %79
  %93 = zext i32 %84 to i64
  %94 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %88, i64 %93
  %95 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %71, i64 0, i32 5, i32 2, i32 0
  br label %99

96:                                               ; preds = %272
  %97 = and i8 %273, 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %276, label %282

99:                                               ; preds = %272, %92
  %100 = phi i8 [ 0, %92 ], [ %273, %272 ]
  %101 = phi %"struct.blink::DisplayItemList::ItemSlot"* [ %94, %92 ], [ %274, %272 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #12
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %49, align 8
  %102 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %101, i64 0, i32 0, i64 28
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 4
  %105 = and i16 %104, 4096
  %106 = icmp eq i16 %105, 0
  br i1 %106, label %272, label %107

107:                                              ; preds = %99
  %108 = and i16 %104, 254
  %109 = or i16 %108, 1
  %110 = icmp ne i16 %109, 117
  %111 = icmp eq %"struct.blink::DisplayItemList::ItemSlot"* %101, null
  %112 = or i1 %111, %110
  br i1 %112, label %143, label %113

113:                                              ; preds = %107
  %114 = bitcast %"struct.blink::DisplayItemList::ItemSlot"* %101 to %"class.blink::ScrollbarDisplayItem"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #12
  call void @_ZNK5blink20ScrollbarDisplayItem5PaintEv(%class.sk_sp.309* nonnull sret %8, %"class.blink::ScrollbarDisplayItem"* nonnull %114) #12
  %115 = load i64, i64* %52, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %51, align 8
  %116 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %49, align 8
  store i64 %115, i64* %53, align 8
  %117 = icmp eq %"class.cc::PaintOpBuffer"* %116, null
  br i1 %117, label %141, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %116, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 -1 acq_rel
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %122, label %128

122:                                              ; preds = %118
  %123 = bitcast %"class.cc::PaintOpBuffer"* %116 to %class.SkRefCntBase*
  %124 = bitcast %"class.cc::PaintOpBuffer"* %116 to void (%class.SkRefCntBase*)***
  %125 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %124, align 8
  %126 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %125, i64 2
  %127 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %126, align 8
  call void %127(%class.SkRefCntBase* nonnull %123) #12
  br label %128

128:                                              ; preds = %122, %118
  %129 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %51, align 8
  %130 = icmp eq %"class.cc::PaintOpBuffer"* %129, null
  br i1 %130, label %141, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %129, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i32* %132, i32 -1 acq_rel
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %141

135:                                              ; preds = %131
  %136 = bitcast %"class.cc::PaintOpBuffer"* %129 to %class.SkRefCntBase*
  %137 = bitcast %"class.cc::PaintOpBuffer"* %129 to void (%class.SkRefCntBase*)***
  %138 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %137, align 8
  %139 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %138, i64 2
  %140 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %139, align 8
  call void %140(%class.SkRefCntBase* nonnull %136) #12
  br label %141

141:                                              ; preds = %135, %131, %128, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #12
  %142 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %49, align 8
  br label %161

143:                                              ; preds = %107
  %144 = and i16 %104, 255
  %145 = zext i16 %144 to i32
  %146 = add nsw i32 %145, -1
  %147 = icmp ugt i32 %146, 46
  %148 = or i1 %111, %147
  br i1 %148, label %258, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %101, i64 0, i32 0, i64 32
  %151 = bitcast i8* %150 to %class.sk_sp.309*
  %152 = icmp eq %class.sk_sp.309* %7, %151
  br i1 %152, label %168, label %153

153:                                              ; preds = %149
  %154 = bitcast i8* %150 to %"class.cc::PaintOpBuffer"**
  %155 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %154, align 8
  %156 = icmp eq %"class.cc::PaintOpBuffer"* %155, null
  br i1 %156, label %160, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %155, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = atomicrmw add i32* %158, i32 1 monotonic
  br label %160

160:                                              ; preds = %157, %153
  store %"class.cc::PaintOpBuffer"* %155, %"class.cc::PaintOpBuffer"** %49, align 8
  br label %161

161:                                              ; preds = %160, %141
  %162 = phi %"class.cc::PaintOpBuffer"* [ %155, %160 ], [ %142, %141 ]
  %163 = icmp eq %"class.cc::PaintOpBuffer"* %162, null
  br i1 %163, label %168, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %162, i64 0, i32 5
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %173

168:                                              ; preds = %164, %161, %149
  %169 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %95, align 8
  %170 = call dereferenceable(152) %"class.blink::EffectPaintPropertyNode"* @_ZN5blink23EffectPaintPropertyNode4RootEv() #12
  %171 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %170, i64 0, i32 0
  %172 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %169, %171
  br i1 %172, label %258, label %173

173:                                              ; preds = %168, %164
  %174 = and i8 %100, 1
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext18SwitchToChunkStateERKNS_10PaintChunkE(%"class.blink::(anonymous namespace)::ConversionContext"* nonnull %10, %"struct.blink::PaintChunk"* dereferenceable(112) %71) #12
  br label %177

177:                                              ; preds = %176, %173
  %178 = phi i8 [ %100, %173 ], [ 1, %176 ]
  %179 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %49, align 8
  %180 = icmp eq %"class.cc::PaintOpBuffer"* %179, null
  br i1 %180, label %188, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %179, i64 0, i32 5
  %183 = load i64, i64* %182, align 8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %188, label %185

185:                                              ; preds = %181
  %186 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %33, align 8
  %187 = call i64 @_ZN2cc15DisplayItemList4pushINS_12DrawRecordOpEJ5sk_spIKNS_13PaintOpBufferEEEEEmDpOT0_(%"class.cc::DisplayItemList"* %186, %class.sk_sp.309* nonnull dereferenceable(8) %7) #12
  br label %188

188:                                              ; preds = %185, %181, %177
  %189 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #12
  %190 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %101, i64 0, i32 0, i64 8
  %191 = bitcast i8* %190 to %"class.blink::IntRect"*
  %192 = call { i64, i64 } @_ZNK5blink18ChunkToLayerMapper13MapVisualRectERKNS_7IntRectE(%"class.blink::ChunkToLayerMapper"* %31, %"class.blink::IntRect"* dereferenceable(16) %191) #12
  %193 = extractvalue { i64, i64 } %192, 0
  %194 = trunc i64 %193 to i32
  %195 = lshr i64 %193, 32
  %196 = trunc i64 %195 to i32
  %197 = extractvalue { i64, i64 } %192, 1
  %198 = trunc i64 %197 to i32
  %199 = lshr i64 %197, 32
  %200 = trunc i64 %199 to i32
  %201 = icmp sgt i32 %194, 0
  %202 = icmp sgt i32 %198, 0
  %203 = and i1 %201, %202
  %204 = sub nuw nsw i32 2147483647, %194
  %205 = icmp ult i32 %204, %198
  %206 = and i1 %205, %203
  %207 = select i1 %206, i32 %204, i32 %198
  %208 = icmp sgt i32 %196, 0
  %209 = icmp sgt i32 %200, 0
  %210 = and i1 %208, %209
  %211 = sub nuw nsw i32 2147483647, %196
  %212 = icmp ult i32 %211, %200
  %213 = and i1 %212, %210
  %214 = select i1 %213, i32 %211, i32 %200
  %215 = icmp sgt i32 %207, 0
  %216 = select i1 %215, i32 %207, i32 0
  %217 = icmp sgt i32 %214, 0
  %218 = select i1 %217, i32 %214, i32 0
  %219 = zext i32 %218 to i64
  %220 = shl nuw nsw i64 %219, 32
  %221 = zext i32 %216 to i64
  %222 = or i64 %220, %221
  store i64 %193, i64* %55, align 8
  store i64 %222, i64* %56, align 8
  %223 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %189, i64 0, i32 8
  %224 = load i32, i32* %223, align 8
  %225 = icmp eq i32 %224, 1
  br i1 %225, label %257, label %226

226:                                              ; preds = %188
  %227 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %189, i64 0, i32 5
  %228 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %189, i64 0, i32 4, i32 5
  %229 = load i64, i64* %228, align 8
  %230 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %189, i64 0, i32 5, i32 0, i32 1
  %231 = bitcast %"class.gfx::Rect"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.std::__1::vector.161"* %227 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = sub i64 %232, %234
  %236 = ashr exact i64 %235, 4
  %237 = icmp ugt i64 %229, %236
  %238 = inttoptr i64 %234 to %"class.gfx::Rect"*
  br i1 %237, label %239, label %241

239:                                              ; preds = %226
  %240 = sub i64 %229, %236
  call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEmRKS2_(%"class.std::__1::vector.161"* %227, i64 %240, %"class.gfx::Rect"* nonnull dereferenceable(16) %34) #12
  br label %245

241:                                              ; preds = %226
  %242 = icmp ult i64 %229, %236
  br i1 %242, label %243, label %245

243:                                              ; preds = %241
  %244 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %238, i64 %229
  store %"class.gfx::Rect"* %244, %"class.gfx::Rect"** %230, align 8
  br label %245

245:                                              ; preds = %243, %241, %239
  %246 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %189, i64 0, i32 7, i32 0, i32 0
  %247 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %246, align 8
  %248 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %189, i64 0, i32 7, i32 0, i32 1
  %249 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %248, align 8
  %250 = icmp eq %"struct.cc::DisplayItemList::PairedBeginInfo"* %247, %249
  br i1 %250, label %257, label %251

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %249, i64 -1, i32 0
  %253 = load i64, i64* %252, align 8
  %254 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %189, i64 0, i32 5, i32 0, i32 0
  %255 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %254, align 8
  %256 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %255, i64 %253
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* %256, %"class.gfx::Rect"* nonnull dereferenceable(16) %34) #12
  br label %257

257:                                              ; preds = %251, %245, %188
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #12
  br label %258

258:                                              ; preds = %257, %168, %143
  %259 = phi i8 [ %100, %143 ], [ %100, %168 ], [ %178, %257 ]
  %260 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %49, align 8
  %261 = icmp eq %"class.cc::PaintOpBuffer"* %260, null
  br i1 %261, label %272, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %260, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = atomicrmw add i32* %263, i32 -1 acq_rel
  %265 = icmp eq i32 %264, 1
  br i1 %265, label %266, label %272

266:                                              ; preds = %262
  %267 = bitcast %"class.cc::PaintOpBuffer"* %260 to %class.SkRefCntBase*
  %268 = bitcast %"class.cc::PaintOpBuffer"* %260 to void (%class.SkRefCntBase*)***
  %269 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %268, align 8
  %270 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %269, i64 2
  %271 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %270, align 8
  call void %271(%class.SkRefCntBase* nonnull %267) #12
  br label %272

272:                                              ; preds = %266, %262, %258, %99
  %273 = phi i8 [ %259, %258 ], [ %259, %262 ], [ %259, %266 ], [ %100, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #12
  %274 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %101, i64 1
  %275 = icmp eq %"struct.blink::DisplayItemList::ItemSlot"* %274, %90
  br i1 %275, label %96, label %99

276:                                              ; preds = %96, %79
  %277 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %71, i64 0, i32 5, i32 2, i32 0
  %278 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %277, align 8
  %279 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %57, align 8
  %280 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %278, %279
  br i1 %280, label %282, label %281

281:                                              ; preds = %276
  call fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext18SwitchToChunkStateERKNS_10PaintChunkE(%"class.blink::(anonymous namespace)::ConversionContext"* nonnull %10, %"struct.blink::PaintChunk"* dereferenceable(112) %71) #12
  br label %282

282:                                              ; preds = %281, %276, %96
  %283 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %71, i64 0, i32 9, i32 0, i32 0
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4
  %286 = sitofp <4 x i32> %285 to <4 x float>
  %287 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %71, i64 0, i32 5, i32 0, i32 0
  %288 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %287, align 8
  br label %289

289:                                              ; preds = %294, %282
  %290 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %288, %282 ], [ %292, %294 ]
  %291 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %290, i64 0, i32 0, i32 3, i32 0
  %292 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %291, align 8
  %293 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %292, null
  br i1 %293, label %298, label %294

294:                                              ; preds = %289
  %295 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %290, i64 0, i32 0, i32 1
  %296 = load i8, i8* %295, align 4, !range !2
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %298, label %289

298:                                              ; preds = %294, %289
  %299 = load i32, i32* %58, align 4
  %300 = icmp ne i32 %299, 0
  %301 = extractelement <4 x i32> %285, i32 2
  %302 = icmp sgt i32 %301, 0
  %303 = and i1 %302, %300
  %304 = extractelement <4 x i32> %285, i32 3
  %305 = icmp sgt i32 %304, 0
  %306 = and i1 %305, %303
  br i1 %306, label %307, label %313

307:                                              ; preds = %298
  %308 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %290 to %"class.blink::TransformPaintPropertyNode"*
  %309 = call fastcc dereferenceable(32) %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext16EffectBoundsInfoELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.243"* %59) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #12
  store <4 x float> %286, <4 x float>* %5, align 16
  %310 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo", %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %309, i64 0, i32 1
  %311 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %310, align 8
  call void @_ZN5blink14GeometryMapper23SourceToDestinationRectINS_9FloatRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_(%"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %308, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %311, %"class.blink::FloatRect"* nonnull dereferenceable(16) %6) #12
  %312 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo", %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %309, i64 0, i32 2
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* %312, %"class.blink::FloatRect"* nonnull dereferenceable(16) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #12
  br label %313

313:                                              ; preds = %307, %298
  %314 = add i32 %63, 1
  %315 = load i32, i32* %35, align 8
  %316 = icmp eq i32 %315, -1
  %317 = load i32, i32* %39, align 4
  %318 = load i32, i32* %40, align 4
  %319 = select i1 %316, i32 %317, i32 %318
  %320 = icmp eq i32 %314, %319
  br i1 %320, label %321, label %61

321:                                              ; preds = %313, %4
  %322 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 0
  %323 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  %324 = load i32, i32* %323, align 4
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %365, label %326

326:                                              ; preds = %321
  %327 = bitcast %"class.blink::TransformPaintPropertyNode"** %30 to i64*
  br label %328

328:                                              ; preds = %362, %326
  %329 = call fastcc dereferenceable(40) %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext10StateEntryELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.182"* nonnull %322) #12
  %330 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %329, i64 0, i32 0
  %331 = load i32, i32* %330, align 8
  %332 = icmp eq i32 %331, 1
  br i1 %332, label %333, label %335

333:                                              ; preds = %328
  call fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext9EndEffectEv(%"class.blink::(anonymous namespace)::ConversionContext"* nonnull %10) #12
  %334 = load i32, i32* %323, align 4
  br label %362

335:                                              ; preds = %328
  %336 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %30, align 8
  %337 = icmp eq %"class.blink::TransformPaintPropertyNode"* %336, null
  br i1 %337, label %343, label %338

338:                                              ; preds = %335
  %339 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %33, align 8
  %340 = call i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %339) #12
  %341 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %33, align 8
  call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %341) #12
  %342 = load i64, i64* %327, align 8
  store i64 %342, i64* %19, align 8
  store %"class.blink::TransformPaintPropertyNode"* null, %"class.blink::TransformPaintPropertyNode"** %30, align 8
  br label %343

343:                                              ; preds = %338, %335
  %344 = call fastcc dereferenceable(40) %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext10StateEntryELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.182"* nonnull %322) #12
  %345 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %33, align 8
  %346 = call i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %345) #12
  %347 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %33, align 8
  call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %347) #12
  %348 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %344, i64 0, i32 1
  %349 = bitcast %"class.blink::TransformPaintPropertyNode"** %348 to i64*
  %350 = load i64, i64* %349, align 8
  store i64 %350, i64* %19, align 8
  %351 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %344, i64 0, i32 4
  %352 = bitcast %"class.blink::TransformPaintPropertyNode"** %351 to i64*
  %353 = load i64, i64* %352, align 8
  store i64 %353, i64* %327, align 8
  %354 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %344, i64 0, i32 2
  %355 = bitcast %"class.blink::ClipPaintPropertyNode"** %354 to i64*
  %356 = load i64, i64* %355, align 8
  store i64 %356, i64* %23, align 8
  %357 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %344, i64 0, i32 3
  %358 = bitcast %"class.blink::EffectPaintPropertyNode"** %357 to i64*
  %359 = load i64, i64* %358, align 8
  store i64 %359, i64* %29, align 8
  %360 = load i32, i32* %323, align 4
  %361 = add i32 %360, -1
  store i32 %361, i32* %323, align 4
  br label %362

362:                                              ; preds = %343, %333
  %363 = phi i32 [ %361, %343 ], [ %334, %333 ]
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %328

365:                                              ; preds = %362, %321
  %366 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %30, align 8
  %367 = icmp eq %"class.blink::TransformPaintPropertyNode"* %366, null
  br i1 %367, label %374, label %368

368:                                              ; preds = %365
  %369 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %33, align 8
  %370 = call i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %369) #12
  %371 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %33, align 8
  call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %371) #12
  %372 = bitcast %"class.blink::TransformPaintPropertyNode"** %30 to i64*
  %373 = load i64, i64* %372, align 8
  store i64 %373, i64* %19, align 8
  store %"class.blink::TransformPaintPropertyNode"* null, %"class.blink::TransformPaintPropertyNode"** %30, align 8
  br label %374

374:                                              ; preds = %368, %365
  %375 = load i8, i8* %17, align 8, !range !2
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %381, label %377

377:                                              ; preds = %374
  %378 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %33, align 8
  %379 = call i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %378) #12
  %380 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %33, align 8
  call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %380) #12
  br label %381

381:                                              ; preds = %377, %374
  %382 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 8, i32 0, i32 0, i32 0
  %383 = load %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"*, %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"** %382, align 8
  %384 = icmp eq %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %383, null
  %385 = bitcast %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %383 to i8*
  br i1 %384, label %392, label %386, !prof !3

386:                                              ; preds = %381
  %387 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 8, i32 0, i32 0, i32 2
  %388 = load i32, i32* %387, align 4
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %391, label %390, !prof !4

390:                                              ; preds = %386
  store i32 0, i32* %387, align 4
  br label %391

391:                                              ; preds = %390, %386
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %385) #12
  store %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* null, %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"** %382, align 8
  br label %392

392:                                              ; preds = %391, %381
  %393 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %394 = load %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"*, %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"** %393, align 8
  %395 = icmp eq %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %394, null
  %396 = bitcast %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %394 to i8*
  br i1 %395, label %402, label %397, !prof !3

397:                                              ; preds = %392
  %398 = load i32, i32* %323, align 4
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %401, label %400, !prof !4

400:                                              ; preds = %397
  store i32 0, i32* %323, align 4
  br label %401

401:                                              ; preds = %400, %397
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %396) #12
  store %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* null, %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"** %393, align 8
  br label %402

402:                                              ; preds = %392, %401
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %11) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::DisplayItemList"* @_ZN5blink20PaintChunksToCcLayer7ConvertERKNS_16PaintChunkSubsetERKNS_17PropertyTreeStateERKN3gfx9Vector2dFEN2cc15DisplayItemList9UsageHintEPNS_37RasterUnderInvalidationCheckingParamsE(%"class.blink::PaintChunkSubset"* dereferenceable(32), %"class.blink::PropertyTreeState"* dereferenceable(24), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8), i32, %"struct.blink::RasterUnderInvalidationCheckingParams"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.cc::PaintRecorder", align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca %class.sk_sp.309, align 8
  %9 = alloca %class.sk_sp.126, align 8
  %10 = alloca %class.sk_sp.126, align 8
  %11 = alloca %class.sk_sp.309, align 8
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %"class.gfx::Rect"*
  %14 = tail call i8* @_Znwm(i64 640) #13
  %15 = bitcast i8* %14 to %"class.cc::DisplayItemList"*
  tail call void @_ZN2cc15DisplayItemListC1ENS0_9UsageHintE(%"class.cc::DisplayItemList"* nonnull %15, i32 %3) #12
  %16 = bitcast i8* %14 to i32*
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  tail call void @_ZN5blink20PaintChunksToCcLayer11ConvertIntoERKNS_16PaintChunkSubsetERKNS_17PropertyTreeStateERKN3gfx9Vector2dFERN2cc15DisplayItemListE(%"class.blink::PaintChunkSubset"* dereferenceable(32) %0, %"class.blink::PropertyTreeState"* dereferenceable(24) %1, %"class.gfx::Vector2dF"* dereferenceable(8) %2, %"class.cc::DisplayItemList"* nonnull dereferenceable(640) %15)
  %18 = icmp eq %"struct.blink::RasterUnderInvalidationCheckingParams"* %4, null
  br i1 %18, label %207, label %19

19:                                               ; preds = %5
  %20 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %21 = bitcast %"class.cc::PaintRecorder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.cc::PaintRecorder", %"class.cc::PaintRecorder"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = bitcast %"class.cc::PaintRecorder"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZN2cc13PaintRecorderC1Ev(%"class.cc::PaintRecorder"* nonnull %6) #12
  %24 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"struct.blink::RasterUnderInvalidationCheckingParams", %"struct.blink::RasterUnderInvalidationCheckingParams"* %4, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %25, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  %29 = getelementptr inbounds %"struct.blink::RasterUnderInvalidationCheckingParams", %"struct.blink::RasterUnderInvalidationCheckingParams"* %4, i64 0, i32 1, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = sitofp i32 %30 to float
  %32 = getelementptr inbounds %"struct.blink::RasterUnderInvalidationCheckingParams", %"struct.blink::RasterUnderInvalidationCheckingParams"* %4, i64 0, i32 1, i32 1, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = add nsw i32 %33, %27
  %35 = sitofp i32 %34 to float
  %36 = getelementptr inbounds %"struct.blink::RasterUnderInvalidationCheckingParams", %"struct.blink::RasterUnderInvalidationCheckingParams"* %4, i64 0, i32 1, i32 1, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, %30
  %39 = sitofp i32 %38 to float
  %40 = insertelement <2 x float> undef, float %28, i32 0
  %41 = insertelement <2 x float> %40, float %31, i32 1
  %42 = insertelement <2 x float> undef, float %35, i32 0
  %43 = insertelement <2 x float> %42, float %39, i32 1
  %44 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %41, <2 x float>* %44, align 8
  %45 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %43, <2 x float>* %45, align 8
  %46 = call %"class.cc::PaintCanvas"* @_ZN2cc13PaintRecorder14beginRecordingERK6SkRect(%"class.cc::PaintRecorder"* nonnull %6, %struct.SkRect* nonnull dereferenceable(16) %20) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  %47 = call i8* @_Znwm(i64 640) #13
  %48 = bitcast i8* %47 to %"class.cc::DisplayItemList"*
  call void @_ZN2cc15DisplayItemListC1ENS0_9UsageHintE(%"class.cc::DisplayItemList"* nonnull %48, i32 1) #12
  %49 = bitcast i8* %47 to i32*
  %50 = atomicrmw add i32* %49, i32 1 monotonic
  call void @_ZN5blink20PaintChunksToCcLayer11ConvertIntoERKNS_16PaintChunkSubsetERKNS_17PropertyTreeStateERKN3gfx9Vector2dFERN2cc15DisplayItemListE(%"class.blink::PaintChunkSubset"* dereferenceable(32) %0, %"class.blink::PropertyTreeState"* dereferenceable(24) %1, %"class.gfx::Vector2dF"* dereferenceable(8) %2, %"class.cc::DisplayItemList"* nonnull dereferenceable(640) %48)
  %51 = load %"class.cc::RecordPaintCanvas"*, %"class.cc::RecordPaintCanvas"** %22, align 8
  %52 = bitcast %class.sk_sp.126* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  call void @_ZN2cc15DisplayItemList15ReleaseAsRecordEv(%class.sk_sp.126* nonnull sret %9, %"class.cc::DisplayItemList"* nonnull %48) #12
  %53 = getelementptr inbounds %class.sk_sp.126, %class.sk_sp.126* %9, i64 0, i32 0
  %54 = bitcast %class.sk_sp.126* %9 to i64*
  %55 = load i64, i64* %54, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %53, align 8
  %56 = bitcast %class.sk_sp.309* %8 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.cc::RecordPaintCanvas"* %51 to void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.309*)***
  %58 = load void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.309*)**, void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.309*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.309*)*, void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.309*)** %58, i64 40
  %60 = load void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.309*)*, void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.309*)** %59, align 8
  call void %60(%"class.cc::RecordPaintCanvas"* %51, %class.sk_sp.309* nonnull %8) #12
  %61 = getelementptr inbounds %class.sk_sp.309, %class.sk_sp.309* %8, i64 0, i32 0
  %62 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %61, align 8
  %63 = icmp eq %"class.cc::PaintOpBuffer"* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %19
  %65 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %62, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = bitcast %"class.cc::PaintOpBuffer"* %62 to %class.SkRefCntBase*
  %70 = bitcast %"class.cc::PaintOpBuffer"* %62 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8
  call void %73(%class.SkRefCntBase* nonnull %69) #12
  br label %74

74:                                               ; preds = %19, %64, %68
  %75 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %53, align 8
  %76 = icmp eq %"class.cc::PaintOpBuffer"* %75, null
  br i1 %76, label %87, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %75, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %87

81:                                               ; preds = %77
  %82 = bitcast %"class.cc::PaintOpBuffer"* %75 to %class.SkRefCntBase*
  %83 = bitcast %"class.cc::PaintOpBuffer"* %75 to void (%class.SkRefCntBase*)***
  %84 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, i64 2
  %86 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, align 8
  call void %86(%class.SkRefCntBase* nonnull %82) #12
  br label %87

87:                                               ; preds = %74, %77, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  %88 = getelementptr inbounds %"struct.blink::RasterUnderInvalidationCheckingParams", %"struct.blink::RasterUnderInvalidationCheckingParams"* %4, i64 0, i32 0
  %89 = load %"class.blink::RasterInvalidationTracking"*, %"class.blink::RasterInvalidationTracking"** %88, align 8
  %90 = getelementptr inbounds %"struct.blink::RasterUnderInvalidationCheckingParams", %"struct.blink::RasterUnderInvalidationCheckingParams"* %4, i64 0, i32 2
  call void @_ZN2cc13PaintRecorder24finishRecordingAsPictureEv(%class.sk_sp.126* nonnull sret %10, %"class.cc::PaintRecorder"* nonnull %6) #12
  call void @_ZN5blink26RasterInvalidationTracking23CheckUnderInvalidationsERKN3WTF6StringE5sk_spIN2cc13PaintOpBufferEERKNS_7IntRectE(%"class.blink::RasterInvalidationTracking"* %89, %"class.WTF::String"* dereferenceable(8) %90, %class.sk_sp.126* nonnull %10, %"class.blink::IntRect"* dereferenceable(16) %25) #12
  %91 = getelementptr inbounds %class.sk_sp.126, %class.sk_sp.126* %10, i64 0, i32 0
  %92 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %91, align 8
  %93 = icmp eq %"class.cc::PaintOpBuffer"* %92, null
  br i1 %93, label %104, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %92, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 -1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %104

98:                                               ; preds = %94
  %99 = bitcast %"class.cc::PaintOpBuffer"* %92 to %class.SkRefCntBase*
  %100 = bitcast %"class.cc::PaintOpBuffer"* %92 to void (%class.SkRefCntBase*)***
  %101 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %100, align 8
  %102 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, i64 2
  %103 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, align 8
  call void %103(%class.SkRefCntBase* nonnull %99) #12
  br label %104

104:                                              ; preds = %87, %94, %98
  %105 = bitcast %class.sk_sp.309* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #12
  %106 = getelementptr inbounds %class.sk_sp.309, %class.sk_sp.309* %11, i64 0, i32 0
  store %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*), %"class.cc::PaintOpBuffer"** %106, align 8
  %107 = load %"class.blink::RasterInvalidationTracking"*, %"class.blink::RasterInvalidationTracking"** %88, align 8
  %108 = getelementptr inbounds %"class.blink::RasterInvalidationTracking", %"class.blink::RasterInvalidationTracking"* %107, i64 0, i32 5, i32 0
  %109 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %108, align 8, !noalias !5
  %110 = icmp eq %"class.cc::PaintOpBuffer"* %109, null
  br i1 %110, label %111, label %112

111:                                              ; preds = %104
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %106, align 8, !alias.scope !5
  br label %202

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %109, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 1 monotonic, !noalias !5
  store %"class.cc::PaintOpBuffer"* %109, %"class.cc::PaintOpBuffer"** %106, align 8, !alias.scope !5
  %115 = call i64 @_ZN2cc15DisplayItemList4pushINS_12DrawRecordOpEJ5sk_spIKNS_13PaintOpBufferEEEEEmDpOT0_(%"class.cc::DisplayItemList"* nonnull %15, %class.sk_sp.309* nonnull dereferenceable(8) %11)
  %116 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #12
  %117 = load i32, i32* %26, align 4
  %118 = load i32, i32* %29, align 4
  %119 = load i32, i32* %32, align 4
  %120 = load i32, i32* %36, align 4
  %121 = icmp sgt i32 %117, 0
  %122 = icmp sgt i32 %119, 0
  %123 = and i1 %121, %122
  %124 = sub nuw nsw i32 2147483647, %117
  %125 = icmp ult i32 %124, %119
  %126 = and i1 %125, %123
  %127 = select i1 %126, i32 %124, i32 %119
  %128 = icmp sgt i32 %118, 0
  %129 = icmp sgt i32 %120, 0
  %130 = and i1 %128, %129
  %131 = sub nuw nsw i32 2147483647, %118
  %132 = icmp ult i32 %131, %120
  %133 = and i1 %132, %130
  %134 = select i1 %133, i32 %131, i32 %120
  %135 = icmp sgt i32 %127, 0
  %136 = select i1 %135, i32 %127, i32 0
  %137 = icmp sgt i32 %134, 0
  %138 = select i1 %137, i32 %134, i32 0
  %139 = zext i32 %118 to i64
  %140 = shl nuw i64 %139, 32
  %141 = zext i32 %117 to i64
  %142 = or i64 %140, %141
  %143 = zext i32 %138 to i64
  %144 = shl nuw nsw i64 %143, 32
  %145 = zext i32 %136 to i64
  %146 = or i64 %144, %145
  %147 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %142, i64* %147, align 8
  %148 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  store i64 %146, i64* %148, align 8
  %149 = getelementptr inbounds i8, i8* %14, i64 632
  %150 = bitcast i8* %149 to i32*
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 1
  br i1 %152, label %189, label %153

153:                                              ; preds = %112
  %154 = getelementptr inbounds i8, i8* %14, i64 560
  %155 = getelementptr inbounds i8, i8* %14, i64 528
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds i8, i8* %14, i64 568
  %159 = bitcast i8* %158 to %"class.gfx::Rect"**
  %160 = bitcast i8* %158 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast i8* %154 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = sub i64 %161, %163
  %165 = ashr exact i64 %164, 4
  %166 = icmp ugt i64 %157, %165
  %167 = inttoptr i64 %163 to %"class.gfx::Rect"*
  br i1 %166, label %168, label %171

168:                                              ; preds = %153
  %169 = bitcast i8* %154 to %"class.std::__1::vector.161"*
  %170 = sub i64 %157, %165
  call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEmRKS2_(%"class.std::__1::vector.161"* %169, i64 %170, %"class.gfx::Rect"* nonnull dereferenceable(16) %13) #12
  br label %175

171:                                              ; preds = %153
  %172 = icmp ult i64 %157, %165
  br i1 %172, label %173, label %175

173:                                              ; preds = %171
  %174 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %167, i64 %157
  store %"class.gfx::Rect"* %174, %"class.gfx::Rect"** %159, align 8
  br label %175

175:                                              ; preds = %173, %171, %168
  %176 = getelementptr inbounds i8, i8* %14, i64 608
  %177 = bitcast i8* %176 to %"struct.cc::DisplayItemList::PairedBeginInfo"**
  %178 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %177, align 8
  %179 = getelementptr inbounds i8, i8* %14, i64 616
  %180 = bitcast i8* %179 to %"struct.cc::DisplayItemList::PairedBeginInfo"**
  %181 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %180, align 8
  %182 = icmp eq %"struct.cc::DisplayItemList::PairedBeginInfo"* %178, %181
  br i1 %182, label %189, label %183

183:                                              ; preds = %175
  %184 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %181, i64 -1, i32 0
  %185 = load i64, i64* %184, align 8
  %186 = bitcast i8* %154 to %"class.gfx::Rect"**
  %187 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %186, align 8
  %188 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %187, i64 %185
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* %188, %"class.gfx::Rect"* nonnull dereferenceable(16) %13) #12
  br label %189

189:                                              ; preds = %183, %175, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #12
  %190 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %106, align 8
  %191 = icmp eq %"class.cc::PaintOpBuffer"* %190, null
  br i1 %191, label %202, label %192

192:                                              ; preds = %189
  %193 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %190, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = atomicrmw add i32* %193, i32 -1 acq_rel
  %195 = icmp eq i32 %194, 1
  br i1 %195, label %196, label %202

196:                                              ; preds = %192
  %197 = bitcast %"class.cc::PaintOpBuffer"* %190 to %class.SkRefCntBase*
  %198 = bitcast %"class.cc::PaintOpBuffer"* %190 to void (%class.SkRefCntBase*)***
  %199 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %198, align 8
  %200 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %199, i64 2
  %201 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %200, align 8
  call void %201(%class.SkRefCntBase* nonnull %197) #12
  br label %202

202:                                              ; preds = %196, %192, %189, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #12
  %203 = atomicrmw sub i32* %49, i32 1 acq_rel
  %204 = icmp eq i32 %203, 1
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"* nonnull %48) #12
  call void @_ZdlPv(i8* nonnull %47) #13
  br label %206

206:                                              ; preds = %202, %205
  call void @_ZN2cc13PaintRecorderD1Ev(%"class.cc::PaintRecorder"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  br label %207

207:                                              ; preds = %5, %206
  call void @_ZN2cc15DisplayItemList8FinalizeEv(%"class.cc::DisplayItemList"* nonnull %15) #12
  ret %"class.cc::DisplayItemList"* %15
}

declare void @_ZN2cc13PaintRecorderC1Ev(%"class.cc::PaintRecorder"*) unnamed_addr #2

declare %"class.cc::PaintCanvas"* @_ZN2cc13PaintRecorder14beginRecordingERK6SkRect(%"class.cc::PaintRecorder"*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN2cc15DisplayItemList15ReleaseAsRecordEv(%class.sk_sp.126* sret, %"class.cc::DisplayItemList"*) local_unnamed_addr #2

declare void @_ZN5blink26RasterInvalidationTracking23CheckUnderInvalidationsERKN3WTF6StringE5sk_spIN2cc13PaintOpBufferEERKNS_7IntRectE(%"class.blink::RasterInvalidationTracking"*, %"class.WTF::String"* dereferenceable(8), %class.sk_sp.126*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN2cc13PaintRecorder24finishRecordingAsPictureEv(%class.sk_sp.126* sret, %"class.cc::PaintRecorder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_12DrawRecordOpEJ5sk_spIKNS_13PaintOpBufferEEEEEmDpOT0_(%"class.cc::DisplayItemList"*, %class.sk_sp.309* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.sk_sp.309, align 8
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.168"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.168"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #14
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #12
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %76, %73, %18, %2
  %79 = bitcast %class.sk_sp.309* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79)
  %80 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %4, i64 16) #12
  %81 = bitcast i8* %80 to %"class.cc::DrawRecordOp"*
  %82 = getelementptr inbounds %class.sk_sp.309, %class.sk_sp.309* %1, i64 0, i32 0
  %83 = bitcast %class.sk_sp.309* %1 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %82, align 8
  %85 = bitcast %class.sk_sp.309* %3 to i64*
  store i64 %84, i64* %85, align 8
  call void @_ZN2cc12DrawRecordOpC1E5sk_spIKNS_13PaintOpBufferEE(%"class.cc::DrawRecordOp"* %81, %class.sk_sp.309* nonnull %3) #12
  %86 = getelementptr inbounds %class.sk_sp.309, %class.sk_sp.309* %3, i64 0, i32 0
  %87 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %86, align 8
  %88 = icmp eq %"class.cc::PaintOpBuffer"* %87, null
  br i1 %88, label %99, label %89

89:                                               ; preds = %78
  %90 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %87, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %99

93:                                               ; preds = %89
  %94 = bitcast %"class.cc::PaintOpBuffer"* %87 to %class.SkRefCntBase*
  %95 = bitcast %"class.cc::PaintOpBuffer"* %87 to void (%class.SkRefCntBase*)***
  %96 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %95, align 8
  %97 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, i64 2
  %98 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, align 8
  call void %98(%class.SkRefCntBase* nonnull %94) #12
  br label %99

99:                                               ; preds = %78, %89, %93
  %100 = bitcast i8* %80 to i32*
  %101 = load i32, i32* %100, align 8
  %102 = and i32 %101, 255
  %103 = or i32 %102, 4096
  store i32 %103, i32* %100, align 8
  call void @_ZN2cc13PaintOpBuffer14AnalyzeAddedOpINS_12DrawRecordOpEEEvPKT_(%"class.cc::PaintOpBuffer"* %4, %"class.cc::DrawRecordOp"* %81) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79)
  ret i64 %6
}

; Function Attrs: nounwind
declare void @_ZN2cc13PaintRecorderD1Ev(%"class.cc::PaintRecorder"*) unnamed_addr #3

declare void @_ZN2cc15DisplayItemList8FinalizeEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20PaintChunksToCcLayer21UpdateLayerPropertiesERN2cc5LayerERKNS_17PropertyTreeStateERKNS_16PaintChunkSubsetERN3viz9SelectionINS1_19LayerSelectionBoundEEEPNS_19PropertyTreeManagerE(%"class.cc::Layer"* dereferenceable(232), %"class.blink::PropertyTreeState"* dereferenceable(24), %"class.blink::PaintChunkSubset"* dereferenceable(32), %"struct.viz::Selection"* nocapture dereferenceable(56), %"class.blink::PropertyTreeManager"*) local_unnamed_addr #4 align 2 {
  %6 = alloca %"class.blink::FloatClipRect", align 16
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %"class.blink::FloatClipRect", align 16
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca %"class.blink::FloatClipRect", align 8
  %11 = alloca { i64, i64 }, align 8
  %12 = alloca %"class.cc::TouchActionRegion", align 8
  %13 = alloca %"class.cc::Region", align 8
  %14 = alloca %"class.cc::Region", align 8
  %15 = alloca %"class.blink::PropertyTreeState", align 8
  %16 = alloca %"class.blink::PropertyTreeStateOrAlias", align 16
  %17 = alloca %"class.cc::TouchActionRegion", align 8
  %18 = alloca %"class.cc::Region", align 8
  %19 = alloca %"class.WTF::Vector.583", align 8
  %20 = alloca %"class.blink::Color", align 4
  %21 = alloca %"class.blink::Color", align 4
  %22 = alloca %"class.blink::Color", align 4
  %23 = alloca %"class.blink::FloatPoint", align 4
  %24 = alloca %"class.blink::PropertyTreeState", align 8
  %25 = alloca %"class.blink::PropertyTreeStateOrAlias", align 16
  %26 = alloca %"struct.cc::LayerSelectionBound", align 4
  %27 = alloca %"struct.cc::LayerSelectionBound", align 4
  %28 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %1, i64 0, i32 0, i32 2
  %29 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %28 to %"class.blink::EffectPaintPropertyNode"**
  %30 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %29, align 8
  %31 = bitcast %"class.WTF::Vector.583"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %19, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %19, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %19, i64 0, i32 0, i32 0, i32 2
  %35 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %19, i64 0, i32 0, i32 1, i64 0
  %36 = bitcast %"class.WTF::Vector.583"* %19 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false) #12
  store i8* %35, i8** %36, align 8
  store i32 4, i32* %33, align 8
  store i32 0, i32* %34, align 4
  %37 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 5, i32 2, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = sitofp i32 %38 to float
  %40 = fmul float %39, 5.000000e-01
  %41 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 5, i32 2, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = sitofp i32 %42 to float
  %44 = fmul float %40, %43
  %45 = getelementptr inbounds %"class.blink::PaintChunkSubset", %"class.blink::PaintChunkSubset"* %2, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, -1
  %48 = getelementptr inbounds %"class.blink::PaintChunkSubset", %"class.blink::PaintChunkSubset"* %2, i64 0, i32 1, i32 0, i32 0, i32 2
  %49 = getelementptr inbounds %"class.blink::PaintChunkSubset", %"class.blink::PaintChunkSubset"* %2, i64 0, i32 3
  %50 = load i32, i32* %48, align 4
  %51 = load i32, i32* %49, align 4
  %52 = select i1 %47, i32 %50, i32 %51
  %53 = select i1 %47, i32 0, i32 %46
  %54 = icmp eq i32 %52, %53
  %55 = bitcast i8* %35 to %"class.blink::Color"*
  br i1 %54, label %56, label %59

56:                                               ; preds = %5
  %57 = bitcast %"class.blink::Color"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #12
  %58 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %21, i64 0, i32 0
  store i32 0, i32* %58, align 4
  br label %164

59:                                               ; preds = %5
  %60 = getelementptr inbounds %"class.blink::PaintChunkSubset", %"class.blink::PaintChunkSubset"* %2, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::PaintChunkSubset", %"class.blink::PaintChunkSubset"* %2, i64 0, i32 1
  %62 = bitcast %"class.blink::Color"* %20 to i8*
  %63 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %20, i64 0, i32 0
  br label %64

64:                                               ; preds = %148, %59
  %65 = phi i1 [ %47, %59 ], [ %150, %148 ]
  %66 = phi i32 [ %52, %59 ], [ %67, %148 ]
  %67 = add i32 %66, -1
  %68 = load %"class.blink::PaintArtifact"*, %"class.blink::PaintArtifact"** %60, align 8
  %69 = getelementptr inbounds %"class.blink::PaintArtifact", %"class.blink::PaintArtifact"* %68, i64 0, i32 3
  br i1 %65, label %70, label %73

70:                                               ; preds = %64
  %71 = call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %61, i32 %67) #12
  %72 = load i32, i32* %71, align 4
  br label %73

73:                                               ; preds = %70, %64
  %74 = phi i32 [ %72, %70 ], [ %67, %64 ]
  %75 = call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZNK3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %69, i32 %74) #12
  %76 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %75, i64 0, i32 2, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %148, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %75, i64 0, i32 3
  %81 = load float, float* %80, align 4
  %82 = fcmp ult float %81, %44
  br i1 %82, label %148, label %83

83:                                               ; preds = %79
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #12
  store i32 %77, i32* %63, align 4
  %84 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %75, i64 0, i32 5, i32 2, i32 0
  %85 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %84, align 8
  br label %86

86:                                               ; preds = %91, %83
  %87 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %85, %83 ], [ %89, %91 ]
  %88 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %87, i64 0, i32 0, i32 3, i32 0
  %89 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %88, align 8
  %90 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %87, i64 0, i32 0, i32 1
  %93 = load i8, i8* %92, align 4, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %86

95:                                               ; preds = %91, %86
  %96 = phi i1 [ false, %91 ], [ true, %86 ]
  %97 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %87 to %"class.blink::EffectPaintPropertyNode"*
  %98 = icmp eq %"class.blink::EffectPaintPropertyNode"* %30, %97
  br i1 %98, label %132, label %99

99:                                               ; preds = %95
  br i1 %96, label %111, label %100

100:                                              ; preds = %99, %105
  %101 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %103, %105 ], [ %89, %99 ]
  %102 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %101, i64 0, i32 0, i32 3, i32 0
  %103 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %102, align 8
  %104 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %103, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %101, i64 0, i32 0, i32 1
  %107 = load i8, i8* %106, align 4, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %100

109:                                              ; preds = %105, %100
  %110 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %101 to %"class.blink::EffectPaintPropertyNode"*
  br label %111

111:                                              ; preds = %109, %99
  %112 = phi %"class.blink::EffectPaintPropertyNode"* [ %110, %109 ], [ null, %99 ]
  %113 = icmp eq %"class.blink::EffectPaintPropertyNode"* %112, %30
  br i1 %113, label %114, label %147

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %87, i64 3, i32 0, i32 5
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 3
  br i1 %117, label %118, label %147

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %87, i64 1, i32 0, i32 4
  %120 = bitcast i32* %119 to %"class.blink::CompositorFilterOperations"*
  %121 = call zeroext i1 @_ZNK5blink26CompositorFilterOperations7IsEmptyEv(%"class.blink::CompositorFilterOperations"* %120) #12
  br i1 %121, label %122, label %147

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %87, i64 3, i32 0, i32 3
  %124 = bitcast %class.scoped_refptr.5* %123 to %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"**
  %125 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %124, align 8
  %126 = icmp eq %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %125, null
  br i1 %126, label %127, label %147

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %87, i64 3, i32 0, i32 4
  %129 = bitcast i32* %128 to float*
  %130 = load float, float* %129, align 8
  %131 = call i32 @_ZNK5blink5Color16CombineWithAlphaEf(%"class.blink::Color"* nonnull %20, float %130) #12
  store i32 %131, i32* %63, align 4
  br label %132

132:                                              ; preds = %127, %95
  %133 = phi i32 [ %77, %95 ], [ %131, %127 ]
  %134 = load i32, i32* %34, align 4
  %135 = load i32, i32* %33, align 8
  %136 = icmp eq i32 %134, %135
  br i1 %136, label %143, label %137, !prof !4

137:                                              ; preds = %132
  %138 = load %"class.blink::Color"*, %"class.blink::Color"** %32, align 8
  %139 = zext i32 %134 to i64
  %140 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %138, i64 %139, i32 0
  store i32 %133, i32* %140, align 4
  %141 = load i32, i32* %34, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %34, align 4
  br label %144

143:                                              ; preds = %132
  call void @_ZN3WTF6VectorIN5blink5ColorELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.583"* nonnull %19, %"class.blink::Color"* nonnull dereferenceable(4) %20) #12
  br label %144

144:                                              ; preds = %143, %137
  %145 = load i32, i32* %63, align 4
  %146 = icmp ult i32 %145, -16777216
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #12
  br i1 %146, label %148, label %153

147:                                              ; preds = %122, %118, %114, %111
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #12
  br label %148

148:                                              ; preds = %147, %144, %79, %73
  %149 = load i32, i32* %45, align 8
  %150 = icmp eq i32 %149, -1
  %151 = select i1 %150, i32 0, i32 %149
  %152 = icmp eq i32 %67, %151
  br i1 %152, label %153, label %64

153:                                              ; preds = %148, %144
  %154 = load %"class.blink::Color"*, %"class.blink::Color"** %32, align 8
  %155 = load i32, i32* %34, align 4
  %156 = bitcast %"class.blink::Color"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %156) #12
  %157 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %21, i64 0, i32 0
  store i32 0, i32* %157, align 4
  %158 = icmp eq i32 %155, 0
  br i1 %158, label %164, label %159

159:                                              ; preds = %153
  %160 = zext i32 %155 to i64
  %161 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %154, i64 %160
  %162 = bitcast %"class.blink::Color"* %22 to i8*
  %163 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %22, i64 0, i32 0
  br label %178

164:                                              ; preds = %178, %153, %56
  %165 = phi i8* [ %156, %153 ], [ %57, %56 ], [ %156, %178 ]
  %166 = phi i32 [ 0, %153 ], [ 0, %56 ], [ %183, %178 ]
  %167 = bitcast %"class.cc::Layer"* %0 to void (%"class.cc::Layer"*, i32)***
  %168 = load void (%"class.cc::Layer"*, i32)**, void (%"class.cc::Layer"*, i32)*** %167, align 8
  %169 = load void (%"class.cc::Layer"*, i32)*, void (%"class.cc::Layer"*, i32)** %168, align 8
  call void %169(%"class.cc::Layer"* %0, i32 %166) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #12
  %170 = load i32, i32* %34, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %173, label %172, !prof !4

172:                                              ; preds = %164
  store i32 0, i32* %34, align 4
  br label %173

173:                                              ; preds = %172, %164
  %174 = load %"class.blink::Color"*, %"class.blink::Color"** %32, align 8
  %175 = icmp eq %"class.blink::Color"* %174, %55
  br i1 %175, label %185, label %176, !prof !3

176:                                              ; preds = %173
  %177 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %19, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink5ColorELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.584"* nonnull %177, %"class.blink::Color"* %174) #12
  br label %185

178:                                              ; preds = %178, %159
  %179 = phi %"class.blink::Color"* [ %161, %159 ], [ %180, %178 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %162) #12
  store i32 -1431655766, i32* %163, align 4
  %180 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %179, i64 -1
  %181 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %180, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  store i32 %182, i32* %163, align 4
  %183 = call i32 @_ZNK5blink5Color5BlendERKS0_(%"class.blink::Color"* nonnull %21, %"class.blink::Color"* nonnull dereferenceable(4) %22) #12
  store i32 %183, i32* %157, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %162) #12
  %184 = icmp eq %"class.blink::Color"* %180, %154
  br i1 %184, label %164, label %178

185:                                              ; preds = %173, %176
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #12
  %186 = bitcast %"class.cc::TouchActionRegion"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186)
  %187 = bitcast %"class.cc::Region"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187)
  %188 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 13
  %189 = bitcast %"class.gfx::Vector2dF"* %188 to <2 x float>*
  %190 = load <2 x float>, <2 x float>* %189, align 8
  %191 = extractelement <2 x float> %190, i32 0
  %192 = extractelement <2 x float> %190, i32 1
  %193 = bitcast %"class.cc::TouchActionRegion"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %193) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %193, i8 -86, i64 24, i1 false) #12
  call void @_ZN2cc17TouchActionRegionC1Ev(%"class.cc::TouchActionRegion"* nonnull %12) #12
  %194 = bitcast %"class.cc::Region"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %194) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %194, i8 -86, i64 24, i1 false) #12
  call void @_ZN2cc6RegionC1Ev(%"class.cc::Region"* nonnull %13) #12
  %195 = bitcast %"class.cc::Region"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 -86, i64 24, i1 false) #12
  call void @_ZN2cc6RegionC1Ev(%"class.cc::Region"* nonnull %14) #12
  %196 = load i32, i32* %45, align 8
  %197 = icmp eq i32 %196, -1
  %198 = select i1 %197, i32 0, i32 %196
  %199 = load i32, i32* %48, align 4
  %200 = load i32, i32* %49, align 4
  %201 = select i1 %197, i32 %199, i32 %200
  %202 = icmp eq i32 %198, %201
  br i1 %202, label %252, label %203

203:                                              ; preds = %185
  %204 = getelementptr inbounds %"class.blink::PaintChunkSubset", %"class.blink::PaintChunkSubset"* %2, i64 0, i32 0, i32 0
  %205 = getelementptr inbounds %"class.blink::PaintChunkSubset", %"class.blink::PaintChunkSubset"* %2, i64 0, i32 1
  %206 = bitcast %"class.blink::PropertyTreeState"* %15 to i8*
  %207 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %16 to i8*
  %208 = getelementptr inbounds %"class.blink::PropertyTreeStateOrAlias", %"class.blink::PropertyTreeStateOrAlias"* %16, i64 0, i32 2
  %209 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %208 to i64*
  %210 = bitcast { i64, i64 }* %7 to %"class.gfx::Rect"*
  %211 = bitcast %"class.blink::PropertyTreeState"* %15 to %"class.blink::TransformPaintPropertyNode"**
  %212 = bitcast %"class.blink::FloatClipRect"* %6 to i8*
  %213 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %6, i64 0, i32 0, i32 0, i32 0
  %214 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %6, i64 0, i32 0, i32 0, i32 1
  %215 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %6, i64 0, i32 0, i32 1, i32 0
  %216 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %6, i64 0, i32 0, i32 1, i32 1
  %217 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %6, i64 0, i32 1
  %218 = bitcast { i64, i64 }* %7 to i8*
  %219 = bitcast %"class.blink::FloatClipRect"* %6 to <2 x float>*
  %220 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %221 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %222 = bitcast i8* %217 to i32*
  %223 = bitcast { i64, i64 }* %9 to %"class.gfx::Rect"*
  %224 = bitcast %"class.blink::FloatClipRect"* %8 to i8*
  %225 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %8, i64 0, i32 0, i32 0, i32 0
  %226 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %8, i64 0, i32 0, i32 0, i32 1
  %227 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %8, i64 0, i32 0, i32 1, i32 0
  %228 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %8, i64 0, i32 0, i32 1, i32 1
  %229 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %8, i64 0, i32 1
  %230 = bitcast { i64, i64 }* %9 to i8*
  %231 = bitcast %"class.blink::FloatClipRect"* %8 to <2 x float>*
  %232 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %233 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %234 = bitcast i8* %229 to i32*
  %235 = bitcast { i64, i64 }* %11 to %"class.gfx::Rect"*
  %236 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 5, i32 9, i32 0
  %237 = icmp ne %"class.blink::PropertyTreeManager"* %4, null
  %238 = bitcast %"class.blink::FloatClipRect"* %10 to i8*
  %239 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %10, i64 0, i32 0, i32 0, i32 0
  %240 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %10, i64 0, i32 0, i32 0, i32 1
  %241 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %10, i64 0, i32 0, i32 1, i32 0
  %242 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %10, i64 0, i32 0, i32 1, i32 1
  %243 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %10, i64 0, i32 1
  %244 = bitcast i8* %243 to i32*
  %245 = bitcast { i64, i64 }* %11 to i8*
  %246 = bitcast %"class.blink::FloatClipRect"* %10 to <2 x float>*
  %247 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %248 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %249 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %16 to <2 x i64>*
  %250 = bitcast %"class.blink::FloatClipRect"* %6 to <4 x float>*
  %251 = bitcast %"class.blink::FloatClipRect"* %8 to <4 x float>*
  br label %256

252:                                              ; preds = %683, %185
  call void @_ZN2cc17TouchActionRegionC1EOS0_(%"class.cc::TouchActionRegion"* nonnull %17, %"class.cc::TouchActionRegion"* nonnull dereferenceable(24) %12) #12
  call void @_ZN2cc5Layer20SetTouchActionRegionENS_17TouchActionRegionE(%"class.cc::Layer"* %0, %"class.cc::TouchActionRegion"* nonnull %17) #12
  call void @_ZN2cc17TouchActionRegionD1Ev(%"class.cc::TouchActionRegion"* nonnull %17) #12
  %253 = getelementptr inbounds %"class.cc::Region", %"class.cc::Region"* %13, i64 0, i32 0
  %254 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 5, i32 8, i32 0
  %255 = call zeroext i1 @_ZNK8SkRegioneqERKS_(%class.SkRegion* nonnull %253, %class.SkRegion* dereferenceable(24) %254) #12
  br i1 %255, label %691, label %688

256:                                              ; preds = %686, %203
  %257 = phi i32 [ %196, %203 ], [ %687, %686 ]
  %258 = phi i32 [ %198, %203 ], [ %684, %686 ]
  %259 = load %"class.blink::PaintArtifact"*, %"class.blink::PaintArtifact"** %204, align 8
  %260 = getelementptr inbounds %"class.blink::PaintArtifact", %"class.blink::PaintArtifact"* %259, i64 0, i32 3
  %261 = icmp eq i32 %257, -1
  br i1 %261, label %262, label %265

262:                                              ; preds = %256
  %263 = call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %205, i32 %258) #12
  %264 = load i32, i32* %263, align 4
  br label %265

265:                                              ; preds = %262, %256
  %266 = phi i32 [ %264, %262 ], [ %258, %256 ]
  %267 = call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZNK3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %260, i32 %266) #12
  %268 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %267, i64 0, i32 6, i32 0, i32 0, i32 0
  %269 = load %"struct.blink::HitTestData"*, %"struct.blink::HitTestData"** %268, align 8
  %270 = icmp eq %"struct.blink::HitTestData"* %269, null
  br i1 %270, label %683, label %271

271:                                              ; preds = %265
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %206) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %206, i8 -86, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #12
  %272 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %267, i64 0, i32 5
  %273 = bitcast %"class.blink::RefCountedPropertyTreeState"* %272 to <2 x i64>*
  %274 = load <2 x i64>, <2 x i64>* %273, align 8, !noalias !8
  %275 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %267, i64 0, i32 5, i32 2, i32 0
  %276 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %275 to i64*
  %277 = load i64, i64* %276, align 8, !noalias !8
  store <2 x i64> %274, <2 x i64>* %249, align 16, !alias.scope !8
  store i64 %277, i64* %209, align 16, !alias.scope !8
  call void @_ZNK5blink24PropertyTreeStateOrAlias7UnaliasEv(%"class.blink::PropertyTreeState"* nonnull sret %15, %"class.blink::PropertyTreeStateOrAlias"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #12
  %278 = load %"struct.blink::HitTestData"*, %"struct.blink::HitTestData"** %268, align 8
  %279 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %211, align 8
  %280 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %279, i64 0, i32 1, i32 1, i32 0
  %281 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %280, align 8
  %282 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %281, null
  br i1 %282, label %302, label %287

283:                                              ; preds = %298
  %284 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %288, i64 0, i32 0, i32 3, i32 0
  %285 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %284, align 8
  %286 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %285, null
  br i1 %286, label %302, label %287

287:                                              ; preds = %271, %283
  %288 = phi %"class.blink::ScrollPaintPropertyNode"* [ %285, %283 ], [ %281, %271 ]
  %289 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %288, i64 0, i32 1, i32 2
  %290 = load i8, i8* %289, align 8, !range !2
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %298, label %292

292:                                              ; preds = %287
  %293 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %288, i64 0, i32 1, i32 0, i32 1, i32 0
  %294 = load i32, i32* %293, align 4
  %295 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %288, i64 0, i32 1, i32 1, i32 0
  %296 = load i32, i32* %295, align 4
  %297 = icmp slt i32 %294, %296
  br i1 %297, label %302, label %298

298:                                              ; preds = %292, %287
  %299 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %288, i64 0, i32 1, i32 8, i32 0
  %300 = load i32, i32* %299, align 8
  %301 = icmp eq i32 %300, 1
  br i1 %301, label %283, label %302

302:                                              ; preds = %298, %292, %283, %271
  %303 = phi i32 [ 0, %271 ], [ 0, %298 ], [ 64, %292 ], [ 0, %283 ]
  %304 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %278, i64 0, i32 0, i32 0, i32 0, i32 0
  %305 = load %"struct.blink::TouchActionRect"*, %"struct.blink::TouchActionRect"** %304, align 8
  %306 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %278, i64 0, i32 0, i32 0, i32 0, i32 2
  %307 = load i32, i32* %306, align 4
  %308 = zext i32 %307 to i64
  %309 = getelementptr inbounds %"struct.blink::TouchActionRect", %"struct.blink::TouchActionRect"* %305, i64 %308
  %310 = icmp eq i32 %307, 0
  br i1 %310, label %423, label %311

311:                                              ; preds = %302, %418
  %312 = phi %"struct.blink::TouchActionRect"* [ %419, %418 ], [ %305, %302 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %212) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %212, i8 -1, i64 16, i1 false) #12
  store i32 -1431655766, i32* %222, align 16
  %313 = bitcast %"struct.blink::TouchActionRect"* %312 to <4 x i32>*
  %314 = load <4 x i32>, <4 x i32>* %313, align 4
  %315 = sitofp <4 x i32> %314 to <4 x float>
  store <4 x float> %315, <4 x float>* %250, align 16
  store i8 -86, i8* %217, align 16
  %316 = call zeroext i1 @_ZN5blink14GeometryMapper25LocalToAncestorVisualRectERKNS_17PropertyTreeStateES3_RNS_13FloatClipRectENS_28OverlayScrollbarClipBehaviorENS_23InclusiveIntersectOrNotENS_33ExpandVisualRectForAnimationOrNotE(%"class.blink::PropertyTreeState"* nonnull dereferenceable(24) %15, %"class.blink::PropertyTreeState"* dereferenceable(24) %1, %"class.blink::FloatClipRect"* nonnull dereferenceable(20) %6, i32 0, i32 0, i32 0) #12
  br i1 %316, label %317, label %418

317:                                              ; preds = %311
  %318 = load i8, i8* %217, align 16
  %319 = and i8 %318, 4
  %320 = icmp eq i8 %319, 0
  br i1 %320, label %321, label %326

321:                                              ; preds = %317
  %322 = load float, float* %213, align 16
  %323 = fsub float %322, %191
  store float %323, float* %213, align 16
  %324 = load float, float* %214, align 4
  %325 = fsub float %324, %192
  store float %325, float* %214, align 4
  br label %326

326:                                              ; preds = %321, %317
  %327 = getelementptr inbounds %"struct.blink::TouchActionRect", %"struct.blink::TouchActionRect"* %312, i64 0, i32 1
  %328 = load i32, i32* %327, align 4
  %329 = and i32 %328, 3
  %330 = icmp eq i32 %329, 0
  %331 = select i1 %330, i32 0, i32 %303
  %332 = or i32 %331, %328
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %218) #12
  %333 = load <2 x float>, <2 x float>* %219, align 16
  %334 = extractelement <2 x float> %333, i32 0
  %335 = call float @llvm.floor.f32(float %334) #12
  %336 = fpext float %335 to double
  %337 = fcmp ult double %336, 0x41DFFFFFFFC00000
  br i1 %337, label %338, label %343

338:                                              ; preds = %326
  %339 = fcmp ugt float %335, 0xC1E0000000000000
  br i1 %339, label %340, label %343

340:                                              ; preds = %338
  %341 = fptosi float %335 to i32
  %342 = zext i32 %341 to i64
  br label %343

343:                                              ; preds = %340, %338, %326
  %344 = phi i64 [ %342, %340 ], [ 2147483647, %326 ], [ 2147483648, %338 ]
  %345 = extractelement <2 x float> %333, i32 1
  %346 = call float @llvm.floor.f32(float %345) #12
  %347 = fpext float %346 to double
  %348 = fcmp ult double %347, 0x41DFFFFFFFC00000
  br i1 %348, label %349, label %355

349:                                              ; preds = %343
  %350 = fcmp ugt float %346, 0xC1E0000000000000
  br i1 %350, label %351, label %355

351:                                              ; preds = %349
  %352 = fptosi float %346 to i32
  %353 = zext i32 %352 to i64
  %354 = shl nuw i64 %353, 32
  br label %355

355:                                              ; preds = %351, %349, %343
  %356 = phi i64 [ %354, %351 ], [ 9223372032559808512, %343 ], [ -9223372036854775808, %349 ]
  %357 = trunc i64 %344 to i32
  %358 = lshr exact i64 %356, 32
  %359 = trunc i64 %358 to i32
  %360 = load float, float* %215, align 8
  %361 = fadd float %334, %360
  %362 = load float, float* %214, align 4
  %363 = load float, float* %216, align 4
  %364 = fadd float %362, %363
  %365 = call float @llvm.ceil.f32(float %361) #12
  %366 = fpext float %365 to double
  %367 = fcmp ult double %366, 0x41DFFFFFFFC00000
  br i1 %367, label %368, label %372

368:                                              ; preds = %355
  %369 = fcmp ugt float %365, 0xC1E0000000000000
  br i1 %369, label %370, label %372

370:                                              ; preds = %368
  %371 = fptosi float %365 to i32
  br label %372

372:                                              ; preds = %370, %368, %355
  %373 = phi i32 [ %371, %370 ], [ 2147483647, %355 ], [ -2147483648, %368 ]
  %374 = call float @llvm.ceil.f32(float %364) #12
  %375 = fpext float %374 to double
  %376 = fcmp ult double %375, 0x41DFFFFFFFC00000
  br i1 %376, label %377, label %381

377:                                              ; preds = %372
  %378 = fcmp ugt float %374, 0xC1E0000000000000
  br i1 %378, label %379, label %381

379:                                              ; preds = %377
  %380 = fptosi float %374 to i32
  br label %381

381:                                              ; preds = %379, %377, %372
  %382 = phi i32 [ %380, %379 ], [ 2147483647, %372 ], [ -2147483648, %377 ]
  %383 = icmp sgt i32 %357, -1
  %384 = select i1 %383, i32 -2147483648, i32 2147483647
  %385 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %373, i32 %357) #12
  %386 = extractvalue { i32, i1 } %385, 1
  %387 = extractvalue { i32, i1 } %385, 0
  %388 = select i1 %386, i32 %384, i32 %387, !prof !4
  %389 = icmp sgt i32 %359, -1
  %390 = select i1 %389, i32 -2147483648, i32 2147483647
  %391 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %382, i32 %359) #12
  %392 = extractvalue { i32, i1 } %391, 1
  %393 = extractvalue { i32, i1 } %391, 0
  %394 = select i1 %392, i32 %390, i32 %393, !prof !4
  %395 = icmp sgt i32 %357, 0
  %396 = icmp sgt i32 %388, 0
  %397 = and i1 %395, %396
  %398 = sub nuw nsw i32 2147483647, %357
  %399 = icmp ult i32 %398, %388
  %400 = and i1 %399, %397
  %401 = select i1 %400, i32 %398, i32 %388
  %402 = icmp sgt i32 %359, 0
  %403 = icmp sgt i32 %394, 0
  %404 = and i1 %402, %403
  %405 = sub nuw nsw i32 2147483647, %359
  %406 = icmp ult i32 %405, %394
  %407 = and i1 %406, %404
  %408 = select i1 %407, i32 %405, i32 %394
  %409 = icmp sgt i32 %401, 0
  %410 = select i1 %409, i32 %401, i32 0
  %411 = icmp sgt i32 %408, 0
  %412 = select i1 %411, i32 %408, i32 0
  %413 = or i64 %356, %344
  %414 = zext i32 %412 to i64
  %415 = shl nuw nsw i64 %414, 32
  %416 = zext i32 %410 to i64
  %417 = or i64 %415, %416
  store i64 %413, i64* %220, align 8
  store i64 %417, i64* %221, align 8
  call void @_ZN2cc17TouchActionRegion5UnionENS_11TouchActionERKN3gfx4RectE(%"class.cc::TouchActionRegion"* nonnull %12, i32 %332, %"class.gfx::Rect"* nonnull dereferenceable(16) %210) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %218) #12
  br label %418

418:                                              ; preds = %311, %381
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %212) #12
  %419 = getelementptr inbounds %"struct.blink::TouchActionRect", %"struct.blink::TouchActionRect"* %312, i64 1
  %420 = icmp eq %"struct.blink::TouchActionRect"* %419, %309
  br i1 %420, label %421, label %311

421:                                              ; preds = %418
  %422 = load %"struct.blink::HitTestData"*, %"struct.blink::HitTestData"** %268, align 8
  br label %423

423:                                              ; preds = %421, %302
  %424 = phi %"struct.blink::HitTestData"* [ %422, %421 ], [ %278, %302 ]
  %425 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %424, i64 0, i32 1, i32 0, i32 0, i32 2
  %426 = load i32, i32* %425, align 4
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %543, label %428

428:                                              ; preds = %423
  %429 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features18kWheelEventRegionsE) #12
  br i1 %429, label %430, label %543

430:                                              ; preds = %428
  %431 = load %"struct.blink::HitTestData"*, %"struct.blink::HitTestData"** %268, align 8
  %432 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %431, i64 0, i32 1, i32 0, i32 0, i32 0
  %433 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %432, align 8
  %434 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %431, i64 0, i32 1, i32 0, i32 0, i32 2
  %435 = load i32, i32* %434, align 4
  %436 = zext i32 %435 to i64
  %437 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %433, i64 %436
  %438 = icmp eq i32 %435, 0
  br i1 %438, label %543, label %439

439:                                              ; preds = %430, %540
  %440 = phi %"class.blink::IntRect"* [ %541, %540 ], [ %433, %430 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %224) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %224, i8 -1, i64 16, i1 false) #12
  store i32 -1431655766, i32* %234, align 16
  %441 = bitcast %"class.blink::IntRect"* %440 to <4 x i32>*
  %442 = load <4 x i32>, <4 x i32>* %441, align 4
  %443 = sitofp <4 x i32> %442 to <4 x float>
  store <4 x float> %443, <4 x float>* %251, align 16
  store i8 -86, i8* %229, align 16
  %444 = call zeroext i1 @_ZN5blink14GeometryMapper25LocalToAncestorVisualRectERKNS_17PropertyTreeStateES3_RNS_13FloatClipRectENS_28OverlayScrollbarClipBehaviorENS_23InclusiveIntersectOrNotENS_33ExpandVisualRectForAnimationOrNotE(%"class.blink::PropertyTreeState"* nonnull dereferenceable(24) %15, %"class.blink::PropertyTreeState"* dereferenceable(24) %1, %"class.blink::FloatClipRect"* nonnull dereferenceable(20) %8, i32 0, i32 0, i32 0) #12
  br i1 %444, label %445, label %540

445:                                              ; preds = %439
  %446 = load i8, i8* %229, align 16
  %447 = and i8 %446, 4
  %448 = icmp eq i8 %447, 0
  br i1 %448, label %449, label %454

449:                                              ; preds = %445
  %450 = load float, float* %225, align 16
  %451 = fsub float %450, %191
  store float %451, float* %225, align 16
  %452 = load float, float* %226, align 4
  %453 = fsub float %452, %192
  store float %453, float* %226, align 4
  br label %454

454:                                              ; preds = %449, %445
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %230) #12
  %455 = load <2 x float>, <2 x float>* %231, align 16
  %456 = extractelement <2 x float> %455, i32 0
  %457 = call float @llvm.floor.f32(float %456) #12
  %458 = fpext float %457 to double
  %459 = fcmp ult double %458, 0x41DFFFFFFFC00000
  br i1 %459, label %460, label %465

460:                                              ; preds = %454
  %461 = fcmp ugt float %457, 0xC1E0000000000000
  br i1 %461, label %462, label %465

462:                                              ; preds = %460
  %463 = fptosi float %457 to i32
  %464 = zext i32 %463 to i64
  br label %465

465:                                              ; preds = %462, %460, %454
  %466 = phi i64 [ %464, %462 ], [ 2147483647, %454 ], [ 2147483648, %460 ]
  %467 = extractelement <2 x float> %455, i32 1
  %468 = call float @llvm.floor.f32(float %467) #12
  %469 = fpext float %468 to double
  %470 = fcmp ult double %469, 0x41DFFFFFFFC00000
  br i1 %470, label %471, label %477

471:                                              ; preds = %465
  %472 = fcmp ugt float %468, 0xC1E0000000000000
  br i1 %472, label %473, label %477

473:                                              ; preds = %471
  %474 = fptosi float %468 to i32
  %475 = zext i32 %474 to i64
  %476 = shl nuw i64 %475, 32
  br label %477

477:                                              ; preds = %473, %471, %465
  %478 = phi i64 [ %476, %473 ], [ 9223372032559808512, %465 ], [ -9223372036854775808, %471 ]
  %479 = trunc i64 %466 to i32
  %480 = lshr exact i64 %478, 32
  %481 = trunc i64 %480 to i32
  %482 = load float, float* %227, align 8
  %483 = fadd float %456, %482
  %484 = load float, float* %226, align 4
  %485 = load float, float* %228, align 4
  %486 = fadd float %484, %485
  %487 = call float @llvm.ceil.f32(float %483) #12
  %488 = fpext float %487 to double
  %489 = fcmp ult double %488, 0x41DFFFFFFFC00000
  br i1 %489, label %490, label %494

490:                                              ; preds = %477
  %491 = fcmp ugt float %487, 0xC1E0000000000000
  br i1 %491, label %492, label %494

492:                                              ; preds = %490
  %493 = fptosi float %487 to i32
  br label %494

494:                                              ; preds = %492, %490, %477
  %495 = phi i32 [ %493, %492 ], [ 2147483647, %477 ], [ -2147483648, %490 ]
  %496 = call float @llvm.ceil.f32(float %486) #12
  %497 = fpext float %496 to double
  %498 = fcmp ult double %497, 0x41DFFFFFFFC00000
  br i1 %498, label %499, label %503

499:                                              ; preds = %494
  %500 = fcmp ugt float %496, 0xC1E0000000000000
  br i1 %500, label %501, label %503

501:                                              ; preds = %499
  %502 = fptosi float %496 to i32
  br label %503

503:                                              ; preds = %501, %499, %494
  %504 = phi i32 [ %502, %501 ], [ 2147483647, %494 ], [ -2147483648, %499 ]
  %505 = icmp sgt i32 %479, -1
  %506 = select i1 %505, i32 -2147483648, i32 2147483647
  %507 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %495, i32 %479) #12
  %508 = extractvalue { i32, i1 } %507, 1
  %509 = extractvalue { i32, i1 } %507, 0
  %510 = select i1 %508, i32 %506, i32 %509, !prof !4
  %511 = icmp sgt i32 %481, -1
  %512 = select i1 %511, i32 -2147483648, i32 2147483647
  %513 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %504, i32 %481) #12
  %514 = extractvalue { i32, i1 } %513, 1
  %515 = extractvalue { i32, i1 } %513, 0
  %516 = select i1 %514, i32 %512, i32 %515, !prof !4
  %517 = icmp sgt i32 %479, 0
  %518 = icmp sgt i32 %510, 0
  %519 = and i1 %517, %518
  %520 = sub nuw nsw i32 2147483647, %479
  %521 = icmp ult i32 %520, %510
  %522 = and i1 %521, %519
  %523 = select i1 %522, i32 %520, i32 %510
  %524 = icmp sgt i32 %481, 0
  %525 = icmp sgt i32 %516, 0
  %526 = and i1 %524, %525
  %527 = sub nuw nsw i32 2147483647, %481
  %528 = icmp ult i32 %527, %516
  %529 = and i1 %528, %526
  %530 = select i1 %529, i32 %527, i32 %516
  %531 = icmp sgt i32 %523, 0
  %532 = select i1 %531, i32 %523, i32 0
  %533 = icmp sgt i32 %530, 0
  %534 = select i1 %533, i32 %530, i32 0
  %535 = or i64 %478, %466
  %536 = zext i32 %534 to i64
  %537 = shl nuw nsw i64 %536, 32
  %538 = zext i32 %532 to i64
  %539 = or i64 %537, %538
  store i64 %535, i64* %232, align 8
  store i64 %539, i64* %233, align 8
  call void @_ZN2cc6Region5UnionERKN3gfx4RectE(%"class.cc::Region"* nonnull %13, %"class.gfx::Rect"* nonnull dereferenceable(16) %223) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %230) #12
  br label %540

540:                                              ; preds = %439, %503
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %224) #12
  %541 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %440, i64 1
  %542 = icmp eq %"class.blink::IntRect"* %541, %437
  br i1 %542, label %543, label %439

543:                                              ; preds = %540, %430, %428, %423
  %544 = load %"struct.blink::HitTestData"*, %"struct.blink::HitTestData"** %268, align 8
  %545 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %544, i64 0, i32 2, i32 1, i32 0
  %546 = load i32, i32* %545, align 4
  %547 = icmp slt i32 %546, 1
  br i1 %547, label %682, label %548

548:                                              ; preds = %543
  %549 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %544, i64 0, i32 2, i32 1, i32 1
  %550 = load i32, i32* %549, align 4
  %551 = icmp slt i32 %550, 1
  br i1 %551, label %682, label %552

552:                                              ; preds = %548
  %553 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_composite_after_paint_enabled_E, align 1, !range !2
  %554 = icmp eq i8 %553, 0
  br i1 %554, label %574, label %555

555:                                              ; preds = %552
  %556 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %544, i64 0, i32 3
  %557 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %556, align 8
  %558 = icmp eq %"class.blink::TransformPaintPropertyNode"* %557, null
  br i1 %558, label %574, label %559

559:                                              ; preds = %555
  %560 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %557, i64 0, i32 1, i32 1, i32 0
  %561 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %560, align 8
  %562 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %561, i64 0, i32 1, i32 7, i32 0
  %563 = load i64, i64* %562, align 8
  %564 = load i64, i64* %236, align 8
  %565 = icmp eq i64 %564, %563
  br i1 %565, label %682, label %566

566:                                              ; preds = %559
  %567 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_scroll_unification_enabled_E, align 1, !range !2
  %568 = icmp eq i8 %567, 0
  %569 = and i1 %237, %568
  br i1 %569, label %570, label %574

570:                                              ; preds = %566
  %571 = call i32 @_ZN5blink19PropertyTreeManager26EnsureCompositorScrollNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"* nonnull %4, %"class.blink::TransformPaintPropertyNode"* nonnull dereferenceable(96) %557) #12
  %572 = load i32, i32* %545, align 4
  %573 = load i32, i32* %549, align 4
  br label %574

574:                                              ; preds = %570, %566, %555, %552
  %575 = phi i32 [ %550, %552 ], [ %573, %570 ], [ %550, %566 ], [ %550, %555 ]
  %576 = phi i32 [ %546, %552 ], [ %572, %570 ], [ %546, %566 ], [ %546, %555 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %238) #12
  %577 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %544, i64 0, i32 2, i32 0, i32 0
  store i32 -1431655766, i32* %244, align 8
  %578 = load i32, i32* %577, align 4
  %579 = sitofp i32 %578 to float
  %580 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %544, i64 0, i32 2, i32 0, i32 1
  %581 = load i32, i32* %580, align 4
  %582 = sitofp i32 %581 to float
  %583 = sitofp i32 %576 to float
  %584 = sitofp i32 %575 to float
  store float %579, float* %239, align 8
  store float %582, float* %240, align 4
  store float %583, float* %241, align 8
  store float %584, float* %242, align 4
  %585 = call zeroext i1 @_ZN5blink14GeometryMapper25LocalToAncestorVisualRectERKNS_17PropertyTreeStateES3_RNS_13FloatClipRectENS_28OverlayScrollbarClipBehaviorENS_23InclusiveIntersectOrNotENS_33ExpandVisualRectForAnimationOrNotE(%"class.blink::PropertyTreeState"* nonnull dereferenceable(24) %15, %"class.blink::PropertyTreeState"* dereferenceable(24) %1, %"class.blink::FloatClipRect"* nonnull dereferenceable(20) %10, i32 0, i32 0, i32 0) #12
  br i1 %585, label %586, label %681

586:                                              ; preds = %574
  %587 = load i8, i8* %243, align 8
  %588 = and i8 %587, 4
  %589 = icmp eq i8 %588, 0
  br i1 %589, label %590, label %595

590:                                              ; preds = %586
  %591 = load float, float* %239, align 8
  %592 = fsub float %591, %191
  store float %592, float* %239, align 8
  %593 = load float, float* %240, align 4
  %594 = fsub float %593, %192
  store float %594, float* %240, align 4
  br label %595

595:                                              ; preds = %590, %586
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %245) #12
  %596 = load <2 x float>, <2 x float>* %246, align 8
  %597 = extractelement <2 x float> %596, i32 0
  %598 = call float @llvm.floor.f32(float %597) #12
  %599 = fpext float %598 to double
  %600 = fcmp ult double %599, 0x41DFFFFFFFC00000
  br i1 %600, label %601, label %606

601:                                              ; preds = %595
  %602 = fcmp ugt float %598, 0xC1E0000000000000
  br i1 %602, label %603, label %606

603:                                              ; preds = %601
  %604 = fptosi float %598 to i32
  %605 = zext i32 %604 to i64
  br label %606

606:                                              ; preds = %603, %601, %595
  %607 = phi i64 [ %605, %603 ], [ 2147483647, %595 ], [ 2147483648, %601 ]
  %608 = extractelement <2 x float> %596, i32 1
  %609 = call float @llvm.floor.f32(float %608) #12
  %610 = fpext float %609 to double
  %611 = fcmp ult double %610, 0x41DFFFFFFFC00000
  br i1 %611, label %612, label %618

612:                                              ; preds = %606
  %613 = fcmp ugt float %609, 0xC1E0000000000000
  br i1 %613, label %614, label %618

614:                                              ; preds = %612
  %615 = fptosi float %609 to i32
  %616 = zext i32 %615 to i64
  %617 = shl nuw i64 %616, 32
  br label %618

618:                                              ; preds = %614, %612, %606
  %619 = phi i64 [ %617, %614 ], [ 9223372032559808512, %606 ], [ -9223372036854775808, %612 ]
  %620 = trunc i64 %607 to i32
  %621 = lshr exact i64 %619, 32
  %622 = trunc i64 %621 to i32
  %623 = load float, float* %241, align 8
  %624 = fadd float %597, %623
  %625 = load float, float* %240, align 4
  %626 = load float, float* %242, align 4
  %627 = fadd float %625, %626
  %628 = call float @llvm.ceil.f32(float %624) #12
  %629 = fpext float %628 to double
  %630 = fcmp ult double %629, 0x41DFFFFFFFC00000
  br i1 %630, label %631, label %635

631:                                              ; preds = %618
  %632 = fcmp ugt float %628, 0xC1E0000000000000
  br i1 %632, label %633, label %635

633:                                              ; preds = %631
  %634 = fptosi float %628 to i32
  br label %635

635:                                              ; preds = %633, %631, %618
  %636 = phi i32 [ %634, %633 ], [ 2147483647, %618 ], [ -2147483648, %631 ]
  %637 = call float @llvm.ceil.f32(float %627) #12
  %638 = fpext float %637 to double
  %639 = fcmp ult double %638, 0x41DFFFFFFFC00000
  br i1 %639, label %640, label %644

640:                                              ; preds = %635
  %641 = fcmp ugt float %637, 0xC1E0000000000000
  br i1 %641, label %642, label %644

642:                                              ; preds = %640
  %643 = fptosi float %637 to i32
  br label %644

644:                                              ; preds = %642, %640, %635
  %645 = phi i32 [ %643, %642 ], [ 2147483647, %635 ], [ -2147483648, %640 ]
  %646 = icmp sgt i32 %620, -1
  %647 = select i1 %646, i32 -2147483648, i32 2147483647
  %648 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %636, i32 %620) #12
  %649 = extractvalue { i32, i1 } %648, 1
  %650 = extractvalue { i32, i1 } %648, 0
  %651 = select i1 %649, i32 %647, i32 %650, !prof !4
  %652 = icmp sgt i32 %622, -1
  %653 = select i1 %652, i32 -2147483648, i32 2147483647
  %654 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %645, i32 %622) #12
  %655 = extractvalue { i32, i1 } %654, 1
  %656 = extractvalue { i32, i1 } %654, 0
  %657 = select i1 %655, i32 %653, i32 %656, !prof !4
  %658 = icmp sgt i32 %620, 0
  %659 = icmp sgt i32 %651, 0
  %660 = and i1 %658, %659
  %661 = sub nuw nsw i32 2147483647, %620
  %662 = icmp ult i32 %661, %651
  %663 = and i1 %662, %660
  %664 = select i1 %663, i32 %661, i32 %651
  %665 = icmp sgt i32 %622, 0
  %666 = icmp sgt i32 %657, 0
  %667 = and i1 %665, %666
  %668 = sub nuw nsw i32 2147483647, %622
  %669 = icmp ult i32 %668, %657
  %670 = and i1 %669, %667
  %671 = select i1 %670, i32 %668, i32 %657
  %672 = icmp sgt i32 %664, 0
  %673 = select i1 %672, i32 %664, i32 0
  %674 = icmp sgt i32 %671, 0
  %675 = select i1 %674, i32 %671, i32 0
  %676 = or i64 %619, %607
  %677 = zext i32 %675 to i64
  %678 = shl nuw nsw i64 %677, 32
  %679 = zext i32 %673 to i64
  %680 = or i64 %678, %679
  store i64 %676, i64* %247, align 8
  store i64 %680, i64* %248, align 8
  call void @_ZN2cc6Region5UnionERKN3gfx4RectE(%"class.cc::Region"* nonnull %14, %"class.gfx::Rect"* nonnull dereferenceable(16) %235) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %245) #12
  br label %681

681:                                              ; preds = %644, %574
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %238) #12
  br label %682

682:                                              ; preds = %681, %559, %548, %543
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %206) #12
  br label %683

683:                                              ; preds = %682, %265
  %684 = add i32 %258, 1
  %685 = icmp eq i32 %684, %201
  br i1 %685, label %252, label %686

686:                                              ; preds = %683
  %687 = load i32, i32* %45, align 8
  br label %256

688:                                              ; preds = %252
  %689 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features18kWheelEventRegionsE) #12
  br i1 %689, label %690, label %691

690:                                              ; preds = %688
  call void @_ZN2cc6RegionC1ERKS0_(%"class.cc::Region"* nonnull %18, %"class.cc::Region"* nonnull dereferenceable(24) %13) #12
  call void @_ZN2cc5Layer19SetWheelEventRegionENS_6RegionE(%"class.cc::Layer"* %0, %"class.cc::Region"* nonnull %18) #12
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %18) #12
  br label %691

691:                                              ; preds = %252, %688, %690
  call void @_ZN2cc5Layer26SetNonFastScrollableRegionERKNS_6RegionE(%"class.cc::Layer"* %0, %"class.cc::Region"* nonnull dereferenceable(24) %14) #12
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %195) #12
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %194) #12
  call void @_ZN2cc17TouchActionRegionD1Ev(%"class.cc::TouchActionRegion"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187)
  %692 = load <2 x float>, <2 x float>* %189, align 8
  %693 = bitcast %"class.blink::FloatPoint"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %693) #12
  %694 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %23, i64 0, i32 0
  %695 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %23, i64 0, i32 1
  %696 = extractelement <2 x float> %692, i32 0
  %697 = extractelement <2 x float> %692, i32 1
  store float %696, float* %694, align 4
  store float %697, float* %695, align 4
  %698 = load i32, i32* %45, align 8
  %699 = icmp eq i32 %698, -1
  %700 = select i1 %699, i32 0, i32 %698
  %701 = load i32, i32* %48, align 4
  %702 = load i32, i32* %49, align 4
  %703 = select i1 %699, i32 %701, i32 %702
  %704 = icmp eq i32 %700, %703
  br i1 %704, label %791, label %705

705:                                              ; preds = %691
  %706 = getelementptr inbounds %"class.blink::PaintChunkSubset", %"class.blink::PaintChunkSubset"* %2, i64 0, i32 0, i32 0
  %707 = getelementptr inbounds %"class.blink::PaintChunkSubset", %"class.blink::PaintChunkSubset"* %2, i64 0, i32 1
  %708 = bitcast %"class.blink::PropertyTreeState"* %24 to i8*
  %709 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %25 to i8*
  %710 = getelementptr inbounds %"class.blink::PropertyTreeStateOrAlias", %"class.blink::PropertyTreeStateOrAlias"* %25, i64 0, i32 2
  %711 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %710 to i64*
  %712 = bitcast %"struct.cc::LayerSelectionBound"* %26 to i8*
  %713 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %26, i64 0, i32 0
  %714 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %26, i64 0, i32 4
  %715 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %26, i64 0, i32 1
  %716 = bitcast %"class.gfx::Point"* %715 to i64*
  %717 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %26, i64 0, i32 2
  %718 = bitcast %"class.gfx::Point"* %717 to i64*
  %719 = bitcast %"struct.viz::Selection"* %3 to i8*
  %720 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %0, i64 0, i32 5, i32 3
  %721 = getelementptr inbounds %"struct.viz::Selection", %"struct.viz::Selection"* %3, i64 0, i32 0, i32 3
  %722 = bitcast %"struct.cc::LayerSelectionBound"* %27 to i8*
  %723 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %27, i64 0, i32 0
  %724 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %27, i64 0, i32 4
  %725 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %27, i64 0, i32 1
  %726 = bitcast %"class.gfx::Point"* %725 to i64*
  %727 = getelementptr inbounds %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound"* %27, i64 0, i32 2
  %728 = bitcast %"class.gfx::Point"* %727 to i64*
  %729 = getelementptr inbounds %"struct.viz::Selection", %"struct.viz::Selection"* %3, i64 0, i32 1
  %730 = bitcast %"struct.cc::LayerSelectionBound"* %729 to i8*
  %731 = getelementptr inbounds %"struct.viz::Selection", %"struct.viz::Selection"* %3, i64 0, i32 1, i32 3
  %732 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %25 to <2 x i64>*
  br label %733

733:                                              ; preds = %789, %705
  %734 = phi i32 [ %698, %705 ], [ %790, %789 ]
  %735 = phi i32 [ %700, %705 ], [ %787, %789 ]
  %736 = load %"class.blink::PaintArtifact"*, %"class.blink::PaintArtifact"** %706, align 8
  %737 = getelementptr inbounds %"class.blink::PaintArtifact", %"class.blink::PaintArtifact"* %736, i64 0, i32 3
  %738 = icmp eq i32 %734, -1
  br i1 %738, label %739, label %742

739:                                              ; preds = %733
  %740 = call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %707, i32 %735) #12
  %741 = load i32, i32* %740, align 4
  br label %742

742:                                              ; preds = %739, %733
  %743 = phi i32 [ %741, %739 ], [ %735, %733 ]
  %744 = call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZNK3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %737, i32 %743) #12
  %745 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %744, i64 0, i32 7, i32 0, i32 0, i32 0
  %746 = load %"struct.blink::LayerSelectionData"*, %"struct.blink::LayerSelectionData"** %745, align 8
  %747 = icmp eq %"struct.blink::LayerSelectionData"* %746, null
  br i1 %747, label %786, label %748

748:                                              ; preds = %742
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %708) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %708, i8 -86, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %709) #12
  %749 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %744, i64 0, i32 5
  %750 = bitcast %"class.blink::RefCountedPropertyTreeState"* %749 to <2 x i64>*
  %751 = load <2 x i64>, <2 x i64>* %750, align 8, !noalias !11
  %752 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %744, i64 0, i32 5, i32 2, i32 0
  %753 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %752 to i64*
  %754 = load i64, i64* %753, align 8, !noalias !11
  store <2 x i64> %751, <2 x i64>* %732, align 16, !alias.scope !11
  store i64 %754, i64* %711, align 16, !alias.scope !11
  call void @_ZNK5blink24PropertyTreeStateOrAlias7UnaliasEv(%"class.blink::PropertyTreeState"* nonnull sret %24, %"class.blink::PropertyTreeStateOrAlias"* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %709) #12
  %755 = load %"struct.blink::LayerSelectionData"*, %"struct.blink::LayerSelectionData"** %745, align 8
  %756 = getelementptr inbounds %"struct.blink::LayerSelectionData", %"struct.blink::LayerSelectionData"* %755, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %757 = load i8, i8* %756, align 4, !range !2
  %758 = icmp eq i8 %757, 0
  br i1 %758, label %770, label %759

759:                                              ; preds = %748
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %712) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %712, i8 -86, i64 28, i1 false) #12, !alias.scope !14
  call void @_ZN2cc19LayerSelectionBoundC1Ev(%"struct.cc::LayerSelectionBound"* nonnull %26) #12
  %760 = getelementptr inbounds %"struct.blink::LayerSelectionData", %"struct.blink::LayerSelectionData"* %755, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %761 = load i32, i32* %760, align 4, !noalias !14
  store i32 %761, i32* %713, align 4, !alias.scope !14
  %762 = getelementptr inbounds %"struct.blink::LayerSelectionData", %"struct.blink::LayerSelectionData"* %755, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %763 = load i8, i8* %762, align 4, !range !2, !noalias !14
  store i8 %763, i8* %714, align 4, !alias.scope !14
  %764 = getelementptr inbounds %"struct.blink::LayerSelectionData", %"struct.blink::LayerSelectionData"* %755, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %765 = call fastcc i64 @_ZN5blinkL22MapSelectionBoundPointERKNS_8IntPointERKNS_17PropertyTreeStateES5_RKNS_10FloatPointE(%"class.blink::IntPoint"* dereferenceable(8) %764, %"class.blink::PropertyTreeState"* dereferenceable(24) %1, %"class.blink::PropertyTreeState"* nonnull dereferenceable(24) %24, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %23) #12
  store i64 %765, i64* %716, align 4, !alias.scope !14
  %766 = getelementptr inbounds %"struct.blink::LayerSelectionData", %"struct.blink::LayerSelectionData"* %755, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %767 = call fastcc i64 @_ZN5blinkL22MapSelectionBoundPointERKNS_8IntPointERKNS_17PropertyTreeStateES5_RKNS_10FloatPointE(%"class.blink::IntPoint"* dereferenceable(8) %766, %"class.blink::PropertyTreeState"* dereferenceable(24) %1, %"class.blink::PropertyTreeState"* nonnull dereferenceable(24) %24, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %23) #12
  store i64 %767, i64* %718, align 4, !alias.scope !14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %719, i8* nonnull align 4 %712, i64 25, i1 false) #12
  call void @_ZN2cc19LayerSelectionBoundD1Ev(%"struct.cc::LayerSelectionBound"* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %712) #12
  %768 = load i32, i32* %720, align 8
  store i32 %768, i32* %721, align 4
  %769 = load %"struct.blink::LayerSelectionData"*, %"struct.blink::LayerSelectionData"** %745, align 8
  br label %770

770:                                              ; preds = %759, %748
  %771 = phi %"struct.blink::LayerSelectionData"* [ %755, %748 ], [ %769, %759 ]
  %772 = getelementptr inbounds %"struct.blink::LayerSelectionData", %"struct.blink::LayerSelectionData"* %771, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %773 = load i8, i8* %772, align 4, !range !2
  %774 = icmp eq i8 %773, 0
  br i1 %774, label %785, label %775

775:                                              ; preds = %770
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %722) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %722, i8 -86, i64 28, i1 false) #12, !alias.scope !17
  call void @_ZN2cc19LayerSelectionBoundC1Ev(%"struct.cc::LayerSelectionBound"* nonnull %27) #12
  %776 = getelementptr inbounds %"struct.blink::LayerSelectionData", %"struct.blink::LayerSelectionData"* %771, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %777 = load i32, i32* %776, align 4, !noalias !17
  store i32 %777, i32* %723, align 4, !alias.scope !17
  %778 = getelementptr inbounds %"struct.blink::LayerSelectionData", %"struct.blink::LayerSelectionData"* %771, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %779 = load i8, i8* %778, align 4, !range !2, !noalias !17
  store i8 %779, i8* %724, align 4, !alias.scope !17
  %780 = getelementptr inbounds %"struct.blink::LayerSelectionData", %"struct.blink::LayerSelectionData"* %771, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %781 = call fastcc i64 @_ZN5blinkL22MapSelectionBoundPointERKNS_8IntPointERKNS_17PropertyTreeStateES5_RKNS_10FloatPointE(%"class.blink::IntPoint"* dereferenceable(8) %780, %"class.blink::PropertyTreeState"* dereferenceable(24) %1, %"class.blink::PropertyTreeState"* nonnull dereferenceable(24) %24, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %23) #12
  store i64 %781, i64* %726, align 4, !alias.scope !17
  %782 = getelementptr inbounds %"struct.blink::LayerSelectionData", %"struct.blink::LayerSelectionData"* %771, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %783 = call fastcc i64 @_ZN5blinkL22MapSelectionBoundPointERKNS_8IntPointERKNS_17PropertyTreeStateES5_RKNS_10FloatPointE(%"class.blink::IntPoint"* dereferenceable(8) %782, %"class.blink::PropertyTreeState"* dereferenceable(24) %1, %"class.blink::PropertyTreeState"* nonnull dereferenceable(24) %24, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %23) #12
  store i64 %783, i64* %728, align 4, !alias.scope !17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %730, i8* nonnull align 4 %722, i64 25, i1 false) #12
  call void @_ZN2cc19LayerSelectionBoundD1Ev(%"struct.cc::LayerSelectionBound"* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %722) #12
  %784 = load i32, i32* %720, align 8
  store i32 %784, i32* %731, align 4
  br label %785

785:                                              ; preds = %775, %770
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %708) #12
  br label %786

786:                                              ; preds = %785, %742
  %787 = add i32 %735, 1
  %788 = icmp eq i32 %787, %703
  br i1 %788, label %791, label %789

789:                                              ; preds = %786
  %790 = load i32, i32* %45, align 8
  br label %733

791:                                              ; preds = %786, %691
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %693) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink18ChunkToLayerMapperC1ERKNS_17PropertyTreeStateERKN3gfx9Vector2dFE(%"class.blink::ChunkToLayerMapper"*, %"class.blink::PropertyTreeState"* dereferenceable(24), %"class.gfx::Vector2dF"* dereferenceable(8)) unnamed_addr #2

declare void @_ZNK5blink20ScrollbarDisplayItem5PaintEv(%class.sk_sp.309* sret, %"class.blink::ScrollbarDisplayItem"*) local_unnamed_addr #2

declare dereferenceable(152) %"class.blink::EffectPaintPropertyNode"* @_ZN5blink23EffectPaintPropertyNode4RootEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext18SwitchToChunkStateERKNS_10PaintChunkE(%"class.blink::(anonymous namespace)::ConversionContext"*, %"struct.blink::PaintChunk"* dereferenceable(112)) unnamed_addr #4 align 2 {
  %3 = alloca %"class.WTF::VectorBufferBase.245", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.cc::PaintFlags", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"class.cc::PaintFlags"*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %"class.gfx::SizeF", align 4
  %10 = alloca %"class.cc::PaintFlags", align 8
  %11 = alloca %class.sk_sp.215, align 8
  %12 = alloca %"class.gfx::Vector2dF", align 4
  %13 = alloca i8*, align 8
  %14 = alloca %"class.cc::PaintFlags"*, align 8
  %15 = alloca %"class.blink::FloatRect", align 8
  %16 = alloca %"class.blink::FloatRect", align 8
  %17 = alloca { i64, i64 }, align 8
  %18 = alloca { i64, i64 }, align 8
  %19 = alloca %"class.WTF::Vector.531", align 8
  %20 = alloca %"class.blink::EffectPaintPropertyNode"*, align 8
  %21 = alloca float, align 4
  %22 = alloca float, align 4
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 3
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %44

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 2
  %28 = tail call zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"* %27) #12
  br i1 %28, label %44, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 10
  %31 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %30, align 8
  %32 = tail call i64 @_ZN2cc15DisplayItemList4pushINS_6SaveOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %31) #12
  %33 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %30, align 8
  %34 = bitcast float* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %27, i64 0, i32 0
  %36 = load float, float* %35, align 4
  %37 = fsub float -0.000000e+00, %36
  store float %37, float* %21, align 4
  %38 = bitcast float* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 2, i32 1
  %40 = load float, float* %39, align 4
  %41 = fsub float -0.000000e+00, %40
  store float %41, float* %22, align 4
  %42 = call i64 @_ZN2cc15DisplayItemList4pushINS_11TranslateOpEJffEEEmDpOT0_(%"class.cc::DisplayItemList"* %33, float* nonnull dereferenceable(4) %21, float* nonnull dereferenceable(4) %22) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #12
  %43 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %30, align 8
  call void @_ZN2cc15DisplayItemList21EndPaintOfPairedBeginEv(%"class.cc::DisplayItemList"* %43) #12
  store i8 1, i8* %23, align 8
  br label %44

44:                                               ; preds = %2, %26, %29
  %45 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 9
  call void @_ZN5blink18ChunkToLayerMapper13SwitchToChunkERKNS_10PaintChunkE(%"class.blink::ChunkToLayerMapper"* %45, %"struct.blink::PaintChunk"* dereferenceable(112) %1) #12
  %46 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %1, i64 0, i32 5, i32 2, i32 0
  %47 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %46, align 8
  br label %48

48:                                               ; preds = %53, %44
  %49 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %47, %44 ], [ %51, %53 ]
  %50 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %49, i64 0, i32 0, i32 3, i32 0
  %51 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %50, align 8
  %52 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %49, i64 0, i32 0, i32 1
  %55 = load i8, i8* %54, align 4, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %48

57:                                               ; preds = %48, %53
  %58 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %49 to %"class.blink::EffectPaintPropertyNode"*
  %59 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 6
  %60 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %59, align 8
  %61 = icmp eq %"class.blink::EffectPaintPropertyNode"* %60, %58
  br i1 %61, label %630, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %60, i64 0, i32 0
  br i1 %52, label %74, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %60, i64 0, i32 0, i32 0, i32 3, i32 0
  %66 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %65, align 8
  %67 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %66, %49
  br i1 %67, label %74, label %68

68:                                               ; preds = %64
  %69 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %66, null
  %70 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %51, %63
  %71 = or i1 %70, %69
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = call dereferenceable(24) %"class.blink::EffectPaintPropertyNodeOrAlias"* @_ZN5blink28LowestCommonAncestorInternalERKNS_30EffectPaintPropertyNodeOrAliasES2_(%"class.blink::EffectPaintPropertyNodeOrAlias"* dereferenceable(24) %49, %"class.blink::EffectPaintPropertyNodeOrAlias"* dereferenceable(24) %63) #12
  br label %74

74:                                               ; preds = %72, %68, %64, %62
  %75 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %63, %68 ], [ %49, %64 ], [ %49, %62 ], [ %73, %72 ]
  br label %76

76:                                               ; preds = %74, %81
  %77 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %79, %81 ], [ %75, %74 ]
  %78 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %77, i64 0, i32 0, i32 3, i32 0
  %79 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %78, align 8
  %80 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %79, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %77, i64 0, i32 0, i32 1
  %83 = load i8, i8* %82, align 4, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %76

85:                                               ; preds = %81, %76
  %86 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %77 to %"class.blink::EffectPaintPropertyNode"*
  %87 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %59, align 8
  %88 = icmp eq %"class.blink::EffectPaintPropertyNode"* %87, %86
  br i1 %88, label %186, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 0
  %91 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %92 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 7
  %93 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 10
  %94 = bitcast %"class.blink::TransformPaintPropertyNode"** %92 to i64*
  %95 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 4
  %96 = bitcast %"class.blink::TransformPaintPropertyNode"** %95 to i64*
  %97 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 5
  %98 = bitcast %"class.blink::ClipPaintPropertyNode"** %97 to i64*
  %99 = bitcast %"class.blink::EffectPaintPropertyNode"** %59 to i64*
  %100 = load i32, i32* %91, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %146, label %105

102:                                              ; preds = %183
  %103 = load i32, i32* %91, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %146, label %138

105:                                              ; preds = %89, %138
  %106 = call fastcc dereferenceable(40) %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext10StateEntryELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.182"* %90) #12
  %107 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %139

110:                                              ; preds = %105
  %111 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %92, align 8
  %112 = icmp eq %"class.blink::TransformPaintPropertyNode"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %110
  %114 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %93, align 8
  %115 = call i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %114) #12
  %116 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %93, align 8
  call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %116) #12
  %117 = load i64, i64* %94, align 8
  store i64 %117, i64* %96, align 8
  store %"class.blink::TransformPaintPropertyNode"* null, %"class.blink::TransformPaintPropertyNode"** %92, align 8
  br label %118

118:                                              ; preds = %113, %110
  %119 = call fastcc dereferenceable(40) %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext10StateEntryELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.182"* %90) #12
  %120 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %93, align 8
  %121 = call i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %120) #12
  %122 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %93, align 8
  call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %122) #12
  %123 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %119, i64 0, i32 1
  %124 = bitcast %"class.blink::TransformPaintPropertyNode"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %96, align 8
  %126 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %119, i64 0, i32 4
  %127 = bitcast %"class.blink::TransformPaintPropertyNode"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  store i64 %128, i64* %94, align 8
  %129 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %119, i64 0, i32 2
  %130 = bitcast %"class.blink::ClipPaintPropertyNode"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %98, align 8
  %132 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %119, i64 0, i32 3
  %133 = bitcast %"class.blink::EffectPaintPropertyNode"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  store i64 %134, i64* %99, align 8
  %135 = load i32, i32* %91, align 4
  %136 = add i32 %135, -1
  store i32 %136, i32* %91, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %144, label %138

138:                                              ; preds = %118, %102
  br label %105

139:                                              ; preds = %105
  %140 = load i32, i32* %91, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %183

142:                                              ; preds = %139
  %143 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %59, align 8
  br label %146

144:                                              ; preds = %118
  %145 = inttoptr i64 %134 to %"class.blink::EffectPaintPropertyNode"*
  br label %146

146:                                              ; preds = %102, %89, %142, %144
  %147 = phi %"class.blink::EffectPaintPropertyNode"* [ %145, %144 ], [ %143, %142 ], [ %87, %89 ], [ %184, %102 ]
  %148 = icmp eq %"class.blink::EffectPaintPropertyNode"* %147, %86
  br i1 %148, label %186, label %149

149:                                              ; preds = %146, %180
  %150 = phi %"class.blink::EffectPaintPropertyNode"* [ %181, %180 ], [ %147, %146 ]
  %151 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %150, i64 0, i32 1, i32 4
  %152 = load float, float* %151, align 8
  %153 = fcmp une float %152, 1.000000e+00
  br i1 %153, label %630, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %150, i64 0, i32 1, i32 5
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %156, 3
  br i1 %157, label %158, label %630

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %150, i64 0, i32 1, i32 2
  %160 = call zeroext i1 @_ZNK5blink26CompositorFilterOperations7IsEmptyEv(%"class.blink::CompositorFilterOperations"* %159) #12
  br i1 %160, label %161, label %630

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %150, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0
  %163 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %162, align 8
  %164 = icmp eq %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %163, null
  br i1 %164, label %165, label %630

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %150, i64 0, i32 0, i32 0, i32 3, i32 0
  %167 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %166, align 8
  %168 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %167, null
  br i1 %168, label %180, label %169

169:                                              ; preds = %165, %174
  %170 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %172, %174 ], [ %167, %165 ]
  %171 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %170, i64 0, i32 0, i32 3, i32 0
  %172 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %171, align 8
  %173 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %172, null
  br i1 %173, label %178, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %170, i64 0, i32 0, i32 1
  %176 = load i8, i8* %175, align 4, !range !2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %178, label %169

178:                                              ; preds = %174, %169
  %179 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %170 to %"class.blink::EffectPaintPropertyNode"*
  br label %180

180:                                              ; preds = %178, %165
  %181 = phi %"class.blink::EffectPaintPropertyNode"* [ %179, %178 ], [ null, %165 ]
  %182 = icmp eq %"class.blink::EffectPaintPropertyNode"* %181, %86
  br i1 %182, label %186, label %149

183:                                              ; preds = %139
  call fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext9EndEffectEv(%"class.blink::(anonymous namespace)::ConversionContext"* %0) #12
  %184 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %59, align 8
  %185 = icmp eq %"class.blink::EffectPaintPropertyNode"* %184, %86
  br i1 %185, label %186, label %102

186:                                              ; preds = %183, %180, %146, %85
  %187 = bitcast %"class.WTF::Vector.531"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187) #12
  %188 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %19, i64 0, i32 0, i32 0, i32 0
  %189 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %19, i64 0, i32 0, i32 0, i32 1
  %190 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %19, i64 0, i32 0, i32 0, i32 2
  %191 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %19, i64 0, i32 0, i32 1, i64 0
  %192 = bitcast %"class.WTF::Vector.531"* %19 to i8**
  %193 = bitcast i8* %191 to i64*
  store i64 -6148914691236517206, i64* %193, align 8
  store i8* %191, i8** %192, align 8
  store i32 1, i32* %189, align 8
  store i32 0, i32* %190, align 4
  %194 = bitcast %"class.blink::EffectPaintPropertyNode"** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194) #12
  %195 = bitcast %"class.blink::EffectPaintPropertyNode"** %20 to %"class.blink::EffectPaintPropertyNodeOrAlias"**
  store %"class.blink::EffectPaintPropertyNodeOrAlias"* %49, %"class.blink::EffectPaintPropertyNodeOrAlias"** %195, align 8
  %196 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %77, %49
  %197 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %49, null
  %198 = or i1 %197, %196
  br i1 %198, label %199, label %200, !prof !20

199:                                              ; preds = %186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #12
  br label %298

200:                                              ; preds = %186
  %201 = bitcast %"class.blink::EffectPaintPropertyNode"** %20 to %"class.blink::PaintPropertyNode.74"**
  br label %202

202:                                              ; preds = %233, %200
  %203 = phi %"class.blink::EffectPaintPropertyNode"* [ %234, %233 ], [ %58, %200 ]
  %204 = phi i32 [ %236, %233 ], [ 1, %200 ]
  %205 = phi i32 [ %235, %233 ], [ 0, %200 ]
  %206 = icmp eq i32 %205, %204
  br i1 %206, label %215, label %207, !prof !4

207:                                              ; preds = %202
  %208 = ptrtoint %"class.blink::EffectPaintPropertyNode"* %203 to i64
  %209 = load %"class.blink::EffectPaintPropertyNode"**, %"class.blink::EffectPaintPropertyNode"*** %188, align 8
  %210 = zext i32 %205 to i64
  %211 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %209, i64 %210
  %212 = bitcast %"class.blink::EffectPaintPropertyNode"** %211 to i64*
  store i64 %208, i64* %212, align 8
  %213 = load i32, i32* %190, align 4
  %214 = add i32 %213, 1
  store i32 %214, i32* %190, align 4
  br label %216

215:                                              ; preds = %202
  call void @_ZN3WTF6VectorIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.531"* nonnull %19, %"class.blink::EffectPaintPropertyNode"** nonnull dereferenceable(8) %20) #12
  br label %216

216:                                              ; preds = %215, %207
  %217 = load %"class.blink::PaintPropertyNode.74"*, %"class.blink::PaintPropertyNode.74"** %201, align 8
  %218 = getelementptr inbounds %"class.blink::PaintPropertyNode.74", %"class.blink::PaintPropertyNode.74"* %217, i64 0, i32 3, i32 0
  %219 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %218, align 8
  %220 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %219, null
  br i1 %220, label %221, label %222

221:                                              ; preds = %216
  store %"class.blink::EffectPaintPropertyNode"* null, %"class.blink::EffectPaintPropertyNode"** %20, align 8
  br label %237

222:                                              ; preds = %216, %227
  %223 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %225, %227 ], [ %219, %216 ]
  %224 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %223, i64 0, i32 0, i32 3, i32 0
  %225 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %224, align 8
  %226 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %225, null
  br i1 %226, label %231, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %223, i64 0, i32 0, i32 1
  %229 = load i8, i8* %228, align 4, !range !2
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %231, label %222

231:                                              ; preds = %227, %222
  store %"class.blink::EffectPaintPropertyNodeOrAlias"* %223, %"class.blink::EffectPaintPropertyNodeOrAlias"** %195, align 8
  %232 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %223, %77
  br i1 %232, label %237, label %233

233:                                              ; preds = %231
  %234 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %223 to %"class.blink::EffectPaintPropertyNode"*
  %235 = load i32, i32* %190, align 4
  %236 = load i32, i32* %189, align 8
  br label %202

237:                                              ; preds = %231, %221
  %238 = load i32, i32* %190, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #12
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %298, label %240, !prof !20

240:                                              ; preds = %237
  %241 = bitcast %class.sk_sp.215* %11 to i8*
  %242 = bitcast { i64, i64 }* %17 to %"class.gfx::Rect"*
  %243 = bitcast { i64, i64 }* %18 to %"class.blink::IntRect"*
  %244 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 0
  %245 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %246 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 7
  %247 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 10
  %248 = bitcast %"class.blink::TransformPaintPropertyNode"** %246 to i64*
  %249 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 4
  %250 = bitcast %"class.blink::TransformPaintPropertyNode"** %249 to i64*
  %251 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 5
  %252 = bitcast %"class.blink::ClipPaintPropertyNode"** %251 to i64*
  %253 = bitcast %"class.blink::EffectPaintPropertyNode"** %59 to i64*
  %254 = bitcast %"class.gfx::SizeF"* %9 to i8*
  %255 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %9, i64 0, i32 0
  %256 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %9, i64 0, i32 1
  %257 = bitcast %"class.cc::PaintFlags"* %10 to i8*
  %258 = bitcast %"class.gfx::Vector2dF"* %12 to i8*
  %259 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %12, i64 0, i32 0
  %260 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %12, i64 0, i32 1
  %261 = getelementptr inbounds %class.sk_sp.215, %class.sk_sp.215* %11, i64 0, i32 0
  %262 = bitcast i8** %13 to i8*
  %263 = bitcast %"class.cc::PaintFlags"** %14 to i8*
  %264 = bitcast %"class.cc::PaintFlags"* %5 to i8*
  %265 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %5, i64 0, i32 9
  %266 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %5, i64 0, i32 6
  %267 = bitcast i8** %6 to i8*
  %268 = bitcast %"class.cc::PaintFlags"** %7 to i8*
  %269 = bitcast i8** %8 to i8*
  %270 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 8
  %271 = bitcast %"class.blink::FloatRect"* %15 to i8*
  %272 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %273 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %274 = getelementptr inbounds %"class.WTF::Vector.243", %"class.WTF::Vector.243"* %270, i64 0, i32 0, i32 0, i32 0
  %275 = bitcast %"class.WTF::VectorBufferBase.245"* %3 to i8*
  %276 = getelementptr inbounds %"class.WTF::VectorBufferBase.245", %"class.WTF::VectorBufferBase.245"* %3, i64 0, i32 0
  %277 = getelementptr inbounds %"class.WTF::VectorBufferBase.245", %"class.WTF::VectorBufferBase.245"* %3, i64 0, i32 1
  %278 = bitcast i32* %277 to i64*
  %279 = bitcast %"class.WTF::Vector.243"* %270 to i8**
  %280 = bitcast %"class.WTF::Vector.243"* %270 to i64*
  %281 = getelementptr inbounds %"class.WTF::Vector.243", %"class.WTF::Vector.243"* %270, i64 0, i32 0, i32 0
  %282 = bitcast %"class.blink::FloatRect"* %16 to i8*
  %283 = bitcast %"class.blink::FloatRect"* %16 to <2 x float>*
  %284 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %16, i64 0, i32 1
  %285 = bitcast %"class.blink::FloatSize"* %284 to i32*
  %286 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %16, i64 0, i32 1, i32 1
  %287 = bitcast float* %286 to i32*
  %288 = bitcast { i64, i64 }* %17 to i8*
  %289 = bitcast { i64, i64 }* %18 to i8*
  %290 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 0
  %291 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 1
  %292 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 0
  %293 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 1
  br label %305

294:                                              ; preds = %628
  %295 = load i32, i32* %190, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %298, label %297, !prof !4

297:                                              ; preds = %294
  store i32 0, i32* %190, align 4
  br label %298

298:                                              ; preds = %297, %294, %237, %199
  %299 = load %"class.blink::EffectPaintPropertyNode"**, %"class.blink::EffectPaintPropertyNode"*** %188, align 8
  %300 = bitcast i8* %191 to %"class.blink::EffectPaintPropertyNode"**
  %301 = icmp eq %"class.blink::EffectPaintPropertyNode"** %299, %300
  br i1 %301, label %304, label %302, !prof !3

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %19, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.532"* nonnull %303, %"class.blink::EffectPaintPropertyNode"** %299) #12
  br label %304

304:                                              ; preds = %302, %298
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #12
  br label %630

305:                                              ; preds = %628, %240
  %306 = phi i32 [ %238, %240 ], [ %307, %628 ]
  %307 = add i32 %306, -1
  %308 = call dereferenceable(8) %"class.blink::EffectPaintPropertyNode"** @_ZN3WTF6VectorIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.531"* nonnull %19, i32 %307) #12
  %309 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %308, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241) #12
  %310 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %309, i64 0, i32 1, i32 1, i32 0
  %311 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %310, align 8
  %312 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %311, null
  br i1 %312, label %324, label %313

313:                                              ; preds = %305, %318
  %314 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %316, %318 ], [ %311, %305 ]
  %315 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %314, i64 0, i32 0, i32 3, i32 0
  %316 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %315, align 8
  %317 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %316, null
  br i1 %317, label %322, label %318

318:                                              ; preds = %313
  %319 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %314, i64 0, i32 0, i32 1
  %320 = load i8, i8* %319, align 4, !range !2
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %322, label %313

322:                                              ; preds = %318, %313
  %323 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %314 to %"class.blink::ClipPaintPropertyNode"*
  call fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext12SwitchToClipERKNS_21ClipPaintPropertyNodeE(%"class.blink::(anonymous namespace)::ConversionContext"* %0, %"class.blink::ClipPaintPropertyNode"* dereferenceable(168) %323) #12
  br label %360

324:                                              ; preds = %305
  %325 = load i32, i32* %245, align 4
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %360, label %327

327:                                              ; preds = %324, %340
  %328 = call fastcc dereferenceable(40) %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext10StateEntryELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.182"* %244) #12
  %329 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %328, i64 0, i32 0
  %330 = load i32, i32* %329, align 8
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %360

332:                                              ; preds = %327
  %333 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %246, align 8
  %334 = icmp eq %"class.blink::TransformPaintPropertyNode"* %333, null
  br i1 %334, label %340, label %335

335:                                              ; preds = %332
  %336 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %247, align 8
  %337 = call i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %336) #12
  %338 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %247, align 8
  call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %338) #12
  %339 = load i64, i64* %248, align 8
  store i64 %339, i64* %250, align 8
  store %"class.blink::TransformPaintPropertyNode"* null, %"class.blink::TransformPaintPropertyNode"** %246, align 8
  br label %340

340:                                              ; preds = %335, %332
  %341 = call fastcc dereferenceable(40) %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext10StateEntryELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.182"* %244) #12
  %342 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %247, align 8
  %343 = call i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %342) #12
  %344 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %247, align 8
  call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %344) #12
  %345 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %341, i64 0, i32 1
  %346 = bitcast %"class.blink::TransformPaintPropertyNode"** %345 to i64*
  %347 = load i64, i64* %346, align 8
  store i64 %347, i64* %250, align 8
  %348 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %341, i64 0, i32 4
  %349 = bitcast %"class.blink::TransformPaintPropertyNode"** %348 to i64*
  %350 = load i64, i64* %349, align 8
  store i64 %350, i64* %248, align 8
  %351 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %341, i64 0, i32 2
  %352 = bitcast %"class.blink::ClipPaintPropertyNode"** %351 to i64*
  %353 = load i64, i64* %352, align 8
  store i64 %353, i64* %252, align 8
  %354 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %341, i64 0, i32 3
  %355 = bitcast %"class.blink::EffectPaintPropertyNode"** %354 to i64*
  %356 = load i64, i64* %355, align 8
  store i64 %356, i64* %253, align 8
  %357 = load i32, i32* %245, align 4
  %358 = add i32 %357, -1
  store i32 %358, i32* %245, align 4
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %327

360:                                              ; preds = %340, %327, %324, %322
  %361 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %309, i64 0, i32 1, i32 0, i32 0
  %362 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %361, align 8
  br label %363

363:                                              ; preds = %368, %360
  %364 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %362, %360 ], [ %366, %368 ]
  %365 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %364, i64 0, i32 0, i32 3, i32 0
  %366 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %365, align 8
  %367 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %366, null
  br i1 %367, label %372, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %364, i64 0, i32 0, i32 1
  %370 = load i8, i8* %369, align 4, !range !2
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %372, label %363

372:                                              ; preds = %368, %363
  %373 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %364 to %"class.blink::TransformPaintPropertyNode"*
  call fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext17SwitchToTransformERKNS_26TransformPaintPropertyNodeE(%"class.blink::(anonymous namespace)::ConversionContext"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %373) #12
  %374 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %309, i64 0, i32 1, i32 2
  %375 = call zeroext i1 @_ZNK5blink26CompositorFilterOperations7IsEmptyEv(%"class.blink::CompositorFilterOperations"* %374) #12
  %376 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %309, i64 0, i32 1, i32 5
  br i1 %375, label %377, label %410

377:                                              ; preds = %372
  %378 = load i32, i32* %376, align 4
  %379 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %309, i64 0, i32 1, i32 4
  %380 = icmp eq i32 %378, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  %381 = load float, float* %379, align 8
  %382 = fmul float %381, 2.550000e+02
  %383 = call float @llvm.floor.f32(float %382) #12
  %384 = fcmp ule float %383, -1.000000e+00
  %385 = fcmp ugt float %383, 2.550000e+02
  %386 = fptoui float %383 to i8
  %387 = select i1 %384, i8 0, i8 %386
  %388 = xor i1 %384, true
  %389 = sext i1 %388 to i8
  %390 = select i1 %385, i8 %389, i8 %387
  store i8 %390, i8* %4, align 1
  br i1 %380, label %405, label %391

391:                                              ; preds = %377
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %264) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %264, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN5blink12_GLOBAL__N_117ConversionContext11StartEffectERKNS_23EffectPaintPropertyNodeE.filter_flags to i8*), i64 72, i1 false) #12
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %5) #12
  %392 = load i32, i32* %376, align 4
  store i32 %392, i32* %265, align 4
  %393 = load i8, i8* %4, align 1
  %394 = zext i8 %393 to i32
  %395 = load i32, i32* %266, align 8
  %396 = and i32 %395, 16711680
  %397 = and i32 %395, 65280
  %398 = and i32 %395, 255
  %399 = shl nuw i32 %394, 24
  %400 = or i32 %396, %399
  %401 = or i32 %400, %397
  %402 = or i32 %401, %398
  store i32 %402, i32* %266, align 8
  %403 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %247, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %267) #12
  store i8* null, i8** %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %268) #12
  store %"class.cc::PaintFlags"* %5, %"class.cc::PaintFlags"** %7, align 8
  %404 = call i64 @_ZN2cc15DisplayItemList4pushINS_11SaveLayerOpEJDnPNS_10PaintFlagsEEEEmDpOT0_(%"class.cc::DisplayItemList"* %403, i8** nonnull dereferenceable(8) %6, %"class.cc::PaintFlags"** nonnull dereferenceable(8) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %268) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %267) #12
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %264) #12
  br label %408

405:                                              ; preds = %377
  %406 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %247, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %269) #12
  store i8* null, i8** %8, align 8
  %407 = call i64 @_ZN2cc15DisplayItemList4pushINS_16SaveLayerAlphaOpEJDnRhEEEmDpOT0_(%"class.cc::DisplayItemList"* %406, i8** nonnull dereferenceable(8) %8, i8* nonnull dereferenceable(1) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %269) #12
  br label %408

408:                                              ; preds = %405, %391
  %409 = phi i64 [ %404, %391 ], [ %407, %405 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br label %427

410:                                              ; preds = %372
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #12
  store float 0.000000e+00, float* %255, align 4
  store float 0.000000e+00, float* %256, align 4
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %257) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %257, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN5blink12_GLOBAL__N_117ConversionContext11StartEffectERKNS_23EffectPaintPropertyNodeE.filter_flags to i8*), i64 72, i1 false) #12
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %10) #12
  %411 = call dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK5blink26CompositorFilterOperations20AsCcFilterOperationsEv(%"class.blink::CompositorFilterOperations"* %374) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %258) #12
  store float 0.000000e+00, float* %259, align 4
  store float 0.000000e+00, float* %260, align 4
  call void @_ZN2cc20RenderSurfaceFilters16BuildImageFilterERKNS_16FilterOperationsERKN3gfx5SizeFERKNS4_9Vector2dFE(%class.sk_sp.215* nonnull sret %11, %"class.cc::FilterOperations"* dereferenceable(24) %411, %"class.gfx::SizeF"* nonnull dereferenceable(8) %9, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %12) #12
  call void @_ZN2cc10PaintFlags14setImageFilterE5sk_spINS_11PaintFilterEE(%"class.cc::PaintFlags"* nonnull %10, %class.sk_sp.215* nonnull %11) #12
  %412 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %261, align 8
  %413 = icmp eq %"class.cc::PaintFilter"* %412, null
  br i1 %413, label %424, label %414

414:                                              ; preds = %410
  %415 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %412, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %416 = atomicrmw add i32* %415, i32 -1 acq_rel
  %417 = icmp eq i32 %416, 1
  br i1 %417, label %418, label %424

418:                                              ; preds = %414
  %419 = bitcast %"class.cc::PaintFilter"* %412 to %class.SkRefCntBase*
  %420 = bitcast %"class.cc::PaintFilter"* %412 to void (%class.SkRefCntBase*)***
  %421 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %420, align 8
  %422 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %421, i64 2
  %423 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %422, align 8
  call void %423(%class.SkRefCntBase* nonnull %419) #12
  br label %424

424:                                              ; preds = %418, %414, %410
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %258) #12
  %425 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %247, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %262) #12
  store i8* null, i8** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #12
  store %"class.cc::PaintFlags"* %10, %"class.cc::PaintFlags"** %14, align 8
  %426 = call i64 @_ZN2cc15DisplayItemList4pushINS_11SaveLayerOpEJDnPNS_10PaintFlagsEEEEmDpOT0_(%"class.cc::DisplayItemList"* %425, i8** nonnull dereferenceable(8) %13, %"class.cc::PaintFlags"** nonnull dereferenceable(8) %14) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %262) #12
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %257) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #12
  br label %427

427:                                              ; preds = %424, %408
  %428 = phi i64 [ %426, %424 ], [ %409, %408 ]
  %429 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %247, align 8
  call void @_ZN2cc15DisplayItemList21EndPaintOfPairedBeginEv(%"class.cc::DisplayItemList"* %429) #12
  %430 = load i64, i64* %252, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext9PushStateENS1_10StateEntry10PairedTypeE(%"class.blink::(anonymous namespace)::ConversionContext"* %0, i32 1) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %271)
  %431 = load i64, i64* %250, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %271, i8 0, i64 16, i1 false)
  %432 = load i32, i32* %272, align 4
  %433 = load i32, i32* %273, align 8
  %434 = icmp eq i32 %432, %433
  br i1 %434, label %435, label %466, !prof !4

435:                                              ; preds = %427
  %436 = add i32 %432, 1
  %437 = lshr i32 %432, 2
  %438 = add i32 %436, %437
  %439 = icmp ugt i32 %438, 4
  %440 = select i1 %439, i32 %438, i32 4
  %441 = icmp ugt i32 %440, %436
  %442 = select i1 %441, i32 %440, i32 %436
  %443 = icmp ult i32 %432, %442
  br i1 %443, label %444, label %466, !prof !3

444:                                              ; preds = %435
  %445 = load %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"*, %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"** %274, align 8
  %446 = icmp eq %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %445, null
  br i1 %446, label %447, label %448

447:                                              ; preds = %444
  call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_117ConversionContext16EffectBoundsInfoENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.245"* %281, i32 %442) #12
  br label %466

448:                                              ; preds = %444
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %275) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %275, i8 -86, i64 16, i1 false) #12
  store %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* null, %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"** %276, align 8
  store i32 0, i32* %277, align 8
  call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_117ConversionContext16EffectBoundsInfoENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.245"* nonnull %3, i32 %442) #12
  %449 = load %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"*, %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"** %276, align 8
  %450 = load i64, i64* %278, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %275) #12
  %451 = ptrtoint %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %449 to i64
  %452 = load %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"*, %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"** %274, align 8
  %453 = icmp ne %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %449, null
  %454 = icmp ne %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %452, null
  %455 = and i1 %453, %454
  %456 = bitcast %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %452 to i8*
  br i1 %455, label %457, label %463, !prof !3

457:                                              ; preds = %448
  %458 = load i32, i32* %272, align 4
  %459 = zext i32 %458 to i64
  %460 = shl nuw nsw i64 %459, 5
  %461 = bitcast %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %449 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %461, i8* nonnull align 8 %456, i64 %460, i1 false) #12
  %462 = load i8*, i8** %279, align 8
  br label %463

463:                                              ; preds = %457, %448
  %464 = phi i8* [ %462, %457 ], [ %456, %448 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %464) #12
  store atomic i64 %451, i64* %280 monotonic, align 8
  %465 = trunc i64 %450 to i32
  store i32 %465, i32* %273, align 8
  br label %466

466:                                              ; preds = %463, %447, %435, %427
  %467 = load %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"*, %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"** %274, align 8
  %468 = load i32, i32* %272, align 4
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo", %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %467, i64 %469, i32 0
  store i64 %428, i64* %470, align 8
  %471 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo", %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %467, i64 %469, i32 1
  %472 = bitcast %"class.blink::TransformPaintPropertyNode"** %471 to i64*
  store i64 %431, i64* %472, align 8
  %473 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo", %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %467, i64 %469, i32 2
  %474 = bitcast %"class.blink::FloatRect"* %473 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %474, i8* nonnull align 8 %271, i64 16, i1 false) #12
  %475 = load i32, i32* %272, align 4
  %476 = add i32 %475, 1
  store i32 %476, i32* %272, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %271)
  store i64 %430, i64* %252, align 8
  store %"class.blink::EffectPaintPropertyNode"* %309, %"class.blink::EffectPaintPropertyNode"** %59, align 8
  %477 = call zeroext i1 @_ZNK5blink26CompositorFilterOperations18HasReferenceFilterEv(%"class.blink::CompositorFilterOperations"* %374) #12
  br i1 %477, label %478, label %628

478:                                              ; preds = %466
  %479 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %59, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %282) #12
  %480 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %309, i64 0, i32 1, i32 2, i32 1, i32 0, i32 0
  %481 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %309, i64 0, i32 1, i32 2, i32 1, i32 1, i32 0
  %482 = bitcast float* %480 to <2 x float>*
  %483 = load <2 x float>, <2 x float>* %482, align 4
  %484 = bitcast float* %481 to <2 x float>*
  %485 = load <2 x float>, <2 x float>* %484, align 4
  %486 = fmul <2 x float> %485, <float 5.000000e-01, float 5.000000e-01>
  %487 = fadd <2 x float> %483, %486
  store <2 x float> %487, <2 x float>* %283, align 8
  store i32 0, i32* %285, align 8
  store i32 0, i32* %287, align 4
  %488 = call { <2 x float>, <2 x float> } @_ZNK5blink23EffectPaintPropertyNode7MapRectERKNS_9FloatRectE(%"class.blink::EffectPaintPropertyNode"* %479, %"class.blink::FloatRect"* nonnull dereferenceable(16) %16) #12
  %489 = extractvalue { <2 x float>, <2 x float> } %488, 0
  %490 = extractvalue { <2 x float>, <2 x float> } %488, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %282) #12
  %491 = call fastcc dereferenceable(32) %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext16EffectBoundsInfoELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.243"* %270) #12
  %492 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo", %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %491, i64 0, i32 2
  %493 = bitcast %"class.blink::FloatRect"* %492 to <2 x float>*
  store <2 x float> %489, <2 x float>* %493, align 8
  %494 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo", %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %491, i64 0, i32 2, i32 1
  %495 = bitcast %"class.blink::FloatSize"* %494 to <2 x float>*
  store <2 x float> %490, <2 x float>* %495, align 8
  %496 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %247, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %288) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %289) #12
  %497 = extractelement <2 x float> %489, i32 0
  %498 = call float @llvm.floor.f32(float %497) #12
  %499 = fpext float %498 to double
  %500 = fcmp ult double %499, 0x41DFFFFFFFC00000
  br i1 %500, label %501, label %506

501:                                              ; preds = %478
  %502 = fcmp ugt float %498, 0xC1E0000000000000
  br i1 %502, label %503, label %506

503:                                              ; preds = %501
  %504 = fptosi float %498 to i32
  %505 = zext i32 %504 to i64
  br label %506

506:                                              ; preds = %503, %501, %478
  %507 = phi i64 [ %505, %503 ], [ 2147483647, %478 ], [ 2147483648, %501 ]
  %508 = extractelement <2 x float> %489, i32 1
  %509 = call float @llvm.floor.f32(float %508) #12
  %510 = fpext float %509 to double
  %511 = fcmp ult double %510, 0x41DFFFFFFFC00000
  br i1 %511, label %512, label %518

512:                                              ; preds = %506
  %513 = fcmp ugt float %509, 0xC1E0000000000000
  br i1 %513, label %514, label %518

514:                                              ; preds = %512
  %515 = fptosi float %509 to i32
  %516 = zext i32 %515 to i64
  %517 = shl nuw i64 %516, 32
  br label %518

518:                                              ; preds = %514, %512, %506
  %519 = phi i64 [ %517, %514 ], [ 9223372032559808512, %506 ], [ -9223372036854775808, %512 ]
  %520 = trunc i64 %507 to i32
  %521 = lshr exact i64 %519, 32
  %522 = trunc i64 %521 to i32
  %523 = extractelement <2 x float> %490, i32 0
  %524 = fadd float %497, %523
  %525 = extractelement <2 x float> %490, i32 1
  %526 = fadd float %508, %525
  %527 = call float @llvm.ceil.f32(float %524) #12
  %528 = fpext float %527 to double
  %529 = fcmp ult double %528, 0x41DFFFFFFFC00000
  br i1 %529, label %530, label %534

530:                                              ; preds = %518
  %531 = fcmp ugt float %527, 0xC1E0000000000000
  br i1 %531, label %532, label %534

532:                                              ; preds = %530
  %533 = fptosi float %527 to i32
  br label %534

534:                                              ; preds = %532, %530, %518
  %535 = phi i32 [ %533, %532 ], [ 2147483647, %518 ], [ -2147483648, %530 ]
  %536 = call float @llvm.ceil.f32(float %526) #12
  %537 = fpext float %536 to double
  %538 = fcmp ult double %537, 0x41DFFFFFFFC00000
  br i1 %538, label %539, label %543

539:                                              ; preds = %534
  %540 = fcmp ugt float %536, 0xC1E0000000000000
  br i1 %540, label %541, label %543

541:                                              ; preds = %539
  %542 = fptosi float %536 to i32
  br label %543

543:                                              ; preds = %541, %539, %534
  %544 = phi i32 [ %542, %541 ], [ 2147483647, %534 ], [ -2147483648, %539 ]
  %545 = icmp sgt i32 %520, -1
  %546 = select i1 %545, i32 -2147483648, i32 2147483647
  %547 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %535, i32 %520) #12
  %548 = extractvalue { i32, i1 } %547, 1
  %549 = extractvalue { i32, i1 } %547, 0
  %550 = select i1 %548, i32 %546, i32 %549, !prof !4
  %551 = icmp sgt i32 %522, -1
  %552 = select i1 %551, i32 -2147483648, i32 2147483647
  %553 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %544, i32 %522) #12
  %554 = extractvalue { i32, i1 } %553, 1
  %555 = extractvalue { i32, i1 } %553, 0
  %556 = select i1 %554, i32 %552, i32 %555, !prof !4
  %557 = or i64 %519, %507
  %558 = zext i32 %556 to i64
  %559 = shl nuw i64 %558, 32
  %560 = zext i32 %550 to i64
  %561 = or i64 %559, %560
  store i64 %557, i64* %290, align 8
  store i64 %561, i64* %291, align 8
  %562 = call { i64, i64 } @_ZNK5blink18ChunkToLayerMapper13MapVisualRectERKNS_7IntRectE(%"class.blink::ChunkToLayerMapper"* %45, %"class.blink::IntRect"* nonnull dereferenceable(16) %243) #12
  %563 = extractvalue { i64, i64 } %562, 0
  %564 = trunc i64 %563 to i32
  %565 = lshr i64 %563, 32
  %566 = trunc i64 %565 to i32
  %567 = extractvalue { i64, i64 } %562, 1
  %568 = trunc i64 %567 to i32
  %569 = lshr i64 %567, 32
  %570 = trunc i64 %569 to i32
  %571 = icmp sgt i32 %564, 0
  %572 = icmp sgt i32 %568, 0
  %573 = and i1 %571, %572
  %574 = sub nuw nsw i32 2147483647, %564
  %575 = icmp ult i32 %574, %568
  %576 = and i1 %575, %573
  %577 = select i1 %576, i32 %574, i32 %568
  %578 = icmp sgt i32 %566, 0
  %579 = icmp sgt i32 %570, 0
  %580 = and i1 %578, %579
  %581 = sub nuw nsw i32 2147483647, %566
  %582 = icmp ult i32 %581, %570
  %583 = and i1 %582, %580
  %584 = select i1 %583, i32 %581, i32 %570
  %585 = icmp sgt i32 %577, 0
  %586 = select i1 %585, i32 %577, i32 0
  %587 = icmp sgt i32 %584, 0
  %588 = select i1 %587, i32 %584, i32 0
  %589 = zext i32 %588 to i64
  %590 = shl nuw nsw i64 %589, 32
  %591 = zext i32 %586 to i64
  %592 = or i64 %590, %591
  store i64 %563, i64* %292, align 8
  store i64 %592, i64* %293, align 8
  %593 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %496, i64 0, i32 8
  %594 = load i32, i32* %593, align 8
  %595 = icmp eq i32 %594, 1
  br i1 %595, label %627, label %596

596:                                              ; preds = %543
  %597 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %496, i64 0, i32 5
  %598 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %496, i64 0, i32 4, i32 5
  %599 = load i64, i64* %598, align 8
  %600 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %496, i64 0, i32 5, i32 0, i32 1
  %601 = bitcast %"class.gfx::Rect"** %600 to i64*
  %602 = load i64, i64* %601, align 8
  %603 = bitcast %"class.std::__1::vector.161"* %597 to i64*
  %604 = load i64, i64* %603, align 8
  %605 = sub i64 %602, %604
  %606 = ashr exact i64 %605, 4
  %607 = icmp ugt i64 %599, %606
  %608 = inttoptr i64 %604 to %"class.gfx::Rect"*
  br i1 %607, label %609, label %611

609:                                              ; preds = %596
  %610 = sub i64 %599, %606
  call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEmRKS2_(%"class.std::__1::vector.161"* %597, i64 %610, %"class.gfx::Rect"* nonnull dereferenceable(16) %242) #12
  br label %615

611:                                              ; preds = %596
  %612 = icmp ult i64 %599, %606
  br i1 %612, label %613, label %615

613:                                              ; preds = %611
  %614 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %608, i64 %599
  store %"class.gfx::Rect"* %614, %"class.gfx::Rect"** %600, align 8
  br label %615

615:                                              ; preds = %613, %611, %609
  %616 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %496, i64 0, i32 7, i32 0, i32 0
  %617 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %616, align 8
  %618 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %496, i64 0, i32 7, i32 0, i32 1
  %619 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %618, align 8
  %620 = icmp eq %"struct.cc::DisplayItemList::PairedBeginInfo"* %617, %619
  br i1 %620, label %627, label %621

621:                                              ; preds = %615
  %622 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %619, i64 -1, i32 0
  %623 = load i64, i64* %622, align 8
  %624 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %496, i64 0, i32 5, i32 0, i32 0
  %625 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %624, align 8
  %626 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %625, i64 %623
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* %626, %"class.gfx::Rect"* nonnull dereferenceable(16) %242) #12
  br label %627

627:                                              ; preds = %621, %615, %543
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %289) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %288) #12
  br label %628

628:                                              ; preds = %627, %466
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241) #12
  %629 = icmp eq i32 %307, 0
  br i1 %629, label %294, label %305

630:                                              ; preds = %149, %154, %158, %161, %57, %304
  %631 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %1, i64 0, i32 5, i32 1, i32 0
  %632 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %631, align 8
  br label %633

633:                                              ; preds = %638, %630
  %634 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %632, %630 ], [ %636, %638 ]
  %635 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %634, i64 0, i32 0, i32 3, i32 0
  %636 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %635, align 8
  %637 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %636, null
  br i1 %637, label %642, label %638

638:                                              ; preds = %633
  %639 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %634, i64 0, i32 0, i32 1
  %640 = load i8, i8* %639, align 4, !range !2
  %641 = icmp eq i8 %640, 0
  br i1 %641, label %642, label %633

642:                                              ; preds = %633, %638
  %643 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %634 to %"class.blink::ClipPaintPropertyNode"*
  call fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext12SwitchToClipERKNS_21ClipPaintPropertyNodeE(%"class.blink::(anonymous namespace)::ConversionContext"* %0, %"class.blink::ClipPaintPropertyNode"* dereferenceable(168) %643)
  %644 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %1, i64 0, i32 5, i32 0, i32 0
  %645 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %644, align 8
  br label %646

646:                                              ; preds = %651, %642
  %647 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %645, %642 ], [ %649, %651 ]
  %648 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %647, i64 0, i32 0, i32 3, i32 0
  %649 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %648, align 8
  %650 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %649, null
  br i1 %650, label %655, label %651

651:                                              ; preds = %646
  %652 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %647, i64 0, i32 0, i32 1
  %653 = load i8, i8* %652, align 4, !range !2
  %654 = icmp eq i8 %653, 0
  br i1 %654, label %655, label %646

655:                                              ; preds = %646, %651
  %656 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %647 to %"class.blink::TransformPaintPropertyNode"*
  call fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext17SwitchToTransformERKNS_26TransformPaintPropertyNodeE(%"class.blink::(anonymous namespace)::ConversionContext"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %656)
  ret void
}

declare { i64, i64 } @_ZNK5blink18ChunkToLayerMapper13MapVisualRectERKNS_7IntRectE(%"class.blink::ChunkToLayerMapper"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"struct.blink::PaintChunk"* @_ZNK3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::PaintChunk"*, %"struct.blink::PaintChunk"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %24, i64 %25
  ret %"struct.blink::PaintChunk"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

declare void @_ZN5blink18ChunkToLayerMapper13SwitchToChunkERKNS_10PaintChunkE(%"class.blink::ChunkToLayerMapper"*, %"struct.blink::PaintChunk"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext12SwitchToClipERKNS_21ClipPaintPropertyNodeE(%"class.blink::(anonymous namespace)::ConversionContext"* nocapture, %"class.blink::ClipPaintPropertyNode"* dereferenceable(168)) unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = alloca %"class.blink::FloatRoundedRect", align 4
  %5 = alloca <2 x i64>, align 16
  %6 = alloca %"class.blink::FloatRoundedRect::Radii", align 4
  %7 = alloca %"class.WTF::Vector.573", align 8
  %8 = alloca %"class.blink::ClipPaintPropertyNode"*, align 8
  %9 = alloca %"class.blink::FloatRoundedRect", align 4
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 5
  %11 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %10, align 8
  %12 = icmp eq %"class.blink::ClipPaintPropertyNode"* %11, %1
  br i1 %12, label %433, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %11, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 3, i32 0
  %17 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %16, align 8
  %18 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %11, i64 0, i32 0, i32 0, i32 3, i32 0
  %21 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %20, align 8
  %22 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %21, %15
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %21, null
  %25 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %17, %14
  %26 = or i1 %25, %24
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = tail call dereferenceable(24) %"class.blink::ClipPaintPropertyNodeOrAlias"* @_ZN5blink28LowestCommonAncestorInternalERKNS_28ClipPaintPropertyNodeOrAliasES2_(%"class.blink::ClipPaintPropertyNodeOrAlias"* dereferenceable(24) %15, %"class.blink::ClipPaintPropertyNodeOrAlias"* dereferenceable(24) %14) #12
  br label %29

29:                                               ; preds = %13, %19, %23, %27
  %30 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %14, %23 ], [ %15, %19 ], [ %15, %13 ], [ %28, %27 ]
  br label %31

31:                                               ; preds = %29, %36
  %32 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %34, %36 ], [ %30, %29 ]
  %33 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %32, i64 0, i32 0, i32 3, i32 0
  %34 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %33, align 8
  %35 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %32, i64 0, i32 0, i32 1
  %38 = load i8, i8* %37, align 4, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %31

40:                                               ; preds = %31, %36
  %41 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %32 to %"class.blink::ClipPaintPropertyNode"*
  %42 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 0
  %43 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %44 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %10, align 8
  %45 = icmp eq %"class.blink::ClipPaintPropertyNode"* %44, %41
  br i1 %45, label %127, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::ClipPaintPropertyNode"** %10 to %"class.blink::PaintPropertyNode.77"**
  %48 = bitcast %"class.blink::ClipPaintPropertyNode"** %10 to %"class.blink::ClipPaintPropertyNodeOrAlias"**
  %49 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 7
  %50 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 10
  %51 = bitcast %"class.blink::TransformPaintPropertyNode"** %49 to i64*
  %52 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 4
  %53 = bitcast %"class.blink::TransformPaintPropertyNode"** %52 to i64*
  %54 = bitcast %"class.blink::ClipPaintPropertyNode"** %10 to i64*
  %55 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 6
  %56 = bitcast %"class.blink::EffectPaintPropertyNode"** %55 to i64*
  %57 = load i32, i32* %43, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %127, label %62

59:                                               ; preds = %124
  %60 = load i32, i32* %43, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %127, label %62

62:                                               ; preds = %46, %59
  %63 = phi %"class.blink::ClipPaintPropertyNode"* [ %92, %59 ], [ %41, %46 ]
  %64 = tail call fastcc dereferenceable(40) %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext10StateEntryELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.182"* %42)
  %65 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %62
  %69 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %10, align 8
  br label %127

70:                                               ; preds = %62
  %71 = load %"class.blink::PaintPropertyNode.77"*, %"class.blink::PaintPropertyNode.77"** %47, align 8
  %72 = getelementptr inbounds %"class.blink::PaintPropertyNode.77", %"class.blink::PaintPropertyNode.77"* %71, i64 0, i32 3, i32 0
  %73 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %72, align 8
  br label %74

74:                                               ; preds = %79, %70
  %75 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %73, %70 ], [ %77, %79 ]
  %76 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %75, i64 0, i32 0, i32 3, i32 0
  %77 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %76, align 8
  %78 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %75, i64 0, i32 0, i32 1
  %81 = load i8, i8* %80, align 4, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %74

83:                                               ; preds = %74, %79
  store %"class.blink::ClipPaintPropertyNodeOrAlias"* %75, %"class.blink::ClipPaintPropertyNodeOrAlias"** %48, align 8
  %84 = tail call fastcc dereferenceable(40) %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext10StateEntryELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.182"* %42)
  %85 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %10, align 8
  %86 = icmp eq %"class.blink::ClipPaintPropertyNode"* %85, %63
  br i1 %86, label %87, label %90

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %84, i64 0, i32 2
  %89 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %88, align 8
  store %"class.blink::ClipPaintPropertyNode"* %89, %"class.blink::ClipPaintPropertyNode"** %10, align 8
  br label %90

90:                                               ; preds = %87, %83
  %91 = phi %"class.blink::ClipPaintPropertyNode"* [ %89, %87 ], [ %85, %83 ]
  %92 = phi %"class.blink::ClipPaintPropertyNode"* [ %89, %87 ], [ %63, %83 ]
  %93 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %84, i64 0, i32 2
  %94 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %93, align 8
  %95 = icmp eq %"class.blink::ClipPaintPropertyNode"* %91, %94
  br i1 %95, label %96, label %124

96:                                               ; preds = %90
  %97 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %49, align 8
  %98 = icmp eq %"class.blink::TransformPaintPropertyNode"* %97, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %96
  %100 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %50, align 8
  %101 = tail call i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %100) #12
  %102 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %50, align 8
  tail call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %102) #12
  %103 = load i64, i64* %51, align 8
  store i64 %103, i64* %53, align 8
  store %"class.blink::TransformPaintPropertyNode"* null, %"class.blink::TransformPaintPropertyNode"** %49, align 8
  br label %104

104:                                              ; preds = %96, %99
  %105 = tail call fastcc dereferenceable(40) %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext10StateEntryELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.182"* %42) #12
  %106 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %50, align 8
  %107 = tail call i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %106) #12
  %108 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %50, align 8
  tail call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %108) #12
  %109 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %105, i64 0, i32 1
  %110 = bitcast %"class.blink::TransformPaintPropertyNode"** %109 to i64*
  %111 = load i64, i64* %110, align 8
  store i64 %111, i64* %53, align 8
  %112 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %105, i64 0, i32 4
  %113 = bitcast %"class.blink::TransformPaintPropertyNode"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  store i64 %114, i64* %51, align 8
  %115 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %105, i64 0, i32 2
  %116 = bitcast %"class.blink::ClipPaintPropertyNode"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  store i64 %117, i64* %54, align 8
  %118 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %105, i64 0, i32 3
  %119 = bitcast %"class.blink::EffectPaintPropertyNode"** %118 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %56, align 8
  %121 = load i32, i32* %43, align 4
  %122 = add i32 %121, -1
  store i32 %122, i32* %43, align 4
  %123 = inttoptr i64 %117 to %"class.blink::ClipPaintPropertyNode"*
  br label %124

124:                                              ; preds = %104, %90
  %125 = phi %"class.blink::ClipPaintPropertyNode"* [ %123, %104 ], [ %91, %90 ]
  %126 = icmp eq %"class.blink::ClipPaintPropertyNode"* %125, %92
  br i1 %126, label %127, label %59

127:                                              ; preds = %59, %124, %46, %68, %40
  %128 = phi %"class.blink::ClipPaintPropertyNode"* [ %41, %40 ], [ %69, %68 ], [ %44, %46 ], [ %125, %124 ], [ %125, %59 ]
  %129 = icmp eq %"class.blink::ClipPaintPropertyNode"* %128, %1
  br i1 %129, label %433, label %130

130:                                              ; preds = %127
  %131 = bitcast %"class.WTF::Vector.573"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #12
  %132 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %7, i64 0, i32 0, i32 0, i32 0
  %133 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %7, i64 0, i32 0, i32 0, i32 1
  %134 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %7, i64 0, i32 0, i32 0, i32 2
  %135 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %7, i64 0, i32 0, i32 1, i64 0
  %136 = bitcast %"class.WTF::Vector.573"* %7 to i8**
  %137 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %7, i64 0, i32 0, i32 1, i64 0
  %138 = bitcast i8* %137 to i64*
  store i64 -6148914691236517206, i64* %138, align 8
  store i8* %135, i8** %136, align 8
  store i32 1, i32* %133, align 8
  store i32 0, i32* %134, align 4
  %139 = bitcast %"class.blink::ClipPaintPropertyNode"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #12
  store %"class.blink::ClipPaintPropertyNode"* %1, %"class.blink::ClipPaintPropertyNode"** %8, align 8
  %140 = icmp eq %"class.blink::ClipPaintPropertyNode"* %1, null
  br i1 %140, label %185, label %141

141:                                              ; preds = %130
  %142 = bitcast %"class.blink::ClipPaintPropertyNode"** %8 to %"class.blink::PaintPropertyNode.77"**
  %143 = bitcast %"class.blink::ClipPaintPropertyNode"** %8 to %"class.blink::ClipPaintPropertyNodeOrAlias"**
  br label %144

144:                                              ; preds = %179, %141
  %145 = phi %"class.blink::ClipPaintPropertyNode"* [ %174, %179 ], [ %1, %141 ]
  %146 = phi i32 [ %181, %179 ], [ 1, %141 ]
  %147 = phi i32 [ %180, %179 ], [ 0, %141 ]
  %148 = icmp eq i32 %147, %146
  br i1 %148, label %157, label %149, !prof !4

149:                                              ; preds = %144
  %150 = ptrtoint %"class.blink::ClipPaintPropertyNode"* %145 to i64
  %151 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %132, align 8
  %152 = zext i32 %147 to i64
  %153 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %151, i64 %152
  %154 = bitcast %"class.blink::ClipPaintPropertyNode"** %153 to i64*
  store i64 %150, i64* %154, align 8
  %155 = load i32, i32* %134, align 4
  %156 = add i32 %155, 1
  store i32 %156, i32* %134, align 4
  br label %158

157:                                              ; preds = %144
  call void @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.573"* nonnull %7, %"class.blink::ClipPaintPropertyNode"** nonnull dereferenceable(8) %8) #12
  br label %158

158:                                              ; preds = %149, %157
  %159 = load %"class.blink::PaintPropertyNode.77"*, %"class.blink::PaintPropertyNode.77"** %142, align 8
  %160 = getelementptr inbounds %"class.blink::PaintPropertyNode.77", %"class.blink::PaintPropertyNode.77"* %159, i64 0, i32 3, i32 0
  %161 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %160, align 8
  %162 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %161, null
  br i1 %162, label %163, label %164

163:                                              ; preds = %158
  store %"class.blink::ClipPaintPropertyNode"* null, %"class.blink::ClipPaintPropertyNode"** %8, align 8
  br label %182

164:                                              ; preds = %158, %169
  %165 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %167, %169 ], [ %161, %158 ]
  %166 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %165, i64 0, i32 0, i32 3, i32 0
  %167 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %166, align 8
  %168 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %167, null
  br i1 %168, label %173, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %165, i64 0, i32 0, i32 1
  %171 = load i8, i8* %170, align 4, !range !2
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %173, label %164

173:                                              ; preds = %164, %169
  %174 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %165 to %"class.blink::ClipPaintPropertyNode"*
  store %"class.blink::ClipPaintPropertyNodeOrAlias"* %165, %"class.blink::ClipPaintPropertyNodeOrAlias"** %143, align 8
  %175 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %10, align 8
  %176 = icmp eq %"class.blink::ClipPaintPropertyNode"* %175, %174
  %177 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %165, null
  %178 = or i1 %177, %176
  br i1 %178, label %182, label %179

179:                                              ; preds = %173
  %180 = load i32, i32* %134, align 4
  %181 = load i32, i32* %133, align 8
  br label %144

182:                                              ; preds = %173, %163
  %183 = load i32, i32* %134, align 4
  %184 = add i32 %183, -1
  br label %185

185:                                              ; preds = %182, %130
  %186 = phi i32 [ %184, %182 ], [ -1, %130 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #12
  %187 = bitcast %"class.blink::FloatRoundedRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %187) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %187, i8 -1, i64 48, i1 false)
  %188 = call dereferenceable(8) %"class.blink::ClipPaintPropertyNode"** @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.573"* nonnull %7, i32 %186) #12
  %189 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %189, i64 0, i32 1, i32 4
  %191 = bitcast %"class.blink::FloatRoundedRect"* %190 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %187, i8* align 4 %191, i64 16, i1 false) #12
  %192 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 1
  %193 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %189, i64 0, i32 1, i32 4, i32 1
  %194 = bitcast %"class.blink::FloatRoundedRect::Radii"* %193 to <2 x i64>*
  %195 = load <2 x i64>, <2 x i64>* %194, align 4
  %196 = bitcast %"class.blink::FloatRoundedRect::Radii"* %192 to <2 x i64>*
  store <2 x i64> %195, <2 x i64>* %196, align 4
  %197 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 1, i32 2
  %198 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %189, i64 0, i32 1, i32 4, i32 1, i32 2
  %199 = bitcast %"class.blink::FloatSize"* %198 to <2 x i64>*
  %200 = load <2 x i64>, <2 x i64>* %199, align 4
  %201 = bitcast %"class.blink::FloatSize"* %197 to <2 x i64>*
  store <2 x i64> %200, <2 x i64>* %201, align 4
  %202 = load i32, i32* %134, align 4
  %203 = add i32 %202, -1
  %204 = call dereferenceable(8) %"class.blink::ClipPaintPropertyNode"** @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.573"* nonnull %7, i32 %203) #12
  %205 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %204, align 8
  %206 = load i32, i32* %134, align 4
  %207 = icmp eq i32 %206, 1
  br i1 %207, label %225, label %208

208:                                              ; preds = %185
  %209 = add i32 %206, -2
  %210 = bitcast <2 x i64>* %5 to %"class.blink::FloatRect"*
  %211 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 1, i32 0, i32 0
  %212 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 1, i32 0, i32 1
  %213 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 1, i32 1, i32 0
  %214 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 1, i32 1, i32 1
  %215 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 1, i32 2, i32 0
  %216 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 1, i32 2, i32 1
  %217 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 1, i32 3, i32 0
  %218 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 1, i32 3, i32 1
  %219 = bitcast %"class.blink::FloatRoundedRect"* %4 to i8*
  %220 = bitcast <2 x i64>* %5 to i8*
  %221 = bitcast <2 x i64>* %3 to i8*
  %222 = bitcast <2 x i64>* %3 to %"class.blink::FloatRect"*
  %223 = bitcast %"class.blink::FloatRoundedRect::Radii"* %6 to i8*
  %224 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 0
  br label %237

225:                                              ; preds = %430, %185
  %226 = phi %"class.blink::ClipPaintPropertyNode"* [ %205, %185 ], [ %241, %430 ]
  call fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext9StartClipERKNS_16FloatRoundedRectERKNS_21ClipPaintPropertyNodeE(%"class.blink::(anonymous namespace)::ConversionContext"* %0, %"class.blink::FloatRoundedRect"* nonnull dereferenceable(48) %9, %"class.blink::ClipPaintPropertyNode"* dereferenceable(168) %226)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %187) #12
  %227 = load i32, i32* %134, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %230, label %229, !prof !4

229:                                              ; preds = %225
  store i32 0, i32* %134, align 4
  br label %230

230:                                              ; preds = %229, %225
  %231 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %132, align 8
  %232 = bitcast i8* %135 to %"class.blink::ClipPaintPropertyNode"**
  %233 = icmp eq %"class.blink::ClipPaintPropertyNode"** %231, %232
  br i1 %233, label %236, label %234, !prof !3

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %7, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.574"* nonnull %235, %"class.blink::ClipPaintPropertyNode"** %231) #12
  br label %236

236:                                              ; preds = %230, %234
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #12
  br label %433

237:                                              ; preds = %208, %430
  %238 = phi i32 [ %209, %208 ], [ %431, %430 ]
  %239 = phi %"class.blink::ClipPaintPropertyNode"* [ %205, %208 ], [ %241, %430 ]
  %240 = call dereferenceable(8) %"class.blink::ClipPaintPropertyNode"** @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.573"* nonnull %7, i32 %238) #12
  %241 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %240, align 8
  %242 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %241, i64 0, i32 0, i32 0, i32 3, i32 0
  %243 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %242, align 8
  %244 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %243, null
  br i1 %244, label %256, label %245

245:                                              ; preds = %237, %250
  %246 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %248, %250 ], [ %243, %237 ]
  %247 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %246, i64 0, i32 0, i32 3, i32 0
  %248 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %247, align 8
  %249 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %248, null
  br i1 %249, label %254, label %250

250:                                              ; preds = %245
  %251 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %246, i64 0, i32 0, i32 1
  %252 = load i8, i8* %251, align 4, !range !2
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %254, label %245

254:                                              ; preds = %250, %245
  %255 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %246 to %"class.blink::ClipPaintPropertyNode"*
  br label %256

256:                                              ; preds = %254, %237
  %257 = phi %"class.blink::ClipPaintPropertyNode"* [ %255, %254 ], [ null, %237 ]
  %258 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %257, i64 0, i32 1, i32 2, i32 0
  %259 = load %"class.blink::RefCountedPath"*, %"class.blink::RefCountedPath"** %258, align 8
  %260 = icmp eq %"class.blink::RefCountedPath"* %259, null
  br i1 %260, label %261, label %427

261:                                              ; preds = %256
  %262 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %241, i64 0, i32 1, i32 0, i32 0
  %263 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %262, align 8
  br label %264

264:                                              ; preds = %269, %261
  %265 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %263, %261 ], [ %267, %269 ]
  %266 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %265, i64 0, i32 0, i32 3, i32 0
  %267 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %266, align 8
  %268 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %267, null
  br i1 %268, label %273, label %269

269:                                              ; preds = %264
  %270 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %265, i64 0, i32 0, i32 1
  %271 = load i8, i8* %270, align 4, !range !2
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %273, label %264

273:                                              ; preds = %269, %264
  br i1 %244, label %285, label %274

274:                                              ; preds = %273, %279
  %275 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %277, %279 ], [ %243, %273 ]
  %276 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %275, i64 0, i32 0, i32 3, i32 0
  %277 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %276, align 8
  %278 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %277, null
  br i1 %278, label %283, label %279

279:                                              ; preds = %274
  %280 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %275, i64 0, i32 0, i32 1
  %281 = load i8, i8* %280, align 4, !range !2
  %282 = icmp eq i8 %281, 0
  br i1 %282, label %283, label %274

283:                                              ; preds = %279, %274
  %284 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %275 to %"class.blink::ClipPaintPropertyNode"*
  br label %285

285:                                              ; preds = %283, %273
  %286 = phi %"class.blink::ClipPaintPropertyNode"* [ %284, %283 ], [ null, %273 ]
  %287 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %286, i64 0, i32 1, i32 0, i32 0
  %288 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %287, align 8
  br label %289

289:                                              ; preds = %294, %285
  %290 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %288, %285 ], [ %292, %294 ]
  %291 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %290, i64 0, i32 0, i32 3, i32 0
  %292 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %291, align 8
  %293 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %292, null
  br i1 %293, label %298, label %294

294:                                              ; preds = %289
  %295 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %290, i64 0, i32 0, i32 1
  %296 = load i8, i8* %295, align 4, !range !2
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %298, label %289

298:                                              ; preds = %294, %289
  %299 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %265, %290
  br i1 %299, label %321, label %300

300:                                              ; preds = %298
  %301 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %267, %290
  br i1 %301, label %302, label %427

302:                                              ; preds = %300
  %303 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %265, i64 1, i32 0, i32 3
  %304 = bitcast %class.scoped_refptr.3* %303 to %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"**
  %305 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %304, align 8
  %306 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %305, null
  br i1 %306, label %307, label %427

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %265, i64 1
  %309 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %308 to float*
  %310 = load float, float* %309, align 4
  %311 = fcmp ogt float %310, 0xBE80000000000000
  %312 = fcmp olt float %310, 0x3E80000000000000
  %313 = and i1 %311, %312
  br i1 %313, label %314, label %427

314:                                              ; preds = %307
  %315 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %265, i64 1, i32 0, i32 1
  %316 = bitcast i8* %315 to float*
  %317 = load float, float* %316, align 4
  %318 = fcmp ogt float %317, 0xBE80000000000000
  %319 = fcmp olt float %317, 0x3E80000000000000
  %320 = and i1 %318, %319
  br i1 %320, label %321, label %427

321:                                              ; preds = %314, %298
  %322 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %241, i64 0, i32 1, i32 4
  %323 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %241, i64 0, i32 1, i32 4, i32 1, i32 0, i32 0
  %324 = load float, float* %323, align 4
  %325 = fcmp ogt float %324, 0xBE80000000000000
  %326 = fcmp olt float %324, 0x3E80000000000000
  %327 = and i1 %325, %326
  br i1 %327, label %328, label %370

328:                                              ; preds = %321
  %329 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %241, i64 0, i32 1, i32 4, i32 1, i32 0, i32 1
  %330 = load float, float* %329, align 4
  %331 = fcmp ogt float %330, 0xBE80000000000000
  %332 = fcmp olt float %330, 0x3E80000000000000
  %333 = and i1 %331, %332
  br i1 %333, label %334, label %370

334:                                              ; preds = %328
  %335 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %241, i64 0, i32 1, i32 4, i32 1, i32 1, i32 0
  %336 = load float, float* %335, align 4
  %337 = fcmp ogt float %336, 0xBE80000000000000
  %338 = fcmp olt float %336, 0x3E80000000000000
  %339 = and i1 %337, %338
  br i1 %339, label %340, label %370

340:                                              ; preds = %334
  %341 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %241, i64 0, i32 1, i32 4, i32 1, i32 1, i32 1
  %342 = load float, float* %341, align 4
  %343 = fcmp ogt float %342, 0xBE80000000000000
  %344 = fcmp olt float %342, 0x3E80000000000000
  %345 = and i1 %343, %344
  br i1 %345, label %346, label %370

346:                                              ; preds = %340
  %347 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %241, i64 0, i32 1, i32 4, i32 1, i32 2, i32 0
  %348 = load float, float* %347, align 4
  %349 = fcmp ogt float %348, 0xBE80000000000000
  %350 = fcmp olt float %348, 0x3E80000000000000
  %351 = and i1 %349, %350
  br i1 %351, label %352, label %370

352:                                              ; preds = %346
  %353 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %241, i64 0, i32 1, i32 4, i32 1, i32 2, i32 1
  %354 = load float, float* %353, align 4
  %355 = fcmp ogt float %354, 0xBE80000000000000
  %356 = fcmp olt float %354, 0x3E80000000000000
  %357 = and i1 %355, %356
  br i1 %357, label %358, label %370

358:                                              ; preds = %352
  %359 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %241, i64 0, i32 1, i32 4, i32 1, i32 3, i32 0
  %360 = load float, float* %359, align 4
  %361 = fcmp ogt float %360, 0xBE80000000000000
  %362 = fcmp olt float %360, 0x3E80000000000000
  %363 = and i1 %361, %362
  br i1 %363, label %364, label %370

364:                                              ; preds = %358
  %365 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %241, i64 0, i32 1, i32 4, i32 1, i32 3, i32 1
  %366 = load float, float* %365, align 4
  %367 = fcmp ogt float %366, 0xBE80000000000000
  br i1 %367, label %368, label %370

368:                                              ; preds = %364
  %369 = fcmp uge float %366, 0x3E80000000000000
  br label %370

370:                                              ; preds = %368, %364, %358, %352, %346, %340, %334, %328, %321
  %371 = phi i1 [ true, %364 ], [ true, %358 ], [ %369, %368 ], [ true, %328 ], [ true, %321 ], [ true, %340 ], [ true, %334 ], [ true, %352 ], [ true, %346 ]
  %372 = load float, float* %211, align 4
  %373 = fcmp ogt float %372, 0xBE80000000000000
  %374 = fcmp olt float %372, 0x3E80000000000000
  %375 = and i1 %373, %374
  br i1 %375, label %376, label %411

376:                                              ; preds = %370
  %377 = load float, float* %212, align 4
  %378 = fcmp ogt float %377, 0xBE80000000000000
  %379 = fcmp olt float %377, 0x3E80000000000000
  %380 = and i1 %378, %379
  br i1 %380, label %381, label %411

381:                                              ; preds = %376
  %382 = load float, float* %213, align 4
  %383 = fcmp ogt float %382, 0xBE80000000000000
  %384 = fcmp olt float %382, 0x3E80000000000000
  %385 = and i1 %383, %384
  br i1 %385, label %386, label %411

386:                                              ; preds = %381
  %387 = load float, float* %214, align 4
  %388 = fcmp ogt float %387, 0xBE80000000000000
  %389 = fcmp olt float %387, 0x3E80000000000000
  %390 = and i1 %388, %389
  br i1 %390, label %391, label %411

391:                                              ; preds = %386
  %392 = load float, float* %215, align 4
  %393 = fcmp ogt float %392, 0xBE80000000000000
  %394 = fcmp olt float %392, 0x3E80000000000000
  %395 = and i1 %393, %394
  br i1 %395, label %396, label %411

396:                                              ; preds = %391
  %397 = load float, float* %216, align 4
  %398 = fcmp ogt float %397, 0xBE80000000000000
  %399 = fcmp olt float %397, 0x3E80000000000000
  %400 = and i1 %398, %399
  br i1 %400, label %401, label %411

401:                                              ; preds = %396
  %402 = load float, float* %217, align 4
  %403 = fcmp ogt float %402, 0xBE80000000000000
  %404 = fcmp olt float %402, 0x3E80000000000000
  %405 = and i1 %403, %404
  br i1 %405, label %406, label %411

406:                                              ; preds = %401
  %407 = load float, float* %218, align 4
  %408 = fcmp ogt float %407, 0xBE80000000000000
  br i1 %408, label %409, label %411

409:                                              ; preds = %406
  %410 = fcmp uge float %407, 0x3E80000000000000
  br label %411

411:                                              ; preds = %409, %406, %401, %396, %391, %386, %381, %376, %370
  %412 = phi i1 [ true, %406 ], [ true, %401 ], [ %410, %409 ], [ true, %376 ], [ true, %370 ], [ true, %386 ], [ true, %381 ], [ true, %396 ], [ true, %391 ]
  %413 = and i1 %371, %412
  br i1 %413, label %427, label %414

414:                                              ; preds = %411
  br i1 %412, label %424, label %415

415:                                              ; preds = %414
  br i1 %371, label %416, label %421

416:                                              ; preds = %415
  %417 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %322, i64 0, i32 0
  %418 = call zeroext i1 @_ZNK5blink9FloatRect8ContainsERKS0_(%"class.blink::FloatRect"* nonnull %224, %"class.blink::FloatRect"* dereferenceable(16) %417) #12
  br i1 %418, label %419, label %427

419:                                              ; preds = %416
  %420 = bitcast %"class.blink::FloatRoundedRect"* %322 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %187, i8* align 4 %420, i64 48, i1 false) #12
  br label %430

421:                                              ; preds = %415
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %219) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %220) #12
  %422 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %322, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %221) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %221, i8* nonnull align 4 %187, i64 16, i1 false) #12
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %222, %"class.blink::FloatRect"* dereferenceable(16) %422) #12
  %423 = load <2 x i64>, <2 x i64>* %3, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %221) #12
  store <2 x i64> %423, <2 x i64>* %5, align 16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %223) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %223, i8 0, i64 32, i1 false) #12
  call void @_ZN5blink16FloatRoundedRectC1ERKNS_9FloatRectERKNS0_5RadiiE(%"class.blink::FloatRoundedRect"* nonnull %4, %"class.blink::FloatRect"* nonnull dereferenceable(16) %210, %"class.blink::FloatRoundedRect::Radii"* nonnull dereferenceable(32) %6) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %187, i8* nonnull align 4 %219, i64 48, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %223) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %220) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %219) #12
  br label %430

424:                                              ; preds = %414
  %425 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %322, i64 0, i32 0
  %426 = call zeroext i1 @_ZNK5blink9FloatRect8ContainsERKS0_(%"class.blink::FloatRect"* %425, %"class.blink::FloatRect"* nonnull dereferenceable(16) %224) #12
  br i1 %426, label %430, label %427

427:                                              ; preds = %307, %314, %302, %416, %411, %300, %256, %424
  call fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext9StartClipERKNS_16FloatRoundedRectERKNS_21ClipPaintPropertyNodeE(%"class.blink::(anonymous namespace)::ConversionContext"* %0, %"class.blink::FloatRoundedRect"* nonnull dereferenceable(48) %9, %"class.blink::ClipPaintPropertyNode"* dereferenceable(168) %239)
  %428 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %241, i64 0, i32 1, i32 4
  %429 = bitcast %"class.blink::FloatRoundedRect"* %428 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %187, i8* align 4 %429, i64 48, i1 false)
  br label %430

430:                                              ; preds = %421, %419, %424, %427
  %431 = add i32 %238, -1
  %432 = icmp eq i32 %238, 0
  br i1 %432, label %225, label %237

433:                                              ; preds = %236, %127, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext17SwitchToTransformERKNS_26TransformPaintPropertyNodeE(%"class.blink::(anonymous namespace)::ConversionContext"* nocapture, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::GeometryMapper::Translation2DOrMatrix", align 8
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca %class.SkM44, align 4
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 4
  %8 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %7, align 8
  %9 = icmp eq %"class.blink::TransformPaintPropertyNode"* %8, %1
  br i1 %9, label %71, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 7
  %12 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %11, align 8
  %13 = icmp eq %"class.blink::TransformPaintPropertyNode"* %12, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 10
  %16 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %15, align 8
  %17 = tail call i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %16) #12
  %18 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %15, align 8
  tail call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %18) #12
  %19 = bitcast %"class.blink::TransformPaintPropertyNode"** %11 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.blink::TransformPaintPropertyNode"** %7 to i64*
  store i64 %20, i64* %21, align 8
  store %"class.blink::TransformPaintPropertyNode"* null, %"class.blink::TransformPaintPropertyNode"** %11, align 8
  %22 = inttoptr i64 %20 to %"class.blink::TransformPaintPropertyNode"*
  br label %23

23:                                               ; preds = %10, %14
  %24 = phi %"class.blink::TransformPaintPropertyNode"* [ %8, %10 ], [ %22, %14 ]
  %25 = icmp eq %"class.blink::TransformPaintPropertyNode"* %24, %1
  br i1 %25, label %71, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.blink::GeometryMapper::Translation2DOrMatrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %27) #12
  call void @_ZN5blink14GeometryMapper29SourceToDestinationProjectionERKNS_26TransformPaintPropertyNodeES3_(%"class.blink::GeometryMapper::Translation2DOrMatrix"* nonnull sret %3, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %1, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %24) #12
  %28 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %3, i64 0, i32 0, i32 0
  %33 = load float, float* %32, align 8
  %34 = fcmp ogt float %33, 0xBE80000000000000
  %35 = fcmp olt float %33, 0x3E80000000000000
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %3, i64 0, i32 0, i32 1
  %39 = load float, float* %38, align 4
  %40 = fcmp ogt float %39, 0xBE80000000000000
  %41 = fcmp olt float %39, 0x3E80000000000000
  %42 = and i1 %40, %41
  br i1 %42, label %70, label %43

43:                                               ; preds = %31, %37, %26
  %44 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 10
  %45 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %44, align 8
  %46 = call i64 @_ZN2cc15DisplayItemList4pushINS_6SaveOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %45)
  %47 = load i8, i8* %28, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  %49 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %44, align 8
  br i1 %48, label %50, label %61

50:                                               ; preds = %43
  %51 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #12
  %52 = bitcast %"class.blink::GeometryMapper::Translation2DOrMatrix"* %3 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = bitcast float* %4 to i32*
  store i32 %53, i32* %54, align 4
  %55 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #12
  %56 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %3, i64 0, i32 0, i32 1
  %57 = bitcast float* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = bitcast float* %5 to i32*
  store i32 %58, i32* %59, align 4
  %60 = call i64 @_ZN2cc15DisplayItemList4pushINS_11TranslateOpEJffEEEmDpOT0_(%"class.cc::DisplayItemList"* %49, float* nonnull dereferenceable(4) %4, float* nonnull dereferenceable(4) %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #12
  br label %65

61:                                               ; preds = %43
  %62 = bitcast %class.SkM44* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %62) #12
  %63 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink20TransformationMatrix7ToSkM44ERKS0_(%class.SkM44* nonnull sret %6, %"class.blink::TransformationMatrix"* dereferenceable(128) %63) #12
  %64 = call i64 @_ZN2cc15DisplayItemList4pushINS_8ConcatOpEJ5SkM44EEEmDpOT0_(%"class.cc::DisplayItemList"* %49, %class.SkM44* nonnull dereferenceable(64) %6)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %62) #12
  br label %65

65:                                               ; preds = %61, %50
  %66 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %44, align 8
  call void @_ZN2cc15DisplayItemList21EndPaintOfPairedBeginEv(%"class.cc::DisplayItemList"* %66)
  %67 = bitcast %"class.blink::TransformPaintPropertyNode"** %7 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.blink::TransformPaintPropertyNode"** %11 to i64*
  store i64 %68, i64* %69, align 8
  store %"class.blink::TransformPaintPropertyNode"* %1, %"class.blink::TransformPaintPropertyNode"** %7, align 8
  br label %70

70:                                               ; preds = %37, %65
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %27) #12
  br label %71

71:                                               ; preds = %23, %2, %70
  ret void
}

declare zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_6SaveOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %76

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %11, %13
  %15 = ptrtoint i64* %13 to i64
  br i1 %14, label %20, label %16

16:                                               ; preds = %8
  store i64 %4, i64* %11, align 8
  %17 = getelementptr inbounds i64, i64* %11, i64 1
  %18 = ptrtoint i64* %17 to i64
  %19 = bitcast i64** %10 to i64*
  store i64 %18, i64* %19, align 8
  br label %76

20:                                               ; preds = %8
  %21 = ptrtoint i64* %11 to i64
  %22 = bitcast i64** %10 to i64*
  %23 = bitcast %"class.std::__1::vector.168"* %9 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 3
  %27 = add nsw i64 %26, 1
  %28 = icmp ugt i64 %27, 2305843009213693951
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = bitcast %"class.std::__1::vector.168"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #14
  unreachable

31:                                               ; preds = %20
  %32 = bitcast i64** %12 to i64*
  %33 = sub i64 %15, %24
  %34 = ashr exact i64 %33, 3
  %35 = icmp ult i64 %34, 1152921504606846975
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = ashr exact i64 %33, 2
  %38 = icmp ult i64 %37, %27
  %39 = select i1 %38, i64 %27, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %36
  %42 = icmp ugt i64 %39, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #14
  unreachable

44:                                               ; preds = %41, %31
  %45 = phi i64 [ %39, %41 ], [ 2305843009213693951, %31 ]
  %46 = shl i64 %45, 3
  %47 = tail call i8* @_Znwm(i64 %46) #13
  %48 = bitcast i8* %47 to i64*
  br label %49

49:                                               ; preds = %44, %36
  %50 = phi i64 [ %45, %44 ], [ 0, %36 ]
  %51 = phi i64* [ %48, %44 ], [ null, %36 ]
  %52 = getelementptr inbounds i64, i64* %51, i64 %26
  %53 = getelementptr inbounds i64, i64* %51, i64 %50
  %54 = ptrtoint i64* %53 to i64
  store i64 %4, i64* %52, align 8
  %55 = getelementptr inbounds i64, i64* %52, i64 1
  %56 = ptrtoint i64* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %9, i64 0, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = load i64, i64* %22, align 8
  %60 = ptrtoint i64* %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = sub nsw i64 0, %62
  %64 = getelementptr inbounds i64, i64* %52, i64 %63
  %65 = ptrtoint i64* %64 to i64
  %66 = icmp sgt i64 %61, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %49
  %68 = bitcast i64* %64 to i8*
  %69 = bitcast i64* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 %61, i1 false) #12
  %70 = load i64*, i64** %57, align 8
  br label %71

71:                                               ; preds = %67, %49
  %72 = phi i64* [ %58, %49 ], [ %70, %67 ]
  store i64 %65, i64* %23, align 8
  store i64 %56, i64* %22, align 8
  store i64 %54, i64* %32, align 8
  %73 = icmp eq i64* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = bitcast i64* %72 to i8*
  tail call void @_ZdlPv(i8* %75) #13
  br label %76

76:                                               ; preds = %74, %71, %16, %1
  %77 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %2, i64 8) #12
  %78 = bitcast i8* %77 to i32*
  store i32 2070, i32* %78, align 4
  %79 = bitcast i8* %77 to %"class.cc::PaintOp"*
  %80 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %81 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %79) #12
  %82 = zext i1 %81 to i8
  %83 = load i8, i8* %80, align 4
  %84 = shl nuw nsw i8 %82, 2
  %85 = and i8 %83, 4
  %86 = or i8 %85, %84
  %87 = and i8 %83, -61
  %88 = or i8 %86, %87
  %89 = and i8 %83, 8
  %90 = or i8 %88, %89
  %91 = and i8 %83, 16
  %92 = and i8 %83, 32
  %93 = or i8 %90, %91
  %94 = or i8 %93, %92
  store i8 %94, i8* %80, align 4
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_11TranslateOpEJffEEEmDpOT0_(%"class.cc::DisplayItemList"*, float* dereferenceable(4), float* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.168"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.168"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #14
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #12
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %76, %73, %18, %3
  %79 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %4, i64 16) #12
  %80 = bitcast float* %1 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = bitcast float* %2 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = bitcast i8* %79 to i32*
  %85 = getelementptr inbounds i8, i8* %79, i64 4
  %86 = bitcast i8* %85 to i32*
  store i32 %81, i32* %86, align 4
  %87 = getelementptr inbounds i8, i8* %79, i64 8
  %88 = bitcast i8* %87 to i32*
  store i32 %83, i32* %88, align 4
  store i32 4124, i32* %84, align 4
  %89 = bitcast i8* %79 to %"class.cc::PaintOp"*
  %90 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %91 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %89) #12
  %92 = zext i1 %91 to i8
  %93 = load i8, i8* %90, align 4
  %94 = shl nuw nsw i8 %92, 2
  %95 = and i8 %93, 4
  %96 = or i8 %95, %94
  %97 = and i8 %93, -61
  %98 = or i8 %96, %97
  %99 = and i8 %93, 8
  %100 = or i8 %98, %99
  %101 = and i8 %93, 16
  %102 = and i8 %93, 32
  %103 = or i8 %100, %101
  %104 = or i8 %103, %102
  store i8 %104, i8* %90, align 4
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc15DisplayItemList21EndPaintOfPairedBeginEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %102, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 5
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5, i32 0, i32 1
  %10 = bitcast %"class.gfx::Rect"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.161"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 4
  %16 = sub i64 %7, %15
  %17 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7
  %18 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7, i32 0, i32 1
  %19 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %18, align 8
  %20 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %21 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %20, align 8
  %22 = icmp ult %"struct.cc::DisplayItemList::PairedBeginInfo"* %19, %21
  %23 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %21 to i64
  br i1 %22, label %24, label %30

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %19, i64 0, i32 0
  store i64 %15, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %19, i64 0, i32 1
  store i64 %16, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %19, i64 1
  %28 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %27 to i64
  %29 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %18 to i64*
  store i64 %28, i64* %29, align 8
  br label %88

30:                                               ; preds = %5
  %31 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %19 to i64
  %32 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %18 to i64*
  %33 = bitcast %"class.std::__1::vector.175"* %17 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %31, %34
  %36 = ashr exact i64 %35, 4
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 1152921504606846975
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  %40 = bitcast %"class.std::__1::vector.175"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #14
  unreachable

41:                                               ; preds = %30
  %42 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %20 to i64*
  %43 = sub i64 %23, %34
  %44 = ashr exact i64 %43, 4
  %45 = icmp ult i64 %44, 576460752303423487
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = ashr exact i64 %43, 3
  %48 = icmp ult i64 %47, %37
  %49 = select i1 %48, i64 %37, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = icmp ugt i64 %49, 1152921504606846975
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void @abort() #14
  unreachable

54:                                               ; preds = %51, %41
  %55 = phi i64 [ %49, %51 ], [ 1152921504606846975, %41 ]
  %56 = shl i64 %55, 4
  %57 = tail call i8* @_Znwm(i64 %56) #13
  %58 = bitcast i8* %57 to %"struct.cc::DisplayItemList::PairedBeginInfo"*
  br label %59

59:                                               ; preds = %54, %46
  %60 = phi i64 [ %55, %54 ], [ 0, %46 ]
  %61 = phi %"struct.cc::DisplayItemList::PairedBeginInfo"* [ %58, %54 ], [ null, %46 ]
  %62 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %61, i64 %36
  %63 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %61, i64 %60
  %64 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %63 to i64
  %65 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %62, i64 0, i32 0
  store i64 %15, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %61, i64 %36, i32 1
  store i64 %16, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %62, i64 1
  %68 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %67 to i64
  %69 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %17, i64 0, i32 0, i32 0
  %70 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %69, align 8
  %71 = load i64, i64* %32, align 8
  %72 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %70 to i64
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 4
  %75 = sub nsw i64 0, %74
  %76 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %62, i64 %75
  %77 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %76 to i64
  %78 = icmp sgt i64 %73, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %59
  %80 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"* %76 to i8*
  %81 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 %73, i1 false) #12
  %82 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %69, align 8
  br label %83

83:                                               ; preds = %79, %59
  %84 = phi %"struct.cc::DisplayItemList::PairedBeginInfo"* [ %70, %59 ], [ %82, %79 ]
  store i64 %77, i64* %33, align 8
  store i64 %68, i64* %32, align 8
  store i64 %64, i64* %42, align 8
  %85 = icmp eq %"struct.cc::DisplayItemList::PairedBeginInfo"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"* %84 to i8*
  tail call void @_ZdlPv(i8* %87) #13
  br label %88

88:                                               ; preds = %24, %83, %86
  %89 = load i64, i64* %6, align 8
  %90 = load i64, i64* %10, align 8
  %91 = load i64, i64* %12, align 8
  %92 = sub i64 %90, %91
  %93 = ashr exact i64 %92, 4
  %94 = icmp ugt i64 %89, %93
  %95 = inttoptr i64 %91 to %"class.gfx::Rect"*
  br i1 %94, label %96, label %98

96:                                               ; preds = %88
  %97 = sub i64 %89, %93
  tail call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.161"* %8, i64 %97) #12
  br label %102

98:                                               ; preds = %88
  %99 = icmp ult i64 %89, %93
  br i1 %99, label %100, label %102

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %95, i64 %89
  store %"class.gfx::Rect"* %101, %"class.gfx::Rect"** %9, align 8
  br label %102

102:                                              ; preds = %100, %98, %96, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.161"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.161", %"class.std::__1::vector.161"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.gfx::Rect"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.161", %"class.std::__1::vector.161"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.gfx::Rect"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.gfx::Rect"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 16
  %25 = and i64 %24, -16
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint %"class.gfx::Rect"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.161"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 4
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 1152921504606846975
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.161"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 4
  %41 = icmp ult i64 %40, 576460752303423487
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 3
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 1152921504606846975
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 1152921504606846975, %38 ]
  %52 = shl i64 %51, 4
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to %"class.gfx::Rect"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.gfx::Rect"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %57, i64 %33
  %59 = bitcast %"class.gfx::Rect"* %58 to i8*
  %60 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %57, i64 %56
  %61 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 %1
  %62 = shl nsw i64 %1, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"class.gfx::Rect"* %60 to i64
  %64 = ptrtoint %"class.gfx::Rect"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.161", %"class.std::__1::vector.161"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.gfx::Rect"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 4
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 %71
  %73 = ptrtoint %"class.gfx::Rect"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.gfx::Rect"* %72 to i8*
  %77 = bitcast %"class.gfx::Rect"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #12
  %78 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.gfx::Rect"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.gfx::Rect"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.gfx::Rect"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext9EndEffectEv(%"class.blink::(anonymous namespace)::ConversionContext"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::FloatRect", align 4
  %3 = alloca %"class.blink::FloatRect", align 8
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 8
  %8 = tail call fastcc dereferenceable(32) %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext16EffectBoundsInfoELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.243"* %7)
  %9 = bitcast %"class.blink::FloatRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo", %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %8, i64 0, i32 2
  %13 = bitcast %"class.blink::FloatRect"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %13, i64 16, i1 false)
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 6
  %15 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %15, i64 0, i32 1, i32 2
  %17 = tail call zeroext i1 @_ZNK5blink26CompositorFilterOperations7IsEmptyEv(%"class.blink::CompositorFilterOperations"* %16) #12
  br i1 %17, label %18, label %38

18:                                               ; preds = %1
  %19 = bitcast float* %10 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 8
  %21 = extractelement <2 x float> %20, i32 0
  %22 = fcmp ole float %21, 0.000000e+00
  %23 = extractelement <2 x float> %20, i32 1
  %24 = fcmp ole float %23, 0.000000e+00
  %25 = or i1 %22, %24
  br i1 %25, label %60, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 10
  %28 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %27, align 8
  %29 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo", %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %8, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #12
  %32 = bitcast %"class.blink::FloatRect"* %3 to <2 x float>*
  %33 = load <2 x float>, <2 x float>* %32, align 8
  %34 = fadd <2 x float> %20, %33
  %35 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %33, <2 x float>* %35, align 8
  %36 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %34, <2 x float>* %36, align 8
  %37 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %28, i64 0, i32 4
  call void @_ZN2cc13PaintOpBuffer21UpdateSaveLayerBoundsEmRK6SkRect(%"class.cc::PaintOpBuffer"* %37, i64 %30, %struct.SkRect* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #12
  br label %60

38:                                               ; preds = %1
  %39 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %40 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 10
  %41 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %40, align 8
  %42 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo", %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %8, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #12
  %45 = bitcast %"class.blink::FloatRect"* %3 to <2 x float>*
  %46 = load <2 x float>, <2 x float>* %45, align 8
  %47 = bitcast float* %10 to <2 x float>*
  %48 = load <2 x float>, <2 x float>* %47, align 8
  %49 = fadd <2 x float> %46, %48
  %50 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %46, <2 x float>* %50, align 8
  %51 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %49, <2 x float>* %51, align 8
  %52 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %41, i64 0, i32 4
  call void @_ZN2cc13PaintOpBuffer21UpdateSaveLayerBoundsEmRK6SkRect(%"class.cc::PaintOpBuffer"* %52, i64 %43, %struct.SkRect* nonnull dereferenceable(16) %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #12
  %53 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %14, align 8
  %54 = call { <2 x float>, <2 x float> } @_ZNK5blink23EffectPaintPropertyNode7MapRectERKNS_9FloatRectE(%"class.blink::EffectPaintPropertyNode"* %53, %"class.blink::FloatRect"* nonnull dereferenceable(16) %3) #12
  %55 = extractvalue { <2 x float>, <2 x float> } %54, 0
  %56 = extractvalue { <2 x float>, <2 x float> } %54, 1
  %57 = bitcast %"class.blink::FloatRect"* %3 to <2 x float>*
  store <2 x float> %55, <2 x float>* %57, align 8
  %58 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1
  %59 = bitcast %"class.blink::FloatSize"* %58 to <2 x float>*
  store <2 x float> %56, <2 x float>* %59, align 8
  br label %60

60:                                               ; preds = %18, %26, %38
  %61 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = add i32 %62, -1
  store i32 %63, i32* %61, align 4
  %64 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 7
  %65 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %64, align 8
  %66 = icmp eq %"class.blink::TransformPaintPropertyNode"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 10
  %69 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %68, align 8
  %70 = call i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %69) #12
  %71 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %68, align 8
  call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %71) #12
  %72 = bitcast %"class.blink::TransformPaintPropertyNode"** %64 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 4
  %75 = bitcast %"class.blink::TransformPaintPropertyNode"** %74 to i64*
  store i64 %73, i64* %75, align 8
  store %"class.blink::TransformPaintPropertyNode"* null, %"class.blink::TransformPaintPropertyNode"** %64, align 8
  %76 = load i32, i32* %61, align 4
  br label %77

77:                                               ; preds = %60, %67
  %78 = phi i32 [ %63, %60 ], [ %76, %67 ]
  %79 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 4
  %80 = icmp ne i32 %78, 0
  %81 = load float, float* %10, align 8
  %82 = fcmp ugt float %81, 0.000000e+00
  %83 = and i1 %80, %82
  %84 = load float, float* %11, align 4
  %85 = fcmp ugt float %84, 0.000000e+00
  %86 = and i1 %83, %85
  br i1 %86, label %87, label %94

87:                                               ; preds = %77
  %88 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %79, align 8
  %89 = call fastcc dereferenceable(32) %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext16EffectBoundsInfoELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.243"* %7) #12
  %90 = bitcast %"class.blink::FloatRect"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %90, i8* nonnull align 8 %9, i64 16, i1 false) #12
  %91 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo", %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %89, i64 0, i32 1
  %92 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %91, align 8
  call void @_ZN5blink14GeometryMapper23SourceToDestinationRectINS_9FloatRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_(%"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %88, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %92, %"class.blink::FloatRect"* nonnull dereferenceable(16) %2) #12
  %93 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo", %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %89, i64 0, i32 2
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* %93, %"class.blink::FloatRect"* nonnull dereferenceable(16) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #12
  br label %94

94:                                               ; preds = %77, %87
  %95 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 0
  %96 = call fastcc dereferenceable(40) %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext10StateEntryELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.182"* %95) #12
  %97 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 10
  %98 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %97, align 8
  %99 = call i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %98) #12
  %100 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %97, align 8
  call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %100) #12
  %101 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %96, i64 0, i32 1
  %102 = bitcast %"class.blink::TransformPaintPropertyNode"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.blink::TransformPaintPropertyNode"** %79 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %96, i64 0, i32 4
  %106 = bitcast %"class.blink::TransformPaintPropertyNode"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.blink::TransformPaintPropertyNode"** %64 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %96, i64 0, i32 2
  %110 = bitcast %"class.blink::ClipPaintPropertyNode"** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 5
  %113 = bitcast %"class.blink::ClipPaintPropertyNode"** %112 to i64*
  store i64 %111, i64* %113, align 8
  %114 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %96, i64 0, i32 3
  %115 = bitcast %"class.blink::EffectPaintPropertyNode"** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.blink::EffectPaintPropertyNode"** %14 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = add i32 %119, -1
  store i32 %120, i32* %118, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret void
}

declare dereferenceable(24) %"class.blink::EffectPaintPropertyNodeOrAlias"* @_ZN5blink28LowestCommonAncestorInternalERKNS_30EffectPaintPropertyNodeOrAliasES2_(%"class.blink::EffectPaintPropertyNodeOrAlias"* dereferenceable(24), %"class.blink::EffectPaintPropertyNodeOrAlias"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(40) %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext10StateEntryELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.182"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1
  %8 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = icmp eq i32 %6, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  store i8* null, i8** %9, align 8
  br label %22

13:                                               ; preds = %1
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  store i8* %17, i8** %9, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %3) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.182", %"class.WTF::Vector.182"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"*, %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"** %23, align 8
  %25 = zext i32 %7 to i64
  %26 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %24, i64 %25
  ret %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %76

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %11, %13
  %15 = ptrtoint i64* %13 to i64
  br i1 %14, label %20, label %16

16:                                               ; preds = %8
  store i64 %4, i64* %11, align 8
  %17 = getelementptr inbounds i64, i64* %11, i64 1
  %18 = ptrtoint i64* %17 to i64
  %19 = bitcast i64** %10 to i64*
  store i64 %18, i64* %19, align 8
  br label %76

20:                                               ; preds = %8
  %21 = ptrtoint i64* %11 to i64
  %22 = bitcast i64** %10 to i64*
  %23 = bitcast %"class.std::__1::vector.168"* %9 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 3
  %27 = add nsw i64 %26, 1
  %28 = icmp ugt i64 %27, 2305843009213693951
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = bitcast %"class.std::__1::vector.168"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #14
  unreachable

31:                                               ; preds = %20
  %32 = bitcast i64** %12 to i64*
  %33 = sub i64 %15, %24
  %34 = ashr exact i64 %33, 3
  %35 = icmp ult i64 %34, 1152921504606846975
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = ashr exact i64 %33, 2
  %38 = icmp ult i64 %37, %27
  %39 = select i1 %38, i64 %27, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %36
  %42 = icmp ugt i64 %39, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #14
  unreachable

44:                                               ; preds = %41, %31
  %45 = phi i64 [ %39, %41 ], [ 2305843009213693951, %31 ]
  %46 = shl i64 %45, 3
  %47 = tail call i8* @_Znwm(i64 %46) #13
  %48 = bitcast i8* %47 to i64*
  br label %49

49:                                               ; preds = %44, %36
  %50 = phi i64 [ %45, %44 ], [ 0, %36 ]
  %51 = phi i64* [ %48, %44 ], [ null, %36 ]
  %52 = getelementptr inbounds i64, i64* %51, i64 %26
  %53 = getelementptr inbounds i64, i64* %51, i64 %50
  %54 = ptrtoint i64* %53 to i64
  store i64 %4, i64* %52, align 8
  %55 = getelementptr inbounds i64, i64* %52, i64 1
  %56 = ptrtoint i64* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %9, i64 0, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = load i64, i64* %22, align 8
  %60 = ptrtoint i64* %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = sub nsw i64 0, %62
  %64 = getelementptr inbounds i64, i64* %52, i64 %63
  %65 = ptrtoint i64* %64 to i64
  %66 = icmp sgt i64 %61, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %49
  %68 = bitcast i64* %64 to i8*
  %69 = bitcast i64* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 %61, i1 false) #12
  %70 = load i64*, i64** %57, align 8
  br label %71

71:                                               ; preds = %67, %49
  %72 = phi i64* [ %58, %49 ], [ %70, %67 ]
  store i64 %65, i64* %23, align 8
  store i64 %56, i64* %22, align 8
  store i64 %54, i64* %32, align 8
  %73 = icmp eq i64* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = bitcast i64* %72 to i8*
  tail call void @_ZdlPv(i8* %75) #13
  br label %76

76:                                               ; preds = %74, %71, %16, %1
  %77 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %2, i64 8) #12
  %78 = bitcast i8* %77 to i32*
  store i32 2068, i32* %78, align 4
  %79 = bitcast i8* %77 to %"class.cc::PaintOp"*
  %80 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %81 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %79) #12
  %82 = zext i1 %81 to i8
  %83 = load i8, i8* %80, align 4
  %84 = shl nuw nsw i8 %82, 2
  %85 = and i8 %83, 4
  %86 = or i8 %85, %84
  %87 = and i8 %83, -61
  %88 = or i8 %86, %87
  %89 = and i8 %83, 8
  %90 = or i8 %88, %89
  %91 = and i8 %83, 16
  %92 = and i8 %83, 32
  %93 = or i8 %90, %91
  %94 = or i8 %93, %92
  store i8 %94, i8* %80, align 4
  ret i64 %4
}

declare void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink26CompositorFilterOperations7IsEmptyEv(%"class.blink::CompositorFilterOperations"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(32) %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* @_ZN3WTF6VectorIN5blink12_GLOBAL__N_117ConversionContext16EffectBoundsInfoELj0ENS_18PartitionAllocatorEE4backEv(%"class.WTF::Vector.243"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.243", %"class.WTF::Vector.243"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1
  %8 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = icmp eq i32 %6, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  store i8* null, i8** %9, align 8
  br label %22

13:                                               ; preds = %1
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  store i8* %17, i8** %9, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %3) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.243", %"class.WTF::Vector.243"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"*, %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"** %23, align 8
  %25 = zext i32 %7 to i64
  %26 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo", %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %24, i64 %25
  ret %"struct.blink::(anonymous namespace)::ConversionContext::EffectBoundsInfo"* %26
}

declare { <2 x float>, <2 x float> } @_ZNK5blink23EffectPaintPropertyNode7MapRectERKNS_9FloatRectE(%"class.blink::EffectPaintPropertyNode"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc13PaintOpBuffer21UpdateSaveLayerBoundsEmRK6SkRect(%"class.cc::PaintOpBuffer"*, i64, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.logging::CheckOpResult", align 8
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp ugt i64 %19, %1
  br i1 %21, label %22, label %23

22:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %17, align 8
  br label %32

23:                                               ; preds = %3
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #12
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %19) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* %24, i8* %25) #12
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %17, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 1113, %"class.logging::CheckOpResult"* nonnull %8) #12
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  br label %32

32:                                               ; preds = %22, %23, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  %33 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = add i64 %1, 4
  %36 = load i64, i64* %18, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ugt i64 %35, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %34, align 8
  br label %49

40:                                               ; preds = %32
  %41 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %35) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %34, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 1114, %"class.logging::CheckOpResult"* nonnull %10) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %50 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %1
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = trunc i32 %54 to i8
  switch i8 %55, label %96 [
    i8 23, label %56
    i8 24, label %76
  ]

56:                                               ; preds = %49
  %57 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #12
  %58 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %58, align 8
  %59 = add i64 %1, 96
  %60 = load i64, i64* %18, align 8
  %61 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  %62 = icmp ugt i64 %59, %60
  br i1 %62, label %64, label %63

63:                                               ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  store i8* null, i8** %58, align 8
  br label %73

64:                                               ; preds = %56
  %65 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %59) #12
  %66 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %60) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i8* %65, i8* %66) #12
  %67 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  store i8* %68, i8** %58, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 1119, %"class.logging::CheckOpResult"* nonnull %12) #12
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #12
  br label %73

73:                                               ; preds = %63, %64, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #12
  %74 = getelementptr inbounds i8, i8* %52, i64 80
  %75 = bitcast %struct.SkRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 4 %75, i64 16, i1 false)
  br label %96

76:                                               ; preds = %49
  %77 = bitcast %"class.logging::CheckOpResult"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #12
  %78 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %14, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %78, align 8
  %79 = add i64 %1, 24
  %80 = load i64, i64* %18, align 8
  %81 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81)
  %82 = icmp ugt i64 %79, %80
  br i1 %82, label %84, label %83

83:                                               ; preds = %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81)
  store i8* null, i8** %78, align 8
  br label %93

84:                                               ; preds = %76
  %85 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %79) #12
  %86 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %80) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7, i64 0, i64 0), i8* %85, i8* %86) #12
  %87 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %88 = load i8*, i8** %87, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81)
  store i8* %88, i8** %78, align 8
  %89 = icmp eq i8* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %84
  %91 = bitcast %"class.logging::CheckError"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 1123, %"class.logging::CheckOpResult"* nonnull %14) #12
  %92 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #12
  br label %93

93:                                               ; preds = %83, %84, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #12
  %94 = getelementptr inbounds i8, i8* %52, i64 4
  %95 = bitcast %struct.SkRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 16, i1 false)
  br label %96

96:                                               ; preds = %49, %93, %73
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.531"*, %"class.blink::EffectPaintPropertyNode"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::EffectPaintPropertyNode"**, %"class.blink::EffectPaintPropertyNode"*** %6, align 8
  %8 = icmp ugt %"class.blink::EffectPaintPropertyNode"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %7, i64 %10
  %12 = icmp ugt %"class.blink::EffectPaintPropertyNode"** %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.531"* %0, i32 %5) #12
  %14 = load %"class.blink::EffectPaintPropertyNode"**, %"class.blink::EffectPaintPropertyNode"*** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::EffectPaintPropertyNode"** %1 to i64
  %17 = ptrtoint %"class.blink::EffectPaintPropertyNode"** %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.531"* %0, i32 %5) #12
  %20 = load %"class.blink::EffectPaintPropertyNode"**, %"class.blink::EffectPaintPropertyNode"*** %6, align 8
  %21 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::EffectPaintPropertyNode"** [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::EffectPaintPropertyNode"** [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %23, i64 %26
  %28 = bitcast %"class.blink::EffectPaintPropertyNode"** %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::EffectPaintPropertyNode"** %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.531"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::EffectPaintPropertyNode"**, %"class.blink::EffectPaintPropertyNode"*** %31, align 8
  %33 = icmp eq %"class.blink::EffectPaintPropertyNode"** %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink23EffectPaintPropertyNodeEEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink23EffectPaintPropertyNodeEEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.531"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.531"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 1, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.531"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.531"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::EffectPaintPropertyNode"**, %"class.blink::EffectPaintPropertyNode"*** %5, align 8
  %7 = icmp eq %"class.blink::EffectPaintPropertyNode"** %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::EffectPaintPropertyNode"**
  %10 = icmp eq %"class.blink::EffectPaintPropertyNode"** %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.531"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.531"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !4

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::EffectPaintPropertyNode"** %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.532"* %19, %"class.blink::EffectPaintPropertyNode"** nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink23EffectPaintPropertyNodeEEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink23EffectPaintPropertyNodeEEEPKcv, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::EffectPaintPropertyNode"**, %"class.blink::EffectPaintPropertyNode"*** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::EffectPaintPropertyNode"** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::EffectPaintPropertyNode"** %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #12
  %46 = load %"class.blink::EffectPaintPropertyNode"**, %"class.blink::EffectPaintPropertyNode"*** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::EffectPaintPropertyNode"** [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::EffectPaintPropertyNode"**
  %51 = icmp eq %"class.blink::EffectPaintPropertyNode"** %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.532"* %53, %"class.blink::EffectPaintPropertyNode"** %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.531"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink23EffectPaintPropertyNodeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.532"*, %"class.blink::EffectPaintPropertyNode"**) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast %"class.blink::EffectPaintPropertyNode"** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::EffectPaintPropertyNode"** @_ZN3WTF6VectorIPKN5blink23EffectPaintPropertyNodeELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.531"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.531", %"class.WTF::Vector.531"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::EffectPaintPropertyNode"**, %"class.blink::EffectPaintPropertyNode"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %24, i64 %25
  ret %"class.blink::EffectPaintPropertyNode"** %26
}

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_11SaveLayerOpEJDnPNS_10PaintFlagsEEEEmDpOT0_(%"class.cc::DisplayItemList"*, i8** dereferenceable(8), %"class.cc::PaintFlags"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.168"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.168"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #14
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #12
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %76, %73, %18, %3
  %79 = tail call %"class.cc::SaveLayerOp"* @_ZN2cc13PaintOpBuffer4pushINS_11SaveLayerOpEJDnPNS_10PaintFlagsEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"* %4, i8** dereferenceable(8) %1, %"class.cc::PaintFlags"** dereferenceable(8) %2)
  ret i64 %6
}

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_16SaveLayerAlphaOpEJDnRhEEEmDpOT0_(%"class.cc::DisplayItemList"*, i8** dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.168"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.168"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #14
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #12
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %76, %73, %18, %3
  %79 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %4, i64 24) #12
  %80 = load i8, i8* %2, align 1
  %81 = bitcast i8* %79 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, -256
  %84 = or i32 %83, 24
  store i32 %84, i32* %81, align 4
  %85 = getelementptr inbounds i8, i8* %79, i64 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 4 bitcast (%struct.SkRect* @_ZN2cc7PaintOp10kUnsetRectE to i8*), i64 16, i1 false) #12
  %86 = getelementptr inbounds i8, i8* %79, i64 20
  store i8 %80, i8* %86, align 4
  store i32 6168, i32* %81, align 4
  %87 = bitcast i8* %79 to %"class.cc::PaintOp"*
  %88 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %89 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %87) #12
  %90 = zext i1 %89 to i8
  %91 = load i8, i8* %88, align 4
  %92 = shl nuw nsw i8 %90, 2
  %93 = and i8 %91, 4
  %94 = and i8 %91, -61
  %95 = and i8 %91, 8
  %96 = and i8 %91, 32
  %97 = or i8 %92, %93
  %98 = or i8 %97, %94
  %99 = or i8 %98, %95
  %100 = or i8 %99, %96
  %101 = or i8 %100, 16
  store i8 %101, i8* %88, align 4
  ret i64 %6
}

declare void @_ZN2cc10PaintFlags14setImageFilterE5sk_spINS_11PaintFilterEE(%"class.cc::PaintFlags"*, %class.sk_sp.215*) local_unnamed_addr #2

declare void @_ZN2cc20RenderSurfaceFilters16BuildImageFilterERKNS_16FilterOperationsERKN3gfx5SizeFERKNS4_9Vector2dFE(%class.sk_sp.215* sret, %"class.cc::FilterOperations"* dereferenceable(24), %"class.gfx::SizeF"* dereferenceable(8), %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK5blink26CompositorFilterOperations20AsCcFilterOperationsEv(%"class.blink::CompositorFilterOperations"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext9PushStateENS1_10StateEntry10PairedTypeE(%"class.blink::(anonymous namespace)::ConversionContext"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::VectorBufferBase.184", align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 4
  %5 = bitcast %"class.blink::TransformPaintPropertyNode"** %4 to <2 x i64>*
  %6 = load <2 x i64>, <2 x i64>* %5, align 8
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 7
  %9 = bitcast %"class.blink::EffectPaintPropertyNode"** %7 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %55, !prof !4

16:                                               ; preds = %2
  %17 = add i32 %12, 1
  %18 = lshr i32 %12, 2
  %19 = add i32 %17, %18
  %20 = icmp ugt i32 %19, 4
  %21 = select i1 %20, i32 %19, i32 4
  %22 = icmp ugt i32 %21, %17
  %23 = select i1 %22, i32 %21, i32 %17
  %24 = icmp ult i32 %12, %23
  br i1 %24, label %25, label %55, !prof !3

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"*, %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"** %26, align 8
  %28 = icmp eq %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 0, i32 0, i32 0
  tail call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_117ConversionContext10StateEntryENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.184"* %30, i32 %23) #12
  br label %55

31:                                               ; preds = %25
  %32 = bitcast %"class.WTF::VectorBufferBase.184"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.WTF::VectorBufferBase.184", %"class.WTF::VectorBufferBase.184"* %3, i64 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::VectorBufferBase.184", %"class.WTF::VectorBufferBase.184"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false) #12
  store %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* null, %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"** %33, align 8
  store i32 0, i32* %34, align 8
  call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_117ConversionContext10StateEntryENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.184"* nonnull %3, i32 %23) #12
  %35 = load %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"*, %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"** %33, align 8
  %36 = bitcast i32* %34 to i64*
  %37 = load i64, i64* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #12
  %38 = ptrtoint %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %35 to i64
  %39 = load %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"*, %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"** %26, align 8
  %40 = icmp ne %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %35, null
  %41 = icmp ne %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %39, null
  %42 = and i1 %40, %41
  %43 = bitcast %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %39 to i8*
  br i1 %42, label %44, label %51, !prof !3

44:                                               ; preds = %31
  %45 = load i32, i32* %11, align 4
  %46 = zext i32 %45 to i64
  %47 = mul nuw nsw i64 %46, 40
  %48 = bitcast %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* nonnull align 8 %43, i64 %47, i1 false) #12
  %49 = bitcast %"class.blink::(anonymous namespace)::ConversionContext"* %0 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %44, %31
  %52 = phi i8* [ %50, %44 ], [ %43, %31 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #12
  %53 = bitcast %"class.blink::(anonymous namespace)::ConversionContext"* %0 to i64*
  store atomic i64 %38, i64* %53 monotonic, align 8
  %54 = trunc i64 %37 to i32
  store i32 %54, i32* %13, align 8
  br label %55

55:                                               ; preds = %2, %16, %29, %51
  %56 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"*, %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"** %56, align 8
  %58 = load i32, i32* %11, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %57, i64 %59, i32 0
  store i32 %1, i32* %60, align 8
  %61 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %57, i64 %59, i32 1
  %62 = bitcast %"class.blink::TransformPaintPropertyNode"** %61 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %62, align 8
  %63 = getelementptr inbounds %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry", %"struct.blink::(anonymous namespace)::ConversionContext::StateEntry"* %57, i64 %59, i32 3
  %64 = bitcast %"class.blink::EffectPaintPropertyNode"** %63 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %64, align 8
  %65 = load i32, i32* %11, align 4
  %66 = add i32 %65, 1
  store i32 %66, i32* %11, align 4
  store %"class.blink::TransformPaintPropertyNode"* null, %"class.blink::TransformPaintPropertyNode"** %8, align 8
  ret void
}

declare zeroext i1 @_ZNK5blink26CompositorFilterOperations18HasReferenceFilterEv(%"class.blink::CompositorFilterOperations"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cc::SaveLayerOp"* @_ZN2cc13PaintOpBuffer4pushINS_11SaveLayerOpEJDnPNS_10PaintFlagsEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"*, i8** dereferenceable(8), %"class.cc::PaintFlags"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.cc::PaintFlags", align 8
  %5 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %0, i64 96) #12
  %6 = bitcast i8* %5 to %"class.cc::SaveLayerOp"*
  %7 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %2, align 8
  %8 = bitcast %"class.cc::PaintFlags"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #12
  %9 = icmp eq %"class.cc::PaintFlags"* %7, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %3
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* nonnull %4, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %7) #12
  br label %12

11:                                               ; preds = %3
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %4) #12
  br label %12

12:                                               ; preds = %10, %11
  %13 = bitcast i8* %5 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, -256
  %16 = or i32 %15, 23
  store i32 %16, i32* %13, align 4
  %17 = getelementptr inbounds i8, i8* %5, i64 8
  %18 = bitcast i8* %17 to %"class.cc::PaintFlags"*
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %18, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %4) #12
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #12
  %19 = getelementptr inbounds i8, i8* %5, i64 80
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 4 bitcast (%struct.SkRect* @_ZN2cc7PaintOp10kUnsetRectE to i8*), i64 16, i1 false) #12
  %20 = load i32, i32* %13, align 8
  %21 = and i32 %20, 255
  %22 = or i32 %21, 24576
  store i32 %22, i32* %13, align 8
  %23 = bitcast i8* %5 to %"class.cc::PaintOpWithFlags"*
  %24 = bitcast i8* %17 to %class.SkPathEffect**
  %25 = load %class.SkPathEffect*, %class.SkPathEffect** %24, align 8
  %26 = icmp ne %class.SkPathEffect* %25, null
  %27 = zext i1 %26 to i32
  %28 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 8
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, %27
  %31 = bitcast i8* %5 to %"class.cc::PaintOp"*
  store i32 %30, i32* %28, align 8
  %32 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %33 = call zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"* %23) #12
  %34 = zext i1 %33 to i8
  %35 = load i8, i8* %32, align 4
  %36 = shl nuw nsw i8 %34, 1
  %37 = and i8 %35, 2
  %38 = or i8 %37, %36
  %39 = and i8 %35, -3
  %40 = or i8 %38, %39
  store i8 %40, i8* %32, align 4
  %41 = call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %31) #12
  %42 = zext i1 %41 to i8
  %43 = load i8, i8* %32, align 4
  %44 = shl nuw nsw i8 %42, 2
  %45 = and i8 %43, 4
  %46 = and i8 %43, -61
  %47 = and i8 %43, 8
  %48 = and i8 %43, 16
  %49 = or i8 %45, %44
  %50 = or i8 %49, %46
  %51 = or i8 %50, %47
  %52 = or i8 %51, %48
  %53 = or i8 %52, 32
  store i8 %53, i8* %32, align 4
  ret %"class.cc::SaveLayerOp"* %6
}

declare void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"*, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #2

declare zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_117ConversionContext10StateEntryENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.184"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = zext i32 %1 to i64
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = icmp ugt i32 %1, 53634662
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %6) #12
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %13, i8* %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %4) #12
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %22 = mul nuw nsw i64 %6, 40
  %23 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %22) #12
  %24 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_117ConversionContext10StateEntryEEEPKcv, i64 0, i64 0)) #12
  %25 = bitcast %"class.WTF::VectorBufferBase.184"* %0 to i64*
  %26 = ptrtoint i8* %24 to i64
  store atomic i64 %26, i64* %25 monotonic, align 8
  %27 = udiv i64 %23, 40
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.WTF::VectorBufferBase.184", %"class.WTF::VectorBufferBase.184"* %0, i64 0, i32 1
  store i32 %28, i32* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_117ConversionContext16EffectBoundsInfoENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.245"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = zext i32 %1 to i64
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = icmp ugt i32 %1, 67043328
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %6) #12
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %13, i8* %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %4) #12
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %22 = shl nuw nsw i64 %6, 5
  %23 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %22) #12
  %24 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_117ConversionContext16EffectBoundsInfoEEEPKcv, i64 0, i64 0)) #12
  %25 = bitcast %"class.WTF::VectorBufferBase.245"* %0 to i64*
  %26 = ptrtoint i8* %24 to i64
  store atomic i64 %26, i64* %25 monotonic, align 8
  %27 = lshr i64 %23, 5
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.WTF::VectorBufferBase.245", %"class.WTF::VectorBufferBase.245"* %0, i64 0, i32 1
  store i32 %28, i32* %29, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #10

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext9StartClipERKNS_16FloatRoundedRectERKNS_21ClipPaintPropertyNodeE(%"class.blink::(anonymous namespace)::ConversionContext"* nocapture, %"class.blink::FloatRoundedRect"* dereferenceable(48), %"class.blink::ClipPaintPropertyNode"* dereferenceable(168)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkRRect, align 4
  %5 = alloca %"class.blink::GeometryMapper::Translation2DOrMatrix", align 8
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca %class.SkM44, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %2, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %12, align 8
  br label %14

14:                                               ; preds = %19, %3
  %15 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %13, %3 ], [ %17, %19 ]
  %16 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %15, i64 0, i32 0, i32 3, i32 0
  %17 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %16, align 8
  %18 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %15, i64 0, i32 0, i32 1
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %14

23:                                               ; preds = %14, %19
  %24 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %15 to %"class.blink::TransformPaintPropertyNode"*
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 4
  %26 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %25, align 8
  %27 = icmp eq %"class.blink::TransformPaintPropertyNode"* %26, %24
  br i1 %27, label %40, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 7
  %30 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %29, align 8
  %31 = icmp eq %"class.blink::TransformPaintPropertyNode"* %30, null
  br i1 %31, label %40, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 10
  %34 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %33, align 8
  %35 = tail call i64 @_ZN2cc15DisplayItemList4pushINS_9RestoreOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %34) #12
  %36 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %33, align 8
  tail call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %36) #12
  %37 = bitcast %"class.blink::TransformPaintPropertyNode"** %29 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::TransformPaintPropertyNode"** %25 to i64*
  store i64 %38, i64* %39, align 8
  store %"class.blink::TransformPaintPropertyNode"* null, %"class.blink::TransformPaintPropertyNode"** %29, align 8
  br label %40

40:                                               ; preds = %32, %28, %23
  %41 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 10
  %42 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %41, align 8
  %43 = tail call i64 @_ZN2cc15DisplayItemList4pushINS_6SaveOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %42)
  %44 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %25, align 8
  %45 = icmp eq %"class.blink::TransformPaintPropertyNode"* %44, %24
  br i1 %45, label %81, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::GeometryMapper::Translation2DOrMatrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %47) #12
  call void @_ZN5blink14GeometryMapper29SourceToDestinationProjectionERKNS_26TransformPaintPropertyNodeES3_(%"class.blink::GeometryMapper::Translation2DOrMatrix"* nonnull sret %5, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %24, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %44) #12
  %48 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %75

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %5, i64 0, i32 0, i32 0
  %53 = load float, float* %52, align 8
  %54 = fcmp ogt float %53, 0xBE80000000000000
  %55 = fcmp olt float %53, 0x3E80000000000000
  %56 = and i1 %54, %55
  %57 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %5, i64 0, i32 0, i32 1
  br i1 %56, label %61, label %58

58:                                               ; preds = %51
  %59 = bitcast float* %57 to i32*
  %60 = load i32, i32* %59, align 4
  br label %68

61:                                               ; preds = %51
  %62 = load float, float* %57, align 4
  %63 = fcmp ogt float %62, 0xBE80000000000000
  %64 = fcmp olt float %62, 0x3E80000000000000
  %65 = and i1 %63, %64
  br i1 %65, label %80, label %66

66:                                               ; preds = %61
  %67 = bitcast float %62 to i32
  br label %68

68:                                               ; preds = %66, %58
  %69 = phi i32 [ %60, %58 ], [ %67, %66 ]
  %70 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %41, align 8
  %71 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #12
  store float %53, float* %6, align 4
  %72 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #12
  %73 = bitcast float* %7 to i32*
  store i32 %69, i32* %73, align 4
  %74 = call i64 @_ZN2cc15DisplayItemList4pushINS_11TranslateOpEJffEEEmDpOT0_(%"class.cc::DisplayItemList"* %70, float* nonnull dereferenceable(4) %6, float* nonnull dereferenceable(4) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #12
  br label %80

75:                                               ; preds = %46
  %76 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %41, align 8
  %77 = bitcast %class.SkM44* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %77) #12
  %78 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink20TransformationMatrix7ToSkM44ERKS0_(%class.SkM44* nonnull sret %8, %"class.blink::TransformationMatrix"* dereferenceable(128) %78) #12
  %79 = call i64 @_ZN2cc15DisplayItemList4pushINS_8ConcatOpEJ5SkM44EEEmDpOT0_(%"class.cc::DisplayItemList"* %76, %class.SkM44* nonnull dereferenceable(64) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %77) #12
  br label %80

80:                                               ; preds = %75, %68, %61
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %47) #12
  br label %81

81:                                               ; preds = %40, %80
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #12
  store i8 1, i8* %9, align 1
  %82 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 0, i32 0
  %83 = load float, float* %82, align 4
  %84 = fcmp ogt float %83, 0xBE80000000000000
  %85 = fcmp olt float %83, 0x3E80000000000000
  %86 = and i1 %84, %85
  br i1 %86, label %87, label %127

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 0, i32 1
  %89 = load float, float* %88, align 4
  %90 = fcmp ogt float %89, 0xBE80000000000000
  %91 = fcmp olt float %89, 0x3E80000000000000
  %92 = and i1 %90, %91
  br i1 %92, label %93, label %127

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 0
  %95 = load float, float* %94, align 4
  %96 = fcmp ogt float %95, 0xBE80000000000000
  %97 = fcmp olt float %95, 0x3E80000000000000
  %98 = and i1 %96, %97
  br i1 %98, label %99, label %127

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 1
  %101 = load float, float* %100, align 4
  %102 = fcmp ogt float %101, 0xBE80000000000000
  %103 = fcmp olt float %101, 0x3E80000000000000
  %104 = and i1 %102, %103
  br i1 %104, label %105, label %127

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2, i32 0
  %107 = load float, float* %106, align 4
  %108 = fcmp ogt float %107, 0xBE80000000000000
  %109 = fcmp olt float %107, 0x3E80000000000000
  %110 = and i1 %108, %109
  br i1 %110, label %111, label %127

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2, i32 1
  %113 = load float, float* %112, align 4
  %114 = fcmp ogt float %113, 0xBE80000000000000
  %115 = fcmp olt float %113, 0x3E80000000000000
  %116 = and i1 %114, %115
  br i1 %116, label %117, label %127

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 3, i32 0
  %119 = load float, float* %118, align 4
  %120 = fcmp ogt float %119, 0xBE80000000000000
  %121 = fcmp olt float %119, 0x3E80000000000000
  %122 = and i1 %120, %121
  br i1 %122, label %123, label %127

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 3, i32 1
  %125 = load float, float* %124, align 4
  %126 = fcmp ogt float %125, 0xBE80000000000000
  br i1 %126, label %129, label %127

127:                                              ; preds = %123, %117, %87, %81, %99, %93, %111, %105
  %128 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %41, align 8
  br label %132

129:                                              ; preds = %123
  %130 = fcmp uge float %125, 0x3E80000000000000
  %131 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %41, align 8
  br i1 %130, label %132, label %244

132:                                              ; preds = %127, %129
  %133 = phi %"class.cc::DisplayItemList"* [ %128, %127 ], [ %131, %129 ]
  %134 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %133, i64 0, i32 4
  %135 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %133, i64 0, i32 4, i32 3
  %136 = load i64, i64* %135, align 8
  %137 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %133, i64 0, i32 8
  %138 = load i32, i32* %137, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %208

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %133, i64 0, i32 6
  %142 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %133, i64 0, i32 6, i32 0, i32 1
  %143 = load i64*, i64** %142, align 8
  %144 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %133, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %145 = load i64*, i64** %144, align 8
  %146 = icmp eq i64* %143, %145
  %147 = ptrtoint i64* %145 to i64
  br i1 %146, label %152, label %148

148:                                              ; preds = %140
  store i64 %136, i64* %143, align 8
  %149 = getelementptr inbounds i64, i64* %143, i64 1
  %150 = ptrtoint i64* %149 to i64
  %151 = bitcast i64** %142 to i64*
  store i64 %150, i64* %151, align 8
  br label %208

152:                                              ; preds = %140
  %153 = ptrtoint i64* %143 to i64
  %154 = bitcast i64** %142 to i64*
  %155 = bitcast %"class.std::__1::vector.168"* %141 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = sub i64 %153, %156
  %158 = ashr exact i64 %157, 3
  %159 = add nsw i64 %158, 1
  %160 = icmp ugt i64 %159, 2305843009213693951
  br i1 %160, label %161, label %163

161:                                              ; preds = %152
  %162 = bitcast %"class.std::__1::vector.168"* %141 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %162) #14
  unreachable

163:                                              ; preds = %152
  %164 = bitcast i64** %144 to i64*
  %165 = sub i64 %147, %156
  %166 = ashr exact i64 %165, 3
  %167 = icmp ult i64 %166, 1152921504606846975
  br i1 %167, label %168, label %176

168:                                              ; preds = %163
  %169 = ashr exact i64 %165, 2
  %170 = icmp ult i64 %169, %159
  %171 = select i1 %170, i64 %159, i64 %169
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %181, label %173

173:                                              ; preds = %168
  %174 = icmp ugt i64 %171, 2305843009213693951
  br i1 %174, label %175, label %176

175:                                              ; preds = %173
  call void @abort() #14
  unreachable

176:                                              ; preds = %173, %163
  %177 = phi i64 [ %171, %173 ], [ 2305843009213693951, %163 ]
  %178 = shl i64 %177, 3
  %179 = call i8* @_Znwm(i64 %178) #13
  %180 = bitcast i8* %179 to i64*
  br label %181

181:                                              ; preds = %176, %168
  %182 = phi i64 [ %177, %176 ], [ 0, %168 ]
  %183 = phi i64* [ %180, %176 ], [ null, %168 ]
  %184 = getelementptr inbounds i64, i64* %183, i64 %158
  %185 = getelementptr inbounds i64, i64* %183, i64 %182
  %186 = ptrtoint i64* %185 to i64
  store i64 %136, i64* %184, align 8
  %187 = getelementptr inbounds i64, i64* %184, i64 1
  %188 = ptrtoint i64* %187 to i64
  %189 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %141, i64 0, i32 0, i32 0
  %190 = load i64*, i64** %189, align 8
  %191 = load i64, i64* %154, align 8
  %192 = ptrtoint i64* %190 to i64
  %193 = sub i64 %191, %192
  %194 = ashr exact i64 %193, 3
  %195 = sub nsw i64 0, %194
  %196 = getelementptr inbounds i64, i64* %184, i64 %195
  %197 = ptrtoint i64* %196 to i64
  %198 = icmp sgt i64 %193, 0
  br i1 %198, label %199, label %203

199:                                              ; preds = %181
  %200 = bitcast i64* %196 to i8*
  %201 = bitcast i64* %190 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %200, i8* align 8 %201, i64 %193, i1 false) #12
  %202 = load i64*, i64** %189, align 8
  br label %203

203:                                              ; preds = %199, %181
  %204 = phi i64* [ %190, %181 ], [ %202, %199 ]
  store i64 %197, i64* %155, align 8
  store i64 %188, i64* %154, align 8
  store i64 %186, i64* %164, align 8
  %205 = icmp eq i64* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %203
  %207 = bitcast i64* %204 to i8*
  call void @_ZdlPv(i8* %207) #13
  br label %208

208:                                              ; preds = %206, %203, %148, %132
  %209 = call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %134, i64 64) #12
  %210 = bitcast %class.SkRRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %210) #12
  call void @_ZNK5blink16FloatRoundedRectcv7SkRRectEv(%class.SkRRect* nonnull sret %4, %"class.blink::FloatRoundedRect"* %1) #12
  %211 = load i8, i8* %9, align 1, !range !2
  %212 = bitcast i8* %209 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = and i32 %213, -256
  %215 = or i32 %214, 3
  store i32 %215, i32* %212, align 4
  %216 = getelementptr inbounds i8, i8* %209, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %216, i8* nonnull align 4 %210, i64 52, i1 false) #12
  %217 = getelementptr inbounds i8, i8* %209, i64 56
  %218 = bitcast i8* %217 to i32*
  store i32 1, i32* %218, align 4
  %219 = getelementptr inbounds i8, i8* %209, i64 60
  store i8 %211, i8* %219, align 4
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %210) #12
  store i32 16387, i32* %212, align 4
  %220 = bitcast i8* %209 to %"class.cc::PaintOp"*
  %221 = xor i8 %211, 1
  %222 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %133, i64 0, i32 4, i32 9
  %223 = load i8, i8* %222, align 4
  %224 = and i8 %223, 1
  %225 = or i8 %224, %221
  %226 = and i8 %223, -4
  %227 = or i8 %225, %226
  %228 = and i8 %223, 2
  %229 = or i8 %227, %228
  store i8 %229, i8* %222, align 4
  %230 = call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %220) #12
  %231 = zext i1 %230 to i8
  %232 = load i8, i8* %222, align 4
  %233 = shl nuw nsw i8 %231, 2
  %234 = and i8 %232, 4
  %235 = or i8 %234, %233
  %236 = and i8 %232, -61
  %237 = or i8 %235, %236
  %238 = and i8 %232, 8
  %239 = or i8 %237, %238
  %240 = and i8 %232, 16
  %241 = and i8 %232, 32
  %242 = or i8 %239, %240
  %243 = or i8 %242, %241
  store i8 %243, i8* %222, align 4
  br label %248

244:                                              ; preds = %129
  %245 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0
  %246 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %246) #12
  store i32 1, i32* %10, align 4
  %247 = call i64 @_ZN2cc15DisplayItemList4pushINS_10ClipRectOpEJRKN5blink9FloatRectE8SkClipOpRKbEEEmDpOT0_(%"class.cc::DisplayItemList"* %131, %"class.blink::FloatRect"* dereferenceable(16) %245, i32* nonnull dereferenceable(4) %10, i8* nonnull dereferenceable(1) %9)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %246) #12
  br label %248

248:                                              ; preds = %244, %208
  %249 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %2, i64 0, i32 1, i32 2, i32 0
  %250 = load %"class.blink::RefCountedPath"*, %"class.blink::RefCountedPath"** %249, align 8
  %251 = icmp eq %"class.blink::RefCountedPath"* %250, null
  br i1 %251, label %332, label %252

252:                                              ; preds = %248
  %253 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %41, align 8
  %254 = getelementptr inbounds %"class.blink::RefCountedPath", %"class.blink::RefCountedPath"* %250, i64 0, i32 0, i32 0
  %255 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %255) #12
  store i32 1, i32* %11, align 4
  %256 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %253, i64 0, i32 4
  %257 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %253, i64 0, i32 4, i32 3
  %258 = load i64, i64* %257, align 8
  %259 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %253, i64 0, i32 8
  %260 = load i32, i32* %259, align 8
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %330

262:                                              ; preds = %252
  %263 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %253, i64 0, i32 6
  %264 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %253, i64 0, i32 6, i32 0, i32 1
  %265 = load i64*, i64** %264, align 8
  %266 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %253, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %267 = load i64*, i64** %266, align 8
  %268 = icmp eq i64* %265, %267
  %269 = ptrtoint i64* %267 to i64
  br i1 %268, label %274, label %270

270:                                              ; preds = %262
  store i64 %258, i64* %265, align 8
  %271 = getelementptr inbounds i64, i64* %265, i64 1
  %272 = ptrtoint i64* %271 to i64
  %273 = bitcast i64** %264 to i64*
  store i64 %272, i64* %273, align 8
  br label %330

274:                                              ; preds = %262
  %275 = ptrtoint i64* %265 to i64
  %276 = bitcast i64** %264 to i64*
  %277 = bitcast %"class.std::__1::vector.168"* %263 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = sub i64 %275, %278
  %280 = ashr exact i64 %279, 3
  %281 = add nsw i64 %280, 1
  %282 = icmp ugt i64 %281, 2305843009213693951
  br i1 %282, label %283, label %285

283:                                              ; preds = %274
  %284 = bitcast %"class.std::__1::vector.168"* %263 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %284) #14
  unreachable

285:                                              ; preds = %274
  %286 = bitcast i64** %266 to i64*
  %287 = sub i64 %269, %278
  %288 = ashr exact i64 %287, 3
  %289 = icmp ult i64 %288, 1152921504606846975
  br i1 %289, label %290, label %298

290:                                              ; preds = %285
  %291 = ashr exact i64 %287, 2
  %292 = icmp ult i64 %291, %281
  %293 = select i1 %292, i64 %281, i64 %291
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %303, label %295

295:                                              ; preds = %290
  %296 = icmp ugt i64 %293, 2305843009213693951
  br i1 %296, label %297, label %298

297:                                              ; preds = %295
  call void @abort() #14
  unreachable

298:                                              ; preds = %295, %285
  %299 = phi i64 [ %293, %295 ], [ 2305843009213693951, %285 ]
  %300 = shl i64 %299, 3
  %301 = call i8* @_Znwm(i64 %300) #13
  %302 = bitcast i8* %301 to i64*
  br label %303

303:                                              ; preds = %298, %290
  %304 = phi i64 [ %299, %298 ], [ 0, %290 ]
  %305 = phi i64* [ %302, %298 ], [ null, %290 ]
  %306 = getelementptr inbounds i64, i64* %305, i64 %280
  %307 = getelementptr inbounds i64, i64* %305, i64 %304
  %308 = ptrtoint i64* %307 to i64
  store i64 %258, i64* %306, align 8
  %309 = getelementptr inbounds i64, i64* %306, i64 1
  %310 = ptrtoint i64* %309 to i64
  %311 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %263, i64 0, i32 0, i32 0
  %312 = load i64*, i64** %311, align 8
  %313 = load i64, i64* %276, align 8
  %314 = ptrtoint i64* %312 to i64
  %315 = sub i64 %313, %314
  %316 = ashr exact i64 %315, 3
  %317 = sub nsw i64 0, %316
  %318 = getelementptr inbounds i64, i64* %306, i64 %317
  %319 = ptrtoint i64* %318 to i64
  %320 = icmp sgt i64 %315, 0
  br i1 %320, label %321, label %325

321:                                              ; preds = %303
  %322 = bitcast i64* %318 to i8*
  %323 = bitcast i64* %312 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %322, i8* align 8 %323, i64 %315, i1 false) #12
  %324 = load i64*, i64** %311, align 8
  br label %325

325:                                              ; preds = %321, %303
  %326 = phi i64* [ %312, %303 ], [ %324, %321 ]
  store i64 %319, i64* %277, align 8
  store i64 %310, i64* %276, align 8
  store i64 %308, i64* %286, align 8
  %327 = icmp eq i64* %326, null
  br i1 %327, label %330, label %328

328:                                              ; preds = %325
  %329 = bitcast i64* %326 to i8*
  call void @_ZdlPv(i8* %329) #13
  br label %330

330:                                              ; preds = %328, %325, %270, %252
  %331 = call %"class.cc::ClipPathOp"* @_ZN2cc13PaintOpBuffer4pushINS_10ClipPathOpEJRK6SkPath8SkClipOpRKbEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"* %256, %class.SkPath* dereferenceable(16) %254, i32* nonnull dereferenceable(4) %11, i8* nonnull dereferenceable(1) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %255) #12
  br label %332

332:                                              ; preds = %248, %330
  %333 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %41, align 8
  call void @_ZN2cc15DisplayItemList21EndPaintOfPairedBeginEv(%"class.cc::DisplayItemList"* %333)
  call fastcc void @_ZN5blink12_GLOBAL__N_117ConversionContext9PushStateENS1_10StateEntry10PairedTypeE(%"class.blink::(anonymous namespace)::ConversionContext"* %0, i32 0)
  %334 = getelementptr inbounds %"class.blink::(anonymous namespace)::ConversionContext", %"class.blink::(anonymous namespace)::ConversionContext"* %0, i64 0, i32 5
  store %"class.blink::ClipPaintPropertyNode"* %2, %"class.blink::ClipPaintPropertyNode"** %334, align 8
  %335 = bitcast %"class.blink::TransformPaintPropertyNode"** %25 to %"class.blink::TransformPaintPropertyNodeOrAlias"**
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* %15, %"class.blink::TransformPaintPropertyNodeOrAlias"** %335, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  ret void
}

declare dereferenceable(24) %"class.blink::ClipPaintPropertyNodeOrAlias"* @_ZN5blink28LowestCommonAncestorInternalERKNS_28ClipPaintPropertyNodeOrAliasES2_(%"class.blink::ClipPaintPropertyNodeOrAlias"* dereferenceable(24), %"class.blink::ClipPaintPropertyNodeOrAlias"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.573"*, %"class.blink::ClipPaintPropertyNode"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %6, align 8
  %8 = icmp ugt %"class.blink::ClipPaintPropertyNode"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %7, i64 %10
  %12 = icmp ugt %"class.blink::ClipPaintPropertyNode"** %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.573"* %0, i32 %5) #12
  %14 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::ClipPaintPropertyNode"** %1 to i64
  %17 = ptrtoint %"class.blink::ClipPaintPropertyNode"** %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.573"* %0, i32 %5) #12
  %20 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %6, align 8
  %21 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::ClipPaintPropertyNode"** [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::ClipPaintPropertyNode"** [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %23, i64 %26
  %28 = bitcast %"class.blink::ClipPaintPropertyNode"** %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::ClipPaintPropertyNode"** %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.573"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %31, align 8
  %33 = icmp eq %"class.blink::ClipPaintPropertyNode"** %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink21ClipPaintPropertyNodeEEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink21ClipPaintPropertyNodeEEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.573"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.573"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 1, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.573"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.573"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %5, align 8
  %7 = icmp eq %"class.blink::ClipPaintPropertyNode"** %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::ClipPaintPropertyNode"**
  %10 = icmp eq %"class.blink::ClipPaintPropertyNode"** %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.573"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.573"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !4

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::ClipPaintPropertyNode"** %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.574"* %19, %"class.blink::ClipPaintPropertyNode"** nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink21ClipPaintPropertyNodeEEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink21ClipPaintPropertyNodeEEEPKcv, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::ClipPaintPropertyNode"** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::ClipPaintPropertyNode"** %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #12
  %46 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::ClipPaintPropertyNode"** [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::ClipPaintPropertyNode"**
  %51 = icmp eq %"class.blink::ClipPaintPropertyNode"** %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.574"* %53, %"class.blink::ClipPaintPropertyNode"** %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.573"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink21ClipPaintPropertyNodeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.574"*, %"class.blink::ClipPaintPropertyNode"**) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast %"class.blink::ClipPaintPropertyNode"** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::ClipPaintPropertyNode"** @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.573"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.573", %"class.WTF::Vector.573"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %24, i64 %25
  ret %"class.blink::ClipPaintPropertyNode"** %26
}

declare zeroext i1 @_ZNK5blink9FloatRect8ContainsERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink16FloatRoundedRectC1ERKNS_9FloatRectERKNS0_5RadiiE(%"class.blink::FloatRoundedRect"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatRoundedRect::Radii"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_10ClipRectOpEJRKN5blink9FloatRectE8SkClipOpRKbEEEmDpOT0_(%"class.cc::DisplayItemList"*, %"class.blink::FloatRect"* dereferenceable(16), i32* dereferenceable(4), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %79

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %14, %16
  %18 = ptrtoint i64* %16 to i64
  br i1 %17, label %23, label %19

19:                                               ; preds = %11
  store i64 %7, i64* %14, align 8
  %20 = getelementptr inbounds i64, i64* %14, i64 1
  %21 = ptrtoint i64* %20 to i64
  %22 = bitcast i64** %13 to i64*
  store i64 %21, i64* %22, align 8
  br label %79

23:                                               ; preds = %11
  %24 = ptrtoint i64* %14 to i64
  %25 = bitcast i64** %13 to i64*
  %26 = bitcast %"class.std::__1::vector.168"* %12 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 2305843009213693951
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector.168"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #14
  unreachable

34:                                               ; preds = %23
  %35 = bitcast i64** %15 to i64*
  %36 = sub i64 %18, %27
  %37 = ashr exact i64 %36, 3
  %38 = icmp ult i64 %37, 1152921504606846975
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 2
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = icmp ugt i64 %42, 2305843009213693951
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #14
  unreachable

47:                                               ; preds = %44, %34
  %48 = phi i64 [ %42, %44 ], [ 2305843009213693951, %34 ]
  %49 = shl i64 %48, 3
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to i64*
  br label %52

52:                                               ; preds = %47, %39
  %53 = phi i64 [ %48, %47 ], [ 0, %39 ]
  %54 = phi i64* [ %51, %47 ], [ null, %39 ]
  %55 = getelementptr inbounds i64, i64* %54, i64 %29
  %56 = getelementptr inbounds i64, i64* %54, i64 %53
  %57 = ptrtoint i64* %56 to i64
  store i64 %7, i64* %55, align 8
  %58 = getelementptr inbounds i64, i64* %55, i64 1
  %59 = ptrtoint i64* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %12, i64 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64, i64* %25, align 8
  %63 = ptrtoint i64* %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 3
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds i64, i64* %55, i64 %66
  %68 = ptrtoint i64* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %52
  %71 = bitcast i64* %67 to i8*
  %72 = bitcast i64* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 %64, i1 false) #12
  %73 = load i64*, i64** %60, align 8
  br label %74

74:                                               ; preds = %70, %52
  %75 = phi i64* [ %61, %52 ], [ %73, %70 ]
  store i64 %68, i64* %26, align 8
  store i64 %59, i64* %25, align 8
  store i64 %57, i64* %35, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast i64* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #13
  br label %79

79:                                               ; preds = %77, %74, %19, %4
  %80 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %5, i64 32) #12
  %81 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %82 = load <2 x float>, <2 x float>* %81, align 4
  %83 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1, i32 0
  %84 = bitcast float* %83 to <2 x float>*
  %85 = load <2 x float>, <2 x float>* %84, align 4
  %86 = fadd <2 x float> %82, %85
  %87 = load i32, i32* %2, align 4
  %88 = load i8, i8* %3, align 1, !range !2
  %89 = bitcast i8* %80 to i32*
  %90 = getelementptr inbounds i8, i8* %80, i64 4
  %91 = bitcast i8* %90 to <2 x float>*
  store <2 x float> %82, <2 x float>* %91, align 4
  %92 = getelementptr inbounds i8, i8* %80, i64 12
  %93 = bitcast i8* %92 to <2 x float>*
  store <2 x float> %86, <2 x float>* %93, align 4
  %94 = getelementptr inbounds i8, i8* %80, i64 20
  %95 = bitcast i8* %94 to i32*
  store i32 %87, i32* %95, align 4
  %96 = getelementptr inbounds i8, i8* %80, i64 24
  store i8 %88, i8* %96, align 4
  store i32 8194, i32* %89, align 4
  %97 = bitcast i8* %80 to %"class.cc::PaintOp"*
  %98 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %99 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %97) #12
  %100 = zext i1 %99 to i8
  %101 = load i8, i8* %98, align 4
  %102 = shl nuw nsw i8 %100, 2
  %103 = and i8 %101, 4
  %104 = or i8 %103, %102
  %105 = and i8 %101, -61
  %106 = or i8 %104, %105
  %107 = and i8 %101, 8
  %108 = or i8 %106, %107
  %109 = and i8 %101, 16
  %110 = and i8 %101, 32
  %111 = or i8 %108, %109
  %112 = or i8 %111, %110
  store i8 %112, i8* %98, align 4
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_8ConcatOpEJ5SkM44EEEmDpOT0_(%"class.cc::DisplayItemList"*, %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %77

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp eq i64* %12, %14
  %16 = ptrtoint i64* %14 to i64
  br i1 %15, label %21, label %17

17:                                               ; preds = %9
  store i64 %5, i64* %12, align 8
  %18 = getelementptr inbounds i64, i64* %12, i64 1
  %19 = ptrtoint i64* %18 to i64
  %20 = bitcast i64** %11 to i64*
  store i64 %19, i64* %20, align 8
  br label %77

21:                                               ; preds = %9
  %22 = ptrtoint i64* %12 to i64
  %23 = bitcast i64** %11 to i64*
  %24 = bitcast %"class.std::__1::vector.168"* %10 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %22, %25
  %27 = ashr exact i64 %26, 3
  %28 = add nsw i64 %27, 1
  %29 = icmp ugt i64 %28, 2305843009213693951
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::vector.168"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #14
  unreachable

32:                                               ; preds = %21
  %33 = bitcast i64** %13 to i64*
  %34 = sub i64 %16, %25
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, 1152921504606846975
  br i1 %36, label %37, label %45

37:                                               ; preds = %32
  %38 = ashr exact i64 %34, 2
  %39 = icmp ult i64 %38, %28
  %40 = select i1 %39, i64 %28, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = icmp ugt i64 %40, 2305843009213693951
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  tail call void @abort() #14
  unreachable

45:                                               ; preds = %42, %32
  %46 = phi i64 [ %40, %42 ], [ 2305843009213693951, %32 ]
  %47 = shl i64 %46, 3
  %48 = tail call i8* @_Znwm(i64 %47) #13
  %49 = bitcast i8* %48 to i64*
  br label %50

50:                                               ; preds = %45, %37
  %51 = phi i64 [ %46, %45 ], [ 0, %37 ]
  %52 = phi i64* [ %49, %45 ], [ null, %37 ]
  %53 = getelementptr inbounds i64, i64* %52, i64 %27
  %54 = getelementptr inbounds i64, i64* %52, i64 %51
  %55 = ptrtoint i64* %54 to i64
  store i64 %5, i64* %53, align 8
  %56 = getelementptr inbounds i64, i64* %53, i64 1
  %57 = ptrtoint i64* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %10, i64 0, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = load i64, i64* %23, align 8
  %61 = ptrtoint i64* %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds i64, i64* %53, i64 %64
  %66 = ptrtoint i64* %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %50
  %69 = bitcast i64* %65 to i8*
  %70 = bitcast i64* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 %62, i1 false) #12
  %71 = load i64*, i64** %58, align 8
  br label %72

72:                                               ; preds = %68, %50
  %73 = phi i64* [ %59, %50 ], [ %71, %68 ]
  store i64 %66, i64* %24, align 8
  store i64 %57, i64* %23, align 8
  store i64 %55, i64* %33, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast i64* %73 to i8*
  tail call void @_ZdlPv(i8* %76) #13
  br label %77

77:                                               ; preds = %75, %72, %17, %2
  %78 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %3, i64 72) #12
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, -256
  %82 = or i32 %81, 4
  store i32 %82, i32* %79, align 4
  %83 = getelementptr inbounds i8, i8* %78, i64 4
  %84 = bitcast %class.SkM44* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %84, i64 64, i1 false) #12
  store i32 18436, i32* %79, align 4
  %85 = bitcast i8* %78 to %"class.cc::PaintOp"*
  %86 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %87 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %85) #12
  %88 = zext i1 %87 to i8
  %89 = load i8, i8* %86, align 4
  %90 = shl nuw nsw i8 %88, 2
  %91 = and i8 %89, 4
  %92 = or i8 %91, %90
  %93 = and i8 %89, -61
  %94 = or i8 %92, %93
  %95 = and i8 %89, 8
  %96 = or i8 %94, %95
  %97 = and i8 %89, 16
  %98 = and i8 %89, 32
  %99 = or i8 %96, %97
  %100 = or i8 %99, %98
  store i8 %100, i8* %86, align 4
  ret i64 %5
}

declare void @_ZN5blink14GeometryMapper29SourceToDestinationProjectionERKNS_26TransformPaintPropertyNodeES3_(%"class.blink::GeometryMapper::Translation2DOrMatrix"* sret, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) local_unnamed_addr #2

declare void @_ZN5blink20TransformationMatrix7ToSkM44ERKS0_(%class.SkM44* sret, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16FloatRoundedRectcv7SkRRectEv(%class.SkRRect* noalias sret, %"class.blink::FloatRoundedRect"*) local_unnamed_addr #11 comdat align 2 {
  %3 = alloca [4 x %struct.SkPoint], align 16
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 2
  %7 = bitcast %class.SkRRect* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 52, i1 false) #12
  %8 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp ogt float %9, 0xBE80000000000000
  %11 = fcmp olt float %9, 0x3E80000000000000
  %12 = and i1 %10, %11
  %13 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 0, i32 1
  br i1 %12, label %17, label %14

14:                                               ; preds = %2
  %15 = bitcast float* %13 to i32*
  %16 = load i32, i32* %15, align 4
  br label %59

17:                                               ; preds = %2
  %18 = load float, float* %13, align 4
  %19 = fcmp ogt float %18, 0xBE80000000000000
  %20 = fcmp olt float %18, 0x3E80000000000000
  %21 = and i1 %19, %20
  %22 = bitcast float %18 to i32
  br i1 %21, label %23, label %59

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 0
  %25 = load float, float* %24, align 4
  %26 = fcmp ogt float %25, 0xBE80000000000000
  %27 = fcmp olt float %25, 0x3E80000000000000
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %59

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 1
  %31 = load float, float* %30, align 4
  %32 = fcmp ogt float %31, 0xBE80000000000000
  %33 = fcmp olt float %31, 0x3E80000000000000
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %59

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2, i32 0
  %37 = load float, float* %36, align 4
  %38 = fcmp ogt float %37, 0xBE80000000000000
  %39 = fcmp olt float %37, 0x3E80000000000000
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %59

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2, i32 1
  %43 = load float, float* %42, align 4
  %44 = fcmp ogt float %43, 0xBE80000000000000
  %45 = fcmp olt float %43, 0x3E80000000000000
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %59

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 3, i32 0
  %49 = load float, float* %48, align 4
  %50 = fcmp ogt float %49, 0xBE80000000000000
  %51 = fcmp olt float %49, 0x3E80000000000000
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 3, i32 1
  %55 = load float, float* %54, align 4
  %56 = fcmp ule float %55, 0xBE80000000000000
  %57 = fcmp uge float %55, 0x3E80000000000000
  %58 = or i1 %56, %57
  br i1 %58, label %59, label %100

59:                                               ; preds = %14, %53, %35, %41, %23, %29, %17, %47
  %60 = phi i32 [ %16, %14 ], [ %22, %53 ], [ %22, %35 ], [ %22, %41 ], [ %22, %23 ], [ %22, %29 ], [ %22, %17 ], [ %22, %47 ]
  %61 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %62 = bitcast [4 x %struct.SkPoint]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #12
  %63 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0
  %64 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0, i32 0
  %65 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0, i32 1
  %66 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 1
  %67 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 1, i32 1
  %68 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 2
  store float %9, float* %64, align 16
  %69 = bitcast float* %65 to i32*
  store i32 %60, i32* %69, align 4
  %70 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 0
  %71 = bitcast float* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 1
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = bitcast %struct.SkPoint* %66 to i32*
  store i32 %72, i32* %76, align 8
  %77 = bitcast float* %67 to i32*
  store i32 %75, i32* %77, align 4
  %78 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2, i32 0
  %79 = bitcast float* %78 to <4 x i32>*
  %80 = load <4 x i32>, <4 x i32>* %79, align 4
  %81 = shufflevector <4 x i32> %80, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %82 = bitcast %struct.SkPoint* %68 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %82, align 16
  %83 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #12
  %84 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 0, i32 0
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 0, i32 1
  %87 = load float, float* %86, align 4
  %88 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 1, i32 0
  %89 = load float, float* %88, align 4
  %90 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 1, i32 1
  %91 = load float, float* %90, align 4
  %92 = insertelement <2 x float> undef, float %85, i32 0
  %93 = insertelement <2 x float> %92, float %87, i32 1
  %94 = fadd float %85, %89
  %95 = insertelement <2 x float> undef, float %94, i32 0
  %96 = fadd float %87, %91
  %97 = insertelement <2 x float> %95, float %96, i32 1
  %98 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %93, <2 x float>* %98, align 8
  %99 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %97, <2 x float>* %99, align 8
  call void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect* %0, %struct.SkRect* nonnull dereferenceable(16) %61, %struct.SkPoint* nonnull %63) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #12
  br label %116

100:                                              ; preds = %53
  %101 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %102 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #12
  %103 = bitcast %"class.blink::FloatRoundedRect"* %1 to <2 x float>*
  %104 = load <2 x float>, <2 x float>* %103, align 4
  %105 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 1, i32 0
  %106 = bitcast float* %105 to <2 x float>*
  %107 = load <2 x float>, <2 x float>* %106, align 4
  %108 = fadd <2 x float> %104, %107
  %109 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %104, <2 x float>* %109, align 8
  %110 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %108, <2 x float>* %110, align 8
  %111 = call zeroext i1 @_ZN7SkRRect14initializeRectERK6SkRect(%class.SkRRect* %0, %struct.SkRect* nonnull dereferenceable(16) %101) #12
  br i1 %111, label %112, label %115

112:                                              ; preds = %100
  %113 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 1, i64 0
  %114 = bitcast %struct.SkPoint* %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %114, i8 0, i64 32, i1 false) #12
  store i32 1, i32* %6, align 4
  br label %115

115:                                              ; preds = %100, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #12
  br label %116

116:                                              ; preds = %115, %59
  ret void
}

declare void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*) local_unnamed_addr #2

declare zeroext i1 @_ZN7SkRRect14initializeRectERK6SkRect(%class.SkRRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cc::ClipPathOp"* @_ZN2cc13PaintOpBuffer4pushINS_10ClipPathOpEJRK6SkPath8SkClipOpRKbEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"*, %class.SkPath* dereferenceable(16), i32* dereferenceable(4), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.SkPath, align 8
  %6 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %0, i64 32) #12
  %7 = bitcast i8* %6 to %"class.cc::ClipPathOp"*
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* nonnull %5, %class.SkPath* dereferenceable(16) %1) #12
  %8 = load i32, i32* %2, align 4
  %9 = load i8, i8* %3, align 1, !range !2
  %10 = bitcast i8* %6 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, -256
  %13 = or i32 %12, 1
  store i32 %13, i32* %10, align 4
  %14 = getelementptr inbounds i8, i8* %6, i64 8
  %15 = bitcast i8* %14 to %class.SkPath*
  call void @_ZN6SkPathC2ERKS_(%class.SkPath* %15, %class.SkPath* nonnull dereferenceable(16) %5) #12
  %16 = bitcast i8* %14 to %class.SkPathRef**
  %17 = load %class.SkPathRef*, %class.SkPathRef** %16, align 8
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 9
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 1
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 3, i32 0
  %24 = load %struct.SkPoint*, %struct.SkPoint** %23, align 8
  %25 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 3, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %22, %struct.SkPoint* %24, i32 %26) #12
  %28 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 10
  %29 = zext i1 %27 to i8
  store i8 %29, i8* %28, align 1
  store i8 0, i8* %18, align 8
  br label %30

30:                                               ; preds = %4, %21
  %31 = getelementptr inbounds i8, i8* %6, i64 24
  %32 = bitcast i8* %31 to i32*
  store i32 %8, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %6, i64 28
  store i8 %9, i8* %33, align 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %5) #12
  %34 = load i32, i32* %10, align 8
  %35 = and i32 %34, 255
  %36 = or i32 %35, 8192
  store i32 %36, i32* %10, align 8
  %37 = bitcast i8* %6 to %"class.cc::PaintOp"*
  %38 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 8
  %39 = call i32 @_ZNK2cc10ClipPathOp14CountSlowPathsEv(%"class.cc::ClipPathOp"* %7) #12
  %40 = load i32, i32* %38, align 8
  %41 = add nsw i32 %40, %39
  store i32 %41, i32* %38, align 8
  %42 = load i8, i8* %33, align 4, !range !2
  %43 = xor i8 %42, 1
  %44 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %45 = load i8, i8* %44, align 4
  %46 = and i8 %45, 1
  %47 = or i8 %46, %43
  %48 = and i8 %45, -4
  %49 = or i8 %47, %48
  %50 = and i8 %45, 2
  %51 = or i8 %49, %50
  store i8 %51, i8* %44, align 4
  %52 = call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %37) #12
  %53 = zext i1 %52 to i8
  %54 = load i8, i8* %44, align 4
  %55 = shl nuw nsw i8 %53, 2
  %56 = and i8 %54, 4
  %57 = or i8 %56, %55
  %58 = and i8 %54, -61
  %59 = or i8 %57, %58
  %60 = and i8 %54, 8
  %61 = or i8 %59, %60
  %62 = and i8 %54, 16
  %63 = and i8 %54, 32
  %64 = or i8 %61, %62
  %65 = or i8 %64, %63
  store i8 %65, i8* %44, align 4
  ret %"class.cc::ClipPathOp"* %7
}

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

declare void @_ZN6SkPathC2ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare i32 @_ZNK2cc10ClipPathOp14CountSlowPathsEv(%"class.cc::ClipPathOp"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14GeometryMapper23SourceToDestinationRectINS_9FloatRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_(%"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca %"class.blink::GeometryMapper::Translation2DOrMatrix", align 8
  %7 = icmp eq %"class.blink::TransformPaintPropertyNode"* %0, %1
  br i1 %7, label %78, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %11 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %10, align 8
  %12 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %9, %11
  br i1 %12, label %13, label %28

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %14, align 8
  %16 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %15, null
  br i1 %16, label %17, label %28

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  %23 = load float, float* %22, align 4
  %24 = fadd float %19, %23
  store float %24, float* %22, align 4
  %25 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fadd float %21, %26
  store float %27, float* %25, align 4
  br label %78

28:                                               ; preds = %13, %8
  %29 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 3, i32 0
  %31 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %30, align 8
  %32 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %29, %31
  br i1 %32, label %33, label %48

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %34, align 8
  %36 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %35, null
  br i1 %36, label %37, label %48

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  %43 = load float, float* %42, align 4
  %44 = fsub float %43, %39
  store float %44, float* %42, align 4
  %45 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  %46 = load float, float* %45, align 4
  %47 = fsub float %46, %41
  store float %47, float* %45, align 4
  br label %78

48:                                               ; preds = %33, %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 0, i8* %4, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 0, i8* %5, align 1
  %49 = bitcast %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %49) #12
  call void @_ZN5blink14GeometryMapper37SourceToDestinationProjectionInternalERKNS_26TransformPaintPropertyNodeES3_RbS4_(%"class.blink::GeometryMapper::Translation2DOrMatrix"* nonnull sret %6, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %1, i8* nonnull dereferenceable(1) %4, i8* nonnull dereferenceable(1) %5) #12
  %50 = load i8, i8* %5, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = bitcast %"class.blink::FloatRect"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %53, i8 0, i64 16, i1 false)
  br label %77

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %69, !prof !3

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6, i64 0, i32 0, i32 0
  %60 = load float, float* %59, align 8
  %61 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6, i64 0, i32 0, i32 1
  %62 = load float, float* %61, align 4
  %63 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  %64 = load float, float* %63, align 4
  %65 = fadd float %60, %64
  store float %65, float* %63, align 4
  %66 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  %67 = load float, float* %66, align 4
  %68 = fadd float %62, %67
  store float %68, float* %66, align 4
  br label %77

69:                                               ; preds = %54
  %70 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %71 = call { <2 x float>, <2 x float> } @_ZNK5blink20TransformationMatrix7MapRectERKNS_9FloatRectE(%"class.blink::TransformationMatrix"* %70, %"class.blink::FloatRect"* dereferenceable(16) %2) #12
  %72 = extractvalue { <2 x float>, <2 x float> } %71, 0
  %73 = extractvalue { <2 x float>, <2 x float> } %71, 1
  %74 = bitcast %"class.blink::FloatRect"* %2 to <2 x float>*
  store <2 x float> %72, <2 x float>* %74, align 4
  %75 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1
  %76 = bitcast %"class.blink::FloatSize"* %75 to <2 x float>*
  store <2 x float> %73, <2 x float>* %76, align 4
  br label %77

77:                                               ; preds = %69, %58, %52
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %49) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br label %78

78:                                               ; preds = %3, %77, %37, %17
  ret void
}

declare void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink14GeometryMapper37SourceToDestinationProjectionInternalERKNS_26TransformPaintPropertyNodeES3_RbS4_(%"class.blink::GeometryMapper::Translation2DOrMatrix"* sret, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::TransformPaintPropertyNode"* dereferenceable(96), i8* dereferenceable(1), i8* dereferenceable(1)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5blink20TransformationMatrix7MapRectERKNS_9FloatRectE(%"class.blink::TransformationMatrix"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEmRKS2_(%"class.std::__1::vector.161"*, i64, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.161", %"class.std::__1::vector.161"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.gfx::Rect"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.161", %"class.std::__1::vector.161"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.gfx::Rect"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 4
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %50, label %13

13:                                               ; preds = %3
  %14 = inttoptr i64 %9 to %"class.gfx::Rect"*
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %14, i64 %1
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %48, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.gfx::Rect"* %2 to i8*
  %19 = shl nsw i64 %1, 4
  %20 = add i64 %19, -16
  %21 = lshr exact i64 %20, 4
  %22 = add nuw nsw i64 %21, 1
  %23 = and i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %17, %25
  %26 = phi %"class.gfx::Rect"* [ %29, %25 ], [ %14, %17 ]
  %27 = phi i64 [ %30, %25 ], [ %23, %17 ]
  %28 = bitcast %"class.gfx::Rect"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %18, i64 16, i1 false) #12
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %26, i64 1
  %30 = add i64 %27, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %25, !llvm.loop !21

32:                                               ; preds = %25, %17
  %33 = phi %"class.gfx::Rect"* [ %14, %17 ], [ %29, %25 ]
  %34 = icmp ult i64 %20, 48
  br i1 %34, label %35, label %37

35:                                               ; preds = %37, %32
  %36 = ptrtoint %"class.gfx::Rect"* %15 to i64
  br label %48

37:                                               ; preds = %32, %37
  %38 = phi %"class.gfx::Rect"* [ %46, %37 ], [ %33, %32 ]
  %39 = bitcast %"class.gfx::Rect"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %18, i64 16, i1 false) #12
  %40 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 1
  %41 = bitcast %"class.gfx::Rect"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %18, i64 16, i1 false) #12
  %42 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 2
  %43 = bitcast %"class.gfx::Rect"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %18, i64 16, i1 false) #12
  %44 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 3
  %45 = bitcast %"class.gfx::Rect"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %18, i64 16, i1 false) #12
  %46 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 4
  %47 = icmp eq %"class.gfx::Rect"* %46, %15
  br i1 %47, label %35, label %37

48:                                               ; preds = %13, %35
  %49 = phi i64 [ %36, %35 ], [ %9, %13 ]
  store i64 %49, i64* %8, align 8
  br label %132

50:                                               ; preds = %3
  %51 = bitcast %"class.std::__1::vector.161"* %0 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %9, %52
  %54 = ashr exact i64 %53, 4
  %55 = add i64 %54, %1
  %56 = icmp ugt i64 %55, 1152921504606846975
  br i1 %56, label %57, label %59

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::vector.161"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #14
  unreachable

59:                                               ; preds = %50
  %60 = sub i64 %6, %52
  %61 = ashr exact i64 %60, 4
  %62 = icmp ult i64 %61, 576460752303423487
  br i1 %62, label %63, label %71

63:                                               ; preds = %59
  %64 = ashr exact i64 %60, 3
  %65 = icmp ult i64 %64, %55
  %66 = select i1 %65, i64 %55, i64 %64
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %63
  %69 = icmp ugt i64 %66, 1152921504606846975
  br i1 %69, label %70, label %71

70:                                               ; preds = %68
  tail call void @abort() #14
  unreachable

71:                                               ; preds = %59, %68
  %72 = phi i64 [ %66, %68 ], [ 1152921504606846975, %59 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to %"class.gfx::Rect"*
  br label %76

76:                                               ; preds = %71, %63
  %77 = phi i64 [ %72, %71 ], [ 0, %63 ]
  %78 = phi %"class.gfx::Rect"* [ %75, %71 ], [ null, %63 ]
  %79 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %78, i64 %54
  %80 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %78, i64 %77
  %81 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %79, i64 %1
  %82 = bitcast %"class.gfx::Rect"* %2 to i8*
  %83 = shl nsw i64 %1, 4
  %84 = add i64 %83, -16
  %85 = lshr exact i64 %84, 4
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %76, %89
  %90 = phi %"class.gfx::Rect"* [ %93, %89 ], [ %79, %76 ]
  %91 = phi i64 [ %94, %89 ], [ %87, %76 ]
  %92 = bitcast %"class.gfx::Rect"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %82, i64 16, i1 false) #12
  %93 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %90, i64 1
  %94 = add i64 %91, -1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %89, !llvm.loop !23

96:                                               ; preds = %89, %76
  %97 = phi %"class.gfx::Rect"* [ %79, %76 ], [ %93, %89 ]
  %98 = icmp ult i64 %84, 48
  br i1 %98, label %110, label %99

99:                                               ; preds = %96, %99
  %100 = phi %"class.gfx::Rect"* [ %108, %99 ], [ %97, %96 ]
  %101 = bitcast %"class.gfx::Rect"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %82, i64 16, i1 false) #12
  %102 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %100, i64 1
  %103 = bitcast %"class.gfx::Rect"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %82, i64 16, i1 false) #12
  %104 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %100, i64 2
  %105 = bitcast %"class.gfx::Rect"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %82, i64 16, i1 false) #12
  %106 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %100, i64 3
  %107 = bitcast %"class.gfx::Rect"* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %82, i64 16, i1 false) #12
  %108 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %100, i64 4
  %109 = icmp eq %"class.gfx::Rect"* %81, %108
  br i1 %109, label %110, label %99

110:                                              ; preds = %99, %96
  %111 = ptrtoint %"class.gfx::Rect"* %80 to i64
  %112 = ptrtoint %"class.gfx::Rect"* %81 to i64
  %113 = getelementptr inbounds %"class.std::__1::vector.161", %"class.std::__1::vector.161"* %0, i64 0, i32 0, i32 0
  %114 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %113, align 8
  %115 = load i64, i64* %8, align 8
  %116 = ptrtoint %"class.gfx::Rect"* %114 to i64
  %117 = sub i64 %115, %116
  %118 = ashr exact i64 %117, 4
  %119 = sub nsw i64 0, %118
  %120 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %79, i64 %119
  %121 = ptrtoint %"class.gfx::Rect"* %120 to i64
  %122 = icmp sgt i64 %117, 0
  br i1 %122, label %123, label %127

123:                                              ; preds = %110
  %124 = bitcast %"class.gfx::Rect"* %120 to i8*
  %125 = bitcast %"class.gfx::Rect"* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %117, i1 false) #12
  %126 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %113, align 8
  br label %127

127:                                              ; preds = %110, %123
  %128 = phi %"class.gfx::Rect"* [ %114, %110 ], [ %126, %123 ]
  store i64 %121, i64* %51, align 8
  store i64 %112, i64* %8, align 8
  store i64 %111, i64* %5, align 8
  %129 = icmp eq %"class.gfx::Rect"* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = bitcast %"class.gfx::Rect"* %128 to i8*
  tail call void @_ZdlPv(i8* %131) #13
  br label %132

132:                                              ; preds = %130, %127, %48
  ret void
}

declare void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare i32 @_ZNK5blink5Color16CombineWithAlphaEf(%"class.blink::Color"*, float) local_unnamed_addr #2

declare i32 @_ZNK5blink5Color5BlendERKS0_(%"class.blink::Color"*, %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink5ColorELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.583"*, %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Color"*, %"class.blink::Color"** %6, align 8
  %8 = icmp ugt %"class.blink::Color"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Color"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink5ColorELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.583"* %0, i32 %5) #12
  %14 = load %"class.blink::Color"*, %"class.blink::Color"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::Color"* %1 to i64
  %17 = ptrtoint %"class.blink::Color"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 2
  tail call void @_ZN3WTF6VectorIN5blink5ColorELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.583"* %0, i32 %5) #12
  %20 = load %"class.blink::Color"*, %"class.blink::Color"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::Color"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::Color"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %24, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %23, i64 %26, i32 0
  %29 = load i32, i32* %27, align 4
  store i32 %29, i32* %28, align 4
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink5ColorELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.583"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::Color"*, %"class.blink::Color"** %31, align 8
  %33 = icmp eq %"class.blink::Color"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5ColorEEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5ColorEEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.583"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 2
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.583"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink5ColorELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.583"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink5ColorELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.583"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Color"*, %"class.blink::Color"** %5, align 8
  %7 = icmp eq %"class.blink::Color"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Color"*
  %10 = icmp eq %"class.blink::Color"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.583"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.583"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !4

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::Color"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink5ColorELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.584"* %19, %"class.blink::Color"* nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5ColorEEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5ColorEEEPKcv, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 2
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Color"*, %"class.blink::Color"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::Color"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::Color"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #12
  %46 = load %"class.blink::Color"*, %"class.blink::Color"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::Color"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::Color"*
  %51 = icmp eq %"class.blink::Color"* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink5ColorELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.584"* %53, %"class.blink::Color"* %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.583"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5ColorEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink5ColorELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.584"*, %"class.blink::Color"*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast %"class.blink::Color"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN2cc17TouchActionRegionC1Ev(%"class.cc::TouchActionRegion"*) unnamed_addr #2

declare void @_ZN2cc6RegionC1Ev(%"class.cc::Region"*) unnamed_addr #2

declare void @_ZNK5blink24PropertyTreeStateOrAlias7UnaliasEv(%"class.blink::PropertyTreeState"* sret, %"class.blink::PropertyTreeStateOrAlias"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN2cc5Layer20SetTouchActionRegionENS_17TouchActionRegionE(%"class.cc::Layer"*, %"class.cc::TouchActionRegion"*) local_unnamed_addr #2

declare void @_ZN2cc17TouchActionRegionC1EOS0_(%"class.cc::TouchActionRegion"*, %"class.cc::TouchActionRegion"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc17TouchActionRegionD1Ev(%"class.cc::TouchActionRegion"*) unnamed_addr #3

declare void @_ZN2cc5Layer19SetWheelEventRegionENS_6RegionE(%"class.cc::Layer"*, %"class.cc::Region"*) local_unnamed_addr #2

declare void @_ZN2cc6RegionC1ERKS0_(%"class.cc::Region"*, %"class.cc::Region"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc6RegionD1Ev(%"class.cc::Region"*) unnamed_addr #3

declare void @_ZN2cc5Layer26SetNonFastScrollableRegionERKNS_6RegionE(%"class.cc::Layer"*, %"class.cc::Region"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14GeometryMapper25LocalToAncestorVisualRectERKNS_17PropertyTreeStateES3_RNS_13FloatClipRectENS_28OverlayScrollbarClipBehaviorENS_23InclusiveIntersectOrNotENS_33ExpandVisualRectForAnimationOrNotE(%"class.blink::PropertyTreeState"* dereferenceable(24), %"class.blink::PropertyTreeState"* dereferenceable(24), %"class.blink::FloatClipRect"* dereferenceable(20), i32, i32, i32) local_unnamed_addr #2

declare void @_ZN2cc17TouchActionRegion5UnionENS_11TouchActionERKN3gfx4RectE(%"class.cc::TouchActionRegion"*, i32, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN2cc6Region5UnionERKN3gfx4RectE(%"class.cc::Region"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare i32 @_ZN5blink19PropertyTreeManager26EnsureCompositorScrollNodeERKNS_26TransformPaintPropertyNodeE(%"class.blink::PropertyTreeManager"*, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkRegioneqERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc19LayerSelectionBoundD1Ev(%"struct.cc::LayerSelectionBound"*) unnamed_addr #3

declare void @_ZN2cc19LayerSelectionBoundC1Ev(%"struct.cc::LayerSelectionBound"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN5blinkL22MapSelectionBoundPointERKNS_8IntPointERKNS_17PropertyTreeStateES5_RKNS_10FloatPointE(%"class.blink::IntPoint"* nocapture readonly dereferenceable(8), %"class.blink::PropertyTreeState"* nocapture readonly dereferenceable(24), %"class.blink::PropertyTreeState"* nocapture readonly dereferenceable(24), %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8)) unnamed_addr #4 {
  %5 = alloca %"class.blink::GeometryMapper::Translation2DOrMatrix", align 8
  %6 = alloca %"class.blink::FloatPoint", align 4
  %7 = bitcast %"class.blink::GeometryMapper::Translation2DOrMatrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %7) #12
  %8 = bitcast %"class.blink::PropertyTreeState"* %2 to %"class.blink::TransformPaintPropertyNode"**
  %9 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %8, align 8
  %10 = bitcast %"class.blink::PropertyTreeState"* %1 to %"class.blink::TransformPaintPropertyNode"**
  %11 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %10, align 8
  call void @_ZN5blink14GeometryMapper29SourceToDestinationProjectionERKNS_26TransformPaintPropertyNodeES3_(%"class.blink::GeometryMapper::Translation2DOrMatrix"* nonnull sret %5, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %9, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %11) #12
  %12 = bitcast %"class.blink::FloatPoint"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %6, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %0, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sitofp i32 %15 to float
  store float %16, float* %13, align 4
  %17 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %6, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sitofp i32 %19 to float
  store float %20, float* %17, align 4
  %21 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %33, !prof !3

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %5, i64 0, i32 0, i32 0
  %26 = load float, float* %25, align 8
  %27 = fadd float %26, %16
  %28 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %5, i64 0, i32 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = fadd float %29, %20
  %31 = insertelement <2 x float> undef, float %27, i32 0
  %32 = insertelement <2 x float> %31, float %30, i32 1
  br label %36

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = call <2 x float> @_ZNK5blink20TransformationMatrix8MapPointERKNS_10FloatPointE(%"class.blink::TransformationMatrix"* %34, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %6) #12
  br label %36

36:                                               ; preds = %24, %33
  %37 = phi <2 x float> [ %32, %24 ], [ %35, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %7) #12
  %38 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %3, i64 0, i32 0
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %3, i64 0, i32 1
  %41 = load float, float* %40, align 4
  %42 = extractelement <2 x float> %37, i32 0
  %43 = fsub float %42, %39
  %44 = extractelement <2 x float> %37, i32 1
  %45 = fsub float %44, %41
  %46 = call float @llvm.round.f32(float %43) #12
  %47 = fpext float %46 to double
  %48 = fcmp ult double %47, 0x41DFFFFFFFC00000
  br i1 %48, label %49, label %54

49:                                               ; preds = %36
  %50 = fcmp ugt float %46, 0xC1E0000000000000
  br i1 %50, label %51, label %54

51:                                               ; preds = %49
  %52 = fptosi float %46 to i32
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %51, %49, %36
  %55 = phi i64 [ %53, %51 ], [ 2147483647, %36 ], [ 2147483648, %49 ]
  %56 = call float @llvm.round.f32(float %45) #12
  %57 = fpext float %56 to double
  %58 = fcmp ult double %57, 0x41DFFFFFFFC00000
  br i1 %58, label %59, label %65

59:                                               ; preds = %54
  %60 = fcmp ugt float %56, 0xC1E0000000000000
  br i1 %60, label %61, label %65

61:                                               ; preds = %59
  %62 = fptosi float %56 to i32
  %63 = zext i32 %62 to i64
  %64 = shl nuw i64 %63, 32
  br label %65

65:                                               ; preds = %54, %59, %61
  %66 = phi i64 [ %64, %61 ], [ 9223372032559808512, %54 ], [ -9223372036854775808, %59 ]
  %67 = or i64 %66, %55
  ret i64 %67
}

declare <2 x float> @_ZNK5blink20TransformationMatrix8MapPointERKNS_10FloatPointE(%"class.blink::TransformationMatrix"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #10

declare void @_ZN2cc12DrawRecordOpC1E5sk_spIKNS_13PaintOpBufferEE(%"class.cc::DrawRecordOp"*, %class.sk_sp.309*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc13PaintOpBuffer14AnalyzeAddedOpINS_12DrawRecordOpEEEvPKT_(%"class.cc::PaintOpBuffer"*, %"class.cc::DrawRecordOp"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.cc::DrawRecordOp", %"class.cc::DrawRecordOp"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 8
  %5 = tail call i32 @_ZNK2cc12DrawRecordOp14CountSlowPathsEv(%"class.cc::DrawRecordOp"* %1) #12
  %6 = load i32, i32* %4, align 8
  %7 = add nsw i32 %6, %5
  store i32 %7, i32* %4, align 8
  %8 = tail call zeroext i1 @_ZNK2cc12DrawRecordOp13HasNonAAPaintEv(%"class.cc::DrawRecordOp"* %1) #12
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, 1
  %13 = or i8 %12, %9
  %14 = and i8 %11, -2
  %15 = or i8 %13, %14
  store i8 %15, i8* %10, align 4
  %16 = tail call zeroext i1 @_ZNK2cc12DrawRecordOp20HasDiscardableImagesEv(%"class.cc::DrawRecordOp"* %1) #12
  %17 = zext i1 %16 to i8
  %18 = load i8, i8* %10, align 4
  %19 = shl nuw nsw i8 %17, 1
  %20 = and i8 %18, 2
  %21 = or i8 %20, %19
  %22 = and i8 %18, -3
  %23 = or i8 %21, %22
  store i8 %23, i8* %10, align 4
  %24 = tail call i64 @_ZNK2cc12DrawRecordOp19AdditionalBytesUsedEv(%"class.cc::DrawRecordOp"* %1) #12
  %25 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 6
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, %24
  store i64 %27, i64* %25, align 8
  %28 = tail call i64 @_ZNK2cc12DrawRecordOp17AdditionalOpCountEv(%"class.cc::DrawRecordOp"* %1) #12
  %29 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 7
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %28
  store i64 %31, i64* %29, align 8
  %32 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %3) #12
  %33 = zext i1 %32 to i8
  %34 = load i8, i8* %10, align 4
  %35 = shl nuw nsw i8 %33, 2
  %36 = and i8 %34, 4
  %37 = or i8 %36, %35
  %38 = and i8 %34, -5
  %39 = or i8 %37, %38
  store i8 %39, i8* %10, align 4
  %40 = tail call zeroext i1 @_ZNK2cc12DrawRecordOp14HasDrawTextOpsEv(%"class.cc::DrawRecordOp"* %1) #12
  %41 = zext i1 %40 to i8
  %42 = load i8, i8* %10, align 4
  %43 = shl nuw nsw i8 %41, 3
  %44 = and i8 %42, 8
  %45 = or i8 %44, %43
  %46 = and i8 %42, -9
  %47 = or i8 %45, %46
  store i8 %47, i8* %10, align 4
  %48 = tail call zeroext i1 @_ZNK2cc12DrawRecordOp20HasSaveLayerAlphaOpsEv(%"class.cc::DrawRecordOp"* %1) #12
  %49 = zext i1 %48 to i8
  %50 = load i8, i8* %10, align 4
  %51 = shl nuw nsw i8 %49, 4
  %52 = and i8 %50, 16
  %53 = or i8 %52, %51
  %54 = and i8 %50, -17
  %55 = or i8 %53, %54
  store i8 %55, i8* %10, align 4
  %56 = tail call zeroext i1 @_ZNK2cc12DrawRecordOp44HasEffectsPreventingLCDTextForSaveLayerAlphaEv(%"class.cc::DrawRecordOp"* %1) #12
  %57 = zext i1 %56 to i8
  %58 = load i8, i8* %10, align 4
  %59 = shl nuw nsw i8 %57, 5
  %60 = and i8 %58, 32
  %61 = or i8 %60, %59
  %62 = and i8 %58, -33
  %63 = or i8 %61, %62
  store i8 %63, i8* %10, align 4
  ret void
}

declare i32 @_ZNK2cc12DrawRecordOp14CountSlowPathsEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc12DrawRecordOp13HasNonAAPaintEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc12DrawRecordOp20HasDiscardableImagesEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #2

declare i64 @_ZNK2cc12DrawRecordOp19AdditionalBytesUsedEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #2

declare i64 @_ZNK2cc12DrawRecordOp17AdditionalOpCountEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc12DrawRecordOp14HasDrawTextOpsEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc12DrawRecordOp20HasSaveLayerAlphaOpsEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc12DrawRecordOp44HasEffectsPreventingLCDTextForSaveLayerAlphaEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #2

declare void @_ZN2cc15DisplayItemListC1ENS0_9UsageHintE(%"class.cc::DisplayItemList"*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink26RasterInvalidationTracking23UnderInvalidationRecordEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink26RasterInvalidationTracking23UnderInvalidationRecordEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink27RefCountedPropertyTreeState20GetPropertyTreeStateEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink27RefCountedPropertyTreeState20GetPropertyTreeStateEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink27RefCountedPropertyTreeState20GetPropertyTreeStateEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink27RefCountedPropertyTreeState20GetPropertyTreeStateEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blinkL49ConvertPaintedSelectionBoundToLayerSelectionBoundERKNS_21PaintedSelectionBoundERKNS_17PropertyTreeStateES5_RKNS_10FloatPointE: argument 0"}
!16 = distinct !{!16, !"_ZN5blinkL49ConvertPaintedSelectionBoundToLayerSelectionBoundERKNS_21PaintedSelectionBoundERKNS_17PropertyTreeStateES5_RKNS_10FloatPointE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blinkL49ConvertPaintedSelectionBoundToLayerSelectionBoundERKNS_21PaintedSelectionBoundERKNS_17PropertyTreeStateES5_RKNS_10FloatPointE: argument 0"}
!19 = distinct !{!19, !"_ZN5blinkL49ConvertPaintedSelectionBoundToLayerSelectionBoundERKNS_21PaintedSelectionBoundERKNS_17PropertyTreeStateES5_RKNS_10FloatPointE"}
!20 = !{!"branch_weights", i32 1073205, i32 2146410443}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.unroll.disable"}
!23 = distinct !{!23, !22}
