; ModuleID = '../../content/browser/scheduler/responsiveness/calculator.cc'
source_filename = "../../content/browser/scheduler/responsiveness/calculator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.content::responsiveness::Calculator::Jank" = type { %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.content::responsiveness::Calculator" = type { i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.base::Lock", %"class.std::__1::vector", %"class.std::__1::vector", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.content::responsiveness::Calculator::Jank"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::vector"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.2", [4 x i8] }>
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.30", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.40" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS0_IN7content14responsiveness10Calculator4JankENS_9allocatorIS4_EEEENS5_IS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE = comdat any

@_ZTVN7content14responsiveness10CalculatorE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::responsiveness::Calculator"*)* @_ZN7content14responsiveness10CalculatorD2Ev to i8*), i8* bitcast (void (%"class.content::responsiveness::Calculator"*)* @_ZN7content14responsiveness10CalculatorD0Ev to i8*), i8* bitcast (void (%"class.content::responsiveness::Calculator"*, i64, i64, i64)* @_ZN7content14responsiveness10Calculator29TaskOrEventFinishedOnUIThreadEN4base9TimeTicksES3_S3_ to i8*), i8* bitcast (void (%"class.content::responsiveness::Calculator"*, i64, i64, i64)* @_ZN7content14responsiveness10Calculator29TaskOrEventFinishedOnIOThreadEN4base9TimeTicksES3_S3_ to i8*), i8* bitcast (void (%"class.content::responsiveness::Calculator"*, i32, i64, i32)* @_ZN7content14responsiveness10Calculator18EmitResponsivenessENS1_8JankTypeEmNS1_12StartupStageE to i8*), i8* bitcast (void (%"class.content::responsiveness::Calculator"*, i64, i64, i64)* @_ZN7content14responsiveness10Calculator39EmitJankyIntervalsMeasurementTraceEventEN4base9TimeTicksES3_m to i8*), i8* bitcast (void (%"class.content::responsiveness::Calculator"*, i64, i64)* @_ZN7content14responsiveness10Calculator32EmitJankyIntervalsJankTraceEventEN4base9TimeTicksES3_ to i8*)] }, align 8
@.str = private unnamed_addr constant [54 x i8] c"Browser.Responsiveness.JankyIntervalsPerThirtySeconds\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"Browser.Responsiveness.JankyIntervalsPerThirtySeconds2\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"Browser.Responsiveness.JankyIntervalsPerThirtySeconds3\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@_ZN7content14responsiveness12_GLOBAL__N_137kJankyIntervalsPerThirtySeconds3EventE = internal constant [32 x i8] c"JankyIntervalsPerThirtySeconds3\00", align 16
@.str.3 = private unnamed_addr constant [17 x i8] c"amount_of_slices\00", align 1
@_ZN7content14responsiveness12_GLOBAL__N_119kJankyIntervalEventE = internal constant [14 x i8] c"JankyInterval\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@_ZZN7content14responsiveness10Calculator18EmitResponsivenessENS1_8JankTypeEmNS1_12StartupStageEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN7content14responsiveness10Calculator18EmitResponsivenessENS1_8JankTypeEmNS1_12StartupStageEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN7content14responsiveness10Calculator18EmitResponsivenessENS1_8JankTypeEmNS1_12StartupStageEE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN7content14responsiveness10Calculator4JankC1EN4base9TimeTicksES4_ = hidden unnamed_addr alias void (%"struct.content::responsiveness::Calculator::Jank"*, i64, i64), void (%"struct.content::responsiveness::Calculator::Jank"*, i64, i64)* @_ZN7content14responsiveness10Calculator4JankC2EN4base9TimeTicksES4_
@_ZN7content14responsiveness10CalculatorC1Ev = hidden unnamed_addr alias void (%"class.content::responsiveness::Calculator"*), void (%"class.content::responsiveness::Calculator"*)* @_ZN7content14responsiveness10CalculatorC2Ev
@_ZN7content14responsiveness10CalculatorD1Ev = hidden unnamed_addr alias void (%"class.content::responsiveness::Calculator"*), void (%"class.content::responsiveness::Calculator"*)* @_ZN7content14responsiveness10CalculatorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content14responsiveness10Calculator4JankC2EN4base9TimeTicksES4_(%"struct.content::responsiveness::Calculator::Jank"* nocapture, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %2, i64* %5, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness10CalculatorC2Ev(%"class.content::responsiveness::Calculator"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN7content14responsiveness10CalculatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 4, i32 0
  %5 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 52, i1 false)
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %4) #13
  %6 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 5
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 48, i1 false)
  %8 = tail call i64 @_ZN4base9TimeTicks3NowEv() #13
  %9 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 7, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 8, i32 0, i32 0
  store i64 %8, i64* %10, align 8
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness10CalculatorD2Ev(%"class.content::responsiveness::Calculator"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN7content14responsiveness10CalculatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %3, align 8
  %5 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %4 to i64
  %8 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 6, i32 0, i32 1
  %9 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 5, i32 0, i32 0
  %13 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %12, align 8
  %14 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %13 to i64
  %17 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 5, i32 0, i32 1
  %18 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %21) #13
  %22 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %22, align 8
  %24 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %23 to i64
  %27 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 2, i32 0, i32 1
  %28 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %23 to i8*
  tail call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %20, %25
  %31 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %31, align 8
  %33 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %32 to i64
  %36 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 1, i32 0, i32 1
  %37 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %32 to i8*
  tail call void @_ZdlPv(i8* %38) #14
  br label %39

39:                                               ; preds = %30, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness10CalculatorD0Ev(%"class.content::responsiveness::Calculator"*) unnamed_addr #2 align 2 {
  tail call void @_ZN7content14responsiveness10CalculatorD2Ev(%"class.content::responsiveness::Calculator"* %0) #13
  %2 = bitcast %"class.content::responsiveness::Calculator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness10Calculator29TaskOrEventFinishedOnUIThreadEN4base9TimeTicksES3_S3_(%"class.content::responsiveness::Calculator"*, i64, i64, i64) unnamed_addr #2 align 2 {
  %5 = sub nsw i64 %3, %1
  %6 = icmp sgt i64 %5, 99999
  br i1 %6, label %7, label %154

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %9, align 8
  %11 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %11, align 8
  %13 = icmp ult %"struct.content::responsiveness::Calculator::Jank"* %10, %12
  %14 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %12 to i64
  br i1 %13, label %15, label %21

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %10, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %10, i64 0, i32 1, i32 0, i32 0
  store i64 %3, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %10, i64 1
  %19 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %18 to i64
  %20 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %9 to i64*
  store i64 %19, i64* %20, align 8
  br label %79

21:                                               ; preds = %7
  %22 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %10 to i64
  %23 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %9 to i64*
  %24 = bitcast %"class.std::__1::vector"* %8 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %22, %25
  %27 = ashr exact i64 %26, 4
  %28 = add nsw i64 %27, 1
  %29 = icmp ugt i64 %28, 1152921504606846975
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #15
  unreachable

32:                                               ; preds = %21
  %33 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %11 to i64*
  %34 = sub i64 %14, %25
  %35 = ashr exact i64 %34, 4
  %36 = icmp ult i64 %35, 576460752303423487
  br i1 %36, label %37, label %45

37:                                               ; preds = %32
  %38 = ashr exact i64 %34, 3
  %39 = icmp ult i64 %38, %28
  %40 = select i1 %39, i64 %28, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = icmp ugt i64 %40, 1152921504606846975
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  tail call void @abort() #15
  unreachable

45:                                               ; preds = %42, %32
  %46 = phi i64 [ %40, %42 ], [ 1152921504606846975, %32 ]
  %47 = shl i64 %46, 4
  %48 = tail call i8* @_Znwm(i64 %47) #14
  %49 = bitcast i8* %48 to %"struct.content::responsiveness::Calculator::Jank"*
  br label %50

50:                                               ; preds = %45, %37
  %51 = phi i64 [ %46, %45 ], [ 0, %37 ]
  %52 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %49, %45 ], [ null, %37 ]
  %53 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %52, i64 %27
  %54 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %52, i64 %51
  %55 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %54 to i64
  %56 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %53, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %52, i64 %27, i32 1, i32 0, i32 0
  store i64 %3, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %53, i64 1
  %59 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %61 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %60, align 8
  %62 = load i64, i64* %23, align 8
  %63 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 4
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %53, i64 %66
  %68 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %50
  %71 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %67 to i8*
  %72 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 %64, i1 false) #13
  %73 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %60, align 8
  br label %74

74:                                               ; preds = %70, %50
  %75 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %61, %50 ], [ %73, %70 ]
  store i64 %68, i64* %24, align 8
  store i64 %59, i64* %23, align 8
  store i64 %55, i64* %33, align 8
  %76 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #14
  br label %79

79:                                               ; preds = %15, %74, %77
  %80 = sub nsw i64 %3, %2
  %81 = icmp sgt i64 %80, 99999
  br i1 %81, label %82, label %154

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 1
  %84 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 1, i32 0, i32 1
  %85 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %84, align 8
  %86 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %87 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %86, align 8
  %88 = icmp ult %"struct.content::responsiveness::Calculator::Jank"* %85, %87
  %89 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %87 to i64
  br i1 %88, label %90, label %96

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %85, i64 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %85, i64 0, i32 1, i32 0, i32 0
  store i64 %3, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %85, i64 1
  %94 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %93 to i64
  %95 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %84 to i64*
  store i64 %94, i64* %95, align 8
  br label %154

96:                                               ; preds = %82
  %97 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %85 to i64
  %98 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %84 to i64*
  %99 = bitcast %"class.std::__1::vector"* %83 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %97, %100
  %102 = ashr exact i64 %101, 4
  %103 = add nsw i64 %102, 1
  %104 = icmp ugt i64 %103, 1152921504606846975
  br i1 %104, label %105, label %107

105:                                              ; preds = %96
  %106 = bitcast %"class.std::__1::vector"* %83 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %106) #15
  unreachable

107:                                              ; preds = %96
  %108 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %86 to i64*
  %109 = sub i64 %89, %100
  %110 = ashr exact i64 %109, 4
  %111 = icmp ult i64 %110, 576460752303423487
  br i1 %111, label %112, label %120

112:                                              ; preds = %107
  %113 = ashr exact i64 %109, 3
  %114 = icmp ult i64 %113, %103
  %115 = select i1 %114, i64 %103, i64 %113
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %112
  %118 = icmp ugt i64 %115, 1152921504606846975
  br i1 %118, label %119, label %120

119:                                              ; preds = %117
  tail call void @abort() #15
  unreachable

120:                                              ; preds = %117, %107
  %121 = phi i64 [ %115, %117 ], [ 1152921504606846975, %107 ]
  %122 = shl i64 %121, 4
  %123 = tail call i8* @_Znwm(i64 %122) #14
  %124 = bitcast i8* %123 to %"struct.content::responsiveness::Calculator::Jank"*
  br label %125

125:                                              ; preds = %120, %112
  %126 = phi i64 [ %121, %120 ], [ 0, %112 ]
  %127 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %124, %120 ], [ null, %112 ]
  %128 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %127, i64 %102
  %129 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %127, i64 %126
  %130 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %129 to i64
  %131 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %128, i64 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %127, i64 %102, i32 1, i32 0, i32 0
  store i64 %3, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %128, i64 1
  %134 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %133 to i64
  %135 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %83, i64 0, i32 0, i32 0
  %136 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %135, align 8
  %137 = load i64, i64* %98, align 8
  %138 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %136 to i64
  %139 = sub i64 %137, %138
  %140 = ashr exact i64 %139, 4
  %141 = sub nsw i64 0, %140
  %142 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %128, i64 %141
  %143 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %142 to i64
  %144 = icmp sgt i64 %139, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %125
  %146 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %142 to i8*
  %147 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 %139, i1 false) #13
  %148 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %135, align 8
  br label %149

149:                                              ; preds = %145, %125
  %150 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %136, %125 ], [ %148, %145 ]
  store i64 %143, i64* %99, align 8
  store i64 %134, i64* %98, align 8
  store i64 %130, i64* %108, align 8
  %151 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %150, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %149
  %153 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %150 to i8*
  tail call void @_ZdlPv(i8* %153) #14
  br label %154

154:                                              ; preds = %152, %149, %90, %79, %4
  tail call void @_ZN7content14responsiveness10Calculator34CalculateResponsivenessIfNecessaryEN4base9TimeTicksE(%"class.content::responsiveness::Calculator"* %0, i64 %3)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN7content14responsiveness10Calculator35GetQueueAndExecutionJanksOnUIThreadEv(%"class.content::responsiveness::Calculator"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 2
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN7content14responsiveness10Calculator27GetExecutionJanksOnUIThreadEv(%"class.content::responsiveness::Calculator"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 1
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness10Calculator34CalculateResponsivenessIfNecessaryEN4base9TimeTicksE(%"class.content::responsiveness::Calculator"*, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.std::__1::vector.15", align 8
  %5 = alloca %"class.std::__1::vector.15", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"class.std::__1::vector.15", align 8
  %11 = alloca %"class.std::__1::vector.15", align 8
  %12 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 8, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  store i64 %1, i64* %12, align 8
  %14 = sub nsw i64 %1, %13
  %15 = icmp sgt i64 %14, 30000000
  %16 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 7, i32 0, i32 0
  br i1 %15, label %17, label %46

17:                                               ; preds = %2
  store i64 %1, i64* %16, align 8
  %18 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 1
  %19 = bitcast %"class.std::__1::vector"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 1, i32 0, i32 1
  %22 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 2
  %24 = bitcast %"class.std::__1::vector"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 2, i32 0, i32 1
  %27 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 4
  %29 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %28, i64 0, i32 0, i32 0
  %30 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %29) #13
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32, !prof !2

32:                                               ; preds = %17
  %33 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %28, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %33) #13
  br label %34

34:                                               ; preds = %17, %32
  %35 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 5
  %36 = bitcast %"class.std::__1::vector"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 5, i32 0, i32 1
  %39 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 6
  %41 = bitcast %"class.std::__1::vector"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 6, i32 0, i32 1
  %44 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %29) #13
  br label %329

46:                                               ; preds = %2
  %47 = load i64, i64* %16, align 8
  %48 = sub nsw i64 %1, %47
  %49 = icmp slt i64 %48, 30000001
  br i1 %49, label %329, label %50

50:                                               ; preds = %46
  %51 = add nsw i64 %48, -9223372036854775807
  %52 = icmp ult i64 %51, 2
  %53 = urem i64 %48, 30000000
  %54 = select i1 %52, i64 9223372036854775807, i64 %53
  %55 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  %56 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %1, i64* %56, align 8
  %57 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %54) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  %58 = bitcast %"class.std::__1::vector.15"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #13
  %59 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %4, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %4, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #13
  %62 = bitcast %"class.std::__1::vector.15"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #13
  %63 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %5, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %5, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 24, i1 false) #13
  %66 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #13
  %67 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 1
  call void @_ZN7content14responsiveness10Calculator22TakeJanksOlderThanTimeEPNSt3__16vectorINS1_4JankENS2_9allocatorIS4_EEEEN4base9TimeTicksE(%"class.std::__1::vector"* nonnull sret %6, %"class.std::__1::vector"* %67, i64 %57)
  %68 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %60, align 8
  %69 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %61, align 8
  %70 = icmp ult %"class.std::__1::vector"* %68, %69
  br i1 %70, label %71, label %89

71:                                               ; preds = %50
  %72 = bitcast %"class.std::__1::vector"* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #13
  %73 = bitcast %"class.std::__1::vector"* %6 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.std::__1::vector"* %68 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %77 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %68, i64 0, i32 0, i32 1
  %80 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %79 to i64*
  store i64 %78, i64* %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %82 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %68, i64 0, i32 0, i32 2, i32 0, i32 0
  %85 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %84 to i64*
  store i64 %83, i64* %85, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 24, i1 false) #13
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %68, i64 1
  %87 = ptrtoint %"class.std::__1::vector"* %86 to i64
  %88 = bitcast %"class.std::__1::vector"** %60 to i64*
  store i64 %87, i64* %88, align 8
  br label %98

89:                                               ; preds = %50
  call void @_ZNSt3__16vectorINS0_IN7content14responsiveness10Calculator4JankENS_9allocatorIS4_EEEENS5_IS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.15"* nonnull %4, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #13
  %90 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %91 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %90, align 8
  %92 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %91 to i8*
  %95 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %91 to i64
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %97 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %96 to i64*
  store i64 %95, i64* %97, align 8
  call void @_ZdlPv(i8* %94) #14
  br label %98

98:                                               ; preds = %71, %89, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #13
  %99 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #13
  %100 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 2
  call void @_ZN7content14responsiveness10Calculator22TakeJanksOlderThanTimeEPNSt3__16vectorINS1_4JankENS2_9allocatorIS4_EEEEN4base9TimeTicksE(%"class.std::__1::vector"* nonnull sret %7, %"class.std::__1::vector"* %100, i64 %57)
  %101 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %64, align 8
  %102 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %65, align 8
  %103 = icmp ult %"class.std::__1::vector"* %101, %102
  br i1 %103, label %104, label %122

104:                                              ; preds = %98
  %105 = bitcast %"class.std::__1::vector"* %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #13
  %106 = bitcast %"class.std::__1::vector"* %7 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.std::__1::vector"* %101 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %110 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %101, i64 0, i32 0, i32 1
  %113 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %112 to i64*
  store i64 %111, i64* %113, align 8
  %114 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %115 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %101, i64 0, i32 0, i32 2, i32 0, i32 0
  %118 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %117 to i64*
  store i64 %116, i64* %118, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 0, i64 24, i1 false) #13
  %119 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %101, i64 1
  %120 = ptrtoint %"class.std::__1::vector"* %119 to i64
  %121 = bitcast %"class.std::__1::vector"** %64 to i64*
  store i64 %120, i64* %121, align 8
  br label %131

122:                                              ; preds = %98
  call void @_ZNSt3__16vectorINS0_IN7content14responsiveness10Calculator4JankENS_9allocatorIS4_EEEENS5_IS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.15"* nonnull %5, %"class.std::__1::vector"* nonnull dereferenceable(24) %7) #13
  %123 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %124 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %123, align 8
  %125 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %122
  %127 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %124 to i8*
  %128 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %124 to i64
  %129 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %130 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %129 to i64*
  store i64 %128, i64* %130, align 8
  call void @_ZdlPv(i8* %127) #14
  br label %131

131:                                              ; preds = %104, %122, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #13
  %132 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 4
  %133 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %132, i64 0, i32 0, i32 0
  %134 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %133) #13
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %138, label %136, !prof !2

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %132, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %137) #13
  br label %138

138:                                              ; preds = %131, %136
  %139 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #13
  %140 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 5
  call void @_ZN7content14responsiveness10Calculator22TakeJanksOlderThanTimeEPNSt3__16vectorINS1_4JankENS2_9allocatorIS4_EEEEN4base9TimeTicksE(%"class.std::__1::vector"* nonnull sret %8, %"class.std::__1::vector"* %140, i64 %57)
  %141 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %60, align 8
  %142 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %61, align 8
  %143 = icmp ult %"class.std::__1::vector"* %141, %142
  br i1 %143, label %144, label %162

144:                                              ; preds = %138
  %145 = bitcast %"class.std::__1::vector"* %141 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 24, i1 false) #13
  %146 = bitcast %"class.std::__1::vector"* %8 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.std::__1::vector"* %141 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %150 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %141, i64 0, i32 0, i32 1
  %153 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %152 to i64*
  store i64 %151, i64* %153, align 8
  %154 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %155 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %141, i64 0, i32 0, i32 2, i32 0, i32 0
  %158 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %157 to i64*
  store i64 %156, i64* %158, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 24, i1 false) #13
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %141, i64 1
  %160 = ptrtoint %"class.std::__1::vector"* %159 to i64
  %161 = bitcast %"class.std::__1::vector"** %60 to i64*
  store i64 %160, i64* %161, align 8
  br label %171

162:                                              ; preds = %138
  call void @_ZNSt3__16vectorINS0_IN7content14responsiveness10Calculator4JankENS_9allocatorIS4_EEEENS5_IS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.15"* nonnull %4, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #13
  %163 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %164 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %163, align 8
  %165 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %164, null
  br i1 %165, label %171, label %166

166:                                              ; preds = %162
  %167 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %164 to i8*
  %168 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %164 to i64
  %169 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %170 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %169 to i64*
  store i64 %168, i64* %170, align 8
  call void @_ZdlPv(i8* %167) #14
  br label %171

171:                                              ; preds = %144, %162, %166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #13
  %172 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #13
  %173 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 6
  call void @_ZN7content14responsiveness10Calculator22TakeJanksOlderThanTimeEPNSt3__16vectorINS1_4JankENS2_9allocatorIS4_EEEEN4base9TimeTicksE(%"class.std::__1::vector"* nonnull sret %9, %"class.std::__1::vector"* %173, i64 %57)
  %174 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %64, align 8
  %175 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %65, align 8
  %176 = icmp ult %"class.std::__1::vector"* %174, %175
  br i1 %176, label %177, label %195

177:                                              ; preds = %171
  %178 = bitcast %"class.std::__1::vector"* %174 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 24, i1 false) #13
  %179 = bitcast %"class.std::__1::vector"* %9 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.std::__1::vector"* %174 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %183 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %174, i64 0, i32 0, i32 1
  %186 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %185 to i64*
  store i64 %184, i64* %186, align 8
  %187 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %188 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %174, i64 0, i32 0, i32 2, i32 0, i32 0
  %191 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %190 to i64*
  store i64 %189, i64* %191, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 0, i64 24, i1 false) #13
  %192 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %174, i64 1
  %193 = ptrtoint %"class.std::__1::vector"* %192 to i64
  %194 = bitcast %"class.std::__1::vector"** %64 to i64*
  store i64 %193, i64* %194, align 8
  br label %204

195:                                              ; preds = %171
  call void @_ZNSt3__16vectorINS0_IN7content14responsiveness10Calculator4JankENS_9allocatorIS4_EEEENS5_IS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.15"* nonnull %5, %"class.std::__1::vector"* nonnull dereferenceable(24) %9) #13
  %196 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %197 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %196, align 8
  %198 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %197, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %195
  %200 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %197 to i8*
  %201 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %197 to i64
  %202 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %203 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %202 to i64*
  store i64 %201, i64* %203, align 8
  call void @_ZdlPv(i8* %200) #14
  br label %204

204:                                              ; preds = %177, %195, %199
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #13
  %205 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %133) #13
  %206 = bitcast %"class.std::__1::vector.15"* %4 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.std::__1::vector.15"* %10 to i64*
  store i64 %207, i64* %208, align 8
  %209 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %10, i64 0, i32 0, i32 1
  %210 = bitcast %"class.std::__1::vector"** %60 to <2 x i64>*
  %211 = load <2 x i64>, <2 x i64>* %210, align 8
  %212 = bitcast %"class.std::__1::vector"** %209 to <2 x i64>*
  store <2 x i64> %211, <2 x i64>* %212, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #13
  %213 = load i64, i64* %16, align 8
  call void @_ZN7content14responsiveness10Calculator23CalculateResponsivenessENS1_8JankTypeENSt3__16vectorINS4_INS1_4JankENS3_9allocatorIS5_EEEENS6_IS8_EEEEN4base9TimeTicksESC_(%"class.content::responsiveness::Calculator"* %0, i32 0, %"class.std::__1::vector.15"* nonnull %10, i64 %213, i64 %57)
  %214 = inttoptr i64 %207 to %"class.std::__1::vector"*
  %215 = icmp eq i64 %207, 0
  %216 = extractelement <2 x i64> %211, i32 0
  %217 = inttoptr i64 %216 to %"class.std::__1::vector"*
  br i1 %215, label %239, label %218

218:                                              ; preds = %204
  %219 = inttoptr i64 %207 to i8*
  %220 = icmp eq %"class.std::__1::vector"* %217, %214
  br i1 %220, label %237, label %221

221:                                              ; preds = %218, %232
  %222 = phi %"class.std::__1::vector"* [ %223, %232 ], [ %217, %218 ]
  %223 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %222, i64 -1
  %224 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %223, i64 0, i32 0, i32 0
  %225 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %224, align 8
  %226 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %225, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %221
  %228 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %225 to i64
  %229 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %222, i64 -1, i32 0, i32 1
  %230 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %229 to i64*
  store i64 %228, i64* %230, align 8
  %231 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %225 to i8*
  call void @_ZdlPv(i8* %231) #14
  br label %232

232:                                              ; preds = %227, %221
  %233 = icmp eq %"class.std::__1::vector"* %223, %214
  br i1 %233, label %234, label %221

234:                                              ; preds = %232
  %235 = bitcast %"class.std::__1::vector.15"* %10 to i8**
  %236 = load i8*, i8** %235, align 8
  br label %237

237:                                              ; preds = %234, %218
  %238 = phi i8* [ %236, %234 ], [ %219, %218 ]
  store %"class.std::__1::vector"* %214, %"class.std::__1::vector"** %209, align 8
  call void @_ZdlPv(i8* %238) #14
  br label %239

239:                                              ; preds = %204, %237
  %240 = bitcast %"class.std::__1::vector.15"* %5 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.std::__1::vector.15"* %11 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %11, i64 0, i32 0, i32 1
  %244 = bitcast %"class.std::__1::vector"** %64 to <2 x i64>*
  %245 = load <2 x i64>, <2 x i64>* %244, align 8
  %246 = bitcast %"class.std::__1::vector"** %243 to <2 x i64>*
  store <2 x i64> %245, <2 x i64>* %246, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 24, i1 false) #13
  %247 = load i64, i64* %16, align 8
  call void @_ZN7content14responsiveness10Calculator23CalculateResponsivenessENS1_8JankTypeENSt3__16vectorINS4_INS1_4JankENS3_9allocatorIS5_EEEENS6_IS8_EEEEN4base9TimeTicksESC_(%"class.content::responsiveness::Calculator"* %0, i32 1, %"class.std::__1::vector.15"* nonnull %11, i64 %247, i64 %57)
  %248 = inttoptr i64 %241 to %"class.std::__1::vector"*
  %249 = icmp eq i64 %241, 0
  %250 = extractelement <2 x i64> %245, i32 0
  %251 = inttoptr i64 %250 to %"class.std::__1::vector"*
  br i1 %249, label %273, label %252

252:                                              ; preds = %239
  %253 = inttoptr i64 %241 to i8*
  %254 = icmp eq %"class.std::__1::vector"* %251, %248
  br i1 %254, label %271, label %255

255:                                              ; preds = %252, %266
  %256 = phi %"class.std::__1::vector"* [ %257, %266 ], [ %251, %252 ]
  %257 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %256, i64 -1
  %258 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %257, i64 0, i32 0, i32 0
  %259 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %258, align 8
  %260 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %259, null
  br i1 %260, label %266, label %261

261:                                              ; preds = %255
  %262 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %259 to i64
  %263 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %256, i64 -1, i32 0, i32 1
  %264 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %263 to i64*
  store i64 %262, i64* %264, align 8
  %265 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %259 to i8*
  call void @_ZdlPv(i8* %265) #14
  br label %266

266:                                              ; preds = %261, %255
  %267 = icmp eq %"class.std::__1::vector"* %257, %248
  br i1 %267, label %268, label %255

268:                                              ; preds = %266
  %269 = bitcast %"class.std::__1::vector.15"* %11 to i8**
  %270 = load i8*, i8** %269, align 8
  br label %271

271:                                              ; preds = %268, %252
  %272 = phi i8* [ %270, %268 ], [ %253, %252 ]
  store %"class.std::__1::vector"* %248, %"class.std::__1::vector"** %243, align 8
  call void @_ZdlPv(i8* %272) #14
  br label %273

273:                                              ; preds = %239, %271
  %274 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 3
  %275 = load i32, i32* %274, align 8
  %276 = icmp eq i32 %275, 1
  br i1 %276, label %277, label %278

277:                                              ; preds = %273
  store i32 2, i32* %274, align 8
  br label %278

278:                                              ; preds = %277, %273
  store i64 %57, i64* %16, align 8
  %279 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %63, align 8
  %280 = icmp eq %"class.std::__1::vector"* %279, null
  br i1 %280, label %303, label %281

281:                                              ; preds = %278
  %282 = bitcast %"class.std::__1::vector"* %279 to i8*
  %283 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %64, align 8
  %284 = icmp eq %"class.std::__1::vector"* %283, %279
  br i1 %284, label %301, label %285

285:                                              ; preds = %281, %296
  %286 = phi %"class.std::__1::vector"* [ %287, %296 ], [ %283, %281 ]
  %287 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %286, i64 -1
  %288 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %287, i64 0, i32 0, i32 0
  %289 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %288, align 8
  %290 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %289, null
  br i1 %290, label %296, label %291

291:                                              ; preds = %285
  %292 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %289 to i64
  %293 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %286, i64 -1, i32 0, i32 1
  %294 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %293 to i64*
  store i64 %292, i64* %294, align 8
  %295 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %289 to i8*
  call void @_ZdlPv(i8* %295) #14
  br label %296

296:                                              ; preds = %291, %285
  %297 = icmp eq %"class.std::__1::vector"* %287, %279
  br i1 %297, label %298, label %285

298:                                              ; preds = %296
  %299 = bitcast %"class.std::__1::vector.15"* %5 to i8**
  %300 = load i8*, i8** %299, align 8
  br label %301

301:                                              ; preds = %298, %281
  %302 = phi i8* [ %300, %298 ], [ %282, %281 ]
  store %"class.std::__1::vector"* %279, %"class.std::__1::vector"** %64, align 8
  call void @_ZdlPv(i8* %302) #14
  br label %303

303:                                              ; preds = %278, %301
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #13
  %304 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %59, align 8
  %305 = icmp eq %"class.std::__1::vector"* %304, null
  br i1 %305, label %328, label %306

306:                                              ; preds = %303
  %307 = bitcast %"class.std::__1::vector"* %304 to i8*
  %308 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %60, align 8
  %309 = icmp eq %"class.std::__1::vector"* %308, %304
  br i1 %309, label %326, label %310

310:                                              ; preds = %306, %321
  %311 = phi %"class.std::__1::vector"* [ %312, %321 ], [ %308, %306 ]
  %312 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %311, i64 -1
  %313 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %312, i64 0, i32 0, i32 0
  %314 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %313, align 8
  %315 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %314, null
  br i1 %315, label %321, label %316

316:                                              ; preds = %310
  %317 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %314 to i64
  %318 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %311, i64 -1, i32 0, i32 1
  %319 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %318 to i64*
  store i64 %317, i64* %319, align 8
  %320 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %314 to i8*
  call void @_ZdlPv(i8* %320) #14
  br label %321

321:                                              ; preds = %316, %310
  %322 = icmp eq %"class.std::__1::vector"* %312, %304
  br i1 %322, label %323, label %310

323:                                              ; preds = %321
  %324 = bitcast %"class.std::__1::vector.15"* %4 to i8**
  %325 = load i8*, i8** %324, align 8
  br label %326

326:                                              ; preds = %323, %306
  %327 = phi i8* [ %325, %323 ], [ %307, %306 ]
  store %"class.std::__1::vector"* %304, %"class.std::__1::vector"** %60, align 8
  call void @_ZdlPv(i8* %327) #14
  br label %328

328:                                              ; preds = %303, %326
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #13
  br label %329

329:                                              ; preds = %328, %46, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness10Calculator29TaskOrEventFinishedOnIOThreadEN4base9TimeTicksES3_S3_(%"class.content::responsiveness::Calculator"*, i64, i64, i64) unnamed_addr #2 align 2 {
  %5 = sub nsw i64 %3, %1
  %6 = icmp sgt i64 %5, 99999
  br i1 %6, label %7, label %163

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %8, i64 0, i32 0, i32 0
  %10 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %9) #13
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12, !prof !2

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %8, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %13) #13
  br label %14

14:                                               ; preds = %7, %12
  %15 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 6, i32 0, i32 1
  %17 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %16, align 8
  %18 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %19 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %18, align 8
  %20 = icmp ult %"struct.content::responsiveness::Calculator::Jank"* %17, %19
  %21 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %19 to i64
  br i1 %20, label %22, label %28

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %17, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %17, i64 0, i32 1, i32 0, i32 0
  store i64 %3, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %17, i64 1
  %26 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %25 to i64
  %27 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %16 to i64*
  store i64 %26, i64* %27, align 8
  br label %86

28:                                               ; preds = %14
  %29 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %17 to i64
  %30 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %16 to i64*
  %31 = bitcast %"class.std::__1::vector"* %15 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %29, %32
  %34 = ashr exact i64 %33, 4
  %35 = add nsw i64 %34, 1
  %36 = icmp ugt i64 %35, 1152921504606846975
  br i1 %36, label %37, label %39

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::vector"* %15 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #15
  unreachable

39:                                               ; preds = %28
  %40 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %18 to i64*
  %41 = sub i64 %21, %32
  %42 = ashr exact i64 %41, 4
  %43 = icmp ult i64 %42, 576460752303423487
  br i1 %43, label %44, label %52

44:                                               ; preds = %39
  %45 = ashr exact i64 %41, 3
  %46 = icmp ult i64 %45, %35
  %47 = select i1 %46, i64 %35, i64 %45
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %44
  %50 = icmp ugt i64 %47, 1152921504606846975
  br i1 %50, label %51, label %52

51:                                               ; preds = %49
  tail call void @abort() #15
  unreachable

52:                                               ; preds = %49, %39
  %53 = phi i64 [ %47, %49 ], [ 1152921504606846975, %39 ]
  %54 = shl i64 %53, 4
  %55 = tail call i8* @_Znwm(i64 %54) #14
  %56 = bitcast i8* %55 to %"struct.content::responsiveness::Calculator::Jank"*
  br label %57

57:                                               ; preds = %52, %44
  %58 = phi i64 [ %53, %52 ], [ 0, %44 ]
  %59 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %56, %52 ], [ null, %44 ]
  %60 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %59, i64 %34
  %61 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %59, i64 %58
  %62 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %61 to i64
  %63 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %60, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %63, align 8
  %64 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %59, i64 %34, i32 1, i32 0, i32 0
  store i64 %3, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %60, i64 1
  %66 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 0
  %68 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %67, align 8
  %69 = load i64, i64* %30, align 8
  %70 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %68 to i64
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 4
  %73 = sub nsw i64 0, %72
  %74 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %60, i64 %73
  %75 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %74 to i64
  %76 = icmp sgt i64 %71, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %57
  %78 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %74 to i8*
  %79 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 %71, i1 false) #13
  %80 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %67, align 8
  br label %81

81:                                               ; preds = %77, %57
  %82 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %68, %57 ], [ %80, %77 ]
  store i64 %75, i64* %31, align 8
  store i64 %66, i64* %30, align 8
  store i64 %62, i64* %40, align 8
  %83 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %82 to i8*
  tail call void @_ZdlPv(i8* %85) #14
  br label %86

86:                                               ; preds = %22, %81, %84
  %87 = sub nsw i64 %3, %2
  %88 = icmp sgt i64 %87, 99999
  br i1 %88, label %89, label %161

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 5
  %91 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 5, i32 0, i32 1
  %92 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %91, align 8
  %93 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %94 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %93, align 8
  %95 = icmp ult %"struct.content::responsiveness::Calculator::Jank"* %92, %94
  %96 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %94 to i64
  br i1 %95, label %97, label %103

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %92, i64 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %92, i64 0, i32 1, i32 0, i32 0
  store i64 %3, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %92, i64 1
  %101 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %100 to i64
  %102 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %91 to i64*
  store i64 %101, i64* %102, align 8
  br label %161

103:                                              ; preds = %89
  %104 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %92 to i64
  %105 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %91 to i64*
  %106 = bitcast %"class.std::__1::vector"* %90 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %104, %107
  %109 = ashr exact i64 %108, 4
  %110 = add nsw i64 %109, 1
  %111 = icmp ugt i64 %110, 1152921504606846975
  br i1 %111, label %112, label %114

112:                                              ; preds = %103
  %113 = bitcast %"class.std::__1::vector"* %90 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %113) #15
  unreachable

114:                                              ; preds = %103
  %115 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %93 to i64*
  %116 = sub i64 %96, %107
  %117 = ashr exact i64 %116, 4
  %118 = icmp ult i64 %117, 576460752303423487
  br i1 %118, label %119, label %127

119:                                              ; preds = %114
  %120 = ashr exact i64 %116, 3
  %121 = icmp ult i64 %120, %110
  %122 = select i1 %121, i64 %110, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 1152921504606846975
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  tail call void @abort() #15
  unreachable

127:                                              ; preds = %124, %114
  %128 = phi i64 [ %122, %124 ], [ 1152921504606846975, %114 ]
  %129 = shl i64 %128, 4
  %130 = tail call i8* @_Znwm(i64 %129) #14
  %131 = bitcast i8* %130 to %"struct.content::responsiveness::Calculator::Jank"*
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %134, i64 %109
  %136 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %134, i64 %133
  %137 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %136 to i64
  %138 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %135, i64 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %138, align 8
  %139 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %134, i64 %109, i32 1, i32 0, i32 0
  store i64 %3, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %135, i64 1
  %141 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %140 to i64
  %142 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %90, i64 0, i32 0, i32 0
  %143 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %142, align 8
  %144 = load i64, i64* %105, align 8
  %145 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %143 to i64
  %146 = sub i64 %144, %145
  %147 = ashr exact i64 %146, 4
  %148 = sub nsw i64 0, %147
  %149 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %135, i64 %148
  %150 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %149 to i64
  %151 = icmp sgt i64 %146, 0
  br i1 %151, label %152, label %156

152:                                              ; preds = %132
  %153 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %149 to i8*
  %154 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 %146, i1 false) #13
  %155 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %142, align 8
  br label %156

156:                                              ; preds = %152, %132
  %157 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %143, %132 ], [ %155, %152 ]
  store i64 %150, i64* %106, align 8
  store i64 %141, i64* %105, align 8
  store i64 %137, i64* %115, align 8
  %158 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %157, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %156
  %160 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %157 to i8*
  tail call void @_ZdlPv(i8* %160) #14
  br label %161

161:                                              ; preds = %159, %156, %97, %86
  %162 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %9) #13
  br label %163

163:                                              ; preds = %161, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content14responsiveness10Calculator11OnFirstIdleEv(%"class.content::responsiveness::Calculator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 3
  store i32 1, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness10Calculator18EmitResponsivenessENS1_8JankTypeEmNS1_12StartupStageE(%"class.content::responsiveness::Calculator"* nocapture readnone, i32, i64, i32) unnamed_addr #2 align 2 {
  switch i32 %1, label %47 [
    i32 0, label %5
    i32 1, label %19
  ]

5:                                                ; preds = %4
  %6 = load atomic i64, i64* @_ZZN7content14responsiveness10Calculator18EmitResponsivenessENS1_8JankTypeEmNS1_12StartupStageEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %7 = inttoptr i64 %6 to %"class.base::HistogramBase"*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #13
  %11 = ptrtoint %"class.base::HistogramBase"* %10 to i64
  store atomic i64 %11, i64* @_ZZN7content14responsiveness10Calculator18EmitResponsivenessENS1_8JankTypeEmNS1_12StartupStageEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %12

12:                                               ; preds = %5, %9
  %13 = phi %"class.base::HistogramBase"* [ %7, %5 ], [ %10, %9 ]
  %14 = trunc i64 %2 to i32
  %15 = bitcast %"class.base::HistogramBase"* %13 to void (%"class.base::HistogramBase"*, i32)***
  %16 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %16, i64 6
  %18 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %17, align 8
  tail call void %18(%"class.base::HistogramBase"* %13, i32 %14) #13
  br label %47

19:                                               ; preds = %4
  %20 = load atomic i64, i64* @_ZZN7content14responsiveness10Calculator18EmitResponsivenessENS1_8JankTypeEmNS1_12StartupStageEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %21 = inttoptr i64 %20 to %"class.base::HistogramBase"*
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %19
  %24 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 300, i32 50, i32 1) #13
  %25 = ptrtoint %"class.base::HistogramBase"* %24 to i64
  store atomic i64 %25, i64* @_ZZN7content14responsiveness10Calculator18EmitResponsivenessENS1_8JankTypeEmNS1_12StartupStageEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %26

26:                                               ; preds = %19, %23
  %27 = phi %"class.base::HistogramBase"* [ %21, %19 ], [ %24, %23 ]
  %28 = trunc i64 %2 to i32
  %29 = bitcast %"class.base::HistogramBase"* %27 to void (%"class.base::HistogramBase"*, i32)***
  %30 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %30, i64 6
  %32 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %31, align 8
  tail call void %32(%"class.base::HistogramBase"* %27, i32 %28) #13
  %33 = icmp eq i32 %3, 2
  br i1 %33, label %34, label %47

34:                                               ; preds = %26
  %35 = load atomic i64, i64* @_ZZN7content14responsiveness10Calculator18EmitResponsivenessENS1_8JankTypeEmNS1_12StartupStageEE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %36 = inttoptr i64 %35 to %"class.base::HistogramBase"*
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %34
  %39 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 300, i32 50, i32 1) #13
  %40 = ptrtoint %"class.base::HistogramBase"* %39 to i64
  store atomic i64 %40, i64* @_ZZN7content14responsiveness10Calculator18EmitResponsivenessENS1_8JankTypeEmNS1_12StartupStageEE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %41

41:                                               ; preds = %34, %38
  %42 = phi %"class.base::HistogramBase"* [ %36, %34 ], [ %39, %38 ]
  %43 = bitcast %"class.base::HistogramBase"* %42 to void (%"class.base::HistogramBase"*, i32)***
  %44 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %44, i64 6
  %46 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %45, align 8
  tail call void %46(%"class.base::HistogramBase"* %42, i32 %28) #13
  br label %47

47:                                               ; preds = %26, %41, %4, %12
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness10Calculator29EmitResponsivenessTraceEventsENS1_8JankTypeEN4base9TimeTicksES4_RKNSt3__13setIiNS5_4lessIiEENS5_9allocatorIiEEEE(%"class.content::responsiveness::Calculator"*, i32, i64, i64, %"class.std::__1::set"* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  %11 = icmp ne i32 %1, 1
  %12 = or i1 %11, %10
  br i1 %12, label %112, label %13

13:                                               ; preds = %5
  %14 = bitcast %"class.content::responsiveness::Calculator"* %0 to void (%"class.content::responsiveness::Calculator"*, i64, i64, i64)***
  %15 = load void (%"class.content::responsiveness::Calculator"*, i64, i64, i64)**, void (%"class.content::responsiveness::Calculator"*, i64, i64, i64)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.content::responsiveness::Calculator"*, i64, i64, i64)*, void (%"class.content::responsiveness::Calculator"*, i64, i64, i64)** %15, i64 5
  %17 = load void (%"class.content::responsiveness::Calculator"*, i64, i64, i64)*, void (%"class.content::responsiveness::Calculator"*, i64, i64, i64)** %16, align 8
  tail call void %17(%"class.content::responsiveness::Calculator"* %0, i64 %2, i64 %3, i64 %9) #13
  %18 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = icmp eq %"class.std::__1::__tree_end_node"* %19, %20
  br i1 %21, label %112, label %22

22:                                               ; preds = %13
  %23 = add i64 %2, -9223372036854775807
  %24 = icmp ugt i64 %23, 1
  %25 = bitcast %"class.logging::CheckError"* %6 to i8*
  %26 = bitcast %"class.logging::CheckError"* %7 to i8*
  %27 = bitcast %"class.content::responsiveness::Calculator"* %0 to void (%"class.content::responsiveness::Calculator"*, i64, i64)***
  %28 = icmp eq i64 %2, -9223372036854775808
  %29 = or i1 %24, %28
  %30 = icmp eq i64 %2, -9223372036854775808
  %31 = or i1 %24, %30
  br label %32

32:                                               ; preds = %22, %106
  %33 = phi %"class.std::__1::__tree_end_node"* [ %19, %22 ], [ %77, %106 ]
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node"*
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  br label %37

37:                                               ; preds = %71, %32
  %38 = phi %"class.std::__1::__tree_end_node"* [ %33, %32 ], [ %68, %71 ]
  %39 = phi i32 [ %36, %32 ], [ %69, %71 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %51

43:                                               ; preds = %37
  %44 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node_base"*
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 2
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_end_node"**
  %47 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 0, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, %44
  br i1 %50, label %67, label %58

51:                                               ; preds = %37, %51
  %52 = phi %"class.std::__1::__tree_node_base"* [ %54, %51 ], [ %41, %37 ]
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %52, i64 0, i32 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, null
  br i1 %55, label %56, label %51

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %52, i64 0, i32 0
  br label %67

58:                                               ; preds = %43, %58
  %59 = phi %"class.std::__1::__tree_end_node"** [ %62, %58 ], [ %46, %43 ]
  %60 = bitcast %"class.std::__1::__tree_end_node"** %59 to %"class.std::__1::__tree_node_base"**
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %61, i64 0, i32 2
  %63 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 0, i32 0
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, %61
  br i1 %66, label %67, label %58

67:                                               ; preds = %58, %43, %56
  %68 = phi %"class.std::__1::__tree_end_node"* [ %57, %56 ], [ %47, %43 ], [ %63, %58 ]
  %69 = add nsw i32 %39, 1
  %70 = icmp eq %"class.std::__1::__tree_end_node"* %68, %20
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"class.std::__1::__tree_node"*
  %73 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, %69
  br i1 %75, label %37, label %76

76:                                               ; preds = %67, %71
  %77 = phi %"class.std::__1::__tree_end_node"* [ %20, %67 ], [ %68, %71 ]
  %78 = sext i32 %36 to i64
  %79 = mul nsw i64 %78, 100000
  %80 = icmp eq i64 %79, -9223372036854775808
  br i1 %80, label %88, label %81

81:                                               ; preds = %76
  %82 = icmp slt i32 %36, 0
  %83 = select i1 %82, i64 -9223372036854775808, i64 9223372036854775807
  %84 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %2, i64 %79) #13
  %85 = extractvalue { i64, i1 } %84, 1
  %86 = extractvalue { i64, i1 } %84, 0
  %87 = select i1 %85, i64 %83, i64 %86, !prof !3
  br label %91

88:                                               ; preds = %76
  br i1 %29, label %91, label %89

89:                                               ; preds = %88
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #13
  %90 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  br label %91

91:                                               ; preds = %81, %88, %89
  %92 = phi i64 [ %87, %81 ], [ -9223372036854775808, %88 ], [ -9223372036854775808, %89 ]
  %93 = sext i32 %69 to i64
  %94 = mul nsw i64 %93, 100000
  %95 = icmp eq i64 %94, -9223372036854775808
  br i1 %95, label %103, label %96

96:                                               ; preds = %91
  %97 = icmp slt i32 %69, 0
  %98 = select i1 %97, i64 -9223372036854775808, i64 9223372036854775807
  %99 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %2, i64 %94) #13
  %100 = extractvalue { i64, i1 } %99, 1
  %101 = extractvalue { i64, i1 } %99, 0
  %102 = select i1 %100, i64 %98, i64 %101, !prof !3
  br label %106

103:                                              ; preds = %91
  br i1 %31, label %106, label %104

104:                                              ; preds = %103
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #13
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br label %106

106:                                              ; preds = %96, %103, %104
  %107 = phi i64 [ %102, %96 ], [ -9223372036854775808, %103 ], [ -9223372036854775808, %104 ]
  %108 = load void (%"class.content::responsiveness::Calculator"*, i64, i64)**, void (%"class.content::responsiveness::Calculator"*, i64, i64)*** %27, align 8
  %109 = getelementptr inbounds void (%"class.content::responsiveness::Calculator"*, i64, i64)*, void (%"class.content::responsiveness::Calculator"*, i64, i64)** %108, i64 6
  %110 = load void (%"class.content::responsiveness::Calculator"*, i64, i64)*, void (%"class.content::responsiveness::Calculator"*, i64, i64)** %109, align 8
  call void %110(%"class.content::responsiveness::Calculator"* %0, i64 %92, i64 %107) #13
  %111 = icmp eq %"class.std::__1::__tree_end_node"* %77, %20
  br i1 %111, label %112, label %32

112:                                              ; preds = %106, %13, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness10Calculator39EmitJankyIntervalsMeasurementTraceEventEN4base9TimeTicksES3_m(%"class.content::responsiveness::Calculator"*, i64, i64, i64) unnamed_addr #2 align 2 {
  %5 = alloca %"class.base::trace_event::TraceArguments", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  %10 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 73, i32 0), align 16
  %11 = and i8 %10, 25
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %65, label %13, !prof !2

13:                                               ; preds = %4
  %14 = ptrtoint %"class.content::responsiveness::Calculator"* %0 to i64
  %15 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #13
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 1, i64 0
  store i8 2, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 2, i64 0
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 3, i64 0, i32 0
  store i64 %3, i64* %19, align 8
  %20 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 98, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 73, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN7content14responsiveness12_GLOBAL__N_137kJankyIntervalsPerThirtySeconds3EventE, i64 0, i64 0), i8* null, i64 %14, i64 0, i32 %15, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %5, i32 2064) #13
  %21 = load i8, i8* %16, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %57, label %23

23:                                               ; preds = %13, %52
  %24 = phi i64 [ %53, %52 ], [ 0, %13 ]
  %25 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 1, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %39

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 3, i64 %24
  %30 = bitcast %"union.base::trace_event::TraceValue"* %29 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %31 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %30, align 8
  %32 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %31, null
  br i1 %32, label %52, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %31 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %35 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %35, i64 1
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %36, align 8
  call void %37(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %31) #13
  %38 = load i8, i8* %25, align 1
  br label %39

39:                                               ; preds = %33, %23
  %40 = phi i8 [ %26, %23 ], [ %38, %33 ]
  %41 = icmp eq i8 %40, 9
  br i1 %41, label %42, label %52

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 3, i64 %24
  %44 = bitcast %"union.base::trace_event::TraceValue"* %43 to %"class.protozero::HeapBuffered"**
  %45 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %44, align 8
  %46 = icmp eq %"class.protozero::HeapBuffered"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %45, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %48) #13
  %49 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %45, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %49) #13
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %45, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %50) #13
  %51 = bitcast %"class.protozero::HeapBuffered"* %45 to i8*
  call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %47, %42, %39, %28
  %53 = add nuw nsw i64 %24, 1
  %54 = load i8, i8* %16, align 8
  %55 = zext i8 %54 to i64
  %56 = icmp ult i64 %53, %55
  br i1 %56, label %23, label %57

57:                                               ; preds = %52, %13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #13
  %58 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 73, i32 0), align 16
  %59 = and i8 %58, 25
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %65, label %61, !prof !2

61:                                               ; preds = %57
  %62 = ptrtoint %"class.content::responsiveness::Calculator"* %0 to i64
  %63 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %64 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 101, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 73, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN7content14responsiveness12_GLOBAL__N_137kJankyIntervalsPerThirtySeconds3EventE, i64 0, i64 0), i8* null, i64 %62, i64 0, i32 %63, %"class.base::TimeTicks"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TraceArguments"* null, i32 2064) #13
  br label %65

65:                                               ; preds = %4, %57, %61
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness10Calculator32EmitJankyIntervalsJankTraceEventEN4base9TimeTicksES3_(%"class.content::responsiveness::Calculator"*, i64, i64) unnamed_addr #2 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  store i64 %2, i64* %7, align 8
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 73, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %22, label %11, !prof !2

11:                                               ; preds = %3
  %12 = ptrtoint %"class.content::responsiveness::Calculator"* %0 to i64
  %13 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 98, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 73, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN7content14responsiveness12_GLOBAL__N_119kJankyIntervalEventE, i64 0, i64 0), i8* null, i64 %12, i64 0, i32 %13, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 2064) #13
  %15 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 73, i32 0), align 16
  %16 = and i8 %15, 25
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18, !prof !2

18:                                               ; preds = %11
  %19 = ptrtoint %"class.content::responsiveness::Calculator"* %0 to i64
  %20 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 101, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 73, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN7content14responsiveness12_GLOBAL__N_119kJankyIntervalEventE, i64 0, i64 0), i8* null, i64 %19, i64 0, i32 %20, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 2064) #13
  br label %22

22:                                               ; preds = %3, %11, %18
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN7content14responsiveness10Calculator22GetLastCalculationTimeEv(%"class.content::responsiveness::Calculator"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness10Calculator22TakeJanksOlderThanTimeEPNSt3__16vectorINS1_4JankENS2_9allocatorIS4_EEEEN4base9TimeTicksE(%"class.std::__1::vector"* noalias nocapture sret, %"class.std::__1::vector"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::vector", align 16
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %6 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %7, align 8
  %9 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %6, %8
  br i1 %9, label %38, label %10

10:                                               ; preds = %3, %29
  %11 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %23, %29 ], [ %8, %3 ]
  %12 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %36, %29 ], [ %6, %3 ]
  br label %13

13:                                               ; preds = %18, %10
  %14 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %12, %10 ], [ %19, %18 ]
  %15 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp slt i64 %16, %2
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %14, i64 1
  %20 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %19, %11
  br i1 %20, label %38, label %13

21:                                               ; preds = %13, %25
  %22 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %23, %25 ], [ %11, %13 ]
  %23 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %22, i64 -1
  %24 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %14, %23
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %23, i64 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %27, %2
  br i1 %28, label %29, label %21

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %23, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %14, i64 0, i32 1, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %14 to i8*
  %34 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 16, i1 false) #13
  store i64 %16, i64* %30, align 8
  %35 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %22, i64 -1, i32 1, i32 0, i32 0
  store i64 %32, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %14, i64 1
  %37 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %36, %23
  br i1 %37, label %38, label %10

38:                                               ; preds = %29, %18, %21, %3
  %39 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %6, %3 ], [ %14, %21 ], [ %11, %18 ], [ %23, %29 ]
  %40 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %5, align 8
  %41 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %40 to i64
  %42 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %39, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  %44 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #13
  br label %166

45:                                               ; preds = %38
  %46 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #13
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %46, i8 0, i64 24, i1 false) #13
  %49 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %39 to i64
  %50 = sub i64 %49, %41
  %51 = ashr exact i64 %50, 4
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %110, label %53

53:                                               ; preds = %45
  %54 = icmp ugt i64 %51, 1152921504606846975
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %56) #15
  unreachable

57:                                               ; preds = %53
  %58 = tail call i8* @_Znwm(i64 %50) #14
  %59 = bitcast i8* %58 to %"struct.content::responsiveness::Calculator::Jank"*
  %60 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %47 to i8**
  store i8* %58, i8** %60, align 8
  %61 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %58, i8** %61, align 16
  %62 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %59, i64 %51
  store %"struct.content::responsiveness::Calculator::Jank"* %62, %"struct.content::responsiveness::Calculator::Jank"** %48, align 16
  %63 = getelementptr %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %39, i64 -1, i32 0, i32 0, i32 0
  %64 = ptrtoint i64* %63 to i64
  %65 = sub i64 %64, %41
  %66 = lshr i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %57, %70
  %71 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %77, %70 ], [ %59, %57 ]
  %72 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %76, %70 ], [ %40, %57 ]
  %73 = phi i64 [ %78, %70 ], [ %68, %57 ]
  %74 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %71 to i8*
  %75 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 16, i1 false) #13
  %76 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %72, i64 1
  %77 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %71, i64 1
  %78 = add i64 %73, -1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %70, !llvm.loop !4

80:                                               ; preds = %70, %57
  %81 = phi %"struct.content::responsiveness::Calculator::Jank"* [ undef, %57 ], [ %77, %70 ]
  %82 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %59, %57 ], [ %77, %70 ]
  %83 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %40, %57 ], [ %76, %70 ]
  %84 = icmp ult i64 %65, 48
  br i1 %84, label %105, label %85

85:                                               ; preds = %80, %85
  %86 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %103, %85 ], [ %82, %80 ]
  %87 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %102, %85 ], [ %83, %80 ]
  %88 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %86 to i8*
  %89 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 16, i1 false) #13
  %90 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %87, i64 1
  %91 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %86, i64 1
  %92 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %91 to i8*
  %93 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 16, i1 false) #13
  %94 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %87, i64 2
  %95 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %86, i64 2
  %96 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %95 to i8*
  %97 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 16, i1 false) #13
  %98 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %87, i64 3
  %99 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %86, i64 3
  %100 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %99 to i8*
  %101 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #13
  %102 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %87, i64 4
  %103 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %86, i64 4
  %104 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %102, %39
  br i1 %104, label %105, label %85

105:                                              ; preds = %85, %80
  %106 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %81, %80 ], [ %103, %85 ]
  %107 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %47 to i64*
  %108 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %106 to i64
  store i64 %108, i64* %107, align 8
  %109 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %5, align 8
  br label %110

110:                                              ; preds = %45, %105
  %111 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %40, %45 ], [ %109, %105 ]
  %112 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %7, align 8
  %113 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %111, %112
  br i1 %113, label %142, label %114

114:                                              ; preds = %110, %133
  %115 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %127, %133 ], [ %112, %110 ]
  %116 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %140, %133 ], [ %111, %110 ]
  br label %117

117:                                              ; preds = %122, %114
  %118 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %116, %114 ], [ %123, %122 ]
  %119 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %118, i64 0, i32 1, i32 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = icmp slt i64 %120, %2
  br i1 %121, label %122, label %125

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %118, i64 1
  %124 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %123, %115
  br i1 %124, label %142, label %117

125:                                              ; preds = %117, %129
  %126 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %127, %129 ], [ %115, %117 ]
  %127 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %126, i64 -1
  %128 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %118, %127
  br i1 %128, label %142, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %126, i64 -1, i32 1, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = icmp slt i64 %131, %2
  br i1 %132, label %133, label %125

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %126, i64 -1, i32 1, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %118, i64 0, i32 0, i32 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %118 to i8*
  %138 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %127 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 16, i1 false) #13
  %139 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %127, i64 0, i32 0, i32 0, i32 0
  store i64 %136, i64* %139, align 8
  store i64 %120, i64* %134, align 8
  %140 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %118, i64 1
  %141 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %140, %127
  br i1 %141, label %142, label %114

142:                                              ; preds = %133, %122, %125, %110
  %143 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %111, %110 ], [ %118, %125 ], [ %115, %122 ], [ %127, %133 ]
  %144 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %5, align 8
  %145 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %144, %143
  br i1 %145, label %158, label %146

146:                                              ; preds = %142
  %147 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %143 to i64
  %148 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %7 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = sub i64 %149, %147
  %151 = ashr exact i64 %150, 4
  %152 = icmp eq i64 %150, 0
  br i1 %152, label %156, label %153

153:                                              ; preds = %146
  %154 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %144 to i8*
  %155 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %143 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %155, i64 %150, i1 false) #13
  br label %156

156:                                              ; preds = %153, %146
  %157 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %144, i64 %151
  store %"struct.content::responsiveness::Calculator::Jank"* %157, %"struct.content::responsiveness::Calculator::Jank"** %7, align 8
  br label %158

158:                                              ; preds = %156, %142
  %159 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 16
  %161 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %161, align 8
  %162 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %48 to i64*
  %163 = load i64, i64* %162, align 16
  %164 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %165 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %164 to i64*
  store i64 %163, i64* %165, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #13
  br label %166

166:                                              ; preds = %158, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content14responsiveness10Calculator23CalculateResponsivenessENS1_8JankTypeENSt3__16vectorINS4_INS1_4JankENS3_9allocatorIS5_EEEENS6_IS8_EEEEN4base9TimeTicksESC_(%"class.content::responsiveness::Calculator"*, i32, %"class.std::__1::vector.15"* nocapture readonly, i64, i64) local_unnamed_addr #2 align 2 {
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__1::set", align 8
  %8 = icmp slt i64 %3, %4
  br i1 %8, label %9, label %161

9:                                                ; preds = %5
  %10 = bitcast %"class.std::__1::set"* %7 to i8*
  %11 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_node_base"** %12 to i8*
  %16 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %2, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %2, i64 0, i32 0, i32 1
  %18 = bitcast i64* %6 to i8*
  %19 = bitcast i64* %6 to %"class.base::TimeTicks"*
  %20 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node"**
  %21 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 0, i32 0
  %22 = bitcast %"class.std::__1::set"* %7 to i64*
  %23 = getelementptr inbounds %"class.content::responsiveness::Calculator", %"class.content::responsiveness::Calculator"* %0, i64 0, i32 3
  %24 = bitcast %"class.content::responsiveness::Calculator"* %0 to void (%"class.content::responsiveness::Calculator"*, i32, i64, i32)***
  %25 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0
  br label %26

26:                                               ; preds = %9, %158
  %27 = phi i64 [ %3, %9 ], [ %31, %158 ]
  %28 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %27, i64 30000000) #13
  %29 = extractvalue { i64, i1 } %28, 1
  %30 = extractvalue { i64, i1 } %28, 0
  %31 = select i1 %29, i64 9223372036854775807, i64 %30, !prof !3
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %11, align 8
  %32 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %16, align 8
  %33 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %17, align 8
  %34 = icmp eq %"class.std::__1::vector"* %32, %33
  br i1 %34, label %35, label %44

35:                                               ; preds = %52, %26
  %36 = phi i64 [ 0, %26 ], [ %53, %52 ]
  %37 = load i32, i32* %23, align 8
  %38 = load void (%"class.content::responsiveness::Calculator"*, i32, i64, i32)**, void (%"class.content::responsiveness::Calculator"*, i32, i64, i32)*** %24, align 8
  %39 = getelementptr inbounds void (%"class.content::responsiveness::Calculator"*, i32, i64, i32)*, void (%"class.content::responsiveness::Calculator"*, i32, i64, i32)** %38, i64 4
  %40 = load void (%"class.content::responsiveness::Calculator"*, i32, i64, i32)*, void (%"class.content::responsiveness::Calculator"*, i32, i64, i32)** %39, align 8
  call void %40(%"class.content::responsiveness::Calculator"* %0, i32 %1, i64 %36, i32 %37) #13
  %41 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 73, i32 0), align 16
  %42 = and i8 %41, 9
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %158, label %154

44:                                               ; preds = %26, %52
  %45 = phi i64 [ %53, %52 ], [ 0, %26 ]
  %46 = phi %"class.std::__1::vector"* [ %54, %52 ], [ %32, %26 ]
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %46, i64 0, i32 0, i32 0
  %48 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %46, i64 0, i32 0, i32 1
  %50 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %49, align 8
  %51 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %48, %50
  br i1 %51, label %52, label %56

52:                                               ; preds = %150, %44
  %53 = phi i64 [ %45, %44 ], [ %151, %150 ]
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %46, i64 1
  %55 = icmp eq %"class.std::__1::vector"* %54, %33
  br i1 %55, label %35, label %44

56:                                               ; preds = %44, %150
  %57 = phi i64 [ %151, %150 ], [ %45, %44 ]
  %58 = phi %"struct.content::responsiveness::Calculator::Jank"* [ %152, %150 ], [ %48, %44 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  store i64 %31, i64* %6, align 8
  %59 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %60, i64 100000) #13
  %62 = extractvalue { i64, i1 } %61, 1
  %63 = extractvalue { i64, i1 } %61, 0
  %64 = select i1 %62, i64 9223372036854775807, i64 %63, !prof !3
  %65 = icmp slt i64 %64, %27
  %66 = select i1 %65, i64 %27, i64 %64
  %67 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %58, i64 0, i32 1
  %68 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %67, i64 0, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = icmp sgt i64 %69, %31
  %71 = select i1 %70, %"class.base::TimeTicks"* %19, %"class.base::TimeTicks"* %67
  %72 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %71, i64 0, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp slt i64 %66, %73
  br i1 %74, label %75, label %150

75:                                               ; preds = %56, %143
  %76 = phi i64 [ %144, %143 ], [ %57, %56 ]
  %77 = phi i64 [ %148, %143 ], [ %66, %56 ]
  %78 = sub nsw i64 %77, %27
  %79 = add i64 %78, -9223372036854775807
  %80 = icmp ult i64 %79, 2
  br i1 %80, label %83, label %81

81:                                               ; preds = %75
  %82 = sdiv i64 %78, 100000
  br label %86

83:                                               ; preds = %75
  %84 = icmp sgt i64 %78, -1
  %85 = select i1 %84, i64 9223372036854775807, i64 -9223372036854775808
  br label %86

86:                                               ; preds = %83, %81
  %87 = phi i64 [ %85, %83 ], [ %82, %81 ]
  %88 = trunc i64 %87 to i32
  %89 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %90 = icmp eq %"class.std::__1::__tree_node"* %89, null
  br i1 %90, label %117, label %91

91:                                               ; preds = %86, %113
  %92 = phi %"class.std::__1::__tree_node"* [ %116, %113 ], [ %89, %86 ]
  %93 = phi %"class.std::__1::__tree_node_base"** [ %115, %113 ], [ %12, %86 ]
  %94 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp sgt i32 %95, %88
  br i1 %96, label %97, label %103

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %101, label %113

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 0
  br label %117

103:                                              ; preds = %91
  %104 = icmp slt i32 %95, %88
  br i1 %104, label %105, label %111

105:                                              ; preds = %103
  %106 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 1
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, null
  br i1 %108, label %109, label %113

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 0
  br label %117

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 0
  br label %117

113:                                              ; preds = %105, %97
  %114 = phi %"class.std::__1::__tree_node_base"* [ %99, %97 ], [ %107, %105 ]
  %115 = phi %"class.std::__1::__tree_node_base"** [ %98, %97 ], [ %106, %105 ]
  %116 = bitcast %"class.std::__1::__tree_node_base"* %114 to %"class.std::__1::__tree_node"*
  br label %91

117:                                              ; preds = %111, %109, %101, %86
  %118 = phi %"class.std::__1::__tree_end_node"* [ %102, %101 ], [ %110, %109 ], [ %112, %111 ], [ %14, %86 ]
  %119 = phi %"class.std::__1::__tree_node_base"** [ %98, %101 ], [ %106, %109 ], [ %93, %111 ], [ %21, %86 ]
  %120 = bitcast %"class.std::__1::__tree_node_base"** %119 to %"class.std::__1::__tree_node"**
  %121 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node"* %121, null
  br i1 %122, label %123, label %143

123:                                              ; preds = %117
  %124 = call i8* @_Znwm(i64 32) #14, !noalias !6
  %125 = getelementptr inbounds i8, i8* %124, i64 28
  %126 = bitcast i8* %125 to i32*
  store i32 %88, i32* %126, align 4, !noalias !6
  %127 = bitcast i8* %124 to %"class.std::__1::__tree_node_base"*
  %128 = getelementptr inbounds i8, i8* %124, i64 16
  %129 = bitcast i8* %128 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %118, %"class.std::__1::__tree_end_node"** %129, align 8
  %130 = bitcast %"class.std::__1::__tree_node_base"** %119 to i8**
  store i8* %124, i8** %130, align 8
  %131 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %131, i64 0, i32 0
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = icmp eq %"class.std::__1::__tree_node_base"* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %123
  %136 = ptrtoint %"class.std::__1::__tree_node_base"* %133 to i64
  store i64 %136, i64* %22, align 8
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  br label %138

138:                                              ; preds = %135, %123
  %139 = phi %"class.std::__1::__tree_node_base"* [ %127, %123 ], [ %137, %135 ]
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %140, %"class.std::__1::__tree_node_base"* %139) #13
  %141 = load i64, i64* %13, align 8
  %142 = add i64 %141, 1
  store i64 %142, i64* %13, align 8
  br label %143

143:                                              ; preds = %138, %117
  %144 = phi i64 [ %142, %138 ], [ %76, %117 ]
  %145 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %77, i64 100000) #13
  %146 = extractvalue { i64, i1 } %145, 1
  %147 = extractvalue { i64, i1 } %145, 0
  %148 = select i1 %146, i64 9223372036854775807, i64 %147, !prof !3
  %149 = icmp slt i64 %148, %73
  br i1 %149, label %75, label %150

150:                                              ; preds = %143, %56
  %151 = phi i64 [ %57, %56 ], [ %144, %143 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %152 = getelementptr inbounds %"struct.content::responsiveness::Calculator::Jank", %"struct.content::responsiveness::Calculator::Jank"* %58, i64 1
  %153 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %152, %50
  br i1 %153, label %52, label %56

154:                                              ; preds = %35
  %155 = load i32, i32* %23, align 8
  %156 = icmp eq i32 %155, 2
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZN7content14responsiveness10Calculator29EmitResponsivenessTraceEventsENS1_8JankTypeEN4base9TimeTicksES4_RKNSt3__13setIiNS5_4lessIiEENS5_9allocatorIiEEEE(%"class.content::responsiveness::Calculator"* %0, i32 %1, i64 %27, i64 %31, %"class.std::__1::set"* nonnull dereferenceable(24) %7)
  br label %158

158:                                              ; preds = %35, %157, %154
  %159 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* nonnull %25, %"class.std::__1::__tree_node"* %159) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  %160 = icmp slt i64 %31, %4
  br i1 %160, label %26, label %161

161:                                              ; preds = %158, %5
  ret void
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #7

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #8

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #13
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !3
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #13
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %26, i8* %27) #13
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #8

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !9
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !9
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !9
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IN7content14responsiveness10Calculator4JankENS_9allocatorIS4_EEEENS5_IS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.15"*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::vector"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.15"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::vector"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.std::__1::vector"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::vector"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::vector"* %35 to i64
  %37 = bitcast %"class.std::__1::vector"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #13
  %38 = bitcast %"class.std::__1::vector"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %42 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 %9, i32 0, i32 1
  %45 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 %9, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #13
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %34, i64 1
  %53 = ptrtoint %"class.std::__1::vector"* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %54, align 8
  %56 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  %57 = icmp eq %"class.std::__1::vector"* %56, %55
  br i1 %57, label %58, label %60

58:                                               ; preds = %31
  %59 = ptrtoint %"class.std::__1::vector"* %55 to i64
  br label %84

60:                                               ; preds = %31, %60
  %61 = phi %"class.std::__1::vector"* [ %63, %60 ], [ %34, %31 ]
  %62 = phi %"class.std::__1::vector"* [ %64, %60 ], [ %56, %31 ]
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %61, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %62, i64 -1
  %65 = bitcast %"class.std::__1::vector"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #13
  %66 = bitcast %"class.std::__1::vector"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %62, i64 -1, i32 0, i32 1
  %70 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %61, i64 -1, i32 0, i32 1
  %73 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %62, i64 -1, i32 0, i32 2, i32 0, i32 0
  %75 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %61, i64 -1, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast %"class.std::__1::vector"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #13
  %80 = icmp eq %"class.std::__1::vector"* %64, %55
  br i1 %80, label %81, label %60

81:                                               ; preds = %60
  %82 = load i64, i64* %6, align 8
  %83 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  br label %84

84:                                               ; preds = %58, %81
  %85 = phi %"class.std::__1::vector"* [ %55, %58 ], [ %83, %81 ]
  %86 = phi %"class.std::__1::vector"* [ %34, %58 ], [ %63, %81 ]
  %87 = phi i64 [ %59, %58 ], [ %82, %81 ]
  %88 = ptrtoint %"class.std::__1::vector"* %86 to i64
  store i64 %88, i64* %6, align 8
  store i64 %53, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %89 = inttoptr i64 %87 to %"class.std::__1::vector"*
  %90 = icmp eq %"class.std::__1::vector"* %85, %89
  br i1 %90, label %104, label %91

91:                                               ; preds = %84, %102
  %92 = phi %"class.std::__1::vector"* [ %93, %102 ], [ %85, %84 ]
  %93 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %92, i64 -1
  %94 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %93, i64 0, i32 0, i32 0
  %95 = load %"struct.content::responsiveness::Calculator::Jank"*, %"struct.content::responsiveness::Calculator::Jank"** %94, align 8
  %96 = icmp eq %"struct.content::responsiveness::Calculator::Jank"* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %91
  %98 = ptrtoint %"struct.content::responsiveness::Calculator::Jank"* %95 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %92, i64 -1, i32 0, i32 1
  %100 = bitcast %"struct.content::responsiveness::Calculator::Jank"** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast %"struct.content::responsiveness::Calculator::Jank"* %95 to i8*
  tail call void @_ZdlPv(i8* %101) #14
  br label %102

102:                                              ; preds = %97, %91
  %103 = icmp eq %"class.std::__1::vector"* %93, %89
  br i1 %103, label %104, label %91

104:                                              ; preds = %102, %84
  %105 = icmp eq i64 %87, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %87 to i8*
  tail call void @_ZdlPv(i8* %107) #14
  br label %108

108:                                              ; preds = %104, %106
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!9 = !{i8 0, i8 2}
