; ModuleID = '../../third_party/libgav1/src/src/dsp/motion_vector_search.cc'
source_filename = "../../third_party/libgav1/src/src/dsp/motion_vector_search.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.libgav1::dsp::Dsp" = type { void (i8*, i8*, i32, i32, i8*, i64)*, void (i8*, i64, i8*, i32*)*, [2 x [3 x void (i16*, i64, i32, i32, i32, i32, i32, i8*, i64)*]], [19 x void (i8*, i64, [32 x i16]*, i32)*], [19 x [3 x void ([32 x i16]*, i32, i32, i8*, i64)*]], [2 x [2 x [2 x [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i8*, i64)*]]]], [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64)*], void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i64, i8*, i8*, i32, i32, i32, i32, i1, i1)*, void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i8*, i8, i8, i32, i32, i8*, i64)*, %"struct.libgav1::dsp::FilmGrainFuncs", void (i8*, i64, i8*, i8*, i8, i32, i32)*, [3 x void (i8*, i8*, i64, i8*, i64, i32, i32)*], void (i8*, i32, i32)*, void (i8*, i32)*, [19 x [10 x void (i8*, i64, i8*, i8*)*]], [4 x [5 x [2 x void (i8, i8, i32, i8*, i32, i32, i8*)*]]], [4 x [2 x void (i8*, i64, i32, i32, i32)*]], [2 x void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)*], [3 x [2 x void (i8*, i8*, i64, i8*, i64, i32, i32, i8*, i64)*]], void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*], [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*], [2 x void (i8*, i64, i32, i32, i8*, i64)*], void (i32, i32, i32, i8*)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, [6 x [6 x [2 x void (i8*, i8*, i8*, i64)*]]] }
%"struct.libgav1::dsp::FilmGrainFuncs" = type { [3 x void (%"struct.libgav1::FilmGrainParams"*, i8*)*], [2 x [4 x void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)*]], [2 x void (i8*, i32, i32, i32, i32, i32, i8*)*], void (i8*, i32, i32, i32, i32, i8*)*, void (i32, i8*, i8*, i8*)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, [2 x void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*] }
%"struct.libgav1::FilmGrainParams" = type { i8, i8, i8, i8, i8, i8, i8, i8, [14 x i8], [14 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], i8, i8, [24 x i8], [25 x i8], [25 x i8], i8, i16, i32, i32, i8, i8, i16, i8, i8, i16 }
%"struct.libgav1::RestorationUnitInfo" = type { i8, %"struct.libgav1::SgrProjInfo", [16 x i8], %"struct.libgav1::WienerInfo" }
%"struct.libgav1::SgrProjInfo" = type { i32, [2 x i32] }
%"struct.libgav1::WienerInfo" = type { [2 x i16], [28 x i8], [2 x [4 x i16]], [16 x i8] }
%"union.libgav1::RestorationBuffer" = type { %"struct.libgav1::SgrBuffer", [5024 x i8] }
%"struct.libgav1::SgrBuffer" = type { [1152 x i16], [1440 x i16], [1152 x i32], [1440 x i32], [1024 x i16], [768 x i16], [512 x i16], [1024 x i32], [768 x i32], [512 x i32], [288 x i8], [288 x i32] }
%"struct.libgav1::ReferenceInfo" = type { %"struct.std::__1::array", %"struct.std::__1::array.0", %"struct.std::__1::array.0", %"struct.std::__1::array.1", %"struct.std::__1::array.2", %"class.libgav1::Array2D", %"class.libgav1::Array2D.4" }
%"struct.std::__1::array" = type { [8 x i8] }
%"struct.std::__1::array.0" = type { [8 x i8] }
%"struct.std::__1::array.1" = type { [8 x i8] }
%"struct.std::__1::array.2" = type { [8 x i16] }
%"class.libgav1::Array2D" = type { %"class.std::__1::unique_ptr", i64, i64, %"class.libgav1::Array2DView" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.libgav1::Array2DView" = type { i32, i32, i8* }
%"class.libgav1::Array2D.4" = type { %"class.std::__1::unique_ptr.5", i64, i64, %"class.libgav1::Array2DView.11" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.libgav1::MotionVector"* }
%"struct.libgav1::MotionVector" = type { %union.anon }
%union.anon = type { i32 }
%"class.libgav1::Array2DView.11" = type { i32, i32, %"struct.libgav1::MotionVector"* }
%"struct.libgav1::TemporalMotionField" = type { %"class.libgav1::Array2D.4", %"class.libgav1::Array2D.12" }
%"class.libgav1::Array2D.12" = type { %"class.std::__1::unique_ptr.13", i64, i64, %"class.libgav1::Array2DView.19" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%"class.libgav1::Array2DView.19" = type { i32, i32, i8* }
%"union.libgav1::CompoundMotionVector" = type { i64 }

@_ZN7libgav127kProjectionMvDivisionLookupE = external local_unnamed_addr constant [32 x i16], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav13dsp24MotionVectorSearchInit_CEv() local_unnamed_addr #0 {
  %1 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32 8) #3
  %2 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 22, i64 0
  %3 = bitcast void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)** %2 to <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*>*
  store <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*> <void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_134MvProjectionCompoundLowPrecision_CEPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE, void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_134MvProjectionCompoundForceInteger_CEPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE>, <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*>* %3, align 8
  %4 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 22, i64 2
  store void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_135MvProjectionCompoundHighPrecision_CEPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE, void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)** %4, align 8
  %5 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 23, i64 0
  %6 = bitcast void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)** %5 to <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*>*
  store <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*> <void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_132MvProjectionSingleLowPrecision_CEPKNS_12MotionVectorEPKaiiPS2_, void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_132MvProjectionSingleForceInteger_CEPKNS_12MotionVectorEPKaiiPS2_>, <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*>* %6, align 8
  %7 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 23, i64 2
  store void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_133MvProjectionSingleHighPrecision_CEPKNS_12MotionVectorEPKaiiPS2_, void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)** %7, align 8
  %8 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32 10) #3
  %9 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %8, i64 0, i32 22, i64 0
  %10 = bitcast void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)** %9 to <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*>*
  store <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*> <void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_134MvProjectionCompoundLowPrecision_CEPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE, void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_134MvProjectionCompoundForceInteger_CEPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE>, <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*>* %10, align 8
  %11 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %8, i64 0, i32 22, i64 2
  store void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_135MvProjectionCompoundHighPrecision_CEPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE, void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)** %11, align 8
  %12 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %8, i64 0, i32 23, i64 0
  %13 = bitcast void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)** %12 to <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*>*
  store <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*> <void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_132MvProjectionSingleLowPrecision_CEPKNS_12MotionVectorEPKaiiPS2_, void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_132MvProjectionSingleForceInteger_CEPKNS_12MotionVectorEPKaiiPS2_>, <2 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*>* %13, align 8
  %14 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %8, i64 0, i32 23, i64 2
  store void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)* @_ZN7libgav13dsp12_GLOBAL__N_133MvProjectionSingleHighPrecision_CEPKNS_12MotionVectorEPKaiiPS2_, void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)** %14, align 8
  ret void
}

declare %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_134MvProjectionCompoundLowPrecision_CEPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE(%"struct.libgav1::MotionVector"* nocapture readonly, i8* nocapture readonly, i32* nocapture readonly, i32, %"union.libgav1::CompoundMotionVector"*) #0 {
  %6 = load i32, i32* %2, align 4
  %7 = getelementptr inbounds i32, i32* %2, i64 1
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %3 to i64
  %10 = icmp eq i32 %6, 0
  %11 = icmp eq i32 %8, 0
  br label %12

12:                                               ; preds = %103, %5
  %13 = phi i64 [ %104, %103 ], [ 0, %5 ]
  %14 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %4, i64 %13
  %15 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %14, i64 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %0, i64 %13
  %17 = getelementptr inbounds i8, i8* %1, i64 %13
  %18 = bitcast %"union.libgav1::CompoundMotionVector"* %14 to [2 x %"struct.libgav1::MotionVector"]*
  %19 = bitcast %"struct.libgav1::MotionVector"* %16 to [2 x i16]*
  %20 = bitcast %"struct.libgav1::MotionVector"* %16 to i16*
  %21 = getelementptr inbounds [2 x i16], [2 x i16]* %19, i64 0, i64 1
  br i1 %10, label %61, label %22

22:                                               ; preds = %12
  %23 = load i8, i8* %17, align 1
  %24 = sext i8 %23 to i64
  %25 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %24
  %26 = load i16, i16* %25, align 2
  %27 = sext i16 %26 to i32
  %28 = mul i32 %6, %27
  %29 = load i16, i16* %20, align 2
  %30 = sext i16 %29 to i32
  %31 = mul i32 %28, %30
  %32 = ashr i32 %31, 31
  %33 = add i32 %31, 8192
  %34 = add i32 %33, %32
  %35 = ashr i32 %34, 14
  %36 = icmp slt i32 %35, 16383
  %37 = select i1 %36, i32 %35, i32 16383
  %38 = icmp sgt i32 %37, -16383
  %39 = select i1 %38, i32 %37, i32 -16383
  %40 = trunc i32 %39 to i16
  %41 = bitcast %"union.libgav1::CompoundMotionVector"* %14 to i16*
  store i16 %40, i16* %41, align 2
  %42 = load i16, i16* %21, align 2
  %43 = sext i16 %42 to i32
  %44 = mul i32 %28, %43
  %45 = ashr i32 %44, 31
  %46 = add i32 %44, 8192
  %47 = add i32 %46, %45
  %48 = ashr i32 %47, 14
  %49 = icmp slt i32 %48, 16383
  %50 = select i1 %49, i32 %48, i32 16383
  %51 = icmp sgt i32 %50, -16383
  %52 = select i1 %51, i32 %50, i32 -16383
  %53 = trunc i32 %52 to i16
  %54 = ashr i16 %40, 15
  %55 = sub nsw i16 %40, %54
  %56 = and i16 %55, -2
  store i16 %56, i16* %41, align 2
  %57 = getelementptr inbounds i16, i16* %41, i64 1
  %58 = ashr i16 %53, 15
  %59 = sub nsw i16 %53, %58
  %60 = and i16 %59, -2
  store i16 %60, i16* %57, align 2
  br label %61

61:                                               ; preds = %22, %12
  br i1 %11, label %103, label %63

62:                                               ; preds = %103
  ret void

63:                                               ; preds = %61
  %64 = load i8, i8* %17, align 1
  %65 = sext i8 %64 to i64
  %66 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = sext i16 %67 to i32
  %69 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %18, i64 0, i64 1
  %70 = mul i32 %8, %68
  %71 = load i16, i16* %20, align 2
  %72 = sext i16 %71 to i32
  %73 = mul i32 %70, %72
  %74 = ashr i32 %73, 31
  %75 = add i32 %73, 8192
  %76 = add i32 %75, %74
  %77 = ashr i32 %76, 14
  %78 = icmp slt i32 %77, 16383
  %79 = select i1 %78, i32 %77, i32 16383
  %80 = icmp sgt i32 %79, -16383
  %81 = select i1 %80, i32 %79, i32 -16383
  %82 = trunc i32 %81 to i16
  %83 = bitcast %"struct.libgav1::MotionVector"* %69 to i16*
  store i16 %82, i16* %83, align 2
  %84 = load i16, i16* %21, align 2
  %85 = sext i16 %84 to i32
  %86 = mul i32 %70, %85
  %87 = ashr i32 %86, 31
  %88 = add i32 %86, 8192
  %89 = add i32 %88, %87
  %90 = ashr i32 %89, 14
  %91 = icmp slt i32 %90, 16383
  %92 = select i1 %91, i32 %90, i32 16383
  %93 = icmp sgt i32 %92, -16383
  %94 = select i1 %93, i32 %92, i32 -16383
  %95 = trunc i32 %94 to i16
  %96 = ashr i16 %82, 15
  %97 = sub nsw i16 %82, %96
  %98 = and i16 %97, -2
  store i16 %98, i16* %83, align 2
  %99 = getelementptr inbounds i16, i16* %83, i64 1
  %100 = ashr i16 %95, 15
  %101 = sub nsw i16 %95, %100
  %102 = and i16 %101, -2
  store i16 %102, i16* %99, align 2
  br label %103

103:                                              ; preds = %63, %61
  %104 = add nuw nsw i64 %13, 1
  %105 = icmp slt i64 %104, %9
  br i1 %105, label %12, label %62
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_134MvProjectionCompoundForceInteger_CEPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE(%"struct.libgav1::MotionVector"* nocapture readonly, i8* nocapture readonly, i32* nocapture readonly, i32, %"union.libgav1::CompoundMotionVector"*) #0 {
  %6 = load i32, i32* %2, align 4
  %7 = getelementptr inbounds i32, i32* %2, i64 1
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %3 to i64
  %10 = icmp eq i32 %6, 0
  %11 = icmp eq i32 %8, 0
  br label %12

12:                                               ; preds = %107, %5
  %13 = phi i64 [ %108, %107 ], [ 0, %5 ]
  %14 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %4, i64 %13
  %15 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %14, i64 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %0, i64 %13
  %17 = getelementptr inbounds i8, i8* %1, i64 %13
  %18 = bitcast %"union.libgav1::CompoundMotionVector"* %14 to [2 x %"struct.libgav1::MotionVector"]*
  %19 = bitcast %"struct.libgav1::MotionVector"* %16 to [2 x i16]*
  %20 = bitcast %"struct.libgav1::MotionVector"* %16 to i16*
  %21 = getelementptr inbounds [2 x i16], [2 x i16]* %19, i64 0, i64 1
  br i1 %10, label %63, label %22

22:                                               ; preds = %12
  %23 = load i8, i8* %17, align 1
  %24 = sext i8 %23 to i64
  %25 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %24
  %26 = load i16, i16* %25, align 2
  %27 = sext i16 %26 to i32
  %28 = mul i32 %6, %27
  %29 = load i16, i16* %20, align 2
  %30 = sext i16 %29 to i32
  %31 = mul i32 %28, %30
  %32 = ashr i32 %31, 31
  %33 = add i32 %31, 8192
  %34 = add i32 %33, %32
  %35 = ashr i32 %34, 14
  %36 = icmp slt i32 %35, 16383
  %37 = select i1 %36, i32 %35, i32 16383
  %38 = icmp sgt i32 %37, -16383
  %39 = select i1 %38, i32 %37, i32 -16383
  %40 = trunc i32 %39 to i16
  %41 = bitcast %"union.libgav1::CompoundMotionVector"* %14 to i16*
  store i16 %40, i16* %41, align 2
  %42 = load i16, i16* %21, align 2
  %43 = sext i16 %42 to i32
  %44 = mul i32 %28, %43
  %45 = ashr i32 %44, 31
  %46 = add i32 %44, 8192
  %47 = add i32 %46, %45
  %48 = ashr i32 %47, 14
  %49 = icmp slt i32 %48, 16383
  %50 = select i1 %49, i32 %48, i32 16383
  %51 = icmp sgt i32 %50, -16383
  %52 = select i1 %51, i32 %50, i32 -16383
  %53 = trunc i32 %52 to i16
  %54 = add nsw i16 %40, 3
  %55 = lshr i16 %40, 15
  %56 = add nsw i16 %54, %55
  %57 = and i16 %56, -8
  store i16 %57, i16* %41, align 2
  %58 = getelementptr inbounds i16, i16* %41, i64 1
  %59 = add nsw i16 %53, 3
  %60 = lshr i16 %53, 15
  %61 = add nsw i16 %59, %60
  %62 = and i16 %61, -8
  store i16 %62, i16* %58, align 2
  br label %63

63:                                               ; preds = %22, %12
  br i1 %11, label %107, label %65

64:                                               ; preds = %107
  ret void

65:                                               ; preds = %63
  %66 = load i8, i8* %17, align 1
  %67 = sext i8 %66 to i64
  %68 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %67
  %69 = load i16, i16* %68, align 2
  %70 = sext i16 %69 to i32
  %71 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %18, i64 0, i64 1
  %72 = mul i32 %8, %70
  %73 = load i16, i16* %20, align 2
  %74 = sext i16 %73 to i32
  %75 = mul i32 %72, %74
  %76 = ashr i32 %75, 31
  %77 = add i32 %75, 8192
  %78 = add i32 %77, %76
  %79 = ashr i32 %78, 14
  %80 = icmp slt i32 %79, 16383
  %81 = select i1 %80, i32 %79, i32 16383
  %82 = icmp sgt i32 %81, -16383
  %83 = select i1 %82, i32 %81, i32 -16383
  %84 = trunc i32 %83 to i16
  %85 = bitcast %"struct.libgav1::MotionVector"* %71 to i16*
  store i16 %84, i16* %85, align 2
  %86 = load i16, i16* %21, align 2
  %87 = sext i16 %86 to i32
  %88 = mul i32 %72, %87
  %89 = ashr i32 %88, 31
  %90 = add i32 %88, 8192
  %91 = add i32 %90, %89
  %92 = ashr i32 %91, 14
  %93 = icmp slt i32 %92, 16383
  %94 = select i1 %93, i32 %92, i32 16383
  %95 = icmp sgt i32 %94, -16383
  %96 = select i1 %95, i32 %94, i32 -16383
  %97 = trunc i32 %96 to i16
  %98 = add nsw i16 %84, 3
  %99 = lshr i16 %84, 15
  %100 = add nsw i16 %98, %99
  %101 = and i16 %100, -8
  store i16 %101, i16* %85, align 2
  %102 = getelementptr inbounds i16, i16* %85, i64 1
  %103 = add nsw i16 %97, 3
  %104 = lshr i16 %97, 15
  %105 = add nsw i16 %103, %104
  %106 = and i16 %105, -8
  store i16 %106, i16* %102, align 2
  br label %107

107:                                              ; preds = %65, %63
  %108 = add nuw nsw i64 %13, 1
  %109 = icmp slt i64 %108, %9
  br i1 %109, label %12, label %64
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_135MvProjectionCompoundHighPrecision_CEPKNS_12MotionVectorEPKaPKiiPNS_20CompoundMotionVectorE(%"struct.libgav1::MotionVector"* nocapture readonly, i8* nocapture readonly, i32* nocapture readonly, i32, %"union.libgav1::CompoundMotionVector"* nocapture) #0 {
  %6 = load i32, i32* %2, align 4
  %7 = getelementptr inbounds i32, i32* %2, i64 1
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %3 to i64
  %10 = icmp eq i32 %6, 0
  %11 = icmp eq i32 %8, 0
  br label %12

12:                                               ; preds = %93, %5
  %13 = phi i64 [ %94, %93 ], [ 0, %5 ]
  %14 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %4, i64 %13
  %15 = getelementptr inbounds %"union.libgav1::CompoundMotionVector", %"union.libgav1::CompoundMotionVector"* %14, i64 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %0, i64 %13
  %17 = getelementptr inbounds i8, i8* %1, i64 %13
  %18 = bitcast %"union.libgav1::CompoundMotionVector"* %14 to [2 x %"struct.libgav1::MotionVector"]*
  %19 = bitcast %"struct.libgav1::MotionVector"* %16 to [2 x i16]*
  %20 = bitcast %"struct.libgav1::MotionVector"* %16 to i16*
  %21 = getelementptr inbounds [2 x i16], [2 x i16]* %19, i64 0, i64 1
  br i1 %10, label %56, label %22

22:                                               ; preds = %12
  %23 = load i8, i8* %17, align 1
  %24 = sext i8 %23 to i64
  %25 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %24
  %26 = load i16, i16* %25, align 2
  %27 = sext i16 %26 to i32
  %28 = mul i32 %6, %27
  %29 = bitcast %"union.libgav1::CompoundMotionVector"* %14 to [2 x i16]*
  %30 = load i16, i16* %20, align 2
  %31 = sext i16 %30 to i32
  %32 = mul i32 %28, %31
  %33 = ashr i32 %32, 31
  %34 = add i32 %32, 8192
  %35 = add i32 %34, %33
  %36 = ashr i32 %35, 14
  %37 = icmp slt i32 %36, 16383
  %38 = select i1 %37, i32 %36, i32 16383
  %39 = icmp sgt i32 %38, -16383
  %40 = select i1 %39, i32 %38, i32 -16383
  %41 = trunc i32 %40 to i16
  %42 = bitcast %"union.libgav1::CompoundMotionVector"* %14 to i16*
  store i16 %41, i16* %42, align 2
  %43 = load i16, i16* %21, align 2
  %44 = sext i16 %43 to i32
  %45 = mul i32 %28, %44
  %46 = ashr i32 %45, 31
  %47 = add i32 %45, 8192
  %48 = add i32 %47, %46
  %49 = ashr i32 %48, 14
  %50 = icmp slt i32 %49, 16383
  %51 = select i1 %50, i32 %49, i32 16383
  %52 = icmp sgt i32 %51, -16383
  %53 = select i1 %52, i32 %51, i32 -16383
  %54 = trunc i32 %53 to i16
  %55 = getelementptr inbounds [2 x i16], [2 x i16]* %29, i64 0, i64 1
  store i16 %54, i16* %55, align 2
  br label %56

56:                                               ; preds = %12, %22
  br i1 %11, label %93, label %58

57:                                               ; preds = %93
  ret void

58:                                               ; preds = %56
  %59 = load i8, i8* %17, align 1
  %60 = sext i8 %59 to i64
  %61 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %60
  %62 = load i16, i16* %61, align 2
  %63 = sext i16 %62 to i32
  %64 = getelementptr inbounds [2 x %"struct.libgav1::MotionVector"], [2 x %"struct.libgav1::MotionVector"]* %18, i64 0, i64 1
  %65 = mul i32 %8, %63
  %66 = bitcast %"struct.libgav1::MotionVector"* %64 to [2 x i16]*
  %67 = load i16, i16* %20, align 2
  %68 = sext i16 %67 to i32
  %69 = mul i32 %65, %68
  %70 = ashr i32 %69, 31
  %71 = add i32 %69, 8192
  %72 = add i32 %71, %70
  %73 = ashr i32 %72, 14
  %74 = icmp slt i32 %73, 16383
  %75 = select i1 %74, i32 %73, i32 16383
  %76 = icmp sgt i32 %75, -16383
  %77 = select i1 %76, i32 %75, i32 -16383
  %78 = trunc i32 %77 to i16
  %79 = bitcast %"struct.libgav1::MotionVector"* %64 to i16*
  store i16 %78, i16* %79, align 2
  %80 = load i16, i16* %21, align 2
  %81 = sext i16 %80 to i32
  %82 = mul i32 %65, %81
  %83 = ashr i32 %82, 31
  %84 = add i32 %82, 8192
  %85 = add i32 %84, %83
  %86 = ashr i32 %85, 14
  %87 = icmp slt i32 %86, 16383
  %88 = select i1 %87, i32 %86, i32 16383
  %89 = icmp sgt i32 %88, -16383
  %90 = select i1 %89, i32 %88, i32 -16383
  %91 = trunc i32 %90 to i16
  %92 = getelementptr inbounds [2 x i16], [2 x i16]* %66, i64 0, i64 1
  store i16 %91, i16* %92, align 2
  br label %93

93:                                               ; preds = %58, %56
  %94 = add nuw nsw i64 %13, 1
  %95 = icmp slt i64 %94, %9
  br i1 %95, label %12, label %57
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_132MvProjectionSingleLowPrecision_CEPKNS_12MotionVectorEPKaiiPS2_(%"struct.libgav1::MotionVector"* nocapture readonly, i8* nocapture readonly, i32, i32, %"struct.libgav1::MotionVector"*) #2 {
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %7, %5
  %8 = phi i64 [ %53, %7 ], [ 0, %5 ]
  %9 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %0, i64 %8
  %10 = getelementptr inbounds i8, i8* %1, i64 %8
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i64
  %13 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %12
  %14 = load i16, i16* %13, align 2
  %15 = sext i16 %14 to i32
  %16 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %4, i64 %8
  %17 = bitcast %"struct.libgav1::MotionVector"* %9 to [2 x i16]*
  %18 = mul i32 %15, %2
  %19 = bitcast %"struct.libgav1::MotionVector"* %9 to i16*
  %20 = load i16, i16* %19, align 2
  %21 = sext i16 %20 to i32
  %22 = mul i32 %18, %21
  %23 = ashr i32 %22, 31
  %24 = add i32 %22, 8192
  %25 = add i32 %24, %23
  %26 = ashr i32 %25, 14
  %27 = icmp slt i32 %26, 16383
  %28 = select i1 %27, i32 %26, i32 16383
  %29 = icmp sgt i32 %28, -16383
  %30 = select i1 %29, i32 %28, i32 -16383
  %31 = trunc i32 %30 to i16
  %32 = bitcast %"struct.libgav1::MotionVector"* %16 to i16*
  store i16 %31, i16* %32, align 2
  %33 = getelementptr inbounds [2 x i16], [2 x i16]* %17, i64 0, i64 1
  %34 = load i16, i16* %33, align 2
  %35 = sext i16 %34 to i32
  %36 = mul i32 %18, %35
  %37 = ashr i32 %36, 31
  %38 = add i32 %36, 8192
  %39 = add i32 %38, %37
  %40 = ashr i32 %39, 14
  %41 = icmp slt i32 %40, 16383
  %42 = select i1 %41, i32 %40, i32 16383
  %43 = icmp sgt i32 %42, -16383
  %44 = select i1 %43, i32 %42, i32 -16383
  %45 = trunc i32 %44 to i16
  %46 = ashr i16 %31, 15
  %47 = sub nsw i16 %31, %46
  %48 = and i16 %47, -2
  store i16 %48, i16* %32, align 2
  %49 = getelementptr inbounds i16, i16* %32, i64 1
  %50 = ashr i16 %45, 15
  %51 = sub nsw i16 %45, %50
  %52 = and i16 %51, -2
  store i16 %52, i16* %49, align 2
  %53 = add nuw nsw i64 %8, 1
  %54 = icmp slt i64 %53, %6
  br i1 %54, label %7, label %55

55:                                               ; preds = %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_132MvProjectionSingleForceInteger_CEPKNS_12MotionVectorEPKaiiPS2_(%"struct.libgav1::MotionVector"* nocapture readonly, i8* nocapture readonly, i32, i32, %"struct.libgav1::MotionVector"*) #2 {
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %7, %5
  %8 = phi i64 [ %55, %7 ], [ 0, %5 ]
  %9 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %0, i64 %8
  %10 = getelementptr inbounds i8, i8* %1, i64 %8
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i64
  %13 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %12
  %14 = load i16, i16* %13, align 2
  %15 = sext i16 %14 to i32
  %16 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %4, i64 %8
  %17 = bitcast %"struct.libgav1::MotionVector"* %9 to [2 x i16]*
  %18 = mul i32 %15, %2
  %19 = bitcast %"struct.libgav1::MotionVector"* %9 to i16*
  %20 = load i16, i16* %19, align 2
  %21 = sext i16 %20 to i32
  %22 = mul i32 %18, %21
  %23 = ashr i32 %22, 31
  %24 = add i32 %22, 8192
  %25 = add i32 %24, %23
  %26 = ashr i32 %25, 14
  %27 = icmp slt i32 %26, 16383
  %28 = select i1 %27, i32 %26, i32 16383
  %29 = icmp sgt i32 %28, -16383
  %30 = select i1 %29, i32 %28, i32 -16383
  %31 = trunc i32 %30 to i16
  %32 = bitcast %"struct.libgav1::MotionVector"* %16 to i16*
  store i16 %31, i16* %32, align 2
  %33 = getelementptr inbounds [2 x i16], [2 x i16]* %17, i64 0, i64 1
  %34 = load i16, i16* %33, align 2
  %35 = sext i16 %34 to i32
  %36 = mul i32 %18, %35
  %37 = ashr i32 %36, 31
  %38 = add i32 %36, 8192
  %39 = add i32 %38, %37
  %40 = ashr i32 %39, 14
  %41 = icmp slt i32 %40, 16383
  %42 = select i1 %41, i32 %40, i32 16383
  %43 = icmp sgt i32 %42, -16383
  %44 = select i1 %43, i32 %42, i32 -16383
  %45 = trunc i32 %44 to i16
  %46 = add nsw i16 %31, 3
  %47 = lshr i16 %31, 15
  %48 = add nsw i16 %46, %47
  %49 = and i16 %48, -8
  store i16 %49, i16* %32, align 2
  %50 = getelementptr inbounds i16, i16* %32, i64 1
  %51 = add nsw i16 %45, 3
  %52 = lshr i16 %45, 15
  %53 = add nsw i16 %51, %52
  %54 = and i16 %53, -8
  store i16 %54, i16* %50, align 2
  %55 = add nuw nsw i64 %8, 1
  %56 = icmp slt i64 %55, %6
  br i1 %56, label %7, label %57

57:                                               ; preds = %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12_GLOBAL__N_133MvProjectionSingleHighPrecision_CEPKNS_12MotionVectorEPKaiiPS2_(%"struct.libgav1::MotionVector"* nocapture readonly, i8* nocapture readonly, i32, i32, %"struct.libgav1::MotionVector"* nocapture) #2 {
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %7, %5
  %8 = phi i64 [ %48, %7 ], [ 0, %5 ]
  %9 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %0, i64 %8
  %10 = getelementptr inbounds i8, i8* %1, i64 %8
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i64
  %13 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN7libgav127kProjectionMvDivisionLookupE, i64 0, i64 %12
  %14 = load i16, i16* %13, align 2
  %15 = sext i16 %14 to i32
  %16 = getelementptr inbounds %"struct.libgav1::MotionVector", %"struct.libgav1::MotionVector"* %4, i64 %8
  %17 = bitcast %"struct.libgav1::MotionVector"* %9 to [2 x i16]*
  %18 = mul i32 %15, %2
  %19 = bitcast %"struct.libgav1::MotionVector"* %16 to [2 x i16]*
  %20 = bitcast %"struct.libgav1::MotionVector"* %9 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = sext i16 %21 to i32
  %23 = mul i32 %18, %22
  %24 = ashr i32 %23, 31
  %25 = add i32 %23, 8192
  %26 = add i32 %25, %24
  %27 = ashr i32 %26, 14
  %28 = icmp slt i32 %27, 16383
  %29 = select i1 %28, i32 %27, i32 16383
  %30 = icmp sgt i32 %29, -16383
  %31 = select i1 %30, i32 %29, i32 -16383
  %32 = trunc i32 %31 to i16
  %33 = bitcast %"struct.libgav1::MotionVector"* %16 to i16*
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds [2 x i16], [2 x i16]* %17, i64 0, i64 1
  %35 = load i16, i16* %34, align 2
  %36 = sext i16 %35 to i32
  %37 = mul i32 %18, %36
  %38 = ashr i32 %37, 31
  %39 = add i32 %37, 8192
  %40 = add i32 %39, %38
  %41 = ashr i32 %40, 14
  %42 = icmp slt i32 %41, 16383
  %43 = select i1 %42, i32 %41, i32 16383
  %44 = icmp sgt i32 %43, -16383
  %45 = select i1 %44, i32 %43, i32 -16383
  %46 = trunc i32 %45 to i16
  %47 = getelementptr inbounds [2 x i16], [2 x i16]* %19, i64 0, i64 1
  store i16 %46, i16* %47, align 2
  %48 = add nuw nsw i64 %8, 1
  %49 = icmp slt i64 %48, %6
  br i1 %49, label %7, label %50

50:                                               ; preds = %7
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
